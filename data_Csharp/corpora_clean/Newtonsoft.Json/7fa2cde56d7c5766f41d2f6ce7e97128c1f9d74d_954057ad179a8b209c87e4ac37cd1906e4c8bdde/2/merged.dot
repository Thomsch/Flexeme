digraph  {
m0_38 [label="Entry System.IO.StringReader.StringReader(string)", span="0-0", cluster="System.IO.StringReader.StringReader(string)", file="ConvertUtilsTests.cs"];
m0_50 [label="Entry JProperty.cstr", span="", cluster="JProperty.cstr", file="ConvertUtilsTests.cs"];
m0_19 [label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0", cluster="System.Text.StringBuilder.StringBuilder()", file="ConvertUtilsTests.cs"];
m0_41 [label="Entry System.Console.WriteLine(string, object)", span="0-0", cluster="System.Console.WriteLine(string, object)", file="ConvertUtilsTests.cs"];
m0_27 [label="Entry Newtonsoft.Json.JsonWriter.WriteEnd()", span="489-489", cluster="Newtonsoft.Json.JsonWriter.WriteEnd()", file="ConvertUtilsTests.cs"];
m0_20 [label="Entry System.IO.StringWriter.StringWriter(System.Text.StringBuilder)", span="0-0", cluster="System.IO.StringWriter.StringWriter(System.Text.StringBuilder)", file="ConvertUtilsTests.cs"];
m0_39 [label="Entry Newtonsoft.Json.JsonTextReader.Read()", span="400-400", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="ConvertUtilsTests.cs"];
m0_53 [label="Entry Newtonsoft.Json.Linq.JTokenReader.JTokenReader(Newtonsoft.Json.Linq.JToken)", span="49-49", cluster="Newtonsoft.Json.Linq.JTokenReader.JTokenReader(Newtonsoft.Json.Linq.JToken)", file="ConvertUtilsTests.cs"];
m0_25 [label="Entry Newtonsoft.Json.JsonWriter.WriteStartArray()", span="437-437", cluster="Newtonsoft.Json.JsonWriter.WriteStartArray()", file="ConvertUtilsTests.cs"];
m0_29 [label="Entry Newtonsoft.Json.Tests.Documentation.ReadingAndWritingJsonTests.ReadingJsonText()", span="94-94", cluster="Newtonsoft.Json.Tests.Documentation.ReadingAndWritingJsonTests.ReadingJsonText()", file="ConvertUtilsTests.cs"];
m0_30 [label="string json = @''{\r\n               'CPU': 'Intel',\r\n               'PSU': '500W',\r\n               'Drives': [\r\n                 'DVD read/writer'\r\n                 /*(broken)*/,\r\n                 '500 gigabyte hard drive',\r\n                 '200 gigabype hard drive'\r\n               ]\r\n            }''", span="97-106", cluster="Newtonsoft.Json.Tests.Documentation.ReadingAndWritingJsonTests.ReadingJsonText()", color=red, community=0, file="ConvertUtilsTests.cs"];
m0_31 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="108-108", cluster="Newtonsoft.Json.Tests.Documentation.ReadingAndWritingJsonTests.ReadingJsonText()", color=red, community=0, file="ConvertUtilsTests.cs"];
m0_32 [label="reader.Read()", span="109-109", cluster="Newtonsoft.Json.Tests.Documentation.ReadingAndWritingJsonTests.ReadingJsonText()", color=red, community=0, file="ConvertUtilsTests.cs"];
m0_33 [label="reader.Value != null", span="111-111", cluster="Newtonsoft.Json.Tests.Documentation.ReadingAndWritingJsonTests.ReadingJsonText()", color=red, community=0, file="ConvertUtilsTests.cs"];
m0_34 [label="Console.WriteLine(''Token: {0}, Value: {1}'', reader.TokenType, reader.Value)", span="113-113", cluster="Newtonsoft.Json.Tests.Documentation.ReadingAndWritingJsonTests.ReadingJsonText()", color=red, community=0, file="ConvertUtilsTests.cs"];
m0_35 [label="Console.WriteLine(''Token: {0}'', reader.TokenType)", span="117-117", cluster="Newtonsoft.Json.Tests.Documentation.ReadingAndWritingJsonTests.ReadingJsonText()", color=red, community=0, file="ConvertUtilsTests.cs"];
m0_36 [label="Exit Newtonsoft.Json.Tests.Documentation.ReadingAndWritingJsonTests.ReadingJsonText()", span="94-94", cluster="Newtonsoft.Json.Tests.Documentation.ReadingAndWritingJsonTests.ReadingJsonText()", file="ConvertUtilsTests.cs"];
m0_52 [label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="557-557", cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="ConvertUtilsTests.cs"];
m0_40 [label="Entry System.Console.WriteLine(string, object, object)", span="0-0", cluster="System.Console.WriteLine(string, object, object)", file="ConvertUtilsTests.cs"];
m0_26 [label="Entry Newtonsoft.Json.JsonWriter.WriteComment(string)", span="1453-1453", cluster="Newtonsoft.Json.JsonWriter.WriteComment(string)", file="ConvertUtilsTests.cs"];
m0_55 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="ConvertUtilsTests.cs"];
m0_24 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="948-948", cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="ConvertUtilsTests.cs"];
m0_28 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="429-429", cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="ConvertUtilsTests.cs"];
m0_56 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="ConvertUtilsTests.cs"];
m0_23 [label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="471-471", cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", file="ConvertUtilsTests.cs"];
m0_51 [label="Entry System.DateTime.DateTime(int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int)", file="ConvertUtilsTests.cs"];
m0_49 [label="Entry Newtonsoft.Json.Linq.JObject.JObject(params object[])", span="101-101", cluster="Newtonsoft.Json.Linq.JObject.JObject(params object[])", file="ConvertUtilsTests.cs"];
m0_0 [label="Entry Newtonsoft.Json.Tests.Documentation.ReadingAndWritingJsonTests.ReadingAndWritingJsonText()", span="55-55", cluster="Newtonsoft.Json.Tests.Documentation.ReadingAndWritingJsonTests.ReadingAndWritingJsonText()", file="ConvertUtilsTests.cs"];
m0_1 [label="StringBuilder sb = new StringBuilder()", span="58-58", cluster="Newtonsoft.Json.Tests.Documentation.ReadingAndWritingJsonTests.ReadingAndWritingJsonText()", color=red, community=0, file="ConvertUtilsTests.cs"];
m0_2 [label="StringWriter sw = new StringWriter(sb)", span="59-59", cluster="Newtonsoft.Json.Tests.Documentation.ReadingAndWritingJsonTests.ReadingAndWritingJsonText()", color=red, community=0, file="ConvertUtilsTests.cs"];
m0_3 [label="JsonWriter writer = new JsonTextWriter(sw)", span="61-61", cluster="Newtonsoft.Json.Tests.Documentation.ReadingAndWritingJsonTests.ReadingAndWritingJsonText()", color=red, community=0, file="ConvertUtilsTests.cs"];
m0_4 [label="writer.Formatting = Formatting.Indented", span="63-63", cluster="Newtonsoft.Json.Tests.Documentation.ReadingAndWritingJsonTests.ReadingAndWritingJsonText()", color=red, community=0, file="ConvertUtilsTests.cs"];
m0_5 [label="writer.WriteStartObject()", span="65-65", cluster="Newtonsoft.Json.Tests.Documentation.ReadingAndWritingJsonTests.ReadingAndWritingJsonText()", color=red, community=0, file="ConvertUtilsTests.cs"];
m0_6 [label="writer.WritePropertyName(''CPU'')", span="66-66", cluster="Newtonsoft.Json.Tests.Documentation.ReadingAndWritingJsonTests.ReadingAndWritingJsonText()", color=red, community=0, file="ConvertUtilsTests.cs"];
m0_7 [label="writer.WriteValue(''Intel'')", span="67-67", cluster="Newtonsoft.Json.Tests.Documentation.ReadingAndWritingJsonTests.ReadingAndWritingJsonText()", color=red, community=0, file="ConvertUtilsTests.cs"];
m0_8 [label="writer.WritePropertyName(''PSU'')", span="68-68", cluster="Newtonsoft.Json.Tests.Documentation.ReadingAndWritingJsonTests.ReadingAndWritingJsonText()", color=red, community=0, file="ConvertUtilsTests.cs"];
m0_9 [label="writer.WriteValue(''500W'')", span="69-69", cluster="Newtonsoft.Json.Tests.Documentation.ReadingAndWritingJsonTests.ReadingAndWritingJsonText()", color=red, community=0, file="ConvertUtilsTests.cs"];
m0_10 [label="writer.WritePropertyName(''Drives'')", span="70-70", cluster="Newtonsoft.Json.Tests.Documentation.ReadingAndWritingJsonTests.ReadingAndWritingJsonText()", color=red, community=0, file="ConvertUtilsTests.cs"];
m0_11 [label="writer.WriteStartArray()", span="71-71", cluster="Newtonsoft.Json.Tests.Documentation.ReadingAndWritingJsonTests.ReadingAndWritingJsonText()", color=red, community=0, file="ConvertUtilsTests.cs"];
m0_12 [label="writer.WriteValue(''DVD read/writer'')", span="72-72", cluster="Newtonsoft.Json.Tests.Documentation.ReadingAndWritingJsonTests.ReadingAndWritingJsonText()", color=red, community=0, file="ConvertUtilsTests.cs"];
m0_13 [label="writer.WriteComment(''(broken)'')", span="73-73", cluster="Newtonsoft.Json.Tests.Documentation.ReadingAndWritingJsonTests.ReadingAndWritingJsonText()", color=red, community=0, file="ConvertUtilsTests.cs"];
m0_14 [label="writer.WriteValue(''500 gigabyte hard drive'')", span="74-74", cluster="Newtonsoft.Json.Tests.Documentation.ReadingAndWritingJsonTests.ReadingAndWritingJsonText()", color=red, community=0, file="ConvertUtilsTests.cs"];
m0_15 [label="writer.WriteValue(''200 gigabype hard drive'')", span="75-75", cluster="Newtonsoft.Json.Tests.Documentation.ReadingAndWritingJsonTests.ReadingAndWritingJsonText()", color=red, community=0, file="ConvertUtilsTests.cs"];
m0_16 [label="writer.WriteEnd()", span="76-76", cluster="Newtonsoft.Json.Tests.Documentation.ReadingAndWritingJsonTests.ReadingAndWritingJsonText()", color=red, community=0, file="ConvertUtilsTests.cs"];
m0_17 [label="writer.WriteEndObject()", span="77-77", cluster="Newtonsoft.Json.Tests.Documentation.ReadingAndWritingJsonTests.ReadingAndWritingJsonText()", color=red, community=0, file="ConvertUtilsTests.cs"];
m0_18 [label="Exit Newtonsoft.Json.Tests.Documentation.ReadingAndWritingJsonTests.ReadingAndWritingJsonText()", span="55-55", cluster="Newtonsoft.Json.Tests.Documentation.ReadingAndWritingJsonTests.ReadingAndWritingJsonText()", file="ConvertUtilsTests.cs"];
m0_42 [label="Entry Newtonsoft.Json.Tests.Documentation.ReadingAndWritingJsonTests.ReadingAndWritingJsonLinq()", span="138-138", cluster="Newtonsoft.Json.Tests.Documentation.ReadingAndWritingJsonTests.ReadingAndWritingJsonLinq()", file="ConvertUtilsTests.cs"];
m0_43 [label="JObject o = new JObject(\r\n                new JProperty(''Name'', ''John Smith''),\r\n                new JProperty(''BirthDate'', new DateTime(1983, 3, 20))\r\n                )", span="141-144", cluster="Newtonsoft.Json.Tests.Documentation.ReadingAndWritingJsonTests.ReadingAndWritingJsonLinq()", color=red, community=0, file="ConvertUtilsTests.cs"];
m0_44 [label="JsonSerializer serializer = new JsonSerializer()", span="146-146", cluster="Newtonsoft.Json.Tests.Documentation.ReadingAndWritingJsonTests.ReadingAndWritingJsonLinq()", color=red, community=0, file="ConvertUtilsTests.cs"];
m0_45 [label="Person p = (Person)serializer.Deserialize(new JTokenReader(o), typeof(Person))", span="147-147", cluster="Newtonsoft.Json.Tests.Documentation.ReadingAndWritingJsonTests.ReadingAndWritingJsonLinq()", color=red, community=0, file="ConvertUtilsTests.cs"];
m0_46 [label="Console.WriteLine(p.Name)", span="149-149", cluster="Newtonsoft.Json.Tests.Documentation.ReadingAndWritingJsonTests.ReadingAndWritingJsonLinq()", color=red, community=0, file="ConvertUtilsTests.cs"];
m0_47 [label="Assert.AreEqual(''John Smith'', p.Name)", span="153-153", cluster="Newtonsoft.Json.Tests.Documentation.ReadingAndWritingJsonTests.ReadingAndWritingJsonLinq()", file="ConvertUtilsTests.cs"];
m0_48 [label="Exit Newtonsoft.Json.Tests.Documentation.ReadingAndWritingJsonTests.ReadingAndWritingJsonLinq()", span="138-138", cluster="Newtonsoft.Json.Tests.Documentation.ReadingAndWritingJsonTests.ReadingAndWritingJsonLinq()", file="ConvertUtilsTests.cs"];
m0_21 [label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="149-149", cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="ConvertUtilsTests.cs"];
m0_37 [label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="82-82", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="ConvertUtilsTests.cs"];
m0_54 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", span="877-877", cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", file="ConvertUtilsTests.cs"];
m0_22 [label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="421-421", cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="ConvertUtilsTests.cs"];
m1_2106 [label="Entry XmlDocument.cstr", span="", cluster="XmlDocument.cstr", file="DefaultSerializationBinder.cs"];
m1_152 [label="var json = JsonConvert.SerializeObject(input)", span="468-468", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="DefaultSerializationBinder.cs"];
m1_1212 [label="Entry Newtonsoft.Json.Tests.TestObjects.JaggedArray.JaggedArray()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.JaggedArray.JaggedArray()", file="DefaultSerializationBinder.cs"];
m1_3568 [label="Entry Newtonsoft.Json.Tests.TestObjects.ParticipantEntity.ParticipantEntity()", span="35-35", cluster="Newtonsoft.Json.Tests.TestObjects.ParticipantEntity.ParticipantEntity()", file="DefaultSerializationBinder.cs"];
m1_1864 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", span="4140-4140", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", file="DefaultSerializationBinder.cs"];
m1_1865 [label="return ((IDictionary<string, T>)_innerDictionary).Remove(item);", span="4142-4142", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", file="DefaultSerializationBinder.cs"];
m1_1866 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", span="4140-4140", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", file="DefaultSerializationBinder.cs"];
m1_406 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", span="863-863", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", file="DefaultSerializationBinder.cs"];
m1_407 [label="_stringValue = stringValue", span="865-865", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", file="DefaultSerializationBinder.cs"];
m1_408 [label="_intValue = intValue", span="866-866", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", file="DefaultSerializationBinder.cs"];
m1_409 [label="_person1 = p1", span="867-867", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", file="DefaultSerializationBinder.cs"];
m1_410 [label="_person2 = p2", span="868-868", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", file="DefaultSerializationBinder.cs"];
m1_411 [label="_person3 = p3", span="869-869", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", file="DefaultSerializationBinder.cs"];
m1_412 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", span="863-863", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", file="DefaultSerializationBinder.cs"];
m1_480 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", span="994-994", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="DefaultSerializationBinder.cs"];
m1_486 [label="Assert.AreEqual(null, v.Value)", span="1007-1007", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="DefaultSerializationBinder.cs"];
m1_487 [label="Assert.AreEqual(JTokenType.String, v.Type)", span="1008-1008", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="DefaultSerializationBinder.cs"];
m1_481 [label="string s = null", span="996-996", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="DefaultSerializationBinder.cs"];
m1_482 [label="var v = new JValue(s)", span="997-997", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="DefaultSerializationBinder.cs"];
m1_485 [label="string output = o.ToString()", span="1005-1005", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="DefaultSerializationBinder.cs"];
m1_488 [label="StringAssert.AreEqual(@''{\r\n  ''''title'''': null\r\n}'', output)", span="1010-1012", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="DefaultSerializationBinder.cs"];
m1_483 [label="var o = JObject.FromObject(new { title = v })", span="998-998", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="DefaultSerializationBinder.cs"];
m1_484 [label="JObject oo = new JObject\r\n            {\r\n                { ''title'', v }\r\n            }", span="1000-1003", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="DefaultSerializationBinder.cs"];
m1_489 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", span="994-994", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="DefaultSerializationBinder.cs"];
m1_1822 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Human.Human()", span="3995-3995", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Human.Human()", file="DefaultSerializationBinder.cs"];
m1_1375 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", span="2907-2907", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="DefaultSerializationBinder.cs"];
m1_1376 [label="_name = name", span="2909-2909", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="DefaultSerializationBinder.cs"];
m1_1377 [label="Age = age", span="2910-2910", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="DefaultSerializationBinder.cs"];
m1_1378 [label="Rank = rank", span="2911-2911", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="DefaultSerializationBinder.cs"];
m1_1379 [label="Title = title", span="2912-2912", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="DefaultSerializationBinder.cs"];
m1_1380 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", span="2907-2907", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="DefaultSerializationBinder.cs"];
m1_513 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Bar1.Bar1()", span="1024-1024", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Bar1.Bar1()", file="DefaultSerializationBinder.cs"];
m1_878 [label="Entry Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", span="34-34", cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", file="DefaultSerializationBinder.cs"];
m1_3058 [label="Entry Newtonsoft.Json.JsonTextReader.Read()", span="299-299", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="DefaultSerializationBinder.cs"];
m1_2107 [label="Entry Unk.LoadXml", span="", cluster="Unk.LoadXml", file="DefaultSerializationBinder.cs"];
m1_566 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(System.IO.TextReader, System.Type)", span="662-662", cluster="Newtonsoft.Json.JsonSerializer.Deserialize(System.IO.TextReader, System.Type)", file="DefaultSerializationBinder.cs"];
m1_274 [label="Entry System.Globalization.CultureInfo.ToString()", span="0-0", cluster="System.Globalization.CultureInfo.ToString()", file="DefaultSerializationBinder.cs"];
m1_3558 [label="Entry Newtonsoft.Json.JsonConverterCollection.JsonConverterCollection()", span="35-35", cluster="Newtonsoft.Json.JsonConverterCollection.JsonConverterCollection()", file="DefaultSerializationBinder.cs"];
m1_558 [label="Entry Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", span="473-473", cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="DefaultSerializationBinder.cs"];
m1_1951 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, System.DateTime)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, System.DateTime)", file="DefaultSerializationBinder.cs"];
m1_521 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", span="1077-1077", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="DefaultSerializationBinder.cs"];
m1_525 [label="Assert.AreEqual(expectedJson, json)", span="1082-1082", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="DefaultSerializationBinder.cs"];
m1_523 [label="var json = JsonConvert.SerializeObject(original)", span="1080-1080", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="DefaultSerializationBinder.cs"];
m1_524 [label="var expectedJson = @''{''''foo'''':{''''bar'''':''''value''''},''''foo2'''':{''''bar'''':''''value2''''}}''", span="1081-1081", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="DefaultSerializationBinder.cs"];
m1_522 [label="var original = new Foo1<Bar1> { foo = new Bar1 { bar = ''value'' }, foo2 = new Bar1 { bar = ''value2'' } }", span="1079-1079", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="DefaultSerializationBinder.cs"];
m1_526 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", span="1077-1077", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="DefaultSerializationBinder.cs"];
m1_1017 [label="Entry Newtonsoft.Json.Tests.TestObjects.ConverterPrecedenceClass.ConverterPrecedenceClass(string)", span="32-32", cluster="Newtonsoft.Json.Tests.TestObjects.ConverterPrecedenceClass.ConverterPrecedenceClass(string)", file="DefaultSerializationBinder.cs"];
m1_1462 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", span="3141-3141", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="DefaultSerializationBinder.cs"];
m1_1464 [label="RoleTransfer r = JsonConvert.DeserializeObject<RoleTransfer>(json)", span="3145-3145", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="DefaultSerializationBinder.cs"];
m1_1465 [label="Assert.AreEqual(RoleTransferOperation.Second, r.Operation)", span="3147-3147", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="DefaultSerializationBinder.cs"];
m1_1466 [label="Assert.AreEqual(''Admin'', r.RoleName)", span="3148-3148", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="DefaultSerializationBinder.cs"];
m1_1467 [label="Assert.AreEqual(RoleTransferDirection.First, r.Direction)", span="3149-3149", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="DefaultSerializationBinder.cs"];
m1_1463 [label="string json = @''{''''Operation'''':''''1'''',''''RoleName'''':''''Admin'''',''''Direction'''':''''0''''}''", span="3143-3143", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="DefaultSerializationBinder.cs"];
m1_1468 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", span="3141-3141", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="DefaultSerializationBinder.cs"];
m1_201 [label="TypeCode.Boolean", span="414-414", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.GetJsonSchemaType(System.Type, Newtonsoft.Json.Required)", file="DefaultSerializationBinder.cs"];
m1_964 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", span="2035-2035", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", file="DefaultSerializationBinder.cs"];
m1_967 [label="Assert.AreEqual(@''''''2001-04-04T00:00:00Z'''''', json)", span="2040-2040", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", file="DefaultSerializationBinder.cs"];
m1_966 [label="string json = JsonConvert.SerializeObject(date)", span="2039-2039", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", file="DefaultSerializationBinder.cs"];
m1_965 [label="var date = new DateTime(2001, 4, 4, 0, 0, 0, DateTimeKind.Utc)", span="2037-2037", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", file="DefaultSerializationBinder.cs"];
m1_968 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", span="2035-2035", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", file="DefaultSerializationBinder.cs"];
m1_647 [label="Entry System.Text.Encoding.GetString(byte[], int, int)", span="0-0", cluster="System.Text.Encoding.GetString(byte[], int, int)", file="DefaultSerializationBinder.cs"];
m1_275 [label="Entry Newtonsoft.Json.Tests.TestObjects.IdReferenceResolver.IdReferenceResolver()", span="31-31", cluster="Newtonsoft.Json.Tests.TestObjects.IdReferenceResolver.IdReferenceResolver()", file="DefaultSerializationBinder.cs"];
m1_682 [label="Entry Newtonsoft.Json.Tests.TestObjects.Product.Product()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.Product.Product()", file="DefaultSerializationBinder.cs"];
m1_2161 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", span="4822-4822", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", file="DefaultSerializationBinder.cs"];
m1_2162 [label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                //Additional text found in JSON string after finishing deserializing object.\r\n                //Test 1\r\n                var reference = new Dictionary<string, object>();\r\n                reference.Add(''$ref'', 1);\r\n                reference.Add(''$id'', 1);\r\n\r\n                var child = new Dictionary<string, object>();\r\n                child.Add(''_id'', 2);\r\n                child.Add(''Name'', ''Isabell'');\r\n                child.Add(''Father'', reference);\r\n\r\n                var json = JsonConvert.SerializeObject(child, Formatting.Indented);\r\n                JsonConvert.DeserializeObject<Dictionary<string, object>>(json);\r\n            }, ''JSON reference $ref property must have a string or null value. Path 'Father.$ref', line 5, position 14.'')", span="4824-4839", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", file="DefaultSerializationBinder.cs"];
m1_2163 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", span="4822-4822", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", file="DefaultSerializationBinder.cs"];
m1_1769 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="3824-3824", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="DefaultSerializationBinder.cs"];
m1_1771 [label="Add(pair.Key, pair.Value)", span="3828-3828", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="DefaultSerializationBinder.cs"];
m1_1770 [label=initial, span="3826-3826", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="DefaultSerializationBinder.cs"];
m1_1772 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="3824-3824", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="DefaultSerializationBinder.cs"];
m1_617 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewProperties.SubWithContractNewProperties()", span="1241-1241", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewProperties.SubWithContractNewProperties()", file="DefaultSerializationBinder.cs"];
m1_441 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", span="905-905", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="DefaultSerializationBinder.cs"];
m1_451 [label="PreserveReferencesCallbackTestObject obj2 = JsonConvert.DeserializeObject<PreserveReferencesCallbackTestObject>(json)", span="956-956", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="DefaultSerializationBinder.cs"];
m1_452 [label="Assert.AreEqual(obj._stringValue, obj2._stringValue)", span="958-958", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="DefaultSerializationBinder.cs"];
m1_453 [label="Assert.AreEqual(obj._intValue, obj2._intValue)", span="959-959", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="DefaultSerializationBinder.cs"];
m1_454 [label="Assert.AreEqual(obj._person1.Name, obj2._person1.Name)", span="960-960", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="DefaultSerializationBinder.cs"];
m1_455 [label="Assert.AreEqual(obj._person2.Name, obj2._person2.Name)", span="961-961", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="DefaultSerializationBinder.cs"];
m1_456 [label="Assert.AreEqual(obj._person3.Name, obj2._person3.Name)", span="962-962", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="DefaultSerializationBinder.cs"];
m1_457 [label="Assert.AreEqual(obj2._person1, obj2._person3)", span="963-963", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="DefaultSerializationBinder.cs"];
m1_458 [label="Assert.AreEqual(obj2._person1.Spouse, obj2._person2)", span="964-964", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="DefaultSerializationBinder.cs"];
m1_459 [label="Assert.AreEqual(obj2._person2.Spouse, obj2._person1)", span="965-965", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="DefaultSerializationBinder.cs"];
m1_460 [label="Assert.AreEqual(obj2._parent, obj2)", span="966-966", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="DefaultSerializationBinder.cs"];
m1_449 [label="string json = JsonConvert.SerializeObject(obj, settings)", span="928-928", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="DefaultSerializationBinder.cs"];
m1_450 [label="StringAssert.AreEqual(json, @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''stringValue'''': ''''string!'''',\r\n  ''''intValue'''': 42,\r\n  ''''person1'''': {\r\n    ''''$id'''': ''''2'''',\r\n    ''''Name'''': ''''John Smith'''',\r\n    ''''Spouse'''': {\r\n      ''''$id'''': ''''3'''',\r\n      ''''Name'''': ''''Mary Sue'''',\r\n      ''''Spouse'''': {\r\n        ''''$ref'''': ''''2''''\r\n      }\r\n    }\r\n  },\r\n  ''''person2'''': {\r\n    ''''$ref'''': ''''3''''\r\n  },\r\n  ''''person3'''': {\r\n    ''''$ref'''': ''''2''''\r\n  },\r\n  ''''parent'''': {\r\n    ''''$ref'''': ''''1''''\r\n  }\r\n}'')", span="930-954", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="DefaultSerializationBinder.cs"];
m1_446 [label="var obj = new PreserveReferencesCallbackTestObject(''string!'', 42, p1, p2, p1)", span="919-919", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="DefaultSerializationBinder.cs"];
m1_448 [label="var settings = new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.All,\r\n                Formatting = Formatting.Indented\r\n            }", span="922-926", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="DefaultSerializationBinder.cs"];
m1_442 [label="var p1 = new PersonReference\r\n            {\r\n                Name = ''John Smith''\r\n            }", span="907-910", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="DefaultSerializationBinder.cs"];
m1_443 [label="var p2 = new PersonReference\r\n            {\r\n                Name = ''Mary Sue'',\r\n            }", span="911-914", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="DefaultSerializationBinder.cs"];
m1_445 [label="p2.Spouse = p1", span="917-917", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="DefaultSerializationBinder.cs"];
m1_447 [label="obj._parent = obj", span="920-920", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="DefaultSerializationBinder.cs"];
m1_444 [label="p1.Spouse = p2", span="916-916", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="DefaultSerializationBinder.cs"];
m1_461 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", span="905-905", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="DefaultSerializationBinder.cs"];
m1_867 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T)", span="755-755", cluster="Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T)", file="DefaultSerializationBinder.cs"];
m1_1600 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", span="191-191", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", file="DefaultSerializationBinder.cs"];
m1_1056 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", span="2192-2192", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="DefaultSerializationBinder.cs"];
m1_1061 [label="MemberConverterClass m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json)", span="2203-2203", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="DefaultSerializationBinder.cs"];
m1_1062 [label="Assert.AreEqual(testDate, m2.DefaultConverter)", span="2205-2205", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="DefaultSerializationBinder.cs"];
m1_1063 [label="Assert.AreEqual(testDate, m2.MemberConverter)", span="2206-2206", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="DefaultSerializationBinder.cs"];
m1_1060 [label="Assert.AreEqual(@''{''''DefaultConverter'''':''''1970-01-01T00:00:00Z'''',''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="2201-2201", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="DefaultSerializationBinder.cs"];
m1_1059 [label="string json = JsonConvert.SerializeObject(m1, new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.IsoDateFormat,\r\n            })", span="2197-2200", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="DefaultSerializationBinder.cs"];
m1_1057 [label="DateTime testDate = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="2194-2194", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="DefaultSerializationBinder.cs"];
m1_1058 [label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="2195-2195", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="DefaultSerializationBinder.cs"];
m1_1064 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", span="2192-2192", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="DefaultSerializationBinder.cs"];
m1_1504 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", span="3210-3210", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="DefaultSerializationBinder.cs"];
m1_1505 [label="List<decimal?> l = JsonConvert.DeserializeObject<List<decimal?>>(''[ 3.3, null, 1.1 ] '')", span="3212-3212", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="DefaultSerializationBinder.cs"];
m1_1506 [label="Assert.AreEqual(3, l.Count)", span="3213-3213", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="DefaultSerializationBinder.cs"];
m1_1507 [label="Assert.AreEqual(3.3m, l[0])", span="3215-3215", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="DefaultSerializationBinder.cs"];
m1_1508 [label="Assert.AreEqual(null, l[1])", span="3216-3216", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="DefaultSerializationBinder.cs"];
m1_1509 [label="Assert.AreEqual(1.1m, l[2])", span="3217-3217", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="DefaultSerializationBinder.cs"];
m1_1510 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", span="3210-3210", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="DefaultSerializationBinder.cs"];
m1_2791 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", span="6350-6350", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="DefaultSerializationBinder.cs"];
m1_2794 [label="IList<decimal> d2 = JsonConvert.DeserializeObject<IList<decimal>>(json)", span="6356-6356", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="DefaultSerializationBinder.cs"];
m1_2795 [label="Assert.AreEqual(d1.Count, d2.Count)", span="6358-6358", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="DefaultSerializationBinder.cs"];
m1_2796 [label="Assert.AreEqual(d1[0], d2[0])", span="6359-6359", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="DefaultSerializationBinder.cs"];
m1_2793 [label="string json = JsonConvert.SerializeObject(d1)", span="6354-6354", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="DefaultSerializationBinder.cs"];
m1_2792 [label="IList<decimal> d1 = new List<decimal> { 1.1m }", span="6352-6352", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="DefaultSerializationBinder.cs"];
m1_2797 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", span="6350-6350", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="DefaultSerializationBinder.cs"];
m1_1442 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", span="3073-3073", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="DefaultSerializationBinder.cs"];
m1_1445 [label="Assert.AreEqual(@''{''''bar'''':{''''baz'''':13}}'', json)", span="3082-3082", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="DefaultSerializationBinder.cs"];
m1_1444 [label="string json = JsonConvert.SerializeObject(value)", span="3080-3080", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="DefaultSerializationBinder.cs"];
m1_1443 [label="var value = new\r\n            {\r\n                bar = new JObject(new JProperty(''baz'', 13))\r\n            }", span="3075-3078", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="DefaultSerializationBinder.cs"];
m1_1446 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", span="3073-3073", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="DefaultSerializationBinder.cs"];
m1_2312 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", span="5149-5149", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", file="DefaultSerializationBinder.cs"];
m1_2313 [label="NullableDateTimeTestClass d = JsonConvert.DeserializeObject<NullableDateTimeTestClass>(''{\''DateTimeOffsetField\'':\''\\/Date(946663200000+0600)\\/\''}'')", span="5151-5151", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", file="DefaultSerializationBinder.cs"];
m1_2314 [label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6)), d.DateTimeOffsetField)", span="5152-5152", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", file="DefaultSerializationBinder.cs"];
m1_2315 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", span="5149-5149", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", file="DefaultSerializationBinder.cs"];
m1_1213 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", span="2492-2492", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="DefaultSerializationBinder.cs"];
m1_1215 [label="JaggedArray aa = JsonConvert.DeserializeObject<JaggedArray>(json)", span="2496-2496", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="DefaultSerializationBinder.cs"];
m1_1223 [label="Assert.AreEqual(json, after)", span="2507-2507", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="DefaultSerializationBinder.cs"];
m1_1216 [label="Assert.AreEqual(''Before!'', aa.Before)", span="2498-2498", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="DefaultSerializationBinder.cs"];
m1_1217 [label="Assert.AreEqual(''After!'', aa.After)", span="2499-2499", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="DefaultSerializationBinder.cs"];
m1_1218 [label="Assert.AreEqual(4, aa.Coordinates.Length)", span="2500-2500", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="DefaultSerializationBinder.cs"];
m1_1219 [label="Assert.AreEqual(2, aa.Coordinates[0].Length)", span="2501-2501", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="DefaultSerializationBinder.cs"];
m1_1220 [label="Assert.AreEqual(1, aa.Coordinates[0][0])", span="2502-2502", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="DefaultSerializationBinder.cs"];
m1_1221 [label="Assert.AreEqual(2, aa.Coordinates[1][1])", span="2503-2503", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="DefaultSerializationBinder.cs"];
m1_1214 [label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1,2],[2,1],[2,2]],''''After'''':''''After!''''}''", span="2494-2494", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="DefaultSerializationBinder.cs"];
m1_1222 [label="string after = JsonConvert.SerializeObject(aa)", span="2505-2505", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="DefaultSerializationBinder.cs"];
m1_1224 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", span="2492-2492", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="DefaultSerializationBinder.cs"];
m1_1484 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", span="3182-3182", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", file="DefaultSerializationBinder.cs"];
m1_1486 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<TestObjects.Event>(json); }, @''Unable to find a constructor to use for type Newtonsoft.Json.Tests.TestObjects.Event. A class should either have a default constructor, one constructor with arguments or a constructor marked with the JsonConstructor attribute. Path 'sublocation', line 1, position 15.'')", span="3186-3186", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", file="DefaultSerializationBinder.cs"];
m1_1485 [label="string json = @''{''''sublocation'''':''''AlertEmailSender.Program.Main'''',''''userId'''':0,''''type'''':0,''''summary'''':''''Loading settings variables'''',''''details'''':null,''''stackTrace'''':''''   at System.Environment.GetStackTrace(Exception e, Boolean needFileInfo)\r\n   at System.Environment.get_StackTrace()\r\n   at mr.Logging.Event..ctor(String summary) in C:\\Projects\\MRUtils\\Logging\\Event.vb:line 71\r\n   at AlertEmailSender.Program.Main(String[] args) in C:\\Projects\\AlertEmailSender\\AlertEmailSender\\Program.cs:line 25'''',''''tag'''':null,''''time'''':''''\/Date(1249591032026-0400)\/''''}''", span="3184-3184", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", file="DefaultSerializationBinder.cs"];
m1_1487 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", span="3182-3182", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", file="DefaultSerializationBinder.cs"];
m1_3029 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.MetroColorConverter()", span="6835-6835", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.MetroColorConverter()", file="DefaultSerializationBinder.cs"];
m1_3778 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringTestClass.ErroringTestClass()", span="8656-8656", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringTestClass.ErroringTestClass()", file="DefaultSerializationBinder.cs"];
m1_2907 [label="Entry Newtonsoft.Json.Tests.TestObjects.WithEnums.WithEnums()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.WithEnums.WithEnums()", file="DefaultSerializationBinder.cs"];
m1_176 [label="JsonSchema propertySchema = GenerateInternal(property.PropertyType, property.Required, optional)", span="366-366", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.GenerateObjectSchema(System.Type, Newtonsoft.Json.Serialization.JsonObjectContract)", file="DefaultSerializationBinder.cs"];
m1_1081 [label="Entry System.Convert.ToDateTime(string)", span="0-0", cluster="System.Convert.ToDateTime(string)", file="DefaultSerializationBinder.cs"];
m1_1440 [label="Entry System.Uri.Uri(string)", span="0-0", cluster="System.Uri.Uri(string)", file="DefaultSerializationBinder.cs"];
m1_2386 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.VectorParent.VectorParent()", span="5280-5280", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.VectorParent.VectorParent()", file="DefaultSerializationBinder.cs"];
m1_1952 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, decimal)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, decimal)", file="DefaultSerializationBinder.cs"];
m1_770 [label="Entry Newtonsoft.Json.Linq.JToken.Children()", span="349-349", cluster="Newtonsoft.Json.Linq.JToken.Children()", file="DefaultSerializationBinder.cs"];
m1_2481 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", span="5529-5529", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="DefaultSerializationBinder.cs"];
m1_2483 [label="DeserializeStringConvert p = JsonConvert.DeserializeObject<DeserializeStringConvert>(json)", span="5538-5538", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="DefaultSerializationBinder.cs"];
m1_2484 [label="Assert.AreEqual(40, p.Age)", span="5539-5539", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="DefaultSerializationBinder.cs"];
m1_2485 [label="Assert.AreEqual(44.4, p.Height)", span="5540-5540", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="DefaultSerializationBinder.cs"];
m1_2486 [label="Assert.AreEqual(4m, p.Price)", span="5541-5541", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="DefaultSerializationBinder.cs"];
m1_2482 [label="string json = @''{\r\n  'Name': 'James Hughes',\r\n  'Age': '40',\r\n  'Height': '44.4',\r\n  'Price': '4'\r\n}''", span="5531-5536", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="DefaultSerializationBinder.cs"];
m1_2487 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", span="5529-5529", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="DefaultSerializationBinder.cs"];
m1_2175 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", span="4843-4843", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="DefaultSerializationBinder.cs"];
m1_2186 [label="Dictionary<string, object> result = JsonConvert.DeserializeObject<Dictionary<string, object>>(json)", span="4859-4859", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="DefaultSerializationBinder.cs"];
m1_2187 [label="Assert.AreEqual(3, result.Count)", span="4861-4861", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="DefaultSerializationBinder.cs"];
m1_2188 [label="Assert.AreEqual(1, ((JObject)result[''Father'']).Count)", span="4862-4862", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="DefaultSerializationBinder.cs"];
m1_2189 [label="Assert.AreEqual(''blah!'', (string)((JObject)result[''Father''])[''blah''])", span="4863-4863", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="DefaultSerializationBinder.cs"];
m1_2184 [label="string json = JsonConvert.SerializeObject(child)", span="4855-4855", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="DefaultSerializationBinder.cs"];
m1_2185 [label="Console.WriteLine(json)", span="4857-4857", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="DefaultSerializationBinder.cs"];
m1_2183 [label="child.Add(''Father'', reference)", span="4853-4853", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="DefaultSerializationBinder.cs"];
m1_2180 [label="var child = new Dictionary<string, object>()", span="4850-4850", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="DefaultSerializationBinder.cs"];
m1_2176 [label="var reference = new Dictionary<string, object>()", span="4845-4845", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="DefaultSerializationBinder.cs"];
m1_2182 [label="child.Add(''Name'', ''Isabell'')", span="4852-4852", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="DefaultSerializationBinder.cs"];
m1_2179 [label="reference.Add(''blah'', ''blah!'')", span="4848-4848", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="DefaultSerializationBinder.cs"];
m1_2181 [label="child.Add(''_id'', 2)", span="4851-4851", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="DefaultSerializationBinder.cs"];
m1_2177 [label="reference.Add(''$ref'', null)", span="4846-4846", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="DefaultSerializationBinder.cs"];
m1_2178 [label="reference.Add(''$id'', null)", span="4847-4847", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="DefaultSerializationBinder.cs"];
m1_2190 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", span="4843-4843", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="DefaultSerializationBinder.cs"];
m1_885 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", span="1889-1889", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", file="DefaultSerializationBinder.cs"];
m1_887 [label="Assert.AreEqual(''null'', json)", span="1892-1892", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", file="DefaultSerializationBinder.cs"];
m1_886 [label="string json = JsonConvert.SerializeObject(null)", span="1891-1891", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", file="DefaultSerializationBinder.cs"];
m1_888 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", span="1889-1889", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", file="DefaultSerializationBinder.cs"];
m1_3629 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", span="8320-8320", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", file="DefaultSerializationBinder.cs"];
m1_3631 [label="var s = JsonConvert.SerializeObject(c, Formatting.Indented)", span="8323-8323", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", file="DefaultSerializationBinder.cs"];
m1_3632 [label="StringAssert.AreEqual(@''{\r\n  ''''Id'''': ''''1'''',\r\n  ''''X'''': 2\r\n}'', s)", span="8324-8327", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", file="DefaultSerializationBinder.cs"];
m1_3630 [label="var c = new TestClassConvertable { Id = new ConvertibleId { Value = 1 }, X = 2 }", span="8322-8322", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", file="DefaultSerializationBinder.cs"];
m1_3633 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", span="8320-8320", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", file="DefaultSerializationBinder.cs"];
m1_3014 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", span="6777-6777", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="DefaultSerializationBinder.cs"];
m1_3020 [label="string json = JsonConvert.SerializeObject(product)", span="6785-6785", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="DefaultSerializationBinder.cs"];
m1_3017 [label="product.ExpiryDate = new DateTime(2012, 4, 1)", span="6781-6781", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="DefaultSerializationBinder.cs"];
m1_3015 [label="Product product = new Product()", span="6779-6779", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="DefaultSerializationBinder.cs"];
m1_3019 [label="product.Sizes = new[] { ''Small'', ''Medium'', ''Large'' }", span="6783-6783", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="DefaultSerializationBinder.cs"];
m1_3021 [label="string metroJson = JsonConvert.SerializeObject(product, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new MetroPropertyNameResolver(),\r\n                Converters = { new MetroStringConverter() },\r\n                Formatting = Formatting.Indented\r\n            })", span="6793-6798", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="DefaultSerializationBinder.cs"];
m1_3022 [label="StringAssert.AreEqual(@''{\r\n  '''':::NAME:::'''': '''':::APPLE:::'''',\r\n  '''':::EXPIRYDATE:::'''': ''''2012-04-01T00:00:00'''',\r\n  '''':::PRICE:::'''': 3.99,\r\n  '''':::SIZES:::'''': [\r\n    '''':::SMALL:::'''',\r\n    '''':::MEDIUM:::'''',\r\n    '''':::LARGE:::''''\r\n  ]\r\n}'', metroJson)", span="6799-6808", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="DefaultSerializationBinder.cs"];
m1_3025 [label="StringAssert.AreEqual(@''[\r\n  '''':::GRAY:::'''',\r\n  '''':::GRAY:::'''',\r\n  '''':::GRAY:::'''',\r\n  '''':::GRAY:::'''',\r\n  '''':::BLACK:::'''',\r\n  '''':::GRAY:::''''\r\n]'', json2)", span="6825-6832", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="DefaultSerializationBinder.cs"];
m1_3024 [label="string json2 = JsonConvert.SerializeObject(colors, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new MetroPropertyNameResolver(),\r\n                Converters = { new MetroStringConverter(), new MetroColorConverter() },\r\n                Formatting = Formatting.Indented\r\n            })", span="6818-6823", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="DefaultSerializationBinder.cs"];
m1_3016 [label="product.Name = ''Apple''", span="6780-6780", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="DefaultSerializationBinder.cs"];
m1_3018 [label="product.Price = 3.99M", span="6782-6782", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="DefaultSerializationBinder.cs"];
m1_3023 [label="Color[] colors = new[] { Color.Blue, Color.Red, Color.Yellow, Color.Green, Color.Black, Color.Brown }", span="6816-6816", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="DefaultSerializationBinder.cs"];
m1_3026 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", span="6777-6777", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="DefaultSerializationBinder.cs"];
m1_1204 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", span="2479-2479", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="DefaultSerializationBinder.cs"];
m1_1210 [label="Assert.AreEqual(@''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1,2],[2,1],[2,2]],''''After'''':''''After!''''}'', json)", span="2488-2488", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="DefaultSerializationBinder.cs"];
m1_1209 [label="string json = JsonConvert.SerializeObject(aa)", span="2486-2486", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="DefaultSerializationBinder.cs"];
m1_1205 [label="JaggedArray aa = new JaggedArray()", span="2481-2481", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="DefaultSerializationBinder.cs"];
m1_1208 [label="aa.Coordinates = new[] { new[] { 1, 1 }, new[] { 1, 2 }, new[] { 2, 1 }, new[] { 2, 2 } }", span="2484-2484", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="DefaultSerializationBinder.cs"];
m1_1206 [label="aa.Before = ''Before!''", span="2482-2482", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="DefaultSerializationBinder.cs"];
m1_1207 [label="aa.After = ''After!''", span="2483-2483", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="DefaultSerializationBinder.cs"];
m1_1211 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", span="2479-2479", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="DefaultSerializationBinder.cs"];
m1_3636 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", span="8332-8332", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", file="DefaultSerializationBinder.cs"];
m1_3637 [label="ExceptionAssert.Throws<ArgumentException>(() =>\r\n            {\r\n                string content = @''{''''result'''':{''''time'''':1408188592,''''time'''':1408188593},''''error'''':null,''''id'''':''''1''''}'';\r\n                JsonConvert.DeserializeObject<JObject>(content);\r\n            }, ''Can not add property time to Newtonsoft.Json.Linq.JObject. Property with the same name already exists on object.'')", span="8334-8338", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", file="DefaultSerializationBinder.cs"];
m1_3638 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", span="8332-8332", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", file="DefaultSerializationBinder.cs"];
m1_2215 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", span="4925-4925", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="DefaultSerializationBinder.cs"];
m1_2221 [label="Dictionary<DictionaryKey, string> newDictionary =\r\n                JsonConvert.DeserializeObject<Dictionary<DictionaryKey, string>>(json)", span="4939-4940", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="DefaultSerializationBinder.cs"];
m1_2222 [label="Assert.AreEqual(2, newDictionary.Count)", span="4942-4942", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="DefaultSerializationBinder.cs"];
m1_2219 [label="string json = JsonConvert.SerializeObject(dictionary, Formatting.Indented)", span="4932-4932", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="DefaultSerializationBinder.cs"];
m1_2220 [label="StringAssert.AreEqual(@''{\r\n  ''''First!'''': ''''First'''',\r\n  ''''Second!'''': ''''Second''''\r\n}'', json)", span="4934-4937", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="DefaultSerializationBinder.cs"];
m1_2216 [label="Dictionary<DictionaryKey, string> dictionary = new Dictionary<DictionaryKey, string>()", span="4927-4927", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="DefaultSerializationBinder.cs"];
m1_2218 [label="dictionary.Add(new DictionaryKey() { Value = ''Second!'' }, ''Second'')", span="4930-4930", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="DefaultSerializationBinder.cs"];
m1_2217 [label="dictionary.Add(new DictionaryKey() { Value = ''First!'' }, ''First'')", span="4929-4929", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="DefaultSerializationBinder.cs"];
m1_2223 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", span="4925-4925", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="DefaultSerializationBinder.cs"];
m1_492 [label="Entry Newtonsoft.Json.Linq.JObject.JObject()", span="87-87", cluster="Newtonsoft.Json.Linq.JObject.JObject()", file="DefaultSerializationBinder.cs"];
m1_2712 [label="Entry Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", span="434-434", cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", file="DefaultSerializationBinder.cs"];
m1_1754 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", span="3798-3798", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="DefaultSerializationBinder.cs"];
m1_1756 [label="var dic = JsonConvert.DeserializeObject<DictionaryWithNoDefaultConstructor>(json)", span="3802-3802", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="DefaultSerializationBinder.cs"];
m1_1757 [label="Assert.AreEqual(3, dic.Count)", span="3804-3804", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="DefaultSerializationBinder.cs"];
m1_1758 [label="Assert.AreEqual(''value1'', dic[''key1''])", span="3805-3805", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="DefaultSerializationBinder.cs"];
m1_1759 [label="Assert.AreEqual(''value2'', dic[''key2''])", span="3806-3806", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="DefaultSerializationBinder.cs"];
m1_1760 [label="Assert.AreEqual(''value3'', dic[''key3''])", span="3807-3807", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="DefaultSerializationBinder.cs"];
m1_1755 [label="string json = ''{key1:'value1',key2:'value2',key3:'value3'}''", span="3800-3800", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="DefaultSerializationBinder.cs"];
m1_1761 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", span="3798-3798", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="DefaultSerializationBinder.cs"];
m1_1082 [label="Entry System.DateTime.ToUniversalTime()", span="0-0", cluster="System.DateTime.ToUniversalTime()", file="DefaultSerializationBinder.cs"];
m1_2722 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", span="6200-6200", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="DefaultSerializationBinder.cs"];
m1_2726 [label="Uri output = JsonConvert.DeserializeObject<Uri>(json)", span="6205-6205", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="DefaultSerializationBinder.cs"];
m1_2727 [label="Assert.AreEqual(uri, output)", span="6207-6207", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="DefaultSerializationBinder.cs"];
m1_2725 [label="string json = JsonConvert.SerializeObject(uri)", span="6204-6204", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="DefaultSerializationBinder.cs"];
m1_2724 [label="Uri uri = new Uri(input)", span="6203-6203", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="DefaultSerializationBinder.cs"];
m1_2723 [label="string input = @''http://tes/?a=b\\c&d=e\''", span="6202-6202", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="DefaultSerializationBinder.cs"];
m1_2728 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", span="6200-6200", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="DefaultSerializationBinder.cs"];
m1_121 [label="CurrentSchema.Options = new Dictionary<JToken, string>()", span="300-300", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.GenerateInternal(System.Type, Newtonsoft.Json.Required, bool)", file="DefaultSerializationBinder.cs"];
m1_963 [label="Entry Unk.AreNotEqual", span="", cluster="Unk.AreNotEqual", file="DefaultSerializationBinder.cs"];
m1_2634 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", span="5992-5992", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", file="DefaultSerializationBinder.cs"];
m1_2635 [label="return _readonlyString;", span="5994-5994", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", file="DefaultSerializationBinder.cs"];
m1_2636 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", span="5992-5992", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", file="DefaultSerializationBinder.cs"];
m1_1872 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", span="4150-4150", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", file="DefaultSerializationBinder.cs"];
m1_1873 [label="return _innerDictionary.TryGetValue(key, out value);", span="4152-4152", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", file="DefaultSerializationBinder.cs"];
m1_1874 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", span="4150-4150", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", file="DefaultSerializationBinder.cs"];
m1_1955 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, sbyte)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, sbyte)", file="DefaultSerializationBinder.cs"];
m1_3854 [label="Entry System.Text.Encoding.GetEncoding(string)", span="0-0", cluster="System.Text.Encoding.GetEncoding(string)", file="DefaultSerializationBinder.cs"];
m1_2805 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", span="6376-6376", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="DefaultSerializationBinder.cs"];
m1_2808 [label="IList<byte[]> d2 = JsonConvert.DeserializeObject<IList<byte[]>>(json)", span="6382-6382", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="DefaultSerializationBinder.cs"];
m1_2809 [label="Assert.AreEqual(d1.Count, d2.Count)", span="6384-6384", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="DefaultSerializationBinder.cs"];
m1_2810 [label="Assert.AreEqual(d1[0], d2[0])", span="6385-6385", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="DefaultSerializationBinder.cs"];
m1_2807 [label="string json = JsonConvert.SerializeObject(d1)", span="6380-6380", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="DefaultSerializationBinder.cs"];
m1_2806 [label="IList<byte[]> d1 = new List<byte[]> { null }", span="6378-6378", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="DefaultSerializationBinder.cs"];
m1_2811 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", span="6376-6376", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="DefaultSerializationBinder.cs"];
m1_3739 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", span="8579-8579", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", file="DefaultSerializationBinder.cs"];
m1_3743 [label="JsonConvert.DeserializeObject<ConstantTestClass>(json)", span="8589-8589", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", file="DefaultSerializationBinder.cs"];
m1_3741 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="8583-8583", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", file="DefaultSerializationBinder.cs"];
m1_3742 [label="StringAssert.AreEqual(@''{\r\n  ''''MY_CONSTANT'''': ''''.''''\r\n}'', json)", span="8585-8587", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", file="DefaultSerializationBinder.cs"];
m1_3740 [label="ConstantTestClass c1 = new ConstantTestClass()", span="8581-8581", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", file="DefaultSerializationBinder.cs"];
m1_3744 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", span="8579-8579", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", file="DefaultSerializationBinder.cs"];
m1_3390 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", span="7748-7748", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="DefaultSerializationBinder.cs"];
m1_3394 [label="Tuple<int, int> tuple2 = JsonConvert.DeserializeObject<Tuple<int, int>>(json)", span="7754-7754", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="DefaultSerializationBinder.cs"];
m1_3393 [label="Assert.AreEqual(@''{''''Item1'''':500,''''Item2'''':20}'', json)", span="7752-7752", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="DefaultSerializationBinder.cs"];
m1_3395 [label="Assert.AreEqual(500, tuple2.Item1)", span="7755-7755", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="DefaultSerializationBinder.cs"];
m1_3396 [label="Assert.AreEqual(20, tuple2.Item2)", span="7756-7756", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="DefaultSerializationBinder.cs"];
m1_3392 [label="string json = JsonConvert.SerializeObject(tuple)", span="7751-7751", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="DefaultSerializationBinder.cs"];
m1_3391 [label="Tuple<int, int> tuple = Tuple.Create(500, 20)", span="7750-7750", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="DefaultSerializationBinder.cs"];
m1_3397 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", span="7748-7748", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="DefaultSerializationBinder.cs"];
m1_1727 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", span="3709-3709", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", file="DefaultSerializationBinder.cs"];
m1_1728 [label="_dict1.Add(item.Key, item)", span="3711-3711", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", file="DefaultSerializationBinder.cs"];
m1_1729 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", span="3709-3709", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", file="DefaultSerializationBinder.cs"];
m1_2342 [label="Entry System.Dynamic.ExpandoObject.ExpandoObject()", span="0-0", cluster="System.Dynamic.ExpandoObject.ExpandoObject()", file="DefaultSerializationBinder.cs"];
m1_2450 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", span="5468-5468", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", file="DefaultSerializationBinder.cs"];
m1_2451 [label="NonPublicConstructorWithJsonConstructor c = JsonConvert.DeserializeObject<NonPublicConstructorWithJsonConstructor>(''{}'')", span="5470-5470", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", file="DefaultSerializationBinder.cs"];
m1_2452 [label="Assert.AreEqual(''NonPublic'', c.Constructor)", span="5471-5471", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", file="DefaultSerializationBinder.cs"];
m1_2453 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", span="5468-5468", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", file="DefaultSerializationBinder.cs"];
m1_3349 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", span="7590-7590", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", file="DefaultSerializationBinder.cs"];
m1_3350 [label="IgnoreSerializableAttribute = false", span="7592-7592", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", file="DefaultSerializationBinder.cs"];
m1_3351 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", span="7590-7590", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", file="DefaultSerializationBinder.cs"];
m1_557 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="DefaultSerializationBinder.cs"];
m1_1798 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1.CircularConstructor1(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2)", span="3958-3958", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1.CircularConstructor1(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2)", file="DefaultSerializationBinder.cs"];
m1_1800 [label="C2 = c2", span="3960-3960", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1.CircularConstructor1(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2)", file="DefaultSerializationBinder.cs"];
m1_1801 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1.CircularConstructor1(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2)", span="3958-3958", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1.CircularConstructor1(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2)", file="DefaultSerializationBinder.cs"];
m1_81 [label="resolvedSchema.Optional = true", span="224-224", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.GenerateInternal(System.Type, Newtonsoft.Json.Required, bool)", file="DefaultSerializationBinder.cs"];
m1_82 [label="return resolvedSchema;", span="226-226", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.GenerateInternal(System.Type, Newtonsoft.Json.Required, bool)", file="DefaultSerializationBinder.cs"];
m1_84 [label="throw new Exception(''Unresolved circular reference for type '{0}'. Explicitly define an Id for the type using a JsonObject/JsonArray attribute or automatically generate a type Id using the UndefinedSchemaIdHandling property.''.FormatWith(CultureInfo.InvariantCulture, type));", span="233-233", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.GenerateInternal(System.Type, Newtonsoft.Json.Required, bool)", file="DefaultSerializationBinder.cs"];
m1_85 [label="JsonContract contract = ContractResolver.ResolveContract(type)", span="236-236", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.GenerateInternal(System.Type, Newtonsoft.Json.Required, bool)", file="DefaultSerializationBinder.cs"];
m1_86 [label="JsonConverter converter", span="237-237", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.GenerateInternal(System.Type, Newtonsoft.Json.Required, bool)", file="DefaultSerializationBinder.cs"];
m1_83 [label="_stack.Any(tc => tc.Type == type)", span="231-231", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.GenerateInternal(System.Type, Newtonsoft.Json.Required, bool)", file="DefaultSerializationBinder.cs"];
m1_87 [label="(converter = contract.Converter) != null || (converter = contract.InternalConverter) != null", span="238-238", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.GenerateInternal(System.Type, Newtonsoft.Json.Required, bool)", file="DefaultSerializationBinder.cs"];
m1_88 [label="JsonSchema converterSchema = converter.GetSchema()", span="240-240", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.GenerateInternal(System.Type, Newtonsoft.Json.Required, bool)", file="DefaultSerializationBinder.cs"];
m1_1447 [label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", span="293-293", cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", file="DefaultSerializationBinder.cs"];
m1_2524 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", span="5661-5661", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", file="DefaultSerializationBinder.cs"];
m1_2526 [label="JsonConvert.DeserializeObject<EnumerableArrayPropertyClass>(json)", span="5664-5664", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", file="DefaultSerializationBinder.cs"];
m1_2525 [label="string json = JsonConvert.SerializeObject(new EnumerableArrayPropertyClass())", span="5663-5663", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", file="DefaultSerializationBinder.cs"];
m1_2527 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", span="5661-5661", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", file="DefaultSerializationBinder.cs"];
m1_2285 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", span="5100-5100", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="DefaultSerializationBinder.cs"];
m1_2287 [label="Assert.AreEqual(''{\''Offset\'':\''2000-01-01T00:00:00+06:00\''}'', serializeObject)", span="5107-5107", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="DefaultSerializationBinder.cs"];
m1_2292 [label="Assert.AreEqual(TimeSpan.FromHours(6), deserializeObject.Offset.Offset)", span="5116-5116", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="DefaultSerializationBinder.cs"];
m1_2293 [label="Assert.AreEqual(new DateTime(2000, 1, 1), deserializeObject.Offset.Date)", span="5117-5117", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="DefaultSerializationBinder.cs"];
m1_2286 [label="var serializeObject = JsonConvert.SerializeObject(new TimeZoneOffsetObject\r\n            {\r\n                Offset = new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6))\r\n            })", span="5102-5105", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="DefaultSerializationBinder.cs"];
m1_2288 [label="JsonTextReader reader = new JsonTextReader(new StringReader(serializeObject))", span="5109-5109", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="DefaultSerializationBinder.cs"];
m1_2291 [label="var deserializeObject = serializer.Deserialize<TimeZoneOffsetObject>(reader)", span="5114-5114", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="DefaultSerializationBinder.cs"];
m1_2289 [label="reader.DateParseHandling = DateParseHandling.None", span="5110-5110", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="DefaultSerializationBinder.cs"];
m1_2290 [label="JsonSerializer serializer = new JsonSerializer()", span="5112-5112", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="DefaultSerializationBinder.cs"];
m1_2294 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", span="5100-5100", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="DefaultSerializationBinder.cs"];
m1_2352 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", span="5235-5235", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="DefaultSerializationBinder.cs"];
m1_2358 [label="Assert.AreEqual(123456789876543.21m, i.Amount)", span="5244-5244", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="DefaultSerializationBinder.cs"];
m1_2357 [label="Invoice i = serializer.Deserialize<Invoice>(reader)", span="5243-5243", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="DefaultSerializationBinder.cs"];
m1_2354 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="5238-5238", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="DefaultSerializationBinder.cs"];
m1_2356 [label="JsonSerializer serializer = new JsonSerializer()", span="5241-5241", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="DefaultSerializationBinder.cs"];
m1_2353 [label="string json = ''{Amount:123456789876543.21}''", span="5237-5237", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="DefaultSerializationBinder.cs"];
m1_2355 [label="reader.FloatParseHandling = FloatParseHandling.Decimal", span="5239-5239", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="DefaultSerializationBinder.cs"];
m1_2359 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", span="5235-5235", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="DefaultSerializationBinder.cs"];
m1_586 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", span="1265-1265", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="DefaultSerializationBinder.cs"];
m1_593 [label="StringAssert.AreEqual(@''{\r\n  ''''JustAProperty'''': ''''JustAProperty2!'''',\r\n  ''''Virtual'''': ''''Virtual2!'''',\r\n  ''''VirtualWithDataMemberBase'''': ''''VirtualWithDataMember2!'''',\r\n  ''''VirtualWithDataMemberSub'''': ''''VirtualWithDataMember!'''',\r\n  ''''WithDataMemberBase'''': ''''WithDataMember2!'''',\r\n  ''''WithDataMemberSub'''': ''''WithDataMember!''''\r\n}'', json)", span="1282-1289", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="DefaultSerializationBinder.cs"];
m1_592 [label="string json = AssertSerializeDeserializeEqual(baseWith)", span="1280-1280", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="DefaultSerializationBinder.cs"];
m1_587 [label="BaseWithContract baseWith = new SubWithoutContractNewProperties\r\n            {\r\n                JustAProperty = ''JustAProperty!'',\r\n                Virtual = ''Virtual!'',\r\n                VirtualWithDataMember = ''VirtualWithDataMember!'',\r\n                WithDataMember = ''WithDataMember!''\r\n            }", span="1267-1273", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="DefaultSerializationBinder.cs"];
m1_591 [label="baseWith.WithDataMember = ''WithDataMember2!''", span="1278-1278", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="DefaultSerializationBinder.cs"];
m1_588 [label="baseWith.JustAProperty = ''JustAProperty2!''", span="1275-1275", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="DefaultSerializationBinder.cs"];
m1_589 [label="baseWith.Virtual = ''Virtual2!''", span="1276-1276", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="DefaultSerializationBinder.cs"];
m1_590 [label="baseWith.VirtualWithDataMember = ''VirtualWithDataMember2!''", span="1277-1277", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="DefaultSerializationBinder.cs"];
m1_594 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", span="1265-1265", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="DefaultSerializationBinder.cs"];
m1_2387 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.Vector()", span="5268-5268", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.Vector()", file="DefaultSerializationBinder.cs"];
m1_3424 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", span="7818-7818", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="DefaultSerializationBinder.cs"];
m1_3428 [label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<IList<long>>(json), ''Error converting value 999999999999999999999999999999999999999999999999 to type 'System.Int64'. Path '[0]', line 1, position 49.'')", span="7826-7826", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="DefaultSerializationBinder.cs"];
m1_3426 [label="IList<BigInteger> l = JsonConvert.DeserializeObject<IList<BigInteger>>(json)", span="7822-7822", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="DefaultSerializationBinder.cs"];
m1_3427 [label="Assert.AreEqual(BigInteger.Parse(''999999999999999999999999999999999999999999999999''), l[0])", span="7824-7824", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="DefaultSerializationBinder.cs"];
m1_3425 [label="string json = @''[999999999999999999999999999999999999999999999999]''", span="7820-7820", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="DefaultSerializationBinder.cs"];
m1_3429 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", span="7818-7818", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="DefaultSerializationBinder.cs"];
m1_500 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Foo1.Foo1()", span="1019-1019", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Foo1.Foo1()", file="DefaultSerializationBinder.cs"];
m1_336 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", span="747-747", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="DefaultSerializationBinder.cs"];
m1_340 [label="Assert.AreEqual(customBinder, serializerProxy.Binder)", span="753-753", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="DefaultSerializationBinder.cs"];
m1_342 [label="Assert.AreEqual(true, serializerProxy.CheckAdditionalContent)", span="756-756", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="DefaultSerializationBinder.cs"];
m1_344 [label="Assert.AreEqual(ConstructorHandling.AllowNonPublicDefaultConstructor, serializerProxy.ConstructorHandling)", span="759-759", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="DefaultSerializationBinder.cs"];
m1_346 [label="Assert.AreEqual(new StreamingContext(StreamingContextStates.Other), serializerProxy.Context)", span="763-763", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="DefaultSerializationBinder.cs"];
m1_349 [label="Assert.AreEqual(resolver, serializerProxy.ContractResolver)", span="768-768", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="DefaultSerializationBinder.cs"];
m1_351 [label="Assert.AreEqual(1, serializerProxy.Converters.Count)", span="771-771", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="DefaultSerializationBinder.cs"];
m1_353 [label="Assert.AreEqual(''en-NZ'', serializerProxy.Culture.ToString())", span="774-774", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="DefaultSerializationBinder.cs"];
m1_355 [label="Assert.AreEqual(DateFormatHandling.MicrosoftDateFormat, serializerProxy.DateFormatHandling)", span="777-777", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="DefaultSerializationBinder.cs"];
m1_357 [label="Assert.AreEqual(''yyyy'', serializerProxy.DateFormatString)", span="780-780", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="DefaultSerializationBinder.cs"];
m1_359 [label="Assert.AreEqual(DateParseHandling.None, serializerProxy.DateParseHandling)", span="783-783", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="DefaultSerializationBinder.cs"];
m1_361 [label="Assert.AreEqual(DateTimeZoneHandling.Utc, serializerProxy.DateTimeZoneHandling)", span="786-786", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="DefaultSerializationBinder.cs"];
m1_363 [label="Assert.AreEqual(DefaultValueHandling.IgnoreAndPopulate, serializerProxy.DefaultValueHandling)", span="789-789", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="DefaultSerializationBinder.cs"];
m1_365 [label="Assert.AreEqual(FloatFormatHandling.Symbol, serializerProxy.FloatFormatHandling)", span="792-792", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="DefaultSerializationBinder.cs"];
m1_367 [label="Assert.AreEqual(FloatParseHandling.Decimal, serializerProxy.FloatParseHandling)", span="795-795", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="DefaultSerializationBinder.cs"];
m1_369 [label="Assert.AreEqual(Formatting.Indented, serializerProxy.Formatting)", span="798-798", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="DefaultSerializationBinder.cs"];
m1_371 [label="Assert.AreEqual(9001, serializerProxy.MaxDepth)", span="801-801", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="DefaultSerializationBinder.cs"];
m1_373 [label="Assert.AreEqual(MissingMemberHandling.Error, serializerProxy.MissingMemberHandling)", span="804-804", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="DefaultSerializationBinder.cs"];
m1_375 [label="Assert.AreEqual(NullValueHandling.Ignore, serializerProxy.NullValueHandling)", span="807-807", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="DefaultSerializationBinder.cs"];
m1_377 [label="Assert.AreEqual(ObjectCreationHandling.Replace, serializerProxy.ObjectCreationHandling)", span="810-810", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="DefaultSerializationBinder.cs"];
m1_379 [label="Assert.AreEqual(PreserveReferencesHandling.All, serializerProxy.PreserveReferencesHandling)", span="813-813", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="DefaultSerializationBinder.cs"];
m1_381 [label="Assert.AreEqual(ReferenceLoopHandling.Ignore, serializerProxy.ReferenceLoopHandling)", span="816-816", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="DefaultSerializationBinder.cs"];
m1_384 [label="Assert.AreEqual(referenceResolver, serializerProxy.ReferenceResolver)", span="820-820", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="DefaultSerializationBinder.cs"];
m1_386 [label="Assert.AreEqual(StringEscapeHandling.EscapeNonAscii, serializerProxy.StringEscapeHandling)", span="823-823", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="DefaultSerializationBinder.cs"];
m1_389 [label="Assert.AreEqual(traceWriter, serializerProxy.TraceWriter)", span="827-827", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="DefaultSerializationBinder.cs"];
m1_391 [label="Assert.AreEqual(FormatterAssemblyStyle.Full, serializerProxy.TypeNameAssemblyFormat)", span="831-831", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="DefaultSerializationBinder.cs"];
m1_393 [label="Assert.AreEqual(TypeNameHandling.All, serializerProxy.TypeNameHandling)", span="835-835", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="DefaultSerializationBinder.cs"];
m1_350 [label="serializerProxy.Converters.Add(new StringEnumConverter())", span="770-770", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="DefaultSerializationBinder.cs"];
m1_337 [label="JsonSerializerProxy serializerProxy = new JsonSerializerProxy(new JsonSerializerInternalReader(new JsonSerializer()))", span="749-749", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="DefaultSerializationBinder.cs"];
m1_338 [label="DefaultSerializationBinder customBinder = new DefaultSerializationBinder()", span="751-751", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="DefaultSerializationBinder.cs"];
m1_339 [label="serializerProxy.Binder = customBinder", span="752-752", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="DefaultSerializationBinder.cs"];
m1_341 [label="serializerProxy.CheckAdditionalContent = true", span="755-755", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="DefaultSerializationBinder.cs"];
m1_343 [label="serializerProxy.ConstructorHandling = ConstructorHandling.AllowNonPublicDefaultConstructor", span="758-758", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="DefaultSerializationBinder.cs"];
m1_345 [label="serializerProxy.Context = new StreamingContext(StreamingContextStates.Other)", span="762-762", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="DefaultSerializationBinder.cs"];
m1_347 [label="CamelCasePropertyNamesContractResolver resolver = new CamelCasePropertyNamesContractResolver()", span="766-766", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="DefaultSerializationBinder.cs"];
m1_348 [label="serializerProxy.ContractResolver = resolver", span="767-767", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="DefaultSerializationBinder.cs"];
m1_352 [label="serializerProxy.Culture = new CultureInfo(''en-nz'')", span="773-773", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="DefaultSerializationBinder.cs"];
m1_354 [label="serializerProxy.DateFormatHandling = DateFormatHandling.MicrosoftDateFormat", span="776-776", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="DefaultSerializationBinder.cs"];
m1_356 [label="serializerProxy.DateFormatString = ''yyyy''", span="779-779", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="DefaultSerializationBinder.cs"];
m1_358 [label="serializerProxy.DateParseHandling = DateParseHandling.None", span="782-782", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="DefaultSerializationBinder.cs"];
m1_360 [label="serializerProxy.DateTimeZoneHandling = DateTimeZoneHandling.Utc", span="785-785", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="DefaultSerializationBinder.cs"];
m1_362 [label="serializerProxy.DefaultValueHandling = DefaultValueHandling.IgnoreAndPopulate", span="788-788", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="DefaultSerializationBinder.cs"];
m1_364 [label="serializerProxy.FloatFormatHandling = FloatFormatHandling.Symbol", span="791-791", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="DefaultSerializationBinder.cs"];
m1_366 [label="serializerProxy.FloatParseHandling = FloatParseHandling.Decimal", span="794-794", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="DefaultSerializationBinder.cs"];
m1_368 [label="serializerProxy.Formatting = Formatting.Indented", span="797-797", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="DefaultSerializationBinder.cs"];
m1_370 [label="serializerProxy.MaxDepth = 9001", span="800-800", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="DefaultSerializationBinder.cs"];
m1_372 [label="serializerProxy.MissingMemberHandling = MissingMemberHandling.Error", span="803-803", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="DefaultSerializationBinder.cs"];
m1_374 [label="serializerProxy.NullValueHandling = NullValueHandling.Ignore", span="806-806", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="DefaultSerializationBinder.cs"];
m1_376 [label="serializerProxy.ObjectCreationHandling = ObjectCreationHandling.Replace", span="809-809", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="DefaultSerializationBinder.cs"];
m1_378 [label="serializerProxy.PreserveReferencesHandling = PreserveReferencesHandling.All", span="812-812", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="DefaultSerializationBinder.cs"];
m1_380 [label="serializerProxy.ReferenceLoopHandling = ReferenceLoopHandling.Ignore", span="815-815", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="DefaultSerializationBinder.cs"];
m1_382 [label="IdReferenceResolver referenceResolver = new IdReferenceResolver()", span="818-818", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="DefaultSerializationBinder.cs"];
m1_383 [label="serializerProxy.ReferenceResolver = referenceResolver", span="819-819", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="DefaultSerializationBinder.cs"];
m1_385 [label="serializerProxy.StringEscapeHandling = StringEscapeHandling.EscapeNonAscii", span="822-822", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="DefaultSerializationBinder.cs"];
m1_387 [label="MemoryTraceWriter traceWriter = new MemoryTraceWriter()", span="825-825", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="DefaultSerializationBinder.cs"];
m1_388 [label="serializerProxy.TraceWriter = traceWriter", span="826-826", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="DefaultSerializationBinder.cs"];
m1_390 [label="serializerProxy.TypeNameAssemblyFormat = FormatterAssemblyStyle.Full", span="830-830", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="DefaultSerializationBinder.cs"];
m1_392 [label="serializerProxy.TypeNameHandling = TypeNameHandling.All", span="834-834", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="DefaultSerializationBinder.cs"];
m1_394 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", span="747-747", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="DefaultSerializationBinder.cs"];
m1_2830 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", span="6427-6427", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="DefaultSerializationBinder.cs"];
m1_2833 [label="StringAssert.AreEqual(@''{\r\n  ''''Integer'''': 1,\r\n  ''''NullableInteger1'''': 2,\r\n  ''''NullableInteger2'''': null\r\n}'', json)", span="6438-6442", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="DefaultSerializationBinder.cs"];
m1_2832 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="6436-6436", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="DefaultSerializationBinder.cs"];
m1_2831 [label="ConvertableIntTestClass c = new ConvertableIntTestClass\r\n            {\r\n                Integer = new ConvertibleInt(1),\r\n                NullableInteger1 = new ConvertibleInt(2),\r\n                NullableInteger2 = null\r\n            }", span="6429-6434", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="DefaultSerializationBinder.cs"];
m1_2834 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", span="6427-6427", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="DefaultSerializationBinder.cs"];
m1_933 [label="Entry Newtonsoft.Json.Tests.TestObjects.ClassWithArray.ClassWithArray()", span="35-35", cluster="Newtonsoft.Json.Tests.TestObjects.ClassWithArray.ClassWithArray()", file="DefaultSerializationBinder.cs"];
m1_2850 [label="Entry Newtonsoft.Json.Tests.TestObjects.WidgetId.WidgetId()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.WidgetId.WidgetId()", file="DefaultSerializationBinder.cs"];
m1_7 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", span="98-98", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", file="DefaultSerializationBinder.cs"];
m1_8 [label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="354-354", cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="DefaultSerializationBinder.cs"];
m1_9 [label="Entry lambda expression", span="101-101", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_10 [label="JsonConvert.DeserializeObject<IList<int>>(''[1,'')", span="101-101", cluster="lambda expression", file="DefaultSerializationBinder.cs", color=green, community=0];
m1_11 [label="Exit lambda expression", span="101-101", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_2498 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", span="5559-5559", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="DefaultSerializationBinder.cs"];
m1_2501 [label="Assert.AreEqual(@''{}'', json)", span="5565-5565", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="DefaultSerializationBinder.cs"];
m1_2500 [label="string json = JsonConvert.SerializeObject(e, Formatting.Indented)", span="5563-5563", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="DefaultSerializationBinder.cs"];
m1_2499 [label="MultiIndexSuper e = new MultiIndexSuper()", span="5561-5561", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="DefaultSerializationBinder.cs"];
m1_2502 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", span="5559-5559", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="DefaultSerializationBinder.cs"];
m1_1825 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", span="4048-4048", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="DefaultSerializationBinder.cs"];
m1_1829 [label="_innerDictionary.Add(entry.Key, entry.Value)", span="4057-4057", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="DefaultSerializationBinder.cs"];
m1_1828 [label=dictionary, span="4055-4055", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="DefaultSerializationBinder.cs"];
m1_1826 [label="dictionary == null", span="4050-4050", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="DefaultSerializationBinder.cs"];
m1_1827 [label="throw new ArgumentNullException(''dictionary'');", span="4052-4052", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="DefaultSerializationBinder.cs"];
m1_1830 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", span="4048-4048", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="DefaultSerializationBinder.cs"];
m1_63 [label=explicitOnly, span="193-193", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.GetTypeId(System.Type, bool)", file="DefaultSerializationBinder.cs"];
m1_28 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", span="138-138", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", file="DefaultSerializationBinder.cs"];
m1_35 [label="Entry Newtonsoft.Json.Converters.StringEnumConverter.StringEnumConverter()", span="59-59", cluster="Newtonsoft.Json.Converters.StringEnumConverter.StringEnumConverter()", file="DefaultSerializationBinder.cs"];
m1_36 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", span="787-787", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", file="DefaultSerializationBinder.cs"];
m1_37 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", span="162-162", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="DefaultSerializationBinder.cs"];
m1_38 [label="CustomerWithMetadataType c = new CustomerWithMetadataType()", span="164-164", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="DefaultSerializationBinder.cs", color=green, community=0];
m1_39 [label="c.UpdatedBy_Id = Guid.NewGuid()", span="165-165", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="DefaultSerializationBinder.cs", color=green, community=0];
m1_3437 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", span="7851-7851", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="DefaultSerializationBinder.cs"];
m1_3440 [label="Assert.AreEqual(@''{''''First'''':''''One'''',''''Second'''':2}'', json)", span="7857-7857", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="DefaultSerializationBinder.cs"];
m1_3444 [label="Assert.AreEqual(@''{''''First'''':''''One'''',''''Second'''':2}'', json)", span="7868-7868", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="DefaultSerializationBinder.cs"];
m1_3439 [label="string json = JsonConvert.SerializeObject(p)", span="7855-7855", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="DefaultSerializationBinder.cs"];
m1_3441 [label="DefaultContractResolver r = new DefaultContractResolver()", span="7860-7860", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="DefaultSerializationBinder.cs"];
m1_3443 [label="json = JsonConvert.SerializeObject(p, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = r\r\n            })", span="7863-7866", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="DefaultSerializationBinder.cs"];
m1_3438 [label="Pair<string, int> p = new Pair<string, int>(''One'', 2)", span="7853-7853", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="DefaultSerializationBinder.cs"];
m1_3442 [label="r.IgnoreSerializableAttribute = false", span="7861-7861", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="DefaultSerializationBinder.cs"];
m1_3445 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", span="7851-7851", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="DefaultSerializationBinder.cs"];
m1_1173 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", span="2405-2405", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="DefaultSerializationBinder.cs"];
m1_1175 [label="RequiredMembersClass c = JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="2414-2414", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="DefaultSerializationBinder.cs"];
m1_1176 [label="Assert.AreEqual(''I can't be null bro!'', c.FirstName)", span="2416-2416", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="DefaultSerializationBinder.cs"];
m1_1177 [label="Assert.AreEqual(null, c.MiddleName)", span="2417-2417", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="DefaultSerializationBinder.cs"];
m1_1178 [label="Assert.AreEqual(null, c.LastName)", span="2418-2418", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="DefaultSerializationBinder.cs"];
m1_1174 [label="string json = @''{\r\n  ''''FirstName'''': ''''I can't be null bro!'''',\r\n  ''''MiddleName'''': null,\r\n  ''''LastName'''': null,\r\n  ''''BirthDate'''': ''''\/Date(977309755000)\/''''\r\n}''", span="2407-2412", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="DefaultSerializationBinder.cs"];
m1_1179 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", span="2405-2405", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="DefaultSerializationBinder.cs"];
m1_3139 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", span="7031-7031", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="DefaultSerializationBinder.cs"];
m1_3143 [label="IDictionary<DateTimeOffset, int> dic2 = JsonConvert.DeserializeObject<IDictionary<DateTimeOffset, int>>(json)", span="7046-7046", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="DefaultSerializationBinder.cs"];
m1_3144 [label="Assert.AreEqual(2, dic2.Count)", span="7048-7048", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="DefaultSerializationBinder.cs"];
m1_3145 [label="Assert.AreEqual(1, dic2[new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero)])", span="7049-7049", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="DefaultSerializationBinder.cs"];
m1_3146 [label="Assert.AreEqual(2, dic2[new DateTimeOffset(2013, 12, 12, 12, 12, 12, TimeSpan.Zero)])", span="7050-7050", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="DefaultSerializationBinder.cs"];
m1_3141 [label="string json = JsonConvert.SerializeObject(dic1, Formatting.Indented)", span="7039-7039", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="DefaultSerializationBinder.cs"];
m1_3142 [label="StringAssert.AreEqual(@''{\r\n  ''''2000-12-12T12:12:12+00:00'''': 1,\r\n  ''''2013-12-12T12:12:12+00:00'''': 2\r\n}'', json)", span="7041-7044", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="DefaultSerializationBinder.cs"];
m1_3140 [label="IDictionary<DateTimeOffset, int> dic1 = new Dictionary<DateTimeOffset, int>\r\n            {\r\n                { new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero), 1 },\r\n                { new DateTimeOffset(2013, 12, 12, 12, 12, 12, TimeSpan.Zero), 2 }\r\n            }", span="7033-7037", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="DefaultSerializationBinder.cs"];
m1_3147 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", span="7031-7031", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="DefaultSerializationBinder.cs"];
m1_3037 [label="Entry Unk.WriteValue", span="", cluster="Unk.WriteValue", file="DefaultSerializationBinder.cs"];
m1_3291 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", span="7416-7416", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", file="DefaultSerializationBinder.cs"];
m1_3293 [label="StringAssert.AreEqual(@''{\r\n  ''''key'''': 123,\r\n  ''''value'''': ''''test value''''\r\n}'', json)", span="7424-7427", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", file="DefaultSerializationBinder.cs"];
m1_3292 [label="string json =\r\n                JsonConvert.SerializeObject(new KeyValuePair<int, string>(123, ''test value''), Formatting.Indented, new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new CamelCasePropertyNamesContractResolver()\r\n                })", span="7418-7422", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", file="DefaultSerializationBinder.cs"];
m1_3294 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", span="7416-7416", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", file="DefaultSerializationBinder.cs"];
m1_3271 [label="Entry System.Uri.Uri(string, System.UriKind)", span="0-0", cluster="System.Uri.Uri(string, System.UriKind)", file="DefaultSerializationBinder.cs"];
m1_1663 [label="Entry Newtonsoft.Json.Tests.TestObjects.Bar.Bar()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.Bar.Bar()", file="DefaultSerializationBinder.cs"];
m1_1188 [label="Entry string.StartsWith(string)", span="0-0", cluster="string.StartsWith(string)", file="DefaultSerializationBinder.cs"];
m1_3208 [label="Entry Newtonsoft.Json.Tests.TestObjects.Event1.Event1()", span="31-31", cluster="Newtonsoft.Json.Tests.TestObjects.Event1.Event1()", file="DefaultSerializationBinder.cs"];
m1_1539 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", span="3264-3264", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", file="DefaultSerializationBinder.cs"];
m1_1541 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => { JsonConvert.DeserializeObject<DynamicDictionary>(json); },\r\n                @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'Newtonsoft.Json.Tests.Linq.DynamicDictionary' because the type requires a JSON object (e.g. {''''name'''':''''value''''}) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON object (e.g. {''''name'''':''''value''''}) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'')", span="3268-3272", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", file="DefaultSerializationBinder.cs"];
m1_1540 [label="string json = @''[]''", span="3266-3266", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", file="DefaultSerializationBinder.cs"];
m1_1542 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", span="3264-3264", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", file="DefaultSerializationBinder.cs"];
m1_1025 [label="Entry Newtonsoft.Json.Tests.TestObjects.ArgumentConverterPrecedenceClassConverter.ArgumentConverterPrecedenceClassConverter()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.ArgumentConverterPrecedenceClassConverter.ArgumentConverterPrecedenceClassConverter()", file="DefaultSerializationBinder.cs"];
m1_607 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualProperties.SubWithoutContractVirtualProperties()", span="1232-1232", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualProperties.SubWithoutContractVirtualProperties()", file="DefaultSerializationBinder.cs"];
m1_1841 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", file="DefaultSerializationBinder.cs"];
m1_1889 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", span="4198-4198", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="DefaultSerializationBinder.cs"];
m1_1894 [label="_dateTimeValue = new DateTime(0, DateTimeKind.Utc)", span="4204-4204", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="DefaultSerializationBinder.cs"];
m1_1890 [label="_stringValue = stringValue", span="4200-4200", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="DefaultSerializationBinder.cs"];
m1_1891 [label="_intValue = intValue", span="4201-4201", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="DefaultSerializationBinder.cs"];
m1_1892 [label="_dateTimeOffsetValue = dateTimeOffset", span="4202-4202", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="DefaultSerializationBinder.cs"];
m1_1893 [label="_personValue = personValue", span="4203-4203", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="DefaultSerializationBinder.cs"];
m1_1895 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", span="4198-4198", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="DefaultSerializationBinder.cs"];
m1_514 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", span="1068-1068", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="DefaultSerializationBinder.cs"];
m1_516 [label="var deserialized = JsonConvert.DeserializeObject<FooBar1>(json)", span="1071-1071", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="DefaultSerializationBinder.cs"];
m1_518 [label="Assert.AreEqual(''value'', deserialized.foo.bar)", span="1073-1073", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="DefaultSerializationBinder.cs"];
m1_515 [label="var json = @''{''''foo'''':{''''bar'''':''''value''''}}''", span="1070-1070", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="DefaultSerializationBinder.cs"];
m1_517 [label="Assert.IsNotNull(deserialized.foo)", span="1072-1072", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="DefaultSerializationBinder.cs"];
m1_519 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", span="1068-1068", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="DefaultSerializationBinder.cs"];
m1_649 [label="Entry Newtonsoft.Json.Linq.JObject.Properties()", span="229-229", cluster="Newtonsoft.Json.Linq.JObject.Properties()", file="DefaultSerializationBinder.cs"];
m1_2344 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", span="5221-5221", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", file="DefaultSerializationBinder.cs"];
m1_2345 [label="decimal d = JsonConvert.DeserializeObject<decimal>(''123456789876543.21'')", span="5223-5223", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", file="DefaultSerializationBinder.cs"];
m1_2346 [label="Assert.AreEqual(123456789876543.21m, d)", span="5224-5224", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", file="DefaultSerializationBinder.cs"];
m1_2347 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", span="5221-5221", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", file="DefaultSerializationBinder.cs"];
m1_2202 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", span="4893-4893", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="DefaultSerializationBinder.cs"];
m1_2205 [label="Assert.AreEqual(typeof(decimal), dic[''value''].GetType())", span="4903-4903", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="DefaultSerializationBinder.cs"];
m1_2206 [label="Assert.AreEqual(9.9m, dic[''value''])", span="4904-4904", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="DefaultSerializationBinder.cs"];
m1_2204 [label="var dic = JsonConvert.DeserializeObject<IDictionary<string, object>>(\r\n                json, new JsonSerializerSettings\r\n                {\r\n                    FloatParseHandling = FloatParseHandling.Decimal\r\n                })", span="4897-4901", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="DefaultSerializationBinder.cs"];
m1_2203 [label="string json = @''{'value':9.9}''", span="4895-4895", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="DefaultSerializationBinder.cs"];
m1_2207 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", span="4893-4893", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="DefaultSerializationBinder.cs"];
m1_1832 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", span="4092-4092", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", file="DefaultSerializationBinder.cs"];
m1_1833 [label="((IDictionary<string, T>)_innerDictionary).Add(item)", span="4094-4094", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", file="DefaultSerializationBinder.cs"];
m1_1834 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", span="4092-4092", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", file="DefaultSerializationBinder.cs"];
m1_2550 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObject.ChildObject()", span="5733-5733", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObject.ChildObject()", file="DefaultSerializationBinder.cs"];
m1_962 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="606-606", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="DefaultSerializationBinder.cs"];
m1_2079 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", span="4674-4674", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="DefaultSerializationBinder.cs"];
m1_2086 [label="XNodeTestObject newTestObject = JsonConvert.DeserializeObject<XNodeTestObject>(json)", span="4695-4695", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="DefaultSerializationBinder.cs"];
m1_2087 [label="Assert.AreEqual(testObject.Document.ToString(), newTestObject.Document.ToString())", span="4696-4696", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="DefaultSerializationBinder.cs"];
m1_2088 [label="Assert.AreEqual(testObject.Element.ToString(), newTestObject.Element.ToString())", span="4697-4697", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="DefaultSerializationBinder.cs"];
m1_2083 [label="string json = JsonConvert.SerializeObject(testObject, Formatting.Indented)", span="4680-4680", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="DefaultSerializationBinder.cs"];
m1_2085 [label="StringAssert.AreEqual(expected, json)", span="4693-4693", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="DefaultSerializationBinder.cs"];
m1_2089 [label="Assert.IsNull(newTestObject.Element.Parent)", span="4699-4699", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="DefaultSerializationBinder.cs"];
m1_2080 [label="XNodeTestObject testObject = new XNodeTestObject()", span="4676-4676", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="DefaultSerializationBinder.cs"];
m1_2082 [label="testObject.Element = XElement.Parse(@''<fifth xmlns:json=''''http://json.org'''' json:Awesome=''''true''''>element</fifth>'')", span="4678-4678", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="DefaultSerializationBinder.cs"];
m1_2084 [label="string expected = @''{\r\n  ''''Document'''': {\r\n    ''''root'''': ''''hehe, root''''\r\n  },\r\n  ''''Element'''': {\r\n    ''''fifth'''': {\r\n      ''''@xmlns:json'''': ''''http://json.org'''',\r\n      ''''@json:Awesome'''': ''''true'''',\r\n      ''''#text'''': ''''element''''\r\n    }\r\n  }\r\n}''", span="4681-4692", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="DefaultSerializationBinder.cs"];
m1_2081 [label="testObject.Document = XDocument.Parse(''<root>hehe, root</root>'')", span="4677-4677", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="DefaultSerializationBinder.cs"];
m1_2090 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", span="4674-4674", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="DefaultSerializationBinder.cs"];
m1_23 [label="JsonConvert.DeserializeObject<IncompleteTestClass>(''{'key':1,'')", span="117-117", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_728 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", span="1536-1536", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="DefaultSerializationBinder.cs"];
m1_731 [label="Assert.AreEqual(''01/24/2010 12:00:00'', p.Hash[''ExpiryDate''].ToString())", span="1542-1542", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="DefaultSerializationBinder.cs"];
m1_730 [label="TypedSubHashtable p = JsonConvert.DeserializeObject(value, typeof(TypedSubHashtable)) as TypedSubHashtable", span="1540-1540", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="DefaultSerializationBinder.cs"];
m1_732 [label="StringAssert.AreEqual(@''[\r\n  ''''01/24/2010 12:00:00''''\r\n]'', p.Hash[''UntypedArray''].ToString())", span="1543-1545", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="DefaultSerializationBinder.cs"];
m1_729 [label="string value = @''{''''Name'''':''''Orange'''', ''''Hash'''':{''''ExpiryDate'''':''''01/24/2010 12:00:00'''',''''UntypedArray'''':[''''01/24/2010 12:00:00'''']}}''", span="1538-1538", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="DefaultSerializationBinder.cs"];
m1_733 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", span="1536-1536", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="DefaultSerializationBinder.cs"];
m1_527 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Foo1<T>.Foo1()", span="1029-1029", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Foo1<T>.Foo1()", file="DefaultSerializationBinder.cs"];
m1_719 [label="Entry Newtonsoft.Json.Tests.TestObjects.MethodExecutorObject.MethodExecutorObject()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.MethodExecutorObject.MethodExecutorObject()", file="DefaultSerializationBinder.cs"];
m1_2503 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuper.MultiIndexSuper()", span="5568-5568", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuper.MultiIndexSuper()", file="DefaultSerializationBinder.cs"];
m1_1838 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", span="4102-4102", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", file="DefaultSerializationBinder.cs"];
m1_1839 [label="_innerDictionary.Clear()", span="4104-4104", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", file="DefaultSerializationBinder.cs"];
m1_1840 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", span="4102-4102", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", file="DefaultSerializationBinder.cs"];
m1_2543 [label="Entry DataContractSerializer.cstr", span="", cluster="DataContractSerializer.cstr", file="DefaultSerializationBinder.cs"];
m1_1601 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", span="3367-3367", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", file="DefaultSerializationBinder.cs"];
m1_1602 [label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:0}'', new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(NETFX_CORE || PORTABLE || ASPNETCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                });\r\n            }, @''Error setting value to 'ReadTimeout' on 'System.IO.MemoryStream'.'')", span="3369-3380", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", file="DefaultSerializationBinder.cs"];
m1_1603 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", span="3367-3367", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", file="DefaultSerializationBinder.cs"];
m1_1083 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", span="2245-2245", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="DefaultSerializationBinder.cs"];
m1_1088 [label="Assert.AreEqual(@''{''''DefaultConverter'''':[''''Class'''',''''DefaultConverterValue''''],''''MemberConverter'''':[''''Member'''',''''MemberConverterValue'''']}'', json)", span="2252-2252", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="DefaultSerializationBinder.cs"];
m1_1090 [label="Assert.AreEqual(''DefaultConverterValue'', c2.DefaultConverter.TestValue)", span="2256-2256", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="DefaultSerializationBinder.cs"];
m1_1091 [label="Assert.AreEqual(''MemberConverterValue'', c2.MemberConverter.TestValue)", span="2257-2257", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="DefaultSerializationBinder.cs"];
m1_1089 [label="ClassAndMemberConverterClass c2 = JsonConvert.DeserializeObject<ClassAndMemberConverterClass>(json, new ArgumentConverterPrecedenceClassConverter())", span="2254-2254", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="DefaultSerializationBinder.cs"];
m1_1087 [label="string json = JsonConvert.SerializeObject(c1, new ArgumentConverterPrecedenceClassConverter())", span="2251-2251", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="DefaultSerializationBinder.cs"];
m1_1084 [label="ClassAndMemberConverterClass c1 = new ClassAndMemberConverterClass()", span="2247-2247", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="DefaultSerializationBinder.cs"];
m1_1086 [label="c1.MemberConverter = new ConverterPrecedenceClass(''MemberConverterValue'')", span="2249-2249", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="DefaultSerializationBinder.cs"];
m1_1085 [label="c1.DefaultConverter = new ConverterPrecedenceClass(''DefaultConverterValue'')", span="2248-2248", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="DefaultSerializationBinder.cs"];
m1_1092 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", span="2245-2245", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="DefaultSerializationBinder.cs"];
m1_3059 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", span="6892-6892", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="DefaultSerializationBinder.cs"];
m1_3070 [label="Console.WriteLine(a.ToString())", span="6909-6909", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="DefaultSerializationBinder.cs"];
m1_3069 [label="Console.WriteLine(v.Value.GetType())", span="6908-6908", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="DefaultSerializationBinder.cs"];
m1_3066 [label="BsonReader reader = new BsonReader(new MemoryStream(data))\r\n            {\r\n                ReadRootValueAsArray = true\r\n            }", span="6901-6904", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="DefaultSerializationBinder.cs"];
m1_3067 [label="JArray a = (JArray)JArray.ReadFrom(reader)", span="6906-6906", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="DefaultSerializationBinder.cs"];
m1_3068 [label="JValue v = (JValue)a[0]", span="6907-6907", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="DefaultSerializationBinder.cs"];
m1_3060 [label="MemoryStream ms = new MemoryStream()", span="6894-6894", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="DefaultSerializationBinder.cs"];
m1_3065 [label="byte[] data = ms.ToArray()", span="6900-6900", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="DefaultSerializationBinder.cs"];
m1_3061 [label="BsonWriter writer = new BsonWriter(ms)", span="6895-6895", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="DefaultSerializationBinder.cs"];
m1_3064 [label="writer.WriteEndArray()", span="6898-6898", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="DefaultSerializationBinder.cs"];
m1_3062 [label="writer.WriteStartArray()", span="6896-6896", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="DefaultSerializationBinder.cs"];
m1_3063 [label="writer.WriteValue(''2000-01-02T03:04:05+06:00'')", span="6897-6897", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="DefaultSerializationBinder.cs"];
m1_3071 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", span="6892-6892", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="DefaultSerializationBinder.cs"];
m1_2021 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", span="4641-4641", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="DefaultSerializationBinder.cs"];
m1_2068 [label="BB_field1 = g", span="4644-4644", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="DefaultSerializationBinder.cs"];
m1_2069 [label="BB_field2 = g", span="4645-4645", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="DefaultSerializationBinder.cs"];
m1_2070 [label="BB_property1 = g", span="4646-4646", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="DefaultSerializationBinder.cs"];
m1_2071 [label="BB_property2 = g", span="4647-4647", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="DefaultSerializationBinder.cs"];
m1_2072 [label="BB_property3 = g", span="4648-4648", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="DefaultSerializationBinder.cs"];
m1_2073 [label="BB_property4 = g", span="4649-4649", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="DefaultSerializationBinder.cs"];
m1_2074 [label="BB_property5 = g", span="4650-4650", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="DefaultSerializationBinder.cs"];
m1_2075 [label="BB_property6 = g", span="4651-4651", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="DefaultSerializationBinder.cs"];
m1_2076 [label="BB_property7 = g", span="4652-4652", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="DefaultSerializationBinder.cs"];
m1_2077 [label="BB_property8 = g", span="4653-4653", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="DefaultSerializationBinder.cs"];
m1_2078 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", span="4641-4641", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="DefaultSerializationBinder.cs"];
m1_574 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast(string)", span="1140-1140", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast(string)", file="DefaultSerializationBinder.cs"];
m1_576 [label="return new DictionaryKeyCast(strings[0], Convert.ToInt32(strings[1]));", span="1143-1143", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast(string)", file="DefaultSerializationBinder.cs"];
m1_575 [label="var strings = dictionaryKey.Split(' ')", span="1142-1142", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast(string)", file="DefaultSerializationBinder.cs"];
m1_577 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast(string)", span="1140-1140", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast(string)", file="DefaultSerializationBinder.cs"];
m1_1107 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", span="2278-2278", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="DefaultSerializationBinder.cs"];
m1_1110 [label="Assert.AreEqual(''null'', json)", span="2283-2283", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="DefaultSerializationBinder.cs"];
m1_1112 [label="Assert.AreEqual(''1'', json)", span="2286-2286", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="DefaultSerializationBinder.cs"];
m1_1109 [label="json = JsonConvert.SerializeObject((int?)null)", span="2282-2282", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="DefaultSerializationBinder.cs"];
m1_1111 [label="json = JsonConvert.SerializeObject((int?)1)", span="2285-2285", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="DefaultSerializationBinder.cs"];
m1_1108 [label="string json", span="2280-2280", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="DefaultSerializationBinder.cs"];
m1_1113 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", span="2278-2278", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="DefaultSerializationBinder.cs"];
m1_1448 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", span="3086-3086", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="DefaultSerializationBinder.cs"];
m1_1451 [label="StringAssert.AreEqual(@''{\r\n  ''''Children'''': [\r\n    {\r\n      ''''Children'''': null,\r\n      ''''Text'''': ''''First''''\r\n    },\r\n    {\r\n      ''''Children'''': null,\r\n      ''''Text'''': ''''Second''''\r\n    }\r\n  ],\r\n  ''''Text'''': ''''Blah, blah, blah''''\r\n}'', json)", span="3100-3112", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="DefaultSerializationBinder.cs"];
m1_1450 [label="string json = JsonConvert.SerializeObject(content, Formatting.Indented)", span="3098-3098", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="DefaultSerializationBinder.cs"];
m1_1449 [label="Content content = new Content\r\n            {\r\n                Text = ''Blah, blah, blah'',\r\n                Children = new List<Content>\r\n                {\r\n                    new Content { Text = ''First'' },\r\n                    new Content { Text = ''Second'' }\r\n                }\r\n            }", span="3088-3096", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="DefaultSerializationBinder.cs"];
m1_1452 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", span="3086-3086", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="DefaultSerializationBinder.cs"];
m1_51 [label="containerAttribute != null && !string.IsNullOrEmpty(containerAttribute.Description)", span="174-174", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.GetDescription(System.Type)", file="DefaultSerializationBinder.cs"];
m1_1746 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ThisGenericTest()", span="3703-3703", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ThisGenericTest()", file="DefaultSerializationBinder.cs"];
m1_1921 [label="Entry System.Runtime.Serialization.SerializationInfo.GetInt16(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetInt16(string)", file="DefaultSerializationBinder.cs"];
m1_3505 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", span="8032-8032", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", file="DefaultSerializationBinder.cs"];
m1_3507 [label="var foo = JsonConvert.DeserializeObject<FooConstructor>(json)", span="8035-8035", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", file="DefaultSerializationBinder.cs"];
m1_3508 [label="Assert.AreEqual(''my value'', foo.Bar)", span="8036-8036", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", file="DefaultSerializationBinder.cs"];
m1_3506 [label="string json = @''{''''something_else'''':''''my value''''}''", span="8034-8034", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", file="DefaultSerializationBinder.cs"];
m1_3509 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", span="8032-8032", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", file="DefaultSerializationBinder.cs"];
m1_1960 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", span="4333-4333", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="DefaultSerializationBinder.cs"];
m1_1972 [label="ISerializableTestObject o2 = JsonConvert.DeserializeObject<ISerializableTestObject>(json)", span="4377-4377", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="DefaultSerializationBinder.cs"];
m1_1975 [label="Assert.AreEqual(dateTimeOffset, o2._dateTimeOffsetValue)", span="4380-4380", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="DefaultSerializationBinder.cs"];
m1_1973 [label="Assert.AreEqual(''String!'', o2._stringValue)", span="4378-4378", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="DefaultSerializationBinder.cs"];
m1_1974 [label="Assert.AreEqual(int.MinValue, o2._intValue)", span="4379-4379", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="DefaultSerializationBinder.cs"];
m1_1976 [label="Assert.AreEqual(''Name!'', o2._personValue.Name)", span="4381-4381", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="DefaultSerializationBinder.cs"];
m1_1977 [label="Assert.AreEqual(null, o2._nullPersonValue)", span="4382-4382", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="DefaultSerializationBinder.cs"];
m1_1978 [label="Assert.AreEqual(null, o2._nullableInt)", span="4383-4383", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="DefaultSerializationBinder.cs"];
m1_1971 [label="StringAssert.AreEqual(@''{\r\n  ''''stringValue'''': ''''String!'''',\r\n  ''''intValue'''': -2147483648,\r\n  ''''dateTimeOffsetValue'''': '''''' + dateTimeOffsetText + @'''''',\r\n  ''''personValue'''': {\r\n    ''''Name'''': ''''Name!'''',\r\n    ''''BirthDate'''': ''''2000-01-01T01:01:01Z'''',\r\n    ''''LastModified'''': ''''2000-01-01T01:01:01Z''''\r\n  },\r\n  ''''nullPersonValue'''': null,\r\n  ''''nullableInt'''': null,\r\n  ''''booleanValue'''': false,\r\n  ''''byteValue'''': 0,\r\n  ''''charValue'''': ''''\u0000'''',\r\n  ''''dateTimeValue'''': ''''0001-01-01T00:00:00Z'''',\r\n  ''''decimalValue'''': 0.0,\r\n  ''''shortValue'''': 0,\r\n  ''''longValue'''': 0,\r\n  ''''sbyteValue'''': 0,\r\n  ''''floatValue'''': 0.0,\r\n  ''''ushortValue'''': 0,\r\n  ''''uintValue'''': 0,\r\n  ''''ulongValue'''': 0\r\n}'', json)", span="4352-4375", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="DefaultSerializationBinder.cs"];
m1_1970 [label="string json = JsonConvert.SerializeObject(o, Formatting.Indented)", span="4351-4351", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="DefaultSerializationBinder.cs"];
m1_1966 [label="DateTimeOffset dateTimeOffset = new DateTimeOffset(2000, 12, 20, 22, 59, 59, TimeSpan.FromHours(2))", span="4341-4341", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="DefaultSerializationBinder.cs"];
m1_1968 [label="dateTimeOffsetText = @''2000-12-20T22:59:59+02:00''", span="4344-4344", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="DefaultSerializationBinder.cs"];
m1_1969 [label="ISerializableTestObject o = new ISerializableTestObject(''String!'', int.MinValue, dateTimeOffset, person)", span="4349-4349", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="DefaultSerializationBinder.cs"];
m1_1962 [label="person.BirthDate = new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc)", span="4336-4336", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="DefaultSerializationBinder.cs"];
m1_1965 [label="person.Name = ''Name!''", span="4339-4339", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="DefaultSerializationBinder.cs"];
m1_1967 [label="string dateTimeOffsetText", span="4342-4342", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="DefaultSerializationBinder.cs"];
m1_1961 [label="Person person = new Person()", span="4335-4335", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="DefaultSerializationBinder.cs"];
m1_1963 [label="person.LastModified = person.BirthDate", span="4337-4337", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="DefaultSerializationBinder.cs"];
m1_1964 [label="person.Department = ''Department!''", span="4338-4338", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="DefaultSerializationBinder.cs"];
m1_1979 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", span="4333-4333", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="DefaultSerializationBinder.cs"];
m1_2812 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", span="6389-6389", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="DefaultSerializationBinder.cs"];
m1_2819 [label="Bb b2 = JsonConvert.DeserializeObject<Bb>(json)", span="6400-6400", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="DefaultSerializationBinder.cs"];
m1_2818 [label="Assert.AreEqual(@''{''''no'''':true}'', json)", span="6398-6398", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="DefaultSerializationBinder.cs"];
m1_2820 [label="Assert.AreEqual(true, b2.no)", span="6402-6402", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="DefaultSerializationBinder.cs"];
m1_2817 [label="string json = JsonConvert.SerializeObject(b)", span="6396-6396", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="DefaultSerializationBinder.cs"];
m1_2813 [label="Bb b = new Bb()", span="6391-6391", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="DefaultSerializationBinder.cs"];
m1_2816 [label="a.no = int.MaxValue", span="6394-6394", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="DefaultSerializationBinder.cs"];
m1_2815 [label="Aa a = b", span="6393-6393", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="DefaultSerializationBinder.cs"];
m1_2814 [label="b.no = true", span="6392-6392", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="DefaultSerializationBinder.cs"];
m1_2821 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", span="6389-6389", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="DefaultSerializationBinder.cs"];
m1_1164 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", span="2379-2379", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="DefaultSerializationBinder.cs"];
m1_1168 [label="RequiredMembersClass c2 = JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="2398-2398", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="DefaultSerializationBinder.cs"];
m1_1169 [label="Assert.AreEqual(''Bob'', c2.FirstName)", span="2400-2400", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="DefaultSerializationBinder.cs"];
m1_1170 [label="Assert.AreEqual(new DateTime(2000, 12, 20, 10, 55, 55, DateTimeKind.Utc), c2.BirthDate)", span="2401-2401", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="DefaultSerializationBinder.cs"];
m1_1166 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="2389-2389", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="DefaultSerializationBinder.cs"];
m1_1167 [label="StringAssert.AreEqual(@''{\r\n  ''''FirstName'''': ''''Bob'''',\r\n  ''''MiddleName'''': ''''Cosmo'''',\r\n  ''''LastName'''': ''''Smith'''',\r\n  ''''BirthDate'''': ''''2000-12-20T10:55:55Z''''\r\n}'', json)", span="2391-2396", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="DefaultSerializationBinder.cs"];
m1_1165 [label="RequiredMembersClass c = new RequiredMembersClass()\r\n            {\r\n                BirthDate = new DateTime(2000, 12, 20, 10, 55, 55, DateTimeKind.Utc),\r\n                FirstName = ''Bob'',\r\n                LastName = ''Smith'',\r\n                MiddleName = ''Cosmo''\r\n            }", span="2381-2387", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="DefaultSerializationBinder.cs"];
m1_1171 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", span="2379-2379", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="DefaultSerializationBinder.cs"];
m1_2564 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", span="5811-5811", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", file="DefaultSerializationBinder.cs"];
m1_2566 [label="Categories = new List<string>()", span="5814-5814", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", file="DefaultSerializationBinder.cs"];
m1_2565 [label="Title = title", span="5813-5813", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", file="DefaultSerializationBinder.cs"];
m1_2567 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", span="5811-5811", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", file="DefaultSerializationBinder.cs"];
m1_645 [label="Entry Unk.WriteObject", span="", cluster="Unk.WriteObject", file="DefaultSerializationBinder.cs"];
m1_1106 [label="Entry Newtonsoft.Json.Tests.TestObjects.GenericImpl.GenericImpl()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.GenericImpl.GenericImpl()", file="DefaultSerializationBinder.cs"];
m1_2713 [label="Entry Newtonsoft.Json.JsonTextWriter.Flush()", span="141-141", cluster="Newtonsoft.Json.JsonTextWriter.Flush()", file="DefaultSerializationBinder.cs"];
m1_3073 [label="Entry Newtonsoft.Json.Bson.BsonWriter.WriteStartArray()", span="143-143", cluster="Newtonsoft.Json.Bson.BsonWriter.WriteStartArray()", file="DefaultSerializationBinder.cs"];
m1_158 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="DefaultSerializationBinder.cs"];
m1_1773 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", span="3868-3868", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="DefaultSerializationBinder.cs"];
m1_1775 [label="string json = JsonConvert.SerializeObject(value, Formatting.Indented)", span="3871-3871", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="DefaultSerializationBinder.cs"];
m1_1776 [label="StringAssert.AreEqual(@''{\r\n  ''''B2'''': null,\r\n  ''''A1'''': null,\r\n  ''''B3'''': null,\r\n  ''''A2'''': null\r\n}'', json)", span="3873-3878", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="DefaultSerializationBinder.cs"];
m1_1774 [label="B value = new B()", span="3870-3870", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="DefaultSerializationBinder.cs"];
m1_1777 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", span="3868-3868", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="DefaultSerializationBinder.cs"];
m1_1340 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", span="2807-2807", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="DefaultSerializationBinder.cs"];
m1_1342 [label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonPropertyWithHandlingValues o = new JsonPropertyWithHandlingValues();\r\n                o.ReferenceLoopHandlingErrorProperty = o;\r\n\r\n                JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings { ReferenceLoopHandling = ReferenceLoopHandling.Ignore });\r\n            }, ''Self referencing loop detected for property 'ReferenceLoopHandlingErrorProperty' with type ''' + classRef + '''. Path ''.'')", span="2811-2817", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="DefaultSerializationBinder.cs"];
m1_1341 [label="string classRef = typeof(JsonPropertyWithHandlingValues).FullName", span="2809-2809", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="DefaultSerializationBinder.cs"];
m1_1343 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", span="2807-2807", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="DefaultSerializationBinder.cs"];
m1_1180 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", span="2422-2422", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="DefaultSerializationBinder.cs"];
m1_1182 [label="JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="2433-2433", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="DefaultSerializationBinder.cs"];
m1_1181 [label="string json = @''{\r\n  ''''FirstName'''': null,\r\n  ''''MiddleName'''': null,\r\n  ''''LastName'''': null,\r\n  ''''BirthDate'''': ''''\/Date(977309755000)\/''''\r\n}''", span="2426-2431", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="DefaultSerializationBinder.cs"];
m1_1183 [label="Assert.Fail()", span="2434-2434", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="DefaultSerializationBinder.cs"];
m1_1184 [label=JsonSerializationException, span="2436-2436", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="DefaultSerializationBinder.cs"];
m1_1185 [label="Assert.IsTrue(ex.Message.StartsWith(''Required property 'FirstName' expects a value but got null. Path ''''))", span="2438-2438", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="DefaultSerializationBinder.cs"];
m1_1186 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", span="2422-2422", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="DefaultSerializationBinder.cs"];
m1_22 [label="Entry lambda expression", span="117-117", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_2116 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.PosConverter()", span="4756-4756", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.PosConverter()", file="DefaultSerializationBinder.cs"];
m1_3368 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", span="7674-7674", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="DefaultSerializationBinder.cs"];
m1_3369 [label="IList<object> dates = new List<object>\r\n            {\r\n                new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc),\r\n                new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1))\r\n            }", span="7676-7680", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="DefaultSerializationBinder.cs"];
m1_3371 [label="StringAssert.AreEqual(@''[\r\n  ''''2000 p.m.'''',\r\n  ''''2000 p.m.''''\r\n]'', json)", span="7688-7691", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="DefaultSerializationBinder.cs"];
m1_3370 [label="string json = JsonConvert.SerializeObject(dates, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateFormatString = ''yyyy tt'',\r\n                Culture = new CultureInfo(''en-NZ'')\r\n            })", span="7682-7686", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="DefaultSerializationBinder.cs"];
m1_3372 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", span="7674-7674", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="DefaultSerializationBinder.cs"];
m1_67 [label="return type.FullName;", span="199-199", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.GetTypeId(System.Type, bool)", file="DefaultSerializationBinder.cs"];
m1_1835 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", span="4097-4097", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", file="DefaultSerializationBinder.cs"];
m1_1836 [label="_innerDictionary.Add(key, value)", span="4099-4099", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", file="DefaultSerializationBinder.cs"];
m1_1837 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", span="4097-4097", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", file="DefaultSerializationBinder.cs"];
m1_560 [label="Entry System.IO.StreamWriter.StreamWriter(System.IO.Stream)", span="0-0", cluster="System.IO.StreamWriter.StreamWriter(System.IO.Stream)", file="DefaultSerializationBinder.cs"];
m1_571 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.ToString()", span="1135-1135", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.ToString()", file="DefaultSerializationBinder.cs"];
m1_572 [label="return _name + '' '' + _number;", span="1137-1137", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.ToString()", file="DefaultSerializationBinder.cs"];
m1_573 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.ToString()", span="1135-1135", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.ToString()", file="DefaultSerializationBinder.cs"];
m1_1875 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="DefaultSerializationBinder.cs"];
m1_1649 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", span="3473-3473", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="DefaultSerializationBinder.cs"];
m1_1656 [label="Foo newFoo = JsonConvert.DeserializeObject<Foo>(json)", span="3489-3489", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="DefaultSerializationBinder.cs"];
m1_1657 [label="Assert.AreEqual(3, newFoo.Bars.Count)", span="3490-3490", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="DefaultSerializationBinder.cs"];
m1_1658 [label="Assert.AreEqual(0, newFoo.Bars[0].Id)", span="3491-3491", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="DefaultSerializationBinder.cs"];
m1_1659 [label="Assert.AreEqual(1, newFoo.Bars[1].Id)", span="3492-3492", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="DefaultSerializationBinder.cs"];
m1_1660 [label="Assert.AreEqual(2, newFoo.Bars[2].Id)", span="3493-3493", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="DefaultSerializationBinder.cs"];
m1_1654 [label="string json = JsonConvert.SerializeObject(f, Formatting.Indented)", span="3480-3480", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="DefaultSerializationBinder.cs"];
m1_1655 [label="StringAssert.AreEqual(@''{\r\n  ''''Bars'''': [\r\n    0,\r\n    1,\r\n    2\r\n  ]\r\n}'', json)", span="3481-3487", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="DefaultSerializationBinder.cs"];
m1_1650 [label="Foo f = new Foo()", span="3475-3475", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="DefaultSerializationBinder.cs"];
m1_1653 [label="f.Bars.Add(new Bar { Id = 2 })", span="3478-3478", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="DefaultSerializationBinder.cs"];
m1_1651 [label="f.Bars.Add(new Bar { Id = 0 })", span="3476-3476", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="DefaultSerializationBinder.cs"];
m1_1652 [label="f.Bars.Add(new Bar { Id = 1 })", span="3477-3477", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="DefaultSerializationBinder.cs"];
m1_1661 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", span="3473-3473", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="DefaultSerializationBinder.cs"];
m1_1928 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="4230-4230", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DefaultSerializationBinder.cs"];
m1_1929 [label="info.AddValue(''stringValue'', _stringValue)", span="4232-4232", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DefaultSerializationBinder.cs"];
m1_1930 [label="info.AddValue(''intValue'', _intValue)", span="4233-4233", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DefaultSerializationBinder.cs"];
m1_1931 [label="info.AddValue(''dateTimeOffsetValue'', _dateTimeOffsetValue)", span="4234-4234", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DefaultSerializationBinder.cs"];
m1_1932 [label="info.AddValue(''personValue'', _personValue)", span="4235-4235", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DefaultSerializationBinder.cs"];
m1_1933 [label="info.AddValue(''nullPersonValue'', _nullPersonValue)", span="4236-4236", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DefaultSerializationBinder.cs"];
m1_1935 [label="info.AddValue(''booleanValue'', _booleanValue)", span="4239-4239", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DefaultSerializationBinder.cs"];
m1_1936 [label="info.AddValue(''byteValue'', _byteValue)", span="4240-4240", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DefaultSerializationBinder.cs"];
m1_1937 [label="info.AddValue(''charValue'', _charValue)", span="4241-4241", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DefaultSerializationBinder.cs"];
m1_1938 [label="info.AddValue(''dateTimeValue'', _dateTimeValue)", span="4242-4242", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DefaultSerializationBinder.cs"];
m1_1939 [label="info.AddValue(''decimalValue'', _decimalValue)", span="4243-4243", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DefaultSerializationBinder.cs"];
m1_1940 [label="info.AddValue(''shortValue'', _shortValue)", span="4244-4244", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DefaultSerializationBinder.cs"];
m1_1941 [label="info.AddValue(''longValue'', _longValue)", span="4245-4245", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DefaultSerializationBinder.cs"];
m1_1942 [label="info.AddValue(''sbyteValue'', _sbyteValue)", span="4246-4246", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DefaultSerializationBinder.cs"];
m1_1943 [label="info.AddValue(''floatValue'', _floatValue)", span="4247-4247", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DefaultSerializationBinder.cs"];
m1_1944 [label="info.AddValue(''ushortValue'', _ushortValue)", span="4248-4248", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DefaultSerializationBinder.cs"];
m1_1945 [label="info.AddValue(''uintValue'', _uintValue)", span="4249-4249", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DefaultSerializationBinder.cs"];
m1_1946 [label="info.AddValue(''ulongValue'', _ulongValue)", span="4250-4250", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DefaultSerializationBinder.cs"];
m1_1934 [label="info.AddValue(''nullableInt'', null)", span="4237-4237", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DefaultSerializationBinder.cs"];
m1_1947 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="4230-4230", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DefaultSerializationBinder.cs"];
m1_2658 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", span="6088-6088", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", file="DefaultSerializationBinder.cs"];
m1_2659 [label="Exceptions = new List<Exception>()", span="6090-6090", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", file="DefaultSerializationBinder.cs"];
m1_2660 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", span="6088-6088", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", file="DefaultSerializationBinder.cs"];
m1_1149 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", span="2357-2357", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="DefaultSerializationBinder.cs"];
m1_1154 [label="TypeClass typeClass2 = JsonConvert.DeserializeObject<TypeClass>(json)", span="2365-2365", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="DefaultSerializationBinder.cs"];
m1_1160 [label="typeClass2 = JsonConvert.DeserializeObject<TypeClass>(json)", span="2374-2374", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="DefaultSerializationBinder.cs"];
m1_1153 [label="Assert.AreEqual(@''{''''TypeProperty'''':'''''' + boolRef + @''''''}'', json)", span="2363-2363", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="DefaultSerializationBinder.cs"];
m1_1155 [label="Assert.AreEqual(typeof(bool), typeClass2.TypeProperty)", span="2366-2366", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="DefaultSerializationBinder.cs"];
m1_1159 [label="Assert.AreEqual(@''{''''TypeProperty'''':'''''' + jsonSerializerTestRef + @''''''}'', json)", span="2372-2372", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="DefaultSerializationBinder.cs"];
m1_1161 [label="Assert.AreEqual(typeof(JsonSerializerTest), typeClass2.TypeProperty)", span="2375-2375", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="DefaultSerializationBinder.cs"];
m1_1152 [label="string json = JsonConvert.SerializeObject(typeClass)", span="2362-2362", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="DefaultSerializationBinder.cs"];
m1_1158 [label="json = JsonConvert.SerializeObject(typeClass)", span="2371-2371", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="DefaultSerializationBinder.cs"];
m1_1150 [label="string boolRef = typeof(bool).AssemblyQualifiedName", span="2359-2359", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="DefaultSerializationBinder.cs"];
m1_1156 [label="string jsonSerializerTestRef = typeof(JsonSerializerTest).AssemblyQualifiedName", span="2368-2368", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="DefaultSerializationBinder.cs"];
m1_1151 [label="TypeClass typeClass = new TypeClass { TypeProperty = typeof(bool) }", span="2360-2360", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="DefaultSerializationBinder.cs"];
m1_1157 [label="typeClass = new TypeClass { TypeProperty = typeof(JsonSerializerTest) }", span="2369-2369", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="DefaultSerializationBinder.cs"];
m1_1162 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", span="2357-2357", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="DefaultSerializationBinder.cs"];
m1_3076 [label="Entry Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream)", span="125-125", cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream)", file="DefaultSerializationBinder.cs"];
m1_3617 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToString(System.IFormatProvider)", span="8292-8292", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToString(System.IFormatProvider)", file="DefaultSerializationBinder.cs"];
m1_3618 [label="throw new InvalidCastException();", span="8294-8294", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToString(System.IFormatProvider)", file="DefaultSerializationBinder.cs"];
m1_3619 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToString(System.IFormatProvider)", span="8292-8292", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToString(System.IFormatProvider)", file="DefaultSerializationBinder.cs"];
m1_3378 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", span="7715-7715", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="DefaultSerializationBinder.cs"];
m1_3385 [label="Assert.AreEqual(CultureInfo.InvariantCulture, jsonWriter.Culture)", span="7735-7735", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="DefaultSerializationBinder.cs"];
m1_3386 [label="Assert.AreEqual(Formatting.None, jsonWriter.Formatting)", span="7736-7736", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="DefaultSerializationBinder.cs"];
m1_3381 [label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="7724-7724", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="DefaultSerializationBinder.cs"];
m1_3384 [label="Assert.IsNull(jsonWriter.DateFormatString)", span="7734-7734", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="DefaultSerializationBinder.cs"];
m1_3387 [label="string json = sw.ToString()", span="7738-7738", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="DefaultSerializationBinder.cs"];
m1_3379 [label="IList<object> dates = new List<object>\r\n            {\r\n                new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc),\r\n                new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1))\r\n            }", span="7717-7721", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="DefaultSerializationBinder.cs"];
m1_3380 [label="StringWriter sw = new StringWriter()", span="7723-7723", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="DefaultSerializationBinder.cs"];
m1_3382 [label="JsonSerializer serializer = JsonSerializer.Create(new JsonSerializerSettings\r\n            {\r\n                DateFormatString = ''yyyy tt'',\r\n                Culture = new CultureInfo(''en-NZ''),\r\n                Formatting = Formatting.Indented\r\n            })", span="7726-7731", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="DefaultSerializationBinder.cs"];
m1_3383 [label="serializer.Serialize(jsonWriter, dates)", span="7732-7732", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="DefaultSerializationBinder.cs"];
m1_3388 [label="StringAssert.AreEqual(@''[\r\n  ''''2000 p.m.'''',\r\n  ''''2000 p.m.''''\r\n]'', json)", span="7740-7743", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="DefaultSerializationBinder.cs"];
m1_3389 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", span="7715-7715", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="DefaultSerializationBinder.cs"];
m1_1518 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", span="3231-3231", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", file="DefaultSerializationBinder.cs"];
m1_1520 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<Dictionary<string, string>>(json); }, @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'System.Collections.Generic.Dictionary`2[System.String,System.String]' because the type requires a JSON object (e.g. {''''name'''':''''value''''}) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON object (e.g. {''''name'''':''''value''''}) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'')", span="3235-3237", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", file="DefaultSerializationBinder.cs"];
m1_1519 [label="string json = @''[]''", span="3233-3233", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", file="DefaultSerializationBinder.cs"];
m1_1521 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", span="3231-3231", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", file="DefaultSerializationBinder.cs"];
m1_120 [label="CurrentSchema.Enum = new List<JToken>()", span="299-299", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.GenerateInternal(System.Type, Newtonsoft.Json.Required, bool)", file="DefaultSerializationBinder.cs"];
m1_155 [label="Assert.AreEqual(input.Message, deserialized.Message)", span="472-472", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="DefaultSerializationBinder.cs"];
m1_2584 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", span="5854-5854", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="DefaultSerializationBinder.cs"];
m1_2590 [label="NonDefaultConstructorWithReadOnlyDictionaryProperty c2 = JsonConvert.DeserializeObject<NonDefaultConstructorWithReadOnlyDictionaryProperty>(json)", span="5869-5869", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="DefaultSerializationBinder.cs"];
m1_2591 [label="Assert.AreEqual(c1.Title, c2.Title)", span="5870-5870", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="DefaultSerializationBinder.cs"];
m1_2592 [label="Assert.AreEqual(c1.Categories.Count, c2.Categories.Count)", span="5871-5871", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="DefaultSerializationBinder.cs"];
m1_2593 [label="Assert.AreEqual(1, c2.Categories[''one''])", span="5872-5872", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="DefaultSerializationBinder.cs"];
m1_2594 [label="Assert.AreEqual(2, c2.Categories[''two''])", span="5873-5873", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="DefaultSerializationBinder.cs"];
m1_2588 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="5860-5860", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="DefaultSerializationBinder.cs"];
m1_2589 [label="StringAssert.AreEqual(@''{\r\n  ''''Title'''': ''''blah'''',\r\n  ''''Categories'''': {\r\n    ''''one'''': 1,\r\n    ''''two'''': 2\r\n  }\r\n}'', json)", span="5861-5867", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="DefaultSerializationBinder.cs"];
m1_2585 [label="NonDefaultConstructorWithReadOnlyDictionaryProperty c1 = new NonDefaultConstructorWithReadOnlyDictionaryProperty(''blah'')", span="5856-5856", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="DefaultSerializationBinder.cs"];
m1_2587 [label="c1.Categories.Add(''two'', 2)", span="5858-5858", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="DefaultSerializationBinder.cs"];
m1_2586 [label="c1.Categories.Add(''one'', 1)", span="5857-5857", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="DefaultSerializationBinder.cs"];
m1_2595 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", span="5854-5854", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="DefaultSerializationBinder.cs"];
m1_269 [label="Entry Newtonsoft.Json.Serialization.DefaultSerializationBinder.DefaultSerializationBinder()", span="36-36", cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.DefaultSerializationBinder()", file="DefaultSerializationBinder.cs"];
m1_276 [label="Entry Newtonsoft.Json.Serialization.MemoryTraceWriter.MemoryTraceWriter()", span="29-29", cluster="Newtonsoft.Json.Serialization.MemoryTraceWriter.MemoryTraceWriter()", file="DefaultSerializationBinder.cs"];
m1_565 [label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0", cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="DefaultSerializationBinder.cs"];
m1_2022 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", span="4504-4504", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="DefaultSerializationBinder.cs"];
m1_2023 [label="AA myA = JsonConvert.DeserializeObject<AA>(\r\n                @''{\r\n  ''''AA_field1'''': 2,\r\n  ''''AA_field2'''': 2,\r\n  ''''AA_property1'''': 2,\r\n  ''''AA_property2'''': 2,\r\n  ''''AA_property3'''': 2,\r\n  ''''AA_property4'''': 2,\r\n  ''''AA_property5'''': 2,\r\n  ''''AA_property6'''': 2\r\n}'')", span="4506-4516", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="DefaultSerializationBinder.cs"];
m1_2032 [label="BB myB = JsonConvert.DeserializeObject<BB>(\r\n                @''{\r\n  ''''BB_field1'''': 4,\r\n  ''''BB_field2'''': 4,\r\n  ''''AA_field1'''': 3,\r\n  ''''AA_field2'''': 3,\r\n  ''''AA_property1'''': 2,\r\n  ''''AA_property2'''': 2,\r\n  ''''AA_property3'''': 2,\r\n  ''''AA_property4'''': 2,\r\n  ''''AA_property5'''': 2,\r\n  ''''AA_property6'''': 2,\r\n  ''''BB_property1'''': 3,\r\n  ''''BB_property2'''': 3,\r\n  ''''BB_property3'''': 3,\r\n  ''''BB_property4'''': 3,\r\n  ''''BB_property5'''': 3,\r\n  ''''BB_property6'''': 3,\r\n  ''''BB_property7'''': 3,\r\n  ''''BB_property8'''': 3\r\n}'')", span="4527-4547", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="DefaultSerializationBinder.cs"];
m1_2024 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetField(''AA_field1'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="4518-4518", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="DefaultSerializationBinder.cs"];
m1_2025 [label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetField(''AA_field2'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="4519-4519", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="DefaultSerializationBinder.cs"];
m1_2026 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property1'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="4520-4520", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="DefaultSerializationBinder.cs"];
m1_2027 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property2'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="4521-4521", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="DefaultSerializationBinder.cs"];
m1_2028 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property3'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="4522-4522", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="DefaultSerializationBinder.cs"];
m1_2029 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property4'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="4523-4523", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="DefaultSerializationBinder.cs"];
m1_2030 [label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property5'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="4524-4524", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="DefaultSerializationBinder.cs"];
m1_2031 [label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property6'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="4525-4525", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="DefaultSerializationBinder.cs"];
m1_2033 [label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(AA).GetField(''AA_field1'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="4549-4549", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="DefaultSerializationBinder.cs"];
m1_2034 [label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetField(''AA_field2'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="4550-4550", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="DefaultSerializationBinder.cs"];
m1_2035 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property1'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="4551-4551", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="DefaultSerializationBinder.cs"];
m1_2036 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property2'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="4552-4552", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="DefaultSerializationBinder.cs"];
m1_2037 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property3'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="4553-4553", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="DefaultSerializationBinder.cs"];
m1_2038 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property4'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="4554-4554", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="DefaultSerializationBinder.cs"];
m1_2039 [label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property5'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="4555-4555", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="DefaultSerializationBinder.cs"];
m1_2040 [label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property6'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="4556-4556", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="DefaultSerializationBinder.cs"];
m1_2041 [label="Assert.AreEqual(4, myB.BB_field1)", span="4558-4558", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="DefaultSerializationBinder.cs"];
m1_2042 [label="Assert.AreEqual(4, myB.BB_field2)", span="4559-4559", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="DefaultSerializationBinder.cs"];
m1_2043 [label="Assert.AreEqual(3, myB.BB_property1)", span="4560-4560", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="DefaultSerializationBinder.cs"];
m1_2044 [label="Assert.AreEqual(3, myB.BB_property2)", span="4561-4561", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="DefaultSerializationBinder.cs"];
m1_2045 [label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property3'', BindingFlags.Instance | BindingFlags.Public), myB))", span="4562-4562", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="DefaultSerializationBinder.cs"];
m1_2046 [label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property4'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="4563-4563", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="DefaultSerializationBinder.cs"];
m1_2047 [label="Assert.AreEqual(0, myB.BB_property5)", span="4564-4564", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="DefaultSerializationBinder.cs"];
m1_2048 [label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property6'', BindingFlags.Instance | BindingFlags.Public), myB))", span="4565-4565", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="DefaultSerializationBinder.cs"];
m1_2049 [label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property7'', BindingFlags.Instance | BindingFlags.Public), myB))", span="4566-4566", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="DefaultSerializationBinder.cs"];
m1_2050 [label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property8'', BindingFlags.Instance | BindingFlags.Public), myB))", span="4567-4567", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="DefaultSerializationBinder.cs"];
m1_2051 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", span="4504-4504", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="DefaultSerializationBinder.cs"];
m1_464 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", span="971-971", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", file="DefaultSerializationBinder.cs"];
m1_467 [label="Assert.IsTrue(MathUtils.ApproxEquals(1E+38, (double)o))", span="977-977", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", file="DefaultSerializationBinder.cs"];
m1_466 [label="CustomAssert.IsInstanceOfType(typeof(double), o)", span="975-975", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", file="DefaultSerializationBinder.cs"];
m1_465 [label="object o = JsonConvert.DeserializeObject(''100000000000000000000000000000000000000.0'')", span="973-973", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", file="DefaultSerializationBinder.cs"];
m1_468 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", span="971-971", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", file="DefaultSerializationBinder.cs"];
m1_163 [label="Assert.AreEqual(input.Data, deserialized.Data)", span="489-489", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="DefaultSerializationBinder.cs"];
m1_183 [label="Assert.AreEqual(false, (bool)o[''B''])", span="528-528", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="DefaultSerializationBinder.cs"];
m1_184 [label="Assert.AreEqual(3, o[''C''].Count())", span="529-529", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="DefaultSerializationBinder.cs"];
m1_65 [label=UndefinedSchemaIdHandling, span="196-196", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.GetTypeId(System.Type, bool)", file="DefaultSerializationBinder.cs"];
m1_3028 [label="Entry Newtonsoft.Json.Tests.TestObjects.MetroStringConverter.MetroStringConverter()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.MetroStringConverter.MetroStringConverter()", file="DefaultSerializationBinder.cs"];
m1_3605 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt32(System.IFormatProvider)", span="8272-8272", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt32(System.IFormatProvider)", file="DefaultSerializationBinder.cs"];
m1_3606 [label="return Value;", span="8274-8274", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt32(System.IFormatProvider)", file="DefaultSerializationBinder.cs"];
m1_3607 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt32(System.IFormatProvider)", span="8272-8272", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt32(System.IFormatProvider)", file="DefaultSerializationBinder.cs"];
m1_1270 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", span="2645-2645", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="DefaultSerializationBinder.cs"];
m1_1272 [label="PropertyCase o = JsonConvert.DeserializeObject<PropertyCase>(json)", span="2654-2654", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="DefaultSerializationBinder.cs"];
m1_1274 [label="Assert.AreEqual(''firstName'', o.firstName)", span="2657-2657", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="DefaultSerializationBinder.cs"];
m1_1275 [label="Assert.AreEqual(''FirstName'', o.FirstName)", span="2658-2658", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="DefaultSerializationBinder.cs"];
m1_1276 [label="Assert.AreEqual(''LastName'', o.LastName)", span="2659-2659", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="DefaultSerializationBinder.cs"];
m1_1277 [label="Assert.AreEqual(''lastName'', o.lastName)", span="2660-2660", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="DefaultSerializationBinder.cs"];
m1_1271 [label="string json = @''{\r\n  ''''firstName'''': ''''firstName'''',\r\n  ''''FirstName'''': ''''FirstName'''',\r\n  ''''LastName'''': ''''LastName'''',\r\n  ''''lastName'''': ''''lastName'''',\r\n}''", span="2647-2652", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="DefaultSerializationBinder.cs"];
m1_1273 [label="Assert.IsNotNull(o)", span="2655-2655", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="DefaultSerializationBinder.cs"];
m1_1278 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", span="2645-2645", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="DefaultSerializationBinder.cs"];
m1_1074 [label="Entry Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.JavaScriptDateTimeConverter()", span="34-34", cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.JavaScriptDateTimeConverter()", file="DefaultSerializationBinder.cs"];
m1_909 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", span="1924-1924", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="DefaultSerializationBinder.cs"];
m1_914 [label="Assert.AreEqual(''hello'', wibble.Foo)", span="1933-1933", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="DefaultSerializationBinder.cs"];
m1_915 [label="Assert.AreEqual(1, wibble.Bar.Count)", span="1935-1935", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="DefaultSerializationBinder.cs"];
m1_913 [label="ClassWithArray wibble = (ClassWithArray)s.Deserialize(new StringReader(json), typeof(ClassWithArray))", span="1931-1931", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="DefaultSerializationBinder.cs"];
m1_910 [label="string json = ''{bar:[1,2,3], foo:'hello'}''", span="1926-1926", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="DefaultSerializationBinder.cs"];
m1_911 [label="JsonSerializer s = new JsonSerializer()", span="1928-1928", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="DefaultSerializationBinder.cs"];
m1_912 [label="s.ObjectCreationHandling = ObjectCreationHandling.Replace", span="1929-1929", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="DefaultSerializationBinder.cs"];
m1_916 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", span="1924-1924", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="DefaultSerializationBinder.cs"];
m1_1320 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", span="2766-2766", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="DefaultSerializationBinder.cs"];
m1_1326 [label="string json = JsonConvert.SerializeObject(o, Formatting.Indented)", span="2774-2774", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="DefaultSerializationBinder.cs"];
m1_1327 [label="StringAssert.AreEqual(@''{\r\n  ''''DefaultValueHandlingIncludeProperty'''': ''''Default!'''',\r\n  ''''DefaultValueHandlingPopulateProperty'''': ''''Default!'''',\r\n  ''''NullValueHandlingIncludeProperty'''': null,\r\n  ''''ReferenceLoopHandlingErrorProperty'''': null,\r\n  ''''ReferenceLoopHandlingIgnoreProperty'''': null,\r\n  ''''ReferenceLoopHandlingSerializeProperty'''': null\r\n}'', json)", span="2776-2783", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="DefaultSerializationBinder.cs"];
m1_1329 [label="StringAssert.AreEqual(@''{\r\n  ''''DefaultValueHandlingIncludeProperty'''': ''''Default!'''',\r\n  ''''DefaultValueHandlingPopulateProperty'''': ''''Default!'''',\r\n  ''''NullValueHandlingIncludeProperty'''': null\r\n}'', json)", span="2787-2791", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="DefaultSerializationBinder.cs"];
m1_1328 [label="json = JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings { NullValueHandling = NullValueHandling.Ignore })", span="2785-2785", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="DefaultSerializationBinder.cs"];
m1_1321 [label="JsonPropertyWithHandlingValues o = new JsonPropertyWithHandlingValues()", span="2768-2768", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="DefaultSerializationBinder.cs"];
m1_1325 [label="o.DefaultValueHandlingIgnoreAndPopulateProperty = ''Default!''", span="2772-2772", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="DefaultSerializationBinder.cs"];
m1_1322 [label="o.DefaultValueHandlingIgnoreProperty = ''Default!''", span="2769-2769", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="DefaultSerializationBinder.cs"];
m1_1323 [label="o.DefaultValueHandlingIncludeProperty = ''Default!''", span="2770-2770", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="DefaultSerializationBinder.cs"];
m1_1324 [label="o.DefaultValueHandlingPopulateProperty = ''Default!''", span="2771-2771", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="DefaultSerializationBinder.cs"];
m1_1330 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", span="2766-2766", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="DefaultSerializationBinder.cs"];
m1_1954 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, long)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, long)", file="DefaultSerializationBinder.cs"];
m1_1026 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", span="536-536", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", file="DefaultSerializationBinder.cs"];
m1_831 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="DefaultSerializationBinder.cs"];
m1_462 [label="Entry Newtonsoft.Json.Tests.TestObjects.PersonReference.PersonReference()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.PersonReference.PersonReference()", file="DefaultSerializationBinder.cs"];
m1_3258 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", span="7354-7354", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="DefaultSerializationBinder.cs"];
m1_3259 [label="IList<Uri> uris = JsonConvert.DeserializeObject<IList<Uri>>(@''[''''http://localhost/path?query#hash'''']'')", span="7356-7356", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="DefaultSerializationBinder.cs"];
m1_3262 [label="Uri uri = JsonConvert.DeserializeObject<Uri>(@''''''http://localhost/path?query#hash'''''')", span="7360-7360", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="DefaultSerializationBinder.cs"];
m1_3267 [label="uri = JsonConvert.DeserializeObject<Uri>(@''''''/path?query#hash'''''')", span="7367-7367", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="DefaultSerializationBinder.cs"];
m1_3260 [label="Assert.AreEqual(1, uris.Count)", span="7357-7357", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="DefaultSerializationBinder.cs"];
m1_3261 [label="Assert.AreEqual(new Uri(''http://localhost/path?query#hash''), uris[0])", span="7358-7358", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="DefaultSerializationBinder.cs"];
m1_3266 [label="Assert.AreEqual(i1, i2)", span="7365-7365", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="DefaultSerializationBinder.cs"];
m1_3269 [label="Assert.AreEqual(new Uri(''/path?query#hash'', UriKind.RelativeOrAbsolute), uri)", span="7369-7369", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="DefaultSerializationBinder.cs"];
m1_3263 [label="Assert.IsNotNull(uri)", span="7361-7361", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="DefaultSerializationBinder.cs"];
m1_3268 [label="Assert.IsNotNull(uri)", span="7368-7368", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="DefaultSerializationBinder.cs"];
m1_3264 [label="Uri i1 = new Uri(''http://localhost/path?query#hash'', UriKind.RelativeOrAbsolute)", span="7363-7363", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="DefaultSerializationBinder.cs"];
m1_3265 [label="Uri i2 = new Uri(''http://localhost/path?query#hash'')", span="7364-7364", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="DefaultSerializationBinder.cs"];
m1_3270 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", span="7354-7354", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="DefaultSerializationBinder.cs"];
m1_854 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", span="1832-1832", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="DefaultSerializationBinder.cs"];
m1_857 [label="Assert.AreEqual(@''{''''StringValue'''':''''I am a string'''',''''IntValue'''':2147483647,''''NestedAnonymous'''':{''''NestedValue'''':255},''''NestedArray'''':[1,2],''''Product'''':{''''Name'''':''''TestProduct'''',''''ExpiryDate'''':''''2000-01-01T00:00:00Z'''',''''Price'''':0.0,''''Sizes'''':null}}'', json)", span="1845-1845", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="DefaultSerializationBinder.cs"];
m1_859 [label="Assert.AreEqual(''I am a string'', anonymous.StringValue)", span="1848-1848", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="DefaultSerializationBinder.cs"];
m1_860 [label="Assert.AreEqual(int.MaxValue, anonymous.IntValue)", span="1849-1849", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="DefaultSerializationBinder.cs"];
m1_861 [label="Assert.AreEqual(255, anonymous.NestedAnonymous.NestedValue)", span="1850-1850", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="DefaultSerializationBinder.cs"];
m1_862 [label="Assert.AreEqual(2, anonymous.NestedArray.Length)", span="1851-1851", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="DefaultSerializationBinder.cs"];
m1_863 [label="Assert.AreEqual(1, anonymous.NestedArray[0])", span="1852-1852", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="DefaultSerializationBinder.cs"];
m1_864 [label="Assert.AreEqual(2, anonymous.NestedArray[1])", span="1853-1853", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="DefaultSerializationBinder.cs"];
m1_865 [label="Assert.AreEqual(''TestProduct'', anonymous.Product.Name)", span="1854-1854", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="DefaultSerializationBinder.cs"];
m1_856 [label="string json = JsonConvert.SerializeObject(anonymous)", span="1844-1844", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="DefaultSerializationBinder.cs"];
m1_858 [label="anonymous = JsonConvert.DeserializeAnonymousType(json, anonymous)", span="1847-1847", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="DefaultSerializationBinder.cs"];
m1_855 [label="var anonymous =\r\n                new\r\n                {\r\n                    StringValue = ''I am a string'',\r\n                    IntValue = int.MaxValue,\r\n                    NestedAnonymous = new { NestedValue = byte.MaxValue },\r\n                    NestedArray = new[] { 1, 2 },\r\n                    Product = new Product() { Name = ''TestProduct'' }\r\n                }", span="1834-1842", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="DefaultSerializationBinder.cs"];
m1_866 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", span="1832-1832", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="DefaultSerializationBinder.cs"];
m1_2195 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", span="4882-4882", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="DefaultSerializationBinder.cs"];
m1_2197 [label="ConstructorCompexIgnoredProperty cc = JsonConvert.DeserializeObject<ConstructorCompexIgnoredProperty>(json)", span="4886-4886", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="DefaultSerializationBinder.cs"];
m1_2198 [label="Assert.AreEqual(''First'', cc.First)", span="4887-4887", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="DefaultSerializationBinder.cs"];
m1_2199 [label="Assert.AreEqual(2, cc.Second)", span="4888-4888", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="DefaultSerializationBinder.cs"];
m1_2200 [label="Assert.AreEqual(null, cc.Ignored)", span="4889-4889", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="DefaultSerializationBinder.cs"];
m1_2196 [label="string json = @''{''''First'''':''''First'''',''''Second'''':2,''''Ignored'''':{''''Name'''':''''James''''},''''AdditionalContent'''':{''''LOL'''':true}}''", span="4884-4884", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="DefaultSerializationBinder.cs"];
m1_2201 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", span="4882-4882", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="DefaultSerializationBinder.cs"];
m1_149 [label="Entry Newtonsoft.Json.JsonConverter.GetSchema()", span="69-69", cluster="Newtonsoft.Json.JsonConverter.GetSchema()", file="DefaultSerializationBinder.cs"];
m1_564 [label="Entry System.Diagnostics.Stopwatch.StartNew()", span="0-0", cluster="System.Diagnostics.Stopwatch.StartNew()", file="DefaultSerializationBinder.cs"];
m1_0 [label="Entry Newtonsoft.Json.Schema.JsonSchemaGenerator.TypeSchema.TypeSchema(System.Type, Newtonsoft.Json.Schema.JsonSchema)", span="68-68", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.TypeSchema.TypeSchema(System.Type, Newtonsoft.Json.Schema.JsonSchema)", file="DefaultSerializationBinder.cs"];
m1_1 [label="ValidationUtils.ArgumentNotNull(type, ''type'')", span="70-70", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.TypeSchema.TypeSchema(System.Type, Newtonsoft.Json.Schema.JsonSchema)", color=red, community=0, file="DefaultSerializationBinder.cs"];
m1_2 [label="ValidationUtils.ArgumentNotNull(schema, ''schema'')", span="71-71", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.TypeSchema.TypeSchema(System.Type, Newtonsoft.Json.Schema.JsonSchema)", color=green, community=0, file="DefaultSerializationBinder.cs"];
m1_3 [label="Type = type", span="73-73", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.TypeSchema.TypeSchema(System.Type, Newtonsoft.Json.Schema.JsonSchema)", color=green, community=0, file="DefaultSerializationBinder.cs"];
m1_4 [label="Schema = schema", span="74-74", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.TypeSchema.TypeSchema(System.Type, Newtonsoft.Json.Schema.JsonSchema)", color=green, community=0, file="DefaultSerializationBinder.cs"];
m1_5 [label="Exit Newtonsoft.Json.Schema.JsonSchemaGenerator.TypeSchema.TypeSchema(System.Type, Newtonsoft.Json.Schema.JsonSchema)", span="68-68", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.TypeSchema.TypeSchema(System.Type, Newtonsoft.Json.Schema.JsonSchema)", file="DefaultSerializationBinder.cs"];
m1_6 [label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", span="94-94", cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", file="DefaultSerializationBinder.cs"];
m1_2661 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", span="6096-6096", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="DefaultSerializationBinder.cs"];
m1_2667 [label="ClassWithException dex = JsonConvert.DeserializeObject<ClassWithException>(sex)", span="6108-6108", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="DefaultSerializationBinder.cs"];
m1_2670 [label="dex = JsonConvert.DeserializeObject<ClassWithException>(sex)", span="6113-6113", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="DefaultSerializationBinder.cs"];
m1_2668 [label="Assert.AreEqual(dex.Exceptions[0].ToString(), dex.Exceptions[0].ToString())", span="6109-6109", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="DefaultSerializationBinder.cs"];
m1_2671 [label="Assert.AreEqual(dex.Exceptions[0].ToString(), dex.Exceptions[0].ToString())", span="6114-6114", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="DefaultSerializationBinder.cs"];
m1_2666 [label="string sex = JsonConvert.SerializeObject(classWithException)", span="6107-6107", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="DefaultSerializationBinder.cs"];
m1_2669 [label="sex = JsonConvert.SerializeObject(classWithException, Formatting.Indented)", span="6111-6111", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="DefaultSerializationBinder.cs"];
m1_2662 [label="ClassWithException classWithException = new ClassWithException()", span="6098-6098", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="DefaultSerializationBinder.cs"];
m1_2663 [label="throw new Exception(''Test Exception'');", span="6101-6101", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="DefaultSerializationBinder.cs"];
m1_2665 [label="classWithException.Exceptions.Add(ex)", span="6105-6105", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="DefaultSerializationBinder.cs"];
m1_2664 [label=Exception, span="6103-6103", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="DefaultSerializationBinder.cs"];
m1_2672 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", span="6096-6096", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="DefaultSerializationBinder.cs"];
m1_2652 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", span="6066-6066", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="DefaultSerializationBinder.cs"];
m1_2654 [label="string json = JsonConvert.SerializeObject(d, Formatting.Indented)", span="6069-6069", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="DefaultSerializationBinder.cs"];
m1_2655 [label="StringAssert.AreEqual(@''{\r\n  ''''dinosaur'''': null,\r\n  ''''dog'''': null,\r\n  ''''cat'''': null,\r\n  ''''zebra'''': null,\r\n  ''''bird'''': null,\r\n  ''''parrot'''': null,\r\n  ''''albatross'''': null,\r\n  ''''antelope'''': null\r\n}'', json)", span="6071-6080", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="DefaultSerializationBinder.cs"];
m1_2653 [label="DerivedType d = new DerivedType()", span="6068-6068", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="DefaultSerializationBinder.cs"];
m1_2656 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", span="6066-6066", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="DefaultSerializationBinder.cs"];
m1_3398 [label="Entry System.Tuple.Create<T1, T2>(T1, T2)", span="0-0", cluster="System.Tuple.Create<T1, T2>(T1, T2)", file="DefaultSerializationBinder.cs"];
m1_148 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", span="441-441", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", file="DefaultSerializationBinder.cs"];
m1_3209 [label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.ConvertJavaScriptTicksToDateTime(long)", span="181-181", cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ConvertJavaScriptTicksToDateTime(long)", file="DefaultSerializationBinder.cs"];
m1_2117 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.PosDoubleConverter()", span="4779-4779", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.PosDoubleConverter()", file="DefaultSerializationBinder.cs"];
m1_2272 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTestClass.StringDictionaryTestClass()", span="5026-5026", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTestClass.StringDictionaryTestClass()", file="DefaultSerializationBinder.cs"];
m1_2094 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", span="4705-4705", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="DefaultSerializationBinder.cs"];
m1_2102 [label="XmlNodeTestObject newTestObject = JsonConvert.DeserializeObject<XmlNodeTestObject>(json)", span="4720-4720", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="DefaultSerializationBinder.cs"];
m1_2103 [label="Assert.AreEqual(testObject.Document.InnerXml, newTestObject.Document.InnerXml)", span="4721-4721", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="DefaultSerializationBinder.cs"];
m1_2099 [label="string json = JsonConvert.SerializeObject(testObject, Formatting.Indented)", span="4712-4712", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="DefaultSerializationBinder.cs"];
m1_2101 [label="StringAssert.AreEqual(expected, json)", span="4718-4718", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="DefaultSerializationBinder.cs"];
m1_2095 [label="XmlNodeTestObject testObject = new XmlNodeTestObject()", span="4707-4707", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="DefaultSerializationBinder.cs"];
m1_2098 [label="testObject.Document = document", span="4710-4710", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="DefaultSerializationBinder.cs"];
m1_2100 [label="string expected = @''{\r\n  ''''Document'''': {\r\n    ''''root'''': ''''hehe, root''''\r\n  }\r\n}''", span="4713-4717", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="DefaultSerializationBinder.cs"];
m1_2096 [label="XmlDocument document = new XmlDocument()", span="4708-4708", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="DefaultSerializationBinder.cs"];
m1_2097 [label="document.LoadXml(''<root>hehe, root</root>'')", span="4709-4709", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="DefaultSerializationBinder.cs"];
m1_2104 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", span="4705-4705", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="DefaultSerializationBinder.cs"];
m1_1854 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", span="4122-4122", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", file="DefaultSerializationBinder.cs"];
m1_1855 [label="return _innerDictionary.GetEnumerator();", span="4124-4124", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", file="DefaultSerializationBinder.cs"];
m1_1856 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", span="4122-4122", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", file="DefaultSerializationBinder.cs"];
m1_3186 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", span="7147-7147", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", file="DefaultSerializationBinder.cs"];
m1_3187 [label="var json = Serialize(obj)", span="7150-7150", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", file="DefaultSerializationBinder.cs"];
m1_3188 [label="return Deserialize<T>(json);", span="7151-7151", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", file="DefaultSerializationBinder.cs"];
m1_3189 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", span="7147-7147", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", file="DefaultSerializationBinder.cs"];
m1_2377 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", span="5286-5286", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="DefaultSerializationBinder.cs"];
m1_2381 [label="obj = JsonConvert.DeserializeObject<VectorParent>(str)", span="5293-5293", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="DefaultSerializationBinder.cs"];
m1_2382 [label="Assert.AreEqual(1, obj.Position.X)", span="5295-5295", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="DefaultSerializationBinder.cs"];
m1_2383 [label="Assert.AreEqual(2, obj.Position.Y)", span="5296-5296", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="DefaultSerializationBinder.cs"];
m1_2384 [label="Assert.AreEqual(3, obj.Position.Z)", span="5297-5297", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="DefaultSerializationBinder.cs"];
m1_2380 [label="string str = JsonConvert.SerializeObject(obj)", span="5291-5291", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="DefaultSerializationBinder.cs"];
m1_2378 [label="VectorParent obj = new VectorParent()", span="5288-5288", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="DefaultSerializationBinder.cs"];
m1_2379 [label="obj.Position = new Vector { X = 1, Y = 2, Z = 3 }", span="5289-5289", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="DefaultSerializationBinder.cs"];
m1_2385 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", span="5286-5286", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="DefaultSerializationBinder.cs"];
m1_1384 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", span="2937-2937", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="DefaultSerializationBinder.cs"];
m1_1389 [label="DataContractPrivateMembers cc = JsonConvert.DeserializeObject<DataContractPrivateMembers>(json)", span="2950-2950", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="DefaultSerializationBinder.cs"];
m1_1390 [label="Assert.AreEqual(''_name: Jeff, _age: 26, Rank: 10, JsonTitle: Dr'', cc.ToString())", span="2951-2951", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="DefaultSerializationBinder.cs"];
m1_1387 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="2941-2941", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="DefaultSerializationBinder.cs"];
m1_1388 [label="StringAssert.AreEqual(@''{\r\n  ''''_name'''': ''''Jeff'''',\r\n  ''''_age'''': 26,\r\n  ''''Rank'''': 10,\r\n  ''''JsonTitle'''': ''''Dr''''\r\n}'', json)", span="2943-2948", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="DefaultSerializationBinder.cs"];
m1_1385 [label="DataContractPrivateMembers c = new DataContractPrivateMembers(''Jeff'', 26, 10, ''Dr'')", span="2939-2939", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="DefaultSerializationBinder.cs"];
m1_1386 [label="c.NotIncluded = ''Hi''", span="2940-2940", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="DefaultSerializationBinder.cs"];
m1_1391 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", span="2937-2937", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="DefaultSerializationBinder.cs"];
m1_2939 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", span="6648-6648", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", file="DefaultSerializationBinder.cs"];
m1_2940 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<double>(''''); }, ''No JSON content found and type 'System.Double' is not nullable. Path '', line 0, position 0.'')", span="6650-6650", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", file="DefaultSerializationBinder.cs"];
m1_2941 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", span="6648-6648", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", file="DefaultSerializationBinder.cs"];
m1_976 [label="Entry System.Guid.Guid(string)", span="0-0", cluster="System.Guid.Guid(string)", file="DefaultSerializationBinder.cs"];
m1_2991 [label="Entry System.DateTime.ToLocalTime()", span="0-0", cluster="System.DateTime.ToLocalTime()", file="DefaultSerializationBinder.cs"];
m1_2626 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", span="5971-5971", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="DefaultSerializationBinder.cs"];
m1_2627 [label="_privateString = privateString", span="5973-5973", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="DefaultSerializationBinder.cs"];
m1_2628 [label="_readonlyString = readonlyString", span="5974-5974", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="DefaultSerializationBinder.cs"];
m1_2629 [label="_internalString = internalString", span="5975-5975", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="DefaultSerializationBinder.cs"];
m1_2630 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", span="5971-5971", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="DefaultSerializationBinder.cs"];
m1_2534 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContract.ChildDataContract()", span="5678-5678", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContract.ChildDataContract()", file="DefaultSerializationBinder.cs"];
m1_1779 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", span="3889-3889", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", file="DefaultSerializationBinder.cs"];
m1_1783 [label="Assert.AreEqual(c.DateTimeOffsetValue, cISO.DateTimeOffsetValue)", span="3907-3907", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", file="DefaultSerializationBinder.cs"];
m1_1781 [label="DateTimeOffsetWrapper cISO = JsonConvert.DeserializeObject<DateTimeOffsetWrapper>(jsonIsoText, new JsonSerializerSettings\r\n            {\r\n                DateParseHandling = DateParseHandling.DateTimeOffset,\r\n                Converters =\r\n                {\r\n                    new IsoDateTimeConverter()\r\n                }\r\n            })", span="3894-3901", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", file="DefaultSerializationBinder.cs"];
m1_1782 [label="DateTimeOffsetWrapper c = JsonConvert.DeserializeObject<DateTimeOffsetWrapper>(jsonIsoText, new JsonSerializerSettings\r\n            {\r\n                DateParseHandling = DateParseHandling.DateTimeOffset\r\n            })", span="3902-3905", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", file="DefaultSerializationBinder.cs"];
m1_1780 [label="string jsonIsoText =\r\n                @''{''''DateTimeOffsetValue'''':''''2012-02-25T19:55:50.6095676+00:00'''', ''''DateTimeValue'''':''''2012-02-25T19:55:50.6095676+00:00''''}''", span="3891-3892", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", file="DefaultSerializationBinder.cs"];
m1_1784 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", span="3889-3889", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", file="DefaultSerializationBinder.cs"];
m1_3352 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", span="7622-7622", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="DefaultSerializationBinder.cs"];
m1_3357 [label="Assert.AreEqual(TimeSpan.FromHours(9.5), dateTimeOffset.Offset)", span="7632-7632", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="DefaultSerializationBinder.cs"];
m1_3358 [label="Assert.AreEqual(''07/19/2012 14:30:00 +09:30'', dateTimeOffset.ToString(CultureInfo.InvariantCulture))", span="7633-7633", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="DefaultSerializationBinder.cs"];
m1_3356 [label="var dateTimeOffset = (DateTimeOffset)((JValue)obj[''startDateTime'']).Value", span="7630-7630", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="DefaultSerializationBinder.cs"];
m1_3355 [label="var obj = (JObject)JsonConvert.DeserializeObject(content, jsonSerializerSettings)", span="7628-7628", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="DefaultSerializationBinder.cs"];
m1_3354 [label="var jsonSerializerSettings = new JsonSerializerSettings() { DateFormatHandling = DateFormatHandling.IsoDateFormat, DateParseHandling = DateParseHandling.DateTimeOffset, DateTimeZoneHandling = DateTimeZoneHandling.RoundtripKind }", span="7626-7626", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="DefaultSerializationBinder.cs"];
m1_3353 [label="var content = @''{''''startDateTime'''':''''2012-07-19T14:30:00+09:30''''}''", span="7624-7624", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="DefaultSerializationBinder.cs"];
m1_3359 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", span="7622-7622", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="DefaultSerializationBinder.cs"];
m1_2766 [label="Entry Newtonsoft.Json.Tests.Serialization.StaticTestClass.StaticTestClass()", span="8998-8998", cluster="Newtonsoft.Json.Tests.Serialization.StaticTestClass.StaticTestClass()", file="DefaultSerializationBinder.cs"];
m1_954 [label="Entry System.Collections.Generic.Stack<T>.Push(T)", span="0-0", cluster="System.Collections.Generic.Stack<T>.Push(T)", file="DefaultSerializationBinder.cs"];
m1_579 [label="Entry System.Convert.ToInt32(string)", span="0-0", cluster="System.Convert.ToInt32(string)", file="DefaultSerializationBinder.cs"];
m1_1010 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", span="2112-2112", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="DefaultSerializationBinder.cs"];
m1_1014 [label="ConverterPrecedenceClass c2 = JsonConvert.DeserializeObject<ConverterPrecedenceClass>(json)", span="2119-2119", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="DefaultSerializationBinder.cs"];
m1_1013 [label="Assert.AreEqual(@''[''''Class'''',''''!Test!'''']'', json)", span="2117-2117", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="DefaultSerializationBinder.cs"];
m1_1015 [label="Assert.AreEqual(''!Test!'', c2.TestValue)", span="2121-2121", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="DefaultSerializationBinder.cs"];
m1_1012 [label="string json = JsonConvert.SerializeObject(c1)", span="2116-2116", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="DefaultSerializationBinder.cs"];
m1_1011 [label="ConverterPrecedenceClass c1 = new ConverterPrecedenceClass(''!Test!'')", span="2114-2114", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="DefaultSerializationBinder.cs"];
m1_1016 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", span="2112-2112", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="DefaultSerializationBinder.cs"];
m1_2992 [label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, int, System.TimeSpan)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, int, System.TimeSpan)", file="DefaultSerializationBinder.cs"];
m1_1332 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", span="2795-2795", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="DefaultSerializationBinder.cs"];
m1_1334 [label="JsonPropertyWithHandlingValues o = JsonConvert.DeserializeObject<JsonPropertyWithHandlingValues>(json)", span="2799-2799", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="DefaultSerializationBinder.cs"];
m1_1335 [label="Assert.AreEqual(''Default!'', o.DefaultValueHandlingIgnoreAndPopulateProperty)", span="2800-2800", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="DefaultSerializationBinder.cs"];
m1_1336 [label="Assert.AreEqual(''Default!'', o.DefaultValueHandlingPopulateProperty)", span="2801-2801", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="DefaultSerializationBinder.cs"];
m1_1337 [label="Assert.AreEqual(null, o.DefaultValueHandlingIgnoreProperty)", span="2802-2802", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="DefaultSerializationBinder.cs"];
m1_1338 [label="Assert.AreEqual(null, o.DefaultValueHandlingIncludeProperty)", span="2803-2803", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="DefaultSerializationBinder.cs"];
m1_1333 [label="string json = ''{}''", span="2797-2797", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="DefaultSerializationBinder.cs"];
m1_1339 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", span="2795-2795", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="DefaultSerializationBinder.cs"];
m1_203 [label="TypeCode.Char", span="416-416", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.GetJsonSchemaType(System.Type, Newtonsoft.Json.Required)", file="DefaultSerializationBinder.cs"];
m1_665 [label="Entry Newtonsoft.Json.Tests.TestObjects.Store.Store()", span="49-49", cluster="Newtonsoft.Json.Tests.TestObjects.Store.Store()", file="DefaultSerializationBinder.cs"];
m1_3013 [label="Entry Newtonsoft.Json.Tests.TestObjects.PersonWithPrivateConstructor.CreatePerson()", span="33-33", cluster="Newtonsoft.Json.Tests.TestObjects.PersonWithPrivateConstructor.CreatePerson()", file="DefaultSerializationBinder.cs"];
m1_3190 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", span="7154-7154", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="DefaultSerializationBinder.cs"];
m1_3193 [label="var serializer = new JsonSerializer()", span="7158-7158", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="DefaultSerializationBinder.cs"];
m1_3196 [label="return stringWriter.ToString();", span="7165-7165", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="DefaultSerializationBinder.cs"];
m1_3194 [label="serializer.ContractResolver = new DefaultContractResolver\r\n            {\r\n                IgnoreSerializableAttribute = false\r\n            }", span="7159-7162", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="DefaultSerializationBinder.cs"];
m1_3192 [label="var stringWriter = new StringWriter()", span="7157-7157", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="DefaultSerializationBinder.cs"];
m1_3195 [label="serializer.Serialize(stringWriter, obj)", span="7163-7163", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="DefaultSerializationBinder.cs"];
m1_3197 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", span="7154-7154", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="DefaultSerializationBinder.cs"];
m1_2440 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Response.Response()", span="5434-5434", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Response.Response()", file="DefaultSerializationBinder.cs"];
m1_2880 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", span="6521-6521", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="DefaultSerializationBinder.cs"];
m1_2884 [label="Item actual = JsonConvert.DeserializeObject<Item>(jsonString)", span="6547-6547", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="DefaultSerializationBinder.cs"];
m1_2885 [label="Assert.AreEqual(new Guid(''d8220a4b-75b1-4b7a-8112-b7bdae956a45''), actual.SourceTypeID)", span="6549-6549", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="DefaultSerializationBinder.cs"];
m1_2886 [label="Assert.AreEqual(new Guid(''951663c4-924e-4c86-a57a-7ed737501dbd''), actual.BrokerID)", span="6550-6550", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="DefaultSerializationBinder.cs"];
m1_2882 [label="string jsonString = JsonConvert.SerializeObject(expected, Formatting.Indented)", span="6533-6533", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="DefaultSerializationBinder.cs"];
m1_2883 [label="StringAssert.AreEqual(@''{\r\n  ''''SourceTypeID'''': ''''d8220a4b-75b1-4b7a-8112-b7bdae956a45'''',\r\n  ''''BrokerID'''': ''''951663c4-924e-4c86-a57a-7ed737501dbd'''',\r\n  ''''Latitude'''': 33.657145,\r\n  ''''Longitude'''': -117.766684,\r\n  ''''TimeStamp'''': ''''2000-03-01T23:59:59Z'''',\r\n  ''''Payload'''': {\r\n    ''''$type'''': ''''System.Byte[], mscorlib'''',\r\n    ''''$value'''': ''''AAECAwQFBgcICQ==''''\r\n  }\r\n}'', jsonString)", span="6535-6545", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="DefaultSerializationBinder.cs"];
m1_2887 [label="byte[] bytes = (byte[])actual.Payload", span="6551-6551", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="DefaultSerializationBinder.cs"];
m1_2881 [label="Item expected = new Item()\r\n            {\r\n                SourceTypeID = new Guid(''d8220a4b-75b1-4b7a-8112-b7bdae956a45''),\r\n                BrokerID = new Guid(''951663c4-924e-4c86-a57a-7ed737501dbd''),\r\n                Latitude = 33.657145,\r\n                Longitude = -117.766684,\r\n                TimeStamp = new DateTime(2000, 3, 1, 23, 59, 59, DateTimeKind.Utc),\r\n                Payload = new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }\r\n            }", span="6523-6531", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="DefaultSerializationBinder.cs"];
m1_2888 [label="CollectionAssert.AreEquivalent((new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }).ToList(), bytes.ToList())", span="6552-6552", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="DefaultSerializationBinder.cs"];
m1_2889 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", span="6521-6521", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="DefaultSerializationBinder.cs"];
m1_141 [label="return Pop().Schema;", span="343-343", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.GenerateInternal(System.Type, Newtonsoft.Json.Required, bool)", file="DefaultSerializationBinder.cs"];
m1_144 [label="Entry Newtonsoft.Json.Schema.JsonSchemaGenerator.HasFlag(Newtonsoft.Json.Schema.JsonSchemaType?, Newtonsoft.Json.Schema.JsonSchemaType)", span="386-386", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.HasFlag(Newtonsoft.Json.Schema.JsonSchemaType?, Newtonsoft.Json.Schema.JsonSchemaType)", file="DefaultSerializationBinder.cs"];
m1_145 [label="Entry Unk.Any", span="", cluster="Unk.Any", file="DefaultSerializationBinder.cs"];
m1_146 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)", file="DefaultSerializationBinder.cs"];
m1_147 [label="Entry string.FormatWith(System.IFormatProvider, params object[])", span="48-48", cluster="string.FormatWith(System.IFormatProvider, params object[])", file="DefaultSerializationBinder.cs"];
m1_143 [label="Entry Newtonsoft.Json.Schema.JsonSchemaResolver.GetSchema(string)", span="59-59", cluster="Newtonsoft.Json.Schema.JsonSchemaResolver.GetSchema(string)", file="DefaultSerializationBinder.cs"];
m1_142 [label="Exit Newtonsoft.Json.Schema.JsonSchemaGenerator.GenerateInternal(System.Type, Newtonsoft.Json.Required, bool)", span="207-207", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.GenerateInternal(System.Type, Newtonsoft.Json.Required, bool)", file="DefaultSerializationBinder.cs"];
m1_3225 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", span="7281-7281", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="DefaultSerializationBinder.cs"];
m1_3234 [label="ExceptionAssert.Throws<JsonReaderException>(() => { s.Deserialize<Dictionary<string, int>>(new JsonTextReader(new StringReader(json))); }, ''Additional text encountered after finished reading JSON content: {. Path '', line 1, position 7.'')", span="7294-7294", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="DefaultSerializationBinder.cs"];
m1_3231 [label="Assert.AreEqual(1, o[''one''])", span="7290-7290", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="DefaultSerializationBinder.cs"];
m1_3226 [label="string json = ''{one:1}{}''", span="7283-7283", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="DefaultSerializationBinder.cs"];
m1_3233 [label="s = JsonSerializer.Create(settings)", span="7293-7293", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="DefaultSerializationBinder.cs"];
m1_3229 [label="IDictionary<string, int> o = s.Deserialize<Dictionary<string, int>>(new JsonTextReader(new StringReader(json)))", span="7287-7287", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="DefaultSerializationBinder.cs"];
m1_3230 [label="Assert.IsNotNull(o)", span="7289-7289", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="DefaultSerializationBinder.cs"];
m1_3232 [label="settings.CheckAdditionalContent = true", span="7292-7292", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="DefaultSerializationBinder.cs"];
m1_3227 [label="JsonSerializerSettings settings = new JsonSerializerSettings()", span="7285-7285", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="DefaultSerializationBinder.cs"];
m1_3228 [label="JsonSerializer s = JsonSerializer.Create(settings)", span="7286-7286", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="DefaultSerializationBinder.cs"];
m1_3235 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", span="7281-7281", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="DefaultSerializationBinder.cs"];
m1_2012 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", span="4471-4471", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="DefaultSerializationBinder.cs"];
m1_2014 [label="string json = JsonConvert.SerializeObject(myA, Formatting.Indented)", span="4474-4474", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="DefaultSerializationBinder.cs"];
m1_2017 [label="json = JsonConvert.SerializeObject(myB, Formatting.Indented)", span="4484-4484", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="DefaultSerializationBinder.cs"];
m1_2015 [label="StringAssert.AreEqual(@''{\r\n  ''''AA_field1'''': 2,\r\n  ''''AA_property1'''': 2,\r\n  ''''AA_property2'''': 2,\r\n  ''''AA_property3'''': 2,\r\n  ''''AA_property4'''': 2\r\n}'', json)", span="4475-4481", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="DefaultSerializationBinder.cs"];
m1_2018 [label="StringAssert.AreEqual(@''{\r\n  ''''BB_field1'''': 4,\r\n  ''''BB_field2'''': 4,\r\n  ''''AA_field1'''': 3,\r\n  ''''BB_property1'''': 4,\r\n  ''''BB_property2'''': 4,\r\n  ''''BB_property3'''': 4,\r\n  ''''BB_property4'''': 4,\r\n  ''''BB_property5'''': 4,\r\n  ''''BB_property7'''': 4,\r\n  ''''AA_property1'''': 3,\r\n  ''''AA_property2'''': 3,\r\n  ''''AA_property3'''': 3,\r\n  ''''AA_property4'''': 3\r\n}'', json)", span="4485-4499", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="DefaultSerializationBinder.cs"];
m1_2013 [label="AA myA = new AA(2)", span="4473-4473", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="DefaultSerializationBinder.cs"];
m1_2016 [label="BB myB = new BB(3, 4)", span="4483-4483", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="DefaultSerializationBinder.cs"];
m1_2019 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", span="4471-4471", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="DefaultSerializationBinder.cs"];
m1_3494 [label="Entry Newtonsoft.Json.Tests.TestObjects.AnswerFilterModel.AnswerFilterModel()", span="45-45", cluster="Newtonsoft.Json.Tests.TestObjects.AnswerFilterModel.AnswerFilterModel()", file="DefaultSerializationBinder.cs"];
m1_3599 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDouble(System.IFormatProvider)", span="8262-8262", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDouble(System.IFormatProvider)", file="DefaultSerializationBinder.cs"];
m1_3600 [label="throw new InvalidCastException();", span="8264-8264", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDouble(System.IFormatProvider)", file="DefaultSerializationBinder.cs"];
m1_3601 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDouble(System.IFormatProvider)", span="8262-8262", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDouble(System.IFormatProvider)", file="DefaultSerializationBinder.cs"];
m1_727 [label="Entry object.ToString()", span="0-0", cluster="object.ToString()", file="DefaultSerializationBinder.cs"];
m1_2596 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="DefaultSerializationBinder.cs"];
m1_161 [label="var json = JsonConvert.SerializeObject(input)", span="486-486", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="DefaultSerializationBinder.cs"];
m1_512 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooBar1.FooBar1()", span="1036-1036", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooBar1.FooBar1()", file="DefaultSerializationBinder.cs"];
m1_2430 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", span="5422-5422", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", file="DefaultSerializationBinder.cs"];
m1_2431 [label="return JsonConvert.DeserializeObject<NullableStructPropertyClass>(\r\n                serStr,\r\n                new JsonSerializerSettings\r\n                {\r\n                    NullValueHandling = NullValueHandling.Ignore,\r\n                    MissingMemberHandling = MissingMemberHandling.Ignore\r\n                });", span="5424-5430", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", file="DefaultSerializationBinder.cs"];
m1_2432 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", span="5422-5422", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", file="DefaultSerializationBinder.cs"];
m1_2951 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", span="6660-6660", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", file="DefaultSerializationBinder.cs"];
m1_2952 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<int>(''''); }, ''No JSON content found and type 'System.Int32' is not nullable. Path '', line 0, position 0.'')", span="6662-6662", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", file="DefaultSerializationBinder.cs"];
m1_2953 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", span="6660-6660", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", file="DefaultSerializationBinder.cs"];
m1_426 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, object, System.Type)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, object, System.Type)", file="DefaultSerializationBinder.cs"];
m1_1225 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", span="2511-2511", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", file="DefaultSerializationBinder.cs"];
m1_1227 [label="GoogleMapGeocoderStructure jsonGoogleMapGeocoder = JsonConvert.DeserializeObject<GoogleMapGeocoderStructure>(json)", span="2550-2550", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", file="DefaultSerializationBinder.cs"];
m1_1226 [label="string json = @''{\r\n  ''''name'''': ''''1600 Amphitheatre Parkway, Mountain View, CA, USA'''',\r\n  ''''Status'''': {\r\n    ''''code'''': 200,\r\n    ''''request'''': ''''geocode''''\r\n  },\r\n  ''''Placemark'''': [\r\n    {\r\n      ''''address'''': ''''1600 Amphitheatre Pkwy, Mountain View, CA 94043, USA'''',\r\n      ''''AddressDetails'''': {\r\n        ''''Country'''': {\r\n          ''''CountryNameCode'''': ''''US'''',\r\n          ''''AdministrativeArea'''': {\r\n            ''''AdministrativeAreaName'''': ''''CA'''',\r\n            ''''SubAdministrativeArea'''': {\r\n              ''''SubAdministrativeAreaName'''': ''''Santa Clara'''',\r\n              ''''Locality'''': {\r\n                ''''LocalityName'''': ''''Mountain View'''',\r\n                ''''Thoroughfare'''': {\r\n                  ''''ThoroughfareName'''': ''''1600 Amphitheatre Pkwy''''\r\n                },\r\n                ''''PostalCode'''': {\r\n                  ''''PostalCodeNumber'''': ''''94043''''\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        ''''Accuracy'''': 8\r\n      },\r\n      ''''Point'''': {\r\n        ''''coordinates'''': [-122.083739, 37.423021, 0]\r\n      }\r\n    }\r\n  ]\r\n}''", span="2513-2548", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", file="DefaultSerializationBinder.cs"];
m1_1228 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", span="2511-2511", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", file="DefaultSerializationBinder.cs"];
m1_1715 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", span="3673-3673", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="DefaultSerializationBinder.cs"];
m1_1716 [label="ExistingValueClass d = JsonConvert.DeserializeObject<ExistingValueClass>(@''{'Dictionary':{appended:'appended',existing:'new'}}'')", span="3675-3675", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="DefaultSerializationBinder.cs"];
m1_1719 [label="Assert.AreEqual(typeof(Dictionary<string, string>), d.Dictionary.GetType())", span="3679-3679", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="DefaultSerializationBinder.cs"];
m1_1720 [label="Assert.AreEqual(typeof(List<string>), d.List.GetType())", span="3680-3680", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="DefaultSerializationBinder.cs"];
m1_1721 [label="Assert.AreEqual(2, d.Dictionary.Count)", span="3681-3681", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="DefaultSerializationBinder.cs"];
m1_1722 [label="Assert.AreEqual(''new'', d.Dictionary[''existing''])", span="3682-3682", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="DefaultSerializationBinder.cs"];
m1_1723 [label="Assert.AreEqual(''appended'', d.Dictionary[''appended''])", span="3683-3683", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="DefaultSerializationBinder.cs"];
m1_1724 [label="Assert.AreEqual(1, d.List.Count)", span="3684-3684", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="DefaultSerializationBinder.cs"];
m1_1725 [label="Assert.AreEqual(''existing'', d.List[0])", span="3685-3685", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="DefaultSerializationBinder.cs"];
m1_1717 [label="Assert.IsNotNull(d)", span="3677-3677", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="DefaultSerializationBinder.cs"];
m1_1718 [label="Assert.IsNotNull(d.Dictionary)", span="3678-3678", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="DefaultSerializationBinder.cs"];
m1_1726 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", span="3673-3673", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="DefaultSerializationBinder.cs"];
m1_1959 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, ulong)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, ulong)", file="DefaultSerializationBinder.cs"];
m1_691 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int)", file="DefaultSerializationBinder.cs"];
m1_1546 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", span="3277-3277", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", file="DefaultSerializationBinder.cs"];
m1_1548 [label="ExceptionAssert.Throws<InvalidCastException>(\r\n                () => { JsonConvert.DeserializeObject<JObject>(json); },\r\n                new[]\r\n                {\r\n                    ''Unable to cast object of type 'Newtonsoft.Json.Linq.JArray' to type 'Newtonsoft.Json.Linq.JObject'.'',\r\n                    ''Cannot cast from source type to destination type.'' // mono\r\n                })", span="3281-3287", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", file="DefaultSerializationBinder.cs"];
m1_1547 [label="string json = @''[]''", span="3279-3279", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", file="DefaultSerializationBinder.cs"];
m1_1549 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", span="3277-3277", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", file="DefaultSerializationBinder.cs"];
m1_178 [label="propertySchema.Default = JToken.FromObject(property.DefaultValue)", span="369-369", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.GenerateObjectSchema(System.Type, Newtonsoft.Json.Serialization.JsonObjectContract)", file="DefaultSerializationBinder.cs"];
m1_181 [label="CurrentSchema.AllowAdditionalProperties = false", span="376-376", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.GenerateObjectSchema(System.Type, Newtonsoft.Json.Serialization.JsonObjectContract)", file="DefaultSerializationBinder.cs"];
m1_182 [label="Exit Newtonsoft.Json.Schema.JsonSchemaGenerator.GenerateObjectSchema(System.Type, Newtonsoft.Json.Serialization.JsonObjectContract)", span="354-354", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.GenerateObjectSchema(System.Type, Newtonsoft.Json.Serialization.JsonObjectContract)", file="DefaultSerializationBinder.cs"];
m1_185 [label="value == null", span="389-389", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.HasFlag(Newtonsoft.Json.Schema.JsonSchemaType?, Newtonsoft.Json.Schema.JsonSchemaType)", file="DefaultSerializationBinder.cs"];
m1_186 [label="return true;", span="390-390", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.HasFlag(Newtonsoft.Json.Schema.JsonSchemaType?, Newtonsoft.Json.Schema.JsonSchemaType)", file="DefaultSerializationBinder.cs"];
m1_187 [label="return ((value & flag) == flag);", span="392-392", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.HasFlag(Newtonsoft.Json.Schema.JsonSchemaType?, Newtonsoft.Json.Schema.JsonSchemaType)", file="DefaultSerializationBinder.cs"];
m1_191 [label="schemaType = JsonSchemaType.Null", span="400-400", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.GetJsonSchemaType(System.Type, Newtonsoft.Json.Required)", file="DefaultSerializationBinder.cs"];
m1_195 [label=typeCode, span="407-407", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.GetJsonSchemaType(System.Type, Newtonsoft.Json.Required)", file="DefaultSerializationBinder.cs"];
m1_196 [label="TypeCode.Empty", span="409-409", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.GetJsonSchemaType(System.Type, Newtonsoft.Json.Required)", file="DefaultSerializationBinder.cs"];
m1_180 [label="type.IsSealed", span="375-375", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.GenerateObjectSchema(System.Type, Newtonsoft.Json.Serialization.JsonObjectContract)", file="DefaultSerializationBinder.cs"];
m1_188 [label="Exit Newtonsoft.Json.Schema.JsonSchemaGenerator.HasFlag(Newtonsoft.Json.Schema.JsonSchemaType?, Newtonsoft.Json.Schema.JsonSchemaType)", span="386-386", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.HasFlag(Newtonsoft.Json.Schema.JsonSchemaType?, Newtonsoft.Json.Schema.JsonSchemaType)", file="DefaultSerializationBinder.cs"];
m1_190 [label="valueRequired != Required.Always && ReflectionUtils.IsNullable(type)", span="398-398", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.GetJsonSchemaType(System.Type, Newtonsoft.Json.Required)", file="DefaultSerializationBinder.cs"];
m1_192 [label="ReflectionUtils.IsNullableType(type)", span="401-401", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.GetJsonSchemaType(System.Type, Newtonsoft.Json.Required)", file="DefaultSerializationBinder.cs"];
m1_194 [label="TypeCode typeCode = Type.GetTypeCode(type)", span="405-405", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.GetJsonSchemaType(System.Type, Newtonsoft.Json.Required)", file="DefaultSerializationBinder.cs"];
m1_197 [label="TypeCode.Object", span="410-410", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.GetJsonSchemaType(System.Type, Newtonsoft.Json.Required)", file="DefaultSerializationBinder.cs"];
m1_179 [label="CurrentSchema.Properties.Add(property.PropertyName, propertySchema)", span="371-371", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.GenerateObjectSchema(System.Type, Newtonsoft.Json.Serialization.JsonObjectContract)", file="DefaultSerializationBinder.cs"];
m1_189 [label="JsonSchemaType schemaType = JsonSchemaType.None", span="397-397", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.GetJsonSchemaType(System.Type, Newtonsoft.Json.Required)", file="DefaultSerializationBinder.cs"];
m1_193 [label="type = Nullable.GetUnderlyingType(type)", span="402-402", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.GetJsonSchemaType(System.Type, Newtonsoft.Json.Required)", file="DefaultSerializationBinder.cs"];
m1_198 [label="return schemaType | JsonSchemaType.String;", span="411-411", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.GetJsonSchemaType(System.Type, Newtonsoft.Json.Required)", file="DefaultSerializationBinder.cs"];
m1_2441 [label="Entry Newtonsoft.Json.Linq.JObject.JObject(params object[])", span="104-104", cluster="Newtonsoft.Json.Linq.JObject.JObject(params object[])", file="DefaultSerializationBinder.cs"];
m1_3072 [label="Entry Newtonsoft.Json.Bson.BsonWriter.BsonWriter(System.IO.Stream)", span="65-65", cluster="Newtonsoft.Json.Bson.BsonWriter.BsonWriter(System.IO.Stream)", file="DefaultSerializationBinder.cs"];
m1_667 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", span="1420-1420", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="DefaultSerializationBinder.cs"];
m1_675 [label="Assert.AreEqual(''Apple'', deserializedProduct.Name)", span="1443-1443", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="DefaultSerializationBinder.cs"];
m1_676 [label="Assert.AreEqual(new DateTime(2008, 12, 28), deserializedProduct.ExpiryDate)", span="1444-1444", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="DefaultSerializationBinder.cs"];
m1_677 [label="Assert.AreEqual(3.99m, deserializedProduct.Price)", span="1445-1445", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="DefaultSerializationBinder.cs"];
m1_678 [label="Assert.AreEqual(''Small'', deserializedProduct.Sizes[0])", span="1446-1446", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="DefaultSerializationBinder.cs"];
m1_679 [label="Assert.AreEqual(''Medium'', deserializedProduct.Sizes[1])", span="1447-1447", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="DefaultSerializationBinder.cs"];
m1_680 [label="Assert.AreEqual(''Large'', deserializedProduct.Sizes[2])", span="1448-1448", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="DefaultSerializationBinder.cs"];
m1_674 [label="Product deserializedProduct = (Product)JsonConvert.DeserializeObject(output, typeof(Product))", span="1441-1441", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="DefaultSerializationBinder.cs"];
m1_673 [label="string output = JsonConvert.SerializeObject(product)", span="1429-1429", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="DefaultSerializationBinder.cs"];
m1_670 [label="product.ExpiryDate = new DateTime(2008, 12, 28)", span="1425-1425", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="DefaultSerializationBinder.cs"];
m1_668 [label="Product product = new Product()", span="1422-1422", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="DefaultSerializationBinder.cs"];
m1_672 [label="product.Sizes = new string[] { ''Small'', ''Medium'', ''Large'' }", span="1427-1427", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="DefaultSerializationBinder.cs"];
m1_669 [label="product.Name = ''Apple''", span="1424-1424", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="DefaultSerializationBinder.cs"];
m1_671 [label="product.Price = 3.99M", span="1426-1426", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="DefaultSerializationBinder.cs"];
m1_681 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", span="1420-1420", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="DefaultSerializationBinder.cs"];
m1_3572 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", span="8216-8216", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="DefaultSerializationBinder.cs"];
m1_3580 [label="return Value.ToString(CultureInfo.InvariantCulture);", span="8232-8232", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="DefaultSerializationBinder.cs"];
m1_3579 [label="conversionType == typeof(string)", span="8230-8230", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="DefaultSerializationBinder.cs"];
m1_3574 [label="return this;", span="8220-8220", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="DefaultSerializationBinder.cs"];
m1_3576 [label="return (int)Value;", span="8224-8224", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="DefaultSerializationBinder.cs"];
m1_3578 [label="return (long)Value;", span="8228-8228", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="DefaultSerializationBinder.cs"];
m1_3577 [label="conversionType == typeof(long)", span="8226-8226", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="DefaultSerializationBinder.cs"];
m1_3581 [label="throw new InvalidCastException();", span="8234-8234", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="DefaultSerializationBinder.cs"];
m1_3573 [label="conversionType == typeof(object)", span="8218-8218", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="DefaultSerializationBinder.cs"];
m1_3575 [label="conversionType == typeof(int)", span="8222-8222", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="DefaultSerializationBinder.cs"];
m1_3582 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", span="8216-8216", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="DefaultSerializationBinder.cs"];
m1_2321 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", span="5182-5182", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="DefaultSerializationBinder.cs"];
m1_2330 [label="IDictionary<string, object> newExpando = JsonConvert.DeserializeObject<ExpandoObject>(json)", span="5201-5201", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="DefaultSerializationBinder.cs"];
m1_2332 [label="Assert.AreEqual((long)expando.Int, newExpando[''Int''])", span="5204-5204", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="DefaultSerializationBinder.cs"];
m1_2334 [label="Assert.AreEqual(expando.Decimal, newExpando[''Decimal''])", span="5207-5207", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="DefaultSerializationBinder.cs"];
m1_2338 [label="Assert.AreEqual(expando.Complex.String, o[''String''])", span="5213-5213", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="DefaultSerializationBinder.cs"];
m1_2340 [label="Assert.AreEqual(expando.Complex.DateTime, o[''DateTime''])", span="5216-5216", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="DefaultSerializationBinder.cs"];
m1_2328 [label="string json = JsonConvert.SerializeObject(expando, Formatting.Indented)", span="5191-5191", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="DefaultSerializationBinder.cs"];
m1_2329 [label="StringAssert.AreEqual(@''{\r\n  ''''Int'''': 1,\r\n  ''''Decimal'''': 99.9,\r\n  ''''Complex'''': {\r\n    ''''String'''': ''''I am a string'''',\r\n    ''''DateTime'''': ''''2000-12-20T18:55:00Z''''\r\n  }\r\n}'', json)", span="5192-5199", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="DefaultSerializationBinder.cs"];
m1_2331 [label="CustomAssert.IsInstanceOfType(typeof(long), newExpando[''Int''])", span="5203-5203", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="DefaultSerializationBinder.cs"];
m1_2333 [label="CustomAssert.IsInstanceOfType(typeof(double), newExpando[''Decimal''])", span="5206-5206", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="DefaultSerializationBinder.cs"];
m1_2335 [label="CustomAssert.IsInstanceOfType(typeof(ExpandoObject), newExpando[''Complex''])", span="5209-5209", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="DefaultSerializationBinder.cs"];
m1_2336 [label="IDictionary<string, object> o = (ExpandoObject)newExpando[''Complex'']", span="5210-5210", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="DefaultSerializationBinder.cs"];
m1_2322 [label="dynamic expando = new ExpandoObject()", span="5184-5184", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="DefaultSerializationBinder.cs"];
m1_2337 [label="CustomAssert.IsInstanceOfType(typeof(string), o[''String''])", span="5212-5212", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="DefaultSerializationBinder.cs"];
m1_2339 [label="CustomAssert.IsInstanceOfType(typeof(DateTime), o[''DateTime''])", span="5215-5215", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="DefaultSerializationBinder.cs"];
m1_2327 [label="expando.Complex.DateTime = new DateTime(2000, 12, 20, 18, 55, 0, DateTimeKind.Utc)", span="5189-5189", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="DefaultSerializationBinder.cs"];
m1_2323 [label="expando.Int = 1", span="5185-5185", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="DefaultSerializationBinder.cs"];
m1_2324 [label="expando.Decimal = 99.9d", span="5186-5186", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="DefaultSerializationBinder.cs"];
m1_2325 [label="expando.Complex = new ExpandoObject()", span="5187-5187", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="DefaultSerializationBinder.cs"];
m1_2326 [label="expando.Complex.String = ''I am a string''", span="5188-5188", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="DefaultSerializationBinder.cs"];
m1_2341 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", span="5182-5182", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="DefaultSerializationBinder.cs"];
m1_413 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="872-872", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DefaultSerializationBinder.cs"];
m1_414 [label="_serializationInfo = info", span="874-874", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DefaultSerializationBinder.cs"];
m1_415 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="872-872", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DefaultSerializationBinder.cs"];
m1_3587 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToByte(System.IFormatProvider)", span="8242-8242", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToByte(System.IFormatProvider)", file="DefaultSerializationBinder.cs"];
m1_3588 [label="throw new InvalidCastException();", span="8244-8244", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToByte(System.IFormatProvider)", file="DefaultSerializationBinder.cs"];
m1_3589 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToByte(System.IFormatProvider)", span="8242-8242", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToByte(System.IFormatProvider)", file="DefaultSerializationBinder.cs"];
m1_1121 [label="Entry Newtonsoft.Json.Linq.JRaw.JRaw(object)", span="48-48", cluster="Newtonsoft.Json.Linq.JRaw.JRaw(object)", file="DefaultSerializationBinder.cs"];
m1_1589 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", span="3341-3341", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="DefaultSerializationBinder.cs"];
m1_1591 [label="Person p = JsonConvert.DeserializeObject<Person>(json)", span="3345-3345", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="DefaultSerializationBinder.cs"];
m1_1592 [label="Assert.AreEqual('''', p.Name)", span="3346-3346", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="DefaultSerializationBinder.cs"];
m1_1590 [label="string json = @''{''''Name'''':''''''''}''", span="3343-3343", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="DefaultSerializationBinder.cs"];
m1_1593 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", span="3341-3341", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="DefaultSerializationBinder.cs"];
m1_3224 [label="Entry Newtonsoft.Json.Tests.TestObjects.PocoDataContractSerializationAttributesClass.PocoDataContractSerializationAttributesClass()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.PocoDataContractSerializationAttributesClass.PocoDataContractSerializationAttributesClass()", file="DefaultSerializationBinder.cs"];
m1_3635 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.ConvertibleId()", span="8207-8207", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.ConvertibleId()", file="DefaultSerializationBinder.cs"];
m1_2474 [label="Entry Newtonsoft.Json.Tests.Serialization.EnumerableClass.EnumerableClass()", span="8972-8972", cluster="Newtonsoft.Json.Tests.Serialization.EnumerableClass.EnumerableClass()", file="DefaultSerializationBinder.cs"];
m1_3246 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", span="7336-7336", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", file="DefaultSerializationBinder.cs"];
m1_3247 [label="ExceptionAssert.Throws<JsonException>(() =>\r\n            {\r\n                string json = ''[{},1]'';\r\n\r\n                JsonSerializer serializer = new JsonSerializer();\r\n                serializer.CheckAdditionalContent = true;\r\n\r\n                var reader = new JsonTextReader(new StringReader(json));\r\n                reader.Read();\r\n                reader.Read();\r\n\r\n                serializer.Deserialize(reader, typeof(MyType));\r\n            }, ''Additional text found in JSON string after finishing deserializing object.'')", span="7338-7350", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", file="DefaultSerializationBinder.cs"];
m1_3248 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", span="7336-7336", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", file="DefaultSerializationBinder.cs"];
m1_2673 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)", file="DefaultSerializationBinder.cs"];
m1_3185 [label="Entry Newtonsoft.Json.Tests.TestObjects.PersonSerializable.PersonSerializable()", span="33-33", cluster="Newtonsoft.Json.Tests.TestObjects.PersonSerializable.PersonSerializable()", file="DefaultSerializationBinder.cs"];
m1_3698 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", span="8464-8464", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="DefaultSerializationBinder.cs"];
m1_3705 [label="Assert.AreEqual(dt, d.Keys.ElementAt(0))", span="8486-8486", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="DefaultSerializationBinder.cs"];
m1_3699 [label="DateTime dt = new DateTime(2000, 12, 22)", span="8466-8466", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="DefaultSerializationBinder.cs"];
m1_3704 [label="Dictionary<DateTime, string> d = JsonConvert.DeserializeObject<Dictionary<DateTime, string>>(json, settings)", span="8484-8484", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="DefaultSerializationBinder.cs"];
m1_3700 [label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd''", span="8467-8467", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="DefaultSerializationBinder.cs"];
m1_3702 [label="string json = JsonConvert.SerializeObject(new Dictionary<DateTime, string>\r\n            {\r\n                { dt, ''123'' }\r\n            }, settings)", span="8475-8478", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="DefaultSerializationBinder.cs"];
m1_3701 [label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                MetadataPropertyHandling = MetadataPropertyHandling.ReadAhead,\r\n                Formatting = Formatting.Indented\r\n            }", span="8468-8473", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="DefaultSerializationBinder.cs"];
m1_3703 [label="StringAssert.AreEqual(@''{\r\n  ''''2000-pie-Dec-Friday-22'''': ''''123''''\r\n}'', json)", span="8480-8482", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="DefaultSerializationBinder.cs"];
m1_3706 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", span="8464-8464", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="DefaultSerializationBinder.cs"];
m1_1637 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", span="3446-3446", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="DefaultSerializationBinder.cs"];
m1_1642 [label="StructTest deserialized = JsonConvert.DeserializeObject<StructTest>(json)", span="3465-3465", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="DefaultSerializationBinder.cs"];
m1_1643 [label="Assert.AreEqual(structTest.StringProperty, deserialized.StringProperty)", span="3466-3466", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="DefaultSerializationBinder.cs"];
m1_1644 [label="Assert.AreEqual(structTest.StringField, deserialized.StringField)", span="3467-3467", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="DefaultSerializationBinder.cs"];
m1_1645 [label="Assert.AreEqual(structTest.IntProperty, deserialized.IntProperty)", span="3468-3468", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="DefaultSerializationBinder.cs"];
m1_1646 [label="Assert.AreEqual(structTest.IntField, deserialized.IntField)", span="3469-3469", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="DefaultSerializationBinder.cs"];
m1_1639 [label="string json = JsonConvert.SerializeObject(structTest, Formatting.Indented)", span="3456-3456", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="DefaultSerializationBinder.cs"];
m1_1641 [label="StringAssert.AreEqual(@''{\r\n  ''''StringField'''': ''''StringField'''',\r\n  ''''IntField'''': 10,\r\n  ''''StringProperty'''': ''''StringProperty!'''',\r\n  ''''IntProperty'''': 5\r\n}'', json)", span="3458-3463", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="DefaultSerializationBinder.cs"];
m1_1638 [label="StructTest structTest = new StructTest\r\n            {\r\n                StringProperty = ''StringProperty!'',\r\n                StringField = ''StringField'',\r\n                IntProperty = 5,\r\n                IntField = 10\r\n            }", span="3448-3454", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="DefaultSerializationBinder.cs"];
m1_1640 [label="Console.WriteLine(json)", span="3457-3457", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="DefaultSerializationBinder.cs"];
m1_1647 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", span="3446-3446", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="DefaultSerializationBinder.cs"];
m1_45 [label="return null;", span="167-167", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.GetTitle(System.Type)", file="DefaultSerializationBinder.cs"];
m1_2858 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", span="6481-6481", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", file="DefaultSerializationBinder.cs"];
m1_2859 [label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                string json = @''{\r\n  ''''PreProperty'''': true,\r\n  ''''PostProperty'''': ''''-1''''\r\n}'';\r\n\r\n                JsonConvert.DeserializeObject<TestObjects.MyClass>(json);\r\n            }, ''Error reading integer. Unexpected token: Boolean. Path 'PreProperty', line 2, position 22.'')", span="6483-6491", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", file="DefaultSerializationBinder.cs"];
m1_2860 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", span="6481-6481", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", file="DefaultSerializationBinder.cs"];
m1_2429 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable()", span="5354-5354", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable()", file="DefaultSerializationBinder.cs"];
m1_3557 [label="Entry Newtonsoft.Json.Tests.TestObjects.ConsoleWriter.ConsoleWriter()", span="83-83", cluster="Newtonsoft.Json.Tests.TestObjects.ConsoleWriter.ConsoleWriter()", file="DefaultSerializationBinder.cs"];
m1_438 [label="Entry System.Runtime.Serialization.SerializationInfo.GetString(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetString(string)", file="DefaultSerializationBinder.cs"];
m1_1845 [label="Entry System.Collections.Generic.ICollection<T>.Contains(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Contains(T)", file="DefaultSerializationBinder.cs"];
m1_3223 [label="Entry Newtonsoft.Json.Tests.TestObjects.DataContractSerializationAttributesClass.DataContractSerializationAttributesClass()", span="31-31", cluster="Newtonsoft.Json.Tests.TestObjects.DataContractSerializationAttributesClass.DataContractSerializationAttributesClass()", file="DefaultSerializationBinder.cs"];
m1_3840 [label="Entry System.Convert.FromBase64String(string)", span="0-0", cluster="System.Convert.FromBase64String(string)", file="DefaultSerializationBinder.cs"];
m1_1925 [label="Entry System.Runtime.Serialization.SerializationInfo.GetUInt16(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetUInt16(string)", file="DefaultSerializationBinder.cs"];
m1_811 [label="Entry JavaScriptSerializer.cstr", span="", cluster="JavaScriptSerializer.cstr", file="DefaultSerializationBinder.cs"];
m1_3716 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", span="8516-8516", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="DefaultSerializationBinder.cs"];
m1_3723 [label="Assert.AreEqual(dt, d.Keys.ElementAt(0))", span="8538-8538", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="DefaultSerializationBinder.cs"];
m1_3717 [label="DateTimeOffset dt = new DateTimeOffset(2000, 12, 22, 0, 0, 0, TimeSpan.Zero)", span="8518-8518", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="DefaultSerializationBinder.cs"];
m1_3722 [label="Dictionary<DateTimeOffset, string> d = JsonConvert.DeserializeObject<Dictionary<DateTimeOffset, string>>(json, settings)", span="8536-8536", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="DefaultSerializationBinder.cs"];
m1_3718 [label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd'!'K''", span="8519-8519", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="DefaultSerializationBinder.cs"];
m1_3720 [label="string json = JsonConvert.SerializeObject(new Dictionary<DateTimeOffset, string>\r\n            {\r\n                { dt, ''123'' }\r\n            }, settings)", span="8527-8530", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="DefaultSerializationBinder.cs"];
m1_3719 [label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                MetadataPropertyHandling = MetadataPropertyHandling.ReadAhead,\r\n                Formatting = Formatting.Indented\r\n            }", span="8520-8525", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="DefaultSerializationBinder.cs"];
m1_3721 [label="StringAssert.AreEqual(@''{\r\n  ''''2000-pie-Dec-Friday-22!+00:00'''': ''''123''''\r\n}'', json)", span="8532-8534", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="DefaultSerializationBinder.cs"];
m1_3724 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", span="8516-8516", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="DefaultSerializationBinder.cs"];
m1_813 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", span="1752-1752", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", file="DefaultSerializationBinder.cs"];
m1_815 [label="ExceptionAssert.Throws<JsonReaderException>(() => { JsonConvert.DeserializeObject<List<string>>(json); }, @''Bad JSON escape sequence: \j. Path '', line 1, position 7.'')", span="1756-1756", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", file="DefaultSerializationBinder.cs"];
m1_814 [label="string json = @''[''''vvv\jvvv'''']''", span="1754-1754", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", file="DefaultSerializationBinder.cs"];
m1_816 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", span="1752-1752", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", file="DefaultSerializationBinder.cs"];
m1_440 [label="Entry System.Runtime.Serialization.SerializationInfo.GetValue(string, System.Type)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetValue(string, System.Type)", file="DefaultSerializationBinder.cs"];
m1_2914 [label="Entry Newtonsoft.Json.Tests.TestObjects.Widget1.Widget1()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.Widget1.Widget1()", file="DefaultSerializationBinder.cs"];
m1_1037 [label="Entry Newtonsoft.Json.Tests.TestObjects.MemberConverterClass.MemberConverterClass()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.MemberConverterClass.MemberConverterClass()", file="DefaultSerializationBinder.cs"];
m1_1301 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", span="2726-2726", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="DefaultSerializationBinder.cs"];
m1_1306 [label="SubKlass ii = JsonConvert.DeserializeObject<SubKlass>(json)", span="2734-2734", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="DefaultSerializationBinder.cs"];
m1_1305 [label="Assert.AreEqual(@''{''''SubProp'''':''''my subprop'''',''''SuperProp'''':''''overrided superprop''''}'', json)", span="2732-2732", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="DefaultSerializationBinder.cs"];
m1_1308 [label="Assert.AreEqual(@''{''''SubProp'''':''''my subprop'''',''''SuperProp'''':''''overrided superprop''''}'', newJson)", span="2737-2737", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="DefaultSerializationBinder.cs"];
m1_1304 [label="string json = JsonConvert.SerializeObject(i)", span="2731-2731", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="DefaultSerializationBinder.cs"];
m1_1307 [label="string newJson = JsonConvert.SerializeObject(ii)", span="2736-2736", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="DefaultSerializationBinder.cs"];
m1_1302 [label="SubKlass i = new SubKlass(''my subprop'')", span="2728-2728", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="DefaultSerializationBinder.cs"];
m1_1303 [label="i.SuperProp = ''overrided superprop''", span="2729-2729", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="DefaultSerializationBinder.cs"];
m1_1309 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", span="2726-2726", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="DefaultSerializationBinder.cs"];
m1_3166 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", span="7104-7104", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="DefaultSerializationBinder.cs"];
m1_3170 [label="IDictionary<DateTime, int> dic2 = JsonConvert.DeserializeObject<IDictionary<DateTime, int>>(json)", span="7122-7122", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="DefaultSerializationBinder.cs"];
m1_3171 [label="Assert.AreEqual(2, dic2.Count)", span="7124-7124", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="DefaultSerializationBinder.cs"];
m1_3172 [label="Assert.AreEqual(1, dic2[new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", span="7125-7125", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="DefaultSerializationBinder.cs"];
m1_3173 [label="Assert.AreEqual(2, dic2[new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", span="7126-7126", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="DefaultSerializationBinder.cs"];
m1_3168 [label="string json = JsonConvert.SerializeObject(dic1, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.MicrosoftDateFormat\r\n            })", span="7112-7115", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="DefaultSerializationBinder.cs"];
m1_3169 [label="StringAssert.AreEqual(@''{\r\n  ''''\/Date(976623132000)\/'''': 1,\r\n  ''''\/Date(1386850332000)\/'''': 2\r\n}'', json)", span="7117-7120", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="DefaultSerializationBinder.cs"];
m1_3167 [label="IDictionary<DateTime, int> dic1 = new Dictionary<DateTime, int>\r\n            {\r\n                { new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc), 1 },\r\n                { new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc), 2 }\r\n            }", span="7106-7110", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="DefaultSerializationBinder.cs"];
m1_3174 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", span="7104-7104", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="DefaultSerializationBinder.cs"];
m1_506 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", span="1059-1059", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", file="DefaultSerializationBinder.cs"];
m1_510 [label="Assert.AreEqual(expectedJson, json)", span="1064-1064", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", file="DefaultSerializationBinder.cs"];
m1_508 [label="var json = JsonConvert.SerializeObject(original)", span="1062-1062", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", file="DefaultSerializationBinder.cs"];
m1_509 [label="var expectedJson = @''{''''foo'''':{''''bar'''':''''value''''}}''", span="1063-1063", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", file="DefaultSerializationBinder.cs"];
m1_507 [label="var original = new FooBar1 { foo = new Bar1 { bar = ''value'' } }", span="1061-1061", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", file="DefaultSerializationBinder.cs"];
m1_511 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", span="1059-1059", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", file="DefaultSerializationBinder.cs"];
m1_27 [label="Exit lambda expression", span="121-121", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_838 [label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime)", file="DefaultSerializationBinder.cs"];
m1_13 [label="Entry lambda expression", span="105-105", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_14 [label="JsonConvert.DeserializeObject<IList<int>>(''[1'')", span="105-105", cluster="lambda expression", file="DefaultSerializationBinder.cs", color=green, community=0];
m1_15 [label="Exit lambda expression", span="105-105", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_20 [label="JsonConvert.DeserializeObject<IDictionary<string, int>>(''{'key':1'')", span="113-113", cluster="lambda expression", color=green, community=0, file="DefaultSerializationBinder.cs"];
m1_16 [label="Entry lambda expression", span="109-109", cluster="lambda expression", color=red, community=0, file="DefaultSerializationBinder.cs"];
m1_17 [label="JsonConvert.DeserializeObject<IDictionary<string, int>>(''{'key':1,'')", span="109-109", cluster="lambda expression", file="DefaultSerializationBinder.cs", color=green, community=0];
m1_18 [label="Exit lambda expression", span="109-109", cluster="lambda expression", color=red, community=0, file="DefaultSerializationBinder.cs"];
m1_19 [label="Entry lambda expression", span="113-113", cluster="lambda expression", color=red, community=0, file="DefaultSerializationBinder.cs"];
m1_21 [label="Exit lambda expression", span="113-113", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_2675 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", span="6119-6119", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="DefaultSerializationBinder.cs"];
m1_2679 [label="UriGuidTimeSpanTestClass c2 = JsonConvert.DeserializeObject<UriGuidTimeSpanTestClass>(json)", span="6132-6132", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="DefaultSerializationBinder.cs"];
m1_2680 [label="Assert.AreEqual(c1.Guid, c2.Guid)", span="6133-6133", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="DefaultSerializationBinder.cs"];
m1_2681 [label="Assert.AreEqual(c1.NullableGuid, c2.NullableGuid)", span="6134-6134", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="DefaultSerializationBinder.cs"];
m1_2682 [label="Assert.AreEqual(c1.TimeSpan, c2.TimeSpan)", span="6135-6135", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="DefaultSerializationBinder.cs"];
m1_2683 [label="Assert.AreEqual(c1.NullableTimeSpan, c2.NullableTimeSpan)", span="6136-6136", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="DefaultSerializationBinder.cs"];
m1_2684 [label="Assert.AreEqual(c1.Uri, c2.Uri)", span="6137-6137", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="DefaultSerializationBinder.cs"];
m1_2677 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="6122-6122", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="DefaultSerializationBinder.cs"];
m1_2678 [label="StringAssert.AreEqual(@''{\r\n  ''''Guid'''': ''''00000000-0000-0000-0000-000000000000'''',\r\n  ''''NullableGuid'''': null,\r\n  ''''TimeSpan'''': ''''00:00:00'''',\r\n  ''''NullableTimeSpan'''': null,\r\n  ''''Uri'''': null\r\n}'', json)", span="6124-6130", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="DefaultSerializationBinder.cs"];
m1_2676 [label="UriGuidTimeSpanTestClass c1 = new UriGuidTimeSpanTestClass()", span="6121-6121", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="DefaultSerializationBinder.cs"];
m1_2685 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", span="6119-6119", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="DefaultSerializationBinder.cs"];
m1_3528 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", span="8106-8106", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="DefaultSerializationBinder.cs"];
m1_3531 [label="Assert.AreEqual(2, people.Count)", span="8132-8132", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="DefaultSerializationBinder.cs"];
m1_3534 [label="Assert.AreEqual(john, jane.Spouse)", span="8137-8137", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="DefaultSerializationBinder.cs"];
m1_3535 [label="Assert.AreEqual(jane, john.Spouse)", span="8138-8138", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="DefaultSerializationBinder.cs"];
m1_3530 [label="IList<PersonReference> people = JsonConvert.DeserializeObject<IList<PersonReference>>(json, new JsonSerializerSettings\r\n            {\r\n                ReferenceResolver = new IdReferenceResolver(),\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects,\r\n                Formatting = Formatting.Indented\r\n            })", span="8125-8130", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="DefaultSerializationBinder.cs"];
m1_3532 [label="PersonReference john = people[0]", span="8134-8134", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="DefaultSerializationBinder.cs"];
m1_3533 [label="PersonReference jane = people[1]", span="8135-8135", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="DefaultSerializationBinder.cs"];
m1_3529 [label="string json = @''[\r\n  {\r\n    ''''$id'''': ''''0b64ffdf-d155-44ad-9689-58d9adb137f3'''',\r\n    ''''Name'''': ''''John Smith'''',\r\n    ''''Spouse'''': {\r\n      ''''$id'''': ''''ae3c399c-058d-431d-91b0-a36c266441b9'''',\r\n      ''''Name'''': ''''Jane Smith'''',\r\n      ''''Spouse'''': {\r\n        ''''$ref'''': ''''0b64ffdf-d155-44ad-9689-58d9adb137f3''''\r\n      }\r\n    }\r\n  },\r\n  {\r\n    ''''$ref'''': ''''ae3c399c-058d-431d-91b0-a36c266441b9''''\r\n  }\r\n]''", span="8108-8123", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="DefaultSerializationBinder.cs"];
m1_3536 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", span="8106-8106", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="DefaultSerializationBinder.cs"];
m1_1525 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", span="3242-3242", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", file="DefaultSerializationBinder.cs"];
m1_1527 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<Exception>(json); }, @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'System.Exception' because the type requires a JSON object (e.g. {''''name'''':''''value''''}) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON object (e.g. {''''name'''':''''value''''}) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'')", span="3246-3248", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", file="DefaultSerializationBinder.cs"];
m1_1526 [label="string json = @''[]''", span="3244-3244", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", file="DefaultSerializationBinder.cs"];
m1_1528 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", span="3242-3242", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", file="DefaultSerializationBinder.cs"];
m1_740 [label="Entry Newtonsoft.Json.Tests.TestObjects.GetOnlyPropertyClass.GetOnlyPropertyClass()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.GetOnlyPropertyClass.GetOnlyPropertyClass()", file="DefaultSerializationBinder.cs"];
m1_3322 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", span="7514-7514", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="DefaultSerializationBinder.cs"];
m1_3324 [label="var l = JsonConvert.DeserializeObject<IReadOnlyList<int?>>(json)", span="7521-7521", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="DefaultSerializationBinder.cs"];
m1_3325 [label="Assert.AreEqual(1, l[0])", span="7523-7523", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="DefaultSerializationBinder.cs"];
m1_3326 [label="Assert.AreEqual(null, l[1])", span="7524-7524", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="DefaultSerializationBinder.cs"];
m1_3323 [label="string json = @''[\r\n        1,\r\n        null\r\n      ]''", span="7516-7519", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="DefaultSerializationBinder.cs"];
m1_3327 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", span="7514-7514", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="DefaultSerializationBinder.cs"];
m1_3811 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="8770-8770", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DefaultSerializationBinder.cs"];
m1_3812 [label="var messageJObject = serializer.Deserialize<JObject>(reader)", span="8772-8772", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DefaultSerializationBinder.cs"];
m1_3814 [label="return null;", span="8775-8775", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DefaultSerializationBinder.cs"];
m1_3819 [label="return new System.Net.Mail.MailAddress(address, displayName);", span="8785-8785", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DefaultSerializationBinder.cs"];
m1_3820 [label="return new System.Net.Mail.MailAddress(address);", span="8788-8788", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DefaultSerializationBinder.cs"];
m1_3813 [label="messageJObject == null", span="8773-8773", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DefaultSerializationBinder.cs"];
m1_3815 [label="var address = messageJObject.GetValue(''Address'', StringComparison.OrdinalIgnoreCase).ToObject<string>()", span="8778-8778", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DefaultSerializationBinder.cs"];
m1_3818 [label="messageJObject.TryGetValue(''DisplayName'', StringComparison.OrdinalIgnoreCase, out displayNameToken)\r\n                    && !string.IsNullOrEmpty(displayName = displayNameToken.ToObject<string>())", span="8782-8783", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DefaultSerializationBinder.cs"];
m1_3816 [label="JToken displayNameToken", span="8780-8780", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DefaultSerializationBinder.cs"];
m1_3817 [label="string displayName", span="8781-8781", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DefaultSerializationBinder.cs"];
m1_3821 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="8770-8770", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DefaultSerializationBinder.cs"];
m1_1567 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", span="3307-3307", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="DefaultSerializationBinder.cs"];
m1_1569 [label="JsonConvert.DeserializeObject<List<Person>>(json)", span="3313-3313", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="DefaultSerializationBinder.cs"];
m1_1568 [label="string json = @''{}''", span="3309-3309", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="DefaultSerializationBinder.cs"];
m1_1570 [label="Assert.Fail()", span="3314-3314", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="DefaultSerializationBinder.cs"];
m1_1571 [label=JsonSerializationException, span="3316-3316", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="DefaultSerializationBinder.cs"];
m1_1572 [label="Assert.IsTrue(ex.Message.StartsWith(@''Cannot deserialize the current JSON object (e.g. {''''name'''':''''value''''}) into type 'System.Collections.Generic.List`1[Newtonsoft.Json.Tests.TestObjects.Person]' because the type requires a JSON array (e.g. [1,2,3]) to deserialize correctly.'' + Environment.NewLine +\r\n                                                    @''To fix this error either change the JSON to a JSON array (e.g. [1,2,3]) or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.'' + Environment.NewLine +\r\n                                                    @''Path ''''))", span="3318-3320", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="DefaultSerializationBinder.cs"];
m1_1573 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", span="3307-3307", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="DefaultSerializationBinder.cs"];
m1_277 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", span="655-655", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="DefaultSerializationBinder.cs"];
m1_281 [label="Assert.AreEqual(customBinder, settings.Binder)", span="661-661", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="DefaultSerializationBinder.cs"];
m1_283 [label="Assert.AreEqual(true, settings.CheckAdditionalContent)", span="664-664", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="DefaultSerializationBinder.cs"];
m1_285 [label="Assert.AreEqual(ConstructorHandling.AllowNonPublicDefaultConstructor, settings.ConstructorHandling)", span="667-667", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="DefaultSerializationBinder.cs"];
m1_287 [label="Assert.AreEqual(new StreamingContext(StreamingContextStates.Other), settings.Context)", span="671-671", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="DefaultSerializationBinder.cs"];
m1_290 [label="Assert.AreEqual(resolver, settings.ContractResolver)", span="676-676", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="DefaultSerializationBinder.cs"];
m1_292 [label="Assert.AreEqual(1, settings.Converters.Count)", span="679-679", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="DefaultSerializationBinder.cs"];
m1_294 [label="Assert.AreEqual(''en-NZ'', settings.Culture.ToString())", span="682-682", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="DefaultSerializationBinder.cs"];
m1_296 [label="Assert.AreEqual(DateFormatHandling.MicrosoftDateFormat, settings.DateFormatHandling)", span="685-685", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="DefaultSerializationBinder.cs"];
m1_298 [label="Assert.AreEqual(''yyyy'', settings.DateFormatString)", span="688-688", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="DefaultSerializationBinder.cs"];
m1_300 [label="Assert.AreEqual(DateParseHandling.None, settings.DateParseHandling)", span="691-691", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="DefaultSerializationBinder.cs"];
m1_302 [label="Assert.AreEqual(DateTimeZoneHandling.Utc, settings.DateTimeZoneHandling)", span="694-694", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="DefaultSerializationBinder.cs"];
m1_304 [label="Assert.AreEqual(DefaultValueHandling.IgnoreAndPopulate, settings.DefaultValueHandling)", span="697-697", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="DefaultSerializationBinder.cs"];
m1_306 [label="Assert.AreEqual(FloatFormatHandling.Symbol, settings.FloatFormatHandling)", span="700-700", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="DefaultSerializationBinder.cs"];
m1_308 [label="Assert.AreEqual(FloatParseHandling.Decimal, settings.FloatParseHandling)", span="703-703", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="DefaultSerializationBinder.cs"];
m1_310 [label="Assert.AreEqual(Formatting.Indented, settings.Formatting)", span="706-706", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="DefaultSerializationBinder.cs"];
m1_312 [label="Assert.AreEqual(9001, settings.MaxDepth)", span="709-709", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="DefaultSerializationBinder.cs"];
m1_314 [label="Assert.AreEqual(MissingMemberHandling.Error, settings.MissingMemberHandling)", span="712-712", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="DefaultSerializationBinder.cs"];
m1_316 [label="Assert.AreEqual(NullValueHandling.Ignore, settings.NullValueHandling)", span="715-715", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="DefaultSerializationBinder.cs"];
m1_318 [label="Assert.AreEqual(ObjectCreationHandling.Replace, settings.ObjectCreationHandling)", span="718-718", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="DefaultSerializationBinder.cs"];
m1_320 [label="Assert.AreEqual(PreserveReferencesHandling.All, settings.PreserveReferencesHandling)", span="721-721", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="DefaultSerializationBinder.cs"];
m1_322 [label="Assert.AreEqual(ReferenceLoopHandling.Ignore, settings.ReferenceLoopHandling)", span="724-724", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="DefaultSerializationBinder.cs"];
m1_325 [label="Assert.AreEqual(referenceResolver, settings.ReferenceResolver)", span="728-728", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="DefaultSerializationBinder.cs"];
m1_327 [label="Assert.AreEqual(StringEscapeHandling.EscapeNonAscii, settings.StringEscapeHandling)", span="731-731", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="DefaultSerializationBinder.cs"];
m1_330 [label="Assert.AreEqual(traceWriter, settings.TraceWriter)", span="735-735", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="DefaultSerializationBinder.cs"];
m1_332 [label="Assert.AreEqual(FormatterAssemblyStyle.Full, settings.TypeNameAssemblyFormat)", span="739-739", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="DefaultSerializationBinder.cs"];
m1_334 [label="Assert.AreEqual(TypeNameHandling.All, settings.TypeNameHandling)", span="743-743", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="DefaultSerializationBinder.cs"];
m1_291 [label="settings.Converters.Add(new StringEnumConverter())", span="678-678", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="DefaultSerializationBinder.cs"];
m1_278 [label="JsonSerializerSettings settings = new JsonSerializerSettings()", span="657-657", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="DefaultSerializationBinder.cs"];
m1_279 [label="DefaultSerializationBinder customBinder = new DefaultSerializationBinder()", span="659-659", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="DefaultSerializationBinder.cs"];
m1_280 [label="settings.Binder = customBinder", span="660-660", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="DefaultSerializationBinder.cs"];
m1_282 [label="settings.CheckAdditionalContent = true", span="663-663", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="DefaultSerializationBinder.cs"];
m1_284 [label="settings.ConstructorHandling = ConstructorHandling.AllowNonPublicDefaultConstructor", span="666-666", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="DefaultSerializationBinder.cs"];
m1_286 [label="settings.Context = new StreamingContext(StreamingContextStates.Other)", span="670-670", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="DefaultSerializationBinder.cs"];
m1_288 [label="CamelCasePropertyNamesContractResolver resolver = new CamelCasePropertyNamesContractResolver()", span="674-674", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="DefaultSerializationBinder.cs"];
m1_289 [label="settings.ContractResolver = resolver", span="675-675", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="DefaultSerializationBinder.cs"];
m1_293 [label="settings.Culture = new CultureInfo(''en-nz'')", span="681-681", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="DefaultSerializationBinder.cs"];
m1_295 [label="settings.DateFormatHandling = DateFormatHandling.MicrosoftDateFormat", span="684-684", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="DefaultSerializationBinder.cs"];
m1_297 [label="settings.DateFormatString = ''yyyy''", span="687-687", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="DefaultSerializationBinder.cs"];
m1_299 [label="settings.DateParseHandling = DateParseHandling.None", span="690-690", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="DefaultSerializationBinder.cs"];
m1_301 [label="settings.DateTimeZoneHandling = DateTimeZoneHandling.Utc", span="693-693", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="DefaultSerializationBinder.cs"];
m1_303 [label="settings.DefaultValueHandling = DefaultValueHandling.IgnoreAndPopulate", span="696-696", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="DefaultSerializationBinder.cs"];
m1_305 [label="settings.FloatFormatHandling = FloatFormatHandling.Symbol", span="699-699", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="DefaultSerializationBinder.cs"];
m1_307 [label="settings.FloatParseHandling = FloatParseHandling.Decimal", span="702-702", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="DefaultSerializationBinder.cs"];
m1_309 [label="settings.Formatting = Formatting.Indented", span="705-705", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="DefaultSerializationBinder.cs"];
m1_311 [label="settings.MaxDepth = 9001", span="708-708", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="DefaultSerializationBinder.cs"];
m1_313 [label="settings.MissingMemberHandling = MissingMemberHandling.Error", span="711-711", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="DefaultSerializationBinder.cs"];
m1_315 [label="settings.NullValueHandling = NullValueHandling.Ignore", span="714-714", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="DefaultSerializationBinder.cs"];
m1_317 [label="settings.ObjectCreationHandling = ObjectCreationHandling.Replace", span="717-717", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="DefaultSerializationBinder.cs"];
m1_319 [label="settings.PreserveReferencesHandling = PreserveReferencesHandling.All", span="720-720", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="DefaultSerializationBinder.cs"];
m1_321 [label="settings.ReferenceLoopHandling = ReferenceLoopHandling.Ignore", span="723-723", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="DefaultSerializationBinder.cs"];
m1_323 [label="IdReferenceResolver referenceResolver = new IdReferenceResolver()", span="726-726", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="DefaultSerializationBinder.cs"];
m1_324 [label="settings.ReferenceResolver = referenceResolver", span="727-727", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="DefaultSerializationBinder.cs"];
m1_326 [label="settings.StringEscapeHandling = StringEscapeHandling.EscapeNonAscii", span="730-730", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="DefaultSerializationBinder.cs"];
m1_328 [label="MemoryTraceWriter traceWriter = new MemoryTraceWriter()", span="733-733", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="DefaultSerializationBinder.cs"];
m1_329 [label="settings.TraceWriter = traceWriter", span="734-734", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="DefaultSerializationBinder.cs"];
m1_331 [label="settings.TypeNameAssemblyFormat = FormatterAssemblyStyle.Full", span="738-738", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="DefaultSerializationBinder.cs"];
m1_333 [label="settings.TypeNameHandling = TypeNameHandling.All", span="742-742", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="DefaultSerializationBinder.cs"];
m1_335 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", span="655-655", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="DefaultSerializationBinder.cs"];
m1_555 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.DictionaryKeyCast(string, int)", span="1129-1129", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.DictionaryKeyCast(string, int)", file="DefaultSerializationBinder.cs"];
m1_568 [label="_name = name", span="1131-1131", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.DictionaryKeyCast(string, int)", file="DefaultSerializationBinder.cs"];
m1_569 [label="_number = number", span="1132-1132", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.DictionaryKeyCast(string, int)", file="DefaultSerializationBinder.cs"];
m1_570 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.DictionaryKeyCast(string, int)", span="1129-1129", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.DictionaryKeyCast(string, int)", file="DefaultSerializationBinder.cs"];
m1_2398 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", span="5334-5334", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="DefaultSerializationBinder.cs"];
m1_2403 [label="Assert.AreEqual(((Derived)meh).IDoWork, ''woo'')", span="5348-5348", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="DefaultSerializationBinder.cs"];
m1_2404 [label="Assert.AreEqual(meh.IDontWork, ''meh'')", span="5349-5349", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="DefaultSerializationBinder.cs"];
m1_2402 [label="var meh = JsonConvert.DeserializeObject<Base>(json, settings)", span="5346-5346", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="DefaultSerializationBinder.cs"];
m1_2400 [label="var settings = new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Objects,\r\n                ConstructorHandling = ConstructorHandling.AllowNonPublicDefaultConstructor\r\n            }", span="5338-5342", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="DefaultSerializationBinder.cs"];
m1_2401 [label="string json = JsonConvert.SerializeObject(derived, Formatting.Indented, settings)", span="5344-5344", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="DefaultSerializationBinder.cs"];
m1_2399 [label="var derived = new Derived(''meh'', ''woo'')", span="5336-5336", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="DefaultSerializationBinder.cs"];
m1_2405 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", span="5334-5334", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="DefaultSerializationBinder.cs"];
m1_1553 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", span="3291-3291", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", file="DefaultSerializationBinder.cs"];
m1_1555 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<Person>(json); }, @''Error converting value ''''Constructor'''' to type 'Newtonsoft.Json.Tests.TestObjects.Person'. Path '', line 1, position 16.'')", span="3295-3295", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", file="DefaultSerializationBinder.cs"];
m1_1554 [label="string json = @''new Constructor(123)''", span="3293-3293", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", file="DefaultSerializationBinder.cs"];
m1_1556 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", span="3291-3291", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", file="DefaultSerializationBinder.cs"];
m1_1926 [label="Entry System.Runtime.Serialization.SerializationInfo.GetUInt32(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetUInt32(string)", file="DefaultSerializationBinder.cs"];
m1_150 [label="Entry Newtonsoft.Json.Schema.JsonSchema.JsonSchema()", span="188-188", cluster="Newtonsoft.Json.Schema.JsonSchema.JsonSchema()", file="DefaultSerializationBinder.cs"];
m1_153 [label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0", cluster="System.Type.IsAssignableFrom(System.Type)", file="DefaultSerializationBinder.cs"];
m1_154 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", span="345-345", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="DefaultSerializationBinder.cs"];
m1_156 [label="Entry Newtonsoft.Json.Schema.JsonSchemaGenerator.GetJsonSchemaType(System.Type, Newtonsoft.Json.Required)", span="395-395", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.GetJsonSchemaType(System.Type, Newtonsoft.Json.Required)", file="DefaultSerializationBinder.cs"];
m1_151 [label="Entry Newtonsoft.Json.Schema.JsonSchemaGenerator.AddNullType(Newtonsoft.Json.Schema.JsonSchemaType, Newtonsoft.Json.Required)", span="346-346", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.AddNullType(Newtonsoft.Json.Schema.JsonSchemaType, Newtonsoft.Json.Required)", file="DefaultSerializationBinder.cs"];
m1_157 [label="Entry System.Reflection.MemberInfo.IsDefined(System.Type, bool)", span="0-0", cluster="System.Reflection.MemberInfo.IsDefined(System.Type, bool)", file="DefaultSerializationBinder.cs"];
m1_1093 [label="Entry Newtonsoft.Json.Tests.TestObjects.ClassAndMemberConverterClass.ClassAndMemberConverterClass()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.ClassAndMemberConverterClass.ClassAndMemberConverterClass()", file="DefaultSerializationBinder.cs"];
m1_3839 [label="Entry System.Net.Mail.Attachment.Attachment(System.IO.Stream, string)", span="0-0", cluster="System.Net.Mail.Attachment.Attachment(System.IO.Stream, string)", file="DefaultSerializationBinder.cs"];
m1_559 [label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0", cluster="System.IO.MemoryStream.MemoryStream()", file="DefaultSerializationBinder.cs"];
m1_3500 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor.FooConstructor(string)", span="8022-8022", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor.FooConstructor(string)", file="DefaultSerializationBinder.cs"];
m1_3502 [label="throw new ArgumentNullException(''bar'');", span="8025-8025", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor.FooConstructor(string)", file="DefaultSerializationBinder.cs"];
m1_3501 [label="bar == null", span="8024-8024", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor.FooConstructor(string)", file="DefaultSerializationBinder.cs"];
m1_3503 [label="Bar = bar", span="8027-8027", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor.FooConstructor(string)", file="DefaultSerializationBinder.cs"];
m1_3504 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor.FooConstructor(string)", span="8022-8022", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor.FooConstructor(string)", file="DefaultSerializationBinder.cs"];
m1_3593 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDateTime(System.IFormatProvider)", span="8252-8252", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDateTime(System.IFormatProvider)", file="DefaultSerializationBinder.cs"];
m1_3594 [label="throw new InvalidCastException();", span="8254-8254", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDateTime(System.IFormatProvider)", file="DefaultSerializationBinder.cs"];
m1_3595 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDateTime(System.IFormatProvider)", span="8252-8252", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDateTime(System.IFormatProvider)", file="DefaultSerializationBinder.cs"];
m1_3296 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", span="7435-7435", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", file="DefaultSerializationBinder.cs"];
m1_3297 [label="m_Item1 = item1", span="7437-7437", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", file="DefaultSerializationBinder.cs"];
m1_3298 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", span="7435-7435", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", file="DefaultSerializationBinder.cs"];
m1_2625 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CollectionClassAttributeDerived()", span="5891-5891", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CollectionClassAttributeDerived()", file="DefaultSerializationBinder.cs"];
m1_2580 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", span="5846-5846", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", file="DefaultSerializationBinder.cs"];
m1_2582 [label="Categories = new Dictionary<string, int>()", span="5849-5849", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", file="DefaultSerializationBinder.cs"];
m1_2581 [label="Title = title", span="5848-5848", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", file="DefaultSerializationBinder.cs"];
m1_2583 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", span="5846-5846", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", file="DefaultSerializationBinder.cs"];
m1_3367 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloats.NullableFloats()", span="7636-7636", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloats.NullableFloats()", file="DefaultSerializationBinder.cs"];
m1_2365 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", span="5256-5256", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="DefaultSerializationBinder.cs"];
m1_2371 [label="Assert.AreEqual(123456789876543.21m, d[''Value''])", span="5265-5265", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="DefaultSerializationBinder.cs"];
m1_2370 [label="IDictionary<string, decimal> d = serializer.Deserialize<IDictionary<string, decimal>>(reader)", span="5264-5264", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="DefaultSerializationBinder.cs"];
m1_2367 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="5259-5259", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="DefaultSerializationBinder.cs"];
m1_2369 [label="JsonSerializer serializer = new JsonSerializer()", span="5262-5262", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="DefaultSerializationBinder.cs"];
m1_2366 [label="string json = ''{'Value':123456789876543.21}''", span="5258-5258", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="DefaultSerializationBinder.cs"];
m1_2368 [label="reader.FloatParseHandling = FloatParseHandling.Decimal", span="5260-5260", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="DefaultSerializationBinder.cs"];
m1_2372 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", span="5256-5256", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="DefaultSerializationBinder.cs"];
m1_2631 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", span="5978-5978", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", file="DefaultSerializationBinder.cs"];
m1_2632 [label="_readonlyString = ''default!''", span="5980-5980", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", file="DefaultSerializationBinder.cs"];
m1_2633 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", span="5978-5978", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", file="DefaultSerializationBinder.cs"];
m1_563 [label="Entry System.IO.MemoryStream.Seek(long, System.IO.SeekOrigin)", span="0-0", cluster="System.IO.MemoryStream.Seek(long, System.IO.SeekOrigin)", file="DefaultSerializationBinder.cs"];
m1_1919 [label="Entry System.Runtime.Serialization.SerializationInfo.GetDateTime(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetDateTime(string)", file="DefaultSerializationBinder.cs"];
m1_788 [label="Entry Newtonsoft.Json.Tests.TestObjects.BadJsonPropertyClass.BadJsonPropertyClass()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.BadJsonPropertyClass.BadJsonPropertyClass()", file="DefaultSerializationBinder.cs"];
m1_984 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", span="2071-2071", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="DefaultSerializationBinder.cs"];
m1_988 [label="ClassWithTimeSpan c = JsonConvert.DeserializeObject<ClassWithTimeSpan>(json)", span="2080-2080", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="DefaultSerializationBinder.cs"];
m1_989 [label="Assert.AreEqual(ts, c.TimeSpanField)", span="2081-2081", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="DefaultSerializationBinder.cs"];
m1_986 [label="string json = JsonConvert.SerializeObject(new ClassWithTimeSpan { TimeSpanField = ts }, Formatting.Indented)", span="2075-2075", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="DefaultSerializationBinder.cs"];
m1_987 [label="StringAssert.AreEqual(@''{\r\n  ''''TimeSpanField'''': ''''23:59:01''''\r\n}'', json)", span="2076-2078", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="DefaultSerializationBinder.cs"];
m1_985 [label="TimeSpan ts = new TimeSpan(00, 23, 59, 1)", span="2073-2073", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="DefaultSerializationBinder.cs"];
m1_990 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", span="2071-2071", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="DefaultSerializationBinder.cs"];
m1_478 [label="Entry System.Text.RegularExpressions.Regex.Regex(string, System.Text.RegularExpressions.RegexOptions)", span="0-0", cluster="System.Text.RegularExpressions.Regex.Regex(string, System.Text.RegularExpressions.RegexOptions)", file="DefaultSerializationBinder.cs"];
m1_3328 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", span="7529-7529", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="DefaultSerializationBinder.cs"];
m1_3331 [label="Assert.AreEqual(@''{''''m_Item1'''':500}'', json)", span="7533-7533", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="DefaultSerializationBinder.cs"];
m1_3335 [label="Assert.AreEqual(500, obj.Item1)", span="7541-7541", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="DefaultSerializationBinder.cs"];
m1_3332 [label="MyTuple<int> obj = null", span="7535-7535", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="DefaultSerializationBinder.cs"];
m1_3330 [label="var json = JsonConvert.SerializeObject(tuple)", span="7532-7532", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="DefaultSerializationBinder.cs"];
m1_3334 [label="doStuff()", span="7540-7540", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="DefaultSerializationBinder.cs"];
m1_3333 [label="Action doStuff = () => { obj = JsonConvert.DeserializeObject<MyTuple<int>>(json); }", span="7537-7537", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="DefaultSerializationBinder.cs"];
m1_3329 [label="var tuple = new MyTuple<int>(500)", span="7531-7531", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="DefaultSerializationBinder.cs"];
m1_3336 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", span="7529-7529", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="DefaultSerializationBinder.cs"];
m1_1896 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="4207-4207", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DefaultSerializationBinder.cs"];
m1_1897 [label="_stringValue = info.GetString(''stringValue'')", span="4209-4209", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DefaultSerializationBinder.cs"];
m1_1898 [label="_intValue = info.GetInt32(''intValue'')", span="4210-4210", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DefaultSerializationBinder.cs"];
m1_1899 [label="_dateTimeOffsetValue = (DateTimeOffset)info.GetValue(''dateTimeOffsetValue'', typeof(DateTimeOffset))", span="4211-4211", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DefaultSerializationBinder.cs"];
m1_1900 [label="_personValue = (Person)info.GetValue(''personValue'', typeof(Person))", span="4212-4212", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DefaultSerializationBinder.cs"];
m1_1901 [label="_nullPersonValue = (Person)info.GetValue(''nullPersonValue'', typeof(Person))", span="4213-4213", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DefaultSerializationBinder.cs"];
m1_1902 [label="_nullableInt = (int?)info.GetValue(''nullableInt'', typeof(int?))", span="4214-4214", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DefaultSerializationBinder.cs"];
m1_1903 [label="_booleanValue = info.GetBoolean(''booleanValue'')", span="4216-4216", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DefaultSerializationBinder.cs"];
m1_1904 [label="_byteValue = info.GetByte(''byteValue'')", span="4217-4217", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DefaultSerializationBinder.cs"];
m1_1905 [label="_charValue = info.GetChar(''charValue'')", span="4218-4218", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DefaultSerializationBinder.cs"];
m1_1906 [label="_dateTimeValue = info.GetDateTime(''dateTimeValue'')", span="4219-4219", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DefaultSerializationBinder.cs"];
m1_1907 [label="_decimalValue = info.GetDecimal(''decimalValue'')", span="4220-4220", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DefaultSerializationBinder.cs"];
m1_1908 [label="_shortValue = info.GetInt16(''shortValue'')", span="4221-4221", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DefaultSerializationBinder.cs"];
m1_1909 [label="_longValue = info.GetInt64(''longValue'')", span="4222-4222", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DefaultSerializationBinder.cs"];
m1_1910 [label="_sbyteValue = info.GetSByte(''sbyteValue'')", span="4223-4223", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DefaultSerializationBinder.cs"];
m1_1911 [label="_floatValue = info.GetSingle(''floatValue'')", span="4224-4224", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DefaultSerializationBinder.cs"];
m1_1912 [label="_ushortValue = info.GetUInt16(''ushortValue'')", span="4225-4225", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DefaultSerializationBinder.cs"];
m1_1913 [label="_uintValue = info.GetUInt32(''uintValue'')", span="4226-4226", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DefaultSerializationBinder.cs"];
m1_1914 [label="_ulongValue = info.GetUInt64(''ulongValue'')", span="4227-4227", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DefaultSerializationBinder.cs"];
m1_1915 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="4207-4207", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DefaultSerializationBinder.cs"];
m1_397 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", span="840-840", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="DefaultSerializationBinder.cs"];
m1_401 [label="Ratio ratio2 = JsonConvert.DeserializeObject<Ratio>(json)", span="847-847", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="DefaultSerializationBinder.cs"];
m1_402 [label="Assert.AreEqual(ratio.Denominator, ratio2.Denominator)", span="849-849", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="DefaultSerializationBinder.cs"];
m1_400 [label="Assert.AreEqual(@''{''''n'''':2,''''d'''':1}'', json)", span="845-845", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="DefaultSerializationBinder.cs"];
m1_403 [label="Assert.AreEqual(ratio.Numerator, ratio2.Numerator)", span="850-850", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="DefaultSerializationBinder.cs"];
m1_399 [label="string json = JsonConvert.SerializeObject(ratio)", span="843-843", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="DefaultSerializationBinder.cs"];
m1_398 [label="Ratio ratio = new Ratio(2, 1)", span="842-842", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="DefaultSerializationBinder.cs"];
m1_404 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", span="840-840", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="DefaultSerializationBinder.cs"];
m1_2891 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", span="6556-6556", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="DefaultSerializationBinder.cs"];
m1_2894 [label="Assert.AreEqual('''', dict[''k1''])", span="6561-6561", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="DefaultSerializationBinder.cs"];
m1_2895 [label="Assert.AreEqual(''v2'', dict[''k2''])", span="6562-6562", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="DefaultSerializationBinder.cs"];
m1_2893 [label="var dict = serializer.Deserialize<Dictionary<string, string>>(new JsonTextReader(new StringReader(''{'k1':'','k2':'v2'}'')))", span="6559-6559", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="DefaultSerializationBinder.cs"];
m1_2892 [label="var serializer = JsonSerializer.Create(new JsonSerializerSettings())", span="6558-6558", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="DefaultSerializationBinder.cs"];
m1_2896 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", span="6556-6556", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="DefaultSerializationBinder.cs"];
m1_3175 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", span="7130-7130", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", file="DefaultSerializationBinder.cs"];
m1_3177 [label="Assert.AreEqual('''', s)", span="7133-7133", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", file="DefaultSerializationBinder.cs"];
m1_3176 [label="string s = (string)new JsonSerializer().Deserialize(new JsonTextReader(new StringReader('''''')))", span="7132-7132", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", file="DefaultSerializationBinder.cs"];
m1_3178 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", span="7130-7130", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", file="DefaultSerializationBinder.cs"];
m1_3286 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", span="7404-7404", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="DefaultSerializationBinder.cs"];
m1_3287 [label="KeyValuePair<int, string> result =\r\n                JsonConvert.DeserializeObject<KeyValuePair<int, string>>(\r\n                    ''{key: 123, \''VALUE\'': \''test value\''}''\r\n                    )", span="7406-7409", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="DefaultSerializationBinder.cs"];
m1_3288 [label="Assert.AreEqual(123, result.Key)", span="7411-7411", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="DefaultSerializationBinder.cs"];
m1_3289 [label="Assert.AreEqual(''test value'', result.Value)", span="7412-7412", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="DefaultSerializationBinder.cs"];
m1_3290 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", span="7404-7404", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="DefaultSerializationBinder.cs"];
m1_953 [label="Entry System.Collections.Generic.Stack<T>.Stack()", span="0-0", cluster="System.Collections.Generic.Stack<T>.Stack()", file="DefaultSerializationBinder.cs"];
m1_1823 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary()", span="4044-4044", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary()", file="DefaultSerializationBinder.cs"];
m1_1824 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary()", span="4044-4044", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary()", file="DefaultSerializationBinder.cs"];
m1_2698 [label="Entry System.TimeSpan.FromDays(double)", span="0-0", cluster="System.TimeSpan.FromDays(double)", file="DefaultSerializationBinder.cs"];
m1_684 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", span="1470-1470", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="DefaultSerializationBinder.cs"];
m1_687 [label="Assert.AreEqual(''Orange'', p.Name)", span="1476-1476", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="DefaultSerializationBinder.cs"];
m1_688 [label="Assert.AreEqual(new DateTime(2010, 1, 24, 12, 0, 0), p.ExpiryDate)", span="1477-1477", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="DefaultSerializationBinder.cs"];
m1_689 [label="Assert.AreEqual(3.99m, p.Price)", span="1478-1478", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="DefaultSerializationBinder.cs"];
m1_686 [label="Product p = JsonConvert.DeserializeObject(value, typeof(Product)) as Product", span="1474-1474", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="DefaultSerializationBinder.cs"];
m1_685 [label="string value = @''{''''Name'''':''''Orange'''', ''''Price'''':3.99, ''''ExpiryDate'''':''''01/24/2010 12:00:00''''}''", span="1472-1472", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="DefaultSerializationBinder.cs"];
m1_690 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", span="1470-1470", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="DefaultSerializationBinder.cs"];
m1_1240 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", span="2563-2563", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", file="DefaultSerializationBinder.cs"];
m1_1241 [label="Person person = new Person\r\n            {\r\n                Name = ''Mike Manager'',\r\n                BirthDate = new DateTime(1983, 8, 3, 0, 0, 0, DateTimeKind.Utc),\r\n                Department = ''IT'',\r\n                LastModified = new DateTime(2009, 2, 15, 0, 0, 0, DateTimeKind.Utc)\r\n            }", span="2565-2571", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", file="DefaultSerializationBinder.cs"];
m1_1242 [label="return person;", span="2572-2572", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", file="DefaultSerializationBinder.cs"];
m1_1243 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", span="2563-2563", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", file="DefaultSerializationBinder.cs"];
m1_225 [label="Assert.AreEqual(1, serializer.Converters.Count)", span="587-587", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="DefaultSerializationBinder.cs"];
m1_493 [label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="410-410", cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="DefaultSerializationBinder.cs"];
m1_746 [label="Entry Newtonsoft.Json.Tests.TestObjects.SetOnlyPropertyClass.SetOnlyPropertyClass()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.SetOnlyPropertyClass.SetOnlyPropertyClass()", file="DefaultSerializationBinder.cs"];
m1_3526 [label="Entry Size.cstr", span="", cluster="Size.cstr", file="DefaultSerializationBinder.cs"];
m1_32 [label="Assert.AreEqual(EnumA.ValueA, e2)", span="144-144", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", file="DefaultSerializationBinder.cs", color=green, community=0];
m1_33 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", span="138-138", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", file="DefaultSerializationBinder.cs"];
m1_34 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="DefaultSerializationBinder.cs"];
m1_1294 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", span="2710-2710", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="DefaultSerializationBinder.cs"];
m1_1296 [label="JsonConvert.DeserializeObject<ConstructorAndRequiredTestClass>(json)", span="2715-2715", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="DefaultSerializationBinder.cs"];
m1_1295 [label="string json = ''{ 'testProperty1': 'value' }''", span="2714-2714", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="DefaultSerializationBinder.cs"];
m1_1297 [label="Assert.Fail()", span="2717-2717", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="DefaultSerializationBinder.cs"];
m1_1298 [label=JsonSerializationException, span="2719-2719", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="DefaultSerializationBinder.cs"];
m1_1299 [label="Assert.IsTrue(ex.Message.StartsWith(''Required property 'TestProperty2' not found in JSON. Path ''''))", span="2721-2721", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="DefaultSerializationBinder.cs"];
m1_1300 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", span="2710-2710", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="DefaultSerializationBinder.cs"];
m1_2746 [label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="860-860", cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="DefaultSerializationBinder.cs"];
m1_1197 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", span="2461-2461", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="DefaultSerializationBinder.cs"];
m1_1199 [label="JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="2469-2469", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="DefaultSerializationBinder.cs"];
m1_1198 [label="string json = @''{\r\n  ''''FirstName'''': ''''Bob''''\r\n}''", span="2465-2467", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="DefaultSerializationBinder.cs"];
m1_1200 [label="Assert.Fail()", span="2470-2470", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="DefaultSerializationBinder.cs"];
m1_1201 [label=JsonSerializationException, span="2472-2472", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="DefaultSerializationBinder.cs"];
m1_1202 [label="Assert.IsTrue(ex.Message.StartsWith(''Required property 'LastName' not found in JSON. Path ''''))", span="2474-2474", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="DefaultSerializationBinder.cs"];
m1_1203 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", span="2461-2461", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="DefaultSerializationBinder.cs"];
m1_167 [label="Exit lambda expression", span="231-231", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_3822 [label="Entry Newtonsoft.Json.Linq.JObject.GetValue(string, System.StringComparison)", span="433-433", cluster="Newtonsoft.Json.Linq.JObject.GetValue(string, System.StringComparison)", file="DefaultSerializationBinder.cs"];
m1_1189 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", span="2443-2443", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", file="DefaultSerializationBinder.cs"];
m1_1190 [label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                RequiredMembersClass requiredMembersClass = new RequiredMembersClass\r\n                {\r\n                    FirstName = null,\r\n                    BirthDate = new DateTime(2000, 10, 10, 10, 10, 10, DateTimeKind.Utc),\r\n                    LastName = null,\r\n                    MiddleName = null\r\n                };\r\n\r\n                string json = JsonConvert.SerializeObject(requiredMembersClass);\r\n                Console.WriteLine(json);\r\n            }, ''Cannot write a null value for property 'FirstName'. Property requires a value. Path ''.'')", span="2445-2457", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", file="DefaultSerializationBinder.cs"];
m1_1191 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", span="2443-2443", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", file="DefaultSerializationBinder.cs"];
m1_490 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(string)", span="154-154", cluster="Newtonsoft.Json.Linq.JValue.JValue(string)", file="DefaultSerializationBinder.cs"];
m1_29 [label="var e1 = JsonConvert.DeserializeObject<EnumA>('''ValueA''')", span="140-140", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", file="DefaultSerializationBinder.cs", color=green, community=0];
m1_30 [label="Assert.AreEqual(EnumA.ValueA, e1)", span="141-141", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", file="DefaultSerializationBinder.cs", color=green, community=0];
m1_31 [label="var e2 = JsonConvert.DeserializeObject<EnumA>('''value_a''', new StringEnumConverter())", span="143-143", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", file="DefaultSerializationBinder.cs", color=green, community=0];
m1_2409 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="5370-5370", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DefaultSerializationBinder.cs"];
m1_2410 [label="info.AddValue(''Name'', _name)", span="5372-5372", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DefaultSerializationBinder.cs"];
m1_2411 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="5370-5370", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DefaultSerializationBinder.cs"];
m1_3623 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt32(System.IFormatProvider)", span="8302-8302", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt32(System.IFormatProvider)", file="DefaultSerializationBinder.cs"];
m1_3624 [label="throw new InvalidCastException();", span="8304-8304", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt32(System.IFormatProvider)", file="DefaultSerializationBinder.cs"];
m1_3625 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt32(System.IFormatProvider)", span="8302-8302", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt32(System.IFormatProvider)", file="DefaultSerializationBinder.cs"];
m1_1627 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="DefaultSerializationBinder.cs"];
m1_2114 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pos.Pos()", span="4744-4744", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pos.Pos()", file="DefaultSerializationBinder.cs"];
m1_66 [label="UndefinedSchemaIdHandling.UseTypeName", span="198-198", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.GetTypeId(System.Type, bool)", file="DefaultSerializationBinder.cs"];
m1_3337 [label="Entry System.Action.Invoke()", span="0-0", cluster="System.Action.Invoke()", file="DefaultSerializationBinder.cs"];
m1_3583 [label="Entry System.InvalidCastException.InvalidCastException()", span="0-0", cluster="System.InvalidCastException.InvalidCastException()", file="DefaultSerializationBinder.cs"];
m1_3005 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", span="6762-6762", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="DefaultSerializationBinder.cs"];
m1_3010 [label="var roundtrippedPerson = JsonConvert.DeserializeObject<PersonWithPrivateConstructor>(serializedPerson)", span="6769-6769", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="DefaultSerializationBinder.cs"];
m1_3011 [label="Assert.AreEqual(person.Name, roundtrippedPerson.Name)", span="6771-6771", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="DefaultSerializationBinder.cs"];
m1_3009 [label="var serializedPerson = JsonConvert.SerializeObject(person)", span="6768-6768", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="DefaultSerializationBinder.cs"];
m1_3006 [label="var person = PersonWithPrivateConstructor.CreatePerson()", span="6764-6764", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="DefaultSerializationBinder.cs"];
m1_3008 [label="person.Age = 25", span="6766-6766", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="DefaultSerializationBinder.cs"];
m1_3007 [label="person.Name = ''John Doe''", span="6765-6765", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="DefaultSerializationBinder.cs"];
m1_3012 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", span="6762-6762", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="DefaultSerializationBinder.cs"];
m1_162 [label="var deserialized = JsonConvert.DeserializeObject<ResponseWithNewGenericPropertyOverride<int>>(json)", span="487-487", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="DefaultSerializationBinder.cs"];
m1_172 [label="CollectionAssert.AreEqual(input.Data, deserialized.Data)", span="507-507", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="DefaultSerializationBinder.cs"];
m1_173 [label="Assert.AreEqual(input.Message, deserialized.Message)", span="508-508", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="DefaultSerializationBinder.cs"];
m1_174 [label="Assert.AreEqual(input.Result, deserialized.Result)", span="509-509", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="DefaultSerializationBinder.cs"];
m1_175 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", span="495-495", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="DefaultSerializationBinder.cs"];
m1_177 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="DefaultSerializationBinder.cs"];
m1_41 [label="Assert.AreEqual(''{}'', json)", span="169-169", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="DefaultSerializationBinder.cs", color=green, community=0];
m1_42 [label="CustomerWithMetadataType c2 = JsonConvert.DeserializeObject<CustomerWithMetadataType>(''{'UpdatedBy_Id':'F6E0666D-13C7-4745-B486-800812C8F6DE'}'')", span="171-171", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="DefaultSerializationBinder.cs", color=green, community=0];
m1_43 [label="Assert.AreEqual(Guid.Empty, c2.UpdatedBy_Id)", span="173-173", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="DefaultSerializationBinder.cs", color=green, community=0];
m1_44 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", span="162-162", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="DefaultSerializationBinder.cs"];
m1_46 [label="Entry System.Guid.NewGuid()", span="0-0", cluster="System.Guid.NewGuid()", file="DefaultSerializationBinder.cs"];
m1_1414 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", span="3012-3012", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="DefaultSerializationBinder.cs"];
m1_1417 [label="Assert.AreEqual(''Apple'', deserializedProduct.Name)", span="3027-3027", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="DefaultSerializationBinder.cs"];
m1_1418 [label="Assert.AreEqual(new DateTime(2008, 12, 28, 0, 0, 0, DateTimeKind.Utc), deserializedProduct.ExpiryDate)", span="3028-3028", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="DefaultSerializationBinder.cs"];
m1_1419 [label="Assert.AreEqual(3.99m, deserializedProduct.Price)", span="3029-3029", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="DefaultSerializationBinder.cs"];
m1_1420 [label="Assert.AreEqual(''Small'', deserializedProduct.Sizes[0])", span="3030-3030", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="DefaultSerializationBinder.cs"];
m1_1421 [label="Assert.AreEqual(''Medium'', deserializedProduct.Sizes[1])", span="3031-3031", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="DefaultSerializationBinder.cs"];
m1_1422 [label="Assert.AreEqual(''Large'', deserializedProduct.Sizes[2])", span="3032-3032", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="DefaultSerializationBinder.cs"];
m1_1416 [label="Product deserializedProduct = (Product)JsonConvert.DeserializeObject(json, typeof(Product))", span="3025-3025", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="DefaultSerializationBinder.cs"];
m1_1415 [label="string json = @''/*comment1*/ { /*comment2*/\r\n        ''''Name'''': /*comment3*/ ''''Apple'''' /*comment4*/, /*comment5*/\r\n        ''''ExpiryDate'''': ''''\/Date(1230422400000)\/'''',\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''': /*comment6*/ [ /*comment7*/\r\n          ''''Small'''', /*comment8*/\r\n          ''''Medium'''' /*comment9*/,\r\n          /*comment10*/ ''''Large''''\r\n        /*comment11*/ ] /*comment12*/\r\n      } /*comment13*/''", span="3014-3023", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="DefaultSerializationBinder.cs"];
m1_1423 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", span="3012-3012", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="DefaultSerializationBinder.cs"];
m1_657 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", span="1405-1405", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="DefaultSerializationBinder.cs"];
m1_661 [label="Assert.AreEqual(store.Establised, deserializedStore.Establised)", span="1413-1413", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="DefaultSerializationBinder.cs"];
m1_662 [label="Assert.AreEqual(store.product.Count, deserializedStore.product.Count)", span="1414-1414", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="DefaultSerializationBinder.cs"];
m1_658 [label="Store store = new Store()", span="1407-1407", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="DefaultSerializationBinder.cs"];
m1_660 [label="Store deserializedStore = (Store)JsonConvert.DeserializeObject(jsonText, typeof(Store))", span="1411-1411", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="DefaultSerializationBinder.cs"];
m1_663 [label="Console.WriteLine(jsonText)", span="1416-1416", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="DefaultSerializationBinder.cs"];
m1_659 [label="string jsonText = JsonConvert.SerializeObject(store)", span="1409-1409", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="DefaultSerializationBinder.cs"];
m1_664 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", span="1405-1405", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="DefaultSerializationBinder.cs"];
m1_2093 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="DefaultSerializationBinder.cs"];
m1_3203 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", span="7183-7183", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="DefaultSerializationBinder.cs"];
m1_3205 [label="string json = JsonConvert.SerializeObject(e, Formatting.Indented)", span="7197-7197", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="DefaultSerializationBinder.cs"];
m1_3206 [label="StringAssert.AreEqual(@''{\r\n  ''''EventName'''': ''''Blackadder III'''',\r\n  ''''Venue'''': ''''Gryphon Theatre'''',\r\n  ''''Performances'''': [\r\n    new Date(\r\n      1336458600000\r\n    ),\r\n    new Date(\r\n      1336545000000\r\n    ),\r\n    new Date(\r\n      1336636800000\r\n    )\r\n  ]\r\n}'', json)", span="7208-7222", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="DefaultSerializationBinder.cs"];
m1_3204 [label="Event1 e = new Event1\r\n            {\r\n                EventName = ''Blackadder III'',\r\n                Venue = ''Gryphon Theatre'',\r\n                Performances = new List<DateTime>\r\n                {\r\n                    DateTimeUtils.ConvertJavaScriptTicksToDateTime(1336458600000),\r\n                    DateTimeUtils.ConvertJavaScriptTicksToDateTime(1336545000000),\r\n                    DateTimeUtils.ConvertJavaScriptTicksToDateTime(1336636800000)\r\n                }\r\n            }", span="7185-7195", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="DefaultSerializationBinder.cs"];
m1_3207 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", span="7183-7183", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="DefaultSerializationBinder.cs"];
m1_2459 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", span="5483-5483", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", file="DefaultSerializationBinder.cs"];
m1_2460 [label="MultipleParamatrizedConstructorsJsonConstructor c = JsonConvert.DeserializeObject<MultipleParamatrizedConstructorsJsonConstructor>(''{Value:'value!', Age:1}'')", span="5485-5485", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", file="DefaultSerializationBinder.cs"];
m1_2461 [label="Assert.AreEqual(''Public Paramatized 2'', c.Constructor)", span="5486-5486", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", file="DefaultSerializationBinder.cs"];
m1_2462 [label="Assert.AreEqual(''value!'', c.Value)", span="5487-5487", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", file="DefaultSerializationBinder.cs"];
m1_2463 [label="Assert.AreEqual(1, c.Age)", span="5488-5488", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", file="DefaultSerializationBinder.cs"];
m1_2464 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", span="5483-5483", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", file="DefaultSerializationBinder.cs"];
m1_917 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", span="1939-1939", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="DefaultSerializationBinder.cs"];
m1_924 [label="ClassWithArray wibbleOut = JsonConvert.DeserializeObject<ClassWithArray>(json)", span="1948-1948", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="DefaultSerializationBinder.cs"];
m1_925 [label="Assert.AreEqual(''hello'', wibbleOut.Foo)", span="1949-1949", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="DefaultSerializationBinder.cs"];
m1_926 [label="Assert.AreEqual(5, wibbleOut.Bar.Count)", span="1951-1951", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="DefaultSerializationBinder.cs"];
m1_927 [label="Assert.AreEqual(int.MaxValue, wibbleOut.Bar[0])", span="1952-1952", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="DefaultSerializationBinder.cs"];
m1_928 [label="Assert.AreEqual(int.MaxValue, wibbleOut.Bar[1])", span="1953-1953", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="DefaultSerializationBinder.cs"];
m1_929 [label="Assert.AreEqual(1, wibbleOut.Bar[2])", span="1954-1954", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="DefaultSerializationBinder.cs"];
m1_930 [label="Assert.AreEqual(2, wibbleOut.Bar[3])", span="1955-1955", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="DefaultSerializationBinder.cs"];
m1_931 [label="Assert.AreEqual(3, wibbleOut.Bar[4])", span="1956-1956", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="DefaultSerializationBinder.cs"];
m1_923 [label="string json = JsonConvert.SerializeObject(wibble)", span="1946-1946", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="DefaultSerializationBinder.cs"];
m1_918 [label="ClassWithArray wibble = new ClassWithArray()", span="1941-1941", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="DefaultSerializationBinder.cs"];
m1_922 [label="wibble.Bar.Add(3)", span="1945-1945", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="DefaultSerializationBinder.cs"];
m1_920 [label="wibble.Bar.Add(1)", span="1943-1943", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="DefaultSerializationBinder.cs"];
m1_921 [label="wibble.Bar.Add(2)", span="1944-1944", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="DefaultSerializationBinder.cs"];
m1_919 [label="wibble.Foo = ''hello''", span="1942-1942", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="DefaultSerializationBinder.cs"];
m1_932 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", span="1939-1939", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="DefaultSerializationBinder.cs"];
m1_1980 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", span="4387-4387", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="DefaultSerializationBinder.cs"];
m1_1992 [label="ISerializableTestObject o2 = JsonConvert.DeserializeObject<ISerializableTestObject>(json)", span="4434-4434", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="DefaultSerializationBinder.cs"];
m1_1995 [label="Assert.AreEqual(dateTimeOffset, o2._dateTimeOffsetValue)", span="4437-4437", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="DefaultSerializationBinder.cs"];
m1_1993 [label="Assert.AreEqual(''String!'', o2._stringValue)", span="4435-4435", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="DefaultSerializationBinder.cs"];
m1_1994 [label="Assert.AreEqual(int.MinValue, o2._intValue)", span="4436-4436", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="DefaultSerializationBinder.cs"];
m1_1996 [label="Assert.AreEqual(''Name!'', o2._personValue.Name)", span="4438-4438", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="DefaultSerializationBinder.cs"];
m1_1997 [label="Assert.AreEqual(null, o2._nullPersonValue)", span="4439-4439", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="DefaultSerializationBinder.cs"];
m1_1998 [label="Assert.AreEqual(null, o2._nullableInt)", span="4440-4440", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="DefaultSerializationBinder.cs"];
m1_1991 [label="StringAssert.AreEqual(@''{\r\n  ''''stringValue'''': ''''String!'''',\r\n  ''''intValue'''': -2147483648,\r\n  ''''dateTimeOffsetValue'''': '''''' + dateTimeOffsetText + @'''''',\r\n  ''''personValue'''': {\r\n    ''''Name'''': ''''Name!'''',\r\n    ''''BirthDate'''': ''''\/Date(946688461000)\/'''',\r\n    ''''LastModified'''': ''''\/Date(946688461000)\/''''\r\n  },\r\n  ''''nullPersonValue'''': null,\r\n  ''''nullableInt'''': null,\r\n  ''''booleanValue'''': false,\r\n  ''''byteValue'''': 0,\r\n  ''''charValue'''': ''''\u0000'''',\r\n  ''''dateTimeValue'''': ''''\/Date(-62135596800000)\/'''',\r\n  ''''decimalValue'''': 0.0,\r\n  ''''shortValue'''': 0,\r\n  ''''longValue'''': 0,\r\n  ''''sbyteValue'''': 0,\r\n  ''''floatValue'''': 0.0,\r\n  ''''ushortValue'''': 0,\r\n  ''''uintValue'''': 0,\r\n  ''''ulongValue'''': 0\r\n}'', json)", span="4409-4432", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="DefaultSerializationBinder.cs"];
m1_1990 [label="string json = JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.MicrosoftDateFormat\r\n            })", span="4405-4408", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="DefaultSerializationBinder.cs"];
m1_1986 [label="DateTimeOffset dateTimeOffset = new DateTimeOffset(2000, 12, 20, 22, 59, 59, TimeSpan.FromHours(2))", span="4395-4395", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="DefaultSerializationBinder.cs"];
m1_1988 [label="dateTimeOffsetText = @''\/Date(977345999000+0200)\/''", span="4398-4398", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="DefaultSerializationBinder.cs"];
m1_1989 [label="ISerializableTestObject o = new ISerializableTestObject(''String!'', int.MinValue, dateTimeOffset, person)", span="4403-4403", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="DefaultSerializationBinder.cs"];
m1_1982 [label="person.BirthDate = new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc)", span="4390-4390", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="DefaultSerializationBinder.cs"];
m1_1985 [label="person.Name = ''Name!''", span="4393-4393", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="DefaultSerializationBinder.cs"];
m1_1987 [label="string dateTimeOffsetText", span="4396-4396", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="DefaultSerializationBinder.cs"];
m1_1981 [label="Person person = new Person()", span="4389-4389", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="DefaultSerializationBinder.cs"];
m1_1983 [label="person.LastModified = person.BirthDate", span="4391-4391", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="DefaultSerializationBinder.cs"];
m1_1984 [label="person.Department = ''Department!''", span="4392-4392", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="DefaultSerializationBinder.cs"];
m1_1999 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", span="4387-4387", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="DefaultSerializationBinder.cs"];
m1_3362 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", span="7647-7647", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="DefaultSerializationBinder.cs"];
m1_3365 [label="StringAssert.AreEqual(@''{\r\n  ''''Object'''': 0.0,\r\n  ''''Float'''': 0.0,\r\n  ''''Double'''': 0.0,\r\n  ''''NullableFloat'''': null,\r\n  ''''NullableDouble'''': null,\r\n  ''''ObjectNull'''': null\r\n}'', json)", span="7663-7670", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="DefaultSerializationBinder.cs"];
m1_3364 [label="string json = JsonConvert.SerializeObject(floats, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                FloatFormatHandling = FloatFormatHandling.DefaultValue\r\n            })", span="7658-7661", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="DefaultSerializationBinder.cs"];
m1_3363 [label="NullableFloats floats = new NullableFloats\r\n            {\r\n                Object = double.NaN,\r\n                ObjectNull = null,\r\n                Float = float.NaN,\r\n                NullableDouble = double.NaN,\r\n                NullableFloat = null\r\n            }", span="7649-7656", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="DefaultSerializationBinder.cs"];
m1_3366 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", span="7647-7647", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="DefaultSerializationBinder.cs"];
m1_2872 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", span="6507-6507", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="DefaultSerializationBinder.cs"];
m1_2874 [label="var c = JsonConvert.DeserializeObject<NullableGuid>(json)", span="6510-6510", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="DefaultSerializationBinder.cs"];
m1_2877 [label="c = JsonConvert.DeserializeObject<NullableGuid>(json)", span="6515-6515", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="DefaultSerializationBinder.cs"];
m1_2875 [label="Assert.AreEqual(null, c.Id)", span="6512-6512", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="DefaultSerializationBinder.cs"];
m1_2878 [label="Assert.AreEqual(new Guid(''d8220a4b-75b1-4b7a-8112-b7bdae956a45''), c.Id)", span="6517-6517", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="DefaultSerializationBinder.cs"];
m1_2873 [label="string json = @''{''''Id'''':null}''", span="6509-6509", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="DefaultSerializationBinder.cs"];
m1_2876 [label="json = @''{''''Id'''':''''d8220a4b-75b1-4b7a-8112-b7bdae956a45''''}''", span="6514-6514", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="DefaultSerializationBinder.cs"];
m1_2879 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", span="6507-6507", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="DefaultSerializationBinder.cs"];
m1_1065 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", span="2210-2210", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="DefaultSerializationBinder.cs"];
m1_1071 [label="Assert.AreEqual(testDate, m2.DefaultConverter)", span="2220-2220", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="DefaultSerializationBinder.cs"];
m1_1072 [label="Assert.AreEqual(testDate, m2.MemberConverter)", span="2221-2221", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="DefaultSerializationBinder.cs"];
m1_1069 [label="Assert.AreEqual(@''{''''DefaultConverter'''':new Date(0),''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="2216-2216", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="DefaultSerializationBinder.cs"];
m1_1070 [label="MemberConverterClass m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json, new JavaScriptDateTimeConverter())", span="2218-2218", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="DefaultSerializationBinder.cs"];
m1_1066 [label="DateTime testDate = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="2212-2212", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="DefaultSerializationBinder.cs"];
m1_1068 [label="string json = JsonConvert.SerializeObject(m1, new JavaScriptDateTimeConverter())", span="2215-2215", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="DefaultSerializationBinder.cs"];
m1_1067 [label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="2213-2213", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="DefaultSerializationBinder.cs"];
m1_1073 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", span="2210-2210", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="DefaultSerializationBinder.cs"];
m1_47 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object)", span="512-512", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", file="DefaultSerializationBinder.cs"];
m1_2710 [label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="124-124", cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="DefaultSerializationBinder.cs"];
m1_1310 [label="Entry Newtonsoft.Json.Tests.TestObjects.SubKlass.SubKlass(string)", span="31-31", cluster="Newtonsoft.Json.Tests.TestObjects.SubKlass.SubKlass(string)", file="DefaultSerializationBinder.cs"];
m1_1454 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", span="3116-3116", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="DefaultSerializationBinder.cs"];
m1_1456 [label="Content content = JsonConvert.DeserializeObject<Content>(json)", span="3132-3132", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="DefaultSerializationBinder.cs"];
m1_1457 [label="Assert.AreEqual(''Blah, blah, blah'', content.Text)", span="3134-3134", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="DefaultSerializationBinder.cs"];
m1_1458 [label="Assert.AreEqual(2, content.Children.Count)", span="3135-3135", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="DefaultSerializationBinder.cs"];
m1_1459 [label="Assert.AreEqual(''First'', content.Children[0].Text)", span="3136-3136", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="DefaultSerializationBinder.cs"];
m1_1460 [label="Assert.AreEqual(''Second'', content.Children[1].Text)", span="3137-3137", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="DefaultSerializationBinder.cs"];
m1_1455 [label="string json = @''{\r\n  ''''Children'''': [\r\n    {\r\n      ''''Children'''': null,\r\n      ''''Text'''': ''''First''''\r\n    },\r\n    {\r\n      ''''Children'''': null,\r\n      ''''Text'''': ''''Second''''\r\n    }\r\n  ],\r\n  ''''Text'''': ''''Blah, blah, blah''''\r\n}''", span="3118-3130", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="DefaultSerializationBinder.cs"];
m1_1461 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", span="3116-3116", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="DefaultSerializationBinder.cs"];
m1_650 [label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="DefaultSerializationBinder.cs"];
m1_644 [label="Entry DataContractJsonSerializer.cstr", span="", cluster="DataContractJsonSerializer.cstr", file="DefaultSerializationBinder.cs"];
m1_1730 [label="Entry lambda expression", span="3722-3722", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_166 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", span="477-477", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="DefaultSerializationBinder.cs"];
m1_165 [label="Assert.AreEqual(input.Result, deserialized.Result)", span="491-491", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="DefaultSerializationBinder.cs"];
m1_26 [label="Exit Newtonsoft.Json.Schema.JsonSchemaGenerator.Generate(System.Type)", span="116-116", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.Generate(System.Type)", file="DefaultSerializationBinder.cs"];
m1_818 [label="JsonConvert.DeserializeObject<List<string>>(json)", span="1756-1756", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_1489 [label="JsonConvert.DeserializeObject<TestObjects.Event>(json)", span="3186-3186", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_1516 [label="JsonConvert.DeserializeObject<Person>(json)", span="3225-3225", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_1523 [label="JsonConvert.DeserializeObject<Dictionary<string, string>>(json)", span="3235-3235", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_1530 [label="JsonConvert.DeserializeObject<Exception>(json)", span="3246-3246", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_1537 [label="JsonConvert.DeserializeObject<double>(json)", span="3257-3257", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_1544 [label="JsonConvert.DeserializeObject<DynamicDictionary>(json)", span="3269-3269", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_1551 [label="JsonConvert.DeserializeObject<JObject>(json)", span="3282-3282", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_1558 [label="JsonConvert.DeserializeObject<Person>(json)", span="3295-3295", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_1565 [label="JsonConvert.DeserializeObject<List<Person>>(json)", span="3303-3303", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_2159 [label="JsonConvert.DeserializeObject<Dictionary<string, object>>(json)", span="4818-4818", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_2173 [label="JsonConvert.DeserializeObject<Dictionary<string, object>>(json)", span="4838-4838", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_2275 [label="JsonConvert.DeserializeObject<StringDictionaryTestClass>(json)", span="5060-5060", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_2828 [label="List<int> numbers = JsonConvert.DeserializeObject<List<int>>(json)", span="6415-6415", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_2842 [label="JsonConvert.DeserializeObject<ConvertableIntTestClass>(json)", span="6454-6454", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_2863 [label="JsonConvert.DeserializeObject<TestObjects.MyClass>(json)", span="6490-6490", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_2870 [label="JsonConvert.DeserializeObject<TestObjects.MyClass>(json)", span="6502-6502", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_2943 [label="JsonConvert.DeserializeObject<double>('''')", span="6650-6650", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_2949 [label="JsonConvert.DeserializeObject<StringComparison>('''')", span="6656-6656", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_2955 [label="JsonConvert.DeserializeObject<int>('''')", span="6662-6662", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_2965 [label="JsonConvert.DeserializeObject<double>(null)", span="6676-6676", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_3339 [label="obj = JsonConvert.DeserializeObject<MyTuple<int>>(json)", span="7537-7537", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_3414 [label="JsonConvert.DeserializeObject<NoConstructorReadOnlyCollection<int>>(''[1]'')", span="7797-7797", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_3422 [label="JsonConvert.DeserializeObject<NoConstructorReadOnlyDictionary<int, int>>(''{'1':1}'')", span="7812-7812", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_3431 [label="JsonConvert.DeserializeObject<IList<long>>(json)", span="7826-7826", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_3641 [label="JsonConvert.DeserializeObject<JObject>(content)", span="8337-8337", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_3783 [label="JsonConvert.DeserializeObject<string>(''020474068'')", span="8669-8669", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_3803 [label="JsonConvert.DeserializeObject<System.Net.Mail.MailMessage>(\r\n                        JsonMessage,\r\n                        new MailAddressReadConverter(),\r\n                        new AttachmentReadConverter(),\r\n                        new EncodingReadConverter())", span="8754-8758", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_25 [label="return Generate(type, new JsonSchemaResolver(), false);", span="118-118", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.Generate(System.Type)", file="DefaultSerializationBinder.cs"];
m1_785 [label="Entry lambda expression", span="1711-1711", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_817 [label="Entry lambda expression", span="1756-1756", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_1097 [label="Entry lambda expression", span="2263-2267", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_1192 [label="Entry lambda expression", span="2445-2457", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_1237 [label="Entry lambda expression", span="2560-2560", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_1344 [label="Entry lambda expression", span="2811-2817", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_1488 [label="Entry lambda expression", span="3186-3186", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_1515 [label="Entry lambda expression", span="3225-3225", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_1522 [label="Entry lambda expression", span="3235-3235", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_1529 [label="Entry lambda expression", span="3246-3246", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_1536 [label="Entry lambda expression", span="3257-3257", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_1543 [label="Entry lambda expression", span="3269-3269", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_1550 [label="Entry lambda expression", span="3282-3282", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_1557 [label="Entry lambda expression", span="3295-3295", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_1564 [label="Entry lambda expression", span="3303-3303", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_1578 [label="Entry lambda expression", span="3329-3329", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_1586 [label="Entry lambda expression", span="3337-3337", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_1597 [label="Entry lambda expression", span="3352-3363", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_1604 [label="Entry lambda expression", span="3369-3380", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_1610 [label="Entry lambda expression", span="3386-3397", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_1616 [label="Entry lambda expression", span="3403-3414", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_1766 [label="Entry lambda expression", span="3815-3819", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_2158 [label="Entry lambda expression", span="4818-4818", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_2164 [label="Entry lambda expression", span="4824-4839", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_2274 [label="Entry lambda expression", span="5060-5060", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_2491 [label="Entry lambda expression", span="5547-5547", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_2827 [label="Entry lambda expression", span="6415-6415", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_2841 [label="Entry lambda expression", span="6454-6454", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_2861 [label="Entry lambda expression", span="6483-6491", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_2868 [label="Entry lambda expression", span="6497-6503", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_2942 [label="Entry lambda expression", span="6650-6650", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_2948 [label="Entry lambda expression", span="6656-6656", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_2954 [label="Entry lambda expression", span="6662-6662", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_2964 [label="Entry lambda expression", span="6676-6676", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_2970 [label="Entry lambda expression", span="6687-6687", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_3236 [label="Entry lambda expression", span="7294-7294", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_3249 [label="Entry lambda expression", span="7338-7350", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_3413 [label="Entry lambda expression", span="7797-7797", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_3421 [label="Entry lambda expression", span="7812-7812", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_3430 [label="Entry lambda expression", span="7826-7826", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_3639 [label="Entry lambda expression", span="8334-8338", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_3775 [label="Entry lambda expression", span="8663-8663", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_3782 [label="Entry lambda expression", span="8669-8669", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_3802 [label="Entry lambda expression", span="8752-8759", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_24 [label="Entry Newtonsoft.Json.Schema.JsonSchemaGenerator.Generate(System.Type)", span="116-116", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.Generate(System.Type)", file="DefaultSerializationBinder.cs"];
m1_819 [label="Exit lambda expression", span="1756-1756", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_1490 [label="Exit lambda expression", span="3186-3186", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_1517 [label="Exit lambda expression", span="3225-3225", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_1524 [label="Exit lambda expression", span="3235-3235", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_1531 [label="Exit lambda expression", span="3246-3246", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_1538 [label="Exit lambda expression", span="3257-3257", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_1545 [label="Exit lambda expression", span="3269-3269", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_1552 [label="Exit lambda expression", span="3282-3282", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_1559 [label="Exit lambda expression", span="3295-3295", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_1566 [label="Exit lambda expression", span="3303-3303", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_2160 [label="Exit lambda expression", span="4818-4818", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_2172 [label="var json = JsonConvert.SerializeObject(child, Formatting.Indented)", span="4837-4837", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_2174 [label="Exit lambda expression", span="4824-4839", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_2276 [label="Exit lambda expression", span="5060-5060", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_2829 [label="Exit lambda expression", span="6415-6415", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_2843 [label="Exit lambda expression", span="6454-6454", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_2862 [label="string json = @''{\r\n  ''''PreProperty'''': true,\r\n  ''''PostProperty'''': ''''-1''''\r\n}''", span="6485-6488", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_2864 [label="Exit lambda expression", span="6483-6491", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_2869 [label="string json = @''{\r\n  ''''PreProperty'''': ''", span="6499-6500", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_2871 [label="Exit lambda expression", span="6497-6503", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_2944 [label="Exit lambda expression", span="6650-6650", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_2950 [label="Exit lambda expression", span="6656-6656", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_2956 [label="Exit lambda expression", span="6662-6662", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_2966 [label="Exit lambda expression", span="6676-6676", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_3338 [label="Entry lambda expression", span="7537-7537", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_3340 [label="Exit lambda expression", span="7537-7537", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_3415 [label="Exit lambda expression", span="7797-7797", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_3423 [label="Exit lambda expression", span="7812-7812", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_3432 [label="Exit lambda expression", span="7826-7826", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_3640 [label="string content = @''{''''result'''':{''''time'''':1408188592,''''time'''':1408188593},''''error'''':null,''''id'''':''''1''''}''", span="8336-8336", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_3642 [label="Exit lambda expression", span="8334-8338", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_3784 [label="Exit lambda expression", span="8669-8669", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_3804 [label="Exit lambda expression", span="8752-8759", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_786 [label="JsonConvert.SerializeObject(new BadJsonPropertyClass())", span="1711-1711", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_1099 [label="JsonConvert.SerializeObject(c)", span="2266-2266", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_1194 [label="string json = JsonConvert.SerializeObject(requiredMembersClass)", span="2455-2455", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_3776 [label="JsonConvert.SerializeObject(new ErroringTestClass())", span="8663-8663", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_787 [label="Exit lambda expression", span="1711-1711", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_1100 [label="Exit lambda expression", span="2263-2267", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_1098 [label="IncompatibleJsonAttributeClass c = new IncompatibleJsonAttributeClass()", span="2265-2265", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_1196 [label="Exit lambda expression", span="2445-2457", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_1193 [label="RequiredMembersClass requiredMembersClass = new RequiredMembersClass\r\n                {\r\n                    FirstName = null,\r\n                    BirthDate = new DateTime(2000, 10, 10, 10, 10, 10, DateTimeKind.Utc),\r\n                    LastName = null,\r\n                    MiddleName = null\r\n                }", span="2447-2453", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_1238 [label="InterfacePropertyTestClass testFromDe = (InterfacePropertyTestClass)JsonConvert.DeserializeObject(strFromTest, typeof(InterfacePropertyTestClass))", span="2560-2560", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_1239 [label="Exit lambda expression", span="2560-2560", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_1348 [label="Exit lambda expression", span="2811-2817", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_1345 [label="JsonPropertyWithHandlingValues o = new JsonPropertyWithHandlingValues()", span="2813-2813", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_1579 [label="JsonConvert.PopulateObject(json, new Person())", span="3329-3329", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_1580 [label="Exit lambda expression", span="3329-3329", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_1587 [label="JsonConvert.PopulateObject(json, new List<Person>())", span="3337-3337", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_1588 [label="Exit lambda expression", span="3337-3337", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_1599 [label="Exit lambda expression", span="3352-3363", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_1598 [label="JsonConvert.SerializeObject(new MemoryStream(), new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(NETFX_CORE || PORTABLE || ASPNETCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                })", span="3354-3362", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_1606 [label="Exit lambda expression", span="3369-3380", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_1605 [label="JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:0}'', new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(NETFX_CORE || PORTABLE || ASPNETCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                })", span="3371-3379", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_1612 [label="Exit lambda expression", span="3386-3397", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_1611 [label="JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:''}'', new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(NETFX_CORE || PORTABLE || ASPNETCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                })", span="3388-3396", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_1618 [label="Exit lambda expression", span="3403-3414", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_1617 [label="JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:null}'', new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(NETFX_CORE || PORTABLE || ASPNETCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                })", span="3405-3413", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_1767 [label="JsonConvert.DeserializeObject<DictionaryWithNoDefaultConstructor>(json, new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.All,\r\n                MetadataPropertyHandling = MetadataPropertyHandling.Default\r\n            })", span="3815-3819", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_1768 [label="Exit lambda expression", span="3815-3819", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_2165 [label="var reference = new Dictionary<string, object>()", span="4828-4828", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_2493 [label="Exit lambda expression", span="5547-5547", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_2492 [label="JsonConvert.DeserializeObject(''null'', typeof(DateTime))", span="5547-5547", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_2972 [label="Exit lambda expression", span="6687-6687", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_2971 [label="JsonConvert.DeserializeObject(null)", span="6687-6687", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_3237 [label="s.Deserialize<Dictionary<string, int>>(new JsonTextReader(new StringReader(json)))", span="7294-7294", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_3238 [label="Exit lambda expression", span="7294-7294", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_3257 [label="Exit lambda expression", span="7338-7350", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_3250 [label="string json = ''[{},1]''", span="7340-7340", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_3777 [label="Exit lambda expression", span="8663-8663", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_2171 [label="child.Add(''Father'', reference)", span="4835-4835", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_2168 [label="var child = new Dictionary<string, object>()", span="4832-4832", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_98 [label="converter != null", span="255-255", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.GenerateInternal(System.Type, Newtonsoft.Json.Required, bool)", file="DefaultSerializationBinder.cs"];
m1_651 [label="Entry lambda expression", span="1385-1385", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_654 [label="Entry lambda expression", span="1388-1388", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_3092 [label="errors.Add(e.ErrorContext.Error.Message)", span="6920-6920", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_3107 [label="errors.Add(e.ErrorContext.Error.Message)", span="6945-6945", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_3122 [label="errors.Add(e.ErrorContext.Error.Message)", span="6968-6968", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_1195 [label="Console.WriteLine(json)", span="2456-2456", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_1347 [label="JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings { ReferenceLoopHandling = ReferenceLoopHandling.Ignore })", span="2816-2816", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_1346 [label="o.ReferenceLoopHandlingErrorProperty = o", span="2814-2814", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_2166 [label="reference.Add(''$ref'', 1)", span="4829-4829", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_2167 [label="reference.Add(''$id'', 1)", span="4830-4830", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_3256 [label="serializer.Deserialize(reader, typeof(MyType))", span="7349-7349", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_3251 [label="JsonSerializer serializer = new JsonSerializer()", span="7342-7342", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_3253 [label="var reader = new JsonTextReader(new StringReader(json))", span="7345-7345", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_2170 [label="child.Add(''Name'', ''Isabell'')", span="4834-4834", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_2169 [label="child.Add(''_id'', 2)", span="4833-4833", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_97 [label="CurrentSchema.Description = GetDescription(type)", span="253-253", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.GenerateInternal(System.Type, Newtonsoft.Json.Required, bool)", file="DefaultSerializationBinder.cs"];
m1_99 [label="CurrentSchema.Type = JsonSchemaType.Any", span="258-258", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.GenerateInternal(System.Type, Newtonsoft.Json.Required, bool)", file="DefaultSerializationBinder.cs"];
m1_653 [label="Exit lambda expression", span="1385-1385", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_652 [label="p.Name", span="1385-1385", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_656 [label="Exit lambda expression", span="1388-1388", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_655 [label="p.Name", span="1388-1388", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_3254 [label="reader.Read()", span="7346-7346", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_3255 [label="reader.Read()", span="7347-7347", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_3093 [label="e.ErrorContext.Handled = true", span="6921-6921", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_3091 [label="Entry lambda expression", span="6918-6922", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_3108 [label="e.ErrorContext.Handled = true", span="6946-6946", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_3106 [label="Entry lambda expression", span="6943-6947", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_3123 [label="e.ErrorContext.Handled = true", span="6969-6969", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_3121 [label="Entry lambda expression", span="6966-6970", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_3252 [label="serializer.CheckAdditionalContent = true", span="7343-7343", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_3094 [label="Exit lambda expression", span="6918-6922", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_3109 [label="Exit lambda expression", span="6943-6947", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_3124 [label="Exit lambda expression", span="6966-6970", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_1731 [label="x.Id == id", span="3722-3722", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_1732 [label="Exit lambda expression", span="3722-3722", cluster="lambda expression", file="DefaultSerializationBinder.cs"];
m1_122 [label="EnumValues<long> enumValues = EnumUtils.GetNamesAndValues<long>(type)", span="302-302", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.GenerateInternal(System.Type, Newtonsoft.Json.Required, bool)", file="DefaultSerializationBinder.cs"];
m1_3302 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", span="7463-7463", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="DefaultSerializationBinder.cs"];
m1_3308 [label="Assert.AreEqual(''[1.1,0.0,0.0]'', json)", span="7477-7477", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="DefaultSerializationBinder.cs"];
m1_3307 [label="json = JsonConvert.SerializeObject(d, new JsonSerializerSettings { FloatFormatHandling = FloatFormatHandling.DefaultValue })", span="7474-7474", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="DefaultSerializationBinder.cs"];
m1_3305 [label="json = JsonConvert.SerializeObject(d)", span="7468-7468", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="DefaultSerializationBinder.cs"];
m1_3304 [label="IList<double> d = new List<double> { 1.1, double.NaN, double.PositiveInfinity }", span="7466-7466", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="DefaultSerializationBinder.cs"];
m1_3306 [label="json = JsonConvert.SerializeObject(d, new JsonSerializerSettings { FloatFormatHandling = FloatFormatHandling.Symbol })", span="7471-7471", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="DefaultSerializationBinder.cs"];
m1_3303 [label="string json", span="7465-7465", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="DefaultSerializationBinder.cs"];
m1_3309 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", span="7463-7463", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="DefaultSerializationBinder.cs"];
m1_3643 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", span="8342-8342", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="DefaultSerializationBinder.cs"];
m1_3647 [label="Uri uriWithPlus2 = JsonConvert.DeserializeObject<Uri>(jsonWithPlus)", span="8350-8350", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="DefaultSerializationBinder.cs"];
m1_3648 [label="Assert.AreEqual(originalUri, uriWithPlus2.OriginalString)", span="8352-8352", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="DefaultSerializationBinder.cs"];
m1_3646 [label="string jsonWithPlus = JsonConvert.SerializeObject(uriWithPlus)", span="8348-8348", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="DefaultSerializationBinder.cs"];
m1_3644 [label="string originalUri = ''https://test.com?m=a%2bb''", span="8344-8344", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="DefaultSerializationBinder.cs"];
m1_3645 [label="Uri uriWithPlus = new Uri(originalUri)", span="8346-8346", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="DefaultSerializationBinder.cs"];
m1_3649 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", span="8342-8342", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="DefaultSerializationBinder.cs"];
m1_3418 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionaryTest()", span="7810-7810", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionaryTest()", file="DefaultSerializationBinder.cs"];
m1_3419 [label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<NoConstructorReadOnlyDictionary<int, int>>(''{'1':1}''), ''Cannot deserialize readonly or fixed size dictionary: Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+NoConstructorReadOnlyDictionary`2[System.Int32,System.Int32]. Path '1', line 1, position 5.'')", span="7812-7812", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionaryTest()", file="DefaultSerializationBinder.cs"];
m1_3420 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionaryTest()", span="7810-7810", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionaryTest()", file="DefaultSerializationBinder.cs"];
m1_1075 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", span="2225-2225", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="DefaultSerializationBinder.cs"];
m1_1078 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="2235-2235", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="DefaultSerializationBinder.cs"];
m1_1079 [label="Console.WriteLine(json)", span="2237-2237", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="DefaultSerializationBinder.cs"];
m1_1077 [label="MemberConverterClass c = new MemberConverterClass\r\n            {\r\n                DefaultConverter = date,\r\n                MemberConverter = date\r\n            }", span="2229-2233", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="DefaultSerializationBinder.cs"];
m1_1076 [label="DateTime date = Convert.ToDateTime(''1970-01-01T00:00:00Z'').ToUniversalTime()", span="2227-2227", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="DefaultSerializationBinder.cs"];
m1_1080 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", span="2225-2225", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="DefaultSerializationBinder.cs"];
m1_1607 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", span="3384-3384", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", file="DefaultSerializationBinder.cs"];
m1_1608 [label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:''}'', new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(NETFX_CORE || PORTABLE || ASPNETCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                });\r\n            }, @''Error converting value {null} to type 'System.Int32'. Path 'ReadTimeout', line 1, position 15.'')", span="3386-3397", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", file="DefaultSerializationBinder.cs"];
m1_1609 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", span="3384-3384", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", file="DefaultSerializationBinder.cs"];
m1_90 [label="return converterSchema;", span="242-242", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.GenerateInternal(System.Type, Newtonsoft.Json.Required, bool)", file="DefaultSerializationBinder.cs"];
m1_93 [label="CurrentSchema.Id = explicitId", span="248-248", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.GenerateInternal(System.Type, Newtonsoft.Json.Required, bool)", file="DefaultSerializationBinder.cs"];
m1_92 [label="explicitId != null", span="247-247", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.GenerateInternal(System.Type, Newtonsoft.Json.Required, bool)", file="DefaultSerializationBinder.cs"];
m1_91 [label="Push(new TypeSchema(type, new JsonSchema()))", span="245-245", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.GenerateInternal(System.Type, Newtonsoft.Json.Required, bool)", file="DefaultSerializationBinder.cs"];
m1_94 [label=optional, span="250-250", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.GenerateInternal(System.Type, Newtonsoft.Json.Required, bool)", file="DefaultSerializationBinder.cs"];
m1_100 [label="contract is JsonDictionaryContract", span="260-260", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.GenerateInternal(System.Type, Newtonsoft.Json.Required, bool)", file="DefaultSerializationBinder.cs"];
m1_101 [label="CurrentSchema.Type = AddNullType(JsonSchemaType.Object, valueRequired)", span="262-262", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.GenerateInternal(System.Type, Newtonsoft.Json.Required, bool)", file="DefaultSerializationBinder.cs"];
m1_102 [label="Type keyType", span="264-264", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.GenerateInternal(System.Type, Newtonsoft.Json.Required, bool)", file="DefaultSerializationBinder.cs"];
m1_103 [label="Type valueType", span="265-265", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.GenerateInternal(System.Type, Newtonsoft.Json.Required, bool)", file="DefaultSerializationBinder.cs"];
m1_104 [label="ReflectionUtils.GetDictionaryKeyValueTypes(type, out keyType, out valueType)", span="266-266", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.GenerateInternal(System.Type, Newtonsoft.Json.Required, bool)", file="DefaultSerializationBinder.cs"];
m1_105 [label="keyType != null", span="268-268", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.GenerateInternal(System.Type, Newtonsoft.Json.Required, bool)", file="DefaultSerializationBinder.cs"];
m1_1685 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", span="3546-3546", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="DefaultSerializationBinder.cs"];
m1_1691 [label="SearchResult searchResult = JsonConvert.DeserializeObject<SearchResult>(result.ToString())", span="3609-3609", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="DefaultSerializationBinder.cs"];
m1_1693 [label="Assert.AreEqual(2, searchResults.Count)", span="3621-3621", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="DefaultSerializationBinder.cs"];
m1_1694 [label="Assert.AreEqual(''<b>Paris Hilton</b> - Wikipedia, the free encyclopedia'', searchResults[0].Title)", span="3622-3622", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="DefaultSerializationBinder.cs"];
m1_1695 [label="Assert.AreEqual(''<b>Paris Hilton</b>'', searchResults[1].Title)", span="3623-3623", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="DefaultSerializationBinder.cs"];
m1_1690 [label=results, span="3607-3607", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="DefaultSerializationBinder.cs"];
m1_1692 [label="searchResults.Add(searchResult)", span="3610-3610", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="DefaultSerializationBinder.cs"];
m1_1689 [label="IList<SearchResult> searchResults = new List<SearchResult>()", span="3606-3606", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="DefaultSerializationBinder.cs"];
m1_1688 [label="IList<JToken> results = googleSearch[''responseData''][''results''].Children().ToList()", span="3603-3603", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="DefaultSerializationBinder.cs"];
m1_1687 [label="JObject googleSearch = JObject.Parse(googleSearchText)", span="3600-3600", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="DefaultSerializationBinder.cs"];
m1_1686 [label="string googleSearchText = @''{\r\n        ''''responseData'''': {\r\n          ''''results'''': [\r\n            {\r\n              ''''GsearchResultClass'''': ''''GwebSearch'''',\r\n              ''''unescapedUrl'''': ''''http://en.wikipedia.org/wiki/Paris_Hilton'''',\r\n              ''''url'''': ''''http://en.wikipedia.org/wiki/Paris_Hilton'''',\r\n              ''''visibleUrl'''': ''''en.wikipedia.org'''',\r\n              ''''cacheUrl'''': ''''http://www.google.com/search?q=cache:TwrPfhd22hYJ:en.wikipedia.org'''',\r\n              ''''title'''': ''''<b>Paris Hilton</b> - Wikipedia, the free encyclopedia'''',\r\n              ''''titleNoFormatting'''': ''''Paris Hilton - Wikipedia, the free encyclopedia'''',\r\n              ''''content'''': ''''[1] In 2006, she released her debut album...''''\r\n            },\r\n            {\r\n              ''''GsearchResultClass'''': ''''GwebSearch'''',\r\n              ''''unescapedUrl'''': ''''http://www.imdb.com/name/nm0385296/'''',\r\n              ''''url'''': ''''http://www.imdb.com/name/nm0385296/'''',\r\n              ''''visibleUrl'''': ''''www.imdb.com'''',\r\n              ''''cacheUrl'''': ''''http://www.google.com/search?q=cache:1i34KkqnsooJ:www.imdb.com'''',\r\n              ''''title'''': ''''<b>Paris Hilton</b>'''',\r\n              ''''titleNoFormatting'''': ''''Paris Hilton'''',\r\n              ''''content'''': ''''Self: Zoolander. Socialite <b>Paris Hilton</b>...''''\r\n            }\r\n          ],\r\n          ''''cursor'''': {\r\n            ''''pages'''': [\r\n              {\r\n                ''''start'''': ''''0'''',\r\n                ''''label'''': 1\r\n              },\r\n              {\r\n                ''''start'''': ''''4'''',\r\n                ''''label'''': 2\r\n              },\r\n              {\r\n                ''''start'''': ''''8'''',\r\n                ''''label'''': 3\r\n              },\r\n              {\r\n                ''''start'''': ''''12'''',\r\n                ''''label'''': 4\r\n              }\r\n            ],\r\n            ''''estimatedResultCount'''': ''''59600000'''',\r\n            ''''currentPageIndex'''': 0,\r\n            ''''moreResultsUrl'''': ''''http://www.google.com/search?oe=utf8&ie=utf8...''''\r\n          }\r\n        },\r\n        ''''responseDetails'''': null,\r\n        ''''responseStatus'''': 200\r\n      }''", span="3548-3598", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="DefaultSerializationBinder.cs"];
m1_1696 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", span="3546-3546", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="DefaultSerializationBinder.cs"];
m1_2004 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", span="4457-4457", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="DefaultSerializationBinder.cs"];
m1_2005 [label="List<KVPair<string, string>> kvPairs =\r\n                JsonConvert.DeserializeObject<List<KVPair<string, string>>>(\r\n                    ''[{\''Key\'':\''Two\'',\''Value\'':\''2\''},{\''Key\'':\''One\'',\''Value\'':\''1\''}]'')", span="4459-4461", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="DefaultSerializationBinder.cs"];
m1_2006 [label="Assert.AreEqual(2, kvPairs.Count)", span="4463-4463", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="DefaultSerializationBinder.cs"];
m1_2007 [label="Assert.AreEqual(''Two'', kvPairs[0].Key)", span="4464-4464", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="DefaultSerializationBinder.cs"];
m1_2008 [label="Assert.AreEqual(''2'', kvPairs[0].Value)", span="4465-4465", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="DefaultSerializationBinder.cs"];
m1_2009 [label="Assert.AreEqual(''One'', kvPairs[1].Key)", span="4466-4466", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="DefaultSerializationBinder.cs"];
m1_2010 [label="Assert.AreEqual(''1'', kvPairs[1].Value)", span="4467-4467", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="DefaultSerializationBinder.cs"];
m1_2011 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", span="4457-4457", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="DefaultSerializationBinder.cs"];
m1_3282 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", span="7397-7397", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", file="DefaultSerializationBinder.cs"];
m1_3283 [label="var actual = JsonConvert.DeserializeObject<MyType>(@''{ ''''MyProperty'''':{''''Key'''':''''Y''''}}'')", span="7399-7399", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", file="DefaultSerializationBinder.cs"];
m1_3284 [label="Assert.AreEqual(''X'', actual.MyProperty[''Key''])", span="7400-7400", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", file="DefaultSerializationBinder.cs"];
m1_3285 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", span="7397-7397", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", file="DefaultSerializationBinder.cs"];
m1_1229 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", span="2554-2554", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="DefaultSerializationBinder.cs"];
m1_1233 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { InterfacePropertyTestClass testFromDe = (InterfacePropertyTestClass)JsonConvert.DeserializeObject(strFromTest, typeof(InterfacePropertyTestClass)); }, @''Could not create an instance of type Newtonsoft.Json.Tests.TestObjects.ICo. Type is an interface or abstract class and cannot be instantiated. Path 'co.Name', line 1, position 14.'')", span="2560-2560", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="DefaultSerializationBinder.cs"];
m1_1232 [label="String strFromTest = JsonConvert.SerializeObject(testClass)", span="2558-2558", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="DefaultSerializationBinder.cs"];
m1_1230 [label="InterfacePropertyTestClass testClass = new InterfacePropertyTestClass()", span="2556-2556", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="DefaultSerializationBinder.cs"];
m1_1231 [label="testClass.co = new Co()", span="2557-2557", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="DefaultSerializationBinder.cs"];
m1_1234 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", span="2554-2554", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="DefaultSerializationBinder.cs"];
m1_536 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", span="1098-1098", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="DefaultSerializationBinder.cs"];
m1_543 [label="var jsonSerializer = JsonSerializer.Create(settings)", span="1107-1107", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="DefaultSerializationBinder.cs"];
m1_542 [label="var settings = new JsonSerializerSettings { Formatting = Formatting.Indented }", span="1106-1106", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="DefaultSerializationBinder.cs"];
m1_552 [label="Console.WriteLine(''Time elapsed: '' + stopWatch.ElapsedMilliseconds)", span="1120-1120", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="DefaultSerializationBinder.cs"];
m1_537 [label="var dictStore = new Dictionary<DictionaryKeyCast, int>()", span="1101-1101", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="DefaultSerializationBinder.cs"];
m1_550 [label="var deserialize = jsonSerializer.Deserialize(new StreamReader(ms), typeof(Dictionary<DictionaryKeyCast, int>))", span="1117-1117", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="DefaultSerializationBinder.cs"];
m1_544 [label="var ms = new MemoryStream()", span="1108-1108", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="DefaultSerializationBinder.cs"];
m1_540 [label="dictStore.Add(new DictionaryKeyCast(i.ToString(CultureInfo.InvariantCulture), i), i)", span="1104-1104", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="DefaultSerializationBinder.cs"];
m1_546 [label="jsonSerializer.Serialize(streamWriter, dictStore)", span="1111-1111", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="DefaultSerializationBinder.cs"];
m1_539 [label="i < 800", span="1102-1102", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="DefaultSerializationBinder.cs"];
m1_549 [label="var stopWatch = Stopwatch.StartNew()", span="1116-1116", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="DefaultSerializationBinder.cs"];
m1_551 [label="stopWatch.Stop()", span="1118-1118", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="DefaultSerializationBinder.cs"];
m1_538 [label="var i = 0", span="1102-1102", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="DefaultSerializationBinder.cs"];
m1_545 [label="var streamWriter = new StreamWriter(ms)", span="1110-1110", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="DefaultSerializationBinder.cs"];
m1_548 [label="ms.Seek(0, SeekOrigin.Begin)", span="1114-1114", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="DefaultSerializationBinder.cs"];
m1_541 [label="i++", span="1102-1102", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="DefaultSerializationBinder.cs"];
m1_547 [label="streamWriter.Flush()", span="1112-1112", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="DefaultSerializationBinder.cs"];
m1_553 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", span="1098-1098", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="DefaultSerializationBinder.cs"];
m1_1853 [label="Entry System.Collections.Generic.ICollection<T>.CopyTo(T[], int)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.CopyTo(T[], int)", file="DefaultSerializationBinder.cs"];
m1_3602 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt16(System.IFormatProvider)", span="8267-8267", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt16(System.IFormatProvider)", file="DefaultSerializationBinder.cs"];
m1_3603 [label="return (short)Value;", span="8269-8269", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt16(System.IFormatProvider)", file="DefaultSerializationBinder.cs"];
m1_3604 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt16(System.IFormatProvider)", span="8267-8267", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt16(System.IFormatProvider)", file="DefaultSerializationBinder.cs"];
m1_1799 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2.CircularConstructor2(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1)", span="3969-3969", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2.CircularConstructor2(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1)", file="DefaultSerializationBinder.cs"];
m1_1802 [label="C1 = c1", span="3971-3971", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2.CircularConstructor2(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1)", file="DefaultSerializationBinder.cs"];
m1_1803 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2.CircularConstructor2(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1)", span="3969-3969", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2.CircularConstructor2(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1)", file="DefaultSerializationBinder.cs"];
m1_2961 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", span="6673-6673", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", file="DefaultSerializationBinder.cs"];
m1_2962 [label="ExceptionAssert.Throws<ArgumentNullException>(\r\n                () => { JsonConvert.DeserializeObject<double>(null); },\r\n                new [] { \r\n                    ''Value cannot be null.'' + Environment.NewLine + ''Parameter name: value'',\r\n                    ''Argument cannot be null.'' + Environment.NewLine + ''Parameter name: value'' // mono\r\n                })", span="6675-6680", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", file="DefaultSerializationBinder.cs"];
m1_2963 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", span="6673-6673", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", file="DefaultSerializationBinder.cs"];
m1_479 [label="Entry System.Text.RegularExpressions.Regex.ToString()", span="0-0", cluster="System.Text.RegularExpressions.Regex.ToString()", file="DefaultSerializationBinder.cs"];
m1_1671 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", span="3511-3511", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="DefaultSerializationBinder.cs"];
m1_1676 [label="StringAssert.AreEqual(@''{\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Person'''': 1,\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Person'''': 2\r\n}'', json)", span="3519-3522", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="DefaultSerializationBinder.cs"];
m1_1675 [label="string json = JsonConvert.SerializeObject(dictionary, Formatting.Indented)", span="3517-3517", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="DefaultSerializationBinder.cs"];
m1_1672 [label="Dictionary<Person, int> dictionary = new Dictionary<Person, int>()", span="3513-3513", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="DefaultSerializationBinder.cs"];
m1_1673 [label="dictionary.Add(new Person { Name = ''p1'' }, 1)", span="3514-3514", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="DefaultSerializationBinder.cs"];
m1_1674 [label="dictionary.Add(new Person { Name = ''p2'' }, 2)", span="3515-3515", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="DefaultSerializationBinder.cs"];
m1_1677 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", span="3511-3511", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="DefaultSerializationBinder.cs"];
m1_1662 [label="Entry Newtonsoft.Json.Tests.TestObjects.Foo.Foo()", span="31-31", cluster="Newtonsoft.Json.Tests.TestObjects.Foo.Foo()", file="DefaultSerializationBinder.cs"];
m1_396 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.JsonSerializerInternalReader(Newtonsoft.Json.JsonSerializer)", span="61-61", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.JsonSerializerInternalReader(Newtonsoft.Json.JsonSerializer)", file="DefaultSerializationBinder.cs"];
m1_1958 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, uint)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, uint)", file="DefaultSerializationBinder.cs"];
m1_204 [label="return schemaType | JsonSchemaType.String;", span="417-417", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.GetJsonSchemaType(System.Type, Newtonsoft.Json.Required)", file="DefaultSerializationBinder.cs"];
m1_205 [label="TypeCode.SByte", span="418-418", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.GetJsonSchemaType(System.Type, Newtonsoft.Json.Required)", file="DefaultSerializationBinder.cs"];
m1_207 [label="TypeCode.Int16", span="420-420", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.GetJsonSchemaType(System.Type, Newtonsoft.Json.Required)", file="DefaultSerializationBinder.cs"];
m1_206 [label="TypeCode.Byte", span="419-419", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.GetJsonSchemaType(System.Type, Newtonsoft.Json.Required)", file="DefaultSerializationBinder.cs"];
m1_208 [label="TypeCode.UInt16", span="421-421", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.GetJsonSchemaType(System.Type, Newtonsoft.Json.Required)", file="DefaultSerializationBinder.cs"];
m1_209 [label="TypeCode.Int32", span="422-422", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.GetJsonSchemaType(System.Type, Newtonsoft.Json.Required)", file="DefaultSerializationBinder.cs"];
m1_978 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", span="2056-2056", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="DefaultSerializationBinder.cs"];
m1_981 [label="StringComparison s = JsonConvert.DeserializeObject<StringComparison>(json)", span="2061-2061", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="DefaultSerializationBinder.cs"];
m1_980 [label="Assert.AreEqual(@''1'', json)", span="2059-2059", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="DefaultSerializationBinder.cs"];
m1_982 [label="Assert.AreEqual(StringComparison.CurrentCultureIgnoreCase, s)", span="2062-2062", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="DefaultSerializationBinder.cs"];
m1_979 [label="string json = JsonConvert.SerializeObject(StringComparison.CurrentCultureIgnoreCase)", span="2058-2058", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="DefaultSerializationBinder.cs"];
m1_983 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", span="2056-2056", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="DefaultSerializationBinder.cs"];
m1_2923 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", span="6618-6618", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="DefaultSerializationBinder.cs"];
m1_2924 [label="object v = JsonConvert.DeserializeObject<double?>('''')", span="6620-6620", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="DefaultSerializationBinder.cs"];
m1_2926 [label="v = JsonConvert.DeserializeObject<char?>('''')", span="6623-6623", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="DefaultSerializationBinder.cs"];
m1_2928 [label="v = JsonConvert.DeserializeObject<int?>('''')", span="6626-6626", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="DefaultSerializationBinder.cs"];
m1_2930 [label="v = JsonConvert.DeserializeObject<decimal?>('''')", span="6629-6629", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="DefaultSerializationBinder.cs"];
m1_2932 [label="v = JsonConvert.DeserializeObject<DateTime?>('''')", span="6632-6632", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="DefaultSerializationBinder.cs"];
m1_2934 [label="v = JsonConvert.DeserializeObject<DateTimeOffset?>('''')", span="6635-6635", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="DefaultSerializationBinder.cs"];
m1_2936 [label="v = JsonConvert.DeserializeObject<byte[]>('''')", span="6638-6638", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="DefaultSerializationBinder.cs"];
m1_2925 [label="Assert.IsNull(v)", span="6621-6621", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="DefaultSerializationBinder.cs"];
m1_2927 [label="Assert.IsNull(v)", span="6624-6624", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="DefaultSerializationBinder.cs"];
m1_2929 [label="Assert.IsNull(v)", span="6627-6627", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="DefaultSerializationBinder.cs"];
m1_2931 [label="Assert.IsNull(v)", span="6630-6630", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="DefaultSerializationBinder.cs"];
m1_2933 [label="Assert.IsNull(v)", span="6633-6633", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="DefaultSerializationBinder.cs"];
m1_2935 [label="Assert.IsNull(v)", span="6636-6636", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="DefaultSerializationBinder.cs"];
m1_2937 [label="Assert.IsNull(v)", span="6639-6639", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="DefaultSerializationBinder.cs"];
m1_2938 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", span="6618-6618", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="DefaultSerializationBinder.cs"];
m1_1636 [label="Entry Newtonsoft.Json.Tests.TestObjects.ConstructorReadonlyFields.ConstructorReadonlyFields(string, int)", span="32-32", cluster="Newtonsoft.Json.Tests.TestObjects.ConstructorReadonlyFields.ConstructorReadonlyFields(string, int)", file="DefaultSerializationBinder.cs"];
m1_3465 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", span="7931-7931", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="DefaultSerializationBinder.cs"];
m1_3467 [label="NullableTestClass c2 = JsonConvert.DeserializeObject<NullableTestClass>(json)", span="7941-7941", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="DefaultSerializationBinder.cs"];
m1_3466 [label="string json = @''{\r\n  ''''MyNullableBool'''': '''''''',\r\n  ''''MyNullableInteger'''': '''''''',\r\n  ''''MyNullableDateTime'''': '''''''',\r\n  ''''MyNullableDateTimeOffset'''': '''''''',\r\n  ''''MyNullableDecimal'''': ''''''''\r\n}''", span="7933-7939", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="DefaultSerializationBinder.cs"];
m1_3468 [label="Assert.IsNull(c2.MyNullableBool)", span="7942-7942", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="DefaultSerializationBinder.cs"];
m1_3469 [label="Assert.IsNull(c2.MyNullableInteger)", span="7943-7943", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="DefaultSerializationBinder.cs"];
m1_3470 [label="Assert.IsNull(c2.MyNullableDateTime)", span="7944-7944", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="DefaultSerializationBinder.cs"];
m1_3471 [label="Assert.IsNull(c2.MyNullableDateTimeOffset)", span="7945-7945", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="DefaultSerializationBinder.cs"];
m1_3472 [label="Assert.IsNull(c2.MyNullableDecimal)", span="7946-7946", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="DefaultSerializationBinder.cs"];
m1_3473 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", span="7931-7931", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="DefaultSerializationBinder.cs"];
m1_2844 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", span="6459-6459", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="DefaultSerializationBinder.cs"];
m1_2847 [label="Assert.AreEqual(@''{''''Id'''':{''''Value'''':''''id''''}}'', json)", span="6465-6465", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="DefaultSerializationBinder.cs"];
m1_2846 [label="string json = JsonConvert.SerializeObject(widget)", span="6463-6463", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="DefaultSerializationBinder.cs"];
m1_2845 [label="Widget widget = new Widget { Id = new WidgetId { Value = ''id'' } }", span="6461-6461", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="DefaultSerializationBinder.cs"];
m1_2848 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", span="6459-6459", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="DefaultSerializationBinder.cs"];
m1_945 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", span="2011-2011", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="DefaultSerializationBinder.cs"];
m1_951 [label="Assert.AreEqual(''[3,2,1]'', json)", span="2019-2019", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="DefaultSerializationBinder.cs"];
m1_950 [label="string json = JsonConvert.SerializeObject(s)", span="2018-2018", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="DefaultSerializationBinder.cs"];
m1_946 [label="Stack<object> s = new Stack<object>()", span="2013-2013", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="DefaultSerializationBinder.cs"];
m1_949 [label="s.Push(3)", span="2016-2016", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="DefaultSerializationBinder.cs"];
m1_947 [label="s.Push(1)", span="2014-2014", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="DefaultSerializationBinder.cs"];
m1_948 [label="s.Push(2)", span="2015-2015", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="DefaultSerializationBinder.cs"];
m1_952 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", span="2011-2011", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="DefaultSerializationBinder.cs"];
m1_820 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", span="1760-1760", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="DefaultSerializationBinder.cs"];
m1_829 [label="Assert.AreEqual(expected, result)", span="1781-1781", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="DefaultSerializationBinder.cs"];
m1_828 [label="string result = JsonConvert.SerializeObject(testDates, new JsonSerializerSettings { DateFormatHandling = DateFormatHandling.MicrosoftDateFormat })", span="1780-1780", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="DefaultSerializationBinder.cs"];
m1_827 [label="string expected = sr.ReadToEnd()", span="1778-1778", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="DefaultSerializationBinder.cs"];
m1_821 [label="List<DateTime> testDates = new List<DateTime>\r\n            {\r\n                new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Local),\r\n                new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Unspecified),\r\n                new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Utc),\r\n                new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Local),\r\n                new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Unspecified),\r\n                new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc),\r\n            }", span="1762-1770", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="DefaultSerializationBinder.cs"];
m1_826 [label="StreamReader sr = new StreamReader(ms)", span="1776-1776", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="DefaultSerializationBinder.cs"];
m1_822 [label="MemoryStream ms = new MemoryStream()", span="1772-1772", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="DefaultSerializationBinder.cs"];
m1_824 [label="s.WriteObject(ms, testDates)", span="1774-1774", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="DefaultSerializationBinder.cs"];
m1_825 [label="ms.Seek(0, SeekOrigin.Begin)", span="1775-1775", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="DefaultSerializationBinder.cs"];
m1_823 [label="DataContractJsonSerializer s = new DataContractJsonSerializer(typeof(List<DateTime>))", span="1773-1773", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="DefaultSerializationBinder.cs"];
m1_830 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", span="1760-1760", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="DefaultSerializationBinder.cs"];
m1_1172 [label="Entry Newtonsoft.Json.Tests.TestObjects.RequiredMembersClass.RequiredMembersClass()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.RequiredMembersClass.RequiredMembersClass()", file="DefaultSerializationBinder.cs"];
m1_1381 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", span="2930-2930", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", file="DefaultSerializationBinder.cs"];
m1_1382 [label="return ''_name: '' + _name + '', _age: '' + Age + '', Rank: '' + Rank + '', JsonTitle: '' + Title;", span="2932-2932", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", file="DefaultSerializationBinder.cs"];
m1_1383 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", span="2930-2930", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", file="DefaultSerializationBinder.cs"];
m1_2729 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", span="6211-6211", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="DefaultSerializationBinder.cs"];
m1_2742 [label="Assert.AreEqual(''Test'', newObject.Name)", span="6234-6234", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="DefaultSerializationBinder.cs"];
m1_2741 [label="TestObject newObject = (TestObject)serializer.Deserialize(bsonReader)", span="6232-6232", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="DefaultSerializationBinder.cs"];
m1_2743 [label="CollectionAssert.AreEquivalent(new byte[] { 72, 63, 62, 71, 92, 55 }, newObject.Data)", span="6235-6235", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="DefaultSerializationBinder.cs"];
m1_2731 [label="JsonSerializer serializer = new JsonSerializer()", span="6215-6215", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="DefaultSerializationBinder.cs"];
m1_2740 [label="JsonReader bsonReader = new JsonTextReader(new StreamReader(bsonStream))", span="6229-6229", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="DefaultSerializationBinder.cs"];
m1_2739 [label="MemoryStream bsonStream = new MemoryStream(objectBytes)", span="6228-6228", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="DefaultSerializationBinder.cs"];
m1_2736 [label="serializer.Serialize(bsonWriter, test)", span="6222-6222", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="DefaultSerializationBinder.cs"];
m1_2730 [label="TestObject test = new TestObject(''Test'', new byte[] { 72, 63, 62, 71, 92, 55 })", span="6213-6213", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="DefaultSerializationBinder.cs"];
m1_2732 [label="serializer.TypeNameHandling = TypeNameHandling.All", span="6216-6216", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="DefaultSerializationBinder.cs"];
m1_2735 [label="JsonWriter bsonWriter = new JsonTextWriter(new StreamWriter(bsonStream))", span="6220-6220", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="DefaultSerializationBinder.cs"];
m1_2734 [label="MemoryStream bsonStream = new MemoryStream()", span="6219-6219", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="DefaultSerializationBinder.cs"];
m1_2738 [label="objectBytes = bsonStream.ToArray()", span="6225-6225", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="DefaultSerializationBinder.cs"];
m1_2737 [label="bsonWriter.Flush()", span="6223-6223", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="DefaultSerializationBinder.cs"];
m1_2733 [label="byte[] objectBytes", span="6218-6218", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="DefaultSerializationBinder.cs"];
m1_2744 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", span="6211-6211", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="DefaultSerializationBinder.cs"];
m1_799 [label="Entry Unk.ReadObject", span="", cluster="Unk.ReadObject", file="DefaultSerializationBinder.cs"];
m1_2091 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.XNodeTestObject.XNodeTestObject()", span="4658-4658", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.XNodeTestObject.XNodeTestObject()", file="DefaultSerializationBinder.cs"];
m1_1236 [label="Entry Newtonsoft.Json.Tests.TestObjects.Co.Co()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.Co.Co()", file="DefaultSerializationBinder.cs"];
m1_1842 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", span="4107-4107", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", file="DefaultSerializationBinder.cs"];
m1_1843 [label="return ((IDictionary<string, T>)_innerDictionary).Contains(item);", span="4109-4109", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", file="DefaultSerializationBinder.cs"];
m1_1844 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", span="4107-4107", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", file="DefaultSerializationBinder.cs"];
m1_741 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", span="1561-1561", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="DefaultSerializationBinder.cs"];
m1_743 [label="SetOnlyPropertyClass c = JsonConvert.DeserializeObject<SetOnlyPropertyClass>(value)", span="1565-1565", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="DefaultSerializationBinder.cs"];
m1_744 [label="Assert.AreEqual(c.Field, ''Field'')", span="1567-1567", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="DefaultSerializationBinder.cs"];
m1_742 [label="string value = JsonConvert.SerializeObject(new SetOnlyPropertyClass())", span="1563-1563", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="DefaultSerializationBinder.cs"];
m1_745 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", span="1561-1561", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="DefaultSerializationBinder.cs"];
m1_12 [label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="DefaultSerializationBinder.cs"];
m1_1747 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KeyValueId.KeyValueId()", span="3696-3696", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KeyValueId.KeyValueId()", file="DefaultSerializationBinder.cs"];
m1_3079 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", span="6913-6913", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="DefaultSerializationBinder.cs"];
m1_3085 [label="Assert.AreEqual(4, errors.Count)", span="6930-6930", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="DefaultSerializationBinder.cs"];
m1_3080 [label="string json = ''{}''", span="6915-6915", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="DefaultSerializationBinder.cs"];
m1_3081 [label="IList<string> errors = new List<string>()", span="6916-6916", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="DefaultSerializationBinder.cs"];
m1_3084 [label="Assert.IsNotNull(o)", span="6929-6929", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="DefaultSerializationBinder.cs"];
m1_3086 [label="Assert.IsTrue(errors[0].StartsWith(''Required property 'NonAttributeProperty' not found in JSON. Path ''''))", span="6931-6931", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="DefaultSerializationBinder.cs"];
m1_3083 [label="var o = JsonConvert.DeserializeObject<RequiredObject>(json, new JsonSerializerSettings\r\n            {\r\n                Error = error\r\n            })", span="6924-6927", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="DefaultSerializationBinder.cs"];
m1_3082 [label="EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs> error = (s, e) =>\r\n            {\r\n                errors.Add(e.ErrorContext.Error.Message);\r\n                e.ErrorContext.Handled = true;\r\n            }", span="6918-6922", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="DefaultSerializationBinder.cs"];
m1_3087 [label="Assert.IsTrue(errors[1].StartsWith(''Required property 'UnsetProperty' not found in JSON. Path ''''))", span="6932-6932", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="DefaultSerializationBinder.cs"];
m1_3088 [label="Assert.IsTrue(errors[2].StartsWith(''Required property 'AllowNullProperty' not found in JSON. Path ''''))", span="6933-6933", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="DefaultSerializationBinder.cs"];
m1_3089 [label="Assert.IsTrue(errors[3].StartsWith(''Required property 'AlwaysProperty' not found in JSON. Path ''''))", span="6934-6934", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="DefaultSerializationBinder.cs"];
m1_3090 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", span="6913-6913", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="DefaultSerializationBinder.cs"];
m1_3559 [label="Entry Newtonsoft.Json.Tests.TestObjects.TypeConverterJsonConverter.TypeConverterJsonConverter()", span="119-119", cluster="Newtonsoft.Json.Tests.TestObjects.TypeConverterJsonConverter.TypeConverterJsonConverter()", file="DefaultSerializationBinder.cs"];
m1_2767 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", span="6285-6285", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="DefaultSerializationBinder.cs"];
m1_2775 [label="Assert.AreEqual(-1, c2.x)", span="6316-6316", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="DefaultSerializationBinder.cs"];
m1_2776 [label="Assert.AreEqual(-2, StaticTestClass.y)", span="6317-6317", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="DefaultSerializationBinder.cs"];
m1_2777 [label="Assert.AreEqual(-3, StaticTestClass.z)", span="6318-6318", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="DefaultSerializationBinder.cs"];
m1_2774 [label="StaticTestClass c2 = JsonConvert.DeserializeObject<StaticTestClass>(@''{\r\n  ''''x'''': -1,\r\n  ''''y'''': -2,\r\n  ''''z'''': -3\r\n}'',\r\n                new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = contractResolver\r\n                })", span="6306-6314", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="DefaultSerializationBinder.cs"];
m1_2768 [label="ReflectionContractResolver contractResolver = new ReflectionContractResolver()", span="6287-6287", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="DefaultSerializationBinder.cs"];
m1_2773 [label="StringAssert.AreEqual(@''{\r\n  ''''x'''': 2147483647,\r\n  ''''y'''': 2,\r\n  ''''z'''': 3\r\n}'', json)", span="6300-6304", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="DefaultSerializationBinder.cs"];
m1_2772 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = contractResolver\r\n            })", span="6295-6298", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="DefaultSerializationBinder.cs"];
m1_2769 [label="StaticTestClass c = new StaticTestClass\r\n            {\r\n                x = int.MaxValue\r\n            }", span="6289-6292", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="DefaultSerializationBinder.cs"];
m1_2771 [label="StaticTestClass.z = 3", span="6294-6294", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="DefaultSerializationBinder.cs"];
m1_2770 [label="StaticTestClass.y = 2", span="6293-6293", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="DefaultSerializationBinder.cs"];
m1_2778 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", span="6285-6285", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="DefaultSerializationBinder.cs"];
m1_3797 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableLongTestClass.NullableLongTestClass()", span="8699-8699", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableLongTestClass.NullableLongTestClass()", file="DefaultSerializationBinder.cs"];
m1_2915 [label="Entry Newtonsoft.Json.Tests.TestObjects.WidgetId1.WidgetId1()", span="28-28", cluster="Newtonsoft.Json.Tests.TestObjects.WidgetId1.WidgetId1()", file="DefaultSerializationBinder.cs"];
m1_222 [label="serializer.ContractResolver = resolver", span="583-583", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="DefaultSerializationBinder.cs"];
m1_200 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="DefaultSerializationBinder.cs"];
m1_202 [label="Entry Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="151-151", cluster="Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="DefaultSerializationBinder.cs"];
m1_213 [label="serializer.Binder = customBinder", span="568-568", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="DefaultSerializationBinder.cs"];
m1_217 [label="serializer.ConstructorHandling = ConstructorHandling.AllowNonPublicDefaultConstructor", span="574-574", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="DefaultSerializationBinder.cs"];
m1_219 [label="serializer.Context = new StreamingContext(StreamingContextStates.Other)", span="578-578", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="DefaultSerializationBinder.cs"];
m1_221 [label="CamelCasePropertyNamesContractResolver resolver = new CamelCasePropertyNamesContractResolver()", span="582-582", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="DefaultSerializationBinder.cs"];
m1_199 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string)", span="703-703", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string)", file="DefaultSerializationBinder.cs"];
m1_214 [label="Assert.AreEqual(customBinder, serializer.Binder)", span="569-569", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="DefaultSerializationBinder.cs"];
m1_218 [label="Assert.AreEqual(ConstructorHandling.AllowNonPublicDefaultConstructor, serializer.ConstructorHandling)", span="575-575", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="DefaultSerializationBinder.cs"];
m1_220 [label="Assert.AreEqual(new StreamingContext(StreamingContextStates.Other), serializer.Context)", span="579-579", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="DefaultSerializationBinder.cs"];
m1_210 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", span="563-563", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="DefaultSerializationBinder.cs"];
m1_211 [label="JsonSerializer serializer = new JsonSerializer()", span="565-565", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="DefaultSerializationBinder.cs"];
m1_212 [label="DefaultSerializationBinder customBinder = new DefaultSerializationBinder()", span="567-567", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="DefaultSerializationBinder.cs"];
m1_215 [label="serializer.CheckAdditionalContent = true", span="571-571", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="DefaultSerializationBinder.cs"];
m1_216 [label="Assert.AreEqual(true, serializer.CheckAdditionalContent)", span="572-572", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="DefaultSerializationBinder.cs"];
m1_223 [label="Assert.AreEqual(resolver, serializer.ContractResolver)", span="584-584", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="DefaultSerializationBinder.cs"];
m1_3027 [label="Entry Newtonsoft.Json.Tests.TestObjects.MetroPropertyNameResolver.MetroPropertyNameResolver()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.MetroPropertyNameResolver.MetroPropertyNameResolver()", file="DefaultSerializationBinder.cs"];
m1_3634 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestClassConvertable.TestClassConvertable()", span="8313-8313", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestClassConvertable.TestClassConvertable()", file="DefaultSerializationBinder.cs"];
m1_1129 [label="Entry Newtonsoft.Json.Linq.JValue.ToString()", span="792-792", cluster="Newtonsoft.Json.Linq.JValue.ToString()", file="DefaultSerializationBinder.cs"];
m1_1254 [label="Entry Newtonsoft.Json.Tests.TestObjects.LogEntry.LogEntry()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.LogEntry.LogEntry()", file="DefaultSerializationBinder.cs"];
m1_595 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewProperties.SubWithoutContractNewProperties()", span="1218-1218", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewProperties.SubWithoutContractNewProperties()", file="DefaultSerializationBinder.cs"];
m1_1047 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", span="2171-2171", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="DefaultSerializationBinder.cs"];
m1_1051 [label="Assert.AreEqual(@''{''''DefaultConverter'''':''''\/Date(0)\/'''',''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="2180-2180", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="DefaultSerializationBinder.cs"];
m1_1053 [label="Assert.AreEqual(new DateTime(1970, 1, 1), m2.DefaultConverter)", span="2187-2187", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="DefaultSerializationBinder.cs"];
m1_1054 [label="Assert.AreEqual(new DateTime(1970, 1, 1), m2.MemberConverter)", span="2188-2188", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="DefaultSerializationBinder.cs"];
m1_1050 [label="string json = JsonConvert.SerializeObject(m1, new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.MicrosoftDateFormat,\r\n            })", span="2176-2179", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="DefaultSerializationBinder.cs"];
m1_1052 [label="var m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json, new JsonSerializerSettings\r\n            {\r\n                DateParseHandling = DateParseHandling.None\r\n            })", span="2182-2185", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="DefaultSerializationBinder.cs"];
m1_1049 [label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="2174-2174", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="DefaultSerializationBinder.cs"];
m1_1048 [label="DateTime testDate = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="2173-2173", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="DefaultSerializationBinder.cs"];
m1_1055 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", span="2171-2171", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="DefaultSerializationBinder.cs"];
m1_3446 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", span="7873-7873", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="DefaultSerializationBinder.cs"];
m1_3448 [label="IList<float> floats = JsonConvert.DeserializeObject<IList<float>>(json)", span="7881-7881", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="DefaultSerializationBinder.cs"];
m1_3452 [label="IList<double> doubles = JsonConvert.DeserializeObject<IList<double>>(json)", span="7886-7886", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="DefaultSerializationBinder.cs"];
m1_3449 [label="Assert.AreEqual(float.NaN, floats[0])", span="7882-7882", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="DefaultSerializationBinder.cs"];
m1_3450 [label="Assert.AreEqual(float.PositiveInfinity, floats[1])", span="7883-7883", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="DefaultSerializationBinder.cs"];
m1_3451 [label="Assert.AreEqual(float.NegativeInfinity, floats[2])", span="7884-7884", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="DefaultSerializationBinder.cs"];
m1_3453 [label="Assert.AreEqual(float.NaN, doubles[0])", span="7887-7887", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="DefaultSerializationBinder.cs"];
m1_3454 [label="Assert.AreEqual(float.PositiveInfinity, doubles[1])", span="7888-7888", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="DefaultSerializationBinder.cs"];
m1_3455 [label="Assert.AreEqual(float.NegativeInfinity, doubles[2])", span="7889-7889", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="DefaultSerializationBinder.cs"];
m1_3447 [label="string json = @''[\r\n  ''''NaN'''',\r\n  ''''Infinity'''',\r\n  ''''-Infinity''''\r\n]''", span="7875-7879", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="DefaultSerializationBinder.cs"];
m1_3456 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", span="7873-7873", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="DefaultSerializationBinder.cs"];
m1_1868 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", span="4145-4145", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", file="DefaultSerializationBinder.cs"];
m1_1869 [label="return _innerDictionary.Remove(key);", span="4147-4147", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", file="DefaultSerializationBinder.cs"];
m1_1870 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", span="4145-4145", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", file="DefaultSerializationBinder.cs"];
m1_2475 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", span="5517-5517", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="DefaultSerializationBinder.cs"];
m1_2477 [label="string json = JsonConvert.SerializeObject(i, Formatting.Indented)", span="5521-5521", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="DefaultSerializationBinder.cs"];
m1_2478 [label="StringAssert.AreEqual(@''{\r\n  ''''Name'''': null\r\n}'', json)", span="5523-5525", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="DefaultSerializationBinder.cs"];
m1_2476 [label="ComplexItem i = new ComplexItem()", span="5519-5519", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="DefaultSerializationBinder.cs"];
m1_2479 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", span="5517-5517", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="DefaultSerializationBinder.cs"];
m1_1532 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", span="3253-3253", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", file="DefaultSerializationBinder.cs"];
m1_1534 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<double>(json); }, @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'System.Double' because the type requires a JSON primitive value (e.g. string, number, boolean, null) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON primitive value (e.g. string, number, boolean, null) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'')", span="3257-3259", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", file="DefaultSerializationBinder.cs"];
m1_1533 [label="string json = @''[]''", span="3255-3255", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", file="DefaultSerializationBinder.cs"];
m1_1535 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", span="3253-3253", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", file="DefaultSerializationBinder.cs"];
m1_2993 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", span="6736-6736", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="DefaultSerializationBinder.cs"];
m1_2999 [label="NullableDateTimeTestClass c2 =\r\n                JsonConvert.DeserializeObject<NullableDateTimeTestClass>(\r\n                    @''{''''PreField'''':''''Pre'''',''''DateTimeField'''':null,''''DateTimeOffsetField'''':null,''''PostField'''':''''Post''''}'')", span="6751-6753", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="DefaultSerializationBinder.cs"];
m1_2995 [label="Assert.AreEqual(new DateTime(2008, 12, 12, 12, 12, 12, 0, DateTimeKind.Utc).ToLocalTime(), c.DateTimeField)", span="6746-6746", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="DefaultSerializationBinder.cs"];
m1_2996 [label="Assert.AreEqual(new DateTimeOffset(2008, 12, 12, 12, 12, 12, 0, TimeSpan.Zero), c.DateTimeOffsetField)", span="6747-6747", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="DefaultSerializationBinder.cs"];
m1_2997 [label="Assert.AreEqual(''Pre'', c.PreField)", span="6748-6748", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="DefaultSerializationBinder.cs"];
m1_2998 [label="Assert.AreEqual(''Post'', c.PostField)", span="6749-6749", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="DefaultSerializationBinder.cs"];
m1_3000 [label="Assert.AreEqual(null, c2.DateTimeField)", span="6755-6755", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="DefaultSerializationBinder.cs"];
m1_3001 [label="Assert.AreEqual(null, c2.DateTimeOffsetField)", span="6756-6756", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="DefaultSerializationBinder.cs"];
m1_3002 [label="Assert.AreEqual(''Pre'', c2.PreField)", span="6757-6757", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="DefaultSerializationBinder.cs"];
m1_3003 [label="Assert.AreEqual(''Post'', c2.PostField)", span="6758-6758", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="DefaultSerializationBinder.cs"];
m1_2994 [label="NullableDateTimeTestClass c =\r\n                JsonConvert.DeserializeObject<NullableDateTimeTestClass>(\r\n                    @''{''''PreField'''':''''Pre'''',''''DateTimeField'''':''''2008-12-12T12:12:12Z'''',''''DateTimeOffsetField'''':''''2008-12-12T12:12:12Z'''',''''PostField'''':''''Post''''}'',\r\n                    new JsonSerializerSettings\r\n                    {\r\n                        DateTimeZoneHandling = DateTimeZoneHandling.Local\r\n                    })", span="6738-6744", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="DefaultSerializationBinder.cs"];
m1_3004 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", span="6736-6736", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="DefaultSerializationBinder.cs"];
m1_562 [label="Entry System.IO.StreamWriter.Flush()", span="0-0", cluster="System.IO.StreamWriter.Flush()", file="DefaultSerializationBinder.cs"];
m1_58 [label="StringAssert.AreEqual(@''{\r\n  ''''FaqId'''': 1,\r\n  ''''Name'''': null,\r\n  ''''IsDeleted'''': false,\r\n  ''''FullSectionsProp'''': [\r\n    {}\r\n  ]\r\n}'', json)", span="233-240", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="DefaultSerializationBinder.cs"];
m1_106 [label="typeof (IConvertible).IsAssignableFrom(keyType)", span="271-271", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.GenerateInternal(System.Type, Newtonsoft.Json.Required, bool)", file="DefaultSerializationBinder.cs"];
m1_108 [label="contract is JsonArrayContract", span="277-277", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.GenerateInternal(System.Type, Newtonsoft.Json.Required, bool)", file="DefaultSerializationBinder.cs"];
m1_115 [label="CurrentSchema.Items = new List<JsonSchema>()", span="289-289", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.GenerateInternal(System.Type, Newtonsoft.Json.Required, bool)", file="DefaultSerializationBinder.cs"];
m1_113 [label="Type collectionItemType = ReflectionUtils.GetCollectionItemType(type)", span="286-286", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.GenerateInternal(System.Type, Newtonsoft.Json.Required, bool)", file="DefaultSerializationBinder.cs"];
m1_114 [label="collectionItemType != null", span="287-287", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.GenerateInternal(System.Type, Newtonsoft.Json.Required, bool)", file="DefaultSerializationBinder.cs"];
m1_107 [label="CurrentSchema.AdditionalProperties = GenerateInternal(valueType, Required.Default, false)", span="273-273", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.GenerateInternal(System.Type, Newtonsoft.Json.Required, bool)", file="DefaultSerializationBinder.cs"];
m1_109 [label="CurrentSchema.Type = AddNullType(JsonSchemaType.Array, valueRequired)", span="279-279", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.GenerateInternal(System.Type, Newtonsoft.Json.Required, bool)", file="DefaultSerializationBinder.cs"];
m1_112 [label="bool allowNullItem = (arrayAttribute != null) ? arrayAttribute.AllowNullItems : true", span="284-284", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.GenerateInternal(System.Type, Newtonsoft.Json.Required, bool)", file="DefaultSerializationBinder.cs"];
m1_111 [label="JsonArrayAttribute arrayAttribute = JsonTypeReflector.GetJsonContainerAttribute(type) as JsonArrayAttribute", span="283-283", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.GenerateInternal(System.Type, Newtonsoft.Json.Required, bool)", file="DefaultSerializationBinder.cs"];
m1_110 [label="CurrentSchema.Id = GetTypeId(type, false)", span="281-281", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.GenerateInternal(System.Type, Newtonsoft.Json.Required, bool)", file="DefaultSerializationBinder.cs"];
m1_116 [label="CurrentSchema.Items.Add(GenerateInternal(collectionItemType, (!allowNullItem) ? Required.Always : Required.Default, false))", span="290-290", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.GenerateInternal(System.Type, Newtonsoft.Json.Required, bool)", file="DefaultSerializationBinder.cs"];
m1_754 [label="Entry Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeTestClass.JsonIgnoreAttributeTestClass()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeTestClass.JsonIgnoreAttributeTestClass()", file="DefaultSerializationBinder.cs"];
m1_1820 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTestClass.DataContractJsonSerializerTestClass()", span="4006-4006", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTestClass.DataContractJsonSerializerTestClass()", file="DefaultSerializationBinder.cs"];
m1_3772 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErrorCreatingJsonConverter()", span="8661-8661", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErrorCreatingJsonConverter()", file="DefaultSerializationBinder.cs"];
m1_3773 [label="ExceptionAssert.Throws<JsonException>(() => JsonConvert.SerializeObject(new ErroringTestClass()), ''Error creating 'Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+ErroringJsonConverter'.'')", span="8663-8663", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErrorCreatingJsonConverter()", file="DefaultSerializationBinder.cs"];
m1_3774 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErrorCreatingJsonConverter()", span="8661-8661", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErrorCreatingJsonConverter()", file="DefaultSerializationBinder.cs"];
m1_89 [label="converterSchema != null", span="241-241", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.GenerateInternal(System.Type, Newtonsoft.Json.Required, bool)", file="DefaultSerializationBinder.cs"];
m1_2890 [label="Entry Newtonsoft.Json.Tests.TestObjects.Item.Item()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.Item.Item()", file="DefaultSerializationBinder.cs"];
m1_1027 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", span="2138-2138", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="DefaultSerializationBinder.cs"];
m1_1032 [label="MemberConverterClass m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json)", span="2146-2146", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="DefaultSerializationBinder.cs"];
m1_1033 [label="Assert.AreEqual(testDate, m2.DefaultConverter)", span="2148-2148", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="DefaultSerializationBinder.cs"];
m1_1034 [label="Assert.AreEqual(testDate, m2.MemberConverter)", span="2149-2149", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="DefaultSerializationBinder.cs"];
m1_1031 [label="Assert.AreEqual(@''{''''DefaultConverter'''':''''1970-01-01T00:00:00Z'''',''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="2144-2144", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="DefaultSerializationBinder.cs"];
m1_1030 [label="string json = JsonConvert.SerializeObject(m1)", span="2143-2143", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="DefaultSerializationBinder.cs"];
m1_1028 [label="DateTime testDate = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="2140-2140", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="DefaultSerializationBinder.cs"];
m1_1029 [label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="2141-2141", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="DefaultSerializationBinder.cs"];
m1_1035 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", span="2138-2138", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="DefaultSerializationBinder.cs"];
m1_3626 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt64(System.IFormatProvider)", span="8307-8307", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt64(System.IFormatProvider)", file="DefaultSerializationBinder.cs"];
m1_3627 [label="throw new InvalidCastException();", span="8309-8309", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt64(System.IFormatProvider)", file="DefaultSerializationBinder.cs"];
m1_3628 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt64(System.IFormatProvider)", span="8307-8307", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt64(System.IFormatProvider)", file="DefaultSerializationBinder.cs"];
m1_1846 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", span="4112-4112", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", file="DefaultSerializationBinder.cs"];
m1_1847 [label="return _innerDictionary.ContainsKey(key);", span="4114-4114", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", file="DefaultSerializationBinder.cs"];
m1_1848 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", span="4112-4112", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", file="DefaultSerializationBinder.cs"];
m1_273 [label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0", cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="DefaultSerializationBinder.cs"];
m1_405 [label="Entry Newtonsoft.Json.Tests.TestObjects.Ratio.Ratio(int, int)", span="37-37", cluster="Newtonsoft.Json.Tests.TestObjects.Ratio.Ratio(int, int)", file="DefaultSerializationBinder.cs"];
m1_2835 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertableIntTestClass.ConvertableIntTestClass()", span="6419-6419", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertableIntTestClass.ConvertableIntTestClass()", file="DefaultSerializationBinder.cs"];
m1_271 [label="Entry Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver.CamelCasePropertyNamesContractResolver()", span="38-38", cluster="Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver.CamelCasePropertyNamesContractResolver()", file="DefaultSerializationBinder.cs"];
m1_3041 [label="Entry System.Enum.Parse(System.Type, string)", span="0-0", cluster="System.Enum.Parse(System.Type, string)", file="DefaultSerializationBinder.cs"];
m1_2836 [label="Entry Newtonsoft.Json.Tests.ConvertibleInt.ConvertibleInt(int)", span="1577-1577", cluster="Newtonsoft.Json.Tests.ConvertibleInt.ConvertibleInt(int)", file="DefaultSerializationBinder.cs"];
m1_1511 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", span="3221-3221", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", file="DefaultSerializationBinder.cs"];
m1_1513 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<Person>(json); }, @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'Newtonsoft.Json.Tests.TestObjects.Person' because the type requires a JSON object (e.g. {''''name'''':''''value''''}) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON object (e.g. {''''name'''':''''value''''}) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'')", span="3225-3227", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", file="DefaultSerializationBinder.cs"];
m1_1512 [label="string json = @''[]''", span="3223-3223", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", file="DefaultSerializationBinder.cs"];
m1_1514 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", span="3221-3221", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", file="DefaultSerializationBinder.cs"];
m1_3095 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", span="6938-6938", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="DefaultSerializationBinder.cs"];
m1_3101 [label="Assert.AreEqual(3, errors.Count)", span="6955-6955", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="DefaultSerializationBinder.cs"];
m1_3097 [label="IList<string> errors = new List<string>()", span="6941-6941", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="DefaultSerializationBinder.cs"];
m1_3100 [label="Assert.IsNotNull(o)", span="6954-6954", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="DefaultSerializationBinder.cs"];
m1_3102 [label="Assert.IsTrue(errors[0].StartsWith(''Required property 'NonAttributeProperty' expects a value but got null. Path ''''))", span="6956-6956", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="DefaultSerializationBinder.cs"];
m1_3096 [label="string json = ''{'NonAttributeProperty':null,'UnsetProperty':null,'AllowNullProperty':null,'AlwaysProperty':null}''", span="6940-6940", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="DefaultSerializationBinder.cs"];
m1_3098 [label="EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs> error = (s, e) =>\r\n            {\r\n                errors.Add(e.ErrorContext.Error.Message);\r\n                e.ErrorContext.Handled = true;\r\n            }", span="6943-6947", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="DefaultSerializationBinder.cs"];
m1_3103 [label="Assert.IsTrue(errors[1].StartsWith(''Required property 'UnsetProperty' expects a value but got null. Path ''''))", span="6957-6957", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="DefaultSerializationBinder.cs"];
m1_3104 [label="Assert.IsTrue(errors[2].StartsWith(''Required property 'AlwaysProperty' expects a value but got null. Path ''''))", span="6958-6958", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="DefaultSerializationBinder.cs"];
m1_3099 [label="var o = JsonConvert.DeserializeObject<RequiredObject>(json, new JsonSerializerSettings\r\n            {\r\n                Error = error\r\n            })", span="6949-6952", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="DefaultSerializationBinder.cs"];
m1_3105 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", span="6938-6938", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="DefaultSerializationBinder.cs"];
m1_124 [label="JToken value = JToken.FromObject(enumValue.Value)", span="305-305", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.GenerateInternal(System.Type, Newtonsoft.Json.Required, bool)", file="DefaultSerializationBinder.cs"];
m1_126 [label="CurrentSchema.Options.Add(value, enumValue.Name)", span="308-308", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.GenerateInternal(System.Type, Newtonsoft.Json.Required, bool)", file="DefaultSerializationBinder.cs"];
m1_125 [label="CurrentSchema.Enum.Add(value)", span="307-307", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.GenerateInternal(System.Type, Newtonsoft.Json.Required, bool)", file="DefaultSerializationBinder.cs"];
m1_127 [label="contract is JsonObjectContract", span="312-312", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.GenerateInternal(System.Type, Newtonsoft.Json.Required, bool)", file="DefaultSerializationBinder.cs"];
m1_128 [label="CurrentSchema.Type = AddNullType(JsonSchemaType.Object, valueRequired)", span="314-314", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.GenerateInternal(System.Type, Newtonsoft.Json.Required, bool)", file="DefaultSerializationBinder.cs"];
m1_2273 [label="Entry System.Collections.Specialized.StringDictionary.StringDictionary()", span="0-0", cluster="System.Collections.Specialized.StringDictionary.StringDictionary()", file="DefaultSerializationBinder.cs"];
m1_832 [label="Entry System.IO.StreamReader.ReadToEnd()", span="0-0", cluster="System.IO.StreamReader.ReadToEnd()", file="DefaultSerializationBinder.cs"];
m1_425 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, int)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, int)", file="DefaultSerializationBinder.cs"];
m1_3179 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", span="7138-7138", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="DefaultSerializationBinder.cs"];
m1_3182 [label="Assert.AreEqual(testObj.Name, objDeserialized.Name)", span="7143-7143", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="DefaultSerializationBinder.cs"];
m1_3183 [label="Assert.AreEqual(0, objDeserialized.Age)", span="7144-7144", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="DefaultSerializationBinder.cs"];
m1_3180 [label="var testObj = new PersonSerializable() { Name = ''John Doe'', Age = 28 }", span="7140-7140", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="DefaultSerializationBinder.cs"];
m1_3181 [label="var objDeserialized = SerializeAndDeserialize<PersonSerializable>(testObj)", span="7141-7141", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="DefaultSerializationBinder.cs"];
m1_3184 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", span="7138-7138", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="DefaultSerializationBinder.cs"];
m1_1499 [label="Entry Newtonsoft.Json.Tests.TestObjects.SetOnlyPropertyClass2.GetValue()", span="36-36", cluster="Newtonsoft.Json.Tests.TestObjects.SetOnlyPropertyClass2.GetValue()", file="DefaultSerializationBinder.cs"];
m1_1711 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", span="3659-3659", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", file="DefaultSerializationBinder.cs"];
m1_1712 [label="Dictionary = new Dictionary<string, string>\r\n                {\r\n                    { ''existing'', ''yup'' }\r\n                }", span="3661-3664", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", file="DefaultSerializationBinder.cs"];
m1_1713 [label="List = new List<string>\r\n                {\r\n                    ''existing''\r\n                }", span="3665-3668", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", file="DefaultSerializationBinder.cs"];
m1_1714 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", span="3659-3659", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", file="DefaultSerializationBinder.cs"];
m1_2465 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", span="5492-5492", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="DefaultSerializationBinder.cs"];
m1_2469 [label="EnumerableClass c2 = JsonConvert.DeserializeObject<EnumerableClass>(json)", span="5509-5509", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="DefaultSerializationBinder.cs"];
m1_2470 [label="Assert.AreEqual(''One'', c2.Enumerable.ElementAt(0))", span="5511-5511", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="DefaultSerializationBinder.cs"];
m1_2471 [label="Assert.AreEqual(''Two'', c2.Enumerable.ElementAt(1))", span="5512-5512", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="DefaultSerializationBinder.cs"];
m1_2472 [label="Assert.AreEqual(''Three'', c2.Enumerable.ElementAt(2))", span="5513-5513", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="DefaultSerializationBinder.cs"];
m1_2467 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="5499-5499", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="DefaultSerializationBinder.cs"];
m1_2468 [label="StringAssert.AreEqual(@''{\r\n  ''''Enumerable'''': [\r\n    ''''One'''',\r\n    ''''Two'''',\r\n    ''''Three''''\r\n  ]\r\n}'', json)", span="5501-5507", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="DefaultSerializationBinder.cs"];
m1_2466 [label="EnumerableClass c = new EnumerableClass\r\n            {\r\n                Enumerable = new List<string> { ''One'', ''Two'', ''Three'' }\r\n            }", span="5494-5497", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="DefaultSerializationBinder.cs"];
m1_2473 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", span="5492-5492", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="DefaultSerializationBinder.cs"];
m1_2851 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", span="6469-6469", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="DefaultSerializationBinder.cs"];
m1_2853 [label="Widget w = JsonConvert.DeserializeObject<Widget>(json)", span="6473-6473", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="DefaultSerializationBinder.cs"];
m1_2854 [label="Assert.AreEqual(new WidgetId { Value = ''id'' }, w.Id)", span="6475-6475", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="DefaultSerializationBinder.cs"];
m1_2855 [label="Assert.AreEqual(new WidgetId { Value = ''id'' }, w.Id.Value)", span="6476-6476", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="DefaultSerializationBinder.cs"];
m1_2856 [label="Assert.AreEqual(''id'', w.Id.Value.Value)", span="6477-6477", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="DefaultSerializationBinder.cs"];
m1_2852 [label="string json = @''{''''Id'''':{''''Value'''':''''id''''}}''", span="6471-6471", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="DefaultSerializationBinder.cs"];
m1_2857 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", span="6469-6469", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="DefaultSerializationBinder.cs"];
m1_2822 [label="Entry Newtonsoft.Json.Tests.TestObjects.Bb.Bb()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.Bb.Bb()", file="DefaultSerializationBinder.cs"];
m1_2714 [label="Entry System.IO.StringWriter.ToString()", span="0-0", cluster="System.IO.StringWriter.ToString()", file="DefaultSerializationBinder.cs"];
m1_1038 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", span="2153-2153", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="DefaultSerializationBinder.cs"];
m1_1043 [label="MemberConverterClass m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json)", span="2164-2164", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="DefaultSerializationBinder.cs"];
m1_1044 [label="Assert.AreEqual(testDate, m2.DefaultConverter)", span="2166-2166", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="DefaultSerializationBinder.cs"];
m1_1045 [label="Assert.AreEqual(testDate, m2.MemberConverter)", span="2167-2167", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="DefaultSerializationBinder.cs"];
m1_1042 [label="Assert.AreEqual(@''{''''DefaultConverter'''':''''\/Date(0)\/'''',''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="2162-2162", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="DefaultSerializationBinder.cs"];
m1_1041 [label="string json = JsonConvert.SerializeObject(m1, new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.MicrosoftDateFormat\r\n            })", span="2158-2161", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="DefaultSerializationBinder.cs"];
m1_1039 [label="DateTime testDate = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="2155-2155", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="DefaultSerializationBinder.cs"];
m1_1040 [label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="2156-2156", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="DefaultSerializationBinder.cs"];
m1_1046 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", span="2153-2153", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="DefaultSerializationBinder.cs"];
m1_2916 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", span="6606-6606", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="DefaultSerializationBinder.cs"];
m1_2921 [label="Assert.AreEqual(dict[''k1''], dict2[''k1''])", span="6614-6614", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="DefaultSerializationBinder.cs"];
m1_2918 [label="var dict = serializer.Deserialize<Dictionary<string, string>>(new JsonTextReader(new StringReader(''{'k1':'','k2':'v2'}'')))", span="6609-6609", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="DefaultSerializationBinder.cs"];
m1_2920 [label="var dict2 = serializer.Deserialize<Dictionary<string, object>>(reader)", span="6612-6612", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="DefaultSerializationBinder.cs"];
m1_2917 [label="var serializer = JsonSerializer.Create(new JsonSerializerSettings())", span="6608-6608", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="DefaultSerializationBinder.cs"];
m1_2919 [label="var reader = new JsonTextReader(new StringReader(''{'k1':'','k2':'v2'}''))", span="6611-6611", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="DefaultSerializationBinder.cs"];
m1_2922 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", span="6606-6606", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="DefaultSerializationBinder.cs"];
m1_2214 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.DictionaryKey()", span="4909-4909", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.DictionaryKey()", file="DefaultSerializationBinder.cs"];
m1_648 [label="Entry Newtonsoft.Json.Linq.JObject.JObject(object)", span="113-113", cluster="Newtonsoft.Json.Linq.JObject.JObject(object)", file="DefaultSerializationBinder.cs"];
m1_596 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", span="1377-1377", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="DefaultSerializationBinder.cs"];
m1_639 [label="Assert.AreEqual(dataContractJson.Count, jsonNetJson.Count)", span="1394-1394", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="DefaultSerializationBinder.cs"];
m1_633 [label="dataContractJson = new JObject(dataContractJson.Properties().OrderBy(p => p.Name))", span="1385-1385", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="DefaultSerializationBinder.cs"];
m1_635 [label="jsonNetJson = new JObject(jsonNetJson.Properties().OrderBy(p => p.Name))", span="1388-1388", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="DefaultSerializationBinder.cs"];
m1_638 [label="Console.WriteLine(''JsonDotNetSerializer      : '' + jsonNetJson)", span="1392-1392", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="DefaultSerializationBinder.cs"];
m1_640 [label=dataContractJson, span="1395-1395", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="DefaultSerializationBinder.cs"];
m1_634 [label="JObject jsonNetJson = JObject.Parse(JsonConvert.SerializeObject(o))", span="1387-1387", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="DefaultSerializationBinder.cs"];
m1_642 [label="return jsonNetJson.ToString();", span="1400-1400", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="DefaultSerializationBinder.cs"];
m1_629 [label="DataContractJsonSerializer s = new DataContractJsonSerializer(o.GetType())", span="1380-1380", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="DefaultSerializationBinder.cs"];
m1_636 [label="Console.WriteLine(''Results for '' + o.GetType().Name)", span="1390-1390", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="DefaultSerializationBinder.cs"];
m1_632 [label="JObject dataContractJson = JObject.Parse(Encoding.UTF8.GetString(data, 0, data.Length))", span="1384-1384", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="DefaultSerializationBinder.cs"];
m1_637 [label="Console.WriteLine(''DataContractJsonSerializer: '' + dataContractJson)", span="1391-1391", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="DefaultSerializationBinder.cs"];
m1_641 [label="Assert.IsTrue(JToken.DeepEquals(jsonNetJson[property.Key], property.Value), ''Property not equal: '' + property.Key)", span="1397-1397", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="DefaultSerializationBinder.cs"];
m1_628 [label="MemoryStream ms = new MemoryStream()", span="1379-1379", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="DefaultSerializationBinder.cs"];
m1_630 [label="s.WriteObject(ms, o)", span="1381-1381", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="DefaultSerializationBinder.cs"];
m1_631 [label="var data = ms.ToArray()", span="1383-1383", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="DefaultSerializationBinder.cs"];
m1_643 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", span="1377-1377", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="DefaultSerializationBinder.cs"];
m1_3707 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", span="8491-8491", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="DefaultSerializationBinder.cs"];
m1_3714 [label="Assert.AreEqual(dt, d.Keys.ElementAt(0))", span="8512-8512", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="DefaultSerializationBinder.cs"];
m1_3708 [label="DateTimeOffset dt = new DateTimeOffset(2000, 12, 22, 0, 0, 0, TimeSpan.Zero)", span="8493-8493", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="DefaultSerializationBinder.cs"];
m1_3713 [label="Dictionary<DateTimeOffset, string> d = JsonConvert.DeserializeObject<Dictionary<DateTimeOffset, string>>(json, settings)", span="8510-8510", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="DefaultSerializationBinder.cs"];
m1_3709 [label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd'!'K''", span="8494-8494", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="DefaultSerializationBinder.cs"];
m1_3711 [label="string json = JsonConvert.SerializeObject(new Dictionary<DateTimeOffset, string>\r\n            {\r\n                { dt, ''123'' }\r\n            }, settings)", span="8501-8504", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="DefaultSerializationBinder.cs"];
m1_3710 [label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                Formatting = Formatting.Indented\r\n            }", span="8495-8499", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="DefaultSerializationBinder.cs"];
m1_3712 [label="StringAssert.AreEqual(@''{\r\n  ''''2000-pie-Dec-Friday-22!+00:00'''': ''''123''''\r\n}'', json)", span="8506-8508", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="DefaultSerializationBinder.cs"];
m1_3715 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", span="8491-8491", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="DefaultSerializationBinder.cs"];
m1_3110 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", span="6962-6962", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="DefaultSerializationBinder.cs"];
m1_3115 [label="Assert.AreEqual(3, errors.Count)", span="6983-6983", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="DefaultSerializationBinder.cs"];
m1_3116 [label="Assert.AreEqual(''Cannot write a null value for property 'NonAttributeProperty'. Property requires a value. Path ''.'', errors[0])", span="6984-6984", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="DefaultSerializationBinder.cs"];
m1_3117 [label="Assert.AreEqual(''Cannot write a null value for property 'UnsetProperty'. Property requires a value. Path ''.'', errors[1])", span="6985-6985", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="DefaultSerializationBinder.cs"];
m1_3118 [label="Assert.AreEqual(''Cannot write a null value for property 'AlwaysProperty'. Property requires a value. Path ''.'', errors[2])", span="6986-6986", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="DefaultSerializationBinder.cs"];
m1_3111 [label="IList<string> errors = new List<string>()", span="6964-6964", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="DefaultSerializationBinder.cs"];
m1_3114 [label="StringAssert.AreEqual(@''{\r\n  ''''DefaultProperty'''': null,\r\n  ''''AllowNullProperty'''': null\r\n}'', json)", span="6978-6981", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="DefaultSerializationBinder.cs"];
m1_3112 [label="EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs> error = (s, e) =>\r\n            {\r\n                errors.Add(e.ErrorContext.Error.Message);\r\n                e.ErrorContext.Handled = true;\r\n            }", span="6966-6970", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="DefaultSerializationBinder.cs"];
m1_3113 [label="string json = JsonConvert.SerializeObject(new RequiredObject(), new JsonSerializerSettings\r\n            {\r\n                Error = error,\r\n                Formatting = Formatting.Indented\r\n            })", span="6972-6976", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="DefaultSerializationBinder.cs"];
m1_3119 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", span="6962-6962", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="DefaultSerializationBinder.cs"];
m1_889 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", span="1896-1896", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="DefaultSerializationBinder.cs"];
m1_891 [label="ClassWithArray wibble = JsonConvert.DeserializeObject<ClassWithArray>(json)", span="1899-1899", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="DefaultSerializationBinder.cs"];
m1_892 [label="Assert.AreEqual(''hello'', wibble.Foo)", span="1900-1900", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="DefaultSerializationBinder.cs"];
m1_893 [label="Assert.AreEqual(4, wibble.Bar.Count)", span="1902-1902", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="DefaultSerializationBinder.cs"];
m1_894 [label="Assert.AreEqual(int.MaxValue, wibble.Bar[0])", span="1903-1903", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="DefaultSerializationBinder.cs"];
m1_895 [label="Assert.AreEqual(1, wibble.Bar[1])", span="1904-1904", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="DefaultSerializationBinder.cs"];
m1_896 [label="Assert.AreEqual(2, wibble.Bar[2])", span="1905-1905", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="DefaultSerializationBinder.cs"];
m1_897 [label="Assert.AreEqual(3, wibble.Bar[3])", span="1906-1906", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="DefaultSerializationBinder.cs"];
m1_890 [label="string json = ''{foo:'hello',bar:[1,2,3]}''", span="1898-1898", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="DefaultSerializationBinder.cs"];
m1_898 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", span="1896-1896", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="DefaultSerializationBinder.cs"];
m1_2259 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", span="686-686", cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", file="DefaultSerializationBinder.cs"];
m1_48 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="DefaultSerializationBinder.cs"];
m1_49 [label="Entry Newtonsoft.Json.Schema.JsonSchemaGenerator.GetDescription(System.Type)", span="170-170", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.GetDescription(System.Type)", file="DefaultSerializationBinder.cs"];
m1_50 [label="JsonContainerAttribute containerAttribute = JsonTypeReflector.GetJsonContainerAttribute(type)", span="172-172", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.GetDescription(System.Type)", file="DefaultSerializationBinder.cs"];
m1_1101 [label="Entry Newtonsoft.Json.Tests.TestObjects.IncompatibleJsonAttributeClass.IncompatibleJsonAttributeClass()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.IncompatibleJsonAttributeClass.IncompatibleJsonAttributeClass()", file="DefaultSerializationBinder.cs"];
m1_567 [label="Entry System.Diagnostics.Stopwatch.Stop()", span="0-0", cluster="System.Diagnostics.Stopwatch.Stop()", file="DefaultSerializationBinder.cs"];
m1_3348 [label="Entry System.Tuple.Create<T1>(T1)", span="0-0", cluster="System.Tuple.Create<T1>(T1)", file="DefaultSerializationBinder.cs"];
m1_1956 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, float)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, float)", file="DefaultSerializationBinder.cs"];
m1_129 [label="CurrentSchema.Id = GetTypeId(type, false)", span="315-315", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.GenerateInternal(System.Type, Newtonsoft.Json.Required, bool)", file="DefaultSerializationBinder.cs"];
m1_95 [label="CurrentSchema.Optional = true", span="251-251", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.GenerateInternal(System.Type, Newtonsoft.Json.Required, bool)", file="DefaultSerializationBinder.cs"];
m1_1918 [label="Entry System.Runtime.Serialization.SerializationInfo.GetChar(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetChar(string)", file="DefaultSerializationBinder.cs"];
m1_845 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", span="1816-1816", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="DefaultSerializationBinder.cs"];
m1_851 [label="Dictionary<int, int> newValues = JsonConvert.DeserializeObject<Dictionary<int, int>>(json)", span="1826-1826", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="DefaultSerializationBinder.cs"];
m1_852 [label="CollectionAssert.AreEqual(values, newValues)", span="1828-1828", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="DefaultSerializationBinder.cs"];
m1_850 [label="Assert.AreEqual(@''{''''-5'''':6,''''-2147483648'''':2147483647}'', json)", span="1824-1824", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="DefaultSerializationBinder.cs"];
m1_849 [label="string json = JsonConvert.SerializeObject(values)", span="1822-1822", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="DefaultSerializationBinder.cs"];
m1_846 [label="Dictionary<int, int> values = new Dictionary<int, int>()", span="1818-1818", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="DefaultSerializationBinder.cs"];
m1_848 [label="values.Add(int.MinValue, int.MaxValue)", span="1820-1820", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="DefaultSerializationBinder.cs"];
m1_847 [label="values.Add(-5, 6)", span="1819-1819", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="DefaultSerializationBinder.cs"];
m1_853 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", span="1816-1816", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="DefaultSerializationBinder.cs"];
m1_2244 [label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0", cluster="System.Collections.Generic.HashSet<T>.Contains(T)", file="DefaultSerializationBinder.cs"];
m1_3214 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTestClass.IgnoreDataMemberTestClass()", span="7226-7226", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTestClass.IgnoreDataMemberTestClass()", file="DefaultSerializationBinder.cs"];
m1_3537 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", span="8143-8143", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="DefaultSerializationBinder.cs"];
m1_3541 [label="Assert.AreEqual(@''''''Console Writer'''''', text1)", span="8159-8159", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="DefaultSerializationBinder.cs"];
m1_3543 [label="Assert.AreEqual(''ConsoleWriter'', restoredWriter.PrintTest())", span="8162-8162", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="DefaultSerializationBinder.cs"];
m1_3549 [label="Assert.AreEqual(''ConsoleWriter'', restoredObject.First().Key.PrintTest())", span="8177-8177", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="DefaultSerializationBinder.cs"];
m1_3555 [label="Assert.AreEqual(''ConsoleWriter'', restoredDict2.First().Value.PrintTest())", span="8192-8192", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="DefaultSerializationBinder.cs"];
m1_3540 [label="var text1 = JsonConvert.SerializeObject(consoleWriter, Formatting.Indented, options)", span="8158-8158", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="DefaultSerializationBinder.cs"];
m1_3542 [label="var restoredWriter = JsonConvert.DeserializeObject<IMyInterface>(text1, options)", span="8161-8161", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="DefaultSerializationBinder.cs"];
m1_3544 [label="var dict2 = new Dictionary<IMyInterface, string>()", span="8168-8168", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="DefaultSerializationBinder.cs"];
m1_3548 [label="var restoredObject = JsonConvert.DeserializeObject<Dictionary<IMyInterface, string>>(text2, options)", span="8176-8176", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="DefaultSerializationBinder.cs"];
m1_3550 [label="var dict3 = new Dictionary<string, IMyInterface>()", span="8183-8183", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="DefaultSerializationBinder.cs"];
m1_3554 [label="var restoredDict2 = JsonConvert.DeserializeObject<Dictionary<string, IMyInterface>>(text3, options)", span="8191-8191", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="DefaultSerializationBinder.cs"];
m1_3538 [label="var consoleWriter = new ConsoleWriter()", span="8145-8145", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="DefaultSerializationBinder.cs"];
m1_3539 [label="var options = new JsonSerializerSettings\r\n            {\r\n                Converters = new JsonConverterCollection { new TypeConverterJsonConverter() },\r\n                //TypeNameHandling = TypeNameHandling.All\r\n            }", span="8148-8152", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="DefaultSerializationBinder.cs"];
m1_3545 [label="dict2.Add(consoleWriter, ''Console'')", span="8169-8169", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="DefaultSerializationBinder.cs"];
m1_3546 [label="var text2 = JsonConvert.SerializeObject(dict2, Formatting.Indented, options)", span="8171-8171", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="DefaultSerializationBinder.cs"];
m1_3547 [label="StringAssert.AreEqual(@''{\r\n  ''''Console Writer'''': ''''Console''''\r\n}'', text2)", span="8172-8174", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="DefaultSerializationBinder.cs"];
m1_3551 [label="dict3.Add(''Console'', consoleWriter)", span="8184-8184", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="DefaultSerializationBinder.cs"];
m1_3552 [label="var text3 = JsonConvert.SerializeObject(dict3, Formatting.Indented, options)", span="8186-8186", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="DefaultSerializationBinder.cs"];
m1_3553 [label="StringAssert.AreEqual(@''{\r\n  ''''Console'''': ''''Console Writer''''\r\n}'', text3)", span="8187-8189", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="DefaultSerializationBinder.cs"];
m1_3556 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", span="8143-8143", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="DefaultSerializationBinder.cs"];
m1_1697 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", span="3627-3627", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="DefaultSerializationBinder.cs"];
m1_1707 [label="PersonPropertyClass newPersonPropertyClass = JsonConvert.DeserializeObject<PersonPropertyClass>(json)", span="3650-3650", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="DefaultSerializationBinder.cs"];
m1_1708 [label="Assert.AreEqual(wagePerson.HourlyWage, ((WagePerson)newPersonPropertyClass.Person).HourlyWage)", span="3651-3651", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="DefaultSerializationBinder.cs"];
m1_1705 [label="string json = JsonConvert.SerializeObject(personPropertyClass, Formatting.Indented)", span="3638-3638", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="DefaultSerializationBinder.cs"];
m1_1706 [label="StringAssert.AreEqual(\r\n                @''{\r\n  ''''Person'''': {\r\n    ''''HourlyWage'''': 12.50,\r\n    ''''Name'''': ''''Jim Bob'''',\r\n    ''''BirthDate'''': ''''2000-11-29T23:59:59Z'''',\r\n    ''''LastModified'''': ''''2000-11-29T23:59:59Z''''\r\n  }\r\n}'',\r\n                json)", span="3639-3648", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="DefaultSerializationBinder.cs"];
m1_1699 [label="WagePerson wagePerson = (WagePerson)personPropertyClass.Person", span="3630-3630", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="DefaultSerializationBinder.cs"];
m1_1698 [label="PersonPropertyClass personPropertyClass = new PersonPropertyClass()", span="3629-3629", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="DefaultSerializationBinder.cs"];
m1_1704 [label="wagePerson.Name = ''Jim Bob''", span="3636-3636", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="DefaultSerializationBinder.cs"];
m1_1700 [label="wagePerson.BirthDate = new DateTime(2000, 11, 29, 23, 59, 59, DateTimeKind.Utc)", span="3632-3632", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="DefaultSerializationBinder.cs"];
m1_1703 [label="wagePerson.LastModified = new DateTime(2000, 11, 29, 23, 59, 59, DateTimeKind.Utc)", span="3635-3635", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="DefaultSerializationBinder.cs"];
m1_1701 [label="wagePerson.Department = ''McDees''", span="3633-3633", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="DefaultSerializationBinder.cs"];
m1_1702 [label="wagePerson.HourlyWage = 12.50m", span="3634-3634", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="DefaultSerializationBinder.cs"];
m1_1709 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", span="3627-3627", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="DefaultSerializationBinder.cs"];
m1_1268 [label="Entry Newtonsoft.Json.Tests.TestObjects.GenericListAndDictionaryInterfaceProperties.GenericListAndDictionaryInterfaceProperties()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.GenericListAndDictionaryInterfaceProperties.GenericListAndDictionaryInterfaceProperties()", file="DefaultSerializationBinder.cs"];
m1_1094 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", span="2261-2261", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", file="DefaultSerializationBinder.cs"];
m1_1095 [label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                IncompatibleJsonAttributeClass c = new IncompatibleJsonAttributeClass();\r\n                JsonConvert.SerializeObject(c);\r\n            }, ''Unexpected value when converting date. Expected DateTime or DateTimeOffset, got Newtonsoft.Json.Tests.TestObjects.IncompatibleJsonAttributeClass.'')", span="2263-2267", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", file="DefaultSerializationBinder.cs"];
m1_1096 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", span="2261-2261", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", file="DefaultSerializationBinder.cs"];
m1_1762 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", span="3811-3811", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", file="DefaultSerializationBinder.cs"];
m1_1764 [label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<DictionaryWithNoDefaultConstructor>(json, new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.All,\r\n                MetadataPropertyHandling = MetadataPropertyHandling.Default\r\n            }), ''Cannot preserve reference to readonly dictionary, or dictionary created from a non-default constructor: Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+DictionaryWithNoDefaultConstructor. Path 'key1', line 1, position 16.'')", span="3815-3819", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", file="DefaultSerializationBinder.cs"];
m1_1763 [label="string json = ''{'$id':'1',key1:'value1',key2:'value2',key3:'value3'}''", span="3813-3813", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", file="DefaultSerializationBinder.cs"];
m1_1765 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", span="3811-3811", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", file="DefaultSerializationBinder.cs"];
m1_761 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", span="1670-1670", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="DefaultSerializationBinder.cs"];
m1_764 [label="Assert.AreEqual(4, o.Children().Count())", span="1684-1684", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="DefaultSerializationBinder.cs"];
m1_767 [label="Assert.AreEqual(nestedTorrentsArray.Children().Count(), 19)", span="1688-1688", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="DefaultSerializationBinder.cs"];
m1_763 [label="JObject o = (JObject)JsonConvert.DeserializeObject(jsonText)", span="1683-1683", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="DefaultSerializationBinder.cs"];
m1_765 [label="JToken torrentsArray = (JToken)o[''torrents'']", span="1686-1686", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="DefaultSerializationBinder.cs"];
m1_766 [label="JToken nestedTorrentsArray = (JToken)torrentsArray[0]", span="1687-1687", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="DefaultSerializationBinder.cs"];
m1_762 [label="string jsonText = @''{\r\n'''''''':'''''''',\r\n''''label'''': [\r\n       [''''SomeName'''',6]\r\n],\r\n''''torrents'''': [\r\n       [''''192D99A5C943555CB7F00A852821CF6D6DB3008A'''',201,''''filename.avi'''',178311826,1000,178311826,72815250,408,1603,7,121430,''''NameOfLabelPrevioslyDefined'''',3,6,0,8,128954,-1,0],\r\n],\r\n''''torrentc'''': ''''1816000723''''\r\n}''", span="1672-1681", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="DefaultSerializationBinder.cs"];
m1_768 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", span="1670-1670", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="DefaultSerializationBinder.cs"];
m1_3360 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", span="717-717", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", file="DefaultSerializationBinder.cs"];
m1_168 [label="valueRequired != Required.Always", span="348-348", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.AddNullType(Newtonsoft.Json.Schema.JsonSchemaType, Newtonsoft.Json.Required)", file="DefaultSerializationBinder.cs"];
m1_171 [label="Exit Newtonsoft.Json.Schema.JsonSchemaGenerator.AddNullType(Newtonsoft.Json.Schema.JsonSchemaType, Newtonsoft.Json.Required)", span="346-346", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.AddNullType(Newtonsoft.Json.Schema.JsonSchemaType, Newtonsoft.Json.Required)", file="DefaultSerializationBinder.cs"];
m1_170 [label="return type;", span="351-351", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.AddNullType(Newtonsoft.Json.Schema.JsonSchemaType, Newtonsoft.Json.Required)", file="DefaultSerializationBinder.cs"];
m1_169 [label="return type | JsonSchemaType.Null;", span="349-349", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.AddNullType(Newtonsoft.Json.Schema.JsonSchemaType, Newtonsoft.Json.Required)", file="DefaultSerializationBinder.cs"];
m1_1871 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="DefaultSerializationBinder.cs"];
m1_2449 [label="Entry Newtonsoft.Json.Tests.Serialization.DecimalTest.DecimalTest(decimal)", span="8881-8881", cluster="Newtonsoft.Json.Tests.Serialization.DecimalTest.DecimalTest(decimal)", file="DefaultSerializationBinder.cs"];
m1_3860 [label="Value = val", span="8883-8883", cluster="Newtonsoft.Json.Tests.Serialization.DecimalTest.DecimalTest(decimal)", file="DefaultSerializationBinder.cs"];
m1_3861 [label="Exit Newtonsoft.Json.Tests.Serialization.DecimalTest.DecimalTest(decimal)", span="8881-8881", cluster="Newtonsoft.Json.Tests.Serialization.DecimalTest.DecimalTest(decimal)", file="DefaultSerializationBinder.cs"];
m1_3310 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", span="7483-7483", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="DefaultSerializationBinder.cs"];
m1_3312 [label="var l = JsonConvert.DeserializeObject<IReadOnlyList<BigInteger>>(json)", span="7489-7489", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="DefaultSerializationBinder.cs"];
m1_3314 [label="Assert.AreEqual(BigInteger.Parse(''9000000000000000000000000000000000000000000000000''), nineQuindecillion)", span="7494-7494", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="DefaultSerializationBinder.cs"];
m1_3311 [label="string json = @''[\r\n        9000000000000000000000000000000000000000000000000\r\n      ]''", span="7485-7487", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="DefaultSerializationBinder.cs"];
m1_3313 [label="BigInteger nineQuindecillion = l[0]", span="7491-7491", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="DefaultSerializationBinder.cs"];
m1_3315 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", span="7483-7483", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="DefaultSerializationBinder.cs"];
m1_1311 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", span="2741-2741", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="DefaultSerializationBinder.cs"];
m1_1315 [label="Assert.AreEqual(@''{''''$id'''':''''1'''',''''SubProp'''':''''my subprop'''',''''SuperProp'''':''''overrided superprop''''}'', json)", span="2751-2751", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="DefaultSerializationBinder.cs"];
m1_1318 [label="Assert.AreEqual(@''{''''$id'''':''''1'''',''''SubProp'''':''''my subprop'''',''''SuperProp'''':''''overrided superprop''''}'', newJson)", span="2762-2762", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="DefaultSerializationBinder.cs"];
m1_1314 [label="string json = JsonConvert.SerializeObject(i, new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects\r\n            })", span="2746-2749", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="DefaultSerializationBinder.cs"];
m1_1316 [label="SubKlass ii = JsonConvert.DeserializeObject<SubKlass>(json, new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects\r\n            })", span="2753-2756", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="DefaultSerializationBinder.cs"];
m1_1317 [label="string newJson = JsonConvert.SerializeObject(ii, new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects\r\n            })", span="2758-2761", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="DefaultSerializationBinder.cs"];
m1_1312 [label="SubKlass i = new SubKlass(''my subprop'')", span="2743-2743", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="DefaultSerializationBinder.cs"];
m1_1313 [label="i.SuperProp = ''overrided superprop''", span="2744-2744", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="DefaultSerializationBinder.cs"];
m1_1319 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", span="2741-2741", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="DefaultSerializationBinder.cs"];
m1_1922 [label="Entry System.Runtime.Serialization.SerializationInfo.GetInt64(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetInt64(string)", file="DefaultSerializationBinder.cs"];
m1_2973 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", span="6695-6695", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="DefaultSerializationBinder.cs"];
m1_2976 [label="Assert.AreEqual(DateTimeKind.Local, c.Value.Kind)", span="6701-6701", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="DefaultSerializationBinder.cs"];
m1_2975 [label="DateTimeWrapper c = JsonConvert.DeserializeObject<DateTimeWrapper>(jsonIsoText, new IsoDateTimeConverter())", span="6700-6700", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="DefaultSerializationBinder.cs"];
m1_2974 [label="string jsonIsoText =\r\n                @''{''''Value'''':''''2012-02-25T19:55:50.6095676+13:00''''}''", span="6697-6698", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="DefaultSerializationBinder.cs"];
m1_2977 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", span="6695-6695", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="DefaultSerializationBinder.cs"];
m1_3120 [label="Entry Newtonsoft.Json.Tests.TestObjects.RequiredObject.RequiredObject()", span="28-28", cluster="Newtonsoft.Json.Tests.TestObjects.RequiredObject.RequiredObject()", file="DefaultSerializationBinder.cs"];
m1_227 [label="Newtonsoft.Json.Schema.JsonSchemaGenerator.TypeSchema", span="", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="DefaultSerializationBinder.cs"];
m1_229 [label="System.Type", span="", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="DefaultSerializationBinder.cs"];
m1_231 [label="Assert.AreEqual(''yyyy'', serializer.DateFormatString)", span="596-596", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="DefaultSerializationBinder.cs"];
m1_233 [label="Assert.AreEqual(DateParseHandling.None, serializer.DateParseHandling)", span="599-599", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="DefaultSerializationBinder.cs"];
m1_235 [label="Assert.AreEqual(DateTimeZoneHandling.Utc, serializer.DateTimeZoneHandling)", span="602-602", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="DefaultSerializationBinder.cs"];
m1_237 [label="Assert.AreEqual(DefaultValueHandling.IgnoreAndPopulate, serializer.DefaultValueHandling)", span="605-605", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="DefaultSerializationBinder.cs"];
m1_239 [label="Assert.AreEqual(FloatFormatHandling.Symbol, serializer.FloatFormatHandling)", span="608-608", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="DefaultSerializationBinder.cs"];
m1_241 [label="Assert.AreEqual(FloatParseHandling.Decimal, serializer.FloatParseHandling)", span="611-611", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="DefaultSerializationBinder.cs"];
m1_243 [label="Assert.AreEqual(Formatting.Indented, serializer.Formatting)", span="614-614", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="DefaultSerializationBinder.cs"];
m1_245 [label="Assert.AreEqual(9001, serializer.MaxDepth)", span="617-617", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="DefaultSerializationBinder.cs"];
m1_247 [label="Assert.AreEqual(MissingMemberHandling.Error, serializer.MissingMemberHandling)", span="620-620", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="DefaultSerializationBinder.cs"];
m1_249 [label="Assert.AreEqual(NullValueHandling.Ignore, serializer.NullValueHandling)", span="623-623", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="DefaultSerializationBinder.cs"];
m1_251 [label="Assert.AreEqual(ObjectCreationHandling.Replace, serializer.ObjectCreationHandling)", span="626-626", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="DefaultSerializationBinder.cs"];
m1_253 [label="Assert.AreEqual(PreserveReferencesHandling.All, serializer.PreserveReferencesHandling)", span="629-629", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="DefaultSerializationBinder.cs"];
m1_255 [label="Assert.AreEqual(ReferenceLoopHandling.Ignore, serializer.ReferenceLoopHandling)", span="632-632", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="DefaultSerializationBinder.cs"];
m1_258 [label="Assert.AreEqual(referenceResolver, serializer.ReferenceResolver)", span="636-636", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="DefaultSerializationBinder.cs"];
m1_260 [label="Assert.AreEqual(StringEscapeHandling.EscapeNonAscii, serializer.StringEscapeHandling)", span="639-639", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="DefaultSerializationBinder.cs"];
m1_263 [label="Assert.AreEqual(traceWriter, serializer.TraceWriter)", span="643-643", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="DefaultSerializationBinder.cs"];
m1_265 [label="Assert.AreEqual(FormatterAssemblyStyle.Full, serializer.TypeNameAssemblyFormat)", span="647-647", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="DefaultSerializationBinder.cs"];
m1_267 [label="Assert.AreEqual(TypeNameHandling.All, serializer.TypeNameHandling)", span="651-651", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="DefaultSerializationBinder.cs"];
m1_224 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", span="164-164", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", file="DefaultSerializationBinder.cs"];
m1_226 [label="Entry System.Type.GetTypeCode(System.Type)", span="0-0", cluster="System.Type.GetTypeCode(System.Type)", file="DefaultSerializationBinder.cs"];
m1_228 [label="Newtonsoft.Json.Schema.JsonSchemaGenerator", span="", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="DefaultSerializationBinder.cs"];
m1_230 [label="serializer.DateFormatString = ''yyyy''", span="595-595", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="DefaultSerializationBinder.cs"];
m1_232 [label="serializer.DateParseHandling = DateParseHandling.None", span="598-598", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="DefaultSerializationBinder.cs"];
m1_234 [label="serializer.DateTimeZoneHandling = DateTimeZoneHandling.Utc", span="601-601", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="DefaultSerializationBinder.cs"];
m1_236 [label="serializer.DefaultValueHandling = DefaultValueHandling.IgnoreAndPopulate", span="604-604", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="DefaultSerializationBinder.cs"];
m1_238 [label="serializer.FloatFormatHandling = FloatFormatHandling.Symbol", span="607-607", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="DefaultSerializationBinder.cs"];
m1_240 [label="serializer.FloatParseHandling = FloatParseHandling.Decimal", span="610-610", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="DefaultSerializationBinder.cs"];
m1_242 [label="serializer.Formatting = Formatting.Indented", span="613-613", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="DefaultSerializationBinder.cs"];
m1_244 [label="serializer.MaxDepth = 9001", span="616-616", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="DefaultSerializationBinder.cs"];
m1_246 [label="serializer.MissingMemberHandling = MissingMemberHandling.Error", span="619-619", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="DefaultSerializationBinder.cs"];
m1_248 [label="serializer.NullValueHandling = NullValueHandling.Ignore", span="622-622", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="DefaultSerializationBinder.cs"];
m1_250 [label="serializer.ObjectCreationHandling = ObjectCreationHandling.Replace", span="625-625", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="DefaultSerializationBinder.cs"];
m1_252 [label="serializer.PreserveReferencesHandling = PreserveReferencesHandling.All", span="628-628", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="DefaultSerializationBinder.cs"];
m1_254 [label="serializer.ReferenceLoopHandling = ReferenceLoopHandling.Ignore", span="631-631", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="DefaultSerializationBinder.cs"];
m1_256 [label="IdReferenceResolver referenceResolver = new IdReferenceResolver()", span="634-634", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="DefaultSerializationBinder.cs"];
m1_257 [label="serializer.ReferenceResolver = referenceResolver", span="635-635", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="DefaultSerializationBinder.cs"];
m1_259 [label="serializer.StringEscapeHandling = StringEscapeHandling.EscapeNonAscii", span="638-638", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="DefaultSerializationBinder.cs"];
m1_261 [label="MemoryTraceWriter traceWriter = new MemoryTraceWriter()", span="641-641", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="DefaultSerializationBinder.cs"];
m1_262 [label="serializer.TraceWriter = traceWriter", span="642-642", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="DefaultSerializationBinder.cs"];
m1_264 [label="serializer.TypeNameAssemblyFormat = FormatterAssemblyStyle.Full", span="646-646", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="DefaultSerializationBinder.cs"];
m1_266 [label="serializer.TypeNameHandling = TypeNameHandling.All", span="650-650", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="DefaultSerializationBinder.cs"];
m1_268 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", span="563-563", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="DefaultSerializationBinder.cs"];
m1_2433 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", span="5441-5441", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="DefaultSerializationBinder.cs"];
m1_2436 [label="Response deserializedResponse = JsonConvert.DeserializeObject<Response>(json)", span="5451-5451", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="DefaultSerializationBinder.cs"];
m1_2437 [label="Assert.AreEqual(''Success'', deserializedResponse.Name)", span="5453-5453", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="DefaultSerializationBinder.cs"];
m1_2435 [label="string json = JsonConvert.SerializeObject(response, Formatting.Indented)", span="5449-5449", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="DefaultSerializationBinder.cs"];
m1_2438 [label="Assert.IsTrue(deserializedResponse.Data.DeepEquals(response.Data))", span="5454-5454", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="DefaultSerializationBinder.cs"];
m1_2434 [label="Response response = new Response\r\n            {\r\n                Name = ''Success'',\r\n                Data = new JObject(new JProperty(''First'', ''Value1''), new JProperty(''Second'', ''Value2''))\r\n            }", span="5443-5447", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="DefaultSerializationBinder.cs"];
m1_2439 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", span="5441-5441", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="DefaultSerializationBinder.cs"];
m1_2480 [label="Entry Newtonsoft.Json.Tests.Serialization.ComplexItem.ComplexItem()", span="8984-8984", cluster="Newtonsoft.Json.Tests.Serialization.ComplexItem.ComplexItem()", file="DefaultSerializationBinder.cs"];
m1_424 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, object)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, object)", file="DefaultSerializationBinder.cs"];
m1_2406 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="5358-5358", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DefaultSerializationBinder.cs"];
m1_2407 [label="_name = info.GetString(''Name'')", span="5360-5360", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DefaultSerializationBinder.cs"];
m1_2408 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="5358-5358", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DefaultSerializationBinder.cs"];
m1_1678 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", span="3526-3526", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="DefaultSerializationBinder.cs"];
m1_1680 [label="JsonConvert.DeserializeObject<Dictionary<Person, int>>(json)", span="3536-3536", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="DefaultSerializationBinder.cs"];
m1_1679 [label="string json =\r\n                    @''{\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Person'''': 1,\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Person'''': 2\r\n}''", span="3530-3534", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="DefaultSerializationBinder.cs"];
m1_1681 [label="Assert.Fail()", span="3537-3537", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="DefaultSerializationBinder.cs"];
m1_1682 [label=JsonSerializationException, span="3539-3539", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="DefaultSerializationBinder.cs"];
m1_1683 [label="Assert.IsTrue(ex.Message.StartsWith(''Could not convert string 'Newtonsoft.Json.Tests.TestObjects.Person' to dictionary key type 'Newtonsoft.Json.Tests.TestObjects.Person'. Create a TypeConverter to convert from the string to the key type object. Path '['Newtonsoft.Json.Tests.TestObjects.Person']'''))", span="3541-3541", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="DefaultSerializationBinder.cs"];
m1_1684 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", span="3526-3526", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="DefaultSerializationBinder.cs"];
m1_3373 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", span="7695-7695", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="DefaultSerializationBinder.cs"];
m1_3374 [label="IList<object> dates = new List<object>\r\n            {\r\n                new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc),\r\n                new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1))\r\n            }", span="7697-7701", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="DefaultSerializationBinder.cs"];
m1_3376 [label="StringAssert.AreEqual(@''[\r\n  ''''2000-12-12T12:12:12.000Z'''',\r\n  ''''2000-12-12T12:12:12.000+01:00''''\r\n]'', json)", span="7708-7711", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="DefaultSerializationBinder.cs"];
m1_3375 [label="string json = JsonConvert.SerializeObject(dates, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateFormatString = @''yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffK''\r\n            })", span="7703-7706", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="DefaultSerializationBinder.cs"];
m1_3377 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", span="7695-7695", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="DefaultSerializationBinder.cs"];
m1_2454 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", span="5475-5475", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="DefaultSerializationBinder.cs"];
m1_2455 [label="PublicConstructorOverridenByJsonConstructor c = JsonConvert.DeserializeObject<PublicConstructorOverridenByJsonConstructor>(''{Value:'value!'}'')", span="5477-5477", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="DefaultSerializationBinder.cs"];
m1_2456 [label="Assert.AreEqual(''Public Paramatized'', c.Constructor)", span="5478-5478", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="DefaultSerializationBinder.cs"];
m1_2457 [label="Assert.AreEqual(''value!'', c.Value)", span="5479-5479", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="DefaultSerializationBinder.cs"];
m1_2458 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", span="5475-5475", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="DefaultSerializationBinder.cs"];
m1_3596 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDecimal(System.IFormatProvider)", span="8257-8257", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDecimal(System.IFormatProvider)", file="DefaultSerializationBinder.cs"];
m1_3597 [label="throw new InvalidCastException();", span="8259-8259", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDecimal(System.IFormatProvider)", file="DefaultSerializationBinder.cs"];
m1_3598 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDecimal(System.IFormatProvider)", span="8257-8257", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDecimal(System.IFormatProvider)", file="DefaultSerializationBinder.cs"];
m1_3779 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInvalidOctalRootError()", span="8667-8667", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInvalidOctalRootError()", file="DefaultSerializationBinder.cs"];
m1_3780 [label="ExceptionAssert.Throws<JsonReaderException>(() => JsonConvert.DeserializeObject<string>(''020474068''), ''Input string '020474068' is not a valid number. Path '', line 1, position 9.'')", span="8669-8669", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInvalidOctalRootError()", file="DefaultSerializationBinder.cs"];
m1_3781 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInvalidOctalRootError()", span="8667-8667", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInvalidOctalRootError()", file="DefaultSerializationBinder.cs"];
m1_789 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", span="1716-1716", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="DefaultSerializationBinder.cs"];
m1_793 [label="List<string> jsonNetResult = JsonConvert.DeserializeObject<List<string>>(json)", span="1723-1723", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="DefaultSerializationBinder.cs"];
m1_795 [label="Assert.AreEqual(dataContractResult[0], jsonNetResult[0])", span="1726-1726", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="DefaultSerializationBinder.cs"];
m1_794 [label="Assert.AreEqual(1, jsonNetResult.Count)", span="1725-1725", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="DefaultSerializationBinder.cs"];
m1_790 [label="string json = @''[''''PRE\u003cPOST'''']''", span="1718-1718", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="DefaultSerializationBinder.cs"];
m1_792 [label="List<string> dataContractResult = (List<string>)s.ReadObject(new MemoryStream(Encoding.UTF8.GetBytes(json)))", span="1721-1721", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="DefaultSerializationBinder.cs"];
m1_791 [label="DataContractJsonSerializer s = new DataContractJsonSerializer(typeof(List<string>))", span="1720-1720", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="DefaultSerializationBinder.cs"];
m1_796 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", span="1716-1716", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="DefaultSerializationBinder.cs"];
m1_3569 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.GetTypeCode()", span="8211-8211", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.GetTypeCode()", file="DefaultSerializationBinder.cs"];
m1_3570 [label="return TypeCode.Object;", span="8213-8213", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.GetTypeCode()", file="DefaultSerializationBinder.cs"];
m1_3571 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.GetTypeCode()", span="8211-8211", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.GetTypeCode()", file="DefaultSerializationBinder.cs"];
m1_884 [label="Entry object.Object()", span="0-0", cluster="object.Object()", file="DefaultSerializationBinder.cs"];
m1_1924 [label="Entry System.Runtime.Serialization.SerializationInfo.GetSingle(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetSingle(string)", file="DefaultSerializationBinder.cs"];
m1_2558 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", span="5790-5790", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="DefaultSerializationBinder.cs"];
m1_2559 [label="ImplementInterfaceObject cc = new ImplementInterfaceObject\r\n            {\r\n                InterfaceMember = new DateTime(2010, 12, 31, 0, 0, 0, DateTimeKind.Utc),\r\n                NewMember = ''NewMember!''\r\n            }", span="5792-5796", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="DefaultSerializationBinder.cs"];
m1_2560 [label="string result = JsonConvert.SerializeObject(cc, Formatting.Indented)", span="5798-5798", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="DefaultSerializationBinder.cs"];
m1_2561 [label="StringAssert.AreEqual(@''{\r\n  ''''virtualMember'''': ''''2010-12-31T00:00:00Z'''',\r\n  ''''newMemberWithProperty'''': null\r\n}'', result)", span="5800-5803", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="DefaultSerializationBinder.cs"];
m1_2562 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", span="5790-5790", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="DefaultSerializationBinder.cs"];
m1_2754 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", span="6248-6248", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="DefaultSerializationBinder.cs"];
m1_2762 [label="Assert.AreEqual(-1, c2.x)", span="6279-6279", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="DefaultSerializationBinder.cs"];
m1_2763 [label="Assert.AreEqual(-2, StaticTestClass.y)", span="6280-6280", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="DefaultSerializationBinder.cs"];
m1_2764 [label="Assert.AreEqual(-3, StaticTestClass.z)", span="6281-6281", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="DefaultSerializationBinder.cs"];
m1_2761 [label="StaticTestClass c2 = JsonConvert.DeserializeObject<StaticTestClass>(@''{\r\n  ''''x'''': -1,\r\n  ''''y'''': -2,\r\n  ''''z'''': -3\r\n}'',\r\n                new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = contractResolver\r\n                })", span="6269-6277", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="DefaultSerializationBinder.cs"];
m1_2755 [label="DefaultContractResolver contractResolver = new DefaultContractResolver()", span="6250-6250", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="DefaultSerializationBinder.cs"];
m1_2760 [label="StringAssert.AreEqual(@''{\r\n  ''''x'''': 2147483647,\r\n  ''''y'''': 2,\r\n  ''''z'''': 3\r\n}'', json)", span="6263-6267", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="DefaultSerializationBinder.cs"];
m1_2759 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = contractResolver\r\n            })", span="6258-6261", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="DefaultSerializationBinder.cs"];
m1_2756 [label="StaticTestClass c = new StaticTestClass\r\n            {\r\n                x = int.MaxValue\r\n            }", span="6252-6255", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="DefaultSerializationBinder.cs"];
m1_2758 [label="StaticTestClass.z = 3", span="6257-6257", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="DefaultSerializationBinder.cs"];
m1_2757 [label="StaticTestClass.y = 2", span="6256-6256", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="DefaultSerializationBinder.cs"];
m1_2765 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", span="6248-6248", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="DefaultSerializationBinder.cs"];
m1_117 [label="contract is JsonPrimitiveContract", span="293-293", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.GenerateInternal(System.Type, Newtonsoft.Json.Required, bool)", file="DefaultSerializationBinder.cs"];
m1_59 [label="FaqItem c2 = JsonConvert.DeserializeObject<FaqItem>(json)", span="242-242", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="DefaultSerializationBinder.cs"];
m1_60 [label="Assert.AreEqual(1, c2.FaqId)", span="244-244", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="DefaultSerializationBinder.cs"];
m1_69 [label="FaqItemProxy c = new FaqItemProxy()", span="251-251", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="DefaultSerializationBinder.cs"];
m1_61 [label="Assert.AreEqual(1, c2.Sections.Count)", span="245-245", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="DefaultSerializationBinder.cs"];
m1_62 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", span="223-223", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="DefaultSerializationBinder.cs"];
m1_64 [label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="DefaultSerializationBinder.cs"];
m1_68 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", span="249-249", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="DefaultSerializationBinder.cs"];
m1_70 [label="c.FaqId = 1", span="252-252", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="DefaultSerializationBinder.cs"];
m1_71 [label="c.Sections.Add(new FaqSection())", span="253-253", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="DefaultSerializationBinder.cs"];
m1_160 [label="var input = new ResponseWithNewGenericPropertyOverride<int>()\r\n            {\r\n                Message = ''Trying out integer as type parameter'',\r\n                Data = 25,\r\n                Result = ''This should be fine''\r\n            }", span="479-484", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="DefaultSerializationBinder.cs"];
m1_580 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", span="1170-1170", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", file="DefaultSerializationBinder.cs"];
m1_583 [label="Assert.AreEqual(@''{''''NewMember'''':''''NewMember!'''',''''virtualMember'''':''''VirtualMember!'''',''''nonVirtualMember'''':''''NonVirtualMember!''''}'', result)", span="1180-1180", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", file="DefaultSerializationBinder.cs"];
m1_582 [label="string result = JsonConvert.SerializeObject(cc)", span="1179-1179", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", file="DefaultSerializationBinder.cs"];
m1_581 [label="var cc = new ChildDataContractWithHidden\r\n            {\r\n                VirtualMember = ''VirtualMember!'',\r\n                NonVirtualMember = ''NonVirtualMember!'',\r\n                NewMember = ''NewMember!''\r\n            }", span="1172-1177", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", file="DefaultSerializationBinder.cs"];
m1_584 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", span="1170-1170", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", file="DefaultSerializationBinder.cs"];
m1_692 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", span="1482-1482", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="DefaultSerializationBinder.cs"];
m1_704 [label="Assert.AreEqual(dateValue, deserializedDate)", span="1502-1502", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="DefaultSerializationBinder.cs"];
m1_693 [label="DateTime dateValue = new DateTime(2010, 3, 30)", span="1484-1484", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="DefaultSerializationBinder.cs"];
m1_703 [label="DateTime deserializedDate = (DateTime)deserializedDictionary[''date'']", span="1500-1500", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="DefaultSerializationBinder.cs"];
m1_696 [label="string jsonText = JsonConvert.SerializeObject(testDictionary)", span="1488-1488", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="DefaultSerializationBinder.cs"];
m1_694 [label="Dictionary<string, object> testDictionary = new Dictionary<string, object>()", span="1485-1485", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="DefaultSerializationBinder.cs"];
m1_695 [label="testDictionary[''date''] = dateValue", span="1486-1486", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="DefaultSerializationBinder.cs"];
m1_702 [label="Dictionary<string, object> deserializedDictionary = (Dictionary<string, object>)JsonConvert.DeserializeObject(jsonText, typeof(Dictionary<string, object>))", span="1499-1499", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="DefaultSerializationBinder.cs"];
m1_697 [label="MemoryStream ms = new MemoryStream()", span="1491-1491", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="DefaultSerializationBinder.cs"];
m1_699 [label="serializer.WriteObject(ms, testDictionary)", span="1493-1493", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="DefaultSerializationBinder.cs"];
m1_701 [label="string output = Encoding.UTF8.GetString(data, 0, data.Length)", span="1496-1496", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="DefaultSerializationBinder.cs"];
m1_698 [label="DataContractJsonSerializer serializer = new DataContractJsonSerializer(typeof(Dictionary<string, object>))", span="1492-1492", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="DefaultSerializationBinder.cs"];
m1_700 [label="byte[] data = ms.ToArray()", span="1495-1495", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="DefaultSerializationBinder.cs"];
m1_705 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", span="1482-1482", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="DefaultSerializationBinder.cs"];
m1_1857 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.GetEnumerator()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.GetEnumerator()", file="DefaultSerializationBinder.cs"];
m1_721 [label="Entry Newtonsoft.Json.Tests.CustomAssert.Contains(System.Collections.IList, object)", span="307-307", cluster="Newtonsoft.Json.Tests.CustomAssert.Contains(System.Collections.IList, object)", file="DefaultSerializationBinder.cs"];
m1_720 [label="Entry Unk.AreNotSame", span="", cluster="Unk.AreNotSame", file="DefaultSerializationBinder.cs"];
m1_1876 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", span="4155-4155", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", file="DefaultSerializationBinder.cs"];
m1_1877 [label="return ((IEnumerable)_innerDictionary).GetEnumerator();", span="4157-4157", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", file="DefaultSerializationBinder.cs"];
m1_1878 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", span="4155-4155", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", file="DefaultSerializationBinder.cs"];
m1_3746 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", span="8594-8594", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="DefaultSerializationBinder.cs"];
m1_3752 [label="Assert.AreEqual(''Base'', clonedObject.BaseProperty)", span="8605-8605", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="DefaultSerializationBinder.cs"];
m1_3753 [label="Assert.AreEqual(''Derived'', clonedObject.DerivedProperty)", span="8606-8606", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="DefaultSerializationBinder.cs"];
m1_3751 [label="var clonedObject = JsonConvert.DeserializeObject<DerivedConstructorType>(jsonCopy, serializerSettings)", span="8603-8603", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="DefaultSerializationBinder.cs"];
m1_3748 [label="var serializerSettings = new JsonSerializerSettings()", span="8598-8598", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="DefaultSerializationBinder.cs"];
m1_3749 [label="var jsonCopy = JsonConvert.SerializeObject(original, serializerSettings)", span="8599-8599", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="DefaultSerializationBinder.cs"];
m1_3750 [label="Console.WriteLine(original)", span="8601-8601", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="DefaultSerializationBinder.cs"];
m1_3747 [label="var original = new DerivedConstructorType(''Base'', ''Derived'')", span="8596-8596", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="DefaultSerializationBinder.cs"];
m1_3754 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", span="8594-8594", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="DefaultSerializationBinder.cs"];
m1_463 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", span="570-570", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", file="DefaultSerializationBinder.cs"];
m1_1399 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", span="2975-2975", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="DefaultSerializationBinder.cs"];
m1_1402 [label="Assert.AreEqual(''Name!'', c.Name)", span="2999-2999", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="DefaultSerializationBinder.cs"];
m1_1403 [label="Assert.AreEqual(3, c.Dictionary.Count)", span="3000-3000", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="DefaultSerializationBinder.cs"];
m1_1404 [label="Assert.AreEqual(11, c.Dictionary[''Item''])", span="3001-3001", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="DefaultSerializationBinder.cs"];
m1_1405 [label="Assert.AreEqual(1, c.Dictionary[''existing''])", span="3002-3002", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="DefaultSerializationBinder.cs"];
m1_1406 [label="Assert.AreEqual(4, c.Collection.Count)", span="3003-3003", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="DefaultSerializationBinder.cs"];
m1_1407 [label="Assert.AreEqual(1, c.Collection.ElementAt(0))", span="3004-3004", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="DefaultSerializationBinder.cs"];
m1_1408 [label="Assert.AreEqual(999, c.Collection.ElementAt(3))", span="3005-3005", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="DefaultSerializationBinder.cs"];
m1_1409 [label="Assert.AreEqual(''EmployeeName!'', c.Employee.Name)", span="3006-3006", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="DefaultSerializationBinder.cs"];
m1_1410 [label="Assert.AreEqual(''ManagerName!'', c.Employee.Manager.Name)", span="3007-3007", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="DefaultSerializationBinder.cs"];
m1_1401 [label="DictionaryInterfaceClass c = JsonConvert.DeserializeObject<DictionaryInterfaceClass>(json,\r\n                new JsonSerializerSettings { ObjectCreationHandling = ObjectCreationHandling.Reuse })", span="2996-2997", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="DefaultSerializationBinder.cs"];
m1_1411 [label="Assert.IsNotNull(c.Random)", span="3008-3008", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="DefaultSerializationBinder.cs"];
m1_1400 [label="string json = @''{\r\n  ''''Random'''': {\r\n    ''''blah'''': 1\r\n  },\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Dictionary'''': {\r\n    ''''Item'''': 11,\r\n    ''''Item1'''': 12\r\n  },\r\n  ''''Collection'''': [\r\n    999\r\n  ],\r\n  ''''Employee'''': {\r\n    ''''Manager'''': {\r\n      ''''Name'''': ''''ManagerName!''''\r\n    }\r\n  }\r\n}''", span="2977-2994", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="DefaultSerializationBinder.cs"];
m1_1412 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", span="2975-2975", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="DefaultSerializationBinder.cs"];
m1_439 [label="Entry System.Runtime.Serialization.SerializationInfo.GetInt32(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetInt32(string)", file="DefaultSerializationBinder.cs"];
m1_40 [label="string json = JsonConvert.SerializeObject(c)", span="167-167", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="DefaultSerializationBinder.cs"];
m1_72 [label="c.IsProxy = true", span="254-254", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="DefaultSerializationBinder.cs"];
m1_73 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="256-256", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="DefaultSerializationBinder.cs"];
m1_74 [label="Console.WriteLine(json)", span="258-258", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="DefaultSerializationBinder.cs"];
m1_78 [label="Assert.AreEqual(1, c2.Sections.Count)", span="273-273", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="DefaultSerializationBinder.cs"];
m1_80 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItemProxy.FaqItemProxy()", span="211-211", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItemProxy.FaqItemProxy()", file="DefaultSerializationBinder.cs"];
m1_96 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="802-802", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="DefaultSerializationBinder.cs"];
m1_118 [label="Entry System.IO.StringReader.StringReader(string)", span="0-0", cluster="System.IO.StringReader.StringReader(string)", file="DefaultSerializationBinder.cs"];
m1_119 [label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="433-433", cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="DefaultSerializationBinder.cs"];
m1_130 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", span="400-400", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", file="DefaultSerializationBinder.cs"];
m1_132 [label="var childClass = JsonConvert.DeserializeObject<ChildClassVirtual>(@''{''''IsTransient'''':true}'')", span="404-404", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", file="DefaultSerializationBinder.cs"];
m1_133 [label="Assert.AreEqual(true, childClass.IsTransient)", span="405-405", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", file="DefaultSerializationBinder.cs"];
m1_134 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", span="400-400", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", file="DefaultSerializationBinder.cs"];
m1_136 [label="JsonSchemaType schemaType = (!ReflectionUtils.IsNullable(contract.UnderlyingType))\r\n                                      ? JsonSchemaType.String\r\n                                      : AddNullType(JsonSchemaType.String, valueRequired)", span="328-330", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.GenerateInternal(System.Type, Newtonsoft.Json.Required, bool)", file="DefaultSerializationBinder.cs"];
m1_75 [label="StringAssert.AreEqual(@''{\r\n  ''''IsProxy'''': true,\r\n  ''''FaqId'''': 1,\r\n  ''''Name'''': null,\r\n  ''''IsDeleted'''': false,\r\n  ''''FullSectionsProp'''': [\r\n    {}\r\n  ]\r\n}'', json)", span="260-268", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="DefaultSerializationBinder.cs"];
m1_76 [label="FaqItemProxy c2 = JsonConvert.DeserializeObject<FaqItemProxy>(json)", span="270-270", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="DefaultSerializationBinder.cs"];
m1_77 [label="Assert.AreEqual(1, c2.FaqId)", span="272-272", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="DefaultSerializationBinder.cs"];
m1_79 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", span="249-249", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="DefaultSerializationBinder.cs"];
m1_131 [label="Assert.AreEqual(@''{''''IsTransient'''':true}'', JsonConvert.SerializeObject(new ChildClassVirtual { IsTransient = true }))", span="402-402", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", file="DefaultSerializationBinder.cs"];
m1_135 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildClassVirtual.ChildClassVirtual()", span="394-394", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildClassVirtual.ChildClassVirtual()", file="DefaultSerializationBinder.cs"];
m1_138 [label="contract is JsonLinqContract", span="334-334", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.GenerateInternal(System.Type, Newtonsoft.Json.Required, bool)", file="DefaultSerializationBinder.cs"];
m1_140 [label="throw new Exception(''Unexpected contract type: {0}''.FormatWith(CultureInfo.InvariantCulture, contract));", span="340-340", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.GenerateInternal(System.Type, Newtonsoft.Json.Required, bool)", file="DefaultSerializationBinder.cs"];
m1_123 [label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", file="DefaultSerializationBinder.cs"];
m1_137 [label="CurrentSchema.Type = schemaType", span="332-332", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.GenerateInternal(System.Type, Newtonsoft.Json.Required, bool)", file="DefaultSerializationBinder.cs"];
m1_139 [label="CurrentSchema.Type = JsonSchemaType.Any", span="336-336", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.GenerateInternal(System.Type, Newtonsoft.Json.Required, bool)", file="DefaultSerializationBinder.cs"];
m1_1114 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", span="2290-2290", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="DefaultSerializationBinder.cs"];
m1_1118 [label="Assert.AreEqual(@''{''''first_name'''':''''FirstNameValue'''',''''RawContent'''':[1,2,3,4,5],''''last_name'''':''''LastNameValue''''}'', json)", span="2302-2302", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="DefaultSerializationBinder.cs"];
m1_1117 [label="json = JsonConvert.SerializeObject(personRaw)", span="2301-2301", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="DefaultSerializationBinder.cs"];
m1_1115 [label="PersonRaw personRaw = new PersonRaw\r\n            {\r\n                FirstName = ''FirstNameValue'',\r\n                RawContent = new JRaw(''[1,2,3,4,5]''),\r\n                LastName = ''LastNameValue''\r\n            }", span="2292-2297", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="DefaultSerializationBinder.cs"];
m1_1116 [label="string json", span="2299-2299", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="DefaultSerializationBinder.cs"];
m1_1119 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", span="2290-2290", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="DefaultSerializationBinder.cs"];
m1_812 [label="Entry Unk.>", span="", cluster="Unk.>", file="DefaultSerializationBinder.cs"];
m1_1948 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, bool)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, bool)", file="DefaultSerializationBinder.cs"];
m1_618 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", span="1351-1351", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="DefaultSerializationBinder.cs"];
m1_625 [label="StringAssert.AreEqual(@''{\r\n  ''''JustAProperty'''': ''''JustAProperty2!'''',\r\n  ''''Virtual'''': ''''Virtual2!'''',\r\n  ''''VirtualWithDataMemberBase'''': ''''VirtualWithDataMember2!'''',\r\n  ''''VirtualWithDataMemberSub'''': ''''VirtualWithDataMember!'''',\r\n  ''''WithDataMemberBase'''': ''''WithDataMember2!''''\r\n}'', json)", span="1368-1374", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="DefaultSerializationBinder.cs"];
m1_624 [label="string json = AssertSerializeDeserializeEqual(baseWith)", span="1366-1366", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="DefaultSerializationBinder.cs"];
m1_619 [label="BaseWithContract baseWith = new SubWithContractVirtualProperties\r\n            {\r\n                JustAProperty = ''JustAProperty!'',\r\n                Virtual = ''Virtual!'',\r\n                VirtualWithDataMember = ''VirtualWithDataMember!'',\r\n                WithDataMember = ''WithDataMember!''\r\n            }", span="1353-1359", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="DefaultSerializationBinder.cs"];
m1_623 [label="baseWith.WithDataMember = ''WithDataMember2!''", span="1364-1364", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="DefaultSerializationBinder.cs"];
m1_620 [label="baseWith.JustAProperty = ''JustAProperty2!''", span="1361-1361", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="DefaultSerializationBinder.cs"];
m1_621 [label="baseWith.Virtual = ''Virtual2!''", span="1362-1362", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="DefaultSerializationBinder.cs"];
m1_622 [label="baseWith.VirtualWithDataMember = ''VirtualWithDataMember2!''", span="1363-1363", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="DefaultSerializationBinder.cs"];
m1_626 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", span="1351-1351", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="DefaultSerializationBinder.cs"];
m1_1850 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", span="4117-4117", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", file="DefaultSerializationBinder.cs"];
m1_1851 [label="((IDictionary<string, T>)_innerDictionary).CopyTo(array, arrayIndex)", span="4119-4119", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", file="DefaultSerializationBinder.cs"];
m1_1852 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", span="4117-4117", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", file="DefaultSerializationBinder.cs"];
m1_3823 [label="Entry Newtonsoft.Json.Linq.JToken.ToObject<T>()", span="1695-1695", cluster="Newtonsoft.Json.Linq.JToken.ToObject<T>()", file="DefaultSerializationBinder.cs"];
m1_1331 [label="Entry Newtonsoft.Json.Tests.TestObjects.JsonPropertyWithHandlingValues.JsonPropertyWithHandlingValues()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.JsonPropertyWithHandlingValues.JsonPropertyWithHandlingValues()", file="DefaultSerializationBinder.cs"];
m1_3215 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", span="7242-7242", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="DefaultSerializationBinder.cs"];
m1_3217 [label="string json = JsonConvert.SerializeObject(dataContract, Formatting.Indented)", span="7258-7258", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="DefaultSerializationBinder.cs"];
m1_3220 [label="json = JsonConvert.SerializeObject(poco, Formatting.Indented)", span="7272-7272", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="DefaultSerializationBinder.cs"];
m1_3218 [label="StringAssert.AreEqual(@''{\r\n  ''''DataMemberAttribute'''': ''''Value!'''',\r\n  ''''IgnoreDataMemberAndDataMemberAttribute'''': ''''Value!''''\r\n}'', json)", span="7259-7262", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="DefaultSerializationBinder.cs"];
m1_3221 [label="StringAssert.AreEqual(@''{\r\n  ''''NoAttribute'''': ''''Value!'''',\r\n  ''''DataMemberAttribute'''': ''''Value!''''\r\n}'', json)", span="7273-7276", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="DefaultSerializationBinder.cs"];
m1_3216 [label="DataContractSerializationAttributesClass dataContract = new DataContractSerializationAttributesClass\r\n            {\r\n                NoAttribute = ''Value!'',\r\n                IgnoreDataMemberAttribute = ''Value!'',\r\n                DataMemberAttribute = ''Value!'',\r\n                IgnoreDataMemberAndDataMemberAttribute = ''Value!''\r\n            }", span="7244-7250", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="DefaultSerializationBinder.cs"];
m1_3219 [label="PocoDataContractSerializationAttributesClass poco = new PocoDataContractSerializationAttributesClass\r\n            {\r\n                NoAttribute = ''Value!'',\r\n                IgnoreDataMemberAttribute = ''Value!'',\r\n                DataMemberAttribute = ''Value!'',\r\n                IgnoreDataMemberAndDataMemberAttribute = ''Value!''\r\n            }", span="7264-7270", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="DefaultSerializationBinder.cs"];
m1_3222 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", span="7242-7242", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="DefaultSerializationBinder.cs"];
m1_3848 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="8839-8839", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DefaultSerializationBinder.cs"];
m1_3849 [label="var encodingName = serializer.Deserialize<string>(reader)", span="8841-8841", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DefaultSerializationBinder.cs"];
m1_3852 [label="return Encoding.GetEncoding(encodingName);", span="8845-8845", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DefaultSerializationBinder.cs"];
m1_3851 [label="return null;", span="8843-8843", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DefaultSerializationBinder.cs"];
m1_3850 [label="encodingName == null", span="8842-8842", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DefaultSerializationBinder.cs"];
m1_3853 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="8839-8839", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DefaultSerializationBinder.cs"];
m1_608 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", span="1321-1321", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="DefaultSerializationBinder.cs"];
m1_615 [label="StringAssert.AreEqual(@''{\r\n  ''''JustAProperty'''': ''''JustAProperty2!'''',\r\n  ''''JustAProperty2'''': ''''JustAProperty!'''',\r\n  ''''Virtual'''': ''''Virtual2!'''',\r\n  ''''Virtual2'''': ''''Virtual!'''',\r\n  ''''VirtualWithDataMemberBase'''': ''''VirtualWithDataMember2!'''',\r\n  ''''VirtualWithDataMemberSub'''': ''''VirtualWithDataMember!'''',\r\n  ''''WithDataMemberBase'''': ''''WithDataMember2!'''',\r\n  ''''WithDataMemberSub'''': ''''WithDataMember!''''\r\n}'', json)", span="1338-1347", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="DefaultSerializationBinder.cs"];
m1_614 [label="string json = AssertSerializeDeserializeEqual(baseWith)", span="1336-1336", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="DefaultSerializationBinder.cs"];
m1_609 [label="BaseWithContract baseWith = new SubWithContractNewProperties\r\n            {\r\n                JustAProperty = ''JustAProperty!'',\r\n                Virtual = ''Virtual!'',\r\n                VirtualWithDataMember = ''VirtualWithDataMember!'',\r\n                WithDataMember = ''WithDataMember!''\r\n            }", span="1323-1329", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="DefaultSerializationBinder.cs"];
m1_613 [label="baseWith.WithDataMember = ''WithDataMember2!''", span="1334-1334", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="DefaultSerializationBinder.cs"];
m1_610 [label="baseWith.JustAProperty = ''JustAProperty2!''", span="1331-1331", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="DefaultSerializationBinder.cs"];
m1_611 [label="baseWith.Virtual = ''Virtual2!''", span="1332-1332", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="DefaultSerializationBinder.cs"];
m1_612 [label="baseWith.VirtualWithDataMember = ''VirtualWithDataMember2!''", span="1333-1333", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="DefaultSerializationBinder.cs"];
m1_616 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", span="1321-1321", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="DefaultSerializationBinder.cs"];
m1_2298 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", span="5121-5121", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", file="DefaultSerializationBinder.cs"];
m1_2299 [label="NullableDateTimeTestClass d = JsonConvert.DeserializeObject<NullableDateTimeTestClass>(''{\''DateTimeOffsetField\'':\''2000-01-01T00:00:00+06:00\''}'')", span="5123-5123", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", file="DefaultSerializationBinder.cs"];
m1_2300 [label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6)), d.DateTimeOffsetField)", span="5124-5124", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", file="DefaultSerializationBinder.cs"];
m1_2301 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", span="5121-5121", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", file="DefaultSerializationBinder.cs"];
m1_2504 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", span="5595-5595", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="DefaultSerializationBinder.cs"];
m1_2506 [label="CommentTestClass commentTestClass = JsonConvert.DeserializeObject<CommentTestClass>(json)", span="5608-5608", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="DefaultSerializationBinder.cs"];
m1_2507 [label="Assert.AreEqual(true, commentTestClass.Indexed)", span="5610-5610", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="DefaultSerializationBinder.cs"];
m1_2508 [label="Assert.AreEqual(1939, commentTestClass.StartYear)", span="5611-5611", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="DefaultSerializationBinder.cs"];
m1_2509 [label="Assert.AreEqual(63, commentTestClass.Values.Count)", span="5612-5612", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="DefaultSerializationBinder.cs"];
m1_2505 [label="string json = @''{''''indexed'''':true, ''''startYear'''':1939, ''''values'''':\r\n                            [  3000,  /* 1940-1949 */\r\n                               3000,   3600,   3600,   3600,   3600,   4200,   4200,   4200,   4200,   4800,  /* 1950-1959 */\r\n                               4800,   4800,   4800,   4800,   4800,   4800,   6600,   6600,   7800,   7800,  /* 1960-1969 */\r\n                               7800,   7800,   9000,  10800,  13200,  14100,  15300,  16500,  17700,  22900,  /* 1970-1979 */\r\n                              25900,  29700,  32400,  35700,  37800,  39600,  42000,  43800,  45000,  48000,  /* 1980-1989 */\r\n                              51300,  53400,  55500,  57600,  60600,  61200,  62700,  65400,  68400,  72600,  /* 1990-1999 */\r\n                              76200,  80400,  84900,  87000,  87900,  90000,  94200,  97500, 102000, 106800,  /* 2000-2009 */\r\n                             106800, 106800]  /* 2010-2011 */\r\n                                }''", span="5597-5606", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="DefaultSerializationBinder.cs"];
m1_2510 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", span="5595-5595", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="DefaultSerializationBinder.cs"];
m1_2711 [label="Entry Newtonsoft.Json.Linq.JToken.CreateReader()", span="1649-1649", cluster="Newtonsoft.Json.Linq.JToken.CreateReader()", file="DefaultSerializationBinder.cs"];
m1_1479 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", span="3172-3172", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="DefaultSerializationBinder.cs"];
m1_1481 [label="NullableDateTimeTestClass c = JsonConvert.DeserializeObject<NullableDateTimeTestClass>(json)", span="3176-3176", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="DefaultSerializationBinder.cs"];
m1_1482 [label="Assert.AreEqual(null, c.DateTimeField)", span="3177-3177", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="DefaultSerializationBinder.cs"];
m1_1480 [label="string json = @''{''''DateTimeField'''':''''''''}''", span="3174-3174", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="DefaultSerializationBinder.cs"];
m1_1483 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", span="3172-3172", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="DefaultSerializationBinder.cs"];
m1_491 [label="Entry Newtonsoft.Json.Linq.JObject.FromObject(object)", span="377-377", cluster="Newtonsoft.Json.Linq.JObject.FromObject(object)", file="DefaultSerializationBinder.cs"];
m1_272 [label="Entry System.Collections.ObjectModel.Collection<T>.Add(T)", span="0-0", cluster="System.Collections.ObjectModel.Collection<T>.Add(T)", file="DefaultSerializationBinder.cs"];
m1_2945 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", span="6654-6654", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", file="DefaultSerializationBinder.cs"];
m1_2946 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<StringComparison>(''''); }, ''No JSON content found and type 'System.StringComparison' is not nullable. Path '', line 0, position 0.'')", span="6656-6656", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", file="DefaultSerializationBinder.cs"];
m1_2947 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", span="6654-6654", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", file="DefaultSerializationBinder.cs"];
m1_554 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="DefaultSerializationBinder.cs"];
m1_833 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", span="1785-1785", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="DefaultSerializationBinder.cs"];
m1_836 [label="Assert.AreEqual(@''[''''0100-01-01T01:01:01+00:00'''',''''2000-01-01T01:01:01+00:00'''',''''2000-01-01T01:01:01+13:00'''',''''2000-01-01T01:01:01-03:30'''']'', result)", span="1796-1796", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="DefaultSerializationBinder.cs"];
m1_835 [label="string result = JsonConvert.SerializeObject(testDates)", span="1795-1795", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="DefaultSerializationBinder.cs"];
m1_834 [label="List<DateTimeOffset> testDates = new List<DateTimeOffset>\r\n            {\r\n                new DateTimeOffset(new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Utc)),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(13)),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(-3.5)),\r\n            }", span="1787-1793", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="DefaultSerializationBinder.cs"];
m1_837 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", span="1785-1785", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="DefaultSerializationBinder.cs"];
m1_3191 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", span="7168-7168", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="DefaultSerializationBinder.cs"];
m1_3198 [label="var jsonReader = new JsonTextReader(new StringReader(json))", span="7171-7171", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="DefaultSerializationBinder.cs"];
m1_3199 [label="var serializer = new JsonSerializer()", span="7172-7172", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="DefaultSerializationBinder.cs"];
m1_3201 [label="return serializer.Deserialize(jsonReader, typeof(T)) as T;", span="7178-7178", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="DefaultSerializationBinder.cs"];
m1_3200 [label="serializer.ContractResolver = new DefaultContractResolver\r\n            {\r\n                IgnoreSerializableAttribute = false\r\n            }", span="7173-7176", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="DefaultSerializationBinder.cs"];
m1_3202 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", span="7168-7168", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="DefaultSerializationBinder.cs"];
m1_2897 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", span="6566-6566", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="DefaultSerializationBinder.cs"];
m1_2900 [label="WithEnums e = JsonConvert.DeserializeObject<WithEnums>(json)", span="6576-6576", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="DefaultSerializationBinder.cs"];
m1_2904 [label="e = JsonConvert.DeserializeObject<WithEnums>(json)", span="6588-6588", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="DefaultSerializationBinder.cs"];
m1_2899 [label="Assert.AreEqual(@''{''''Id'''':7,''''NullableEnum'''':null}'', json)", span="6574-6574", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="DefaultSerializationBinder.cs"];
m1_2901 [label="Assert.AreEqual(null, e.NullableEnum)", span="6578-6578", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="DefaultSerializationBinder.cs"];
m1_2903 [label="Assert.AreEqual(@''{''''Id'''':7,''''NullableEnum'''':1}'', json)", span="6586-6586", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="DefaultSerializationBinder.cs"];
m1_2905 [label="Assert.AreEqual(MyEnum.Value2, e.NullableEnum)", span="6590-6590", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="DefaultSerializationBinder.cs"];
m1_2898 [label="string json = JsonConvert.SerializeObject(new WithEnums\r\n            {\r\n                Id = 7,\r\n                NullableEnum = null\r\n            })", span="6568-6572", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="DefaultSerializationBinder.cs"];
m1_2902 [label="json = JsonConvert.SerializeObject(new WithEnums\r\n            {\r\n                Id = 7,\r\n                NullableEnum = MyEnum.Value2\r\n            })", span="6580-6584", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="DefaultSerializationBinder.cs"];
m1_2906 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", span="6566-6566", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="DefaultSerializationBinder.cs"];
m1_840 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", span="1800-1800", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="DefaultSerializationBinder.cs"];
m1_843 [label="Assert.AreEqual(@''[''''\/Date(-59011455539000+0000)\/'''',''''\/Date(946688461000+0000)\/'''',''''\/Date(946641661000+1300)\/'''',''''\/Date(946701061000-0330)\/'''']'', result)", span="1811-1811", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="DefaultSerializationBinder.cs"];
m1_842 [label="string result = JsonConvert.SerializeObject(testDates, new JsonSerializerSettings { DateFormatHandling = DateFormatHandling.MicrosoftDateFormat })", span="1810-1810", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="DefaultSerializationBinder.cs"];
m1_841 [label="List<DateTimeOffset> testDates = new List<DateTimeOffset>\r\n            {\r\n                new DateTimeOffset(new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Utc)),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(13)),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(-3.5)),\r\n            }", span="1802-1808", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="DefaultSerializationBinder.cs"];
m1_844 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", span="1800-1800", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="DefaultSerializationBinder.cs"];
m1_3561 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", span="8197-8197", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="DefaultSerializationBinder.cs"];
m1_3566 [label="ParticipantEntity deserializedProduct = JsonConvert.DeserializeObject<ParticipantEntity>(json)", span="8203-8203", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="DefaultSerializationBinder.cs"];
m1_3564 [label="string json = JsonConvert.SerializeObject(product)", span="8201-8201", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="DefaultSerializationBinder.cs"];
m1_3565 [label="Console.WriteLine(json)", span="8202-8202", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="DefaultSerializationBinder.cs"];
m1_3562 [label="ParticipantEntity product = new ParticipantEntity()", span="8199-8199", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="DefaultSerializationBinder.cs"];
m1_3563 [label="product.Properties = new Dictionary<string, string> { { ''s'', ''d'' } }", span="8200-8200", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="DefaultSerializationBinder.cs"];
m1_3567 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", span="8197-8197", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="DefaultSerializationBinder.cs"];
m1_2749 [label="Entry Unk.AreEquivalent", span="", cluster="Unk.AreEquivalent", file="DefaultSerializationBinder.cs"];
m1_2054 [label="Entry System.Type.GetProperty(string, System.Reflection.BindingFlags)", span="0-0", cluster="System.Type.GetProperty(string, System.Reflection.BindingFlags)", file="DefaultSerializationBinder.cs"];
m1_520 [label="Entry Unk.IsNotNull", span="", cluster="Unk.IsNotNull", file="DefaultSerializationBinder.cs"];
m1_955 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", span="2023-2023", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="DefaultSerializationBinder.cs"];
m1_958 [label="string indented = JsonConvert.SerializeObject(obj, settings)", span="2028-2028", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="DefaultSerializationBinder.cs"];
m1_957 [label="JsonSerializerSettings settings = new JsonSerializerSettings { Formatting = Formatting.Indented }", span="2027-2027", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="DefaultSerializationBinder.cs"];
m1_959 [label="string none = JsonConvert.SerializeObject(obj, Formatting.None, settings)", span="2030-2030", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="DefaultSerializationBinder.cs"];
m1_956 [label="var obj = new { Formatting = ''test'' }", span="2025-2025", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="DefaultSerializationBinder.cs"];
m1_960 [label="Assert.AreNotEqual(indented, none)", span="2031-2031", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="DefaultSerializationBinder.cs"];
m1_961 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", span="2023-2023", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="DefaultSerializationBinder.cs"];
m1_164 [label="Assert.AreEqual(input.Message, deserialized.Message)", span="490-490", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="DefaultSerializationBinder.cs"];
m1_3490 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", span="7981-7981", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", file="DefaultSerializationBinder.cs"];
m1_3492 [label="StringAssert.AreEqual(@''{\r\n  ''''<Active>k__BackingField'''': false,\r\n  ''''<Ja>k__BackingField'''': false,\r\n  ''''<Handlungsbedarf>k__BackingField'''': false,\r\n  ''''<Beratungsbedarf>k__BackingField'''': false,\r\n  ''''<Unzutreffend>k__BackingField'''': false,\r\n  ''''<Unbeantwortet>k__BackingField'''': false\r\n}'', json)", span="7992-7999", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", file="DefaultSerializationBinder.cs"];
m1_3491 [label="string json =\r\n                JsonConvert.SerializeObject(new AnswerFilterModel(), Formatting.Indented, new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n                        IgnoreSerializableAttribute = false\r\n                    }\r\n                })", span="7983-7990", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", file="DefaultSerializationBinder.cs"];
m1_3493 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", span="7981-7981", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", file="DefaultSerializationBinder.cs"];
m1_3075 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="381-381", cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="DefaultSerializationBinder.cs"];
m1_2865 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", span="6495-6495", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", file="DefaultSerializationBinder.cs"];
m1_2866 [label="ExceptionAssert.Throws<JsonException>(() =>\r\n            {\r\n                string json = @''{\r\n  ''''PreProperty'''': '';\r\n\r\n                JsonConvert.DeserializeObject<TestObjects.MyClass>(json);\r\n            })", span="6497-6503", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", file="DefaultSerializationBinder.cs"];
m1_2867 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", span="6495-6495", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", file="DefaultSerializationBinder.cs"];
m1_781 [label="Entry Newtonsoft.Json.Tests.TestObjects.JsonPropertyClass.JsonPropertyClass()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.JsonPropertyClass.JsonPropertyClass()", file="DefaultSerializationBinder.cs"];
m1_2488 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", span="5545-5545", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", file="DefaultSerializationBinder.cs"];
m1_2489 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject(''null'', typeof(DateTime)); }, ''Error converting value {null} to type 'System.DateTime'. Path '', line 1, position 4.'')", span="5547-5547", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", file="DefaultSerializationBinder.cs"];
m1_2490 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", span="5545-5545", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", file="DefaultSerializationBinder.cs"];
m1_1880 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", span="4162-4162", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="DefaultSerializationBinder.cs"];
m1_1885 [label="ModelStateDictionary<string> newModelStateDictionary = JsonConvert.DeserializeObject<ModelStateDictionary<string>>(json)", span="4171-4171", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="DefaultSerializationBinder.cs"];
m1_1884 [label="Assert.AreEqual(@''{''''key'''':''''value''''}'', json)", span="4169-4169", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="DefaultSerializationBinder.cs"];
m1_1886 [label="Assert.AreEqual(1, newModelStateDictionary.Count)", span="4172-4172", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="DefaultSerializationBinder.cs"];
m1_1887 [label="Assert.AreEqual(''value'', newModelStateDictionary[''key''])", span="4173-4173", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="DefaultSerializationBinder.cs"];
m1_1883 [label="string json = JsonConvert.SerializeObject(modelStateDictionary)", span="4167-4167", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="DefaultSerializationBinder.cs"];
m1_1881 [label="ModelStateDictionary<string> modelStateDictionary = new ModelStateDictionary<string>()", span="4164-4164", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="DefaultSerializationBinder.cs"];
m1_1882 [label="modelStateDictionary.Add(''key'', ''value'')", span="4165-4165", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="DefaultSerializationBinder.cs"];
m1_1888 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", span="4162-4162", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="DefaultSerializationBinder.cs"];
m1_3755 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedConstructorType.DerivedConstructorType(string, string)", span="8611-8611", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedConstructorType.DerivedConstructorType(string, string)", file="DefaultSerializationBinder.cs"];
m1_3756 [label="DerivedProperty = derivedProperty", span="8614-8614", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedConstructorType.DerivedConstructorType(string, string)", file="DefaultSerializationBinder.cs"];
m1_3757 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedConstructorType.DerivedConstructorType(string, string)", span="8611-8611", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedConstructorType.DerivedConstructorType(string, string)", file="DefaultSerializationBinder.cs"];
m1_2053 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", span="473-473", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="DefaultSerializationBinder.cs"];
m1_3077 [label="Entry Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", span="1849-1849", cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="DefaultSerializationBinder.cs"];
m1_992 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithTimeSpan.ClassWithTimeSpan()", span="2065-2065", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithTimeSpan.ClassWithTimeSpan()", file="DefaultSerializationBinder.cs"];
m1_2535 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", span="5704-5704", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="DefaultSerializationBinder.cs"];
m1_2541 [label="Console.WriteLine(xml)", span="5719-5719", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="DefaultSerializationBinder.cs"];
m1_2538 [label="MemoryStream ms = new MemoryStream()", span="5714-5714", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="DefaultSerializationBinder.cs"];
m1_2540 [label="string xml = Encoding.UTF8.GetString(ms.ToArray(), 0, Convert.ToInt32(ms.Length))", span="5717-5717", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="DefaultSerializationBinder.cs"];
m1_2537 [label="DataContractSerializer serializer = new DataContractSerializer(typeof(ChildDataContract))", span="5712-5712", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="DefaultSerializationBinder.cs"];
m1_2539 [label="serializer.WriteObject(ms, cc)", span="5715-5715", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="DefaultSerializationBinder.cs"];
m1_2536 [label="ChildDataContract cc = new ChildDataContract\r\n            {\r\n                VirtualMember = ''VirtualMember!'',\r\n                NonVirtualMember = ''NonVirtualMember!''\r\n            }", span="5706-5710", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="DefaultSerializationBinder.cs"];
m1_2542 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", span="5704-5704", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="DefaultSerializationBinder.cs"];
m1_2544 [label="Entry System.Convert.ToInt32(long)", span="0-0", cluster="System.Convert.ToInt32(long)", file="DefaultSerializationBinder.cs"];
m1_2545 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", span="5746-5746", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="DefaultSerializationBinder.cs"];
m1_2548 [label="Assert.AreEqual(@''{''''virtualMember'''':''''VirtualMember!'''',''''nonVirtualMember'''':''''NonVirtualMember!''''}'', result)", span="5755-5755", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="DefaultSerializationBinder.cs"];
m1_2547 [label="string result = JsonConvert.SerializeObject(cc)", span="5754-5754", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="DefaultSerializationBinder.cs"];
m1_2546 [label="ChildObject cc = new ChildObject\r\n            {\r\n                VirtualMember = ''VirtualMember!'',\r\n                NonVirtualMember = ''NonVirtualMember!''\r\n            }", span="5748-5752", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="DefaultSerializationBinder.cs"];
m1_2549 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", span="5746-5746", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="DefaultSerializationBinder.cs"];
m1_3798 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailMessageConverterTest()", span="8710-8710", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailMessageConverterTest()", file="DefaultSerializationBinder.cs"];
m1_3800 [label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n                {\r\n                    JsonConvert.DeserializeObject<System.Net.Mail.MailMessage>(\r\n                        JsonMessage,\r\n                        new MailAddressReadConverter(),\r\n                        new AttachmentReadConverter(),\r\n                        new EncodingReadConverter());\r\n                },\r\n                ''Cannot populate list type System.Net.Mime.HeaderCollection. Path 'Headers', line 26, position 15.'')", span="8752-8760", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailMessageConverterTest()", file="DefaultSerializationBinder.cs"];
m1_3799 [label="string JsonMessage = @''{\r\n  ''''From'''': {\r\n    ''''Address'''': ''''askywalker@theEmpire.gov'''',\r\n    ''''DisplayName'''': ''''Darth Vader''''\r\n  },\r\n  ''''Sender'''': null,\r\n  ''''ReplyTo'''': null,\r\n  ''''ReplyToList'''': [],\r\n  ''''To'''': [\r\n    {\r\n      ''''Address'''': ''''lskywalker@theRebellion.org'''',\r\n      ''''DisplayName'''': ''''Luke Skywalker''''\r\n    }\r\n  ],\r\n  ''''Bcc'''': [],\r\n  ''''CC'''': [\r\n    {\r\n      ''''Address'''': ''''lorgana@alderaan.gov'''',\r\n      ''''DisplayName'''': ''''Princess Leia''''\r\n    }\r\n  ],\r\n  ''''Priority'''': 0,\r\n  ''''DeliveryNotificationOptions'''': 0,\r\n  ''''Subject'''': ''''Family tree'''',\r\n  ''''SubjectEncoding'''': null,\r\n  ''''Headers'''': [],\r\n  ''''HeadersEncoding'''': null,\r\n  ''''Body'''': ''''<strong>I am your father!</strong>'''',\r\n  ''''BodyEncoding'''': ''''US-ASCII'''',\r\n  ''''BodyTransferEncoding'''': -1,\r\n  ''''IsBodyHtml'''': true,\r\n  ''''Attachments'''': [\r\n    {\r\n      ''''FileName'''': ''''skywalker family tree.jpg'''',\r\n      ''''ContentBase64'''': ''''AQIDBAU=''''\r\n    }\r\n  ],\r\n  ''''AlternateViews'''': []\r\n}''", span="8712-8750", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailMessageConverterTest()", file="DefaultSerializationBinder.cs"];
m1_3801 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailMessageConverterTest()", span="8710-8710", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailMessageConverterTest()", file="DefaultSerializationBinder.cs"];
m1_3669 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", span="8395-8395", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="DefaultSerializationBinder.cs"];
m1_3677 [label="Assert.AreEqual(dt, dt1)", span="8413-8413", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="DefaultSerializationBinder.cs"];
m1_3682 [label="Assert.AreEqual(dt, (DateTime)v.Value)", span="8424-8424", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="DefaultSerializationBinder.cs"];
m1_3675 [label="Assert.AreEqual(@''''''2000-pie-Ara-Cuma-22'''''', json)", span="8409-8409", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="DefaultSerializationBinder.cs"];
m1_3680 [label="Assert.AreEqual(JTokenType.Date, v.Type)", span="8422-8422", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="DefaultSerializationBinder.cs"];
m1_3681 [label="Assert.AreEqual(typeof(DateTime), v.Value.GetType())", span="8423-8423", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="DefaultSerializationBinder.cs"];
m1_3685 [label="Assert.AreEqual(JTokenType.String, v.Type)", span="8433-8433", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="DefaultSerializationBinder.cs"];
m1_3686 [label="Assert.AreEqual(typeof(string), v.Value.GetType())", span="8434-8434", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="DefaultSerializationBinder.cs"];
m1_3687 [label="Assert.AreEqual(''2000-pie-Dec-Friday-22'', v.Value)", span="8435-8435", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="DefaultSerializationBinder.cs"];
m1_3671 [label="DateTime dt = new DateTime(2000, 12, 22)", span="8399-8399", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="DefaultSerializationBinder.cs"];
m1_3676 [label="DateTime dt1 = JsonConvert.DeserializeObject<DateTime>(json, settings)", span="8411-8411", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="DefaultSerializationBinder.cs"];
m1_3678 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                Culture = culture\r\n            }", span="8415-8419", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="DefaultSerializationBinder.cs"];
m1_3679 [label="JValue v = (JValue)JToken.ReadFrom(reader)", span="8420-8420", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="DefaultSerializationBinder.cs"];
m1_3683 [label="reader = new JsonTextReader(new StringReader(@''''''2000-pie-Dec-Friday-22''''''))\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                Culture = culture\r\n            }", span="8426-8430", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="DefaultSerializationBinder.cs"];
m1_3674 [label="string json = JsonConvert.SerializeObject(dt, settings)", span="8407-8407", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="DefaultSerializationBinder.cs"];
m1_3684 [label="v = (JValue)JToken.ReadFrom(reader)", span="8431-8431", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="DefaultSerializationBinder.cs"];
m1_3670 [label="CultureInfo culture = new CultureInfo(''tr-TR'')", span="8397-8397", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="DefaultSerializationBinder.cs"];
m1_3672 [label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd''", span="8400-8400", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="DefaultSerializationBinder.cs"];
m1_3673 [label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                Culture = culture\r\n            }", span="8401-8405", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="DefaultSerializationBinder.cs"];
m1_3688 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", span="8395-8395", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="DefaultSerializationBinder.cs"];
m1_991 [label="Entry System.TimeSpan.TimeSpan(int, int, int, int)", span="0-0", cluster="System.TimeSpan.TimeSpan(int, int, int, int)", file="DefaultSerializationBinder.cs"];
m1_469 [label="Entry Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", span="297-297", cluster="Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", file="DefaultSerializationBinder.cs"];
m1_1619 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", span="3418-3418", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="DefaultSerializationBinder.cs"];
m1_1625 [label="Assert.AreEqual(@''[''''str_1'''',''''str_2'''',''''str_3'''']'', json)", span="3427-3427", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="DefaultSerializationBinder.cs"];
m1_1624 [label="string json = JsonConvert.SerializeObject(strings)", span="3426-3426", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="DefaultSerializationBinder.cs"];
m1_1620 [label="List<String> strings = new List<String>()", span="3420-3420", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="DefaultSerializationBinder.cs"];
m1_1623 [label="strings.Add(''str_3'')", span="3424-3424", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="DefaultSerializationBinder.cs"];
m1_1621 [label="strings.Add(''str_1'')", span="3422-3422", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="DefaultSerializationBinder.cs"];
m1_1622 [label="strings.Add(''str_2'')", span="3423-3423", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="DefaultSerializationBinder.cs"];
m1_1626 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", span="3418-3418", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="DefaultSerializationBinder.cs"];
m1_1628 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", span="3431-3431", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="DefaultSerializationBinder.cs"];
m1_1632 [label="ConstructorReadonlyFields c2 = JsonConvert.DeserializeObject<ConstructorReadonlyFields>(json)", span="3440-3440", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="DefaultSerializationBinder.cs"];
m1_1633 [label="Assert.AreEqual(''String!'', c2.A)", span="3441-3441", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="DefaultSerializationBinder.cs"];
m1_1634 [label="Assert.AreEqual(int.MaxValue, c2.B)", span="3442-3442", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="DefaultSerializationBinder.cs"];
m1_1630 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="3434-3434", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="DefaultSerializationBinder.cs"];
m1_1631 [label="StringAssert.AreEqual(@''{\r\n  ''''A'''': ''''String!'''',\r\n  ''''B'''': 2147483647\r\n}'', json)", span="3435-3438", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="DefaultSerializationBinder.cs"];
m1_1629 [label="ConstructorReadonlyFields c1 = new ConstructorReadonlyFields(''String!'', int.MaxValue)", span="3433-3433", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="DefaultSerializationBinder.cs"];
m1_1635 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", span="3431-3431", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="DefaultSerializationBinder.cs"];
m1_2908 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", span="6594-6594", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="DefaultSerializationBinder.cs"];
m1_2911 [label="Widget1 w = JsonConvert.DeserializeObject<Widget1>(@''{''''Id'''':''''1234''''}'')", span="6600-6600", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="DefaultSerializationBinder.cs"];
m1_2910 [label="Assert.AreEqual(@''{''''Id'''':''''1234''''}'', json)", span="6598-6598", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="DefaultSerializationBinder.cs"];
m1_2912 [label="Assert.AreEqual(new WidgetId1 { Value = 1234 }, w.Id)", span="6602-6602", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="DefaultSerializationBinder.cs"];
m1_2909 [label="string json = JsonConvert.SerializeObject(new Widget1 { Id = new WidgetId1 { Value = 1234 } })", span="6596-6596", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="DefaultSerializationBinder.cs"];
m1_2913 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", span="6594-6594", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="DefaultSerializationBinder.cs"];
m1_3125 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", span="6990-6990", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="DefaultSerializationBinder.cs"];
m1_3127 [label="var c2 = JsonConvert.DeserializeObject<PropertyItemConverter>(''{'Data':['::ONE::','::TWO::']}'')", span="7003-7003", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="DefaultSerializationBinder.cs"];
m1_3129 [label="Assert.AreEqual(2, c2.Data.Count)", span="7006-7006", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="DefaultSerializationBinder.cs"];
m1_3130 [label="Assert.AreEqual(''one'', c2.Data[0])", span="7007-7007", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="DefaultSerializationBinder.cs"];
m1_3131 [label="Assert.AreEqual(''two'', c2.Data[1])", span="7008-7008", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="DefaultSerializationBinder.cs"];
m1_3126 [label="PropertyItemConverter c = new PropertyItemConverter\r\n            {\r\n                Data =\r\n                    new[]\r\n                    {\r\n                        ''one'',\r\n                        ''two'',\r\n                        ''three''\r\n                    }\r\n            }", span="6992-7001", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="DefaultSerializationBinder.cs"];
m1_3128 [label="Assert.IsNotNull(c2)", span="7005-7005", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="DefaultSerializationBinder.cs"];
m1_3132 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", span="6990-6990", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="DefaultSerializationBinder.cs"];
m1_3078 [label="Entry System.Console.WriteLine(object)", span="0-0", cluster="System.Console.WriteLine(object)", file="DefaultSerializationBinder.cs"];
m1_2978 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", span="6706-6706", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="DefaultSerializationBinder.cs"];
m1_2980 [label="Assert.AreEqual(new DateTime(2008, 12, 12, 12, 12, 12, 0, DateTimeKind.Utc).ToLocalTime(), c.DateTimeField)", span="6716-6716", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="DefaultSerializationBinder.cs"];
m1_2981 [label="Assert.AreEqual(new DateTimeOffset(2008, 12, 12, 12, 12, 12, 0, TimeSpan.Zero), c.DateTimeOffsetField)", span="6717-6717", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="DefaultSerializationBinder.cs"];
m1_2982 [label="Assert.AreEqual(''Pre'', c.PreField)", span="6718-6718", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="DefaultSerializationBinder.cs"];
m1_2983 [label="Assert.AreEqual(''Post'', c.PostField)", span="6719-6719", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="DefaultSerializationBinder.cs"];
m1_2985 [label="Assert.AreEqual(new DateTime(2008, 1, 1, 1, 1, 1, 0, DateTimeKind.Utc).ToLocalTime(), c2.DateTimeField)", span="6729-6729", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="DefaultSerializationBinder.cs"];
m1_2986 [label="Assert.AreEqual(new DateTimeOffset(2008, 1, 1, 1, 1, 1, 0, TimeSpan.Zero), c2.DateTimeOffsetField)", span="6730-6730", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="DefaultSerializationBinder.cs"];
m1_2987 [label="Assert.AreEqual(''Pre'', c2.PreField)", span="6731-6731", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="DefaultSerializationBinder.cs"];
m1_2988 [label="Assert.AreEqual(''Post'', c2.PostField)", span="6732-6732", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="DefaultSerializationBinder.cs"];
m1_2979 [label="DateTimeTestClass c =\r\n                JsonConvert.DeserializeObject<DateTimeTestClass>(\r\n                    @''{''''PreField'''':''''Pre'''',''''DateTimeField'''':''''2008-12-12T12:12:12Z'''',''''DateTimeOffsetField'''':''''2008-12-12T12:12:12Z'''',''''PostField'''':''''Post''''}'',\r\n                    new JsonSerializerSettings\r\n                    {\r\n                        DateTimeZoneHandling = DateTimeZoneHandling.Local\r\n                    })", span="6708-6714", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="DefaultSerializationBinder.cs"];
m1_2984 [label="DateTimeTestClass c2 =\r\n                JsonConvert.DeserializeObject<DateTimeTestClass>(\r\n                    @''{''''PreField'''':''''Pre'''',''''DateTimeField'''':''''2008-01-01T01:01:01Z'''',''''DateTimeOffsetField'''':''''2008-01-01T01:01:01Z'''',''''PostField'''':''''Post''''}'',\r\n                    new JsonSerializerSettings\r\n                    {\r\n                        DateTimeZoneHandling = DateTimeZoneHandling.Local\r\n                    })", span="6721-6727", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="DefaultSerializationBinder.cs"];
m1_2989 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", span="6706-6706", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="DefaultSerializationBinder.cs"];
m1_2296 [label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime, System.TimeSpan)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime, System.TimeSpan)", file="DefaultSerializationBinder.cs"];
m1_993 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", span="2085-2085", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="DefaultSerializationBinder.cs"];
m1_996 [label="JsonIgnoreAttributeOnClassTestClass c = JsonConvert.DeserializeObject<JsonIgnoreAttributeOnClassTestClass>(@''{''''TheField'''':99,''''Property'''':-1,''''IgnoredField'''':-1}'')", span="2091-2091", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="DefaultSerializationBinder.cs"];
m1_995 [label="Assert.AreEqual(@''{''''TheField'''':0,''''Property'''':21}'', json)", span="2089-2089", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="DefaultSerializationBinder.cs"];
m1_997 [label="Assert.AreEqual(0, c.IgnoredField)", span="2093-2093", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="DefaultSerializationBinder.cs"];
m1_998 [label="Assert.AreEqual(99, c.Field)", span="2094-2094", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="DefaultSerializationBinder.cs"];
m1_994 [label="string json = JsonConvert.SerializeObject(new JsonIgnoreAttributeOnClassTestClass())", span="2087-2087", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="DefaultSerializationBinder.cs"];
m1_999 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", span="2085-2085", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="DefaultSerializationBinder.cs"];
m1_2618 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", span="5943-5943", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="DefaultSerializationBinder.cs"];
m1_2619 [label="string json = JsonConvert.SerializeObject(new ClassAttributeDerived\r\n            {\r\n                BaseClassValue = ''BaseClassValue!'',\r\n                DerivedClassValue = ''DerivedClassValue!'',\r\n                NonSerialized = ''NonSerialized!''\r\n            }, Formatting.Indented)", span="5945-5950", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="DefaultSerializationBinder.cs"];
m1_2621 [label="json = JsonConvert.SerializeObject(new CollectionClassAttributeDerived\r\n            {\r\n                BaseClassValue = ''BaseClassValue!'',\r\n                CollectionDerivedClassValue = ''CollectionDerivedClassValue!''\r\n            }, Formatting.Indented)", span="5957-5961", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="DefaultSerializationBinder.cs"];
m1_2620 [label="StringAssert.AreEqual(@''{\r\n  ''''DerivedClassValue'''': ''''DerivedClassValue!'''',\r\n  ''''BaseClassValue'''': ''''BaseClassValue!''''\r\n}'', json)", span="5952-5955", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="DefaultSerializationBinder.cs"];
m1_2622 [label="StringAssert.AreEqual(@''{\r\n  ''''CollectionDerivedClassValue'''': ''''CollectionDerivedClassValue!'''',\r\n  ''''BaseClassValue'''': ''''BaseClassValue!''''\r\n}'', json)", span="5963-5966", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="DefaultSerializationBinder.cs"];
m1_2623 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", span="5943-5943", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="DefaultSerializationBinder.cs"];
m1_1574 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", span="3325-3325", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", file="DefaultSerializationBinder.cs"];
m1_1576 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.PopulateObject(json, new Person()); }, @''Cannot populate JSON array onto type 'Newtonsoft.Json.Tests.TestObjects.Person'. Path '', line 1, position 1.'')", span="3329-3329", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", file="DefaultSerializationBinder.cs"];
m1_1575 [label="string json = @''[]''", span="3327-3327", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", file="DefaultSerializationBinder.cs"];
m1_1577 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", span="3325-3325", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", file="DefaultSerializationBinder.cs"];
m1_1950 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, char)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, char)", file="DefaultSerializationBinder.cs"];
m1_3157 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", span="7081-7081", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="DefaultSerializationBinder.cs"];
m1_3161 [label="IDictionary<DateTime, int> dic2 = JsonConvert.DeserializeObject<IDictionary<DateTime, int>>(json)", span="7096-7096", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="DefaultSerializationBinder.cs"];
m1_3162 [label="Assert.AreEqual(2, dic2.Count)", span="7098-7098", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="DefaultSerializationBinder.cs"];
m1_3163 [label="Assert.AreEqual(1, dic2[new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", span="7099-7099", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="DefaultSerializationBinder.cs"];
m1_3164 [label="Assert.AreEqual(2, dic2[new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", span="7100-7100", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="DefaultSerializationBinder.cs"];
m1_3159 [label="string json = JsonConvert.SerializeObject(dic1, Formatting.Indented)", span="7089-7089", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="DefaultSerializationBinder.cs"];
m1_3160 [label="StringAssert.AreEqual(@''{\r\n  ''''2000-12-12T12:12:12Z'''': 1,\r\n  ''''2013-12-12T12:12:12Z'''': 2\r\n}'', json)", span="7091-7094", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="DefaultSerializationBinder.cs"];
m1_3158 [label="IDictionary<DateTime, int> dic1 = new Dictionary<DateTime, int>\r\n            {\r\n                { new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc), 1 },\r\n                { new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc), 2 }\r\n            }", span="7083-7087", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="DefaultSerializationBinder.cs"];
m1_3165 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", span="7081-7081", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="DefaultSerializationBinder.cs"];
m1_1469 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", span="3153-3153", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="DefaultSerializationBinder.cs"];
m1_1471 [label="Dictionary<string, string> values = JsonConvert.DeserializeObject<Dictionary<string, string>>(json)", span="3157-3157", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="DefaultSerializationBinder.cs"];
m1_1474 [label="Assert.AreEqual(2, values.Count)", span="3165-3165", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="DefaultSerializationBinder.cs"];
m1_1475 [label="Assert.AreEqual(''value1'', values[''key1''])", span="3166-3166", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="DefaultSerializationBinder.cs"];
m1_1476 [label="Assert.AreEqual(''value2'', values[''key2''])", span="3167-3167", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="DefaultSerializationBinder.cs"];
m1_1470 [label="string json = @''{''''key1'''':''''value1'''',''''key2'''':''''value2''''}''", span="3155-3155", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="DefaultSerializationBinder.cs"];
m1_1472 [label="Console.WriteLine(values.Count)", span="3159-3159", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="DefaultSerializationBinder.cs"];
m1_1473 [label="Console.WriteLine(values[''key1''])", span="3162-3162", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="DefaultSerializationBinder.cs"];
m1_1477 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", span="3153-3153", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="DefaultSerializationBinder.cs"];
m1_1733 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", span="3734-3734", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", file="DefaultSerializationBinder.cs"];
m1_1734 [label="return JsonConvert.SerializeObject(this, Formatting.Indented);", span="3736-3736", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", file="DefaultSerializationBinder.cs"];
m1_1735 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", span="3734-3734", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", file="DefaultSerializationBinder.cs"];
m1_2709 [label="Entry System.IO.StringWriter.StringWriter()", span="0-0", cluster="System.IO.StringWriter.StringWriter()", file="DefaultSerializationBinder.cs"];
m1_53 [label="FaqItem c = new FaqItem()", span="225-225", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="DefaultSerializationBinder.cs"];
m1_52 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", span="223-223", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="DefaultSerializationBinder.cs"];
m1_54 [label="c.FaqId = 1", span="226-226", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="DefaultSerializationBinder.cs"];
m1_55 [label="c.Sections.Add(new FaqSection())", span="227-227", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="DefaultSerializationBinder.cs"];
m1_56 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="229-229", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="DefaultSerializationBinder.cs"];
m1_57 [label="Console.WriteLine(json)", span="231-231", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="DefaultSerializationBinder.cs"];
m1_3650 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", span="8356-8356", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="DefaultSerializationBinder.cs"];
m1_3657 [label="Assert.AreEqual(dt, dt1)", span="8371-8371", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="DefaultSerializationBinder.cs"];
m1_3662 [label="Assert.AreEqual(dt, (DateTime)v.Value)", span="8381-8381", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="DefaultSerializationBinder.cs"];
m1_3655 [label="Assert.AreEqual(@''''''2000-pie-Dec-Friday-22'''''', json)", span="8367-8367", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="DefaultSerializationBinder.cs"];
m1_3660 [label="Assert.AreEqual(JTokenType.Date, v.Type)", span="8379-8379", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="DefaultSerializationBinder.cs"];
m1_3661 [label="Assert.AreEqual(typeof(DateTime), v.Value.GetType())", span="8380-8380", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="DefaultSerializationBinder.cs"];
m1_3665 [label="Assert.AreEqual(JTokenType.String, v.Type)", span="8389-8389", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="DefaultSerializationBinder.cs"];
m1_3666 [label="Assert.AreEqual(typeof(string), v.Value.GetType())", span="8390-8390", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="DefaultSerializationBinder.cs"];
m1_3667 [label="Assert.AreEqual(''abc'', v.Value)", span="8391-8391", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="DefaultSerializationBinder.cs"];
m1_3651 [label="DateTime dt = new DateTime(2000, 12, 22)", span="8358-8358", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="DefaultSerializationBinder.cs"];
m1_3656 [label="DateTime dt1 = JsonConvert.DeserializeObject<DateTime>(json, settings)", span="8369-8369", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="DefaultSerializationBinder.cs"];
m1_3658 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))\r\n            {\r\n                DateFormatString = dateFormatString\r\n            }", span="8373-8376", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="DefaultSerializationBinder.cs"];
m1_3659 [label="JValue v = (JValue)JToken.ReadFrom(reader)", span="8377-8377", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="DefaultSerializationBinder.cs"];
m1_3663 [label="reader = new JsonTextReader(new StringReader(@''''''abc''''''))\r\n            {\r\n                DateFormatString = dateFormatString\r\n            }", span="8383-8386", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="DefaultSerializationBinder.cs"];
m1_3654 [label="string json = JsonConvert.SerializeObject(dt, settings)", span="8365-8365", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="DefaultSerializationBinder.cs"];
m1_3664 [label="v = (JValue)JToken.ReadFrom(reader)", span="8387-8387", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="DefaultSerializationBinder.cs"];
m1_3652 [label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd''", span="8359-8359", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="DefaultSerializationBinder.cs"];
m1_3653 [label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString\r\n            }", span="8360-8363", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="DefaultSerializationBinder.cs"];
m1_3668 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", span="8356-8356", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="DefaultSerializationBinder.cs"];
m1_2360 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", span="5248-5248", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="DefaultSerializationBinder.cs"];
m1_2362 [label="IList<decimal> a = JsonConvert.DeserializeObject<IList<decimal>>(json)", span="5251-5251", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="DefaultSerializationBinder.cs"];
m1_2363 [label="Assert.AreEqual(123456789876543.21m, a[0])", span="5252-5252", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="DefaultSerializationBinder.cs"];
m1_2361 [label="string json = ''[123456789876543.21]''", span="5250-5250", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="DefaultSerializationBinder.cs"];
m1_2364 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", span="5248-5248", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="DefaultSerializationBinder.cs"];
m1_1500 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", span="3202-3202", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", file="DefaultSerializationBinder.cs"];
m1_1502 [label="ListTestClass l = JsonConvert.DeserializeObject<ListTestClass>(json)", span="3206-3206", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", file="DefaultSerializationBinder.cs"];
m1_1501 [label="string json = @''{id: ''''12'''', name: ''''test'''', items: [{id: ''''112'''', name: ''''testing''''}]}''", span="3204-3204", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", file="DefaultSerializationBinder.cs"];
m1_1503 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", span="3202-3202", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", file="DefaultSerializationBinder.cs"];
m1_1710 [label="Entry Newtonsoft.Json.Tests.TestObjects.PersonPropertyClass.PersonPropertyClass()", span="31-31", cluster="Newtonsoft.Json.Tests.TestObjects.PersonPropertyClass.PersonPropertyClass()", file="DefaultSerializationBinder.cs"];
m1_1018 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", span="2125-2125", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="DefaultSerializationBinder.cs"];
m1_1021 [label="Assert.AreEqual(@''[''''Class'''',''''!Test!'''']'', json)", span="2130-2130", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="DefaultSerializationBinder.cs"];
m1_1023 [label="Assert.AreEqual(''!Test!'', c2.TestValue)", span="2134-2134", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="DefaultSerializationBinder.cs"];
m1_1022 [label="ConverterPrecedenceClass c2 = JsonConvert.DeserializeObject<ConverterPrecedenceClass>(json, new ArgumentConverterPrecedenceClassConverter())", span="2132-2132", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="DefaultSerializationBinder.cs"];
m1_1020 [label="string json = JsonConvert.SerializeObject(c1, new ArgumentConverterPrecedenceClassConverter())", span="2129-2129", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="DefaultSerializationBinder.cs"];
m1_1019 [label="ConverterPrecedenceClass c1 = new ConverterPrecedenceClass(''!Test!'')", span="2127-2127", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="DefaultSerializationBinder.cs"];
m1_1024 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", span="2125-2125", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="DefaultSerializationBinder.cs"];
m1_3341 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", span="7572-7572", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="DefaultSerializationBinder.cs"];
m1_3344 [label="Assert.AreEqual(@''{''''m_Item1'''':500}'', json)", span="7579-7579", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="DefaultSerializationBinder.cs"];
m1_3346 [label="Assert.AreEqual(500, obj.Item1)", span="7585-7585", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="DefaultSerializationBinder.cs"];
m1_3343 [label="var json = JsonConvert.SerializeObject(tuple, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new SerializableContractResolver()\r\n            })", span="7575-7578", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="DefaultSerializationBinder.cs"];
m1_3345 [label="var obj = JsonConvert.DeserializeObject<Tuple<int>>(json, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new SerializableContractResolver()\r\n            })", span="7581-7584", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="DefaultSerializationBinder.cs"];
m1_3342 [label="var tuple = Tuple.Create(500)", span="7574-7574", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="DefaultSerializationBinder.cs"];
m1_3347 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", span="7572-7572", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="DefaultSerializationBinder.cs"];
m1_1957 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, ushort)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, ushort)", file="DefaultSerializationBinder.cs"];
m1_1130 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", span="2319-2319", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="DefaultSerializationBinder.cs"];
m1_1134 [label="UserNullable userNullablleDeserialized = JsonConvert.DeserializeObject<UserNullable>(json)", span="2336-2336", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="DefaultSerializationBinder.cs"];
m1_1133 [label="Assert.AreEqual(@''{''''Id'''':''''ad6205e8-0df4-465d-aea6-8ba18e93a7e7'''',''''FName'''':''''FirstValue'''',''''LName'''':''''LastValue'''',''''RoleId'''':5,''''NullableRoleId'''':6,''''NullRoleId'''':null,''''Active'''':true}'', json)", span="2334-2334", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="DefaultSerializationBinder.cs"];
m1_1135 [label="Assert.AreEqual(new Guid(''AD6205E8-0DF4-465d-AEA6-8BA18E93A7E7''), userNullablleDeserialized.Id)", span="2338-2338", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="DefaultSerializationBinder.cs"];
m1_1136 [label="Assert.AreEqual(''FirstValue'', userNullablleDeserialized.FName)", span="2339-2339", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="DefaultSerializationBinder.cs"];
m1_1137 [label="Assert.AreEqual(''LastValue'', userNullablleDeserialized.LName)", span="2340-2340", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="DefaultSerializationBinder.cs"];
m1_1138 [label="Assert.AreEqual(5, userNullablleDeserialized.RoleId)", span="2341-2341", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="DefaultSerializationBinder.cs"];
m1_1139 [label="Assert.AreEqual(6, userNullablleDeserialized.NullableRoleId)", span="2342-2342", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="DefaultSerializationBinder.cs"];
m1_1140 [label="Assert.AreEqual(null, userNullablleDeserialized.NullRoleId)", span="2343-2343", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="DefaultSerializationBinder.cs"];
m1_1141 [label="Assert.AreEqual(true, userNullablleDeserialized.Active)", span="2344-2344", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="DefaultSerializationBinder.cs"];
m1_1132 [label="string json = JsonConvert.SerializeObject(userNullablle)", span="2332-2332", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="DefaultSerializationBinder.cs"];
m1_1131 [label="UserNullable userNullablle = new UserNullable\r\n            {\r\n                Id = new Guid(''AD6205E8-0DF4-465d-AEA6-8BA18E93A7E7''),\r\n                FName = ''FirstValue'',\r\n                LName = ''LastValue'',\r\n                RoleId = 5,\r\n                NullableRoleId = 6,\r\n                NullRoleId = null,\r\n                Active = true\r\n            }", span="2321-2330", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="DefaultSerializationBinder.cs"];
m1_1142 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", span="2319-2319", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="DefaultSerializationBinder.cs"];
m1_1000 [label="Entry Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeOnClassTestClass.JsonIgnoreAttributeOnClassTestClass()", span="28-28", cluster="Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeOnClassTestClass.JsonIgnoreAttributeOnClassTestClass()", file="DefaultSerializationBinder.cs"];
m1_1613 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", span="3401-3401", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", file="DefaultSerializationBinder.cs"];
m1_1614 [label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:null}'', new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(NETFX_CORE || PORTABLE || ASPNETCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                });\r\n            }, @''Error converting value {null} to type 'System.Int32'. Path 'ReadTimeout', line 1, position 17.'')", span="3403-3414", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", file="DefaultSerializationBinder.cs"];
m1_1615 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", span="3401-3401", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", file="DefaultSerializationBinder.cs"];
m1_2637 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", span="5999-5999", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="DefaultSerializationBinder.cs"];
m1_2641 [label="PrivateMembersClassWithAttributes c2 = JsonConvert.DeserializeObject<PrivateMembersClassWithAttributes>(json)", span="6010-6010", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="DefaultSerializationBinder.cs"];
m1_2642 [label="Assert.AreEqual(''readonlyString!'', c2.UseValue())", span="6011-6011", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="DefaultSerializationBinder.cs"];
m1_2639 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="6003-6003", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="DefaultSerializationBinder.cs"];
m1_2640 [label="StringAssert.AreEqual(@''{\r\n  ''''_privateString'''': ''''privateString!'''',\r\n  ''''_readonlyString'''': ''''readonlyString!'''',\r\n  ''''_internalString'''': ''''internalString!''''\r\n}'', json)", span="6004-6008", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="DefaultSerializationBinder.cs"];
m1_2638 [label="PrivateMembersClassWithAttributes c1 = new PrivateMembersClassWithAttributes(''privateString!'', ''internalString!'', ''readonlyString!'')", span="6001-6001", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="DefaultSerializationBinder.cs"];
m1_2643 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", span="5999-5999", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="DefaultSerializationBinder.cs"];
m1_3399 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", span="7766-7766", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="DefaultSerializationBinder.cs"];
m1_3404 [label="Assert.AreEqual(StringEscapeHandling.Default, jsonWriter.StringEscapeHandling)", span="7778-7778", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="DefaultSerializationBinder.cs"];
m1_3401 [label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="7769-7769", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="DefaultSerializationBinder.cs"];
m1_3403 [label="serializer.Serialize(jsonWriter, new { html = ''<html></html>'' })", span="7776-7776", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="DefaultSerializationBinder.cs"];
m1_3405 [label="string json = sw.ToString()", span="7780-7780", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="DefaultSerializationBinder.cs"];
m1_3400 [label="StringWriter sw = new StringWriter()", span="7768-7768", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="DefaultSerializationBinder.cs"];
m1_3402 [label="JsonSerializer serializer = JsonSerializer.Create(new JsonSerializerSettings\r\n            {\r\n                StringEscapeHandling = StringEscapeHandling.EscapeHtml,\r\n                Formatting = Formatting.Indented\r\n            })", span="7771-7775", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="DefaultSerializationBinder.cs"];
m1_3406 [label="StringAssert.AreEqual(@''{\r\n  ''''html'''': ''''\u003chtml\u003e\u003c/html\u003e''''\r\n}'', json)", span="7782-7784", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="DefaultSerializationBinder.cs"];
m1_3407 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", span="7766-7766", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="DefaultSerializationBinder.cs"];
m1_2320 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedEvent.DerivedEvent()", span="5162-5162", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedEvent.DerivedEvent()", file="DefaultSerializationBinder.cs"];
m1_1953 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, short)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, short)", file="DefaultSerializationBinder.cs"];
m1_1560 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", span="3299-3299", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", file="DefaultSerializationBinder.cs"];
m1_1562 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<List<Person>>(json); }, @''Error converting value ''''Constructor'''' to type 'Newtonsoft.Json.Tests.TestObjects.Person'. Path '[0]', line 1, position 17.'')", span="3303-3303", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", file="DefaultSerializationBinder.cs"];
m1_1561 [label="string json = @''[new Constructor(123)]''", span="3301-3301", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", file="DefaultSerializationBinder.cs"];
m1_1563 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", span="3299-3299", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", file="DefaultSerializationBinder.cs"];
m1_1648 [label="Entry Newtonsoft.Json.Tests.TestObjects.StructTest.StructTest()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.StructTest.StructTest()", file="DefaultSerializationBinder.cs"];
m1_2990 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int, int, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int, int, System.DateTimeKind)", file="DefaultSerializationBinder.cs"];
m1_471 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", span="981-981", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="DefaultSerializationBinder.cs"];
m1_474 [label="Regex r2 = JsonConvert.DeserializeObject<Regex>(json)", span="987-987", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="DefaultSerializationBinder.cs"];
m1_475 [label="Assert.AreEqual(''(hi)'', r2.ToString())", span="989-989", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="DefaultSerializationBinder.cs"];
m1_476 [label="Assert.AreEqual(RegexOptions.CultureInvariant, r2.Options)", span="990-990", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="DefaultSerializationBinder.cs"];
m1_473 [label="string json = JsonConvert.SerializeObject(regex, Formatting.Indented)", span="985-985", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="DefaultSerializationBinder.cs"];
m1_472 [label="Regex regex = new Regex(''(hi)'', RegexOptions.CultureInvariant)", span="983-983", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="DefaultSerializationBinder.cs"];
m1_477 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", span="981-981", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="DefaultSerializationBinder.cs"];
m1_1360 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", span="2874-2874", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="DefaultSerializationBinder.cs"];
m1_1367 [label="OptInClass newOptInClass = JsonConvert.DeserializeObject<OptInClass>(@''{\r\n  ''''Name'''': ''''James NK'''',\r\n  ''''NotIncluded'''': ''''Ignore me!'''',\r\n  ''''Age'''': 26\r\n}'')", span="2888-2892", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="DefaultSerializationBinder.cs"];
m1_1368 [label="Assert.AreEqual(26, newOptInClass.Age)", span="2893-2893", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="DefaultSerializationBinder.cs"];
m1_1369 [label="Assert.AreEqual(''James NK'', newOptInClass.Name)", span="2894-2894", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="DefaultSerializationBinder.cs"];
m1_1370 [label="Assert.AreEqual(null, newOptInClass.NotIncluded)", span="2895-2895", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="DefaultSerializationBinder.cs"];
m1_1366 [label="StringAssert.AreEqual(@''{\r\n  ''''Name'''': ''''James NK'''',\r\n  ''''Age'''': 26\r\n}'', json)", span="2883-2886", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="DefaultSerializationBinder.cs"];
m1_1365 [label="string json = JsonConvert.SerializeObject(optInClass, Formatting.Indented)", span="2881-2881", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="DefaultSerializationBinder.cs"];
m1_1361 [label="OptInClass optInClass = new OptInClass()", span="2876-2876", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="DefaultSerializationBinder.cs"];
m1_1364 [label="optInClass.NotIncluded = ''Poor me :(''", span="2879-2879", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="DefaultSerializationBinder.cs"];
m1_1362 [label="optInClass.Age = 26", span="2877-2877", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="DefaultSerializationBinder.cs"];
m1_1363 [label="optInClass.Name = ''James NK''", span="2878-2878", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="DefaultSerializationBinder.cs"];
m1_1371 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", span="2874-2874", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="DefaultSerializationBinder.cs"];
m1_798 [label="Entry System.Text.Encoding.GetBytes(string)", span="0-0", cluster="System.Text.Encoding.GetBytes(string)", file="DefaultSerializationBinder.cs"];
m1_1245 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", span="2576-2576", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="DefaultSerializationBinder.cs"];
m1_1247 [label="string defaultJson = JsonConvert.SerializeObject(entry)", span="2584-2584", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="DefaultSerializationBinder.cs"];
m1_1246 [label="LogEntry entry = new LogEntry\r\n            {\r\n                LogDate = new DateTime(2009, 2, 15, 0, 0, 0, DateTimeKind.Utc),\r\n                Details = ''Application started.''\r\n            }", span="2578-2582", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="DefaultSerializationBinder.cs"];
m1_1249 [label="string javascriptJson = JsonConvert.SerializeObject(entry, new JavaScriptDateTimeConverter())", span="2590-2590", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="DefaultSerializationBinder.cs"];
m1_1248 [label="string isoJson = JsonConvert.SerializeObject(entry, new IsoDateTimeConverter())", span="2587-2587", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="DefaultSerializationBinder.cs"];
m1_1250 [label="Console.WriteLine(defaultJson)", span="2593-2593", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="DefaultSerializationBinder.cs"];
m1_1251 [label="Console.WriteLine(isoJson)", span="2594-2594", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="DefaultSerializationBinder.cs"];
m1_1252 [label="Console.WriteLine(javascriptJson)", span="2595-2595", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="DefaultSerializationBinder.cs"];
m1_1253 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", span="2576-2576", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="DefaultSerializationBinder.cs"];
m1_706 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", span="1506-1506", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="DefaultSerializationBinder.cs"];
m1_714 [label="Assert.AreEqual(executorObject2.serverClassName, ''BanSubs'')", span="1518-1518", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="DefaultSerializationBinder.cs"];
m1_715 [label="Assert.AreEqual(executorObject2.serverMethodParams.Length, 4)", span="1519-1519", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="DefaultSerializationBinder.cs"];
m1_717 [label="Assert.AreEqual(executorObject2.clientGetResultFunction, ''ClientBanSubsCB'')", span="1521-1521", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="DefaultSerializationBinder.cs"];
m1_713 [label="Assert.AreNotSame(executorObject, executorObject2)", span="1517-1517", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="DefaultSerializationBinder.cs"];
m1_712 [label="MethodExecutorObject executorObject2 = JsonConvert.DeserializeObject(output, typeof(MethodExecutorObject)) as MethodExecutorObject", span="1515-1515", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="DefaultSerializationBinder.cs"];
m1_716 [label="CustomAssert.Contains(executorObject2.serverMethodParams, ''101'')", span="1520-1520", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="DefaultSerializationBinder.cs"];
m1_711 [label="string output = JsonConvert.SerializeObject(executorObject)", span="1513-1513", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="DefaultSerializationBinder.cs"];
m1_707 [label="MethodExecutorObject executorObject = new MethodExecutorObject()", span="1508-1508", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="DefaultSerializationBinder.cs"];
m1_710 [label="executorObject.clientGetResultFunction = ''ClientBanSubsCB''", span="1511-1511", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="DefaultSerializationBinder.cs"];
m1_708 [label="executorObject.serverClassName = ''BanSubs''", span="1509-1509", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="DefaultSerializationBinder.cs"];
m1_709 [label="executorObject.serverMethodParams = new object[] { ''21321546'', ''101'', ''1236'', ''D:\\1.txt'' }", span="1510-1510", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="DefaultSerializationBinder.cs"];
m1_718 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", span="1506-1506", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="DefaultSerializationBinder.cs"];
m1_944 [label="Entry Newtonsoft.Json.Tests.TestObjects.ConverableMembers.ConverableMembers()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.ConverableMembers.ConverableMembers()", file="DefaultSerializationBinder.cs"];
m1_2624 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributeDerived.ClassAttributeDerived()", span="5883-5883", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributeDerived.ClassAttributeDerived()", file="DefaultSerializationBinder.cs"];
m1_1920 [label="Entry System.Runtime.Serialization.SerializationInfo.GetDecimal(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetDecimal(string)", file="DefaultSerializationBinder.cs"];
m1_501 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", span="1051-1051", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", file="DefaultSerializationBinder.cs"];
m1_503 [label="var deserialized = JsonConvert.DeserializeObject<Foo1>(json)", span="1054-1054", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", file="DefaultSerializationBinder.cs"];
m1_504 [label="Assert.AreEqual(''value'', deserialized.foo)", span="1055-1055", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", file="DefaultSerializationBinder.cs"];
m1_502 [label="var json = @''{''''foo'''':''''value''''}''", span="1053-1053", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", file="DefaultSerializationBinder.cs"];
m1_505 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", span="1051-1051", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", file="DefaultSerializationBinder.cs"];
m1_2686 [label="Entry Newtonsoft.Json.Tests.TestObjects.UriGuidTimeSpanTestClass.UriGuidTimeSpanTestClass()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.UriGuidTimeSpanTestClass.UriGuidTimeSpanTestClass()", file="DefaultSerializationBinder.cs"];
m1_3030 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="6837-6837", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DefaultSerializationBinder.cs"];
m1_3033 [label="writer.WriteValue('':::'' + fixedColor.ToKnownColor().ToString().ToUpper() + '':::'')", span="6842-6842", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DefaultSerializationBinder.cs"];
m1_3032 [label="Color fixedColor = (color == Color.White || color == Color.Black) ? color : Color.Gray", span="6840-6840", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DefaultSerializationBinder.cs"];
m1_3031 [label="Color color = (Color)value", span="6839-6839", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DefaultSerializationBinder.cs"];
m1_3034 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="6837-6837", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DefaultSerializationBinder.cs"];
m1_646 [label="Entry System.IO.MemoryStream.ToArray()", span="0-0", cluster="System.IO.MemoryStream.ToArray()", file="DefaultSerializationBinder.cs"];
m1_3620 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt16(System.IFormatProvider)", span="8297-8297", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt16(System.IFormatProvider)", file="DefaultSerializationBinder.cs"];
m1_3621 [label="throw new InvalidCastException();", span="8299-8299", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt16(System.IFormatProvider)", file="DefaultSerializationBinder.cs"];
m1_3622 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt16(System.IFormatProvider)", span="8297-8297", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt16(System.IFormatProvider)", file="DefaultSerializationBinder.cs"];
m1_2277 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", span="5075-5075", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="DefaultSerializationBinder.cs"];
m1_2281 [label="StructWithAttribute newStruct = JsonConvert.DeserializeObject<StructWithAttribute>(json)", span="5088-5088", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="DefaultSerializationBinder.cs"];
m1_2282 [label="Assert.AreEqual(int.MaxValue, newStruct.MyInt)", span="5090-5090", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="DefaultSerializationBinder.cs"];
m1_2279 [label="string json = JsonConvert.SerializeObject(testStruct, Formatting.Indented)", span="5082-5082", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="DefaultSerializationBinder.cs"];
m1_2280 [label="StringAssert.AreEqual(@''{\r\n  ''''MyInt'''': 2147483647\r\n}'', json)", span="5084-5086", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="DefaultSerializationBinder.cs"];
m1_2278 [label="StructWithAttribute testStruct = new StructWithAttribute\r\n            {\r\n                MyInt = int.MaxValue\r\n            }", span="5077-5080", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="DefaultSerializationBinder.cs"];
m1_2283 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", span="5075-5075", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="DefaultSerializationBinder.cs"];
m1_1927 [label="Entry System.Runtime.Serialization.SerializationInfo.GetUInt64(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetUInt64(string)", file="DefaultSerializationBinder.cs"];
m1_1282 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", span="2677-2677", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="DefaultSerializationBinder.cs"];
m1_1285 [label="Assert.AreEqual(''value'', c.TestProperty1)", span="2685-2685", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="DefaultSerializationBinder.cs"];
m1_1286 [label="Assert.AreEqual(21, c.TestProperty2)", span="2686-2686", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="DefaultSerializationBinder.cs"];
m1_1288 [label="Assert.AreEqual(''value'', c.TestProperty1)", span="2692-2692", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="DefaultSerializationBinder.cs"];
m1_1289 [label="Assert.AreEqual(21, c.TestProperty2)", span="2693-2693", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="DefaultSerializationBinder.cs"];
m1_1284 [label="ConstructorAndDefaultValueAttributeTestClass c = JsonConvert.DeserializeObject<ConstructorAndDefaultValueAttributeTestClass>(json, new JsonSerializerSettings\r\n            {\r\n                DefaultValueHandling = DefaultValueHandling.Populate\r\n            })", span="2681-2684", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="DefaultSerializationBinder.cs"];
m1_1287 [label="c = JsonConvert.DeserializeObject<ConstructorAndDefaultValueAttributeTestClass>(json, new JsonSerializerSettings\r\n            {\r\n                DefaultValueHandling = DefaultValueHandling.IgnoreAndPopulate\r\n            })", span="2688-2691", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="DefaultSerializationBinder.cs"];
m1_1283 [label="string json = ''{ 'testProperty1': 'value' }''", span="2679-2679", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="DefaultSerializationBinder.cs"];
m1_1290 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", span="2677-2677", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="DefaultSerializationBinder.cs"];
m1_666 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type)", span="728-728", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type)", file="DefaultSerializationBinder.cs"];
m1_1244 [label="Entry Newtonsoft.Json.Tests.TestObjects.Person.Person()", span="36-36", cluster="Newtonsoft.Json.Tests.TestObjects.Person.Person()", file="DefaultSerializationBinder.cs"];
m1_3527 [label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="DefaultSerializationBinder.cs"];
m1_2105 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.XmlNodeTestObject.XmlNodeTestObject()", span="4666-4666", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.XmlNodeTestObject.XmlNodeTestObject()", file="DefaultSerializationBinder.cs"];
m1_2442 [label="Entry Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken)", span="129-129", cluster="Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="DefaultSerializationBinder.cs"];
m1_2494 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", span="5551-5551", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", file="DefaultSerializationBinder.cs"];
m1_2496 [label="Assert.IsNull(dateTime)", span="5555-5555", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", file="DefaultSerializationBinder.cs"];
m1_2495 [label="object dateTime = JsonConvert.DeserializeObject(''null'', typeof(DateTime?))", span="5553-5553", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", file="DefaultSerializationBinder.cs"];
m1_2497 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", span="5551-5551", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", file="DefaultSerializationBinder.cs"];
m1_3210 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", span="7233-7233", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", file="DefaultSerializationBinder.cs"];
m1_3212 [label="Assert.AreEqual(@''{}'', json)", span="7236-7236", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", file="DefaultSerializationBinder.cs"];
m1_3211 [label="string json = JsonConvert.SerializeObject(new IgnoreDataMemberTestClass() { Ignored = int.MaxValue }, Formatting.Indented)", span="7235-7235", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", file="DefaultSerializationBinder.cs"];
m1_3213 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", span="7233-7233", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", file="DefaultSerializationBinder.cs"];
m1_3410 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollectionTest()", span="7795-7795", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollectionTest()", file="DefaultSerializationBinder.cs"];
m1_3411 [label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<NoConstructorReadOnlyCollection<int>>(''[1]''), ''Cannot deserialize readonly or fixed size list: Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+NoConstructorReadOnlyCollection`1[System.Int32]. Path '', line 1, position 1.'')", span="7797-7797", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollectionTest()", file="DefaultSerializationBinder.cs"];
m1_3412 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollectionTest()", span="7795-7795", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollectionTest()", file="DefaultSerializationBinder.cs"];
m1_2798 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", span="6363-6363", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="DefaultSerializationBinder.cs"];
m1_2801 [label="IList<DateTimeOffset?> d2 = JsonConvert.DeserializeObject<IList<DateTimeOffset?>>(json)", span="6369-6369", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="DefaultSerializationBinder.cs"];
m1_2802 [label="Assert.AreEqual(d1.Count, d2.Count)", span="6371-6371", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="DefaultSerializationBinder.cs"];
m1_2803 [label="Assert.AreEqual(d1[0], d2[0])", span="6372-6372", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="DefaultSerializationBinder.cs"];
m1_2800 [label="string json = JsonConvert.SerializeObject(d1)", span="6367-6367", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="DefaultSerializationBinder.cs"];
m1_2799 [label="IList<DateTimeOffset?> d1 = new List<DateTimeOffset?> { null }", span="6365-6365", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="DefaultSerializationBinder.cs"];
m1_2804 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", span="6363-6363", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="DefaultSerializationBinder.cs"];
m1_395 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerProxy.JsonSerializerProxy(Newtonsoft.Json.Serialization.JsonSerializerInternalReader)", span="214-214", cluster="Newtonsoft.Json.Serialization.JsonSerializerProxy.JsonSerializerProxy(Newtonsoft.Json.Serialization.JsonSerializerInternalReader)", file="DefaultSerializationBinder.cs"];
m1_1923 [label="Entry System.Runtime.Serialization.SerializationInfo.GetSByte(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetSByte(string)", file="DefaultSerializationBinder.cs"];
m1_3316 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", span="7499-7499", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="DefaultSerializationBinder.cs"];
m1_3318 [label="var l = JsonConvert.DeserializeObject<IReadOnlyList<int>>(json)", span="7505-7505", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="DefaultSerializationBinder.cs"];
m1_3320 [label="Assert.AreEqual(900, i)", span="7510-7510", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="DefaultSerializationBinder.cs"];
m1_3317 [label="string json = @''[\r\n        900\r\n      ]''", span="7501-7503", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="DefaultSerializationBinder.cs"];
m1_3319 [label="int i = l[0]", span="7507-7507", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="DefaultSerializationBinder.cs"];
m1_3321 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", span="7499-7499", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="DefaultSerializationBinder.cs"];
m1_494 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", span="1042-1042", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", file="DefaultSerializationBinder.cs"];
m1_498 [label="Assert.AreEqual(expectedJson, json)", span="1047-1047", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", file="DefaultSerializationBinder.cs"];
m1_496 [label="var json = JsonConvert.SerializeObject(original)", span="1045-1045", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", file="DefaultSerializationBinder.cs"];
m1_497 [label="var expectedJson = @''{''''foo'''':''''value''''}''", span="1046-1046", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", file="DefaultSerializationBinder.cs"];
m1_495 [label="var original = new Foo1 { foo = ''value'' }", span="1044-1044", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", file="DefaultSerializationBinder.cs"];
m1_499 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", span="1042-1042", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", file="DefaultSerializationBinder.cs"];
m1_2302 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", span="5128-5128", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="DefaultSerializationBinder.cs"];
m1_2304 [label="Assert.AreEqual(''{\''Offset\'':\''\\/Date(946663200000+0600)\\/\''}'', serializeObject)", span="5135-5135", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="DefaultSerializationBinder.cs"];
m1_2309 [label="Assert.AreEqual(TimeSpan.FromHours(6), deserializeObject.Offset.Offset)", span="5144-5144", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="DefaultSerializationBinder.cs"];
m1_2310 [label="Assert.AreEqual(new DateTime(2000, 1, 1), deserializeObject.Offset.Date)", span="5145-5145", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="DefaultSerializationBinder.cs"];
m1_2303 [label="var serializeObject = JsonConvert.SerializeObject(new TimeZoneOffsetObject\r\n            {\r\n                Offset = new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6))\r\n            }, Formatting.None, new JsonSerializerSettings { DateFormatHandling = DateFormatHandling.MicrosoftDateFormat })", span="5130-5133", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="DefaultSerializationBinder.cs"];
m1_2305 [label="JsonTextReader reader = new JsonTextReader(new StringReader(serializeObject))", span="5137-5137", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="DefaultSerializationBinder.cs"];
m1_2308 [label="var deserializeObject = serializer.Deserialize<TimeZoneOffsetObject>(reader)", span="5142-5142", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="DefaultSerializationBinder.cs"];
m1_2306 [label="JsonSerializer serializer = new JsonSerializer()", span="5139-5139", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="DefaultSerializationBinder.cs"];
m1_2307 [label="serializer.DateParseHandling = DateParseHandling.None", span="5140-5140", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="DefaultSerializationBinder.cs"];
m1_2311 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", span="5128-5128", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="DefaultSerializationBinder.cs"];
m1_1122 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", span="2306-2306", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="DefaultSerializationBinder.cs"];
m1_1124 [label="PersonRaw personRaw = JsonConvert.DeserializeObject<PersonRaw>(json)", span="2310-2310", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="DefaultSerializationBinder.cs"];
m1_1125 [label="Assert.AreEqual(''FirstNameValue'', personRaw.FirstName)", span="2312-2312", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="DefaultSerializationBinder.cs"];
m1_1126 [label="Assert.AreEqual(''[1,2,3,4,5]'', personRaw.RawContent.ToString())", span="2313-2313", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="DefaultSerializationBinder.cs"];
m1_1127 [label="Assert.AreEqual(''LastNameValue'', personRaw.LastName)", span="2314-2314", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="DefaultSerializationBinder.cs"];
m1_1123 [label="string json = @''{''''first_name'''':''''FirstNameValue'''',''''RawContent'''':[1,2,3,4,5],''''last_name'''':''''LastNameValue''''}''", span="2308-2308", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="DefaultSerializationBinder.cs"];
m1_1128 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", span="2306-2306", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="DefaultSerializationBinder.cs"];
m1_270 [label="Entry System.Runtime.Serialization.StreamingContext.StreamingContext(System.Runtime.Serialization.StreamingContextStates)", span="0-0", cluster="System.Runtime.Serialization.StreamingContext.StreamingContext(System.Runtime.Serialization.StreamingContextStates)", file="DefaultSerializationBinder.cs"];
m1_2343 [label="Entry Unk.SerializeObject", span="", cluster="Unk.SerializeObject", file="DefaultSerializationBinder.cs"];
m1_2020 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", span="4597-4597", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="DefaultSerializationBinder.cs"];
m1_2057 [label="AA_field1 = f", span="4599-4599", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="DefaultSerializationBinder.cs"];
m1_2058 [label="AA_field2 = f", span="4600-4600", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="DefaultSerializationBinder.cs"];
m1_2059 [label="AA_property1 = f", span="4601-4601", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="DefaultSerializationBinder.cs"];
m1_2060 [label="AA_property2 = f", span="4602-4602", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="DefaultSerializationBinder.cs"];
m1_2061 [label="AA_property3 = f", span="4603-4603", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="DefaultSerializationBinder.cs"];
m1_2062 [label="AA_property4 = f", span="4604-4604", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="DefaultSerializationBinder.cs"];
m1_2063 [label="AA_property5 = f", span="4605-4605", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="DefaultSerializationBinder.cs"];
m1_2064 [label="AA_property6 = f", span="4606-4606", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="DefaultSerializationBinder.cs"];
m1_2065 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", span="4597-4597", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="DefaultSerializationBinder.cs"];
m1_427 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", span="888-888", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="DefaultSerializationBinder.cs"];
m1_428 [label="_serializationInfo == null", span="890-890", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="DefaultSerializationBinder.cs"];
m1_430 [label="_stringValue = _serializationInfo.GetString(''stringValue'')", span="893-893", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="DefaultSerializationBinder.cs"];
m1_431 [label="_intValue = _serializationInfo.GetInt32(''intValue'')", span="894-894", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="DefaultSerializationBinder.cs"];
m1_432 [label="_person1 = (PersonReference)_serializationInfo.GetValue(''person1'', typeof(PersonReference))", span="895-895", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="DefaultSerializationBinder.cs"];
m1_433 [label="_person2 = (PersonReference)_serializationInfo.GetValue(''person2'', typeof(PersonReference))", span="896-896", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="DefaultSerializationBinder.cs"];
m1_434 [label="_person3 = (PersonReference)_serializationInfo.GetValue(''person3'', typeof(PersonReference))", span="897-897", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="DefaultSerializationBinder.cs"];
m1_435 [label="_parent = (PreserveReferencesCallbackTestObject)_serializationInfo.GetValue(''parent'', typeof(PreserveReferencesCallbackTestObject))", span="898-898", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="DefaultSerializationBinder.cs"];
m1_436 [label="_serializationInfo = null", span="900-900", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="DefaultSerializationBinder.cs"];
m1_429 [label="return;", span="891-891", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="DefaultSerializationBinder.cs"];
m1_437 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", span="888-888", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="DefaultSerializationBinder.cs"];
m1_2224 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", span="4946-4946", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="DefaultSerializationBinder.cs"];
m1_2225 [label="string jsonText = JsonConvert.SerializeObject(new double?[] { 2.4, 4.3, null }, Formatting.Indented)", span="4948-4948", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="DefaultSerializationBinder.cs"];
m1_2226 [label="StringAssert.AreEqual(@''[\r\n  2.4,\r\n  4.3,\r\n  null\r\n]'', jsonText)", span="4950-4954", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="DefaultSerializationBinder.cs"];
m1_2227 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", span="4946-4946", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="DefaultSerializationBinder.cs"];
m1_1849 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="DefaultSerializationBinder.cs"];
m1_3133 [label="Entry Newtonsoft.Json.Tests.TestObjects.PropertyItemConverter.PropertyItemConverter()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.PropertyItemConverter.PropertyItemConverter()", file="DefaultSerializationBinder.cs"];
m1_1001 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", span="2098-2098", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="DefaultSerializationBinder.cs"];
m1_1004 [label="ConstructorCaseSensitivityClass deserialized = JsonConvert.DeserializeObject<ConstructorCaseSensitivityClass>(json)", span="2104-2104", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="DefaultSerializationBinder.cs"];
m1_1005 [label="Assert.AreEqual(''param1'', deserialized.param1)", span="2106-2106", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="DefaultSerializationBinder.cs"];
m1_1006 [label="Assert.AreEqual(''Param1'', deserialized.Param1)", span="2107-2107", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="DefaultSerializationBinder.cs"];
m1_1007 [label="Assert.AreEqual(''Param2'', deserialized.Param2)", span="2108-2108", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="DefaultSerializationBinder.cs"];
m1_1003 [label="string json = JsonConvert.SerializeObject(c)", span="2102-2102", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="DefaultSerializationBinder.cs"];
m1_1002 [label="ConstructorCaseSensitivityClass c = new ConstructorCaseSensitivityClass(''param1'', ''Param1'', ''Param2'')", span="2100-2100", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="DefaultSerializationBinder.cs"];
m1_1008 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", span="2098-2098", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="DefaultSerializationBinder.cs"];
m1_1478 [label="Entry System.Console.WriteLine(int)", span="0-0", cluster="System.Console.WriteLine(int)", file="DefaultSerializationBinder.cs"];
m1_2260 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", span="5032-5032", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="DefaultSerializationBinder.cs"];
m1_2270 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<StringDictionaryTestClass>(json); }, ''Cannot create and populate list type '' + classRef + ''. Path 'StringDictionaryProperty', line 2, position 32.'')", span="5060-5060", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="DefaultSerializationBinder.cs"];
m1_2265 [label="StringDictionaryTestClass d = JsonConvert.DeserializeObject<StringDictionaryTestClass>(json)", span="5051-5051", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="DefaultSerializationBinder.cs"];
m1_2266 [label="Assert.AreEqual(3, d.StringDictionaryProperty.Count)", span="5053-5053", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="DefaultSerializationBinder.cs"];
m1_2267 [label="Assert.AreEqual(''One'', d.StringDictionaryProperty[''1''])", span="5054-5054", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="DefaultSerializationBinder.cs"];
m1_2268 [label="Assert.AreEqual(''II'', d.StringDictionaryProperty[''2''])", span="5055-5055", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="DefaultSerializationBinder.cs"];
m1_2269 [label="Assert.AreEqual(''3'', d.StringDictionaryProperty[''3''])", span="5056-5056", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="DefaultSerializationBinder.cs"];
m1_2261 [label="string classRef = typeof(StringDictionary).FullName", span="5034-5034", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="DefaultSerializationBinder.cs"];
m1_2263 [label="string json = JsonConvert.SerializeObject(s1, Formatting.Indented)", span="5046-5046", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="DefaultSerializationBinder.cs"];
m1_2264 [label="s1.StringDictionaryProperty is IDictionary<string, string>", span="5049-5049", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="DefaultSerializationBinder.cs"];
m1_2262 [label="StringDictionaryTestClass s1 = new StringDictionaryTestClass()\r\n            {\r\n                StringDictionaryProperty = new StringDictionary()\r\n                {\r\n                    { ''1'', ''One'' },\r\n                    { ''2'', ''II'' },\r\n                    { ''3'', ''3'' }\r\n                }\r\n            }", span="5036-5044", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="DefaultSerializationBinder.cs"];
m1_2271 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", span="5032-5032", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="DefaultSerializationBinder.cs"];
m1_1785 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", span="3911-3911", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="DefaultSerializationBinder.cs"];
m1_1792 [label="CircularConstructor1 newC1 = JsonConvert.DeserializeObject<CircularConstructor1>(@''{\r\n  ''''C2'''': {\r\n    ''''IntProperty'''': 1,\r\n    ''''C1'''': {}\r\n  },\r\n  ''''StringProperty'''': ''''Value!''''\r\n}'')", span="3939-3945", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="DefaultSerializationBinder.cs"];
m1_1793 [label="Assert.AreEqual(''Value!'', newC1.StringProperty)", span="3947-3947", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="DefaultSerializationBinder.cs"];
m1_1794 [label="Assert.AreEqual(1, newC1.C2.IntProperty)", span="3948-3948", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="DefaultSerializationBinder.cs"];
m1_1795 [label="Assert.AreEqual(null, newC1.C2.C1.StringProperty)", span="3949-3949", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="DefaultSerializationBinder.cs"];
m1_1796 [label="Assert.AreEqual(null, newC1.C2.C1.C2)", span="3950-3950", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="DefaultSerializationBinder.cs"];
m1_1791 [label="StringAssert.AreEqual(@''{\r\n  ''''C2'''': {\r\n    ''''IntProperty'''': 1\r\n  },\r\n  ''''StringProperty'''': ''''Value!''''\r\n}'', json)", span="3932-3937", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="DefaultSerializationBinder.cs"];
m1_1790 [label="string json = JsonConvert.SerializeObject(c1, new JsonSerializerSettings\r\n            {\r\n                ReferenceLoopHandling = ReferenceLoopHandling.Ignore,\r\n                Formatting = Formatting.Indented\r\n            })", span="3926-3930", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="DefaultSerializationBinder.cs"];
m1_1786 [label="CircularConstructor1 c1 = new CircularConstructor1(null)\r\n            {\r\n                StringProperty = ''Value!''\r\n            }", span="3913-3916", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="DefaultSerializationBinder.cs"];
m1_1789 [label="c2.C1 = c1", span="3924-3924", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="DefaultSerializationBinder.cs"];
m1_1787 [label="CircularConstructor2 c2 = new CircularConstructor2(null)\r\n            {\r\n                IntProperty = 1\r\n            }", span="3918-3921", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="DefaultSerializationBinder.cs"];
m1_1788 [label="c1.C2 = c2", span="3923-3923", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="DefaultSerializationBinder.cs"];
m1_1797 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", span="3911-3911", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="DefaultSerializationBinder.cs"];
m1_969 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", span="2044-2044", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="DefaultSerializationBinder.cs"];
m1_973 [label="ClassWithGuid c = JsonConvert.DeserializeObject<ClassWithGuid>(json)", span="2051-2051", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="DefaultSerializationBinder.cs"];
m1_974 [label="Assert.AreEqual(guid, c.GuidField)", span="2052-2052", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="DefaultSerializationBinder.cs"];
m1_972 [label="Assert.AreEqual(@''{''''GuidField'''':''''bed7f4ea-1a96-11d2-8f08-00a0c9a6186d''''}'', json)", span="2049-2049", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="DefaultSerializationBinder.cs"];
m1_971 [label="string json = JsonConvert.SerializeObject(new ClassWithGuid { GuidField = guid })", span="2048-2048", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="DefaultSerializationBinder.cs"];
m1_970 [label="Guid guid = new Guid(''BED7F4EA-1A96-11d2-8F08-00A0C9A6186D'')", span="2046-2046", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="DefaultSerializationBinder.cs"];
m1_975 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", span="2044-2044", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="DefaultSerializationBinder.cs"];
m1_3807 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.EncodingReadConverter()", span="8832-8832", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.EncodingReadConverter()", file="DefaultSerializationBinder.cs"];
m1_2390 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", span="5310-5310", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", file="DefaultSerializationBinder.cs"];
m1_2391 [label="IDoWork = doWork", span="5313-5313", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", file="DefaultSerializationBinder.cs"];
m1_2392 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", span="5310-5310", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", file="DefaultSerializationBinder.cs"];
m1_2967 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", span="6684-6684", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", file="DefaultSerializationBinder.cs"];
m1_2968 [label="ExceptionAssert.Throws<ArgumentNullException>(\r\n                () => { JsonConvert.DeserializeObject(null); },\r\n                new [] { \r\n                    ''Value cannot be null.'' + Environment.NewLine + ''Parameter name: value'',\r\n                    ''Argument cannot be null.'' + Environment.NewLine + ''Parameter name: value'' // mono\r\n                })", span="6686-6691", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", file="DefaultSerializationBinder.cs"];
m1_2969 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", span="6684-6684", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", file="DefaultSerializationBinder.cs"];
m1_2557 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObject.ChildWithDifferentOverrideObject()", span="5739-5739", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObject.ChildWithDifferentOverrideObject()", file="DefaultSerializationBinder.cs"];
m1_2849 [label="Entry Newtonsoft.Json.Tests.TestObjects.Widget.Widget()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.Widget.Widget()", file="DefaultSerializationBinder.cs"];
m1_880 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", span="1882-1882", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", file="DefaultSerializationBinder.cs"];
m1_882 [label="Assert.AreEqual(''{}'', json)", span="1885-1885", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", file="DefaultSerializationBinder.cs"];
m1_881 [label="string json = JsonConvert.SerializeObject(new object())", span="1884-1884", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", file="DefaultSerializationBinder.cs"];
m1_883 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", span="1882-1882", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", file="DefaultSerializationBinder.cs"];
m1_2092 [label="Entry Unk.Parse", span="", cluster="Unk.Parse", file="DefaultSerializationBinder.cs"];
m1_1372 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClass.OptInClass()", span="2854-2854", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClass.OptInClass()", file="DefaultSerializationBinder.cs"];
m1_1036 [label="Entry System.DateTime.DateTime(long, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(long, System.DateTimeKind)", file="DefaultSerializationBinder.cs"];
m1_2211 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", span="4918-4918", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", file="DefaultSerializationBinder.cs"];
m1_2212 [label="return new DictionaryKey() { Value = value };", span="4920-4920", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", file="DefaultSerializationBinder.cs"];
m1_2213 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", span="4918-4918", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", file="DefaultSerializationBinder.cs"];
m1_2529 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", span="5685-5685", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="DefaultSerializationBinder.cs"];
m1_2531 [label="string result = JsonConvert.SerializeObject(cc, Formatting.Indented)", span="5693-5693", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="DefaultSerializationBinder.cs"];
m1_2532 [label="Console.WriteLine(result)", span="5700-5700", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="DefaultSerializationBinder.cs"];
m1_2530 [label="ChildDataContract cc = new ChildDataContract\r\n            {\r\n                VirtualMember = ''VirtualMember!'',\r\n                NonVirtualMember = ''NonVirtualMember!''\r\n            }", span="5687-5691", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="DefaultSerializationBinder.cs"];
m1_2533 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", span="5685-5685", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="DefaultSerializationBinder.cs"];
m1_2528 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableArrayPropertyClass.EnumerableArrayPropertyClass()", span="5648-5648", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableArrayPropertyClass.EnumerableArrayPropertyClass()", file="DefaultSerializationBinder.cs"];
m1_2747 [label="Entry Newtonsoft.Json.JsonWriter.Flush()", span="344-344", cluster="Newtonsoft.Json.JsonWriter.Flush()", file="DefaultSerializationBinder.cs"];
m1_1453 [label="Entry Newtonsoft.Json.Tests.TestObjects.Content.Content()", span="31-31", cluster="Newtonsoft.Json.Tests.TestObjects.Content.Content()", file="DefaultSerializationBinder.cs"];
m1_1821 [label="Entry System.TimeSpan.TimeSpan(int, int, int, int, int)", span="0-0", cluster="System.TimeSpan.TimeSpan(int, int, int, int, int)", file="DefaultSerializationBinder.cs"];
m1_2052 [label="Entry System.Type.GetField(string, System.Reflection.BindingFlags)", span="0-0", cluster="System.Type.GetField(string, System.Reflection.BindingFlags)", file="DefaultSerializationBinder.cs"];
m1_3074 [label="Entry Newtonsoft.Json.Bson.BsonWriter.WriteValue(string)", span="265-265", cluster="Newtonsoft.Json.Bson.BsonWriter.WriteValue(string)", file="DefaultSerializationBinder.cs"];
m1_2248 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", span="5009-5009", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="DefaultSerializationBinder.cs"];
m1_2255 [label="Assert.AreEqual(2, z.Length)", span="5020-5020", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="DefaultSerializationBinder.cs"];
m1_2256 [label="Assert.AreEqual(0, z[0].Prop1.Length)", span="5021-5021", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="DefaultSerializationBinder.cs"];
m1_2257 [label="Assert.AreEqual(0, z[1].Prop1.Length)", span="5022-5022", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="DefaultSerializationBinder.cs"];
m1_2254 [label="MyClass[] z = (MyClass[])serializer1.Deserialize(reader, typeof(MyClass[]))", span="5019-5019", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="DefaultSerializationBinder.cs"];
m1_2249 [label="JsonSerializer serializer1 = new JsonSerializer()", span="5011-5011", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="DefaultSerializationBinder.cs"];
m1_2253 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="5017-5017", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="DefaultSerializationBinder.cs"];
m1_2250 [label="serializer1.Converters.Add(new IsoDateTimeConverter())", span="5012-5012", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="DefaultSerializationBinder.cs"];
m1_2251 [label="serializer1.NullValueHandling = NullValueHandling.Ignore", span="5013-5013", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="DefaultSerializationBinder.cs"];
m1_2252 [label="string json = @''[{''''Prop1'''':''''''''},{''''Prop1'''':''''''''}]''", span="5015-5015", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="DefaultSerializationBinder.cs"];
m1_2258 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", span="5009-5009", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="DefaultSerializationBinder.cs"];
m1_934 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", span="1960-1960", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="DefaultSerializationBinder.cs"];
m1_939 [label="ConverableMembers c = JsonConvert.DeserializeObject<ConverableMembers>(json)", span="2002-2002", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="DefaultSerializationBinder.cs"];
m1_940 [label="Assert.AreEqual(''string'', c.String)", span="2003-2003", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="DefaultSerializationBinder.cs"];
m1_941 [label="Assert.AreEqual(double.MaxValue, c.Double)", span="2004-2004", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="DefaultSerializationBinder.cs"];
m1_942 [label="Assert.AreEqual(DBNull.Value, c.DBNull)", span="2006-2006", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="DefaultSerializationBinder.cs"];
m1_936 [label="string expected = null", span="1964-1964", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="DefaultSerializationBinder.cs"];
m1_935 [label="string json = JsonConvert.SerializeObject(new ConverableMembers(), Formatting.Indented)", span="1962-1962", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="DefaultSerializationBinder.cs"];
m1_938 [label="StringAssert.AreEqual(expected, json)", span="2000-2000", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="DefaultSerializationBinder.cs"];
m1_937 [label="expected = @''{\r\n  ''''String'''': ''''string'''',\r\n  ''''Int32'''': 2147483647,\r\n  ''''UInt32'''': 4294967295,\r\n  ''''Byte'''': 255,\r\n  ''''SByte'''': 127,\r\n  ''''Short'''': 32767,\r\n  ''''UShort'''': 65535,\r\n  ''''Long'''': 9223372036854775807,\r\n  ''''ULong'''': 9223372036854775807,\r\n  ''''Double'''': 1.7976931348623157E+308,\r\n  ''''Float'''': 3.40282347E+38,\r\n  ''''DBNull'''': null,\r\n  ''''Bool'''': true,\r\n  ''''Char'''': ''''\u0000''''\r\n}''", span="1966-1981", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="DefaultSerializationBinder.cs"];
m1_943 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", span="1960-1960", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="DefaultSerializationBinder.cs"];
m1_1424 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", span="3036-3036", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="DefaultSerializationBinder.cs"];
m1_1427 [label="Shortie s = JsonConvert.DeserializeObject<Shortie>(o[''short''].ToString())", span="3052-3052", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="DefaultSerializationBinder.cs"];
m1_1429 [label="Assert.AreEqual(s.Original, ''http://www.contrast.ie/blog/online&#45;marketing&#45;2009/'')", span="3055-3055", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="DefaultSerializationBinder.cs"];
m1_1430 [label="Assert.AreEqual(s.Short, ''m2sqc6'')", span="3056-3056", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="DefaultSerializationBinder.cs"];
m1_1431 [label="Assert.AreEqual(s.Shortened, ''http://short.ie/m2sqc6'')", span="3057-3057", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="DefaultSerializationBinder.cs"];
m1_1426 [label="JObject o = JObject.Parse(json)", span="3050-3050", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="DefaultSerializationBinder.cs"];
m1_1428 [label="Assert.IsNotNull(s)", span="3053-3053", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="DefaultSerializationBinder.cs"];
m1_1425 [label="string json = @''{\r\n  ''''short'''': {\r\n    ''''original'''': ''''http://www.contrast.ie/blog/online&#45;marketing&#45;2009/'''',\r\n    ''''short'''': ''''m2sqc6'''',\r\n    ''''shortened'''': ''''http://short.ie/m2sqc6'''',\r\n    ''''error'''': {\r\n      ''''code'''': 0,\r\n      ''''msg'''': ''''No action taken''''\r\n    }\r\n  }\r\n}''", span="3038-3048", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="DefaultSerializationBinder.cs"];
m1_1432 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", span="3036-3036", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="DefaultSerializationBinder.cs"];
m1_2780 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", span="6323-6323", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="DefaultSerializationBinder.cs"];
m1_2786 [label="DecimalTestClass c = JsonConvert.DeserializeObject<DecimalTestClass>(json)", span="6336-6336", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="DefaultSerializationBinder.cs"];
m1_2787 [label="Assert.AreEqual(1.5m, c.Quantity)", span="6338-6338", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="DefaultSerializationBinder.cs"];
m1_2788 [label="Assert.AreEqual(2.2d, c.OptionalQuantity)", span="6339-6339", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="DefaultSerializationBinder.cs"];
m1_2785 [label="string json = @''{ 'Quantity': '1.5', 'OptionalQuantity': '2.2' }''", span="6334-6334", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="DefaultSerializationBinder.cs"];
m1_2784 [label="Thread.CurrentThread.CurrentUICulture = testCulture", span="6332-6332", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="DefaultSerializationBinder.cs"];
m1_2782 [label="CultureInfo testCulture = CultureInfo.CreateSpecificCulture(''nb-NO'')", span="6329-6329", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="DefaultSerializationBinder.cs"];
m1_2783 [label="Thread.CurrentThread.CurrentCulture = testCulture", span="6331-6331", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="DefaultSerializationBinder.cs"];
m1_2781 [label="CultureInfo initialCulture = Thread.CurrentThread.CurrentCulture", span="6325-6325", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="DefaultSerializationBinder.cs"];
m1_2789 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", span="6323-6323", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="DefaultSerializationBinder.cs"];
m1_1255 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", span="2598-2598", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="DefaultSerializationBinder.cs"];
m1_1262 [label="GenericListAndDictionaryInterfaceProperties deserializedObject = JsonConvert.DeserializeObject<GenericListAndDictionaryInterfaceProperties>(json)", span="2636-2636", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="DefaultSerializationBinder.cs"];
m1_1264 [label="CollectionAssert.AreEqual(o.IListProperty.ToArray(), deserializedObject.IListProperty.ToArray())", span="2639-2639", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="DefaultSerializationBinder.cs"];
m1_1265 [label="CollectionAssert.AreEqual(o.IEnumerableProperty.ToArray(), deserializedObject.IEnumerableProperty.ToArray())", span="2640-2640", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="DefaultSerializationBinder.cs"];
m1_1266 [label="CollectionAssert.AreEqual(o.IDictionaryProperty.ToArray(), deserializedObject.IDictionaryProperty.ToArray())", span="2641-2641", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="DefaultSerializationBinder.cs"];
m1_1261 [label="Assert.AreEqual(@''{\r\n  ''''IEnumerableProperty'''': [\r\n    4,\r\n    5,\r\n    6\r\n  ],\r\n  ''''IListProperty'''': [\r\n    1,\r\n    2,\r\n    3\r\n  ],\r\n  ''''IDictionaryProperty'''': {\r\n    ''''one'''': 1,\r\n    ''''two'''': 2,\r\n    ''''three'''': 3\r\n  }\r\n}'', json)", span="2618-2634", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="DefaultSerializationBinder.cs"];
m1_1260 [label="string json = JsonConvert.SerializeObject(o, Formatting.Indented)", span="2616-2616", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="DefaultSerializationBinder.cs"];
m1_1263 [label="Assert.IsNotNull(deserializedObject)", span="2637-2637", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="DefaultSerializationBinder.cs"];
m1_1256 [label="GenericListAndDictionaryInterfaceProperties o = new GenericListAndDictionaryInterfaceProperties()", span="2600-2600", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="DefaultSerializationBinder.cs"];
m1_1259 [label="o.IEnumerableProperty = new List<int>\r\n            {\r\n                4, 5, 6\r\n            }", span="2611-2614", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="DefaultSerializationBinder.cs"];
m1_1257 [label="o.IDictionaryProperty = new Dictionary<string, int>\r\n            {\r\n                { ''one'', 1 },\r\n                { ''two'', 2 },\r\n                { ''three'', 3 }\r\n            }", span="2601-2606", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="DefaultSerializationBinder.cs"];
m1_1258 [label="o.IListProperty = new List<int>\r\n            {\r\n                1, 2, 3\r\n            }", span="2607-2610", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="DefaultSerializationBinder.cs"];
m1_1267 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", span="2598-2598", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="DefaultSerializationBinder.cs"];
m1_2715 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", span="6189-6189", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="DefaultSerializationBinder.cs"];
m1_2719 [label="Uri output = JsonConvert.DeserializeObject<Uri>(json)", span="6194-6194", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="DefaultSerializationBinder.cs"];
m1_2720 [label="Assert.AreEqual(uri, output)", span="6196-6196", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="DefaultSerializationBinder.cs"];
m1_2718 [label="string json = JsonConvert.SerializeObject(uri)", span="6193-6193", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="DefaultSerializationBinder.cs"];
m1_2717 [label="Uri uri = new Uri(input)", span="6192-6192", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="DefaultSerializationBinder.cs"];
m1_2716 [label="string input = ''http://test.com/%22foo+bar%22''", span="6191-6191", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="DefaultSerializationBinder.cs"];
m1_2721 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", span="6189-6189", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="DefaultSerializationBinder.cs"];
m1_3806 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.AttachmentReadConverter()", span="8797-8797", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.AttachmentReadConverter()", file="DefaultSerializationBinder.cs"];
m1_3608 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt64(System.IFormatProvider)", span="8277-8277", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt64(System.IFormatProvider)", file="DefaultSerializationBinder.cs"];
m1_3609 [label="return (long)Value;", span="8279-8279", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt64(System.IFormatProvider)", file="DefaultSerializationBinder.cs"];
m1_3610 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt64(System.IFormatProvider)", span="8277-8277", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt64(System.IFormatProvider)", file="DefaultSerializationBinder.cs"];
m1_2115 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDouble.PosDouble()", span="4750-4750", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDouble.PosDouble()", file="DefaultSerializationBinder.cs"];
m1_1349 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", span="2821-2821", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="DefaultSerializationBinder.cs"];
m1_1351 [label="RequestOnly r = JsonConvert.DeserializeObject<RequestOnly>(json)", span="2841-2841", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="DefaultSerializationBinder.cs"];
m1_1353 [label="NonRequest n = JsonConvert.DeserializeObject<NonRequest>(json)", span="2844-2844", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="DefaultSerializationBinder.cs"];
m1_1352 [label="Assert.AreEqual(''ux.settings.update'', r.Request)", span="2842-2842", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="DefaultSerializationBinder.cs"];
m1_1354 [label="Assert.AreEqual(new Guid(''14c561bd-32a8-457e-b4e5-4bba0832897f''), n.Sid)", span="2845-2845", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="DefaultSerializationBinder.cs"];
m1_1355 [label="Assert.AreEqual(new Guid(''30c39065-0f31-de11-9442-001e3786a8ec''), n.Uid)", span="2846-2846", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="DefaultSerializationBinder.cs"];
m1_1356 [label="Assert.AreEqual(8, n.FidOrder.Count)", span="2847-2847", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="DefaultSerializationBinder.cs"];
m1_1357 [label="Assert.AreEqual(''id'', n.FidOrder[0])", span="2848-2848", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="DefaultSerializationBinder.cs"];
m1_1358 [label="Assert.AreEqual(''titleId'', n.FidOrder[n.FidOrder.Count - 1])", span="2849-2849", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="DefaultSerializationBinder.cs"];
m1_1350 [label="string json = @''{\r\n    ''''request'''': ''''ux.settings.update'''',\r\n    ''''sid'''': ''''14c561bd-32a8-457e-b4e5-4bba0832897f'''',\r\n    ''''uid'''': ''''30c39065-0f31-de11-9442-001e3786a8ec'''',\r\n    ''''fidOrder'''': [\r\n        ''''id'''',\r\n        ''''andytest_name'''',\r\n        ''''andytest_age'''',\r\n        ''''andytest_address'''',\r\n        ''''andytest_phone'''',\r\n        ''''date'''',\r\n        ''''title'''',\r\n        ''''titleId''''\r\n    ],\r\n    ''''entityName'''': ''''Andy Test'''',\r\n    ''''setting'''': ''''entity.field.order''''\r\n}''", span="2823-2839", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="DefaultSerializationBinder.cs"];
m1_1359 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", span="2821-2821", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="DefaultSerializationBinder.cs"];
m1_3519 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", span="8090-8090", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="DefaultSerializationBinder.cs"];
m1_3522 [label="Dictionary<Size, Size> d = JsonConvert.DeserializeObject<Dictionary<Size, Size>>(json)", span="8098-8098", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="DefaultSerializationBinder.cs"];
m1_3521 [label="Assert.AreEqual(@''{''''1, 2'''':''''3, 4''''}'', json)", span="8096-8096", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="DefaultSerializationBinder.cs"];
m1_3523 [label="Assert.AreEqual(new Size(1, 2), d.Keys.First())", span="8100-8100", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="DefaultSerializationBinder.cs"];
m1_3524 [label="Assert.AreEqual(new Size(3, 4), d.Values.First())", span="8101-8101", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="DefaultSerializationBinder.cs"];
m1_3520 [label="string json = JsonConvert.SerializeObject(\r\n                new Dictionary<Size, Size> { { new Size(1, 2), new Size(3, 4) } }\r\n                )", span="8092-8094", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="DefaultSerializationBinder.cs"];
m1_3525 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", span="8090-8090", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="DefaultSerializationBinder.cs"];
m1_2412 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", span="5398-5398", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="DefaultSerializationBinder.cs"];
m1_2421 [label="Assert.AreEqual(deserialized.Foo1.Name, ''foo 1'')", span="5411-5411", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="DefaultSerializationBinder.cs"];
m1_2422 [label="Assert.AreEqual(deserialized.Foo2.Value.Name, ''foo 2'')", span="5412-5412", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="DefaultSerializationBinder.cs"];
m1_2425 [label="Assert.AreEqual(deserialized.Foo1.Name, ''foo 1'')", span="5417-5417", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="DefaultSerializationBinder.cs"];
m1_2426 [label="Assert.AreEqual(deserialized.Foo2, null)", span="5418-5418", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="DefaultSerializationBinder.cs"];
m1_2420 [label="NullableStructPropertyClass deserialized = deserialize(s)", span="5410-5410", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="DefaultSerializationBinder.cs"];
m1_2423 [label="s = JsonConvert.SerializeObject(barWithNull)", span="5415-5415", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="DefaultSerializationBinder.cs"];
m1_2424 [label="deserialized = deserialize(s)", span="5416-5416", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="DefaultSerializationBinder.cs"];
m1_2419 [label="string s = JsonConvert.SerializeObject(nullableStructPropertyClass)", span="5409-5409", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="DefaultSerializationBinder.cs"];
m1_2416 [label="NullableStructPropertyClass barWithNull = new NullableStructPropertyClass()", span="5404-5404", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="DefaultSerializationBinder.cs"];
m1_2413 [label="NullableStructPropertyClass nullableStructPropertyClass = new NullableStructPropertyClass()", span="5400-5400", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="DefaultSerializationBinder.cs"];
m1_2418 [label="barWithNull.Foo2 = null", span="5406-5406", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="DefaultSerializationBinder.cs"];
m1_2415 [label="nullableStructPropertyClass.Foo2 = new StructISerializable() { Name = ''foo 2'' }", span="5402-5402", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="DefaultSerializationBinder.cs"];
m1_2417 [label="barWithNull.Foo1 = new StructISerializable() { Name = ''foo 1'' }", span="5405-5405", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="DefaultSerializationBinder.cs"];
m1_2414 [label="nullableStructPropertyClass.Foo1 = new StructISerializable() { Name = ''foo 1'' }", span="5401-5401", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="DefaultSerializationBinder.cs"];
m1_2427 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", span="5398-5398", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="DefaultSerializationBinder.cs"];
m1_1163 [label="Entry Newtonsoft.Json.Tests.TestObjects.TypeClass.TypeClass()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.TypeClass.TypeClass()", file="DefaultSerializationBinder.cs"];
m1_1144 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", span="2348-2348", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="DefaultSerializationBinder.cs"];
m1_1146 [label="DoubleClass c = JsonConvert.DeserializeObject<DoubleClass>(json)", span="2352-2352", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="DefaultSerializationBinder.cs"];
m1_1147 [label="Assert.AreEqual(1, c.Height)", span="2353-2353", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="DefaultSerializationBinder.cs"];
m1_1145 [label="string json = @''{''''Height'''':1}''", span="2350-2350", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="DefaultSerializationBinder.cs"];
m1_1148 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", span="2348-2348", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="DefaultSerializationBinder.cs"];
m1_3785 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", span="8673-8673", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", file="DefaultSerializationBinder.cs"];
m1_3787 [label="var d = JsonConvert.DeserializeObject<DerivedWithPrivate>(json)", span="8680-8680", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", file="DefaultSerializationBinder.cs"];
m1_3788 [label="Assert.AreEqual(''base'', d.BaseProperty)", span="8682-8682", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", file="DefaultSerializationBinder.cs"];
m1_3789 [label="Assert.AreEqual(''derived'', d.DerivedProperty)", span="8683-8683", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", file="DefaultSerializationBinder.cs"];
m1_3786 [label="string json = @''{\r\n  ''''DerivedProperty'''': ''''derived'''',\r\n  ''''BaseProperty'''': ''''base''''\r\n}''", span="8675-8678", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", file="DefaultSerializationBinder.cs"];
m1_3790 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", span="8673-8673", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", file="DefaultSerializationBinder.cs"];
m1_2443 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", span="5458-5458", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", file="DefaultSerializationBinder.cs"];
m1_2447 [label="Assert.AreEqual(decimal.MinValue, obj.Value)", span="5464-5464", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", file="DefaultSerializationBinder.cs"];
m1_2446 [label="var obj = JsonConvert.DeserializeObject<DecimalTest>(json, new JsonSerializerSettings { MetadataPropertyHandling = MetadataPropertyHandling.Default })", span="5462-5462", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", file="DefaultSerializationBinder.cs"];
m1_2445 [label="var json = JsonConvert.SerializeObject(data)", span="5461-5461", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", file="DefaultSerializationBinder.cs"];
m1_2444 [label="var data = new DecimalTest(decimal.MinValue)", span="5460-5460", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", file="DefaultSerializationBinder.cs"];
m1_2448 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", span="5458-5458", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", file="DefaultSerializationBinder.cs"];
m1_2108 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", span="4726-4726", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="DefaultSerializationBinder.cs"];
m1_2111 [label="Assert.AreEqual(''{\''position\'':new Pos(100,200),\''center\'':new PosD(251.6,361.3)}'', json)", span="4735-4735", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="DefaultSerializationBinder.cs"];
m1_2110 [label="string json = JsonConvert.SerializeObject(source, new PosConverter(), new PosDoubleConverter())", span="4734-4734", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="DefaultSerializationBinder.cs"];
m1_2109 [label="ClientMap source = new ClientMap()\r\n            {\r\n                position = new Pos() { X = 100, Y = 200 },\r\n                center = new PosDouble() { X = 251.6, Y = 361.3 }\r\n            }", span="4728-4732", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="DefaultSerializationBinder.cs"];
m1_2112 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", span="4726-4726", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="DefaultSerializationBinder.cs"];
m1_1831 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="DefaultSerializationBinder.cs"];
m1_2699 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", span="6170-6170", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="DefaultSerializationBinder.cs"];
m1_2707 [label="Assert.AreEqual(@''{''''p'''':1}'', result)", span="6184-6184", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="DefaultSerializationBinder.cs"];
m1_2706 [label="string result = sw.ToString()", span="6183-6183", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="DefaultSerializationBinder.cs"];
m1_2702 [label="var sw = new StringWriter()", span="6177-6177", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="DefaultSerializationBinder.cs"];
m1_2705 [label="jw.Flush()", span="6181-6181", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="DefaultSerializationBinder.cs"];
m1_2701 [label="var json = JObject.FromObject(o)", span="6175-6175", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="DefaultSerializationBinder.cs"];
m1_2703 [label="var jw = new JsonTextWriter(sw)", span="6178-6178", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="DefaultSerializationBinder.cs"];
m1_2704 [label="jw.WriteToken(json.CreateReader())", span="6180-6180", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="DefaultSerializationBinder.cs"];
m1_2700 [label="object o = new { p = 1 }", span="6173-6173", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="DefaultSerializationBinder.cs"];
m1_2708 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", span="6170-6170", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="DefaultSerializationBinder.cs"];
m1_3035 [label="Entry Unk.ToKnownColor", span="", cluster="Unk.ToKnownColor", file="DefaultSerializationBinder.cs"];
m1_2113 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClientMap.ClientMap()", span="4738-4738", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClientMap.ClientMap()", file="DefaultSerializationBinder.cs"];
m1_1269 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="DefaultSerializationBinder.cs"];
m1_3805 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.MailAddressReadConverter()", span="8763-8763", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.MailAddressReadConverter()", file="DefaultSerializationBinder.cs"];
m1_3745 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstantTestClass.ConstantTestClass()", span="8572-8572", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstantTestClass.ConstantTestClass()", file="DefaultSerializationBinder.cs"];
m1_3827 [label="Entry System.Net.Mail.MailAddress.MailAddress(string)", span="0-0", cluster="System.Net.Mail.MailAddress.MailAddress(string)", file="DefaultSerializationBinder.cs"];
m1_1916 [label="Entry System.Runtime.Serialization.SerializationInfo.GetBoolean(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetBoolean(string)", file="DefaultSerializationBinder.cs"];
m1_585 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractWithHidden.ChildDataContractWithHidden()", span="1160-1160", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractWithHidden.ChildDataContractWithHidden()", file="DefaultSerializationBinder.cs"];
m1_1867 [label="Entry System.Collections.Generic.ICollection<T>.Remove(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Remove(T)", file="DefaultSerializationBinder.cs"];
m1_1858 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", span="4127-4127", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="DefaultSerializationBinder.cs"];
m1_1862 [label="this[entry.Key] = entry.Value", span="4136-4136", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="DefaultSerializationBinder.cs"];
m1_1861 [label=dictionary, span="4134-4134", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="DefaultSerializationBinder.cs"];
m1_1859 [label="dictionary == null", span="4129-4129", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="DefaultSerializationBinder.cs"];
m1_1860 [label="return;", span="4131-4131", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="DefaultSerializationBinder.cs"];
m1_1863 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", span="4127-4127", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="DefaultSerializationBinder.cs"];
m1_2316 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", span="5171-5171", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", file="DefaultSerializationBinder.cs"];
m1_2317 [label="string json = JsonConvert.SerializeObject(new DerivedEvent(), Formatting.Indented)", span="5173-5173", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", file="DefaultSerializationBinder.cs"];
m1_2318 [label="StringAssert.AreEqual(@''{\r\n  ''''event'''': ''''derived''''\r\n}'', json)", span="5175-5177", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", file="DefaultSerializationBinder.cs"];
m1_2319 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", span="5171-5171", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", file="DefaultSerializationBinder.cs"];
m1_1581 [label="Entry Newtonsoft.Json.JsonConvert.PopulateObject(string, object)", span="924-924", cluster="Newtonsoft.Json.JsonConvert.PopulateObject(string, object)", file="DefaultSerializationBinder.cs"];
m1_3824 [label="Entry Newtonsoft.Json.Linq.JObject.TryGetValue(string, System.StringComparison, out Newtonsoft.Json.Linq.JToken)", span="465-465", cluster="Newtonsoft.Json.Linq.JObject.TryGetValue(string, System.StringComparison, out Newtonsoft.Json.Linq.JToken)", file="DefaultSerializationBinder.cs"];
m1_899 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", span="1910-1910", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="DefaultSerializationBinder.cs"];
m1_901 [label="ClassWithArray wibble = JsonConvert.DeserializeObject<ClassWithArray>(json)", span="1913-1913", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="DefaultSerializationBinder.cs"];
m1_902 [label="Assert.AreEqual(''hello'', wibble.Foo)", span="1914-1914", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="DefaultSerializationBinder.cs"];
m1_903 [label="Assert.AreEqual(4, wibble.Bar.Count)", span="1916-1916", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="DefaultSerializationBinder.cs"];
m1_904 [label="Assert.AreEqual(int.MaxValue, wibble.Bar[0])", span="1917-1917", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="DefaultSerializationBinder.cs"];
m1_905 [label="Assert.AreEqual(1, wibble.Bar[1])", span="1918-1918", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="DefaultSerializationBinder.cs"];
m1_906 [label="Assert.AreEqual(2, wibble.Bar[2])", span="1919-1919", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="DefaultSerializationBinder.cs"];
m1_907 [label="Assert.AreEqual(3, wibble.Bar[3])", span="1920-1920", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="DefaultSerializationBinder.cs"];
m1_900 [label="string json = ''{bar:[1,2,3], foo:'hello'}''", span="1912-1912", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="DefaultSerializationBinder.cs"];
m1_908 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", span="1910-1910", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="DefaultSerializationBinder.cs"];
m1_747 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", span="1571-1571", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="DefaultSerializationBinder.cs"];
m1_750 [label="JsonIgnoreAttributeTestClass c = JsonConvert.DeserializeObject<JsonIgnoreAttributeTestClass>(@''{''''Field'''':99,''''Property'''':-1,''''IgnoredField'''':-1,''''IgnoredObject'''':[1,2,3,4,5]}'')", span="1577-1577", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="DefaultSerializationBinder.cs"];
m1_749 [label="Assert.AreEqual(@''{''''Field'''':0,''''Property'''':21}'', json)", span="1575-1575", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="DefaultSerializationBinder.cs"];
m1_751 [label="Assert.AreEqual(0, c.IgnoredField)", span="1579-1579", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="DefaultSerializationBinder.cs"];
m1_752 [label="Assert.AreEqual(99, c.Field)", span="1580-1580", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="DefaultSerializationBinder.cs"];
m1_748 [label="string json = JsonConvert.SerializeObject(new JsonIgnoreAttributeTestClass())", span="1573-1573", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="DefaultSerializationBinder.cs"];
m1_753 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", span="1571-1571", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="DefaultSerializationBinder.cs"];
m1_1441 [label="Entry System.Uri.ToString()", span="0-0", cluster="System.Uri.ToString()", file="DefaultSerializationBinder.cs"];
m1_2228 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", span="4958-4958", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="DefaultSerializationBinder.cs"];
m1_2230 [label="Assert.AreEqual(3, d.Length)", span="4966-4966", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="DefaultSerializationBinder.cs"];
m1_2231 [label="Assert.AreEqual(2.4, d[0])", span="4967-4967", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="DefaultSerializationBinder.cs"];
m1_2232 [label="Assert.AreEqual(4.3, d[1])", span="4968-4968", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="DefaultSerializationBinder.cs"];
m1_2233 [label="Assert.AreEqual(null, d[2])", span="4969-4969", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="DefaultSerializationBinder.cs"];
m1_2229 [label="double?[] d = (double?[])JsonConvert.DeserializeObject(@''[\r\n  2.4,\r\n  4.3,\r\n  null\r\n]'', typeof(double?[]))", span="4960-4964", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="DefaultSerializationBinder.cs"];
m1_2234 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", span="4958-4958", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="DefaultSerializationBinder.cs"];
m1_528 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", span="1086-1086", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="DefaultSerializationBinder.cs"];
m1_530 [label="var deserialized = JsonConvert.DeserializeObject<Foo1<Bar1>>(json)", span="1089-1089", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="DefaultSerializationBinder.cs"];
m1_532 [label="Assert.AreEqual(''value2'', deserialized.foo2.bar)", span="1091-1091", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="DefaultSerializationBinder.cs"];
m1_534 [label="Assert.AreEqual(''value'', deserialized.foo.bar)", span="1093-1093", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="DefaultSerializationBinder.cs"];
m1_529 [label="var json = @''{''''foo'''':{''''bar'''':''''value''''},''''foo2'''':{''''bar'''':''''value2''''}}''", span="1088-1088", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="DefaultSerializationBinder.cs"];
m1_531 [label="Assert.IsNotNull(deserialized.foo2)", span="1090-1090", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="DefaultSerializationBinder.cs"];
m1_533 [label="Assert.IsNotNull(deserialized.foo)", span="1092-1092", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="DefaultSerializationBinder.cs"];
m1_535 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", span="1086-1086", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="DefaultSerializationBinder.cs"];
m1_800 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", span="1730-1730", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="DefaultSerializationBinder.cs"];
m1_806 [label="List<string> jsonNetResult = JsonConvert.DeserializeObject<List<string>>(json)", span="1742-1742", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="DefaultSerializationBinder.cs"];
m1_809 [label="Assert.AreEqual(javaScriptSerializerResult[0], jsonNetResult[0])", span="1747-1747", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="DefaultSerializationBinder.cs"];
m1_808 [label="Assert.AreEqual(dataContractResult[0], jsonNetResult[0])", span="1745-1745", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="DefaultSerializationBinder.cs"];
m1_807 [label="Assert.AreEqual(1, jsonNetResult.Count)", span="1744-1744", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="DefaultSerializationBinder.cs"];
m1_801 [label="string json = @''[''''vvv\/vvv\tvvv\''''vvv\bvvv\nvvv\rvvv\\vvv\fvvv'''']''", span="1732-1732", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="DefaultSerializationBinder.cs"];
m1_805 [label="List<string> dataContractResult = (List<string>)s.ReadObject(new MemoryStream(Encoding.UTF8.GetBytes(json)))", span="1740-1740", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="DefaultSerializationBinder.cs"];
m1_803 [label="List<string> javaScriptSerializerResult = javaScriptSerializer.Deserialize<List<string>>(json)", span="1736-1736", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="DefaultSerializationBinder.cs"];
m1_802 [label="JavaScriptSerializer javaScriptSerializer = new JavaScriptSerializer()", span="1735-1735", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="DefaultSerializationBinder.cs"];
m1_804 [label="DataContractJsonSerializer s = new DataContractJsonSerializer(typeof(List<string>))", span="1739-1739", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="DefaultSerializationBinder.cs"];
m1_810 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", span="1730-1730", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="DefaultSerializationBinder.cs"];
m1_2284 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructWithAttribute.StructWithAttribute()", span="5066-5066", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructWithAttribute.StructWithAttribute()", file="DefaultSerializationBinder.cs"];
m1_1413 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", file="DefaultSerializationBinder.cs"];
m1_2297 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", span="674-674", cluster="Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", file="DefaultSerializationBinder.cs"];
m1_2428 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructPropertyClass.NullableStructPropertyClass()", span="5377-5377", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructPropertyClass.NullableStructPropertyClass()", file="DefaultSerializationBinder.cs"];
m1_3614 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSingle(System.IFormatProvider)", span="8287-8287", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSingle(System.IFormatProvider)", file="DefaultSerializationBinder.cs"];
m1_3615 [label="throw new InvalidCastException();", span="8289-8289", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSingle(System.IFormatProvider)", file="DefaultSerializationBinder.cs"];
m1_3616 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSingle(System.IFormatProvider)", span="8287-8287", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSingle(System.IFormatProvider)", file="DefaultSerializationBinder.cs"];
m1_1187 [label="Entry Unk.Fail", span="", cluster="Unk.Fail", file="DefaultSerializationBinder.cs"];
m1_782 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", span="1709-1709", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", file="DefaultSerializationBinder.cs"];
m1_783 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.SerializeObject(new BadJsonPropertyClass()); }, @''A member with the name 'pie' already exists on 'Newtonsoft.Json.Tests.TestObjects.BadJsonPropertyClass'. Use the JsonPropertyAttribute to specify another name.'')", span="1711-1711", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", file="DefaultSerializationBinder.cs"];
m1_784 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", span="1709-1709", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", file="DefaultSerializationBinder.cs"];
m1_1009 [label="Entry Newtonsoft.Json.Tests.TestObjects.ConstructorCaseSensitivityClass.ConstructorCaseSensitivityClass(string, string, string)", span="33-33", cluster="Newtonsoft.Json.Tests.TestObjects.ConstructorCaseSensitivityClass.ConstructorCaseSensitivityClass(string, string, string)", file="DefaultSerializationBinder.cs"];
m1_977 [label="Entry Newtonsoft.Json.Tests.TestObjects.ClassWithGuid.ClassWithGuid()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.ClassWithGuid.ClassWithGuid()", file="DefaultSerializationBinder.cs"];
m1_561 [label="Entry Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", span="817-817", cluster="Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", file="DefaultSerializationBinder.cs"];
m1_3038 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="6845-6845", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DefaultSerializationBinder.cs"];
m1_3039 [label="return Enum.Parse(typeof(Color), reader.Value.ToString());", span="6847-6847", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DefaultSerializationBinder.cs"];
m1_3040 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="6845-6845", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DefaultSerializationBinder.cs"];
m1_597 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", span="1293-1293", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="DefaultSerializationBinder.cs"];
m1_603 [label="string json = JsonConvert.SerializeObject(baseWith, Formatting.Indented)", span="1308-1308", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="DefaultSerializationBinder.cs"];
m1_605 [label="StringAssert.AreEqual(@''{\r\n  ''''VirtualWithDataMemberBase'''': ''''VirtualWithDataMember2!'''',\r\n  ''''VirtualSub'''': ''''Virtual2!'''',\r\n  ''''WithDataMemberBase'''': ''''WithDataMember2!'''',\r\n  ''''JustAProperty'''': ''''JustAProperty2!''''\r\n}'', json)", span="1312-1317", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="DefaultSerializationBinder.cs"];
m1_604 [label="Console.WriteLine(json)", span="1310-1310", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="DefaultSerializationBinder.cs"];
m1_598 [label="BaseWithContract baseWith = new SubWithoutContractVirtualProperties\r\n            {\r\n                JustAProperty = ''JustAProperty!'',\r\n                Virtual = ''Virtual!'',\r\n                VirtualWithDataMember = ''VirtualWithDataMember!'',\r\n                WithDataMember = ''WithDataMember!''\r\n            }", span="1295-1301", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="DefaultSerializationBinder.cs"];
m1_602 [label="baseWith.WithDataMember = ''WithDataMember2!''", span="1306-1306", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="DefaultSerializationBinder.cs"];
m1_599 [label="baseWith.JustAProperty = ''JustAProperty2!''", span="1303-1303", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="DefaultSerializationBinder.cs"];
m1_600 [label="baseWith.Virtual = ''Virtual2!''", span="1304-1304", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="DefaultSerializationBinder.cs"];
m1_601 [label="baseWith.VirtualWithDataMember = ''VirtualWithDataMember2!''", span="1305-1305", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="DefaultSerializationBinder.cs"];
m1_606 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", span="1293-1293", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="DefaultSerializationBinder.cs"];
m1_3725 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", span="8542-8542", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="DefaultSerializationBinder.cs"];
m1_3732 [label="Assert.AreEqual(dt, dt1)", span="8557-8557", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="DefaultSerializationBinder.cs"];
m1_3737 [label="Assert.AreEqual(dt, (DateTimeOffset)v.Value)", span="8568-8568", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="DefaultSerializationBinder.cs"];
m1_3730 [label="Assert.AreEqual(@''''''2000-pie-Dec-Friday-22'''''', json)", span="8553-8553", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="DefaultSerializationBinder.cs"];
m1_3735 [label="Assert.AreEqual(JTokenType.Date, v.Type)", span="8566-8566", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="DefaultSerializationBinder.cs"];
m1_3736 [label="Assert.AreEqual(typeof(DateTimeOffset), v.Value.GetType())", span="8567-8567", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="DefaultSerializationBinder.cs"];
m1_3726 [label="DateTimeOffset dt = new DateTimeOffset(new DateTime(2000, 12, 22))", span="8544-8544", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="DefaultSerializationBinder.cs"];
m1_3731 [label="DateTimeOffset dt1 = JsonConvert.DeserializeObject<DateTimeOffset>(json, settings)", span="8555-8555", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="DefaultSerializationBinder.cs"];
m1_3733 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                DateParseHandling = DateParseHandling.DateTimeOffset\r\n            }", span="8559-8563", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="DefaultSerializationBinder.cs"];
m1_3734 [label="JValue v = (JValue)JToken.ReadFrom(reader)", span="8564-8564", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="DefaultSerializationBinder.cs"];
m1_3729 [label="string json = JsonConvert.SerializeObject(dt, settings)", span="8551-8551", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="DefaultSerializationBinder.cs"];
m1_3727 [label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd''", span="8545-8545", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="DefaultSerializationBinder.cs"];
m1_3728 [label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString\r\n            }", span="8546-8549", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="DefaultSerializationBinder.cs"];
m1_3738 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", span="8542-8542", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="DefaultSerializationBinder.cs"];
m1_2745 [label="Entry Newtonsoft.Json.Tests.TestObjects.TestObject.TestObject(string, byte[])", span="33-33", cluster="Newtonsoft.Json.Tests.TestObjects.TestObject.TestObject(string, byte[])", file="DefaultSerializationBinder.cs"];
m1_3433 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pair<TFirst, TSecond>.Pair(TFirst, TSecond)", span="7836-7836", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pair<TFirst, TSecond>.Pair(TFirst, TSecond)", file="DefaultSerializationBinder.cs"];
m1_3434 [label="this.First = first", span="7839-7839", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pair<TFirst, TSecond>.Pair(TFirst, TSecond)", file="DefaultSerializationBinder.cs"];
m1_3435 [label="this.Second = second", span="7840-7840", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pair<TFirst, TSecond>.Pair(TFirst, TSecond)", file="DefaultSerializationBinder.cs"];
m1_3436 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pair<TFirst, TSecond>.Pair(TFirst, TSecond)", span="7836-7836", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pair<TFirst, TSecond>.Pair(TFirst, TSecond)", file="DefaultSerializationBinder.cs"];
m1_3834 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="8804-8804", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DefaultSerializationBinder.cs"];
m1_3836 [label="var attachment = info != null\r\n                    ? new System.Net.Mail.Attachment(new MemoryStream(Convert.FromBase64String(info.ContentBase64)), ''application/octet-stream'')\r\n                    {\r\n                        ContentDisposition = { FileName = info.FileName }\r\n                    }\r\n                    : null", span="8808-8813", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DefaultSerializationBinder.cs"];
m1_3835 [label="var info = serializer.Deserialize<AttachmentInfo>(reader)", span="8806-8806", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DefaultSerializationBinder.cs"];
m1_3837 [label="return attachment;", span="8814-8814", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DefaultSerializationBinder.cs"];
m1_3838 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="8804-8804", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DefaultSerializationBinder.cs"];
m1_2687 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", span="6141-6141", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="DefaultSerializationBinder.cs"];
m1_2691 [label="UriGuidTimeSpanTestClass c2 = JsonConvert.DeserializeObject<UriGuidTimeSpanTestClass>(json)", span="6161-6161", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="DefaultSerializationBinder.cs"];
m1_2692 [label="Assert.AreEqual(c1.Guid, c2.Guid)", span="6162-6162", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="DefaultSerializationBinder.cs"];
m1_2693 [label="Assert.AreEqual(c1.NullableGuid, c2.NullableGuid)", span="6163-6163", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="DefaultSerializationBinder.cs"];
m1_2694 [label="Assert.AreEqual(c1.TimeSpan, c2.TimeSpan)", span="6164-6164", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="DefaultSerializationBinder.cs"];
m1_2695 [label="Assert.AreEqual(c1.NullableTimeSpan, c2.NullableTimeSpan)", span="6165-6165", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="DefaultSerializationBinder.cs"];
m1_2696 [label="Assert.AreEqual(c1.Uri, c2.Uri)", span="6166-6166", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="DefaultSerializationBinder.cs"];
m1_2689 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="6151-6151", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="DefaultSerializationBinder.cs"];
m1_2690 [label="StringAssert.AreEqual(@''{\r\n  ''''Guid'''': ''''1924129c-f7e0-40f3-9607-9939c531395a'''',\r\n  ''''NullableGuid'''': ''''9e9f3adf-e017-4f72-91e0-617ebe85967d'''',\r\n  ''''TimeSpan'''': ''''1.00:00:00'''',\r\n  ''''NullableTimeSpan'''': ''''01:00:00'''',\r\n  ''''Uri'''': ''''http://testuri.com''''\r\n}'', json)", span="6153-6159", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="DefaultSerializationBinder.cs"];
m1_2688 [label="UriGuidTimeSpanTestClass c1 = new UriGuidTimeSpanTestClass\r\n            {\r\n                Guid = new Guid(''1924129C-F7E0-40F3-9607-9939C531395A''),\r\n                NullableGuid = new Guid(''9E9F3ADF-E017-4F72-91E0-617EBE85967D''),\r\n                TimeSpan = TimeSpan.FromDays(1),\r\n                NullableTimeSpan = TimeSpan.FromHours(1),\r\n                Uri = new Uri(''http://testuri.com'')\r\n            }", span="6143-6150", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="DefaultSerializationBinder.cs"];
m1_2697 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", span="6141-6141", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="DefaultSerializationBinder.cs"];
m1_1917 [label="Entry System.Runtime.Serialization.SerializationInfo.GetByte(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetByte(string)", file="DefaultSerializationBinder.cs"];
m1_556 [label="Entry int.ToString(System.IFormatProvider)", span="0-0", cluster="int.ToString(System.IFormatProvider)", file="DefaultSerializationBinder.cs"];
m1_2568 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", span="5819-5819", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="DefaultSerializationBinder.cs"];
m1_2574 [label="NonDefaultConstructorWithReadOnlyCollectionProperty c2 = JsonConvert.DeserializeObject<NonDefaultConstructorWithReadOnlyCollectionProperty>(json)", span="5834-5834", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="DefaultSerializationBinder.cs"];
m1_2575 [label="Assert.AreEqual(c1.Title, c2.Title)", span="5835-5835", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="DefaultSerializationBinder.cs"];
m1_2576 [label="Assert.AreEqual(c1.Categories.Count, c2.Categories.Count)", span="5836-5836", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="DefaultSerializationBinder.cs"];
m1_2577 [label="Assert.AreEqual(''one'', c2.Categories[0])", span="5837-5837", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="DefaultSerializationBinder.cs"];
m1_2578 [label="Assert.AreEqual(''two'', c2.Categories[1])", span="5838-5838", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="DefaultSerializationBinder.cs"];
m1_2572 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="5825-5825", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="DefaultSerializationBinder.cs"];
m1_2573 [label="StringAssert.AreEqual(@''{\r\n  ''''Title'''': ''''blah'''',\r\n  ''''Categories'''': [\r\n    ''''one'''',\r\n    ''''two''''\r\n  ]\r\n}'', json)", span="5826-5832", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="DefaultSerializationBinder.cs"];
m1_2569 [label="NonDefaultConstructorWithReadOnlyCollectionProperty c1 = new NonDefaultConstructorWithReadOnlyCollectionProperty(''blah'')", span="5821-5821", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="DefaultSerializationBinder.cs"];
m1_2571 [label="c1.Categories.Add(''two'')", span="5823-5823", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="DefaultSerializationBinder.cs"];
m1_2570 [label="c1.Categories.Add(''one'')", span="5822-5822", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="DefaultSerializationBinder.cs"];
m1_2579 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", span="5819-5819", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="DefaultSerializationBinder.cs"];
m1_2674 [label="Entry System.Exception.ToString()", span="0-0", cluster="System.Exception.ToString()", file="DefaultSerializationBinder.cs"];
m1_1491 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", span="3190-3190", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="DefaultSerializationBinder.cs"];
m1_1493 [label="SetOnlyPropertyClass2 setOnly = JsonConvert.DeserializeObject<SetOnlyPropertyClass2>(json)", span="3194-3194", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="DefaultSerializationBinder.cs"];
m1_1495 [label="Assert.AreEqual(5, a.Count)", span="3196-3196", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="DefaultSerializationBinder.cs"];
m1_1496 [label="Assert.AreEqual(1, (int)a[0])", span="3197-3197", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="DefaultSerializationBinder.cs"];
m1_1497 [label="Assert.AreEqual(5, (int)a[a.Count - 1])", span="3198-3198", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="DefaultSerializationBinder.cs"];
m1_1492 [label="string json = @''{'SetOnlyProperty':[1,2,3,4,5]}''", span="3192-3192", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="DefaultSerializationBinder.cs"];
m1_1494 [label="JArray a = (JArray)setOnly.GetValue()", span="3195-3195", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="DefaultSerializationBinder.cs"];
m1_1498 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", span="3190-3190", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="DefaultSerializationBinder.cs"];
m1_1392 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", span="2956-2956", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="DefaultSerializationBinder.cs"];
m1_1395 [label="Assert.AreEqual(''Name!'', c.Name)", span="2969-2969", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="DefaultSerializationBinder.cs"];
m1_1396 [label="Assert.AreEqual(1, c.Dictionary.Count)", span="2970-2970", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="DefaultSerializationBinder.cs"];
m1_1397 [label="Assert.AreEqual(11, c.Dictionary[''Item''])", span="2971-2971", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="DefaultSerializationBinder.cs"];
m1_1394 [label="DictionaryInterfaceClass c = JsonConvert.DeserializeObject<DictionaryInterfaceClass>(\r\n                json,\r\n                new JsonSerializerSettings { ObjectCreationHandling = ObjectCreationHandling.Replace })", span="2965-2967", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="DefaultSerializationBinder.cs"];
m1_1393 [label="string json = @''{\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Dictionary'''': {\r\n    ''''Item'''': 11\r\n  }\r\n}''", span="2958-2963", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="DefaultSerializationBinder.cs"];
m1_1398 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", span="2956-2956", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="DefaultSerializationBinder.cs"];
m1_3510 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", span="8040-8040", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="DefaultSerializationBinder.cs"];
m1_3511 [label="PersonReference john = new PersonReference\r\n            {\r\n                Id = new Guid(''0B64FFDF-D155-44AD-9689-58D9ADB137F3''),\r\n                Name = ''John Smith''\r\n            }", span="8042-8046", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="DefaultSerializationBinder.cs"];
m1_3512 [label="PersonReference jane = new PersonReference\r\n            {\r\n                Id = new Guid(''AE3C399C-058D-431D-91B0-A36C266441B9''),\r\n                Name = ''Jane Smith''\r\n            }", span="8048-8052", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="DefaultSerializationBinder.cs"];
m1_3517 [label="StringAssert.AreEqual(@''[\r\n  {\r\n    ''''$id'''': ''''0b64ffdf-d155-44ad-9689-58d9adb137f3'''',\r\n    ''''Name'''': ''''John Smith'''',\r\n    ''''Spouse'''': {\r\n      ''''$id'''': ''''ae3c399c-058d-431d-91b0-a36c266441b9'''',\r\n      ''''Name'''': ''''Jane Smith'''',\r\n      ''''Spouse'''': {\r\n        ''''$ref'''': ''''0b64ffdf-d155-44ad-9689-58d9adb137f3''''\r\n      }\r\n    }\r\n  },\r\n  {\r\n    ''''$ref'''': ''''ae3c399c-058d-431d-91b0-a36c266441b9''''\r\n  }\r\n]'', json)", span="8070-8085", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="DefaultSerializationBinder.cs"];
m1_3516 [label="string json = JsonConvert.SerializeObject(people, new JsonSerializerSettings\r\n            {\r\n                ReferenceResolver = new IdReferenceResolver(),\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects,\r\n                Formatting = Formatting.Indented\r\n            })", span="8063-8068", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="DefaultSerializationBinder.cs"];
m1_3515 [label="IList<PersonReference> people = new List<PersonReference>\r\n            {\r\n                john,\r\n                jane\r\n            }", span="8057-8061", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="DefaultSerializationBinder.cs"];
m1_3513 [label="john.Spouse = jane", span="8054-8054", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="DefaultSerializationBinder.cs"];
m1_3514 [label="jane.Spouse = john", span="8055-8055", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="DefaultSerializationBinder.cs"];
m1_3518 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", span="8040-8040", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="DefaultSerializationBinder.cs"];
m1_1804 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", span="3982-3982", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="DefaultSerializationBinder.cs"];
m1_1806 [label="var item = JsonConvert.DeserializeObject<TestClass>(json)", span="3985-3985", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="DefaultSerializationBinder.cs"];
m1_1807 [label="Assert.AreEqual(123L, item.Value)", span="3987-3987", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="DefaultSerializationBinder.cs"];
m1_1805 [label="var json = ''{ Key: 'abc', Value: 123 }''", span="3984-3984", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="DefaultSerializationBinder.cs"];
m1_1808 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", span="3982-3982", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="DefaultSerializationBinder.cs"];
m1_3482 [label="Entry System.Collections.Generic.HashSet<T>.HashSet(System.Collections.Generic.IEnumerable<T>)", span="0-0", cluster="System.Collections.Generic.HashSet<T>.HashSet(System.Collections.Generic.IEnumerable<T>)", file="DefaultSerializationBinder.cs"];
m1_1582 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", span="3333-3333", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", file="DefaultSerializationBinder.cs"];
m1_1584 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.PopulateObject(json, new List<Person>()); }, @''Cannot populate JSON object onto type 'System.Collections.Generic.List`1[Newtonsoft.Json.Tests.TestObjects.Person]'. Path '', line 1, position 2.'')", span="3337-3337", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", file="DefaultSerializationBinder.cs"];
m1_1583 [label="string json = @''{}''", span="3335-3335", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", file="DefaultSerializationBinder.cs"];
m1_1585 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", span="3333-3333", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", file="DefaultSerializationBinder.cs"];
m1_3791 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", span="8687-8687", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", file="DefaultSerializationBinder.cs"];
m1_3794 [label="NullableLongTestClass result = JsonConvert.DeserializeObject<NullableLongTestClass>(output)", span="8694-8694", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", file="DefaultSerializationBinder.cs"];
m1_3795 [label="Assert.AreEqual(ulong.MaxValue, result.Value)", span="8696-8696", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", file="DefaultSerializationBinder.cs"];
m1_3793 [label="string output = JsonConvert.SerializeObject(instance)", span="8693-8693", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", file="DefaultSerializationBinder.cs"];
m1_3792 [label="NullableLongTestClass instance = new NullableLongTestClass\r\n            {\r\n                Value = ulong.MaxValue\r\n            }", span="8689-8692", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", file="DefaultSerializationBinder.cs"];
m1_3796 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", span="8687-8687", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", file="DefaultSerializationBinder.cs"];
m1_2790 [label="Entry System.Globalization.CultureInfo.CreateSpecificCulture(string)", span="0-0", cluster="System.Globalization.CultureInfo.CreateSpecificCulture(string)", file="DefaultSerializationBinder.cs"];
m1_578 [label="Entry string.Split(params char[])", span="0-0", cluster="string.Split(params char[])", file="DefaultSerializationBinder.cs"];
m1_3361 [label="Entry System.DateTimeOffset.ToString(System.IFormatProvider)", span="0-0", cluster="System.DateTimeOffset.ToString(System.IFormatProvider)", file="DefaultSerializationBinder.cs"];
m1_3584 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToBoolean(System.IFormatProvider)", span="8237-8237", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToBoolean(System.IFormatProvider)", file="DefaultSerializationBinder.cs"];
m1_3585 [label="throw new InvalidCastException();", span="8239-8239", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToBoolean(System.IFormatProvider)", file="DefaultSerializationBinder.cs"];
m1_3586 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToBoolean(System.IFormatProvider)", span="8237-8237", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToBoolean(System.IFormatProvider)", file="DefaultSerializationBinder.cs"];
m1_1809 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", span="4014-4014", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="DefaultSerializationBinder.cs"];
m1_1812 [label="c.GuidProperty = new Guid(''66143115-BE2A-4a59-AF0A-348E1EA15B1E'')", span="4018-4018", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="DefaultSerializationBinder.cs"];
m1_1810 [label="DataContractJsonSerializerTestClass c = new DataContractJsonSerializerTestClass()", span="4016-4016", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="DefaultSerializationBinder.cs"];
m1_1811 [label="c.TimeSpanProperty = new TimeSpan(200, 20, 59, 30, 900)", span="4017-4017", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="DefaultSerializationBinder.cs"];
m1_1813 [label="c.AnimalProperty = new Human() { Ethnicity = ''European'' }", span="4019-4019", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="DefaultSerializationBinder.cs"];
m1_1814 [label="MemoryStream ms = new MemoryStream()", span="4021-4021", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="DefaultSerializationBinder.cs"];
m1_1815 [label="DataContractJsonSerializer serializer = new DataContractJsonSerializer(\r\n                typeof(DataContractJsonSerializerTestClass),\r\n                new Type[] { typeof(Human) })", span="4022-4024", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="DefaultSerializationBinder.cs"];
m1_1818 [label="string json = Encoding.UTF8.GetString(jsonBytes, 0, jsonBytes.Length)", span="4028-4028", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="DefaultSerializationBinder.cs"];
m1_1816 [label="serializer.WriteObject(ms, c)", span="4025-4025", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="DefaultSerializationBinder.cs"];
m1_1817 [label="byte[] jsonBytes = ms.ToArray()", span="4027-4027", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="DefaultSerializationBinder.cs"];
m1_1819 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", span="4014-4014", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="DefaultSerializationBinder.cs"];
m1_3483 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", span="7969-7969", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="DefaultSerializationBinder.cs"];
m1_3488 [label="Assert.AreEqual(1234567890.123456m, d)", span="7976-7976", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="DefaultSerializationBinder.cs"];
m1_3487 [label="decimal? d = serialiser.Deserialize<decimal?>(reader)", span="7974-7974", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="DefaultSerializationBinder.cs"];
m1_3484 [label="JsonTextReader reader = new JsonTextReader(new StringReader(''1234567890.123456''))", span="7971-7971", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="DefaultSerializationBinder.cs"];
m1_3486 [label="var serialiser = JsonSerializer.Create(settings)", span="7973-7973", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="DefaultSerializationBinder.cs"];
m1_3485 [label="var settings = new JsonSerializerSettings()", span="7972-7972", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="DefaultSerializationBinder.cs"];
m1_3489 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", span="7969-7969", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="DefaultSerializationBinder.cs"];
m1_683 [label="Entry System.DateTime.DateTime(int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int)", file="DefaultSerializationBinder.cs"];
m1_2657 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedType.DerivedType()", span="6041-6041", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedType.DerivedType()", file="DefaultSerializationBinder.cs"];
m1_722 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", span="1526-1526", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="DefaultSerializationBinder.cs"];
m1_725 [label="Assert.AreEqual(''Orange'', p[''Name''].ToString())", span="1532-1532", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="DefaultSerializationBinder.cs"];
m1_724 [label="Hashtable p = JsonConvert.DeserializeObject(value, typeof(Hashtable)) as Hashtable", span="1530-1530", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="DefaultSerializationBinder.cs"];
m1_723 [label="string value = @''{''''Name'''':''''Orange'''', ''''Price'''':3.99, ''''ExpiryDate'''':''''01/24/2010 12:00:00''''}''", span="1528-1528", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="DefaultSerializationBinder.cs"];
m1_726 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", span="1526-1526", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="DefaultSerializationBinder.cs"];
m1_1664 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", span="3497-3497", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="DefaultSerializationBinder.cs"];
m1_1666 [label="dictionary.Add(new Guid(''F60EAEE0-AE47-488E-B330-59527B742D77''), 1)", span="3500-3500", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="DefaultSerializationBinder.cs"];
m1_1667 [label="dictionary.Add(new Guid(''C2594C02-EBA1-426A-AA87-8DD8871350B0''), 2)", span="3501-3501", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="DefaultSerializationBinder.cs"];
m1_1668 [label="string json = JsonConvert.SerializeObject(dictionary, Formatting.Indented)", span="3503-3503", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="DefaultSerializationBinder.cs"];
m1_1669 [label="StringAssert.AreEqual(@''{\r\n  ''''f60eaee0-ae47-488e-b330-59527b742d77'''': 1,\r\n  ''''c2594c02-eba1-426a-aa87-8dd8871350b0'''': 2\r\n}'', json)", span="3504-3507", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="DefaultSerializationBinder.cs"];
m1_1665 [label="Dictionary<Guid, int> dictionary = new Dictionary<Guid, int>()", span="3499-3499", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="DefaultSerializationBinder.cs"];
m1_1670 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", span="3497-3497", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="DefaultSerializationBinder.cs"];
m1_2348 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", span="5228-5228", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", file="DefaultSerializationBinder.cs"];
m1_2349 [label="decimal? d = JsonConvert.DeserializeObject<decimal?>(''123456789876543.21'')", span="5230-5230", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", file="DefaultSerializationBinder.cs"];
m1_2350 [label="Assert.AreEqual(123456789876543.21m, d)", span="5231-5231", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", file="DefaultSerializationBinder.cs"];
m1_2351 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", span="5228-5228", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", file="DefaultSerializationBinder.cs"];
m1_3689 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", span="8439-8439", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="DefaultSerializationBinder.cs"];
m1_3696 [label="Assert.AreEqual(dt, d.Keys.ElementAt(0))", span="8460-8460", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="DefaultSerializationBinder.cs"];
m1_3690 [label="DateTime dt = new DateTime(2000, 12, 22)", span="8441-8441", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="DefaultSerializationBinder.cs"];
m1_3695 [label="Dictionary<DateTime, string> d = JsonConvert.DeserializeObject<Dictionary<DateTime, string>>(json, settings)", span="8458-8458", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="DefaultSerializationBinder.cs"];
m1_3691 [label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd''", span="8442-8442", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="DefaultSerializationBinder.cs"];
m1_3693 [label="string json = JsonConvert.SerializeObject(new Dictionary<DateTime, string>\r\n            {\r\n                { dt, ''123'' }\r\n            }, settings)", span="8449-8452", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="DefaultSerializationBinder.cs"];
m1_3692 [label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                Formatting = Formatting.Indented\r\n            }", span="8443-8447", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="DefaultSerializationBinder.cs"];
m1_3694 [label="StringAssert.AreEqual(@''{\r\n  ''''2000-pie-Dec-Friday-22'''': ''''123''''\r\n}'', json)", span="8454-8456", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="DefaultSerializationBinder.cs"];
m1_3697 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", span="8439-8439", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="DefaultSerializationBinder.cs"];
m1_159 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", span="477-477", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="DefaultSerializationBinder.cs"];
m1_1949 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, byte)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, byte)", file="DefaultSerializationBinder.cs"];
m1_2235 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", span="4974-4974", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="DefaultSerializationBinder.cs"];
m1_2238 [label="HashSet<string> d = JsonConvert.DeserializeObject<HashSet<string>>(jsonText)", span="4989-4989", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="DefaultSerializationBinder.cs"];
m1_2239 [label="Assert.AreEqual(3, d.Count)", span="4991-4991", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="DefaultSerializationBinder.cs"];
m1_2236 [label="string jsonText = JsonConvert.SerializeObject(new HashSet<string>()\r\n            {\r\n                ''One'',\r\n                ''2'',\r\n                ''III''\r\n            }, Formatting.Indented)", span="4976-4981", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="DefaultSerializationBinder.cs"];
m1_2237 [label="StringAssert.AreEqual(@''[\r\n  ''''One'''',\r\n  ''''2'''',\r\n  ''''III''''\r\n]'', jsonText)", span="4983-4987", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="DefaultSerializationBinder.cs"];
m1_2240 [label="Assert.IsTrue(d.Contains(''One''))", span="4992-4992", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="DefaultSerializationBinder.cs"];
m1_2241 [label="Assert.IsTrue(d.Contains(''2''))", span="4993-4993", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="DefaultSerializationBinder.cs"];
m1_2242 [label="Assert.IsTrue(d.Contains(''III''))", span="4994-4994", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="DefaultSerializationBinder.cs"];
m1_2243 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", span="4974-4974", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="DefaultSerializationBinder.cs"];
m1_879 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T, Newtonsoft.Json.JsonSerializerSettings)", span="775-775", cluster="Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T, Newtonsoft.Json.JsonSerializerSettings)", file="DefaultSerializationBinder.cs"];
m1_769 [label="Entry Newtonsoft.Json.Linq.JContainer.Children()", span="251-251", cluster="Newtonsoft.Json.Linq.JContainer.Children()", file="DefaultSerializationBinder.cs"];
m1_1433 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", span="3061-3061", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="DefaultSerializationBinder.cs"];
m1_1437 [label="Uri newUri = JsonConvert.DeserializeObject<Uri>(json)", span="3068-3068", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="DefaultSerializationBinder.cs"];
m1_1436 [label="Assert.AreEqual(''http://codeplex.com/'', uri.ToString())", span="3066-3066", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="DefaultSerializationBinder.cs"];
m1_1438 [label="Assert.AreEqual(uri, newUri)", span="3069-3069", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="DefaultSerializationBinder.cs"];
m1_1435 [label="string json = JsonConvert.SerializeObject(uri)", span="3064-3064", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="DefaultSerializationBinder.cs"];
m1_1434 [label="Uri uri = new Uri(''http://codeplex.com'')", span="3063-3063", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="DefaultSerializationBinder.cs"];
m1_1439 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", span="3061-3061", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="DefaultSerializationBinder.cs"];
m1_2147 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", span="4803-4803", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="DefaultSerializationBinder.cs"];
m1_2156 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<Dictionary<string, object>>(json); }, ''Additional content found in JSON reference object. A JSON reference object should only have a $ref property. Path 'Father.$id', line 6, position 11.'')", span="4818-4818", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="DefaultSerializationBinder.cs"];
m1_2155 [label="var json = JsonConvert.SerializeObject(child, Formatting.Indented)", span="4816-4816", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="DefaultSerializationBinder.cs"];
m1_2154 [label="child.Add(''Father'', reference)", span="4814-4814", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="DefaultSerializationBinder.cs"];
m1_2151 [label="var child = new Dictionary<string, object>()", span="4811-4811", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="DefaultSerializationBinder.cs"];
m1_2148 [label="var reference = new Dictionary<string, object>()", span="4807-4807", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="DefaultSerializationBinder.cs"];
m1_2153 [label="child.Add(''Name'', ''Isabell'')", span="4813-4813", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="DefaultSerializationBinder.cs"];
m1_2150 [label="reference.Add(''$id'', 1)", span="4809-4809", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="DefaultSerializationBinder.cs"];
m1_2152 [label="child.Add(''_id'', 2)", span="4812-4812", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="DefaultSerializationBinder.cs"];
m1_2149 [label="reference.Add(''$ref'', ''Persons'')", span="4808-4808", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="DefaultSerializationBinder.cs"];
m1_2157 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", span="4803-4803", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="DefaultSerializationBinder.cs"];
m1_3825 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="DefaultSerializationBinder.cs"];
m1_3134 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", span="7012-7012", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="DefaultSerializationBinder.cs"];
m1_3137 [label="Assert.AreEqual(@''{''''Data'''':['''':::ONE:::'''','''':::TWO:::'''','''':::THREE:::'''']}'', json)", span="7026-7026", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="DefaultSerializationBinder.cs"];
m1_3136 [label="string json = JsonConvert.SerializeObject(c)", span="7024-7024", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="DefaultSerializationBinder.cs"];
m1_3135 [label="PropertyItemConverter c = new PropertyItemConverter\r\n            {\r\n                Data = new[]\r\n                {\r\n                    ''one'',\r\n                    ''two'',\r\n                    ''three''\r\n                }\r\n            }", span="7014-7022", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="DefaultSerializationBinder.cs"];
m1_3138 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", span="7012-7012", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="DefaultSerializationBinder.cs"];
m1_2823 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", span="6406-6406", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", file="DefaultSerializationBinder.cs"];
m1_2825 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { List<int> numbers = JsonConvert.DeserializeObject<List<int>>(json); }, ''Error converting value {null} to type 'System.Int32'. Path '[3]', line 5, position 7.'')", span="6415-6415", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", file="DefaultSerializationBinder.cs"];
m1_2824 [label="string json = @''[\r\n  1,\r\n  2,\r\n  3,\r\n  null\r\n]''", span="6408-6413", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", file="DefaultSerializationBinder.cs"];
m1_2826 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", span="6406-6406", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", file="DefaultSerializationBinder.cs"];
m1_3590 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToChar(System.IFormatProvider)", span="8247-8247", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToChar(System.IFormatProvider)", file="DefaultSerializationBinder.cs"];
m1_3591 [label="throw new InvalidCastException();", span="8249-8249", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToChar(System.IFormatProvider)", file="DefaultSerializationBinder.cs"];
m1_3592 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToChar(System.IFormatProvider)", span="8247-8247", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToChar(System.IFormatProvider)", file="DefaultSerializationBinder.cs"];
m1_1235 [label="Entry Newtonsoft.Json.Tests.TestObjects.InterfacePropertyTestClass.InterfacePropertyTestClass()", span="46-46", cluster="Newtonsoft.Json.Tests.TestObjects.InterfacePropertyTestClass.InterfacePropertyTestClass()", file="DefaultSerializationBinder.cs"];
m1_1143 [label="Entry Newtonsoft.Json.Tests.TestObjects.UserNullable.UserNullable()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.UserNullable.UserNullable()", file="DefaultSerializationBinder.cs"];
m1_470 [label="Entry Newtonsoft.Json.Utilities.MathUtils.ApproxEquals(double, double)", span="103-103", cluster="Newtonsoft.Json.Utilities.MathUtils.ApproxEquals(double, double)", file="DefaultSerializationBinder.cs"];
m1_3474 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", span="7952-7952", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="DefaultSerializationBinder.cs"];
m1_3477 [label="ISet<string> s2 = JsonConvert.DeserializeObject<ISet<string>>(json)", span="7958-7958", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="DefaultSerializationBinder.cs"];
m1_3478 [label="Assert.AreEqual(s1.Count, s2.Count)", span="7960-7960", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="DefaultSerializationBinder.cs"];
m1_3476 [label="string json = JsonConvert.SerializeObject(s1)", span="7956-7956", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="DefaultSerializationBinder.cs"];
m1_3480 [label="Assert.IsTrue(s2.Contains(s))", span="7963-7963", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="DefaultSerializationBinder.cs"];
m1_3475 [label="ISet<string> s1 = new HashSet<string>(new[] { ''1'', ''two'', ''III'' })", span="7954-7954", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="DefaultSerializationBinder.cs"];
m1_3479 [label=s1, span="7961-7961", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="DefaultSerializationBinder.cs"];
m1_3481 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", span="7952-7952", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="DefaultSerializationBinder.cs"];
m1_1778 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.B.B()", span="3850-3850", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.B.B()", file="DefaultSerializationBinder.cs"];
m1_839 [label="Entry System.TimeSpan.FromHours(double)", span="0-0", cluster="System.TimeSpan.FromHours(double)", file="DefaultSerializationBinder.cs"];
m1_755 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", span="1584-1584", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="DefaultSerializationBinder.cs"];
m1_757 [label="object o = JsonConvert.DeserializeObject(json)", span="1664-1664", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="DefaultSerializationBinder.cs"];
m1_756 [label="string json = @''{\r\n    results:\r\n        [\r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://www.google.com/'''',\r\n                url : ''''http://www.google.com/'''',\r\n                visibleUrl : ''''www.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:zhool8dxBV4J:www.google.com'''',\r\n                title : ''''Google'''',\r\n                titleNoFormatting : ''''Google'''',\r\n                content : ''''Enables users to search the Web, Usenet, and \r\nimages. Features include PageRank,   caching and translation of \r\nresults, and an option to find similar pages.''''\r\n            },\r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://news.google.com/'''',\r\n                url : ''''http://news.google.com/'''',\r\n                visibleUrl : ''''news.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:Va_XShOz_twJ:news.google.com'''',\r\n                title : ''''Google News'''',\r\n                titleNoFormatting : ''''Google News'''',\r\n                content : ''''Aggregated headlines and a search engine of many of the world's news sources.''''\r\n            },\r\n            \r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://groups.google.com/'''',\r\n                url : ''''http://groups.google.com/'''',\r\n                visibleUrl : ''''groups.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:x2uPD3hfkn0J:groups.google.com'''',\r\n                title : ''''Google Groups'''',\r\n                titleNoFormatting : ''''Google Groups'''',\r\n                content : ''''Enables users to search and browse the Usenet \r\narchives which consist of over 700   million messages, and post new \r\ncomments.''''\r\n            },\r\n            \r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://maps.google.com/'''',\r\n                url : ''''http://maps.google.com/'''',\r\n                visibleUrl : ''''maps.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:dkf5u2twBXIJ:maps.google.com'''',\r\n                title : ''''Google Maps'''',\r\n                titleNoFormatting : ''''Google Maps'''',\r\n                content : ''''Provides directions, interactive maps, and \r\nsatellite/aerial imagery of the United   States. Can also search by \r\nkeyword such as type of business.''''\r\n            }\r\n        ],\r\n        \r\n    adResults:\r\n        [\r\n            {\r\n                GsearchResultClass:''''GwebSearch.ad'''',\r\n                title : ''''Gartner Symposium/ITxpo'''',\r\n                content1 : ''''Meet brilliant Gartner IT analysts'''',\r\n                content2 : ''''20-23 May 2007- Barcelona, Spain'''',\r\n                url : \r\n''''http://www.google.com/url?sa=L&ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB&num=1&q=http://www.gartner.com/it/sym/2007/spr8/spr8.jsp%3Fsrc%3D_spain_07_%26WT.srch%3D1&usg=__CxRH06E4Xvm9Muq13S4MgMtnziY='''', \r\n\r\n                impressionUrl : \r\n''''http://www.google.com/uds/css/ad-indicator-on.gif?ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB'''', \r\n\r\n                unescapedUrl : \r\n''''http://www.google.com/url?sa=L&ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB&num=1&q=http://www.gartner.com/it/sym/2007/spr8/spr8.jsp%3Fsrc%3D_spain_07_%26WT.srch%3D1&usg=__CxRH06E4Xvm9Muq13S4MgMtnziY='''', \r\n\r\n                visibleUrl : ''''www.gartner.com''''\r\n            }\r\n        ]\r\n}\r\n''", span="1586-1663", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="DefaultSerializationBinder.cs"];
m1_758 [label="string s = string.Empty", span="1665-1665", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="DefaultSerializationBinder.cs"];
m1_759 [label="s += s", span="1666-1666", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="DefaultSerializationBinder.cs"];
m1_760 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", span="1584-1584", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="DefaultSerializationBinder.cs"];
m1_3611 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSByte(System.IFormatProvider)", span="8282-8282", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSByte(System.IFormatProvider)", file="DefaultSerializationBinder.cs"];
m1_3612 [label="throw new InvalidCastException();", span="8284-8284", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSByte(System.IFormatProvider)", file="DefaultSerializationBinder.cs"];
m1_3613 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSByte(System.IFormatProvider)", span="8282-8282", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSByte(System.IFormatProvider)", file="DefaultSerializationBinder.cs"];
m1_2295 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeZoneOffsetObject.TimeZoneOffsetObject()", span="5093-5093", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeZoneOffsetObject.TimeZoneOffsetObject()", file="DefaultSerializationBinder.cs"];
m1_3036 [label="Entry Unk.ToUpper", span="", cluster="Unk.ToUpper", file="DefaultSerializationBinder.cs"];
m1_2779 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReflectionContractResolver.ReflectionContractResolver()", span="6239-6239", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReflectionContractResolver.ReflectionContractResolver()", file="DefaultSerializationBinder.cs"];
m1_1748 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", span="3788-3788", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="DefaultSerializationBinder.cs"];
m1_1749 [label="JRawValueTestObject deserialized = JsonConvert.DeserializeObject<JRawValueTestObject>(''{value:3}'')", span="3790-3790", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="DefaultSerializationBinder.cs"];
m1_1751 [label="deserialized = JsonConvert.DeserializeObject<JRawValueTestObject>(''{value:'3'}'')", span="3793-3793", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="DefaultSerializationBinder.cs"];
m1_1750 [label="Assert.AreEqual(''3'', deserialized.Value.ToString())", span="3791-3791", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="DefaultSerializationBinder.cs"];
m1_1752 [label="Assert.AreEqual(@''''''3'''''', deserialized.Value.ToString())", span="3794-3794", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="DefaultSerializationBinder.cs"];
m1_1753 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", span="3788-3788", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="DefaultSerializationBinder.cs"];
m1_3457 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", span="7893-7893", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="DefaultSerializationBinder.cs"];
m1_3463 [label="Assert.AreEqual(expected, actual)", span="7916-7916", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="DefaultSerializationBinder.cs"];
m1_3459 [label="string expected = JsonConvert.SerializeObject(dates, Formatting.Indented)", span="7905-7905", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="DefaultSerializationBinder.cs"];
m1_3461 [label="string actual = JsonConvert.SerializeObject(dates, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateFormatString = JsonSerializerSettings.DefaultDateFormatString\r\n            })", span="7909-7912", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="DefaultSerializationBinder.cs"];
m1_3462 [label="Console.WriteLine(expected)", span="7914-7914", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="DefaultSerializationBinder.cs"];
m1_3458 [label="IDictionary<string, object> dates = new Dictionary<string, object>\r\n            {\r\n                { ''DateTime-Unspecified'', new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Unspecified) },\r\n                { ''DateTime-Utc'', new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc) },\r\n                { ''DateTime-Local'', new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Local) },\r\n                { ''DateTimeOffset-Zero'', new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero) },\r\n                { ''DateTimeOffset-Plus1'', new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1)) },\r\n                { ''DateTimeOffset-Plus15'', new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1.5)) }\r\n            }", span="7895-7903", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="DefaultSerializationBinder.cs"];
m1_3460 [label="Console.WriteLine(expected)", span="7907-7907", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="DefaultSerializationBinder.cs"];
m1_3464 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", span="7893-7893", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="DefaultSerializationBinder.cs"];
m1_3148 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", span="7054-7054", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="DefaultSerializationBinder.cs"];
m1_3152 [label="IDictionary<DateTimeOffset?, int> dic2 = JsonConvert.DeserializeObject<IDictionary<DateTimeOffset?, int>>(json)", span="7072-7072", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="DefaultSerializationBinder.cs"];
m1_3153 [label="Assert.AreEqual(2, dic2.Count)", span="7074-7074", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="DefaultSerializationBinder.cs"];
m1_3154 [label="Assert.AreEqual(1, dic2[new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero)])", span="7075-7075", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="DefaultSerializationBinder.cs"];
m1_3155 [label="Assert.AreEqual(2, dic2[new DateTimeOffset(2013, 12, 12, 12, 12, 12, TimeSpan.Zero)])", span="7076-7076", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="DefaultSerializationBinder.cs"];
m1_3150 [label="string json = JsonConvert.SerializeObject(dic1, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.MicrosoftDateFormat\r\n            })", span="7062-7065", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="DefaultSerializationBinder.cs"];
m1_3151 [label="StringAssert.AreEqual(@''{\r\n  ''''\/Date(976623132000+0000)\/'''': 1,\r\n  ''''\/Date(1386850332000+0000)\/'''': 2\r\n}'', json)", span="7067-7070", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="DefaultSerializationBinder.cs"];
m1_3149 [label="IDictionary<DateTimeOffset?, int> dic1 = new Dictionary<DateTimeOffset?, int>\r\n            {\r\n                { new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero), 1 },\r\n                { new DateTimeOffset(2013, 12, 12, 12, 12, 12, TimeSpan.Zero), 2 }\r\n            }", span="7056-7060", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="DefaultSerializationBinder.cs"];
m1_3156 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", span="7054-7054", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="DefaultSerializationBinder.cs"];
m1_2563 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObject.ImplementInterfaceObject()", span="5780-5780", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObject.ImplementInterfaceObject()", file="DefaultSerializationBinder.cs"];
m1_3045 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", span="6863-6863", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="DefaultSerializationBinder.cs"];
m1_3054 [label="Assert.AreEqual(2, values.Count)", span="6881-6881", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="DefaultSerializationBinder.cs"];
m1_3055 [label="Assert.AreEqual(''bar'', values[0].Name)", span="6882-6882", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="DefaultSerializationBinder.cs"];
m1_3056 [label="Assert.AreEqual(''baz'', values[1].Name)", span="6883-6883", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="DefaultSerializationBinder.cs"];
m1_3046 [label="IList<MultipleItemsClass> values = new List<MultipleItemsClass>()", span="6865-6865", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="DefaultSerializationBinder.cs"];
m1_3050 [label="!reader.Read()", span="6872-6872", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="DefaultSerializationBinder.cs"];
m1_3049 [label=true, span="6870-6870", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="DefaultSerializationBinder.cs"];
m1_3047 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''{ ''''name'''': ''''bar'''' }{ ''''name'''': ''''baz'''' }''))", span="6867-6867", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="DefaultSerializationBinder.cs"];
m1_3053 [label="values.Add(foo)", span="6878-6878", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="DefaultSerializationBinder.cs"];
m1_3051 [label="JsonSerializer serializer = new JsonSerializer()", span="6875-6875", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="DefaultSerializationBinder.cs"];
m1_3048 [label="reader.SupportMultipleContent = true", span="6868-6868", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="DefaultSerializationBinder.cs"];
m1_3052 [label="MultipleItemsClass foo = serializer.Deserialize<MultipleItemsClass>(reader)", span="6876-6876", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="DefaultSerializationBinder.cs"];
m1_3057 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", span="6863-6863", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="DefaultSerializationBinder.cs"];
m1_2748 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", span="650-650", cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", file="DefaultSerializationBinder.cs"];
m1_734 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", span="1550-1550", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="DefaultSerializationBinder.cs"];
m1_736 [label="GetOnlyPropertyClass c = JsonConvert.DeserializeObject<GetOnlyPropertyClass>(value)", span="1554-1554", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="DefaultSerializationBinder.cs"];
m1_737 [label="Assert.AreEqual(c.Field, ''Field'')", span="1556-1556", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="DefaultSerializationBinder.cs"];
m1_738 [label="Assert.AreEqual(c.GetOnlyProperty, ''GetOnlyProperty'')", span="1557-1557", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="DefaultSerializationBinder.cs"];
m1_735 [label="string value = JsonConvert.SerializeObject(new GetOnlyPropertyClass())", span="1552-1552", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="DefaultSerializationBinder.cs"];
m1_739 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", span="1550-1550", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="DefaultSerializationBinder.cs"];
m1_2518 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", span="5639-5639", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="DefaultSerializationBinder.cs"];
m1_2520 [label="var withoutParameterisedConstructor = JsonConvert.DeserializeObject<DTOWithoutParameterisedConstructor>(json)", span="5643-5643", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="DefaultSerializationBinder.cs"];
m1_2521 [label="var withParameterisedConstructor = JsonConvert.DeserializeObject<DTOWithParameterisedConstructor>(json)", span="5644-5644", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="DefaultSerializationBinder.cs"];
m1_2522 [label="Assert.AreEqual(withoutParameterisedConstructor.B, withParameterisedConstructor.B)", span="5645-5645", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="DefaultSerializationBinder.cs"];
m1_2519 [label="string json = @''{A:''''Test''''}''", span="5641-5641", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="DefaultSerializationBinder.cs"];
m1_2523 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", span="5639-5639", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="DefaultSerializationBinder.cs"];
m1_868 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", span="1858-1858", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="DefaultSerializationBinder.cs"];
m1_876 [label="Assert.AreEqual(d, anonymous.DateValue)", span="1878-1878", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="DefaultSerializationBinder.cs"];
m1_874 [label="Assert.AreEqual(@''{''''DateValue'''':''''2000''''}'', json)", span="1875-1875", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="DefaultSerializationBinder.cs"];
m1_869 [label="DateTime d = new DateTime(2000, 1, 1)", span="1860-1860", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="DefaultSerializationBinder.cs"];
m1_875 [label="anonymous = JsonConvert.DeserializeAnonymousType(json, anonymous, settings)", span="1877-1877", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="DefaultSerializationBinder.cs"];
m1_873 [label="string json = JsonConvert.SerializeObject(anonymous, settings)", span="1874-1874", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="DefaultSerializationBinder.cs"];
m1_870 [label="var anonymous =\r\n                new\r\n                {\r\n                    DateValue = d\r\n                }", span="1862-1866", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="DefaultSerializationBinder.cs"];
m1_871 [label="JsonSerializerSettings settings = new JsonSerializerSettings()", span="1868-1868", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="DefaultSerializationBinder.cs"];
m1_872 [label="settings.Converters.Add(new IsoDateTimeConverter\r\n            {\r\n                DateTimeFormat = ''yyyy''\r\n            })", span="1869-1872", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="DefaultSerializationBinder.cs"];
m1_877 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", span="1858-1858", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="DefaultSerializationBinder.cs"];
m1_627 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualProperties.SubWithContractVirtualProperties()", span="1257-1257", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualProperties.SubWithContractVirtualProperties()", file="DefaultSerializationBinder.cs"];
m1_3239 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", span="7299-7299", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="DefaultSerializationBinder.cs"];
m1_3241 [label="InvalidOperationException exception = JsonConvert.DeserializeObject<InvalidOperationException>(json)", span="7327-7327", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="DefaultSerializationBinder.cs"];
m1_3244 [label="Assert.AreEqual(''Outter exception...'', exception.Message)", span="7331-7331", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="DefaultSerializationBinder.cs"];
m1_3240 [label="string json = @''{ ''''ClassName'''' : ''''System.InvalidOperationException'''',\r\n  ''''Data'''' : null,\r\n  ''''ExceptionMethod'''' : ''''8\nLogin\nAppBiz, Version=4.0.0.0, Culture=neutral, PublicKeyToken=null\nMyApp.LoginBiz\nMyApp.User Login()'''',\r\n  ''''HResult'''' : -2146233079,\r\n  ''''HelpURL'''' : null,\r\n  ''''InnerException'''' : { ''''ClassName'''' : ''''System.Exception'''',\r\n      ''''Data'''' : null,\r\n      ''''ExceptionMethod'''' : null,\r\n      ''''HResult'''' : -2146233088,\r\n      ''''HelpURL'''' : null,\r\n      ''''InnerException'''' : null,\r\n      ''''Message'''' : ''''Inner exception...'''',\r\n      ''''RemoteStackIndex'''' : 0,\r\n      ''''RemoteStackTraceString'''' : null,\r\n      ''''Source'''' : null,\r\n      ''''StackTraceString'''' : null,\r\n      ''''WatsonBuckets'''' : null\r\n    },\r\n  ''''Message'''' : ''''Outter exception...'''',\r\n  ''''RemoteStackIndex'''' : 0,\r\n  ''''RemoteStackTraceString'''' : null,\r\n  ''''Source'''' : ''''AppBiz'''',\r\n  ''''StackTraceString'''' : '''' at MyApp.LoginBiz.Login() in C:\\MyApp\\LoginBiz.cs:line 44\r\n at MyApp.LoginSvc.Login() in C:\\MyApp\\LoginSvc.cs:line 71\r\n at SyncInvokeLogin(Object , Object[] , Object[] )\r\n at System.ServiceModel.Dispatcher.SyncMethodInvoker.Invoke(Object instance, Object[] inputs, Object[]& outputs)\r\n at System.ServiceModel.Dispatcher.DispatchOperationRuntime.InvokeBegin(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage5(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage41(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage4(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage31(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage3(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage2(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage11(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage1(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.MessageRpc.Process(Boolean isOperationContextSet)'''',\r\n  ''''WatsonBuckets'''' : null\r\n}''", span="7301-7325", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="DefaultSerializationBinder.cs"];
m1_3242 [label="Assert.IsNotNull(exception)", span="7328-7328", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="DefaultSerializationBinder.cs"];
m1_3243 [label="CustomAssert.IsInstanceOfType(typeof(InvalidOperationException), exception)", span="7329-7329", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="DefaultSerializationBinder.cs"];
m1_3245 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", span="7299-7299", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="DefaultSerializationBinder.cs"];
m1_3295 [label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="DefaultSerializationBinder.cs"];
m1_1120 [label="Entry Newtonsoft.Json.Tests.TestObjects.PersonRaw.PersonRaw()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.PersonRaw.PersonRaw()", file="DefaultSerializationBinder.cs"];
m1_1736 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", span="3751-3751", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="DefaultSerializationBinder.cs"];
m1_1743 [label="ThisGenericTest<KeyValueId> gen = JsonConvert.DeserializeObject<ThisGenericTest<KeyValueId>>(json)", span="3778-3778", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="DefaultSerializationBinder.cs"];
m1_1744 [label="Assert.AreEqual(''some value'', gen.MyProperty)", span="3779-3779", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="DefaultSerializationBinder.cs"];
m1_1741 [label="string json = g.ToJson()", span="3760-3760", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="DefaultSerializationBinder.cs"];
m1_1742 [label="StringAssert.AreEqual(@''{\r\n  ''''MyProperty'''': ''''some value'''',\r\n  ''''TheItems'''': [\r\n    {\r\n      ''''Id'''': 1,\r\n      ''''Key'''': ''''key1'''',\r\n      ''''Value'''': ''''value1''''\r\n    },\r\n    {\r\n      ''''Id'''': 2,\r\n      ''''Key'''': ''''key2'''',\r\n      ''''Value'''': ''''value2''''\r\n    }\r\n  ]\r\n}'', json)", span="3762-3776", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="DefaultSerializationBinder.cs"];
m1_1737 [label="ThisGenericTest<KeyValueId> g = new ThisGenericTest<KeyValueId>()", span="3753-3753", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="DefaultSerializationBinder.cs"];
m1_1740 [label="g.MyProperty = ''some value''", span="3758-3758", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="DefaultSerializationBinder.cs"];
m1_1738 [label="g.Add(new KeyValueId { Id = 1, Key = ''key1'', Value = ''value1'' })", span="3755-3755", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="DefaultSerializationBinder.cs"];
m1_1739 [label="g.Add(new KeyValueId { Id = 2, Key = ''key2'', Value = ''value2'' })", span="3756-3756", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="DefaultSerializationBinder.cs"];
m1_1745 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", span="3751-3751", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="DefaultSerializationBinder.cs"];
m1_3826 [label="Entry System.Net.Mail.MailAddress.MailAddress(string, string)", span="0-0", cluster="System.Net.Mail.MailAddress.MailAddress(string, string)", file="DefaultSerializationBinder.cs"];
m1_416 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="877-877", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DefaultSerializationBinder.cs"];
m1_417 [label="info.AddValue(''stringValue'', _stringValue)", span="879-879", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DefaultSerializationBinder.cs"];
m1_418 [label="info.AddValue(''intValue'', _intValue)", span="880-880", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DefaultSerializationBinder.cs"];
m1_419 [label="info.AddValue(''person1'', _person1, typeof(PersonReference))", span="881-881", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DefaultSerializationBinder.cs"];
m1_420 [label="info.AddValue(''person2'', _person2, typeof(PersonReference))", span="882-882", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DefaultSerializationBinder.cs"];
m1_421 [label="info.AddValue(''person3'', _person3, typeof(PersonReference))", span="883-883", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DefaultSerializationBinder.cs"];
m1_422 [label="info.AddValue(''parent'', _parent, typeof(PreserveReferencesCallbackTestObject))", span="884-884", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DefaultSerializationBinder.cs"];
m1_423 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="877-877", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DefaultSerializationBinder.cs"];
m1_1102 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", span="2271-2271", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", file="DefaultSerializationBinder.cs"];
m1_1104 [label="Assert.AreEqual(@''{''''Id'''':0}'', json)", span="2274-2274", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", file="DefaultSerializationBinder.cs"];
m1_1103 [label="string json = JsonConvert.SerializeObject(new GenericImpl())", span="2273-2273", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", file="DefaultSerializationBinder.cs"];
m1_1105 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", span="2271-2271", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", file="DefaultSerializationBinder.cs"];
m1_1594 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", span="3350-3350", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", file="DefaultSerializationBinder.cs"];
m1_1595 [label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonConvert.SerializeObject(new MemoryStream(), new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(NETFX_CORE || PORTABLE || ASPNETCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                });\r\n            }, @''Error getting value from 'ReadTimeout' on 'System.IO.MemoryStream'.'')", span="3352-3363", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", file="DefaultSerializationBinder.cs"];
m1_1596 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", span="3350-3350", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", file="DefaultSerializationBinder.cs"];
m1_3495 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", span="8005-8005", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="DefaultSerializationBinder.cs"];
m1_3496 [label="BigInteger i = BigInteger.Parse(''123456789999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999990'')", span="8007-8007", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="DefaultSerializationBinder.cs"];
m1_3497 [label="string json = JsonConvert.SerializeObject(new[] { i }, Formatting.Indented)", span="8009-8009", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="DefaultSerializationBinder.cs"];
m1_3498 [label="StringAssert.AreEqual(@''[\r\n  123456789999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999990\r\n]'', json)", span="8011-8013", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="DefaultSerializationBinder.cs"];
m1_3499 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", span="8005-8005", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="DefaultSerializationBinder.cs"];
m1_1879 [label="Entry System.Collections.IEnumerable.GetEnumerator()", span="0-0", cluster="System.Collections.IEnumerable.GetEnumerator()", file="DefaultSerializationBinder.cs"];
m1_771 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", span="1692-1692", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="DefaultSerializationBinder.cs"];
m1_777 [label="JsonPropertyClass test2 = JsonConvert.DeserializeObject<JsonPropertyClass>(jsonText)", span="1702-1702", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="DefaultSerializationBinder.cs"];
m1_778 [label="Assert.AreEqual(test.Pie, test2.Pie)", span="1704-1704", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="DefaultSerializationBinder.cs"];
m1_779 [label="Assert.AreEqual(test.SweetCakesCount, test2.SweetCakesCount)", span="1705-1705", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="DefaultSerializationBinder.cs"];
m1_776 [label="Assert.AreEqual(@''{''''pie'''':''''Delicious'''',''''pie1'''':''''PieChart!'''',''''sweet_cakes_count'''':2147483647}'', jsonText)", span="1700-1700", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="DefaultSerializationBinder.cs"];
m1_775 [label="string jsonText = JsonConvert.SerializeObject(test)", span="1698-1698", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="DefaultSerializationBinder.cs"];
m1_772 [label="JsonPropertyClass test = new JsonPropertyClass()", span="1694-1694", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="DefaultSerializationBinder.cs"];
m1_774 [label="test.SweetCakesCount = int.MaxValue", span="1696-1696", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="DefaultSerializationBinder.cs"];
m1_773 [label="test.Pie = ''Delicious''", span="1695-1695", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="DefaultSerializationBinder.cs"];
m1_780 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", span="1692-1692", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="DefaultSerializationBinder.cs"];
m1_2957 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", span="6666-6666", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", file="DefaultSerializationBinder.cs"];
m1_2958 [label="byte[] b = JsonConvert.DeserializeObject<byte[]>('''')", span="6668-6668", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", file="DefaultSerializationBinder.cs"];
m1_2959 [label="Assert.IsNull(b)", span="6669-6669", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", file="DefaultSerializationBinder.cs"];
m1_2960 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", span="6666-6666", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", file="DefaultSerializationBinder.cs"];
m1_2551 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", span="5759-5759", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="DefaultSerializationBinder.cs"];
m1_2555 [label="Assert.AreEqual(@''{''''differentVirtualMember'''':''''VirtualMember!'''',''''nonVirtualMember'''':''''NonVirtualMember!''''}'', result)", span="5769-5769", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="DefaultSerializationBinder.cs"];
m1_2553 [label="string result = JsonConvert.SerializeObject(cc)", span="5767-5767", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="DefaultSerializationBinder.cs"];
m1_2554 [label="Console.WriteLine(result)", span="5768-5768", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="DefaultSerializationBinder.cs"];
m1_2552 [label="ChildWithDifferentOverrideObject cc = new ChildWithDifferentOverrideObject\r\n            {\r\n                VirtualMember = ''VirtualMember!'',\r\n                NonVirtualMember = ''NonVirtualMember!''\r\n            }", span="5761-5765", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="DefaultSerializationBinder.cs"];
m1_2556 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", span="5759-5759", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="DefaultSerializationBinder.cs"];
m1_2837 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", span="6446-6446", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", file="DefaultSerializationBinder.cs"];
m1_2839 [label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<ConvertableIntTestClass>(json), ''Error converting value 1 to type 'Newtonsoft.Json.Tests.ConvertibleInt'. Path 'Integer', line 2, position 15.'')", span="6454-6454", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", file="DefaultSerializationBinder.cs"];
m1_2838 [label="string json = @''{\r\n  ''''Integer'''': 1,\r\n  ''''NullableInteger1'''': 2,\r\n  ''''NullableInteger2'''': null\r\n}''", span="6448-6452", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", file="DefaultSerializationBinder.cs"];
m1_2840 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", span="6446-6446", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", file="DefaultSerializationBinder.cs"];
m1_797 [label="Entry System.IO.MemoryStream.MemoryStream(byte[])", span="0-0", cluster="System.IO.MemoryStream.MemoryStream(byte[])", file="DefaultSerializationBinder.cs"];
m1_3560 [label="Entry Newtonsoft.Json.Tests.TestObjects.IMyInterface.PrintTest()", span="44-44", cluster="Newtonsoft.Json.Tests.TestObjects.IMyInterface.PrintTest()", file="DefaultSerializationBinder.cs"];
m1_2644 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", span="6021-6021", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="DefaultSerializationBinder.cs"];
m1_2645 [label="BusRun r = JsonConvert.DeserializeObject<BusRun>(''{\''Departures\'':[\''\\/Date(1309874148734-0400)\\/\'',\''\\/Date(1309874148739-0400)\\/\'',null],\''WheelchairAccessible\'':true}'')", span="6023-6023", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="DefaultSerializationBinder.cs"];
m1_2646 [label="Assert.AreEqual(typeof(List<DateTime?>), r.Departures.GetType())", span="6025-6025", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="DefaultSerializationBinder.cs"];
m1_2647 [label="Assert.AreEqual(3, r.Departures.Count())", span="6026-6026", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="DefaultSerializationBinder.cs"];
m1_2648 [label="Assert.IsNotNull(r.Departures.ElementAt(0))", span="6027-6027", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="DefaultSerializationBinder.cs"];
m1_2649 [label="Assert.IsNotNull(r.Departures.ElementAt(1))", span="6028-6028", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="DefaultSerializationBinder.cs"];
m1_2650 [label="Assert.IsNull(r.Departures.ElementAt(2))", span="6029-6029", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="DefaultSerializationBinder.cs"];
m1_2651 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", span="6021-6021", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="DefaultSerializationBinder.cs"];
m1_3893 [label=json, span="", file="DefaultSerializationBinder.cs"];
m1_3898 [label=json, span="", file="DefaultSerializationBinder.cs"];
m1_3899 [label=json, span="", file="DefaultSerializationBinder.cs"];
m1_3900 [label=json, span="", file="DefaultSerializationBinder.cs"];
m1_3901 [label=json, span="", file="DefaultSerializationBinder.cs"];
m1_3902 [label=json, span="", file="DefaultSerializationBinder.cs"];
m1_3903 [label=json, span="", file="DefaultSerializationBinder.cs"];
m1_3904 [label=json, span="", file="DefaultSerializationBinder.cs"];
m1_3905 [label=json, span="", file="DefaultSerializationBinder.cs"];
m1_3906 [label=json, span="", file="DefaultSerializationBinder.cs"];
m1_3920 [label=json, span="", file="DefaultSerializationBinder.cs"];
m1_3924 [label=json, span="", file="DefaultSerializationBinder.cs"];
m1_3936 [label=json, span="", file="DefaultSerializationBinder.cs"];
m1_3937 [label=json, span="", file="DefaultSerializationBinder.cs"];
m1_3945 [label=json, span="", file="DefaultSerializationBinder.cs"];
m1_3947 [label=json, span="", file="DefaultSerializationBinder.cs"];
m1_3952 [label=JsonMessage, span="", file="DefaultSerializationBinder.cs"];
m1_3892 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest", span="", file="DefaultSerializationBinder.cs"];
m1_3894 [label=strFromTest, span="", file="DefaultSerializationBinder.cs"];
m1_3907 [label=json, span="", file="DefaultSerializationBinder.cs"];
m1_3908 [label=json, span="", file="DefaultSerializationBinder.cs"];
m1_3911 [label=json, span="", file="DefaultSerializationBinder.cs"];
m1_3941 [label=json, span="", file="DefaultSerializationBinder.cs"];
m1_3942 [label=s, span="", file="DefaultSerializationBinder.cs"];
m1_3897 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers", span="", file="DefaultSerializationBinder.cs"];
m1_3934 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes", span="", file="DefaultSerializationBinder.cs"];
m1_3938 [label=errors, span="", file="DefaultSerializationBinder.cs"];
m1_3939 [label=errors, span="", file="DefaultSerializationBinder.cs"];
m1_3940 [label=errors, span="", file="DefaultSerializationBinder.cs"];
m1_3915 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", span="", file="DefaultSerializationBinder.cs"];
m1_3910 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>", span="", file="DefaultSerializationBinder.cs"];
m1_3888 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItem", span="", file="DefaultSerializationBinder.cs"];
m1_3909 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass", span="", file="DefaultSerializationBinder.cs"];
m1_3933 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty", span="", file="DefaultSerializationBinder.cs"];
m1_3932 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty", span="", file="DefaultSerializationBinder.cs"];
m1_3935 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException", span="", file="DefaultSerializationBinder.cs"];
m1_3890 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject", span="", file="DefaultSerializationBinder.cs"];
m1_3916 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", span="", file="DefaultSerializationBinder.cs"];
m1_3946 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver", span="", file="DefaultSerializationBinder.cs"];
m1_3912 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor", span="", file="DefaultSerializationBinder.cs"];
m1_3943 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>", span="", file="DefaultSerializationBinder.cs"];
m1_3953 [label="Newtonsoft.Json.Tests.Serialization.DecimalTest", span="", file="DefaultSerializationBinder.cs"];
m1_3913 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1", span="", file="DefaultSerializationBinder.cs"];
m1_3926 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived", span="", file="DefaultSerializationBinder.cs"];
m1_3950 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedConstructorType", span="", file="DefaultSerializationBinder.cs"];
m1_3891 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast", span="", file="DefaultSerializationBinder.cs"];
m1_3949 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId", span="", file="DefaultSerializationBinder.cs"];
m1_3918 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA", span="", file="DefaultSerializationBinder.cs"];
m1_3919 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB", span="", file="DefaultSerializationBinder.cs"];
m1_3914 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2", span="", file="DefaultSerializationBinder.cs"];
m1_3929 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable", span="", file="DefaultSerializationBinder.cs"];
m1_3928 [label="out Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable", span="", file="DefaultSerializationBinder.cs"];
m1_3948 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor", span="", file="DefaultSerializationBinder.cs"];
m2_14 [label="JsonObjectContract contract = base.CreateObjectContract(objectType)", span="139-139", cluster="Newtonsoft.Json.Tests.Serialization.AutofacContractResolver.CreateObjectContract(System.Type)", file="DependencyInjectionTests.cs", color=red, community=0];
m2_362 [label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreShouldSerializeUnset()", span="689-689", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreShouldSerializeUnset()", file="DependencyInjectionTests.cs"];
m2_364 [label="JsonObjectContract contract = (JsonObjectContract)resolver.ResolveContract(typeof(ClassWithShouldSerialize))", span="693-693", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreShouldSerializeUnset()", file="DependencyInjectionTests.cs"];
m2_368 [label="Assert.AreEqual(null, property2.ShouldSerialize)", span="699-699", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreShouldSerializeUnset()", file="DependencyInjectionTests.cs"];
m2_363 [label="DefaultContractResolver resolver = new DefaultContractResolver()", span="691-691", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreShouldSerializeUnset()", file="DependencyInjectionTests.cs"];
m2_365 [label="var property1 = contract.Properties[''Prop1'']", span="695-695", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreShouldSerializeUnset()", file="DependencyInjectionTests.cs"];
m2_367 [label="var property2 = contract.Properties[''Prop2'']", span="698-698", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreShouldSerializeUnset()", file="DependencyInjectionTests.cs"];
m2_366 [label="Assert.AreNotEqual(null, property1.ShouldSerialize)", span="696-696", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreShouldSerializeUnset()", file="DependencyInjectionTests.cs"];
m2_369 [label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreShouldSerializeUnset()", span="689-689", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreShouldSerializeUnset()", file="DependencyInjectionTests.cs"];
m2_186 [label="Entry Newtonsoft.Json.Tests.Serialization.AddressWithDataMember.AddressWithDataMember()", span="106-106", cluster="Newtonsoft.Json.Tests.Serialization.AddressWithDataMember.AddressWithDataMember()", file="DependencyInjectionTests.cs"];
m2_191 [label="Entry Newtonsoft.Json.JsonTextReader.Read()", span="400-400", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="DependencyInjectionTests.cs"];
m2_342 [label="Entry Unk.ToDictionary", span="", cluster="Unk.ToDictionary", file="DependencyInjectionTests.cs"];
m2_94 [label="Entry Unk.IsNull", span="", cluster="Unk.IsNull", file="DependencyInjectionTests.cs"];
m2_0 [label="Entry Newtonsoft.Json.Tests.Serialization.DynamicContractResolver.DynamicContractResolver(char)", span="56-56", cluster="Newtonsoft.Json.Tests.Serialization.DynamicContractResolver.DynamicContractResolver(char)", file="DependencyInjectionTests.cs"];
m2_1 [label="_startingWithChar = startingWithChar", span="58-58", cluster="Newtonsoft.Json.Tests.Serialization.DynamicContractResolver.DynamicContractResolver(char)", file="DependencyInjectionTests.cs"];
m2_2 [label="Exit Newtonsoft.Json.Tests.Serialization.DynamicContractResolver.DynamicContractResolver(char)", span="56-56", cluster="Newtonsoft.Json.Tests.Serialization.DynamicContractResolver.DynamicContractResolver(char)", file="DependencyInjectionTests.cs"];
m2_80 [label="Entry Newtonsoft.Json.Serialization.IAttributeProvider.GetAttributes(bool)", span="40-40", cluster="Newtonsoft.Json.Serialization.IAttributeProvider.GetAttributes(bool)", file="DependencyInjectionTests.cs"];
m2_10 [label="Entry Newtonsoft.Json.Tests.Serialization.AutofacContractResolver.AutofacContractResolver(IContainer)", span="132-132", cluster="Newtonsoft.Json.Tests.Serialization.AutofacContractResolver.AutofacContractResolver(IContainer)", file="DependencyInjectionTests.cs"];
m2_71 [label="Assert.AreEqual(''Name1!'', o.People[0].Name)", span="247-247", cluster="Newtonsoft.Json.Tests.Serialization.DependencyInjectionTests.CreateObjectWithSettableParameter()", file="DependencyInjectionTests.cs"];
m2_303 [label="Entry Newtonsoft.Json.Linq.JObject.Parse(string)", span="407-407", cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", file="DependencyInjectionTests.cs"];
m2_62 [label="Assert.IsNotNull(o)", span="236-236", cluster="Newtonsoft.Json.Tests.Serialization.DependencyInjectionTests.CreateObjectWithSettableParameter()", file="DependencyInjectionTests.cs"];
m2_327 [label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ExtensionDataGetterCanBeIteratedMultipleTimes()", span="638-638", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ExtensionDataGetterCanBeIteratedMultipleTimes()", file="DependencyInjectionTests.cs"];
m2_329 [label="JsonObjectContract contract = (JsonObjectContract)resolver.ResolveContract(typeof(ClassWithExtensionData))", span="641-641", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ExtensionDataGetterCanBeIteratedMultipleTimes()", file="DependencyInjectionTests.cs"];
m2_328 [label="DefaultContractResolver resolver = new DefaultContractResolver()", span="640-640", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ExtensionDataGetterCanBeIteratedMultipleTimes()", file="DependencyInjectionTests.cs"];
m2_333 [label="Assert.IsTrue(dictionaryData.Any())", span="654-654", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ExtensionDataGetterCanBeIteratedMultipleTimes()", file="DependencyInjectionTests.cs"];
m2_334 [label="Assert.IsTrue(dictionaryData.Any())", span="655-655", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ExtensionDataGetterCanBeIteratedMultipleTimes()", file="DependencyInjectionTests.cs"];
m2_336 [label="Assert.IsTrue(extensionData.Any())", span="658-658", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ExtensionDataGetterCanBeIteratedMultipleTimes()", file="DependencyInjectionTests.cs"];
m2_337 [label="Assert.IsTrue(extensionData.Any())", span="659-659", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ExtensionDataGetterCanBeIteratedMultipleTimes()", file="DependencyInjectionTests.cs"];
m2_330 [label="ClassWithExtensionData myClass = new ClassWithExtensionData\r\n            {\r\n                Data = new Dictionary<string, object>\r\n                {\r\n                    { ''SomeField'', ''Field'' },\r\n                }\r\n            }", span="643-649", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ExtensionDataGetterCanBeIteratedMultipleTimes()", file="DependencyInjectionTests.cs"];
m2_331 [label="ExtensionDataGetter getter = contract.ExtensionDataGetter", span="651-651", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ExtensionDataGetterCanBeIteratedMultipleTimes()", file="DependencyInjectionTests.cs"];
m2_332 [label="IEnumerable<KeyValuePair<object, object>> dictionaryData = getter(myClass).ToDictionary(kv => kv.Key, kv => kv.Value)", span="653-653", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ExtensionDataGetterCanBeIteratedMultipleTimes()", file="DependencyInjectionTests.cs"];
m2_335 [label="IEnumerable<KeyValuePair<object, object>> extensionData = getter(myClass)", span="657-657", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ExtensionDataGetterCanBeIteratedMultipleTimes()", file="DependencyInjectionTests.cs"];
m2_338 [label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ExtensionDataGetterCanBeIteratedMultipleTimes()", span="638-638", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ExtensionDataGetterCanBeIteratedMultipleTimes()", file="DependencyInjectionTests.cs"];
m2_31 [label="IContainer container = builder.Build()", span="168-168", cluster="Newtonsoft.Json.Tests.Serialization.DependencyInjectionTests.CreateObjectWithParameters()", file="DependencyInjectionTests.cs"];
m2_254 [label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ParameterizedCreator()", span="466-466", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ParameterizedCreator()", file="DependencyInjectionTests.cs"];
m2_256 [label="var contract = (JsonObjectContract)resolver.ResolveContract(typeof(PublicParameterizedConstructorWithPropertyNameConflictWithAttribute))", span="469-469", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ParameterizedCreator()", file="DependencyInjectionTests.cs"];
m2_259 [label="Assert.AreEqual(1, contract.CreatorParameters.Count)", span="473-473", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ParameterizedCreator()", file="DependencyInjectionTests.cs"];
m2_260 [label="Assert.AreEqual(''name'', contract.CreatorParameters[0].PropertyName)", span="474-474", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ParameterizedCreator()", file="DependencyInjectionTests.cs"];
m2_255 [label="var resolver = new DefaultContractResolver()", span="468-468", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ParameterizedCreator()", file="DependencyInjectionTests.cs"];
m2_258 [label="Assert.IsNotNull(contract.ParameterizedCreator)", span="472-472", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ParameterizedCreator()", file="DependencyInjectionTests.cs"];
m2_257 [label="Assert.IsNull(contract.DefaultCreator)", span="471-471", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ParameterizedCreator()", file="DependencyInjectionTests.cs"];
m2_262 [label="Assert.IsNull(contract.ParameterizedCreator)", span="477-477", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ParameterizedCreator()", file="DependencyInjectionTests.cs"];
m2_261 [label="contract.ParameterizedCreator = null", span="476-476", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ParameterizedCreator()", file="DependencyInjectionTests.cs"];
m2_263 [label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ParameterizedCreator()", span="466-466", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ParameterizedCreator()", file="DependencyInjectionTests.cs"];
m2_44 [label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="397-397", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="DependencyInjectionTests.cs"];
m2_45 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="817-817", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", color=green, community=0, file="DependencyInjectionTests.cs"];
m2_46 [label="Entry Unk.IsNotNull", span="", cluster="Unk.IsNotNull", color=green, community=0, file="DependencyInjectionTests.cs"];
m2_47 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="DependencyInjectionTests.cs"];
m2_48 [label="Entry System.DateTime.DateTime(int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int)", file="DependencyInjectionTests.cs"];
m2_49 [label="Entry lambda expression", span="162-166", cluster="lambda expression", file="DependencyInjectionTests.cs"];
m2_50 [label="count++", span="164-164", cluster="lambda expression", file="DependencyInjectionTests.cs"];
m2_51 [label="return new LogManager(new DateTime(2000, 12, 12));", span="165-165", cluster="lambda expression", file="DependencyInjectionTests.cs"];
m2_52 [label="Exit lambda expression", span="162-166", cluster="lambda expression", file="DependencyInjectionTests.cs"];
m2_53 [label="Entry Newtonsoft.Json.Tests.Serialization.DependencyInjectionTests.CreateObjectWithSettableParameter()", span="191-191", cluster="Newtonsoft.Json.Tests.Serialization.DependencyInjectionTests.CreateObjectWithSettableParameter()", file="DependencyInjectionTests.cs"];
m2_54 [label="int count = 0", span="193-193", cluster="Newtonsoft.Json.Tests.Serialization.DependencyInjectionTests.CreateObjectWithSettableParameter()", file="DependencyInjectionTests.cs"];
m2_55 [label="ContainerBuilder builder = new ContainerBuilder()", span="195-195", cluster="Newtonsoft.Json.Tests.Serialization.DependencyInjectionTests.CreateObjectWithSettableParameter()", color=green, community=0, file="DependencyInjectionTests.cs"];
m2_56 [label="builder.Register(c =>\r\n            {\r\n                count++;\r\n                return new TaskRepository();\r\n            }).As<ITaskRepository>()", span="196-200", cluster="Newtonsoft.Json.Tests.Serialization.DependencyInjectionTests.CreateObjectWithSettableParameter()", file="DependencyInjectionTests.cs"];
m2_57 [label="builder.RegisterType<HasSettableProperty>()", span="201-201", cluster="Newtonsoft.Json.Tests.Serialization.DependencyInjectionTests.CreateObjectWithSettableParameter()", color=green, community=0, file="DependencyInjectionTests.cs"];
m2_58 [label="builder.Register(c =>\r\n            {\r\n                count++;\r\n                return new LogManager(new DateTime(2000, 12, 12));\r\n            }).As<ILogger>()", span="202-206", cluster="Newtonsoft.Json.Tests.Serialization.DependencyInjectionTests.CreateObjectWithSettableParameter()", color=green, community=0, file="DependencyInjectionTests.cs"];
m2_59 [label="IContainer container = builder.Build()", span="208-208", cluster="Newtonsoft.Json.Tests.Serialization.DependencyInjectionTests.CreateObjectWithSettableParameter()", color=green, community=0, file="DependencyInjectionTests.cs"];
m2_60 [label="AutofacContractResolver contractResolver = new AutofacContractResolver(container)", span="210-210", cluster="Newtonsoft.Json.Tests.Serialization.DependencyInjectionTests.CreateObjectWithSettableParameter()", file="DependencyInjectionTests.cs"];
m2_341 [label="Entry Newtonsoft.Json.Serialization.ExtensionDataGetter.Invoke(object)", span="75-75", cluster="Newtonsoft.Json.Serialization.ExtensionDataGetter.Invoke(object)", file="DependencyInjectionTests.cs"];
m2_311 [label="Entry Newtonsoft.Json.Tests.Serialization.Book.Book()", span="84-84", cluster="Newtonsoft.Json.Tests.Serialization.Book.Book()", file="DependencyInjectionTests.cs"];
m2_200 [label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", span="385-385", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", file="DependencyInjectionTests.cs"];
m2_201 [label="JsonProperty p = new JsonProperty { PropertyName = ''abc'' }", span="387-387", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", file="DependencyInjectionTests.cs"];
m2_203 [label="p = new JsonProperty { PropertyName = ''123'' }", span="390-390", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", file="DependencyInjectionTests.cs"];
m2_205 [label="p = new JsonProperty { PropertyName = ''._-'' }", span="393-393", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", file="DependencyInjectionTests.cs"];
m2_207 [label="p = new JsonProperty { PropertyName = ''!@#'' }", span="396-396", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", file="DependencyInjectionTests.cs"];
m2_209 [label="p = new JsonProperty { PropertyName = ''$%^'' }", span="399-399", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", file="DependencyInjectionTests.cs"];
m2_211 [label="p = new JsonProperty { PropertyName = ''?*('' }", span="402-402", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", file="DependencyInjectionTests.cs"];
m2_213 [label="p = new JsonProperty { PropertyName = '')_+'' }", span="405-405", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", file="DependencyInjectionTests.cs"];
m2_215 [label="p = new JsonProperty { PropertyName = ''=:,'' }", span="408-408", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", file="DependencyInjectionTests.cs"];
m2_217 [label="p = new JsonProperty { PropertyName = null }", span="411-411", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", file="DependencyInjectionTests.cs"];
m2_219 [label="p = new JsonProperty { PropertyName = ''&'' }", span="414-414", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", file="DependencyInjectionTests.cs"];
m2_221 [label="p = new JsonProperty { PropertyName = ''<'' }", span="417-417", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", file="DependencyInjectionTests.cs"];
m2_223 [label="p = new JsonProperty { PropertyName = ''>'' }", span="420-420", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", file="DependencyInjectionTests.cs"];
m2_225 [label="p = new JsonProperty { PropertyName = ''''' }", span="423-423", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", file="DependencyInjectionTests.cs"];
m2_227 [label="p = new JsonProperty { PropertyName = @'''''''' }", span="426-426", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", file="DependencyInjectionTests.cs"];
m2_229 [label="p = new JsonProperty { PropertyName = Environment.NewLine }", span="429-429", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", file="DependencyInjectionTests.cs"];
m2_231 [label="p = new JsonProperty { PropertyName = ''\0'' }", span="432-432", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", file="DependencyInjectionTests.cs"];
m2_233 [label="p = new JsonProperty { PropertyName = ''\n'' }", span="435-435", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", file="DependencyInjectionTests.cs"];
m2_235 [label="p = new JsonProperty { PropertyName = ''\v'' }", span="438-438", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", file="DependencyInjectionTests.cs"];
m2_237 [label="p = new JsonProperty { PropertyName = ''\u00B9'' }", span="441-441", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", file="DependencyInjectionTests.cs"];
m2_202 [label="Assert.IsTrue(p._skipPropertyNameEscape)", span="388-388", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", file="DependencyInjectionTests.cs"];
m2_204 [label="Assert.IsTrue(p._skipPropertyNameEscape)", span="391-391", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", file="DependencyInjectionTests.cs"];
m2_206 [label="Assert.IsTrue(p._skipPropertyNameEscape)", span="394-394", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", file="DependencyInjectionTests.cs"];
m2_208 [label="Assert.IsTrue(p._skipPropertyNameEscape)", span="397-397", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", file="DependencyInjectionTests.cs"];
m2_210 [label="Assert.IsTrue(p._skipPropertyNameEscape)", span="400-400", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", file="DependencyInjectionTests.cs"];
m2_212 [label="Assert.IsTrue(p._skipPropertyNameEscape)", span="403-403", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", file="DependencyInjectionTests.cs"];
m2_214 [label="Assert.IsTrue(p._skipPropertyNameEscape)", span="406-406", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", file="DependencyInjectionTests.cs"];
m2_216 [label="Assert.IsTrue(p._skipPropertyNameEscape)", span="409-409", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", file="DependencyInjectionTests.cs"];
m2_218 [label="Assert.IsTrue(p._skipPropertyNameEscape)", span="412-412", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", file="DependencyInjectionTests.cs"];
m2_220 [label="Assert.IsFalse(p._skipPropertyNameEscape)", span="415-415", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", file="DependencyInjectionTests.cs"];
m2_222 [label="Assert.IsFalse(p._skipPropertyNameEscape)", span="418-418", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", file="DependencyInjectionTests.cs"];
m2_224 [label="Assert.IsFalse(p._skipPropertyNameEscape)", span="421-421", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", file="DependencyInjectionTests.cs"];
m2_226 [label="Assert.IsFalse(p._skipPropertyNameEscape)", span="424-424", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", file="DependencyInjectionTests.cs"];
m2_228 [label="Assert.IsFalse(p._skipPropertyNameEscape)", span="427-427", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", file="DependencyInjectionTests.cs"];
m2_230 [label="Assert.IsFalse(p._skipPropertyNameEscape)", span="430-430", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", file="DependencyInjectionTests.cs"];
m2_232 [label="Assert.IsFalse(p._skipPropertyNameEscape)", span="433-433", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", file="DependencyInjectionTests.cs"];
m2_234 [label="Assert.IsFalse(p._skipPropertyNameEscape)", span="436-436", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", file="DependencyInjectionTests.cs"];
m2_236 [label="Assert.IsFalse(p._skipPropertyNameEscape)", span="439-439", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", file="DependencyInjectionTests.cs"];
m2_238 [label="Assert.IsFalse(p._skipPropertyNameEscape)", span="442-442", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", file="DependencyInjectionTests.cs"];
m2_239 [label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", span="385-385", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", file="DependencyInjectionTests.cs"];
m2_26 [label="int count = 0", span="157-157", cluster="Newtonsoft.Json.Tests.Serialization.DependencyInjectionTests.CreateObjectWithParameters()", file="DependencyInjectionTests.cs"];
m2_28 [label="builder.RegisterType<TaskRepository>().As<ITaskRepository>()", span="160-160", cluster="Newtonsoft.Json.Tests.Serialization.DependencyInjectionTests.CreateObjectWithParameters()", file="DependencyInjectionTests.cs"];
m2_29 [label="builder.RegisterType<TaskController>()", span="161-161", cluster="Newtonsoft.Json.Tests.Serialization.DependencyInjectionTests.CreateObjectWithParameters()", file="DependencyInjectionTests.cs"];
m2_27 [label="ContainerBuilder builder = new ContainerBuilder()", span="159-159", cluster="Newtonsoft.Json.Tests.Serialization.DependencyInjectionTests.CreateObjectWithParameters()", file="DependencyInjectionTests.cs"];
m2_30 [label="builder.Register(c =>\r\n            {\r\n                count++;\r\n                return new LogManager(new DateTime(2000, 12, 12));\r\n            }).As<ILogger>()", span="162-166", cluster="Newtonsoft.Json.Tests.Serialization.DependencyInjectionTests.CreateObjectWithParameters()", file="DependencyInjectionTests.cs"];
m2_9 [label="Exit Newtonsoft.Json.Tests.Serialization.HasSettableProperty.HasSettableProperty(Newtonsoft.Json.Tests.Serialization.ILogger)", span="122-122", cluster="Newtonsoft.Json.Tests.Serialization.HasSettableProperty.HasSettableProperty(Newtonsoft.Json.Tests.Serialization.ILogger)", file="DependencyInjectionTests.cs"];
m2_158 [label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractDictionaryTestClass()", span="306-306", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractDictionaryTestClass()", file="DependencyInjectionTests.cs"];
m2_160 [label="var contract = (JsonDictionaryContract)resolver.ResolveContract(typeof(AbstractDictionaryTestClass<string, int>))", span="309-309", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractDictionaryTestClass()", file="DependencyInjectionTests.cs"];
m2_167 [label="Assert.AreEqual(2, d.Count)", span="327-327", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractDictionaryTestClass()", file="DependencyInjectionTests.cs"];
m2_168 [label="Assert.AreEqual(1, d[''key1''])", span="328-328", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractDictionaryTestClass()", file="DependencyInjectionTests.cs"];
m2_169 [label="Assert.AreEqual(2, d[''key2''])", span="329-329", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractDictionaryTestClass()", file="DependencyInjectionTests.cs"];
m2_159 [label="var resolver = new DefaultContractResolver()", span="308-308", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractDictionaryTestClass()", file="DependencyInjectionTests.cs"];
m2_164 [label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<AbstractDictionaryTestClass<string, int>>(@''{key1:1,key2:2}'', new JsonSerializerSettings\r\n            {\r\n                ContractResolver = resolver\r\n            }), ''Could not create an instance of type Newtonsoft.Json.Tests.TestObjects.AbstractDictionaryTestClass`2[System.String,System.Int32]. Type is an interface or abstract class and cannot be instantiated. Path 'key1', line 1, position 6.'')", span="315-318", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractDictionaryTestClass()", file="DependencyInjectionTests.cs"];
m2_166 [label="var d = JsonConvert.DeserializeObject<AbstractDictionaryTestClass<string, int>>(@''{key1:1,key2:2}'', new JsonSerializerSettings\r\n            {\r\n                ContractResolver = resolver\r\n            })", span="322-325", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractDictionaryTestClass()", file="DependencyInjectionTests.cs"];
m2_161 [label="Assert.IsFalse(contract.IsInstantiable)", span="311-311", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractDictionaryTestClass()", file="DependencyInjectionTests.cs"];
m2_163 [label="Assert.IsFalse(contract.HasParameterizedCreatorInternal)", span="313-313", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractDictionaryTestClass()", file="DependencyInjectionTests.cs"];
m2_162 [label="Assert.IsNull(contract.DefaultCreator)", span="312-312", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractDictionaryTestClass()", file="DependencyInjectionTests.cs"];
m2_165 [label="contract.DefaultCreator = () => new AbstractImplementationDictionaryTestClass<string, int>()", span="320-320", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractDictionaryTestClass()", file="DependencyInjectionTests.cs"];
m2_170 [label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractDictionaryTestClass()", span="306-306", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractDictionaryTestClass()", file="DependencyInjectionTests.cs"];
m2_290 [label="Entry Newtonsoft.Json.Tests.TestObjects.MultipleParametrizedConstructorsJsonConstructor.MultipleParametrizedConstructorsJsonConstructor(string, int)", span="40-40", cluster="Newtonsoft.Json.Tests.TestObjects.MultipleParametrizedConstructorsJsonConstructor.MultipleParametrizedConstructorsJsonConstructor(string, int)", file="DependencyInjectionTests.cs"];
m2_299 [label="Entry Newtonsoft.Json.Tests.TestObjects.Organization.Employee.Employee()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.Organization.Employee.Employee()", file="DependencyInjectionTests.cs"];
m2_66 [label="var contract = (JsonArrayContract)resolver.ResolveContract(typeof(IList<int>))", span="182-182", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterface()", file="DependencyInjectionTests.cs", color=green, community=0];
m2_61 [label="Entry Newtonsoft.Json.Serialization.JsonProperty.JsonProperty()", span="38-38", cluster="Newtonsoft.Json.Serialization.JsonProperty.JsonProperty()", file="DependencyInjectionTests.cs"];
m2_63 [label="Entry System.DateTime.DateTime()", span="0-0", cluster="System.DateTime.DateTime()", file="DependencyInjectionTests.cs"];
m2_64 [label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterface()", span="179-179", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterface()", file="DependencyInjectionTests.cs"];
m2_65 [label="var resolver = new DefaultContractResolver()", span="181-181", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterface()", file="DependencyInjectionTests.cs", color=green, community=0];
m2_67 [label="Assert.IsTrue(contract.IsInstantiable)", span="184-184", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterface()", file="DependencyInjectionTests.cs", color=green, community=0];
m2_68 [label="Assert.AreEqual(typeof(List<int>), contract.CreatedType)", span="185-185", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterface()", file="DependencyInjectionTests.cs", color=green, community=0];
m2_69 [label="Assert.IsNotNull(contract.DefaultCreator)", span="186-186", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterface()", file="DependencyInjectionTests.cs", color=green, community=0];
m2_70 [label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterface()", span="179-179", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterface()", file="DependencyInjectionTests.cs"];
m2_72 [label="Entry Unk.IsNotNull", span="", cluster="Unk.IsNotNull", file="DependencyInjectionTests.cs"];
m2_73 [label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.PropertyAttributeProvider()", span="190-190", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.PropertyAttributeProvider()", file="DependencyInjectionTests.cs"];
m2_74 [label="var resolver = new DefaultContractResolver()", span="192-192", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.PropertyAttributeProvider()", file="DependencyInjectionTests.cs", color=green, community=0];
m2_82 [label="count++", span="204-204", cluster="lambda expression", file="DependencyInjectionTests.cs"];
m2_83 [label="return new LogManager(new DateTime(2000, 12, 12));", span="205-205", cluster="lambda expression", color=green, community=0, file="DependencyInjectionTests.cs"];
m2_84 [label="Exit lambda expression", span="202-206", cluster="lambda expression", color=green, community=0, file="DependencyInjectionTests.cs"];
m2_88 [label="Newtonsoft.Json.Tests.Serialization.AutofacContractResolver", span="", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractTestClass()", color=green, community=0, file="DependencyInjectionTests.cs"];
m2_90 [label=count, span="", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractTestClass()", file="DependencyInjectionTests.cs"];
m2_85 [label="Newtonsoft.Json.Tests.Serialization.LogManager", span="", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractTestClass()", color=green, community=0, file="DependencyInjectionTests.cs"];
m2_86 [label="Newtonsoft.Json.Tests.Serialization.TaskController", span="", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractTestClass()", color=green, community=0, file="DependencyInjectionTests.cs"];
m2_87 [label="Newtonsoft.Json.Tests.Serialization.HasSettableProperty", span="", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractTestClass()", color=green, community=0, file="DependencyInjectionTests.cs"];
m2_89 [label="System.Type", span="", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractTestClass()", color=green, community=0, file="DependencyInjectionTests.cs"];
m2_91 [label=count, span="", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractTestClass()", file="DependencyInjectionTests.cs"];
m2_92 [label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractTestClass()", span="201-201", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractTestClass()", file="DependencyInjectionTests.cs"];
m2_19 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", span="385-385", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DependencyInjectionTests.cs"];
m2_96 [label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="447-447", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="DependencyInjectionTests.cs"];
m2_192 [label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithHtmlEscapedPropertyName()", span="358-358", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithHtmlEscapedPropertyName()", file="DependencyInjectionTests.cs"];
m2_194 [label="Assert.AreEqual(@''{''''\u003cb\u003eAddressLine1\u003c/b\u003e'''':''''value!''''}'', json)", span="375-375", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithHtmlEscapedPropertyName()", file="DependencyInjectionTests.cs"];
m2_198 [label="Assert.AreEqual(@''<b>AddressLine1</b>'', reader.Value)", span="381-381", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithHtmlEscapedPropertyName()", file="DependencyInjectionTests.cs"];
m2_193 [label="string json = JsonConvert.SerializeObject(\r\n                new AddressWithDataMember\r\n                {\r\n                    AddressLine1 = ''value!''\r\n                },\r\n                new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new EscapedPropertiesContractResolver\r\n                    {\r\n                        PropertyPrefix = ''<b>'',\r\n                        PropertySuffix = ''</b>''\r\n                    },\r\n                    StringEscapeHandling = StringEscapeHandling.EscapeHtml\r\n                })", span="360-373", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithHtmlEscapedPropertyName()", file="DependencyInjectionTests.cs"];
m2_195 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="377-377", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithHtmlEscapedPropertyName()", file="DependencyInjectionTests.cs"];
m2_197 [label="reader.Read()", span="379-379", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithHtmlEscapedPropertyName()", file="DependencyInjectionTests.cs"];
m2_196 [label="reader.Read()", span="378-378", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithHtmlEscapedPropertyName()", file="DependencyInjectionTests.cs"];
m2_199 [label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithHtmlEscapedPropertyName()", span="358-358", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithHtmlEscapedPropertyName()", file="DependencyInjectionTests.cs"];
m2_370 [label="Entry Unk.AreNotEqual", span="", cluster="Unk.AreNotEqual", file="DependencyInjectionTests.cs"];
m2_93 [label="Entry Unk.IsFalse", span="", cluster="Unk.IsFalse", file="DependencyInjectionTests.cs"];
m2_32 [label="AutofacContractResolver contractResolver = new AutofacContractResolver(container)", span="170-170", cluster="Newtonsoft.Json.Tests.Serialization.DependencyInjectionTests.CreateObjectWithParameters()", file="DependencyInjectionTests.cs"];
m2_125 [label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterfaceDefaultCreator()", span="257-257", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterfaceDefaultCreator()", file="DependencyInjectionTests.cs"];
m2_127 [label="var contract = (JsonArrayContract)resolver.ResolveContract(typeof(IList<int>))", span="260-260", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterfaceDefaultCreator()", file="DependencyInjectionTests.cs"];
m2_132 [label="Assert.AreEqual(typeof(CustomList<int>), l.GetType())", span="272-272", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterfaceDefaultCreator()", file="DependencyInjectionTests.cs"];
m2_133 [label="Assert.AreEqual(3, l.Count)", span="273-273", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterfaceDefaultCreator()", file="DependencyInjectionTests.cs"];
m2_134 [label="Assert.AreEqual(1, l[0])", span="274-274", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterfaceDefaultCreator()", file="DependencyInjectionTests.cs"];
m2_135 [label="Assert.AreEqual(2, l[1])", span="275-275", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterfaceDefaultCreator()", file="DependencyInjectionTests.cs"];
m2_136 [label="Assert.AreEqual(3, l[2])", span="276-276", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterfaceDefaultCreator()", file="DependencyInjectionTests.cs"];
m2_126 [label="var resolver = new DefaultContractResolver()", span="259-259", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterfaceDefaultCreator()", file="DependencyInjectionTests.cs"];
m2_128 [label="Assert.IsTrue(contract.IsInstantiable)", span="262-262", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterfaceDefaultCreator()", file="DependencyInjectionTests.cs"];
m2_129 [label="Assert.IsNotNull(contract.DefaultCreator)", span="263-263", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterfaceDefaultCreator()", file="DependencyInjectionTests.cs"];
m2_131 [label="var l = JsonConvert.DeserializeObject<IList<int>>(@''[1,2,3]'', new JsonSerializerSettings\r\n            {\r\n                ContractResolver = resolver\r\n            })", span="267-270", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterfaceDefaultCreator()", file="DependencyInjectionTests.cs"];
m2_130 [label="contract.DefaultCreator = () => new CustomList<int>()", span="265-265", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterfaceDefaultCreator()", file="DependencyInjectionTests.cs"];
m2_137 [label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterfaceDefaultCreator()", span="257-257", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterfaceDefaultCreator()", file="DependencyInjectionTests.cs"];
m2_7 [label="Exit Newtonsoft.Json.Tests.Serialization.DynamicContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", span="61-61", cluster="Newtonsoft.Json.Tests.Serialization.DynamicContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DependencyInjectionTests.cs"];
m2_8 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", span="1327-1327", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DependencyInjectionTests.cs"];
m2_250 [label="Entry Unk.Any", span="", cluster="Unk.Any", file="DependencyInjectionTests.cs"];
m2_350 [label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ClassWithShouldSerialize.ShouldSerializeProp1()", span="667-667", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ClassWithShouldSerialize.ShouldSerializeProp1()", file="DependencyInjectionTests.cs"];
m2_351 [label="return false;", span="669-669", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ClassWithShouldSerialize.ShouldSerializeProp1()", file="DependencyInjectionTests.cs"];
m2_352 [label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ClassWithShouldSerialize.ShouldSerializeProp1()", span="667-667", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ClassWithShouldSerialize.ShouldSerializeProp1()", file="DependencyInjectionTests.cs"];
m2_189 [label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="82-82", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="DependencyInjectionTests.cs"];
m2_97 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="766-766", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="DependencyInjectionTests.cs"];
m2_15 [label="_container.IsRegistered(objectType)", span="142-142", cluster="Newtonsoft.Json.Tests.Serialization.AutofacContractResolver.CreateObjectContract(System.Type)", file="DependencyInjectionTests.cs"];
m2_34 [label="Assert.IsNotNull(controller)", span="181-181", cluster="Newtonsoft.Json.Tests.Serialization.DependencyInjectionTests.CreateObjectWithParameters()", file="DependencyInjectionTests.cs"];
m2_36 [label="Assert.AreEqual(1, count)", span="184-184", cluster="Newtonsoft.Json.Tests.Serialization.DependencyInjectionTests.CreateObjectWithParameters()", color=green, community=0, file="DependencyInjectionTests.cs"];
m2_35 [label="Assert.IsNotNull(controller.Logger)", span="182-182", cluster="Newtonsoft.Json.Tests.Serialization.DependencyInjectionTests.CreateObjectWithParameters()", file="DependencyInjectionTests.cs"];
m2_37 [label="Assert.AreEqual(new DateTime(2000, 12, 12), controller.Logger.DateTime)", span="186-186", cluster="Newtonsoft.Json.Tests.Serialization.DependencyInjectionTests.CreateObjectWithParameters()", color=green, community=0, file="DependencyInjectionTests.cs"];
m2_38 [label="Assert.AreEqual(''Debug'', controller.Logger.Level)", span="187-187", cluster="Newtonsoft.Json.Tests.Serialization.DependencyInjectionTests.CreateObjectWithParameters()", file="DependencyInjectionTests.cs"];
m2_188 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", span="582-582", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", file="DependencyInjectionTests.cs"];
m2_291 [label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeInterface()", span="522-522", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeInterface()", file="DependencyInjectionTests.cs"];
m2_295 [label="Assert.AreEqual(''Maurice'', (string)o[''FirstName''])", span="538-538", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeInterface()", file="DependencyInjectionTests.cs"];
m2_296 [label="Assert.AreEqual(''Moss'', (string)o[''LastName''])", span="539-539", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeInterface()", file="DependencyInjectionTests.cs"];
m2_297 [label="Assert.AreEqual(new DateTime(1977, 12, 30, 1, 1, 1, DateTimeKind.Utc), (DateTime)o[''BirthDate''])", span="540-540", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeInterface()", file="DependencyInjectionTests.cs"];
m2_293 [label="string iPersonJson = JsonConvert.SerializeObject(employee, Formatting.Indented,\r\n                new JsonSerializerSettings { ContractResolver = new IPersonContractResolver() })", span="533-534", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeInterface()", file="DependencyInjectionTests.cs"];
m2_294 [label="JObject o = JObject.Parse(iPersonJson)", span="536-536", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeInterface()", file="DependencyInjectionTests.cs"];
m2_292 [label="Employee employee = new Employee\r\n            {\r\n                BirthDate = new DateTime(1977, 12, 30, 1, 1, 1, DateTimeKind.Utc),\r\n                FirstName = ''Maurice'',\r\n                LastName = ''Moss'',\r\n                Department = ''IT'',\r\n                JobTitle = ''Support''\r\n            }", span="524-531", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeInterface()", file="DependencyInjectionTests.cs"];
m2_298 [label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeInterface()", span="522-522", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeInterface()", file="DependencyInjectionTests.cs"];
m2_41 [label="JsonObjectContract contract = (JsonObjectContract)contractResolver.ResolveContract(typeof(AnswerFilterModel))", span="143-143", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ResolveObjectContractWithFieldsSerialization()", file="DependencyInjectionTests.cs", color=green, community=0];
m2_104 [label="Entry Newtonsoft.Json.Tests.TestObjects.AbstractImplementationTestClass.AbstractImplementationTestClass()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.AbstractImplementationTestClass.AbstractImplementationTestClass()", file="DependencyInjectionTests.cs"];
m2_245 [label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ResolveProperties_IgnoreStatic()", span="457-457", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ResolveProperties_IgnoreStatic()", file="DependencyInjectionTests.cs"];
m2_247 [label="var contract = (JsonObjectContract)resolver.ResolveContract(typeof(NumberFormatInfo))", span="460-460", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ResolveProperties_IgnoreStatic()", file="DependencyInjectionTests.cs"];
m2_246 [label="var resolver = new DefaultContractResolver()", span="459-459", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ResolveProperties_IgnoreStatic()", file="DependencyInjectionTests.cs"];
m2_248 [label="Assert.IsFalse(contract.Properties.Any(c => c.PropertyName == ''InvariantInfo''))", span="462-462", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ResolveProperties_IgnoreStatic()", file="DependencyInjectionTests.cs"];
m2_249 [label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ResolveProperties_IgnoreStatic()", span="457-457", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ResolveProperties_IgnoreStatic()", file="DependencyInjectionTests.cs"];
m2_339 [label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ClassWithExtensionData.ClassWithExtensionData()", span="631-631", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ClassWithExtensionData.ClassWithExtensionData()", file="DependencyInjectionTests.cs"];
m2_302 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="618-618", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="DependencyInjectionTests.cs"];
m2_3 [label="Entry Newtonsoft.Json.Tests.Serialization.TaskController.TaskController(Newtonsoft.Json.Tests.Serialization.ITaskRepository, Newtonsoft.Json.Tests.Serialization.ILogger)", span="98-98", cluster="Newtonsoft.Json.Tests.Serialization.TaskController.TaskController(Newtonsoft.Json.Tests.Serialization.ITaskRepository, Newtonsoft.Json.Tests.Serialization.ILogger)", file="DependencyInjectionTests.cs"];
m2_4 [label="_repository = repository", span="100-100", cluster="Newtonsoft.Json.Tests.Serialization.TaskController.TaskController(Newtonsoft.Json.Tests.Serialization.ITaskRepository, Newtonsoft.Json.Tests.Serialization.ILogger)", file="DependencyInjectionTests.cs"];
m2_5 [label="_logger = logger", span="101-101", cluster="Newtonsoft.Json.Tests.Serialization.TaskController.TaskController(Newtonsoft.Json.Tests.Serialization.ITaskRepository, Newtonsoft.Json.Tests.Serialization.ILogger)", file="DependencyInjectionTests.cs"];
m2_6 [label="Exit Newtonsoft.Json.Tests.Serialization.TaskController.TaskController(Newtonsoft.Json.Tests.Serialization.ITaskRepository, Newtonsoft.Json.Tests.Serialization.ILogger)", span="98-98", cluster="Newtonsoft.Json.Tests.Serialization.TaskController.TaskController(Newtonsoft.Json.Tests.Serialization.ITaskRepository, Newtonsoft.Json.Tests.Serialization.ILogger)", file="DependencyInjectionTests.cs"];
m2_40 [label="DefaultContractResolver contractResolver = new DefaultContractResolver\r\n            {\r\n                IgnoreSerializableAttribute = false\r\n            }", span="139-142", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ResolveObjectContractWithFieldsSerialization()", file="DependencyInjectionTests.cs", color=green, community=0];
m2_326 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="DependencyInjectionTests.cs"];
m2_340 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="DependencyInjectionTests.cs"];
m2_105 [label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractListTestClass()", span="226-226", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractListTestClass()", file="DependencyInjectionTests.cs"];
m2_107 [label="var contract = (JsonArrayContract)resolver.ResolveContract(typeof(AbstractListTestClass<int>))", span="229-229", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractListTestClass()", file="DependencyInjectionTests.cs"];
m2_114 [label="Assert.AreEqual(2, l.Count)", span="247-247", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractListTestClass()", file="DependencyInjectionTests.cs"];
m2_115 [label="Assert.AreEqual(1, l[0])", span="248-248", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractListTestClass()", file="DependencyInjectionTests.cs"];
m2_116 [label="Assert.AreEqual(2, l[1])", span="249-249", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractListTestClass()", file="DependencyInjectionTests.cs"];
m2_106 [label="var resolver = new DefaultContractResolver()", span="228-228", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractListTestClass()", file="DependencyInjectionTests.cs"];
m2_111 [label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<AbstractListTestClass<int>>(@''[1,2]'', new JsonSerializerSettings\r\n            {\r\n                ContractResolver = resolver\r\n            }), ''Could not create an instance of type Newtonsoft.Json.Tests.TestObjects.AbstractListTestClass`1[System.Int32]. Type is an interface or abstract class and cannot be instantiated. Path '', line 1, position 1.'')", span="235-238", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractListTestClass()", file="DependencyInjectionTests.cs"];
m2_113 [label="var l = JsonConvert.DeserializeObject<AbstractListTestClass<int>>(@''[1,2]'', new JsonSerializerSettings\r\n            {\r\n                ContractResolver = resolver\r\n            })", span="242-245", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractListTestClass()", file="DependencyInjectionTests.cs"];
m2_108 [label="Assert.IsFalse(contract.IsInstantiable)", span="231-231", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractListTestClass()", file="DependencyInjectionTests.cs"];
m2_110 [label="Assert.IsFalse(contract.HasParameterizedCreatorInternal)", span="233-233", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractListTestClass()", file="DependencyInjectionTests.cs"];
m2_109 [label="Assert.IsNull(contract.DefaultCreator)", span="232-232", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractListTestClass()", file="DependencyInjectionTests.cs"];
m2_112 [label="contract.DefaultCreator = () => new AbstractImplementationListTestClass<int>()", span="240-240", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractListTestClass()", file="DependencyInjectionTests.cs"];
m2_117 [label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractListTestClass()", span="226-226", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractListTestClass()", file="DependencyInjectionTests.cs"];
m2_33 [label="TaskController controller = JsonConvert.DeserializeObject<TaskController>(@''{\r\n                'Logger': {\r\n                    'Level':'Debug'\r\n                }\r\n            }'', new JsonSerializerSettings\r\n            {\r\n                ContractResolver = contractResolver\r\n            })", span="172-179", cluster="Newtonsoft.Json.Tests.Serialization.DependencyInjectionTests.CreateObjectWithParameters()", file="DependencyInjectionTests.cs"];
m2_142 [label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DictionaryInterfaceDefaultCreator()", span="284-284", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DictionaryInterfaceDefaultCreator()", file="DependencyInjectionTests.cs"];
m2_144 [label="var contract = (JsonDictionaryContract)resolver.ResolveContract(typeof(IDictionary<string, int>))", span="287-287", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DictionaryInterfaceDefaultCreator()", file="DependencyInjectionTests.cs"];
m2_149 [label="Assert.AreEqual(typeof(CustomDictionary<string, int>), d.GetType())", span="299-299", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DictionaryInterfaceDefaultCreator()", file="DependencyInjectionTests.cs"];
m2_150 [label="Assert.AreEqual(2, d.Count)", span="300-300", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DictionaryInterfaceDefaultCreator()", file="DependencyInjectionTests.cs"];
m2_151 [label="Assert.AreEqual(1, d[''key1''])", span="301-301", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DictionaryInterfaceDefaultCreator()", file="DependencyInjectionTests.cs"];
m2_152 [label="Assert.AreEqual(2, d[''key2''])", span="302-302", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DictionaryInterfaceDefaultCreator()", file="DependencyInjectionTests.cs"];
m2_143 [label="var resolver = new DefaultContractResolver()", span="286-286", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DictionaryInterfaceDefaultCreator()", file="DependencyInjectionTests.cs"];
m2_145 [label="Assert.IsTrue(contract.IsInstantiable)", span="289-289", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DictionaryInterfaceDefaultCreator()", file="DependencyInjectionTests.cs"];
m2_146 [label="Assert.IsNotNull(contract.DefaultCreator)", span="290-290", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DictionaryInterfaceDefaultCreator()", file="DependencyInjectionTests.cs"];
m2_148 [label="var d = JsonConvert.DeserializeObject<IDictionary<string, int>>(@''{key1:1,key2:2}'', new JsonSerializerSettings\r\n            {\r\n                ContractResolver = resolver\r\n            })", span="294-297", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DictionaryInterfaceDefaultCreator()", file="DependencyInjectionTests.cs"];
m2_147 [label="contract.DefaultCreator = () => new CustomDictionary<string, int>()", span="292-292", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DictionaryInterfaceDefaultCreator()", file="DependencyInjectionTests.cs"];
m2_153 [label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DictionaryInterfaceDefaultCreator()", span="284-284", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DictionaryInterfaceDefaultCreator()", file="DependencyInjectionTests.cs"];
m2_75 [label="var contract = (JsonObjectContract)resolver.ResolveContract(typeof(Invoice))", span="193-193", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.PropertyAttributeProvider()", file="DependencyInjectionTests.cs"];
m2_353 [label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreShouldSerializeTrue()", span="674-674", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreShouldSerializeTrue()", file="DependencyInjectionTests.cs"];
m2_356 [label="JsonObjectContract contract = (JsonObjectContract)resolver.ResolveContract(typeof(ClassWithShouldSerialize))", span="679-679", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreShouldSerializeTrue()", file="DependencyInjectionTests.cs"];
m2_358 [label="Assert.AreEqual(null, property1.ShouldSerialize)", span="682-682", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreShouldSerializeTrue()", file="DependencyInjectionTests.cs"];
m2_360 [label="Assert.AreEqual(null, property2.ShouldSerialize)", span="685-685", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreShouldSerializeTrue()", file="DependencyInjectionTests.cs"];
m2_354 [label="DefaultContractResolver resolver = new DefaultContractResolver()", span="676-676", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreShouldSerializeTrue()", file="DependencyInjectionTests.cs"];
m2_355 [label="resolver.IgnoreShouldSerializeMembers = true", span="677-677", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreShouldSerializeTrue()", file="DependencyInjectionTests.cs"];
m2_357 [label="var property1 = contract.Properties[''Prop1'']", span="681-681", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreShouldSerializeTrue()", file="DependencyInjectionTests.cs"];
m2_359 [label="var property2 = contract.Properties[''Prop2'']", span="684-684", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreShouldSerializeTrue()", file="DependencyInjectionTests.cs"];
m2_361 [label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreShouldSerializeTrue()", span="674-674", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreShouldSerializeTrue()", file="DependencyInjectionTests.cs"];
m2_240 [label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DeserializeDataMemberClassWithNoDataContract()", span="447-447", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DeserializeDataMemberClassWithNoDataContract()", file="DependencyInjectionTests.cs"];
m2_242 [label="var contract = (JsonObjectContract)resolver.ResolveContract(typeof(AddressWithDataMember))", span="450-450", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DeserializeDataMemberClassWithNoDataContract()", file="DependencyInjectionTests.cs"];
m2_243 [label="Assert.AreEqual(''AddressLine1'', contract.Properties[0].PropertyName)", span="452-452", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DeserializeDataMemberClassWithNoDataContract()", file="DependencyInjectionTests.cs"];
m2_241 [label="var resolver = new DefaultContractResolver()", span="449-449", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DeserializeDataMemberClassWithNoDataContract()", file="DependencyInjectionTests.cs"];
m2_244 [label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DeserializeDataMemberClassWithNoDataContract()", span="447-447", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DeserializeDataMemberClassWithNoDataContract()", file="DependencyInjectionTests.cs"];
m2_11 [label="_container = container", span="134-134", cluster="Newtonsoft.Json.Tests.Serialization.AutofacContractResolver.AutofacContractResolver(IContainer)", file="DependencyInjectionTests.cs"];
m2_22 [label="_container.Resolve(objectType)", span="144-144", cluster="lambda expression", file="DependencyInjectionTests.cs"];
m2_21 [label="Entry lambda expression", span="144-144", cluster="lambda expression", file="DependencyInjectionTests.cs"];
m2_23 [label="Exit lambda expression", span="144-144", cluster="lambda expression", file="DependencyInjectionTests.cs"];
m2_76 [label="JsonProperty property = contract.Properties[''FollowUpDays'']", span="195-195", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.PropertyAttributeProvider()", file="DependencyInjectionTests.cs"];
m2_77 [label="Assert.AreEqual(1, property.AttributeProvider.GetAttributes(false).Count)", span="196-196", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.PropertyAttributeProvider()", file="DependencyInjectionTests.cs"];
m2_81 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="DependencyInjectionTests.cs"];
m2_78 [label="Assert.AreEqual(typeof(DefaultValueAttribute), property.AttributeProvider.GetAttributes(false)[0].GetType())", span="197-197", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.PropertyAttributeProvider()", file="DependencyInjectionTests.cs"];
m2_79 [label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.PropertyAttributeProvider()", span="190-190", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.PropertyAttributeProvider()", file="DependencyInjectionTests.cs"];
m2_99 [label="JsonConvert.DeserializeObject<AbstractTestClass>(@''{Value:'Value!'}'', new JsonSerializerSettings\r\n            {\r\n                ContractResolver = resolver\r\n            })", span="210-213", cluster="lambda expression", color=green, community=0, file="DependencyInjectionTests.cs"];
m2_98 [label="Entry lambda expression", span="210-213", cluster="lambda expression", file="DependencyInjectionTests.cs"];
m2_100 [label="Exit lambda expression", span="210-213", cluster="lambda expression", file="DependencyInjectionTests.cs"];
m2_102 [label="new AbstractImplementationTestClass()", span="215-215", cluster="lambda expression", color=green, community=0, file="DependencyInjectionTests.cs"];
m2_101 [label="Entry lambda expression", span="215-215", cluster="lambda expression", file="DependencyInjectionTests.cs"];
m2_103 [label="Exit lambda expression", span="215-215", cluster="lambda expression", file="DependencyInjectionTests.cs"];
m2_119 [label="JsonConvert.DeserializeObject<AbstractListTestClass<int>>(@''[1,2]'', new JsonSerializerSettings\r\n            {\r\n                ContractResolver = resolver\r\n            })", span="235-238", cluster="lambda expression", file="DependencyInjectionTests.cs"];
m2_172 [label="JsonConvert.DeserializeObject<AbstractDictionaryTestClass<string, int>>(@''{key1:1,key2:2}'', new JsonSerializerSettings\r\n            {\r\n                ContractResolver = resolver\r\n            })", span="315-318", cluster="lambda expression", file="DependencyInjectionTests.cs"];
m2_287 [label="ensureCustomCreatorCalled = true", span="506-506", cluster="lambda expression", file="DependencyInjectionTests.cs"];
m2_118 [label="Entry lambda expression", span="235-238", cluster="lambda expression", file="DependencyInjectionTests.cs"];
m2_171 [label="Entry lambda expression", span="315-318", cluster="lambda expression", file="DependencyInjectionTests.cs"];
m2_120 [label="Exit lambda expression", span="235-238", cluster="lambda expression", file="DependencyInjectionTests.cs"];
m2_173 [label="Exit lambda expression", span="315-318", cluster="lambda expression", file="DependencyInjectionTests.cs"];
m2_251 [label="Entry lambda expression", span="462-462", cluster="lambda expression", file="DependencyInjectionTests.cs"];
m2_288 [label="return new MultipleParametrizedConstructorsJsonConstructor((string)args[0], (int)args[1]);", span="507-507", cluster="lambda expression", file="DependencyInjectionTests.cs"];
m2_286 [label="Entry lambda expression", span="504-508", cluster="lambda expression", file="DependencyInjectionTests.cs"];
m2_289 [label="Exit lambda expression", span="504-508", cluster="lambda expression", file="DependencyInjectionTests.cs"];
m2_344 [label="Entry lambda expression", span="653-653", cluster="lambda expression", file="DependencyInjectionTests.cs"];
m2_347 [label="Entry lambda expression", span="653-653", cluster="lambda expression", file="DependencyInjectionTests.cs"];
m2_253 [label="Exit lambda expression", span="462-462", cluster="lambda expression", file="DependencyInjectionTests.cs"];
m2_252 [label="c.PropertyName == ''InvariantInfo''", span="462-462", cluster="lambda expression", file="DependencyInjectionTests.cs"];
m2_346 [label="Exit lambda expression", span="653-653", cluster="lambda expression", file="DependencyInjectionTests.cs"];
m2_345 [label="kv.Key", span="653-653", cluster="lambda expression", file="DependencyInjectionTests.cs"];
m2_349 [label="Exit lambda expression", span="653-653", cluster="lambda expression", file="DependencyInjectionTests.cs"];
m2_348 [label="kv.Value", span="653-653", cluster="lambda expression", file="DependencyInjectionTests.cs"];
m2_12 [label="Exit Newtonsoft.Json.Tests.Serialization.AutofacContractResolver.AutofacContractResolver(IContainer)", span="132-132", cluster="Newtonsoft.Json.Tests.Serialization.AutofacContractResolver.AutofacContractResolver(IContainer)", file="DependencyInjectionTests.cs"];
m2_13 [label="Entry Newtonsoft.Json.Tests.Serialization.AutofacContractResolver.CreateObjectContract(System.Type)", span="137-137", cluster="Newtonsoft.Json.Tests.Serialization.AutofacContractResolver.CreateObjectContract(System.Type)", file="DependencyInjectionTests.cs"];
m2_304 [label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SingleTypeWithMultipleContractResolvers()", span="544-544", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SingleTypeWithMultipleContractResolvers()", file="DependencyInjectionTests.cs"];
m2_306 [label="string startingWithA = JsonConvert.SerializeObject(book, Formatting.Indented,\r\n                new JsonSerializerSettings { ContractResolver = new DynamicContractResolver('A') })", span="555-556", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SingleTypeWithMultipleContractResolvers()", file="DependencyInjectionTests.cs"];
m2_307 [label="string startingWithB = JsonConvert.SerializeObject(book, Formatting.Indented,\r\n                new JsonSerializerSettings { ContractResolver = new DynamicContractResolver('B') })", span="564-565", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SingleTypeWithMultipleContractResolvers()", file="DependencyInjectionTests.cs"];
m2_305 [label="Book book = new Book\r\n            {\r\n                BookName = ''The Gathering Storm'',\r\n                BookPrice = 16.19m,\r\n                AuthorName = ''Brandon Sanderson'',\r\n                AuthorAge = 34,\r\n                AuthorCountry = ''United States of America''\r\n            }", span="546-553", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SingleTypeWithMultipleContractResolvers()", file="DependencyInjectionTests.cs"];
m2_308 [label="StringAssert.AreEqual(@''{\r\n  ''''AuthorName'''': ''''Brandon Sanderson'''',\r\n  ''''AuthorAge'''': 34,\r\n  ''''AuthorCountry'''': ''''United States of America''''\r\n}'', startingWithA)", span="572-576", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SingleTypeWithMultipleContractResolvers()", file="DependencyInjectionTests.cs"];
m2_309 [label="StringAssert.AreEqual(@''{\r\n  ''''BookName'''': ''''The Gathering Storm'''',\r\n  ''''BookPrice'''': 16.19\r\n}'', startingWithB)", span="578-581", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SingleTypeWithMultipleContractResolvers()", file="DependencyInjectionTests.cs"];
m2_310 [label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SingleTypeWithMultipleContractResolvers()", span="544-544", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SingleTypeWithMultipleContractResolvers()", file="DependencyInjectionTests.cs"];
m2_312 [label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="341-341", cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="DependencyInjectionTests.cs"];
m2_343 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="DependencyInjectionTests.cs"];
m2_42 [label="Assert.AreEqual(MemberSerialization.Fields, contract.MemberSerialization)", span="145-145", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ResolveObjectContractWithFieldsSerialization()", file="DependencyInjectionTests.cs", color=green, community=0];
m2_190 [label="Entry System.IO.StringReader.StringReader(string)", span="0-0", cluster="System.IO.StringReader.StringReader(string)", file="DependencyInjectionTests.cs"];
m2_43 [label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ResolveObjectContractWithFieldsSerialization()", span="137-137", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ResolveObjectContractWithFieldsSerialization()", file="DependencyInjectionTests.cs"];
m2_24 [label="Entry Unk.Resolve", span="", cluster="Unk.Resolve", file="DependencyInjectionTests.cs"];
m2_313 [label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeCompilerGeneratedMembers()", span="587-587", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeCompilerGeneratedMembers()", file="DependencyInjectionTests.cs"];
m2_322 [label="Assert.AreEqual(''Property'', (string)o[''<StringProperty>k__BackingField''])", span="625-625", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeCompilerGeneratedMembers()", file="DependencyInjectionTests.cs"];
m2_323 [label="Assert.AreEqual(2, (int)o[''<IntProperty>k__BackingField''])", span="626-626", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeCompilerGeneratedMembers()", file="DependencyInjectionTests.cs"];
m2_315 [label="DefaultContractResolver skipCompilerGeneratedResolver = new DefaultContractResolver\r\n            {\r\n                DefaultMembersSearchFlags = BindingFlags.Instance | BindingFlags.NonPublic | BindingFlags.Public\r\n            }", span="597-600", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeCompilerGeneratedMembers()", file="DependencyInjectionTests.cs"];
m2_318 [label="DefaultContractResolver includeCompilerGeneratedResolver = new DefaultContractResolver\r\n            {\r\n                DefaultMembersSearchFlags = BindingFlags.Instance | BindingFlags.NonPublic | BindingFlags.Public,\r\n                SerializeCompilerGeneratedMembers = true\r\n            }", span="612-616", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeCompilerGeneratedMembers()", file="DependencyInjectionTests.cs"];
m2_316 [label="string skipCompilerGeneratedJson = JsonConvert.SerializeObject(structTest, Formatting.Indented,\r\n                new JsonSerializerSettings { ContractResolver = skipCompilerGeneratedResolver })", span="602-603", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeCompilerGeneratedMembers()", file="DependencyInjectionTests.cs"];
m2_319 [label="string includeCompilerGeneratedJson = JsonConvert.SerializeObject(structTest, Formatting.Indented,\r\n                new JsonSerializerSettings { ContractResolver = includeCompilerGeneratedResolver })", span="618-619", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeCompilerGeneratedMembers()", file="DependencyInjectionTests.cs"];
m2_320 [label="JObject o = JObject.Parse(includeCompilerGeneratedJson)", span="621-621", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeCompilerGeneratedMembers()", file="DependencyInjectionTests.cs"];
m2_321 [label="Console.WriteLine(includeCompilerGeneratedJson)", span="623-623", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeCompilerGeneratedMembers()", file="DependencyInjectionTests.cs"];
m2_314 [label="StructTest structTest = new StructTest\r\n            {\r\n                IntField = 1,\r\n                IntProperty = 2,\r\n                StringField = ''Field'',\r\n                StringProperty = ''Property''\r\n            }", span="589-595", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeCompilerGeneratedMembers()", file="DependencyInjectionTests.cs"];
m2_317 [label="StringAssert.AreEqual(@''{\r\n  ''''StringField'''': ''''Field'''',\r\n  ''''IntField'''': 1,\r\n  ''''StringProperty'''': ''''Property'''',\r\n  ''''IntProperty'''': 2\r\n}'', skipCompilerGeneratedJson)", span="605-610", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeCompilerGeneratedMembers()", file="DependencyInjectionTests.cs"];
m2_324 [label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeCompilerGeneratedMembers()", span="587-587", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeCompilerGeneratedMembers()", file="DependencyInjectionTests.cs"];
m2_187 [label="Entry Newtonsoft.Json.Tests.Serialization.EscapedPropertiesContractResolver.EscapedPropertiesContractResolver()", span="73-73", cluster="Newtonsoft.Json.Tests.Serialization.EscapedPropertiesContractResolver.EscapedPropertiesContractResolver()", file="DependencyInjectionTests.cs"];
m2_178 [label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithEscapedPropertyName()", span="333-333", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithEscapedPropertyName()", file="DependencyInjectionTests.cs"];
m2_180 [label="Assert.AreEqual(@''{''''AddressLine1-'-\''''-'''':''''value!''''}'', json)", span="348-348", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithEscapedPropertyName()", file="DependencyInjectionTests.cs"];
m2_184 [label="Assert.AreEqual(@''AddressLine1-'-''''-'', reader.Value)", span="354-354", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithEscapedPropertyName()", file="DependencyInjectionTests.cs"];
m2_179 [label="string json = JsonConvert.SerializeObject(\r\n                new AddressWithDataMember\r\n                {\r\n                    AddressLine1 = ''value!''\r\n                },\r\n                new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new EscapedPropertiesContractResolver\r\n                    {\r\n                        PropertySuffix = @''-'-''''-''\r\n                    }\r\n                })", span="335-346", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithEscapedPropertyName()", file="DependencyInjectionTests.cs"];
m2_181 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="350-350", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithEscapedPropertyName()", file="DependencyInjectionTests.cs"];
m2_183 [label="reader.Read()", span="352-352", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithEscapedPropertyName()", file="DependencyInjectionTests.cs"];
m2_182 [label="reader.Read()", span="351-351", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithEscapedPropertyName()", file="DependencyInjectionTests.cs"];
m2_185 [label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithEscapedPropertyName()", span="333-333", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithEscapedPropertyName()", file="DependencyInjectionTests.cs"];
m2_20 [label="Entry Unk.IsRegistered", span="", cluster="Unk.IsRegistered", file="DependencyInjectionTests.cs"];
m2_395 [label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedUnset()", span="757-757", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedUnset()", file="DependencyInjectionTests.cs"];
m2_397 [label="JsonObjectContract contract = (JsonObjectContract)resolver.ResolveContract(typeof(ClassWithIsSpecified))", span="761-761", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedUnset()", file="DependencyInjectionTests.cs"];
m2_405 [label="Assert.AreEqual(null, property3.GetIsSpecified)", span="772-772", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedUnset()", file="DependencyInjectionTests.cs"];
m2_406 [label="Assert.AreEqual(null, property3.SetIsSpecified)", span="773-773", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedUnset()", file="DependencyInjectionTests.cs"];
m2_408 [label="Assert.AreEqual(null, property4.GetIsSpecified)", span="776-776", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedUnset()", file="DependencyInjectionTests.cs"];
m2_409 [label="Assert.AreEqual(null, property4.SetIsSpecified)", span="777-777", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedUnset()", file="DependencyInjectionTests.cs"];
m2_411 [label="Assert.AreEqual(null, property5.GetIsSpecified)", span="780-780", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedUnset()", file="DependencyInjectionTests.cs"];
m2_412 [label="Assert.AreEqual(null, property5.SetIsSpecified)", span="781-781", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedUnset()", file="DependencyInjectionTests.cs"];
m2_396 [label="DefaultContractResolver resolver = new DefaultContractResolver()", span="759-759", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedUnset()", file="DependencyInjectionTests.cs"];
m2_398 [label="var property1 = contract.Properties[''Prop1'']", span="763-763", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedUnset()", file="DependencyInjectionTests.cs"];
m2_401 [label="var property2 = contract.Properties[''Prop2'']", span="767-767", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedUnset()", file="DependencyInjectionTests.cs"];
m2_404 [label="var property3 = contract.Properties[''Prop3'']", span="771-771", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedUnset()", file="DependencyInjectionTests.cs"];
m2_407 [label="var property4 = contract.Properties[''Prop4'']", span="775-775", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedUnset()", file="DependencyInjectionTests.cs"];
m2_410 [label="var property5 = contract.Properties[''Prop5'']", span="779-779", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedUnset()", file="DependencyInjectionTests.cs"];
m2_399 [label="Assert.AreNotEqual(null, property1.GetIsSpecified)", span="764-764", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedUnset()", file="DependencyInjectionTests.cs"];
m2_400 [label="Assert.AreNotEqual(null, property1.SetIsSpecified)", span="765-765", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedUnset()", file="DependencyInjectionTests.cs"];
m2_402 [label="Assert.AreNotEqual(null, property2.GetIsSpecified)", span="768-768", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedUnset()", file="DependencyInjectionTests.cs"];
m2_403 [label="Assert.AreNotEqual(null, property2.SetIsSpecified)", span="769-769", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedUnset()", file="DependencyInjectionTests.cs"];
m2_413 [label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedUnset()", span="757-757", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedUnset()", file="DependencyInjectionTests.cs"];
m2_39 [label="Exit Newtonsoft.Json.Tests.Serialization.DependencyInjectionTests.CreateObjectWithParameters()", span="155-155", cluster="Newtonsoft.Json.Tests.Serialization.DependencyInjectionTests.CreateObjectWithParameters()", file="DependencyInjectionTests.cs"];
m2_375 [label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedTrue()", span="728-728", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedTrue()", file="DependencyInjectionTests.cs"];
m2_378 [label="JsonObjectContract contract = (JsonObjectContract)resolver.ResolveContract(typeof(ClassWithIsSpecified))", span="733-733", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedTrue()", file="DependencyInjectionTests.cs"];
m2_380 [label="Assert.AreEqual(null, property1.GetIsSpecified)", span="736-736", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedTrue()", file="DependencyInjectionTests.cs"];
m2_381 [label="Assert.AreEqual(null, property1.SetIsSpecified)", span="737-737", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedTrue()", file="DependencyInjectionTests.cs"];
m2_383 [label="Assert.AreEqual(null, property2.GetIsSpecified)", span="740-740", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedTrue()", file="DependencyInjectionTests.cs"];
m2_384 [label="Assert.AreEqual(null, property2.SetIsSpecified)", span="741-741", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedTrue()", file="DependencyInjectionTests.cs"];
m2_386 [label="Assert.AreEqual(null, property3.GetIsSpecified)", span="744-744", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedTrue()", file="DependencyInjectionTests.cs"];
m2_387 [label="Assert.AreEqual(null, property3.SetIsSpecified)", span="745-745", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedTrue()", file="DependencyInjectionTests.cs"];
m2_389 [label="Assert.AreEqual(null, property4.GetIsSpecified)", span="748-748", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedTrue()", file="DependencyInjectionTests.cs"];
m2_390 [label="Assert.AreEqual(null, property4.SetIsSpecified)", span="749-749", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedTrue()", file="DependencyInjectionTests.cs"];
m2_392 [label="Assert.AreEqual(null, property5.GetIsSpecified)", span="752-752", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedTrue()", file="DependencyInjectionTests.cs"];
m2_393 [label="Assert.AreEqual(null, property5.SetIsSpecified)", span="753-753", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedTrue()", file="DependencyInjectionTests.cs"];
m2_376 [label="DefaultContractResolver resolver = new DefaultContractResolver()", span="730-730", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedTrue()", file="DependencyInjectionTests.cs"];
m2_377 [label="resolver.IgnoreIsSpecifiedMembers = true", span="731-731", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedTrue()", file="DependencyInjectionTests.cs"];
m2_379 [label="var property1 = contract.Properties[''Prop1'']", span="735-735", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedTrue()", file="DependencyInjectionTests.cs"];
m2_382 [label="var property2 = contract.Properties[''Prop2'']", span="739-739", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedTrue()", file="DependencyInjectionTests.cs"];
m2_385 [label="var property3 = contract.Properties[''Prop3'']", span="743-743", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedTrue()", file="DependencyInjectionTests.cs"];
m2_388 [label="var property4 = contract.Properties[''Prop4'']", span="747-747", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedTrue()", file="DependencyInjectionTests.cs"];
m2_391 [label="var property5 = contract.Properties[''Prop5'']", span="751-751", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedTrue()", file="DependencyInjectionTests.cs"];
m2_394 [label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedTrue()", span="728-728", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DefaultContractResolverIgnoreIsSpecifiedTrue()", file="DependencyInjectionTests.cs"];
m2_325 [label="Entry Newtonsoft.Json.Tests.TestObjects.StructTest.StructTest()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.StructTest.StructTest()", file="DependencyInjectionTests.cs"];
m2_300 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="DependencyInjectionTests.cs"];
m2_275 [label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CustomOverrideCreator()", span="497-497", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CustomOverrideCreator()", file="DependencyInjectionTests.cs"];
m2_277 [label="var contract = (JsonObjectContract)resolver.ResolveContract(typeof(MultipleParametrizedConstructorsJsonConstructor))", span="500-500", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CustomOverrideCreator()", file="DependencyInjectionTests.cs"];
m2_282 [label="Assert.AreEqual(''value!'', o.Value)", span="516-516", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CustomOverrideCreator()", file="DependencyInjectionTests.cs"];
m2_283 [label="Assert.AreEqual(1, o.Age)", span="517-517", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CustomOverrideCreator()", file="DependencyInjectionTests.cs"];
m2_276 [label="var resolver = new DefaultContractResolver()", span="499-499", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CustomOverrideCreator()", file="DependencyInjectionTests.cs"];
m2_284 [label="Assert.IsTrue(ensureCustomCreatorCalled)", span="518-518", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CustomOverrideCreator()", file="DependencyInjectionTests.cs"];
m2_280 [label="Assert.IsNotNull(contract.OverrideCreator)", span="509-509", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CustomOverrideCreator()", file="DependencyInjectionTests.cs"];
m2_281 [label="var o = JsonConvert.DeserializeObject<MultipleParametrizedConstructorsJsonConstructor>(''{Value:'value!', Age:1}'', new JsonSerializerSettings\r\n            {\r\n                ContractResolver = resolver\r\n            })", span="511-514", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CustomOverrideCreator()", file="DependencyInjectionTests.cs"];
m2_278 [label="bool ensureCustomCreatorCalled = false", span="502-502", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CustomOverrideCreator()", file="DependencyInjectionTests.cs"];
m2_279 [label="contract.OverrideCreator = args =>\r\n            {\r\n                ensureCustomCreatorCalled = true;\r\n                return new MultipleParametrizedConstructorsJsonConstructor((string)args[0], (int)args[1]);\r\n            }", span="504-508", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CustomOverrideCreator()", file="DependencyInjectionTests.cs"];
m2_285 [label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CustomOverrideCreator()", span="497-497", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CustomOverrideCreator()", file="DependencyInjectionTests.cs"];
m2_264 [label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.OverrideCreator()", span="481-481", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.OverrideCreator()", file="DependencyInjectionTests.cs"];
m2_266 [label="var contract = (JsonObjectContract)resolver.ResolveContract(typeof(MultipleParametrizedConstructorsJsonConstructor))", span="484-484", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.OverrideCreator()", file="DependencyInjectionTests.cs"];
m2_269 [label="Assert.AreEqual(2, contract.CreatorParameters.Count)", span="488-488", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.OverrideCreator()", file="DependencyInjectionTests.cs"];
m2_270 [label="Assert.AreEqual(''Value'', contract.CreatorParameters[0].PropertyName)", span="489-489", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.OverrideCreator()", file="DependencyInjectionTests.cs"];
m2_271 [label="Assert.AreEqual(''Age'', contract.CreatorParameters[1].PropertyName)", span="490-490", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.OverrideCreator()", file="DependencyInjectionTests.cs"];
m2_265 [label="var resolver = new DefaultContractResolver()", span="483-483", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.OverrideCreator()", file="DependencyInjectionTests.cs"];
m2_268 [label="Assert.IsNotNull(contract.OverrideCreator)", span="487-487", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.OverrideCreator()", file="DependencyInjectionTests.cs"];
m2_267 [label="Assert.IsNull(contract.DefaultCreator)", span="486-486", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.OverrideCreator()", file="DependencyInjectionTests.cs"];
m2_273 [label="Assert.IsNull(contract.OverrideCreator)", span="493-493", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.OverrideCreator()", file="DependencyInjectionTests.cs"];
m2_272 [label="contract.OverrideCreator = null", span="492-492", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.OverrideCreator()", file="DependencyInjectionTests.cs"];
m2_274 [label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.OverrideCreator()", span="481-481", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.OverrideCreator()", file="DependencyInjectionTests.cs"];
m2_301 [label="Entry Newtonsoft.Json.Tests.Serialization.IPersonContractResolver.IPersonContractResolver()", span="93-93", cluster="Newtonsoft.Json.Tests.Serialization.IPersonContractResolver.IPersonContractResolver()", file="DependencyInjectionTests.cs"];
m2_25 [label="Entry Newtonsoft.Json.Tests.Serialization.DependencyInjectionTests.CreateObjectWithParameters()", span="155-155", cluster="Newtonsoft.Json.Tests.Serialization.DependencyInjectionTests.CreateObjectWithParameters()", file="DependencyInjectionTests.cs"];
m2_95 [label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="370-370", cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="DependencyInjectionTests.cs"];
m2_16 [label="contract.DefaultCreator = () => _container.Resolve(objectType)", span="144-144", cluster="Newtonsoft.Json.Tests.Serialization.AutofacContractResolver.CreateObjectContract(System.Type)", file="DependencyInjectionTests.cs"];
m2_17 [label="return contract;", span="147-147", cluster="Newtonsoft.Json.Tests.Serialization.AutofacContractResolver.CreateObjectContract(System.Type)", color=red, community=0, file="DependencyInjectionTests.cs"];
m2_18 [label="Exit Newtonsoft.Json.Tests.Serialization.AutofacContractResolver.CreateObjectContract(System.Type)", span="137-137", cluster="Newtonsoft.Json.Tests.Serialization.AutofacContractResolver.CreateObjectContract(System.Type)", file="DependencyInjectionTests.cs"];
m2_417 [label=resolver, span="", file="DependencyInjectionTests.cs"];
m2_418 [label=resolver, span="", file="DependencyInjectionTests.cs"];
m2_419 [label=resolver, span="", file="DependencyInjectionTests.cs"];
m2_414 [label="Newtonsoft.Json.Tests.Serialization.DynamicContractResolver", span="", file="DependencyInjectionTests.cs"];
m3_85 [label="Entry System.Collections.IEnumerable.Cast<TResult>()", span="69-69", cluster="System.Collections.IEnumerable.Cast<TResult>()", file="DeserializeWithDependencyInjection.cs"];
m3_213 [label="Entry Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.CopyTo(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>[], int)", span="634-634", cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.CopyTo(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>[], int)", file="DeserializeWithDependencyInjection.cs"];
m3_214 [label="array == null", span="636-636", cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.CopyTo(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>[], int)", file="DeserializeWithDependencyInjection.cs"];
m3_215 [label="throw new ArgumentNullException(nameof(array));", span="638-638", cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.CopyTo(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>[], int)", file="DeserializeWithDependencyInjection.cs"];
m3_216 [label="arrayIndex < 0", span="640-640", cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.CopyTo(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>[], int)", file="DeserializeWithDependencyInjection.cs"];
m3_217 [label="throw new ArgumentOutOfRangeException(nameof(arrayIndex), ''arrayIndex is less than 0.'');", span="642-642", cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.CopyTo(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>[], int)", file="DeserializeWithDependencyInjection.cs"];
m3_218 [label="arrayIndex >= array.Length && arrayIndex != 0", span="644-644", cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.CopyTo(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>[], int)", file="DeserializeWithDependencyInjection.cs"];
m3_220 [label="Count > array.Length - arrayIndex", span="648-648", cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.CopyTo(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>[], int)", file="DeserializeWithDependencyInjection.cs"];
m3_224 [label="array[arrayIndex + index] = new KeyValuePair<string, JToken>(property.Name, property.Value)", span="656-656", cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.CopyTo(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>[], int)", file="DeserializeWithDependencyInjection.cs"];
m3_219 [label="throw new ArgumentException(''arrayIndex is equal to or greater than the length of array.'');", span="646-646", cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.CopyTo(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>[], int)", file="DeserializeWithDependencyInjection.cs"];
m3_221 [label="throw new ArgumentException(''The number of elements in the source JObject is greater than the available space from arrayIndex to the end of the destination array.'');", span="650-650", cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.CopyTo(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>[], int)", file="DeserializeWithDependencyInjection.cs"];
m3_222 [label="int index = 0", span="653-653", cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.CopyTo(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>[], int)", file="DeserializeWithDependencyInjection.cs"];
m3_223 [label=_properties, span="654-654", cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.CopyTo(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>[], int)", file="DeserializeWithDependencyInjection.cs"];
m3_225 [label="index++", span="657-657", cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.CopyTo(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>[], int)", file="DeserializeWithDependencyInjection.cs"];
m3_226 [label="Exit Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.CopyTo(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>[], int)", span="634-634", cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.CopyTo(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>[], int)", file="DeserializeWithDependencyInjection.cs"];
m3_203 [label="Entry Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Clear()", span="618-618", cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Clear()", file="DeserializeWithDependencyInjection.cs"];
m3_204 [label="RemoveAll()", span="620-620", cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Clear()", file="DeserializeWithDependencyInjection.cs"];
m3_205 [label="Exit Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Clear()", span="618-618", cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Clear()", file="DeserializeWithDependencyInjection.cs"];
m3_206 [label="Entry Newtonsoft.Json.Linq.JContainer.RemoveAll()", span="698-698", cluster="Newtonsoft.Json.Linq.JContainer.RemoveAll()", file="DeserializeWithDependencyInjection.cs"];
m3_48 [label=o, span="170-170", cluster="Newtonsoft.Json.Linq.JObject.MergeItem(object, Newtonsoft.Json.Linq.JsonMergeSettings)", file="DeserializeWithDependencyInjection.cs"];
m3_26 [label="string json = @''{\r\n              'Logger': {\r\n                'Level':'Debug'\r\n              }\r\n            }''", span="109-113", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeWithDependencyInjection.Example()", file="DeserializeWithDependencyInjection.cs"];
m3_121 [label="Entry Newtonsoft.Json.Linq.JObject.Parse(string)", span="407-407", cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", file="DeserializeWithDependencyInjection.cs"];
m3_122 [label="return Parse(json, null);", span="409-409", cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", file="DeserializeWithDependencyInjection.cs"];
m3_123 [label="Exit Newtonsoft.Json.Linq.JObject.Parse(string)", span="407-407", cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", file="DeserializeWithDependencyInjection.cs"];
m3_136 [label="Entry Newtonsoft.Json.Linq.JObject.FromObject(object, Newtonsoft.Json.JsonSerializer)", span="456-456", cluster="Newtonsoft.Json.Linq.JObject.FromObject(object, Newtonsoft.Json.JsonSerializer)", file="DeserializeWithDependencyInjection.cs"];
m3_137 [label="JToken token = FromObjectInternal(o, jsonSerializer)", span="458-458", cluster="Newtonsoft.Json.Linq.JObject.FromObject(object, Newtonsoft.Json.JsonSerializer)", file="DeserializeWithDependencyInjection.cs"];
m3_138 [label="token != null && token.Type != JTokenType.Object", span="460-460", cluster="Newtonsoft.Json.Linq.JObject.FromObject(object, Newtonsoft.Json.JsonSerializer)", file="DeserializeWithDependencyInjection.cs"];
m3_139 [label="throw new ArgumentException(''Object serialized to {0}. JObject instance expected.''.FormatWith(CultureInfo.InvariantCulture, token.Type));", span="462-462", cluster="Newtonsoft.Json.Linq.JObject.FromObject(object, Newtonsoft.Json.JsonSerializer)", file="DeserializeWithDependencyInjection.cs"];
m3_140 [label="return (JObject)token;", span="465-465", cluster="Newtonsoft.Json.Linq.JObject.FromObject(object, Newtonsoft.Json.JsonSerializer)", file="DeserializeWithDependencyInjection.cs"];
m3_141 [label="Exit Newtonsoft.Json.Linq.JObject.FromObject(object, Newtonsoft.Json.JsonSerializer)", span="456-456", cluster="Newtonsoft.Json.Linq.JObject.FromObject(object, Newtonsoft.Json.JsonSerializer)", file="DeserializeWithDependencyInjection.cs"];
m3_181 [label="Entry Newtonsoft.Json.Linq.JPropertyKeyedCollection.Contains(string)", span="77-77", cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.Contains(string)", file="DeserializeWithDependencyInjection.cs"];
m3_237 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Remove(TKey)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Remove(TKey)", file="DeserializeWithDependencyInjection.cs"];
m3_241 [label="Entry Newtonsoft.Json.Linq.JContainer.ContentsHashCode()", span="861-861", cluster="Newtonsoft.Json.Linq.JContainer.ContentsHashCode()", file="DeserializeWithDependencyInjection.cs"];
m3_189 [label="Entry Newtonsoft.Json.Linq.JToken.Remove()", span="382-382", cluster="Newtonsoft.Json.Linq.JToken.Remove()", file="DeserializeWithDependencyInjection.cs"];
m3_229 [label="Entry KeyValuePair<string, JToken>.cstr", span="", cluster="KeyValuePair<string, JToken>.cstr", file="DeserializeWithDependencyInjection.cs"];
m3_65 [label="Entry Unk.Merge", span="", cluster="Unk.Merge", file="DeserializeWithDependencyInjection.cs"];
m3_45 [label="Entry lambda expression", span="103-103", cluster="lambda expression", file="DeserializeWithDependencyInjection.cs"];
m3_4 [label="JsonObjectContract contract = base.CreateObjectContract(objectType)", span="61-61", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeWithDependencyInjection.AutofacContractResolver.CreateObjectContract(System.Type)", file="DeserializeWithDependencyInjection.cs"];
m3_5 [label="_container.IsRegistered(objectType)", span="64-64", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeWithDependencyInjection.AutofacContractResolver.CreateObjectContract(System.Type)", file="DeserializeWithDependencyInjection.cs"];
m3_40 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="DeserializeWithDependencyInjection.cs"];
m3_77 [label="Entry Newtonsoft.Json.Linq.JObject.InternalPropertyChanging(Newtonsoft.Json.Linq.JProperty)", span="232-232", cluster="Newtonsoft.Json.Linq.JObject.InternalPropertyChanging(Newtonsoft.Json.Linq.JProperty)", file="DeserializeWithDependencyInjection.cs"];
m3_78 [label="Exit Newtonsoft.Json.Linq.JObject.InternalPropertyChanging(Newtonsoft.Json.Linq.JProperty)", span="232-232", cluster="Newtonsoft.Json.Linq.JObject.InternalPropertyChanging(Newtonsoft.Json.Linq.JProperty)", file="DeserializeWithDependencyInjection.cs"];
m3_6 [label="contract.DefaultCreator = () => _container.Resolve(objectType)", span="66-66", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeWithDependencyInjection.AutofacContractResolver.CreateObjectContract(System.Type)", file="DeserializeWithDependencyInjection.cs", color=green, community=0];
m3_7 [label="return contract;", span="69-69", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeWithDependencyInjection.AutofacContractResolver.CreateObjectContract(System.Type)", file="DeserializeWithDependencyInjection.cs", color=green, community=0];
m3_8 [label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeWithDependencyInjection.AutofacContractResolver.CreateObjectContract(System.Type)", span="59-59", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeWithDependencyInjection.AutofacContractResolver.CreateObjectContract(System.Type)", file="DeserializeWithDependencyInjection.cs"];
m3_43 [label="Entry System.DateTime.DateTime(int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int)", file="DeserializeWithDependencyInjection.cs"];
m3_9 [label="Entry Newtonsoft.Json.Linq.JContainer.Add(object)", span="626-626", cluster="Newtonsoft.Json.Linq.JContainer.Add(object)", file="DeserializeWithDependencyInjection.cs"];
m3_38 [label="Exit Newtonsoft.Json.Linq.JObject.ValidateToken(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="141-141", cluster="Newtonsoft.Json.Linq.JObject.ValidateToken(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="DeserializeWithDependencyInjection.cs"];
m3_63 [label="Entry Newtonsoft.Json.Linq.JObject.Add(string, Newtonsoft.Json.Linq.JToken)", span="553-553", cluster="Newtonsoft.Json.Linq.JObject.Add(string, Newtonsoft.Json.Linq.JToken)", file="DeserializeWithDependencyInjection.cs"];
m3_174 [label="Add(new JProperty(propertyName, value))", span="555-555", cluster="Newtonsoft.Json.Linq.JObject.Add(string, Newtonsoft.Json.Linq.JToken)", file="DeserializeWithDependencyInjection.cs"];
m3_175 [label="Exit Newtonsoft.Json.Linq.JObject.Add(string, Newtonsoft.Json.Linq.JToken)", span="553-553", cluster="Newtonsoft.Json.Linq.JObject.Add(string, Newtonsoft.Json.Linq.JToken)", file="DeserializeWithDependencyInjection.cs"];
m3_0 [label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeWithDependencyInjection.AutofacContractResolver.AutofacContractResolver(IContainer)", span="54-54", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeWithDependencyInjection.AutofacContractResolver.AutofacContractResolver(IContainer)", file="DeserializeWithDependencyInjection.cs"];
m3_1 [label="_container = container", span="56-56", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeWithDependencyInjection.AutofacContractResolver.AutofacContractResolver(IContainer)", file="DeserializeWithDependencyInjection.cs"];
m3_99 [label="Entry Newtonsoft.Json.Linq.JObject.Load(Newtonsoft.Json.JsonReader)", span="354-354", cluster="Newtonsoft.Json.Linq.JObject.Load(Newtonsoft.Json.JsonReader)", file="DeserializeWithDependencyInjection.cs"];
m3_100 [label="return Load(reader, null);", span="356-356", cluster="Newtonsoft.Json.Linq.JObject.Load(Newtonsoft.Json.JsonReader)", file="DeserializeWithDependencyInjection.cs"];
m3_101 [label="Exit Newtonsoft.Json.Linq.JObject.Load(Newtonsoft.Json.JsonReader)", span="354-354", cluster="Newtonsoft.Json.Linq.JObject.Load(Newtonsoft.Json.JsonReader)", file="DeserializeWithDependencyInjection.cs"];
m3_102 [label="Entry Newtonsoft.Json.Linq.JObject.Load(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", span="369-369", cluster="Newtonsoft.Json.Linq.JObject.Load(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DeserializeWithDependencyInjection.cs"];
m3_103 [label="ValidationUtils.ArgumentNotNull(reader, nameof(reader))", span="371-371", cluster="Newtonsoft.Json.Linq.JObject.Load(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DeserializeWithDependencyInjection.cs"];
m3_104 [label="reader.TokenType == JsonToken.None", span="373-373", cluster="Newtonsoft.Json.Linq.JObject.Load(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DeserializeWithDependencyInjection.cs"];
m3_105 [label="!reader.Read()", span="375-375", cluster="Newtonsoft.Json.Linq.JObject.Load(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DeserializeWithDependencyInjection.cs"];
m3_106 [label="throw JsonReaderException.Create(reader, ''Error reading JObject from JsonReader.'');", span="377-377", cluster="Newtonsoft.Json.Linq.JObject.Load(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DeserializeWithDependencyInjection.cs"];
m3_107 [label="reader.MoveToContent()", span="381-381", cluster="Newtonsoft.Json.Linq.JObject.Load(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DeserializeWithDependencyInjection.cs"];
m3_108 [label="reader.TokenType != JsonToken.StartObject", span="383-383", cluster="Newtonsoft.Json.Linq.JObject.Load(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DeserializeWithDependencyInjection.cs"];
m3_109 [label="throw JsonReaderException.Create(reader, ''Error reading JObject from JsonReader. Current JsonReader item is not an object: {0}''.FormatWith(CultureInfo.InvariantCulture, reader.TokenType));", span="385-385", cluster="Newtonsoft.Json.Linq.JObject.Load(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DeserializeWithDependencyInjection.cs"];
m3_111 [label="o.SetLineInfo(reader as IJsonLineInfo, settings)", span="389-389", cluster="Newtonsoft.Json.Linq.JObject.Load(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DeserializeWithDependencyInjection.cs"];
m3_112 [label="o.ReadTokenFrom(reader, settings)", span="391-391", cluster="Newtonsoft.Json.Linq.JObject.Load(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DeserializeWithDependencyInjection.cs"];
m3_110 [label="JObject o = new JObject()", span="388-388", cluster="Newtonsoft.Json.Linq.JObject.Load(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DeserializeWithDependencyInjection.cs"];
m3_113 [label="return o;", span="393-393", cluster="Newtonsoft.Json.Linq.JObject.Load(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DeserializeWithDependencyInjection.cs"];
m3_114 [label="Exit Newtonsoft.Json.Linq.JObject.Load(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", span="369-369", cluster="Newtonsoft.Json.Linq.JObject.Load(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DeserializeWithDependencyInjection.cs"];
m3_236 [label="Entry System.Collections.Generic.ICollection<T>.Contains(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Contains(T)", file="DeserializeWithDependencyInjection.cs"];
m3_177 [label="Entry Newtonsoft.Json.Linq.JObject.ContainsKey(string)", span="563-563", cluster="Newtonsoft.Json.Linq.JObject.ContainsKey(string)", file="DeserializeWithDependencyInjection.cs"];
m3_178 [label="ValidationUtils.ArgumentNotNull(propertyName, nameof(propertyName))", span="565-565", cluster="Newtonsoft.Json.Linq.JObject.ContainsKey(string)", file="DeserializeWithDependencyInjection.cs"];
m3_179 [label="return _properties.Contains(propertyName);", span="567-567", cluster="Newtonsoft.Json.Linq.JObject.ContainsKey(string)", file="DeserializeWithDependencyInjection.cs"];
m3_180 [label="Exit Newtonsoft.Json.Linq.JObject.ContainsKey(string)", span="563-563", cluster="Newtonsoft.Json.Linq.JObject.ContainsKey(string)", file="DeserializeWithDependencyInjection.cs"];
m3_117 [label="Entry Newtonsoft.Json.JsonReader.MoveToContent()", span="1235-1235", cluster="Newtonsoft.Json.JsonReader.MoveToContent()", file="DeserializeWithDependencyInjection.cs"];
m3_227 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="DeserializeWithDependencyInjection.cs"];
m3_19 [label="Exit Newtonsoft.Json.Linq.JObject.IndexOfItem(Newtonsoft.Json.Linq.JToken)", span="125-125", cluster="Newtonsoft.Json.Linq.JObject.IndexOfItem(Newtonsoft.Json.Linq.JToken)", file="DeserializeWithDependencyInjection.cs"];
m3_25 [label="Exit Newtonsoft.Json.Linq.JObject.InsertItem(int, Newtonsoft.Json.Linq.JToken, bool)", span="130-130", cluster="Newtonsoft.Json.Linq.JObject.InsertItem(int, Newtonsoft.Json.Linq.JToken, bool)", file="DeserializeWithDependencyInjection.cs"];
m3_24 [label="base.InsertItem(index, item, skipParentCheck)", span="138-138", cluster="Newtonsoft.Json.Linq.JObject.InsertItem(int, Newtonsoft.Json.Linq.JToken, bool)", file="DeserializeWithDependencyInjection.cs"];
m3_27 [label="Entry Newtonsoft.Json.Linq.JObject.ValidateToken(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="141-141", cluster="Newtonsoft.Json.Linq.JObject.ValidateToken(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="DeserializeWithDependencyInjection.cs"];
m3_20 [label="Entry Newtonsoft.Json.Linq.JPropertyKeyedCollection.IndexOfReference(Newtonsoft.Json.Linq.JToken)", span="220-220", cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.IndexOfReference(Newtonsoft.Json.Linq.JToken)", file="DeserializeWithDependencyInjection.cs"];
m3_23 [label="return;", span="135-135", cluster="Newtonsoft.Json.Linq.JObject.InsertItem(int, Newtonsoft.Json.Linq.JToken, bool)", file="DeserializeWithDependencyInjection.cs"];
m3_28 [label="ValidationUtils.ArgumentNotNull(o, nameof(o))", span="143-143", cluster="Newtonsoft.Json.Linq.JObject.ValidateToken(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="DeserializeWithDependencyInjection.cs"];
m3_29 [label="o.Type != JTokenType.Property", span="145-145", cluster="Newtonsoft.Json.Linq.JObject.ValidateToken(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="DeserializeWithDependencyInjection.cs"];
m3_30 [label="throw new ArgumentException(''Can not add {0} to {1}.''.FormatWith(CultureInfo.InvariantCulture, o.GetType(), GetType()));", span="147-147", cluster="Newtonsoft.Json.Linq.JObject.ValidateToken(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="DeserializeWithDependencyInjection.cs"];
m3_31 [label="JProperty newProperty = (JProperty)o", span="150-150", cluster="Newtonsoft.Json.Linq.JObject.ValidateToken(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="DeserializeWithDependencyInjection.cs"];
m3_32 [label="existing != null", span="152-152", cluster="Newtonsoft.Json.Linq.JObject.ValidateToken(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="DeserializeWithDependencyInjection.cs"];
m3_21 [label="Entry Newtonsoft.Json.Linq.JObject.InsertItem(int, Newtonsoft.Json.Linq.JToken, bool)", span="130-130", cluster="Newtonsoft.Json.Linq.JObject.InsertItem(int, Newtonsoft.Json.Linq.JToken, bool)", file="DeserializeWithDependencyInjection.cs"];
m3_22 [label="item != null && item.Type == JTokenType.Comment", span="133-133", cluster="Newtonsoft.Json.Linq.JObject.InsertItem(int, Newtonsoft.Json.Linq.JToken, bool)", file="DeserializeWithDependencyInjection.cs"];
m3_33 [label="JProperty existingProperty = (JProperty)existing", span="154-154", cluster="Newtonsoft.Json.Linq.JObject.ValidateToken(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="DeserializeWithDependencyInjection.cs"];
m3_182 [label="Entry Newtonsoft.Json.Linq.JObject.Remove(string)", span="577-577", cluster="Newtonsoft.Json.Linq.JObject.Remove(string)", file="DeserializeWithDependencyInjection.cs"];
m3_183 [label="JProperty property = Property(propertyName)", span="579-579", cluster="Newtonsoft.Json.Linq.JObject.Remove(string)", file="DeserializeWithDependencyInjection.cs"];
m3_184 [label="property == null", span="580-580", cluster="Newtonsoft.Json.Linq.JObject.Remove(string)", file="DeserializeWithDependencyInjection.cs"];
m3_186 [label="property.Remove()", span="585-585", cluster="Newtonsoft.Json.Linq.JObject.Remove(string)", file="DeserializeWithDependencyInjection.cs"];
m3_185 [label="return false;", span="582-582", cluster="Newtonsoft.Json.Linq.JObject.Remove(string)", file="DeserializeWithDependencyInjection.cs"];
m3_187 [label="return true;", span="586-586", cluster="Newtonsoft.Json.Linq.JObject.Remove(string)", file="DeserializeWithDependencyInjection.cs"];
m3_188 [label="Exit Newtonsoft.Json.Linq.JObject.Remove(string)", span="577-577", cluster="Newtonsoft.Json.Linq.JObject.Remove(string)", file="DeserializeWithDependencyInjection.cs"];
m3_44 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="DeserializeWithDependencyInjection.cs"];
m3_15 [label="return _properties.Compare(t._properties);", span="122-122", cluster="Newtonsoft.Json.Linq.JObject.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="DeserializeWithDependencyInjection.cs"];
m3_16 [label="Entry Unk.Compare", span="", cluster="Unk.Compare", color=green, community=0, file="DeserializeWithDependencyInjection.cs"];
m3_17 [label="Entry Newtonsoft.Json.Linq.JObject.IndexOfItem(Newtonsoft.Json.Linq.JToken)", span="125-125", cluster="Newtonsoft.Json.Linq.JObject.IndexOfItem(Newtonsoft.Json.Linq.JToken)", color=green, community=0, file="DeserializeWithDependencyInjection.cs"];
m3_18 [label="return _properties.IndexOfReference(item);", span="127-127", cluster="Newtonsoft.Json.Linq.JObject.IndexOfItem(Newtonsoft.Json.Linq.JToken)", file="DeserializeWithDependencyInjection.cs"];
m3_64 [label="Entry Newtonsoft.Json.Linq.JObject.IsNull(Newtonsoft.Json.Linq.JToken)", span="200-200", cluster="Newtonsoft.Json.Linq.JObject.IsNull(Newtonsoft.Json.Linq.JToken)", file="DeserializeWithDependencyInjection.cs"];
m3_66 [label="token.Type == JTokenType.Null", span="202-202", cluster="Newtonsoft.Json.Linq.JObject.IsNull(Newtonsoft.Json.Linq.JToken)", file="DeserializeWithDependencyInjection.cs"];
m3_68 [label="token is JValue", span="207-207", cluster="Newtonsoft.Json.Linq.JObject.IsNull(Newtonsoft.Json.Linq.JToken)", file="DeserializeWithDependencyInjection.cs"];
m3_67 [label="return true;", span="204-204", cluster="Newtonsoft.Json.Linq.JObject.IsNull(Newtonsoft.Json.Linq.JToken)", file="DeserializeWithDependencyInjection.cs"];
m3_69 [label="v && v.Value == null", span="207-207", cluster="Newtonsoft.Json.Linq.JObject.IsNull(Newtonsoft.Json.Linq.JToken)", file="DeserializeWithDependencyInjection.cs"];
m3_70 [label="return true;", span="209-209", cluster="Newtonsoft.Json.Linq.JObject.IsNull(Newtonsoft.Json.Linq.JToken)", file="DeserializeWithDependencyInjection.cs"];
m3_72 [label="return false;", span="212-212", cluster="Newtonsoft.Json.Linq.JObject.IsNull(Newtonsoft.Json.Linq.JToken)", file="DeserializeWithDependencyInjection.cs"];
m3_71 [label="Exit Newtonsoft.Json.Linq.JObject.IsNull(Newtonsoft.Json.Linq.JToken)", span="200-200", cluster="Newtonsoft.Json.Linq.JObject.IsNull(Newtonsoft.Json.Linq.JToken)", file="DeserializeWithDependencyInjection.cs"];
m3_249 [label="Entry System.ComponentModel.PropertyChangedEventArgs.PropertyChangedEventArgs(string)", span="0-0", cluster="System.ComponentModel.PropertyChangedEventArgs.PropertyChangedEventArgs(string)", file="DeserializeWithDependencyInjection.cs"];
m3_119 [label="Entry Newtonsoft.Json.Linq.JToken.SetLineInfo(Newtonsoft.Json.IJsonLineInfo, Newtonsoft.Json.Linq.JsonLoadSettings)", span="2226-2226", cluster="Newtonsoft.Json.Linq.JToken.SetLineInfo(Newtonsoft.Json.IJsonLineInfo, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DeserializeWithDependencyInjection.cs"];
m3_39 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="817-817", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="DeserializeWithDependencyInjection.cs"];
m3_170 [label="Entry Newtonsoft.Json.Linq.JObject.TryGetValue(string, System.StringComparison, out Newtonsoft.Json.Linq.JToken)", span="541-541", cluster="Newtonsoft.Json.Linq.JObject.TryGetValue(string, System.StringComparison, out Newtonsoft.Json.Linq.JToken)", file="DeserializeWithDependencyInjection.cs"];
m3_171 [label="value = GetValue(propertyName, comparison)", span="543-543", cluster="Newtonsoft.Json.Linq.JObject.TryGetValue(string, System.StringComparison, out Newtonsoft.Json.Linq.JToken)", file="DeserializeWithDependencyInjection.cs"];
m3_172 [label="return (value != null);", span="544-544", cluster="Newtonsoft.Json.Linq.JObject.TryGetValue(string, System.StringComparison, out Newtonsoft.Json.Linq.JToken)", file="DeserializeWithDependencyInjection.cs"];
m3_173 [label="Exit Newtonsoft.Json.Linq.JObject.TryGetValue(string, System.StringComparison, out Newtonsoft.Json.Linq.JToken)", span="541-541", cluster="Newtonsoft.Json.Linq.JObject.TryGetValue(string, System.StringComparison, out Newtonsoft.Json.Linq.JToken)", file="DeserializeWithDependencyInjection.cs"];
m3_94 [label="Entry JEnumerable<JToken>.cstr", span="", cluster="JEnumerable<JToken>.cstr", file="DeserializeWithDependencyInjection.cs"];
m3_46 [label="new LogService(new DateTime(2000, 12, 12))", span="103-103", cluster="lambda expression", file="DeserializeWithDependencyInjection.cs"];
m3_47 [label="Exit lambda expression", span="103-103", cluster="lambda expression", file="DeserializeWithDependencyInjection.cs"];
m3_49 [label="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeWithDependencyInjection.AutofacContractResolver", span="", cluster="Newtonsoft.Json.Linq.JObject.MergeItem(object, Newtonsoft.Json.Linq.JsonMergeSettings)", file="DeserializeWithDependencyInjection.cs"];
m3_50 [label="System.Type", span="", cluster="Newtonsoft.Json.Linq.JObject.MergeItem(object, Newtonsoft.Json.Linq.JsonMergeSettings)", file="DeserializeWithDependencyInjection.cs"];
m3_51 [label="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeWithDependencyInjection.TaskController", span="", cluster="Newtonsoft.Json.Linq.JObject.MergeItem(object, Newtonsoft.Json.Linq.JsonMergeSettings)", file="DeserializeWithDependencyInjection.cs"];
m3_52 [label="existingProperty == null", span="179-179", cluster="Newtonsoft.Json.Linq.JObject.MergeItem(object, Newtonsoft.Json.Linq.JsonMergeSettings)", file="DeserializeWithDependencyInjection.cs"];
m3_53 [label="Add(contentItem.Key, contentItem.Value)", span="181-181", cluster="Newtonsoft.Json.Linq.JObject.MergeItem(object, Newtonsoft.Json.Linq.JsonMergeSettings)", file="DeserializeWithDependencyInjection.cs"];
m3_54 [label="contentItem.Value != null", span="183-183", cluster="Newtonsoft.Json.Linq.JObject.MergeItem(object, Newtonsoft.Json.Linq.JsonMergeSettings)", file="DeserializeWithDependencyInjection.cs"];
m3_55 [label="!(existingProperty.Value is JContainer ", span="185-185", cluster="Newtonsoft.Json.Linq.JObject.MergeItem(object, Newtonsoft.Json.Linq.JsonMergeSettings)", file="DeserializeWithDependencyInjection.cs"];
m3_59 [label="existingProperty.Value = contentItem.Value", span="189-189", cluster="Newtonsoft.Json.Linq.JObject.MergeItem(object, Newtonsoft.Json.Linq.JsonMergeSettings)", file="DeserializeWithDependencyInjection.cs"];
m3_57 [label="|| existingContainer.Type != contentItem.Value.Type", span="185-185", cluster="Newtonsoft.Json.Linq.JObject.MergeItem(object, Newtonsoft.Json.Linq.JsonMergeSettings)", file="DeserializeWithDependencyInjection.cs"];
m3_56 [label=existingContainer, span="185-185", cluster="Newtonsoft.Json.Linq.JObject.MergeItem(object, Newtonsoft.Json.Linq.JsonMergeSettings)", file="DeserializeWithDependencyInjection.cs"];
m3_58 [label="!IsNull(contentItem.Value) || settings?.MergeNullValueHandling == MergeNullValueHandling.Merge", span="187-187", cluster="Newtonsoft.Json.Linq.JObject.MergeItem(object, Newtonsoft.Json.Linq.JsonMergeSettings)", file="DeserializeWithDependencyInjection.cs"];
m3_60 [label="existingContainer.Merge(contentItem.Value, settings)", span="194-194", cluster="Newtonsoft.Json.Linq.JObject.MergeItem(object, Newtonsoft.Json.Linq.JsonMergeSettings)", file="DeserializeWithDependencyInjection.cs"];
m3_61 [label="Exit Newtonsoft.Json.Linq.JObject.MergeItem(object, Newtonsoft.Json.Linq.JsonMergeSettings)", span="168-168", cluster="Newtonsoft.Json.Linq.JObject.MergeItem(object, Newtonsoft.Json.Linq.JsonMergeSettings)", file="DeserializeWithDependencyInjection.cs"];
m3_130 [label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="82-82", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="DeserializeWithDependencyInjection.cs"];
m3_2 [label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeWithDependencyInjection.AutofacContractResolver.AutofacContractResolver(IContainer)", span="54-54", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeWithDependencyInjection.AutofacContractResolver.AutofacContractResolver(IContainer)", file="DeserializeWithDependencyInjection.cs"];
m3_3 [label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeWithDependencyInjection.AutofacContractResolver.CreateObjectContract(System.Type)", span="59-59", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeWithDependencyInjection.AutofacContractResolver.CreateObjectContract(System.Type)", file="DeserializeWithDependencyInjection.cs"];
m3_142 [label="Entry Newtonsoft.Json.Linq.JToken.FromObjectInternal(object, Newtonsoft.Json.JsonSerializer)", span="1880-1880", cluster="Newtonsoft.Json.Linq.JToken.FromObjectInternal(object, Newtonsoft.Json.JsonSerializer)", file="DeserializeWithDependencyInjection.cs"];
m3_169 [label="Entry Unk.Equals", span="", cluster="Unk.Equals", file="DeserializeWithDependencyInjection.cs"];
m3_118 [label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47", cluster="string.FormatWith(System.IFormatProvider, object)", file="DeserializeWithDependencyInjection.cs"];
m3_35 [label="return;", span="158-158", cluster="Newtonsoft.Json.Linq.JObject.ValidateToken(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="DeserializeWithDependencyInjection.cs"];
m3_95 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="DeserializeWithDependencyInjection.cs"];
m3_82 [label="Entry Newtonsoft.Json.Linq.JObject.Properties()", span="254-254", cluster="Newtonsoft.Json.Linq.JObject.Properties()", file="DeserializeWithDependencyInjection.cs"];
m3_83 [label="return _properties.Cast<JProperty>();", span="256-256", cluster="Newtonsoft.Json.Linq.JObject.Properties()", file="DeserializeWithDependencyInjection.cs"];
m3_84 [label="Exit Newtonsoft.Json.Linq.JObject.Properties()", span="254-254", cluster="Newtonsoft.Json.Linq.JObject.Properties()", file="DeserializeWithDependencyInjection.cs"];
m3_115 [label="Entry Newtonsoft.Json.JsonReader.Read()", span="392-392", cluster="Newtonsoft.Json.JsonReader.Read()", file="DeserializeWithDependencyInjection.cs"];
m3_41 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="DeserializeWithDependencyInjection.cs"];
m3_135 [label="Entry Newtonsoft.Json.JsonSerializer.CreateDefault()", span="623-623", cluster="Newtonsoft.Json.JsonSerializer.CreateDefault()", file="DeserializeWithDependencyInjection.cs"];
m3_157 [label="Entry Newtonsoft.Json.Linq.JObject.GetValue(string, System.StringComparison)", span="503-503", cluster="Newtonsoft.Json.Linq.JObject.GetValue(string, System.StringComparison)", file="DeserializeWithDependencyInjection.cs"];
m3_158 [label="propertyName == null", span="505-505", cluster="Newtonsoft.Json.Linq.JObject.GetValue(string, System.StringComparison)", file="DeserializeWithDependencyInjection.cs"];
m3_160 [label="JProperty property = Property(propertyName)", span="511-511", cluster="Newtonsoft.Json.Linq.JObject.GetValue(string, System.StringComparison)", file="DeserializeWithDependencyInjection.cs"];
m3_163 [label="comparison != StringComparison.Ordinal", span="518-518", cluster="Newtonsoft.Json.Linq.JObject.GetValue(string, System.StringComparison)", file="DeserializeWithDependencyInjection.cs"];
m3_165 [label="string.Equals(p.Name, propertyName, comparison)", span="522-522", cluster="Newtonsoft.Json.Linq.JObject.GetValue(string, System.StringComparison)", file="DeserializeWithDependencyInjection.cs"];
m3_159 [label="return null;", span="507-507", cluster="Newtonsoft.Json.Linq.JObject.GetValue(string, System.StringComparison)", file="DeserializeWithDependencyInjection.cs"];
m3_161 [label="property != null", span="512-512", cluster="Newtonsoft.Json.Linq.JObject.GetValue(string, System.StringComparison)", file="DeserializeWithDependencyInjection.cs"];
m3_162 [label="return property.Value;", span="514-514", cluster="Newtonsoft.Json.Linq.JObject.GetValue(string, System.StringComparison)", file="DeserializeWithDependencyInjection.cs"];
m3_164 [label=_properties, span="520-520", cluster="Newtonsoft.Json.Linq.JObject.GetValue(string, System.StringComparison)", file="DeserializeWithDependencyInjection.cs"];
m3_167 [label="return null;", span="529-529", cluster="Newtonsoft.Json.Linq.JObject.GetValue(string, System.StringComparison)", file="DeserializeWithDependencyInjection.cs"];
m3_166 [label="return p.Value;", span="524-524", cluster="Newtonsoft.Json.Linq.JObject.GetValue(string, System.StringComparison)", file="DeserializeWithDependencyInjection.cs"];
m3_168 [label="Exit Newtonsoft.Json.Linq.JObject.GetValue(string, System.StringComparison)", span="503-503", cluster="Newtonsoft.Json.Linq.JObject.GetValue(string, System.StringComparison)", file="DeserializeWithDependencyInjection.cs"];
m3_120 [label="Entry Newtonsoft.Json.Linq.JContainer.ReadTokenFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", span="724-724", cluster="Newtonsoft.Json.Linq.JContainer.ReadTokenFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DeserializeWithDependencyInjection.cs"];
m3_228 [label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", span="0-0", cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", file="DeserializeWithDependencyInjection.cs"];
m3_34 [label="newProperty.Name == existingProperty.Name", span="156-156", cluster="Newtonsoft.Json.Linq.JObject.ValidateToken(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="DeserializeWithDependencyInjection.cs"];
m3_132 [label="Entry Newtonsoft.Json.Linq.JObject.FromObject(object)", span="445-445", cluster="Newtonsoft.Json.Linq.JObject.FromObject(object)", file="DeserializeWithDependencyInjection.cs"];
m3_133 [label="return FromObject(o, JsonSerializer.CreateDefault());", span="447-447", cluster="Newtonsoft.Json.Linq.JObject.FromObject(object)", file="DeserializeWithDependencyInjection.cs"];
m3_134 [label="Exit Newtonsoft.Json.Linq.JObject.FromObject(object)", span="445-445", cluster="Newtonsoft.Json.Linq.JObject.FromObject(object)", file="DeserializeWithDependencyInjection.cs"];
m3_207 [label="Entry Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Contains(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>)", span="623-623", cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Contains(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>)", file="DeserializeWithDependencyInjection.cs"];
m3_208 [label="JProperty property = Property(item.Key)", span="625-625", cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Contains(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>)", file="DeserializeWithDependencyInjection.cs"];
m3_209 [label="property == null", span="626-626", cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Contains(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>)", file="DeserializeWithDependencyInjection.cs"];
m3_211 [label="return (property.Value == item.Value);", span="631-631", cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Contains(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>)", file="DeserializeWithDependencyInjection.cs"];
m3_210 [label="return false;", span="628-628", cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Contains(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>)", file="DeserializeWithDependencyInjection.cs"];
m3_212 [label="Exit Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Contains(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>)", span="623-623", cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Contains(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>)", file="DeserializeWithDependencyInjection.cs"];
m3_198 [label="Entry Newtonsoft.Json.Linq.JObject.NotImplementedException()", span="608-608", cluster="Newtonsoft.Json.Linq.JObject.NotImplementedException()", file="DeserializeWithDependencyInjection.cs"];
m3_199 [label="Exit Newtonsoft.Json.Linq.JObject.NotImplementedException()", span="608-608", cluster="Newtonsoft.Json.Linq.JObject.NotImplementedException()", file="DeserializeWithDependencyInjection.cs"];
m3_42 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="DeserializeWithDependencyInjection.cs"];
m3_79 [label="Entry Newtonsoft.Json.Linq.JObject.CloneToken()", span="239-239", cluster="Newtonsoft.Json.Linq.JObject.CloneToken()", file="DeserializeWithDependencyInjection.cs"];
m3_80 [label="return new JObject(this);", span="241-241", cluster="Newtonsoft.Json.Linq.JObject.CloneToken()", file="DeserializeWithDependencyInjection.cs"];
m3_81 [label="Exit Newtonsoft.Json.Linq.JObject.CloneToken()", span="239-239", cluster="Newtonsoft.Json.Linq.JObject.CloneToken()", file="DeserializeWithDependencyInjection.cs"];
m3_124 [label="Entry Newtonsoft.Json.Linq.JObject.Parse(string, Newtonsoft.Json.Linq.JsonLoadSettings)", span="425-425", cluster="Newtonsoft.Json.Linq.JObject.Parse(string, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DeserializeWithDependencyInjection.cs"];
m3_125 [label="JsonReader reader = new JsonTextReader(new StringReader(json))", span="427-427", cluster="Newtonsoft.Json.Linq.JObject.Parse(string, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DeserializeWithDependencyInjection.cs"];
m3_126 [label="JObject o = Load(reader, settings)", span="429-429", cluster="Newtonsoft.Json.Linq.JObject.Parse(string, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DeserializeWithDependencyInjection.cs"];
m3_127 [label="reader.Read()", span="431-431", cluster="Newtonsoft.Json.Linq.JObject.Parse(string, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DeserializeWithDependencyInjection.cs"];
m3_128 [label="return o;", span="436-436", cluster="Newtonsoft.Json.Linq.JObject.Parse(string, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DeserializeWithDependencyInjection.cs"];
m3_129 [label="Exit Newtonsoft.Json.Linq.JObject.Parse(string, Newtonsoft.Json.Linq.JsonLoadSettings)", span="425-425", cluster="Newtonsoft.Json.Linq.JObject.Parse(string, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DeserializeWithDependencyInjection.cs"];
m3_190 [label="Entry Newtonsoft.Json.Linq.JObject.TryGetValue(string, out Newtonsoft.Json.Linq.JToken)", span="595-595", cluster="Newtonsoft.Json.Linq.JObject.TryGetValue(string, out Newtonsoft.Json.Linq.JToken)", file="DeserializeWithDependencyInjection.cs"];
m3_191 [label="JProperty property = Property(propertyName)", span="597-597", cluster="Newtonsoft.Json.Linq.JObject.TryGetValue(string, out Newtonsoft.Json.Linq.JToken)", file="DeserializeWithDependencyInjection.cs"];
m3_192 [label="property == null", span="598-598", cluster="Newtonsoft.Json.Linq.JObject.TryGetValue(string, out Newtonsoft.Json.Linq.JToken)", file="DeserializeWithDependencyInjection.cs"];
m3_195 [label="value = property.Value", span="604-604", cluster="Newtonsoft.Json.Linq.JObject.TryGetValue(string, out Newtonsoft.Json.Linq.JToken)", file="DeserializeWithDependencyInjection.cs"];
m3_193 [label="value = null", span="600-600", cluster="Newtonsoft.Json.Linq.JObject.TryGetValue(string, out Newtonsoft.Json.Linq.JToken)", file="DeserializeWithDependencyInjection.cs"];
m3_194 [label="return false;", span="601-601", cluster="Newtonsoft.Json.Linq.JObject.TryGetValue(string, out Newtonsoft.Json.Linq.JToken)", file="DeserializeWithDependencyInjection.cs"];
m3_196 [label="return true;", span="605-605", cluster="Newtonsoft.Json.Linq.JObject.TryGetValue(string, out Newtonsoft.Json.Linq.JToken)", file="DeserializeWithDependencyInjection.cs"];
m3_197 [label="Exit Newtonsoft.Json.Linq.JObject.TryGetValue(string, out Newtonsoft.Json.Linq.JToken)", span="595-595", cluster="Newtonsoft.Json.Linq.JObject.TryGetValue(string, out Newtonsoft.Json.Linq.JToken)", file="DeserializeWithDependencyInjection.cs"];
m3_154 [label="Entry Newtonsoft.Json.Linq.JObject.GetValue(string)", span="490-490", cluster="Newtonsoft.Json.Linq.JObject.GetValue(string)", file="DeserializeWithDependencyInjection.cs"];
m3_155 [label="return GetValue(propertyName, StringComparison.Ordinal);", span="492-492", cluster="Newtonsoft.Json.Linq.JObject.GetValue(string)", file="DeserializeWithDependencyInjection.cs"];
m3_156 [label="Exit Newtonsoft.Json.Linq.JObject.GetValue(string)", span="490-490", cluster="Newtonsoft.Json.Linq.JObject.GetValue(string)", file="DeserializeWithDependencyInjection.cs"];
m3_116 [label="Entry Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string)", span="117-117", cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string)", file="DeserializeWithDependencyInjection.cs"];
m3_96 [label="Entry lambda expression", span="281-281", cluster="lambda expression", file="DeserializeWithDependencyInjection.cs"];
m3_97 [label="p.Value", span="281-281", cluster="lambda expression", file="DeserializeWithDependencyInjection.cs"];
m3_98 [label="Exit lambda expression", span="281-281", cluster="lambda expression", file="DeserializeWithDependencyInjection.cs"];
m3_12 [label=t, span="117-117", cluster="Newtonsoft.Json.Linq.JObject.DeepEquals(Newtonsoft.Json.Linq.JToken)", color=green, community=0, file="DeserializeWithDependencyInjection.cs"];
m3_11 [label="!(node is JObject ", span="117-117", cluster="Newtonsoft.Json.Linq.JObject.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="DeserializeWithDependencyInjection.cs"];
m3_13 [label="return false;", span="119-119", cluster="Newtonsoft.Json.Linq.JObject.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="DeserializeWithDependencyInjection.cs"];
m3_36 [label="Entry Unk.Register", span="", cluster="Unk.Register", file="DeserializeWithDependencyInjection.cs"];
m3_37 [label="Entry Unk.Build", span="", cluster="Unk.Build", file="DeserializeWithDependencyInjection.cs"];
m3_10 [label="Entry Unk.IsRegistered", span="", cluster="Unk.IsRegistered", file="DeserializeWithDependencyInjection.cs"];
m3_14 [label="Entry Unk.Resolve", span="", cluster="Unk.Resolve", file="DeserializeWithDependencyInjection.cs"];
m3_151 [label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="421-421", cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="DeserializeWithDependencyInjection.cs"];
m3_131 [label="Entry System.IO.StringReader.StringReader(string)", span="0-0", cluster="System.IO.StringReader.StringReader(string)", file="DeserializeWithDependencyInjection.cs"];
m3_176 [label="Entry JProperty.cstr", span="", cluster="JProperty.cstr", file="DeserializeWithDependencyInjection.cs"];
m3_238 [label="Entry Newtonsoft.Json.Linq.JObject.GetDeepHashCode()", span="675-675", cluster="Newtonsoft.Json.Linq.JObject.GetDeepHashCode()", file="DeserializeWithDependencyInjection.cs"];
m3_239 [label="return ContentsHashCode();", span="677-677", cluster="Newtonsoft.Json.Linq.JObject.GetDeepHashCode()", file="DeserializeWithDependencyInjection.cs"];
m3_240 [label="Exit Newtonsoft.Json.Linq.JObject.GetDeepHashCode()", span="675-675", cluster="Newtonsoft.Json.Linq.JObject.GetDeepHashCode()", file="DeserializeWithDependencyInjection.cs"];
m3_62 [label="Entry Newtonsoft.Json.Linq.JObject.Property(string)", span="264-264", cluster="Newtonsoft.Json.Linq.JObject.Property(string)", file="DeserializeWithDependencyInjection.cs"];
m3_86 [label="name == null", span="266-266", cluster="Newtonsoft.Json.Linq.JObject.Property(string)", file="DeserializeWithDependencyInjection.cs"];
m3_88 [label="_properties.TryGetValue(name, out JToken property)", span="271-271", cluster="Newtonsoft.Json.Linq.JObject.Property(string)", file="DeserializeWithDependencyInjection.cs"];
m3_87 [label="return null;", span="268-268", cluster="Newtonsoft.Json.Linq.JObject.Property(string)", file="DeserializeWithDependencyInjection.cs"];
m3_89 [label="return (JProperty)property;", span="272-272", cluster="Newtonsoft.Json.Linq.JObject.Property(string)", file="DeserializeWithDependencyInjection.cs"];
m3_90 [label="Exit Newtonsoft.Json.Linq.JObject.Property(string)", span="264-264", cluster="Newtonsoft.Json.Linq.JObject.Property(string)", file="DeserializeWithDependencyInjection.cs"];
m3_242 [label="Entry Newtonsoft.Json.Linq.JObject.GetEnumerator()", span="686-686", cluster="Newtonsoft.Json.Linq.JObject.GetEnumerator()", file="DeserializeWithDependencyInjection.cs"];
m3_243 [label=_properties, span="688-688", cluster="Newtonsoft.Json.Linq.JObject.GetEnumerator()", file="DeserializeWithDependencyInjection.cs"];
m3_244 [label="yield return new KeyValuePair<string, JToken>(property.Name, property.Value);", span="690-690", cluster="Newtonsoft.Json.Linq.JObject.GetEnumerator()", file="DeserializeWithDependencyInjection.cs"];
m3_245 [label="Exit Newtonsoft.Json.Linq.JObject.GetEnumerator()", span="686-686", cluster="Newtonsoft.Json.Linq.JObject.GetEnumerator()", file="DeserializeWithDependencyInjection.cs"];
m3_153 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="429-429", cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="DeserializeWithDependencyInjection.cs"];
m3_246 [label="Entry Newtonsoft.Json.Linq.JObject.OnPropertyChanged(string)", span="698-698", cluster="Newtonsoft.Json.Linq.JObject.OnPropertyChanged(string)", file="DeserializeWithDependencyInjection.cs"];
m3_247 [label="PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName))", span="700-700", cluster="Newtonsoft.Json.Linq.JObject.OnPropertyChanged(string)", file="DeserializeWithDependencyInjection.cs"];
m3_248 [label="Exit Newtonsoft.Json.Linq.JObject.OnPropertyChanged(string)", span="698-698", cluster="Newtonsoft.Json.Linq.JObject.OnPropertyChanged(string)", file="DeserializeWithDependencyInjection.cs"];
m3_200 [label="Entry Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Add(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>)", span="613-613", cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Add(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>)", file="DeserializeWithDependencyInjection.cs"];
m3_201 [label="Add(new JProperty(item.Key, item.Value))", span="615-615", cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Add(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>)", file="DeserializeWithDependencyInjection.cs"];
m3_202 [label="Exit Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Add(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>)", span="613-613", cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Add(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>)", file="DeserializeWithDependencyInjection.cs"];
m3_152 [label="Entry Newtonsoft.Json.Linq.JToken.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", span="411-411", cluster="Newtonsoft.Json.Linq.JToken.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="DeserializeWithDependencyInjection.cs"];
m3_76 [label="Entry Unk.OnPropertyChanged", span="", cluster="Unk.OnPropertyChanged", file="DeserializeWithDependencyInjection.cs"];
m3_73 [label="Entry Newtonsoft.Json.Linq.JObject.InternalPropertyChanged(Newtonsoft.Json.Linq.JProperty)", span="215-215", cluster="Newtonsoft.Json.Linq.JObject.InternalPropertyChanged(Newtonsoft.Json.Linq.JProperty)", file="DeserializeWithDependencyInjection.cs"];
m3_74 [label="OnPropertyChanged(childProperty.Name)", span="217-217", cluster="Newtonsoft.Json.Linq.JObject.InternalPropertyChanged(Newtonsoft.Json.Linq.JProperty)", file="DeserializeWithDependencyInjection.cs"];
m3_75 [label="Exit Newtonsoft.Json.Linq.JObject.InternalPropertyChanged(Newtonsoft.Json.Linq.JProperty)", span="215-215", cluster="Newtonsoft.Json.Linq.JObject.InternalPropertyChanged(Newtonsoft.Json.Linq.JProperty)", file="DeserializeWithDependencyInjection.cs"];
m3_143 [label="Entry Newtonsoft.Json.Linq.JObject.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", span="473-473", cluster="Newtonsoft.Json.Linq.JObject.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="DeserializeWithDependencyInjection.cs"];
m3_144 [label="writer.WriteStartObject()", span="475-475", cluster="Newtonsoft.Json.Linq.JObject.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="DeserializeWithDependencyInjection.cs"];
m3_147 [label="_properties[i].WriteTo(writer, converters)", span="479-479", cluster="Newtonsoft.Json.Linq.JObject.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="DeserializeWithDependencyInjection.cs"];
m3_149 [label="writer.WriteEndObject()", span="482-482", cluster="Newtonsoft.Json.Linq.JObject.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="DeserializeWithDependencyInjection.cs"];
m3_145 [label="int i = 0", span="477-477", cluster="Newtonsoft.Json.Linq.JObject.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="DeserializeWithDependencyInjection.cs"];
m3_146 [label="i < _properties.Count", span="477-477", cluster="Newtonsoft.Json.Linq.JObject.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="DeserializeWithDependencyInjection.cs"];
m3_148 [label="i++", span="477-477", cluster="Newtonsoft.Json.Linq.JObject.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="DeserializeWithDependencyInjection.cs"];
m3_150 [label="Exit Newtonsoft.Json.Linq.JObject.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", span="473-473", cluster="Newtonsoft.Json.Linq.JObject.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="DeserializeWithDependencyInjection.cs"];
m3_230 [label="Entry Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Remove(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>)", span="663-663", cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Remove(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>)", file="DeserializeWithDependencyInjection.cs"];
m3_231 [label="!((ICollection<KeyValuePair<string, JToken>>)this).Contains(item)", span="665-665", cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Remove(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>)", file="DeserializeWithDependencyInjection.cs"];
m3_233 [label="((IDictionary<string, JToken>)this).Remove(item.Key)", span="670-670", cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Remove(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>)", file="DeserializeWithDependencyInjection.cs"];
m3_232 [label="return false;", span="667-667", cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Remove(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>)", file="DeserializeWithDependencyInjection.cs"];
m3_234 [label="return true;", span="671-671", cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Remove(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>)", file="DeserializeWithDependencyInjection.cs"];
m3_235 [label="Exit Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Remove(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>)", span="663-663", cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Remove(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>)", file="DeserializeWithDependencyInjection.cs"];
m3_91 [label="Entry Newtonsoft.Json.Linq.JObject.PropertyValues()", span="279-279", cluster="Newtonsoft.Json.Linq.JObject.PropertyValues()", file="DeserializeWithDependencyInjection.cs"];
m3_92 [label="return new JEnumerable<JToken>(Properties().Select(p => p.Value));", span="281-281", cluster="Newtonsoft.Json.Linq.JObject.PropertyValues()", file="DeserializeWithDependencyInjection.cs"];
m3_93 [label="Exit Newtonsoft.Json.Linq.JObject.PropertyValues()", span="279-279", cluster="Newtonsoft.Json.Linq.JObject.PropertyValues()", file="DeserializeWithDependencyInjection.cs"];
m3_250 [label="Entry System.ComponentModel.PropertyChangedEventHandler.Invoke(object, System.ComponentModel.PropertyChangedEventArgs)", span="0-0", cluster="System.ComponentModel.PropertyChangedEventHandler.Invoke(object, System.ComponentModel.PropertyChangedEventArgs)", file="DeserializeWithDependencyInjection.cs"];
m3_251 [label="Newtonsoft.Json.Linq.JObject", span="", file="DeserializeWithDependencyInjection.cs"];
m4_8 [label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="82-82", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonSerializerInternalReader.cs"];
m4_9 [label="Entry System.IO.StringReader.StringReader(string)", span="0-0", cluster="System.IO.StringReader.StringReader(string)", file="JsonSerializerInternalReader.cs"];
m4_0 [label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Json.ReadJsonWithJsonTextReader.Example()", span="44-44", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.ReadJsonWithJsonTextReader.Example()", file="JsonSerializerInternalReader.cs"];
m4_1 [label="string json = @''{\r\n               'CPU': 'Intel',\r\n               'PSU': '500W',\r\n               'Drives': [\r\n                 'DVD read/writer'\r\n                 /*(broken)*/,\r\n                 '500 gigabyte hard drive',\r\n                 '200 gigabyte hard drive'\r\n               ]\r\n            }''", span="47-56", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.ReadJsonWithJsonTextReader.Example()", file="JsonSerializerInternalReader.cs"];
m4_2 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="58-58", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.ReadJsonWithJsonTextReader.Example()", file="JsonSerializerInternalReader.cs"];
m4_3 [label="reader.Read()", span="59-59", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.ReadJsonWithJsonTextReader.Example()", file="JsonSerializerInternalReader.cs"];
m4_4 [label="reader.Value != null", span="61-61", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.ReadJsonWithJsonTextReader.Example()", file="JsonSerializerInternalReader.cs"];
m4_5 [label="Console.WriteLine(''Token: {0}, Value: {1}'', reader.TokenType, reader.Value)", span="63-63", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.ReadJsonWithJsonTextReader.Example()", file="JsonSerializerInternalReader.cs"];
m4_6 [label="Console.WriteLine(''Token: {0}'', reader.TokenType)", span="67-67", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.ReadJsonWithJsonTextReader.Example()", file="JsonSerializerInternalReader.cs"];
m4_7 [label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Json.ReadJsonWithJsonTextReader.Example()", span="44-44", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.ReadJsonWithJsonTextReader.Example()", file="JsonSerializerInternalReader.cs"];
m4_12 [label="Entry System.Console.WriteLine(string, object)", span="0-0", cluster="System.Console.WriteLine(string, object)", file="JsonSerializerInternalReader.cs"];
m4_11 [label="Entry System.Console.WriteLine(string, object, object)", span="0-0", cluster="System.Console.WriteLine(string, object, object)", file="JsonSerializerInternalReader.cs"];
m4_10 [label="Entry Newtonsoft.Json.JsonTextReader.Read()", span="400-400", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonSerializerInternalReader.cs"];
m5_33 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="JsonSerializerInternalWriter.cs"];
m5_30 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="429-429", cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="JsonSerializerInternalWriter.cs"];
m5_25 [label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="471-471", cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", file="JsonSerializerInternalWriter.cs"];
m5_23 [label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="149-149", cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JsonSerializerInternalWriter.cs"];
m5_31 [label="Entry System.Text.StringBuilder.ToString()", span="0-0", cluster="System.Text.StringBuilder.ToString()", file="JsonSerializerInternalWriter.cs"];
m5_0 [label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Json.WriteJsonWithJsonTextWriter.Example()", span="44-44", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.WriteJsonWithJsonTextWriter.Example()", file="JsonSerializerInternalWriter.cs"];
m5_1 [label="StringBuilder sb = new StringBuilder()", span="47-47", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.WriteJsonWithJsonTextWriter.Example()", file="JsonSerializerInternalWriter.cs"];
m5_2 [label="StringWriter sw = new StringWriter(sb)", span="48-48", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.WriteJsonWithJsonTextWriter.Example()", file="JsonSerializerInternalWriter.cs"];
m5_18 [label="Console.WriteLine(sb.ToString())", span="69-69", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.WriteJsonWithJsonTextWriter.Example()", file="JsonSerializerInternalWriter.cs"];
m5_19 [label="Assert.AreEqual(@''{\r\n  ''''CPU'''': ''''Intel'''',\r\n  ''''PSU'''': ''''500W'''',\r\n  ''''Drives'''': [\r\n    ''''DVD read/writer''''\r\n    /*(broken)*/,\r\n    ''''500 gigabyte hard drive'''',\r\n    ''''200 gigabype hard drive''''\r\n  ]\r\n}'', sb.ToString())", span="82-91", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.WriteJsonWithJsonTextWriter.Example()", file="JsonSerializerInternalWriter.cs"];
m5_3 [label="JsonWriter writer = new JsonTextWriter(sw)", span="50-50", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.WriteJsonWithJsonTextWriter.Example()", file="JsonSerializerInternalWriter.cs"];
m5_4 [label="writer.Formatting = Formatting.Indented", span="52-52", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.WriteJsonWithJsonTextWriter.Example()", file="JsonSerializerInternalWriter.cs"];
m5_5 [label="writer.WriteStartObject()", span="54-54", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.WriteJsonWithJsonTextWriter.Example()", file="JsonSerializerInternalWriter.cs"];
m5_6 [label="writer.WritePropertyName(''CPU'')", span="55-55", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.WriteJsonWithJsonTextWriter.Example()", file="JsonSerializerInternalWriter.cs"];
m5_7 [label="writer.WriteValue(''Intel'')", span="56-56", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.WriteJsonWithJsonTextWriter.Example()", file="JsonSerializerInternalWriter.cs"];
m5_8 [label="writer.WritePropertyName(''PSU'')", span="57-57", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.WriteJsonWithJsonTextWriter.Example()", file="JsonSerializerInternalWriter.cs"];
m5_9 [label="writer.WriteValue(''500W'')", span="58-58", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.WriteJsonWithJsonTextWriter.Example()", file="JsonSerializerInternalWriter.cs"];
m5_10 [label="writer.WritePropertyName(''Drives'')", span="59-59", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.WriteJsonWithJsonTextWriter.Example()", file="JsonSerializerInternalWriter.cs"];
m5_11 [label="writer.WriteStartArray()", span="60-60", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.WriteJsonWithJsonTextWriter.Example()", file="JsonSerializerInternalWriter.cs"];
m5_12 [label="writer.WriteValue(''DVD read/writer'')", span="61-61", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.WriteJsonWithJsonTextWriter.Example()", file="JsonSerializerInternalWriter.cs"];
m5_13 [label="writer.WriteComment(''(broken)'')", span="62-62", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.WriteJsonWithJsonTextWriter.Example()", file="JsonSerializerInternalWriter.cs"];
m5_14 [label="writer.WriteValue(''500 gigabyte hard drive'')", span="63-63", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.WriteJsonWithJsonTextWriter.Example()", file="JsonSerializerInternalWriter.cs"];
m5_15 [label="writer.WriteValue(''200 gigabype hard drive'')", span="64-64", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.WriteJsonWithJsonTextWriter.Example()", file="JsonSerializerInternalWriter.cs"];
m5_16 [label="writer.WriteEnd()", span="65-65", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.WriteJsonWithJsonTextWriter.Example()", file="JsonSerializerInternalWriter.cs"];
m5_17 [label="writer.WriteEndObject()", span="66-66", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.WriteJsonWithJsonTextWriter.Example()", file="JsonSerializerInternalWriter.cs"];
m5_20 [label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Json.WriteJsonWithJsonTextWriter.Example()", span="44-44", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.WriteJsonWithJsonTextWriter.Example()", file="JsonSerializerInternalWriter.cs"];
m5_21 [label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0", cluster="System.Text.StringBuilder.StringBuilder()", file="JsonSerializerInternalWriter.cs"];
m5_29 [label="Entry Newtonsoft.Json.JsonWriter.WriteEnd()", span="489-489", cluster="Newtonsoft.Json.JsonWriter.WriteEnd()", file="JsonSerializerInternalWriter.cs"];
m5_22 [label="Entry System.IO.StringWriter.StringWriter(System.Text.StringBuilder)", span="0-0", cluster="System.IO.StringWriter.StringWriter(System.Text.StringBuilder)", file="JsonSerializerInternalWriter.cs"];
m5_28 [label="Entry Newtonsoft.Json.JsonWriter.WriteComment(string)", span="1453-1453", cluster="Newtonsoft.Json.JsonWriter.WriteComment(string)", file="JsonSerializerInternalWriter.cs"];
m5_32 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="JsonSerializerInternalWriter.cs"];
m5_26 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="948-948", cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="JsonSerializerInternalWriter.cs"];
m5_24 [label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="421-421", cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="JsonSerializerInternalWriter.cs"];
m5_27 [label="Entry Newtonsoft.Json.JsonWriter.WriteStartArray()", span="437-437", cluster="Newtonsoft.Json.JsonWriter.WriteStartArray()", file="JsonSerializerInternalWriter.cs"];
m6_362 [label="Entry Newtonsoft.Json.JsonReader.ReadDateTimeOffsetString(string)", span="864-864", cluster="Newtonsoft.Json.JsonReader.ReadDateTimeOffsetString(string)", file="JsonTextReader.cs"];
m6_669 [label="Entry Newtonsoft.Json.Utilities.StringReference.StringReference(char[], int, int)", span="55-55", cluster="Newtonsoft.Json.Utilities.StringReference.StringReference(char[], int, int)", file="JsonTextReader.cs"];
m6_1115 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", span="840-840", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", file="JsonTextReader.cs"];
m6_1276 [label="Entry Newtonsoft.Json.JsonTextReader.HasLineInfo()", span="2427-2427", cluster="Newtonsoft.Json.JsonTextReader.HasLineInfo()", file="JsonTextReader.cs"];
m6_1277 [label="return true;", span="2429-2429", cluster="Newtonsoft.Json.JsonTextReader.HasLineInfo()", file="JsonTextReader.cs"];
m6_1278 [label="Exit Newtonsoft.Json.JsonTextReader.HasLineInfo()", span="2427-2427", cluster="Newtonsoft.Json.JsonTextReader.HasLineInfo()", file="JsonTextReader.cs"];
m6_367 [label="Entry Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", span="956-956", cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", file="JsonTextReader.cs"];
m6_138 [label="Entry Newtonsoft.Json.JsonTextReader.Read()", span="366-366", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs"];
m6_139 [label="EnsureBuffer()", span="368-368", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs"];
m6_141 [label=_currentState, span="372-372", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs"];
m6_148 [label="return ParseValue();", span="380-380", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs"];
m6_151 [label="return ParseObject();", span="383-383", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs"];
m6_153 [label="ParsePostValue()", span="387-387", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs"];
m6_156 [label="EnsureChars(0, false)", span="393-393", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs"];
m6_157 [label="EatWhitespace(false)", span="395-395", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs"];
m6_158 [label=_isEndOfFile, span="396-396", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs"];
m6_159 [label="SetToken(JsonToken.None)", span="398-398", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs"];
m6_161 [label="_chars[_charPos] == '/'", span="401-401", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs"];
m6_162 [label="ParseComment(true)", span="403-403", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs"];
m6_164 [label="throw JsonReaderException.Create(this, ''Additional text encountered after finished reading JSON content: {0}.''.FormatWith(CultureInfo.InvariantCulture, _chars[_charPos]));", span="407-407", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs"];
m6_165 [label="SetToken(JsonToken.None)", span="409-409", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs"];
m6_167 [label="throw JsonReaderException.Create(this, ''Unexpected state: {0}.''.FormatWith(CultureInfo.InvariantCulture, CurrentState));", span="412-412", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs"];
m6_140 [label=true, span="370-370", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs"];
m6_142 [label="State.Start", span="374-374", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs"];
m6_149 [label="State.Object", span="381-381", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs"];
m6_152 [label="State.PostValue", span="384-384", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs"];
m6_155 [label="State.Finished", span="392-392", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs"];
m6_147 [label="State.ConstructorStart", span="379-379", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs"];
m6_150 [label="State.ObjectStart", span="382-382", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs"];
m6_154 [label="return true;", span="389-389", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs"];
m6_160 [label="return false;", span="399-399", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs"];
m6_163 [label="return true;", span="404-404", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs"];
m6_166 [label="return false;", span="410-410", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs"];
m6_143 [label="State.Property", span="375-375", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs"];
m6_146 [label="State.Constructor", span="378-378", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs"];
m6_144 [label="State.Array", span="376-376", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs"];
m6_145 [label="State.ArrayStart", span="377-377", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs"];
m6_168 [label="Exit Newtonsoft.Json.JsonTextReader.Read()", span="366-366", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs"];
m6_932 [label="Entry Newtonsoft.Json.JsonTextReader.ParseConstructor()", span="1730-1730", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m6_963 [label="MatchValueWithTrailingSeparator(''new'')", span="1732-1732", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m6_964 [label="EatWhitespace(false)", span="1734-1734", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m6_965 [label="int initialPosition = _charPos", span="1736-1736", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m6_968 [label="char currentChar = _chars[_charPos]", span="1741-1741", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m6_970 [label="_charsUsed == _charPos", span="1744-1744", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m6_971 [label="ReadData(true) == 0", span="1746-1746", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m6_972 [label="throw JsonReaderException.Create(this, ''Unexpected end while parsing constructor.'');", span="1748-1748", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m6_973 [label="endPosition = _charPos", span="1753-1753", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m6_974 [label="_charPos++", span="1754-1754", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m6_976 [label="_charPos++", span="1760-1760", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m6_978 [label="endPosition = _charPos", span="1764-1764", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m6_979 [label="ProcessCarriageReturn(true)", span="1765-1765", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m6_981 [label="endPosition = _charPos", span="1770-1770", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m6_982 [label="ProcessLineFeed()", span="1771-1771", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m6_984 [label="endPosition = _charPos", span="1776-1776", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m6_985 [label="_charPos++", span="1777-1777", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m6_987 [label="endPosition = _charPos", span="1782-1782", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m6_988 [label="throw JsonReaderException.Create(this, ''Unexpected character while parsing constructor: {0}.''.FormatWith(CultureInfo.InvariantCulture, currentChar));", span="1787-1787", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m6_989 [label="_stringReference = new StringReference(_chars, initialPosition, endPosition - initialPosition)", span="1791-1791", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m6_990 [label="string constructorName = _stringReference.ToString()", span="1792-1792", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m6_991 [label="EatWhitespace(false)", span="1794-1794", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m6_992 [label="_chars[_charPos] != '('", span="1796-1796", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m6_993 [label="throw JsonReaderException.Create(this, ''Unexpected character while parsing constructor: {0}.''.FormatWith(CultureInfo.InvariantCulture, _chars[_charPos]));", span="1798-1798", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m6_994 [label="_charPos++", span="1801-1801", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m6_995 [label="ClearRecentString()", span="1803-1803", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m6_996 [label="SetToken(JsonToken.StartConstructor, constructorName)", span="1805-1805", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m6_997 [label="throw JsonReaderException.Create(this, ''Unexpected content while parsing JSON.'');", span="1809-1809", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m6_966 [label="int endPosition", span="1737-1737", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m6_967 [label=true, span="1739-1739", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m6_969 [label="currentChar == '\0'", span="1742-1742", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m6_975 [label="char.IsLetterOrDigit(currentChar)", span="1758-1758", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m6_977 [label="currentChar == StringUtils.CarriageReturn", span="1762-1762", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m6_980 [label="currentChar == StringUtils.LineFeed", span="1768-1768", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m6_983 [label="char.IsWhiteSpace(currentChar)", span="1774-1774", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m6_986 [label="currentChar == '('", span="1780-1780", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m6_998 [label="Exit Newtonsoft.Json.JsonTextReader.ParseConstructor()", span="1730-1730", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m6_557 [label="Entry Newtonsoft.Json.JsonReader.CreateUnexpectedEndException()", span="898-898", cluster="Newtonsoft.Json.JsonReader.CreateUnexpectedEndException()", file="JsonTextReader.cs"];
m6_556 [label="Entry Newtonsoft.Json.JsonTextReader.ParseNull()", span="2285-2285", cluster="Newtonsoft.Json.JsonTextReader.ParseNull()", file="JsonTextReader.cs"];
m6_1213 [label="MatchValueWithTrailingSeparator(JsonConvert.Null)", span="2287-2287", cluster="Newtonsoft.Json.JsonTextReader.ParseNull()", file="JsonTextReader.cs"];
m6_1214 [label="SetToken(JsonToken.Null)", span="2289-2289", cluster="Newtonsoft.Json.JsonTextReader.ParseNull()", file="JsonTextReader.cs"];
m6_1215 [label="throw JsonReaderException.Create(this, ''Error parsing null value.'');", span="2293-2293", cluster="Newtonsoft.Json.JsonTextReader.ParseNull()", file="JsonTextReader.cs"];
m6_1216 [label="Exit Newtonsoft.Json.JsonTextReader.ParseNull()", span="2285-2285", cluster="Newtonsoft.Json.JsonTextReader.ParseNull()", file="JsonTextReader.cs"];
m6_1114 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.DoubleTryParse(char[], int, int, out double)", span="972-972", cluster="Newtonsoft.Json.Utilities.ConvertUtils.DoubleTryParse(char[], int, int, out double)", file="JsonTextReader.cs"];
m6_1273 [label="Entry Newtonsoft.Json.JsonReader.Close()", span="1129-1129", cluster="Newtonsoft.Json.JsonReader.Close()", file="JsonTextReader.cs"];
m6_667 [label="Entry Newtonsoft.Json.Utilities.StringUtils.IsHighSurrogate(char)", span="260-260", cluster="Newtonsoft.Json.Utilities.StringUtils.IsHighSurrogate(char)", file="JsonTextReader.cs"];
m6_263 [label="Entry char.IsWhiteSpace(char)", span="0-0", cluster="char.IsWhiteSpace(char)", file="JsonTextReader.cs"];
m6_1110 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", span="746-746", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", file="JsonTextReader.cs"];
m6_1105 [label="Entry string.StartsWith(string, System.StringComparison)", span="0-0", cluster="string.StartsWith(string, System.StringComparison)", file="JsonTextReader.cs"];
m6_830 [label="Entry Newtonsoft.Json.Utilities.PropertyNameTable.Get(char[], int, int)", span="48-48", cluster="Newtonsoft.Json.Utilities.PropertyNameTable.Get(char[], int, int)", file="JsonTextReader.cs"];
m6_83 [label="Entry Newtonsoft.Json.JsonTextReader.ReadData(bool)", span="240-240", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool)", file="JsonTextReader.cs"];
m6_84 [label="return ReadData(append, 0);", span="242-242", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool)", file="JsonTextReader.cs"];
m6_85 [label="Exit Newtonsoft.Json.JsonTextReader.ReadData(bool)", span="240-240", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool)", file="JsonTextReader.cs"];
m6_364 [label="Entry Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity(Newtonsoft.Json.ReadType)", span="2321-2321", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1225 [label="MatchValueWithTrailingSeparator(JsonConvert.NegativeInfinity)", span="2323-2323", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1229 [label="_floatParseHandling == FloatParseHandling.Double", span="2329-2329", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1230 [label="SetToken(JsonToken.Float, double.NegativeInfinity)", span="2331-2331", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1233 [label="SetToken(JsonToken.String, JsonConvert.NegativeInfinity)", span="2336-2336", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1235 [label="throw JsonReaderException.Create(this, ''Cannot read -Infinity value.'');", span="2340-2340", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1236 [label="throw JsonReaderException.Create(this, ''Error parsing -Infinity value.'');", span="2343-2343", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1226 [label=readType, span="2325-2325", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1228 [label="ReadType.ReadAsDouble", span="2328-2328", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1231 [label="return double.NegativeInfinity;", span="2332-2332", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1232 [label="ReadType.ReadAsString", span="2335-2335", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1234 [label="return JsonConvert.NegativeInfinity;", span="2337-2337", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1227 [label="ReadType.Read", span="2327-2327", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1237 [label="Exit Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity(Newtonsoft.Json.ReadType)", span="2321-2321", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_186 [label="Entry Newtonsoft.Json.JsonTextReader.ReadAsString()", span="439-439", cluster="Newtonsoft.Json.JsonTextReader.ReadAsString()", file="JsonTextReader.cs"];
m6_187 [label="return (string)ReadStringValue(ReadType.ReadAsString);", span="441-441", cluster="Newtonsoft.Json.JsonTextReader.ReadAsString()", file="JsonTextReader.cs"];
m6_188 [label="Exit Newtonsoft.Json.JsonTextReader.ReadAsString()", span="439-439", cluster="Newtonsoft.Json.JsonTextReader.ReadAsString()", file="JsonTextReader.cs"];
m6_1119 [label="Entry Unk.Parse", span="", cluster="Unk.Parse", file="JsonTextReader.cs"];
m6_17 [label="Entry Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", span="127-127", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_18 [label="_charPos++", span="129-129", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_19 [label="ShiftBufferIfNeeded()", span="131-131", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_20 [label="ReadStringIntoBuffer(quote)", span="132-132", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_21 [label="SetPostValueState(true)", span="133-133", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_26 [label="_stringReference.Length == 0", span="140-140", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_28 [label="_stringReference.Length == 36 && ConvertUtils.TryConvertGuid(_stringReference.ToString(), out g)", span="144-144", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_30 [label="data = Convert.FromBase64CharArray(_stringReference.Chars, _stringReference.StartIndex, _stringReference.Length)", span="150-150", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_31 [label="SetToken(JsonToken.Bytes, data, false)", span="153-153", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_33 [label="string text = _stringReference.ToString()", span="156-156", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_34 [label="SetToken(JsonToken.String, text, false)", span="158-158", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_35 [label="_quoteChar = quote", span="159-159", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_39 [label="_dateParseHandling != DateParseHandling.None", span="167-167", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_45 [label="dateParseHandling = _dateParseHandling", span="182-182", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_48 [label="DateTimeUtils.TryParseDateTime(_stringReference, DateTimeZoneHandling, DateFormatString, Culture, out dt)", span="188-188", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_49 [label="SetToken(JsonToken.Date, dt, false)", span="190-190", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_52 [label="DateTimeUtils.TryParseDateTimeOffset(_stringReference, DateFormatString, Culture, out dt)", span="198-198", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_53 [label="SetToken(JsonToken.Date, dt, false)", span="200-200", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_55 [label="SetToken(JsonToken.String, _stringReference.ToString(), false)", span="207-207", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_56 [label="_quoteChar = quote", span="208-208", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_22 [label=readType, span="135-135", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_25 [label="byte[] data", span="139-139", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_27 [label="data = new byte[0]", span="142-142", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_29 [label="data = g.ToByteArray()", span="146-146", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_32 [label="ReadType.ReadAsString", span="155-155", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_40 [label="DateParseHandling dateParseHandling", span="169-169", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_43 [label="readType == ReadType.ReadAsDateTimeOffset", span="175-175", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_46 [label="dateParseHandling == DateParseHandling.DateTime", span="185-185", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_47 [label="DateTime dt", span="187-187", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_50 [label="return;", span="191-191", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_51 [label="DateTimeOffset dt", span="197-197", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_54 [label="return;", span="201-201", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_41 [label="readType == ReadType.ReadAsDateTime", span="170-170", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_23 [label="ReadType.ReadAsBytes", span="137-137", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_36 [label="ReadType.ReadAsInt32", span="161-161", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_24 [label="Guid g", span="138-138", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_38 [label="ReadType.ReadAsBoolean", span="163-163", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_44 [label="dateParseHandling = DateParseHandling.DateTimeOffset", span="177-177", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_42 [label="dateParseHandling = DateParseHandling.DateTime", span="172-172", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_37 [label="ReadType.ReadAsDecimal", span="162-162", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_57 [label="Exit Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", span="127-127", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_181 [label="Entry Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", span="830-830", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_457 [label="EnsureBuffer()", span="832-832", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_458 [label=_currentState, span="834-834", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_467 [label="char currentChar = _chars[_charPos]", span="845-845", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_470 [label="ReadNullChar()", span="850-850", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_471 [label="SetToken(JsonToken.None, null, false)", span="852-852", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_475 [label="ParseString(currentChar, readType)", span="858-858", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_478 [label="return ReadInt32String(_stringReference.ToString());", span="862-862", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_480 [label="return ReadDecimalString(_stringReference.ToString());", span="864-864", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_482 [label="return ReadDoubleString(_stringReference.ToString());", span="866-866", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_485 [label="HandleNull()", span="871-871", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_488 [label="return ParseNumberNaN(readType);", span="874-874", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_490 [label="return ParseNumberPositiveInfinity(readType);", span="876-876", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_492 [label="EnsureChars(1, true) && _chars[_charPos + 1] == 'I'", span="878-878", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_493 [label="return ParseNumberNegativeInfinity(readType);", span="880-880", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_494 [label="ParseNumber(readType)", span="884-884", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_495 [label="return Value;", span="885-885", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_507 [label="ParseNumber(readType)", span="898-898", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_508 [label="return Value;", span="899-899", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_510 [label="ParseComment(false)", span="901-901", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_512 [label="ProcessValueComma()", span="904-904", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_514 [label="_charPos++", span="907-907", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_515 [label="_currentState == State.Array || _currentState == State.ArrayStart || _currentState == State.PostValue", span="908-908", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_516 [label="SetToken(JsonToken.EndArray)", span="910-910", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_518 [label="throw CreateUnexpectedCharacterException(currentChar);", span="913-913", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_520 [label="ProcessCarriageReturn(false)", span="915-915", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_522 [label="ProcessLineFeed()", span="918-918", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_525 [label="_charPos++", span="923-923", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_526 [label="_charPos++", span="926-926", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_528 [label="throw CreateUnexpectedCharacterException(currentChar);", span="930-930", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_530 [label="ReadFinished()", span="938-938", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_532 [label="throw JsonReaderException.Create(this, ''Unexpected state: {0}.''.FormatWith(CultureInfo.InvariantCulture, CurrentState));", span="941-941", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_459 [label="State.Start", span="836-836", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_529 [label="State.Finished", span="937-937", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_466 [label=true, span="843-843", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_468 [label=currentChar, span="847-847", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_527 [label="!char.IsWhiteSpace(currentChar)", span="928-928", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_469 [label="'\0'", span="849-849", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_472 [label="return null;", span="853-853", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_474 [label="'\''", span="857-857", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_476 [label=readType, span="859-859", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_477 [label="ReadType.ReadAsInt32", span="861-861", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_479 [label="ReadType.ReadAsDecimal", span="863-863", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_481 [label="ReadType.ReadAsDouble", span="865-865", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_484 [label="'n'", span="870-870", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_486 [label="return null;", span="872-872", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_487 [label="'N'", span="873-873", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_489 [label="'I'", span="875-875", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_491 [label="'-'", span="877-877", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_506 [label="'9'", span="897-897", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_509 [label="'/'", span="900-900", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_511 [label="','", span="903-903", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_513 [label="']'", span="906-906", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_517 [label="return null;", span="911-911", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_519 [label="StringUtils.CarriageReturn", span="914-914", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_521 [label="StringUtils.LineFeed", span="917-917", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_524 [label="StringUtils.Tab", span="921-921", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_531 [label="return null;", span="939-939", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_483 [label="throw new ArgumentOutOfRangeException(nameof(readType));", span="868-868", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_460 [label="State.Property", span="837-837", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_465 [label="State.PostValue", span="842-842", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_473 [label="''''", span="856-856", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_496 [label="'.'", span="887-887", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_523 [label="' '", span="920-920", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_505 [label="'8'", span="896-896", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_461 [label="State.Array", span="838-838", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_464 [label="State.ConstructorStart", span="841-841", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_497 [label="'0'", span="888-888", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_504 [label="'7'", span="895-895", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_462 [label="State.ArrayStart", span="839-839", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_463 [label="State.Constructor", span="840-840", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_498 [label="'1'", span="889-889", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_503 [label="'6'", span="894-894", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_499 [label="'2'", span="890-890", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_502 [label="'5'", span="893-893", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_500 [label="'3'", span="891-891", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_501 [label="'4'", span="892-892", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_533 [label="Exit Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", span="830-830", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_684 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.HexTextToInt(char[], int, int)", span="1161-1161", cluster="Newtonsoft.Json.Utilities.ConvertUtils.HexTextToInt(char[], int, int)", file="JsonTextReader.cs"];
m6_829 [label="Entry Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", span="1498-1498", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs"];
m6_834 [label="int initialPosition = _charPos", span="1500-1500", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs"];
m6_836 [label="_chars[_charPos]", span="1505-1505", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs"];
m6_838 [label="_charsUsed == _charPos", span="1508-1508", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs"];
m6_839 [label="ReadData(true) == 0", span="1510-1510", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs"];
m6_840 [label="throw JsonReaderException.Create(this, ''Unexpected end while parsing unquoted property name.'');", span="1512-1512", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs"];
m6_841 [label="_stringReference = new StringReference(_chars, initialPosition, _charPos - initialPosition)", span="1518-1518", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs"];
m6_843 [label="char currentChar = _chars[_charPos]", span="1521-1521", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs"];
m6_844 [label="ValidIdentifierChar(currentChar)", span="1523-1523", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs"];
m6_845 [label="_charPos++", span="1525-1525", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs"];
m6_847 [label="_stringReference = new StringReference(_chars, initialPosition, _charPos - initialPosition)", span="1530-1530", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs"];
m6_849 [label="throw JsonReaderException.Create(this, ''Invalid JavaScript property identifier character: {0}.''.FormatWith(CultureInfo.InvariantCulture, currentChar));", span="1534-1534", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs"];
m6_835 [label=true, span="1503-1503", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs"];
m6_837 [label="'\0'", span="1507-1507", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs"];
m6_842 [label="return;", span="1519-1519", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs"];
m6_846 [label="char.IsWhiteSpace(currentChar) || currentChar == ':'", span="1528-1528", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs"];
m6_848 [label="return;", span="1531-1531", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs"];
m6_850 [label="Exit Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", span="1498-1498", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs"];
m6_1264 [label="Entry Newtonsoft.Json.JsonTextReader.Close()", span="2399-2399", cluster="Newtonsoft.Json.JsonTextReader.Close()", file="JsonTextReader.cs"];
m6_1265 [label="base.Close()", span="2401-2401", cluster="Newtonsoft.Json.JsonTextReader.Close()", file="JsonTextReader.cs"];
m6_1266 [label="_chars != null", span="2403-2403", cluster="Newtonsoft.Json.JsonTextReader.Close()", file="JsonTextReader.cs"];
m6_1267 [label="BufferUtils.ReturnBuffer(_arrayPool, _chars)", span="2405-2405", cluster="Newtonsoft.Json.JsonTextReader.Close()", file="JsonTextReader.cs"];
m6_1268 [label="_chars = null", span="2406-2406", cluster="Newtonsoft.Json.JsonTextReader.Close()", file="JsonTextReader.cs"];
m6_1269 [label="CloseInput && _reader != null", span="2409-2409", cluster="Newtonsoft.Json.JsonTextReader.Close()", file="JsonTextReader.cs"];
m6_1270 [label="_reader.Close()", span="2412-2412", cluster="Newtonsoft.Json.JsonTextReader.Close()", file="JsonTextReader.cs"];
m6_1271 [label="_stringBuffer.Clear(_arrayPool)", span="2418-2418", cluster="Newtonsoft.Json.JsonTextReader.Close()", file="JsonTextReader.cs"];
m6_1272 [label="Exit Newtonsoft.Json.JsonTextReader.Close()", span="2399-2399", cluster="Newtonsoft.Json.JsonTextReader.Close()", file="JsonTextReader.cs"];
m6_543 [label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDouble()", span="969-969", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDouble()", file="JsonTextReader.cs"];
m6_544 [label="return (double?)ReadNumberValue(ReadType.ReadAsDouble);", span="971-971", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDouble()", file="JsonTextReader.cs"];
m6_545 [label="Exit Newtonsoft.Json.JsonTextReader.ReadAsDouble()", span="969-969", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDouble()", file="JsonTextReader.cs"];
m6_800 [label="Entry Newtonsoft.Json.JsonTextReader.ParseProperty()", span="1437-1437", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs"];
m6_801 [label="char firstChar = _chars[_charPos]", span="1439-1439", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs"];
m6_804 [label="_charPos++", span="1444-1444", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs"];
m6_806 [label="ShiftBufferIfNeeded()", span="1446-1446", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs"];
m6_807 [label="ReadStringIntoBuffer(quoteChar)", span="1447-1447", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs"];
m6_808 [label="ValidIdentifierChar(firstChar)", span="1449-1449", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs"];
m6_810 [label="ShiftBufferIfNeeded()", span="1452-1452", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs"];
m6_811 [label="ParseUnquotedProperty()", span="1453-1453", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs"];
m6_812 [label="throw JsonReaderException.Create(this, ''Invalid property identifier character: {0}.''.FormatWith(CultureInfo.InvariantCulture, _chars[_charPos]));", span="1457-1457", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs"];
m6_814 [label="NameTable != null", span="1462-1462", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs"];
m6_815 [label="propertyName = NameTable.Get(_stringReference.Chars, _stringReference.StartIndex, _stringReference.Length)", span="1464-1464", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs"];
m6_817 [label="propertyName = _stringReference.ToString()", span="1469-1469", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs"];
m6_818 [label="propertyName = _stringReference.ToString()", span="1474-1474", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs"];
m6_819 [label="EatWhitespace(false)", span="1477-1477", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs"];
m6_820 [label="_chars[_charPos] != ':'", span="1479-1479", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs"];
m6_821 [label="throw JsonReaderException.Create(this, ''Invalid character after parsing property name. Expected ':' but got: {0}.''.FormatWith(CultureInfo.InvariantCulture, _chars[_charPos]));", span="1481-1481", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs"];
m6_822 [label="_charPos++", span="1484-1484", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs"];
m6_823 [label="SetToken(JsonToken.PropertyName, propertyName)", span="1486-1486", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs"];
m6_824 [label="_quoteChar = quoteChar", span="1487-1487", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs"];
m6_825 [label="ClearRecentString()", span="1488-1488", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs"];
m6_802 [label="char quoteChar", span="1440-1440", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs"];
m6_803 [label="firstChar == '''' || firstChar == '\''", span="1442-1442", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs"];
m6_805 [label="quoteChar = firstChar", span="1445-1445", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs"];
m6_813 [label="string propertyName", span="1460-1460", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs"];
m6_809 [label="quoteChar = '\0'", span="1451-1451", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs"];
m6_816 [label="propertyName == null", span="1467-1467", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs"];
m6_826 [label="return true;", span="1490-1490", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs"];
m6_827 [label="Exit Newtonsoft.Json.JsonTextReader.ParseProperty()", span="1437-1437", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs"];
m6_675 [label="Entry Newtonsoft.Json.Utilities.StringBuffer.Append(Newtonsoft.Json.IArrayPool<char>, char)", span="58-58", cluster="Newtonsoft.Json.Utilities.StringBuffer.Append(Newtonsoft.Json.IArrayPool<char>, char)", file="JsonTextReader.cs"];
m6_448 [label="Entry Newtonsoft.Json.JsonReader.ReadBooleanString(string)", span="708-708", cluster="Newtonsoft.Json.JsonReader.ReadBooleanString(string)", file="JsonTextReader.cs"];
m6_1112 [label="Entry decimal.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out decimal)", span="0-0", cluster="decimal.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out decimal)", file="JsonTextReader.cs"];
m6_189 [label="Entry Newtonsoft.Json.JsonTextReader.ReadAsBytes()", span="448-448", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m6_190 [label="EnsureBuffer()", span="450-450", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m6_192 [label=_currentState, span="453-453", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m6_201 [label="char currentChar = _chars[_charPos]", span="464-464", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m6_204 [label="ReadNullChar()", span="469-469", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m6_205 [label="SetToken(JsonToken.None, null, false)", span="471-471", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m6_209 [label="ParseString(currentChar, ReadType.ReadAsBytes)", span="477-477", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m6_210 [label="byte[] data = (byte[])Value", span="478-478", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m6_212 [label="ReaderReadAndAssert()", span="481-481", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m6_213 [label="TokenType != JsonToken.EndObject", span="482-482", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m6_214 [label="throw JsonReaderException.Create(this, ''Error reading bytes. Unexpected token: {0}.''.FormatWith(CultureInfo.InvariantCulture, TokenType));", span="484-484", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m6_215 [label="SetToken(JsonToken.Bytes, data, false)", span="486-486", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m6_218 [label="_charPos++", span="490-490", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m6_219 [label="SetToken(JsonToken.StartObject)", span="491-491", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m6_220 [label="ReadIntoWrappedTypeObject()", span="492-492", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m6_223 [label="_charPos++", span="496-496", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m6_224 [label="SetToken(JsonToken.StartArray)", span="497-497", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m6_225 [label="return ReadArrayIntoByteArray();", span="498-498", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m6_227 [label="HandleNull()", span="500-500", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m6_230 [label="ParseComment(false)", span="503-503", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m6_232 [label="ProcessValueComma()", span="506-506", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m6_234 [label="_charPos++", span="509-509", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m6_235 [label="_currentState == State.Array || _currentState == State.ArrayStart || _currentState == State.PostValue", span="510-510", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m6_236 [label="SetToken(JsonToken.EndArray)", span="512-512", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m6_238 [label="throw CreateUnexpectedCharacterException(currentChar);", span="515-515", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m6_240 [label="ProcessCarriageReturn(false)", span="517-517", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m6_242 [label="ProcessLineFeed()", span="520-520", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m6_245 [label="_charPos++", span="525-525", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m6_246 [label="_charPos++", span="528-528", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m6_248 [label="throw CreateUnexpectedCharacterException(currentChar);", span="532-532", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m6_250 [label="ReadFinished()", span="540-540", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m6_252 [label="throw JsonReaderException.Create(this, ''Unexpected state: {0}.''.FormatWith(CultureInfo.InvariantCulture, CurrentState));", span="543-543", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m6_191 [label="bool isWrapped = false", span="451-451", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m6_193 [label="State.Start", span="455-455", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m6_249 [label="State.Finished", span="539-539", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m6_200 [label=true, span="462-462", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m6_202 [label=currentChar, span="466-466", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m6_247 [label="!char.IsWhiteSpace(currentChar)", span="530-530", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m6_203 [label="'\0'", span="468-468", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m6_206 [label="return null;", span="472-472", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m6_208 [label="'\''", span="476-476", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m6_211 [label=isWrapped, span="479-479", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m6_216 [label="return data;", span="488-488", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m6_217 [label="'{'", span="489-489", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m6_221 [label="isWrapped = true", span="493-493", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m6_222 [label="'['", span="495-495", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m6_226 [label="'n'", span="499-499", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m6_228 [label="return null;", span="501-501", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m6_229 [label="'/'", span="502-502", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m6_231 [label="','", span="505-505", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m6_233 [label="']'", span="508-508", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m6_237 [label="return null;", span="513-513", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m6_239 [label="StringUtils.CarriageReturn", span="516-516", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m6_241 [label="StringUtils.LineFeed", span="519-519", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m6_244 [label="StringUtils.Tab", span="523-523", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m6_251 [label="return null;", span="541-541", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m6_194 [label="State.Property", span="456-456", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m6_199 [label="State.PostValue", span="461-461", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m6_207 [label="''''", span="475-475", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m6_243 [label="' '", span="522-522", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m6_195 [label="State.Array", span="457-457", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m6_198 [label="State.ConstructorStart", span="460-460", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m6_196 [label="State.ArrayStart", span="458-458", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m6_197 [label="State.Constructor", span="459-459", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m6_253 [label="Exit Newtonsoft.Json.JsonTextReader.ReadAsBytes()", span="448-448", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m6_118 [label="Entry Newtonsoft.Json.Utilities.BufferUtils.ReturnBuffer(Newtonsoft.Json.IArrayPool<char>, char[])", span="54-54", cluster="Newtonsoft.Json.Utilities.BufferUtils.ReturnBuffer(Newtonsoft.Json.IArrayPool<char>, char[])", file="JsonTextReader.cs"];
m6_668 [label="Entry Newtonsoft.Json.JsonTextReader.WriteCharToBuffer(char, int, int)", span="1215-1215", cluster="Newtonsoft.Json.JsonTextReader.WriteCharToBuffer(char, int, int)", file="JsonTextReader.cs"];
m6_672 [label="_stringBuffer.Append(_arrayPool, _chars, lastWritePosition, writeToPosition - lastWritePosition)", span="1219-1219", cluster="Newtonsoft.Json.JsonTextReader.WriteCharToBuffer(char, int, int)", file="JsonTextReader.cs"];
m6_673 [label="_stringBuffer.Append(_arrayPool, writeChar)", span="1222-1222", cluster="Newtonsoft.Json.JsonTextReader.WriteCharToBuffer(char, int, int)", file="JsonTextReader.cs"];
m6_671 [label="writeToPosition > lastWritePosition", span="1217-1217", cluster="Newtonsoft.Json.JsonTextReader.WriteCharToBuffer(char, int, int)", file="JsonTextReader.cs"];
m6_674 [label="Exit Newtonsoft.Json.JsonTextReader.WriteCharToBuffer(char, int, int)", span="1215-1215", cluster="Newtonsoft.Json.JsonTextReader.WriteCharToBuffer(char, int, int)", file="JsonTextReader.cs"];
m6_828 [label="Entry Newtonsoft.Json.JsonTextReader.ValidIdentifierChar(char)", span="1493-1493", cluster="Newtonsoft.Json.JsonTextReader.ValidIdentifierChar(char)", file="JsonTextReader.cs"];
m6_831 [label="return (char.IsLetterOrDigit(value) || value == '_' || value == '$');", span="1495-1495", cluster="Newtonsoft.Json.JsonTextReader.ValidIdentifierChar(char)", file="JsonTextReader.cs"];
m6_832 [label="Exit Newtonsoft.Json.JsonTextReader.ValidIdentifierChar(char)", span="1493-1493", cluster="Newtonsoft.Json.JsonTextReader.ValidIdentifierChar(char)", file="JsonTextReader.cs"];
m6_169 [label="Entry Newtonsoft.Json.JsonTextReader.EnsureBuffer()", span="1034-1034", cluster="Newtonsoft.Json.JsonTextReader.EnsureBuffer()", file="JsonTextReader.cs"];
m6_574 [label="_chars == null", span="1036-1036", cluster="Newtonsoft.Json.JsonTextReader.EnsureBuffer()", file="JsonTextReader.cs"];
m6_575 [label="_chars = BufferUtils.RentBuffer(_arrayPool, 1024)", span="1038-1038", cluster="Newtonsoft.Json.JsonTextReader.EnsureBuffer()", file="JsonTextReader.cs"];
m6_576 [label="_chars[0] = '\0'", span="1039-1039", cluster="Newtonsoft.Json.JsonTextReader.EnsureBuffer()", file="JsonTextReader.cs"];
m6_577 [label="Exit Newtonsoft.Json.JsonTextReader.EnsureBuffer()", span="1034-1034", cluster="Newtonsoft.Json.JsonTextReader.EnsureBuffer()", file="JsonTextReader.cs"];
m6_185 [label="Entry Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", span="547-547", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_265 [label="EnsureBuffer()", span="549-549", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_266 [label=_currentState, span="551-551", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_275 [label="char currentChar = _chars[_charPos]", span="562-562", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_278 [label="ReadNullChar()", span="567-567", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_279 [label="SetToken(JsonToken.None, null, false)", span="569-569", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_283 [label="ParseString(currentChar, readType)", span="575-575", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_286 [label="return Value;", span="579-579", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_288 [label="return Value;", span="581-581", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_290 [label="Value is DateTime", span="583-583", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_291 [label="return (DateTime)Value;", span="585-585", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_292 [label="return ReadDateTimeString((string)Value);", span="587-587", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_294 [label="Value is DateTimeOffset", span="590-590", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_295 [label="return (DateTimeOffset)Value;", span="592-592", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_296 [label="return ReadDateTimeOffsetString((string)Value);", span="594-594", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_299 [label="EnsureChars(1, true) && _chars[_charPos + 1] == 'I'", span="600-600", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_300 [label="return ParseNumberNegativeInfinity(readType);", span="602-602", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_301 [label="ParseNumber(readType)", span="606-606", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_302 [label="return Value;", span="607-607", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_315 [label="_charPos++", span="622-622", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_316 [label="throw CreateUnexpectedCharacterException(currentChar);", span="623-623", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_317 [label="ParseNumber(ReadType.ReadAsString)", span="625-625", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_318 [label="return Value;", span="626-626", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_322 [label="_charPos++", span="631-631", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_323 [label="throw CreateUnexpectedCharacterException(currentChar);", span="632-632", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_325 [label="!MatchValueWithTrailingSeparator(expected)", span="635-635", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_326 [label="throw CreateUnexpectedCharacterException(_chars[_charPos]);", span="637-637", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_327 [label="SetToken(JsonToken.String, expected)", span="639-639", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_330 [label="return ParseNumberPositiveInfinity(readType);", span="642-642", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_332 [label="return ParseNumberNaN(readType);", span="644-644", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_334 [label="HandleNull()", span="646-646", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_337 [label="ParseComment(false)", span="649-649", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_339 [label="ProcessValueComma()", span="652-652", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_341 [label="_charPos++", span="655-655", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_342 [label="_currentState == State.Array || _currentState == State.ArrayStart || _currentState == State.PostValue", span="656-656", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_343 [label="SetToken(JsonToken.EndArray)", span="658-658", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_345 [label="throw CreateUnexpectedCharacterException(currentChar);", span="661-661", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_347 [label="ProcessCarriageReturn(false)", span="663-663", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_349 [label="ProcessLineFeed()", span="666-666", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_352 [label="_charPos++", span="671-671", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_353 [label="_charPos++", span="674-674", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_355 [label="throw CreateUnexpectedCharacterException(currentChar);", span="678-678", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_357 [label="ReadFinished()", span="686-686", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_359 [label="throw JsonReaderException.Create(this, ''Unexpected state: {0}.''.FormatWith(CultureInfo.InvariantCulture, CurrentState));", span="689-689", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_267 [label="State.Start", span="553-553", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_356 [label="State.Finished", span="685-685", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_274 [label=true, span="560-560", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_276 [label=currentChar, span="564-564", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_324 [label="string expected = currentChar == 't' ? JsonConvert.True : JsonConvert.False", span="634-634", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_354 [label="!char.IsWhiteSpace(currentChar)", span="676-676", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_277 [label="'\0'", span="566-566", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_280 [label="return null;", span="570-570", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_282 [label="'\''", span="574-574", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_284 [label=readType, span="576-576", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_285 [label="ReadType.ReadAsBytes", span="578-578", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_287 [label="ReadType.ReadAsString", span="580-580", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_289 [label="ReadType.ReadAsDateTime", span="582-582", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_293 [label="ReadType.ReadAsDateTimeOffset", span="589-589", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_298 [label="'-'", span="599-599", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_314 [label="readType != ReadType.ReadAsString", span="620-620", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_321 [label="readType != ReadType.ReadAsString", span="629-629", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_328 [label="return expected;", span="640-640", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_329 [label="'I'", span="641-641", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_331 [label="'N'", span="643-643", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_333 [label="'n'", span="645-645", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_335 [label="return null;", span="647-647", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_336 [label="'/'", span="648-648", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_338 [label="','", span="651-651", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_340 [label="']'", span="654-654", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_344 [label="return null;", span="659-659", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_346 [label="StringUtils.CarriageReturn", span="662-662", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_348 [label="StringUtils.LineFeed", span="665-665", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_351 [label="StringUtils.Tab", span="669-669", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_358 [label="return null;", span="687-687", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_297 [label="throw new ArgumentOutOfRangeException(nameof(readType));", span="597-597", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_268 [label="State.Property", span="554-554", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_273 [label="State.PostValue", span="559-559", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_281 [label="''''", span="573-573", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_303 [label="'.'", span="609-609", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_319 [label="'t'", span="627-627", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_350 [label="' '", span="668-668", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_313 [label="'9'", span="619-619", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_320 [label="'f'", span="628-628", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_269 [label="State.Array", span="555-555", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_272 [label="State.ConstructorStart", span="558-558", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_304 [label="'0'", span="610-610", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_312 [label="'8'", span="618-618", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_270 [label="State.ArrayStart", span="556-556", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_271 [label="State.Constructor", span="557-557", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_305 [label="'1'", span="611-611", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_311 [label="'7'", span="617-617", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_306 [label="'2'", span="612-612", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_310 [label="'6'", span="616-616", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_307 [label="'3'", span="613-613", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_309 [label="'5'", span="615-615", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_308 [label="'4'", span="614-614", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_360 [label="Exit Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", span="547-547", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_931 [label="Entry Newtonsoft.Json.JsonTextReader.ParseFalse()", span="2309-2309", cluster="Newtonsoft.Json.JsonTextReader.ParseFalse()", file="JsonTextReader.cs"];
m6_1221 [label="MatchValueWithTrailingSeparator(JsonConvert.False)", span="2311-2311", cluster="Newtonsoft.Json.JsonTextReader.ParseFalse()", file="JsonTextReader.cs"];
m6_1222 [label="SetToken(JsonToken.Boolean, false)", span="2313-2313", cluster="Newtonsoft.Json.JsonTextReader.ParseFalse()", file="JsonTextReader.cs"];
m6_1223 [label="throw JsonReaderException.Create(this, ''Error parsing boolean value.'');", span="2317-2317", cluster="Newtonsoft.Json.JsonTextReader.ParseFalse()", file="JsonTextReader.cs"];
m6_1224 [label="Exit Newtonsoft.Json.JsonTextReader.ParseFalse()", span="2309-2309", cluster="Newtonsoft.Json.JsonTextReader.ParseFalse()", file="JsonTextReader.cs"];
m6_1106 [label="Entry System.Convert.ToInt64(string, int)", span="0-0", cluster="System.Convert.ToInt64(string, int)", file="JsonTextReader.cs"];
m6_372 [label="Entry Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", span="702-702", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m6_373 [label="EnsureBuffer()", span="704-704", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m6_374 [label=_currentState, span="706-706", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m6_383 [label="char currentChar = _chars[_charPos]", span="717-717", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m6_386 [label="ReadNullChar()", span="722-722", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m6_387 [label="SetToken(JsonToken.None, null, false)", span="724-724", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m6_391 [label="ParseString(currentChar, ReadType.Read)", span="730-730", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m6_392 [label="return ReadBooleanString(_stringReference.ToString());", span="731-731", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m6_394 [label="HandleNull()", span="733-733", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m6_408 [label="ParseNumber(ReadType.Read)", span="747-747", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m6_410 [label="Value is BigInteger", span="750-750", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m6_411 [label="b = (BigInteger)Value != 0", span="752-752", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m6_412 [label="b = Convert.ToBoolean(Value, CultureInfo.InvariantCulture)", span="757-757", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m6_413 [label="SetToken(JsonToken.Boolean, b, false)", span="759-759", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m6_419 [label="!MatchValueWithTrailingSeparator(expected)", span="766-766", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m6_420 [label="throw CreateUnexpectedCharacterException(_chars[_charPos]);", span="768-768", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m6_421 [label="SetToken(JsonToken.Boolean, isTrue)", span="770-770", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m6_424 [label="ParseComment(false)", span="773-773", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m6_426 [label="ProcessValueComma()", span="776-776", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m6_428 [label="_charPos++", span="779-779", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m6_429 [label="_currentState == State.Array || _currentState == State.ArrayStart || _currentState == State.PostValue", span="780-780", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m6_430 [label="SetToken(JsonToken.EndArray)", span="782-782", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m6_432 [label="throw CreateUnexpectedCharacterException(currentChar);", span="785-785", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m6_434 [label="ProcessCarriageReturn(false)", span="787-787", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m6_436 [label="ProcessLineFeed()", span="790-790", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m6_439 [label="_charPos++", span="795-795", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m6_440 [label="_charPos++", span="798-798", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m6_442 [label="throw CreateUnexpectedCharacterException(currentChar);", span="802-802", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m6_444 [label="ReadFinished()", span="810-810", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m6_446 [label="throw JsonReaderException.Create(this, ''Unexpected state: {0}.''.FormatWith(CultureInfo.InvariantCulture, CurrentState));", span="813-813", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m6_375 [label="State.Start", span="708-708", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m6_443 [label="State.Finished", span="809-809", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m6_382 [label=true, span="715-715", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m6_384 [label=currentChar, span="719-719", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m6_417 [label="bool isTrue = currentChar == 't'", span="763-763", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m6_441 [label="!char.IsWhiteSpace(currentChar)", span="800-800", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m6_385 [label="'\0'", span="721-721", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m6_388 [label="return null;", span="725-725", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m6_390 [label="'\''", span="729-729", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m6_393 [label="'n'", span="732-732", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m6_395 [label="return null;", span="734-734", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m6_407 [label="'9'", span="746-746", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m6_409 [label="bool b", span="748-748", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m6_414 [label="return b;", span="760-760", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m6_418 [label="string expected = isTrue ? JsonConvert.True : JsonConvert.False", span="764-764", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m6_422 [label="return isTrue;", span="771-771", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m6_423 [label="'/'", span="772-772", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m6_425 [label="','", span="775-775", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m6_427 [label="']'", span="778-778", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m6_431 [label="return null;", span="783-783", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m6_433 [label="StringUtils.CarriageReturn", span="786-786", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m6_435 [label="StringUtils.LineFeed", span="789-789", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m6_438 [label="StringUtils.Tab", span="793-793", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m6_445 [label="return null;", span="811-811", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m6_376 [label="State.Property", span="709-709", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m6_381 [label="State.PostValue", span="714-714", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m6_389 [label="''''", span="728-728", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m6_396 [label="'-'", span="735-735", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m6_415 [label="'t'", span="761-761", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m6_437 [label="' '", span="792-792", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m6_416 [label="'f'", span="762-762", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m6_406 [label="'8'", span="745-745", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m6_377 [label="State.Array", span="710-710", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m6_380 [label="State.ConstructorStart", span="713-713", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m6_397 [label="'.'", span="736-736", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m6_405 [label="'7'", span="744-744", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m6_378 [label="State.ArrayStart", span="711-711", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m6_379 [label="State.Constructor", span="712-712", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m6_398 [label="'0'", span="737-737", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m6_404 [label="'6'", span="743-743", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m6_399 [label="'1'", span="738-738", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m6_403 [label="'5'", span="742-742", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m6_400 [label="'2'", span="739-739", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m6_402 [label="'4'", span="741-741", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m6_401 [label="'3'", span="740-740", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m6_447 [label="Exit Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", span="702-702", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m6_6 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JsonTextReader.cs"];
m6_670 [label="Entry Newtonsoft.Json.Utilities.StringBuffer.Append(Newtonsoft.Json.IArrayPool<char>, char[], int, int)", span="70-70", cluster="Newtonsoft.Json.Utilities.StringBuffer.Append(Newtonsoft.Json.IArrayPool<char>, char[], int, int)", file="JsonTextReader.cs"];
m6_686 [label="Entry Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", span="1242-1242", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m6_687 [label="int charPos = _charPos", span="1244-1244", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m6_689 [label="_chars[charPos]", span="1248-1248", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m6_691 [label="_charPos = charPos", span="1251-1251", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m6_692 [label="_charsUsed == charPos", span="1253-1253", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m6_693 [label="ReadData(true) == 0", span="1255-1255", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m6_724 [label="_charPos = charPos", span="1295-1295", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m6_725 [label="char currentChar = _chars[_charPos]", span="1297-1297", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m6_728 [label="throw JsonReaderException.Create(this, ''Unexpected character encountered while parsing number: {0}.''.FormatWith(CultureInfo.InvariantCulture, currentChar));", span="1303-1303", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m6_688 [label=true, span="1246-1246", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m6_723 [label="charPos++", span="1292-1292", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m6_690 [label="'\0'", span="1250-1250", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m6_696 [label="'-'", span="1265-1265", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m6_695 [label="return;", span="1262-1262", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m6_694 [label="return;", span="1257-1257", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m6_726 [label="char.IsWhiteSpace(currentChar) || currentChar == ',' || currentChar == '}' || currentChar == ']' || currentChar == ')' || currentChar == '/'", span="1298-1298", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m6_722 [label="'9'", span="1291-1291", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m6_697 [label="'+'", span="1266-1266", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m6_727 [label="return;", span="1300-1300", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m6_721 [label="'8'", span="1290-1290", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m6_698 [label="'a'", span="1267-1267", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m6_720 [label="'7'", span="1289-1289", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m6_699 [label="'A'", span="1268-1268", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m6_719 [label="'6'", span="1288-1288", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m6_700 [label="'b'", span="1269-1269", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m6_718 [label="'5'", span="1287-1287", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m6_701 [label="'B'", span="1270-1270", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m6_717 [label="'4'", span="1286-1286", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m6_702 [label="'c'", span="1271-1271", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m6_716 [label="'3'", span="1285-1285", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m6_703 [label="'C'", span="1272-1272", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m6_715 [label="'2'", span="1284-1284", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m6_704 [label="'d'", span="1273-1273", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m6_714 [label="'1'", span="1283-1283", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m6_705 [label="'D'", span="1274-1274", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m6_713 [label="'0'", span="1282-1282", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m6_706 [label="'e'", span="1275-1275", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m6_712 [label="'.'", span="1281-1281", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m6_707 [label="'E'", span="1276-1276", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m6_711 [label="'X'", span="1280-1280", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m6_708 [label="'f'", span="1277-1277", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m6_710 [label="'x'", span="1279-1279", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m6_709 [label="'F'", span="1278-1278", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m6_729 [label="Exit Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", span="1242-1242", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m6_258 [label="Entry Newtonsoft.Json.JsonTextReader.HandleNull()", span="974-974", cluster="Newtonsoft.Json.JsonTextReader.HandleNull()", file="JsonTextReader.cs"];
m6_546 [label="EnsureChars(1, true)", span="976-976", cluster="Newtonsoft.Json.JsonTextReader.HandleNull()", file="JsonTextReader.cs"];
m6_547 [label="char next = _chars[_charPos + 1]", span="978-978", cluster="Newtonsoft.Json.JsonTextReader.HandleNull()", file="JsonTextReader.cs"];
m6_549 [label="ParseNull()", span="982-982", cluster="Newtonsoft.Json.JsonTextReader.HandleNull()", file="JsonTextReader.cs"];
m6_551 [label="_charPos += 2", span="986-986", cluster="Newtonsoft.Json.JsonTextReader.HandleNull()", file="JsonTextReader.cs"];
m6_552 [label="throw CreateUnexpectedCharacterException(_chars[_charPos - 1]);", span="987-987", cluster="Newtonsoft.Json.JsonTextReader.HandleNull()", file="JsonTextReader.cs"];
m6_553 [label="_charPos = _charsUsed", span="990-990", cluster="Newtonsoft.Json.JsonTextReader.HandleNull()", file="JsonTextReader.cs"];
m6_554 [label="throw CreateUnexpectedEndException();", span="991-991", cluster="Newtonsoft.Json.JsonTextReader.HandleNull()", file="JsonTextReader.cs"];
m6_548 [label="next == 'u'", span="980-980", cluster="Newtonsoft.Json.JsonTextReader.HandleNull()", file="JsonTextReader.cs"];
m6_550 [label="return;", span="983-983", cluster="Newtonsoft.Json.JsonTextReader.HandleNull()", file="JsonTextReader.cs"];
m6_555 [label="Exit Newtonsoft.Json.JsonTextReader.HandleNull()", span="974-974", cluster="Newtonsoft.Json.JsonTextReader.HandleNull()", file="JsonTextReader.cs"];
m6_174 [label="Entry Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken)", span="946-946", cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken)", file="JsonTextReader.cs"];
m6_933 [label="Entry Newtonsoft.Json.JsonTextReader.ParseUndefined()", span="2297-2297", cluster="Newtonsoft.Json.JsonTextReader.ParseUndefined()", file="JsonTextReader.cs"];
m6_1217 [label="MatchValueWithTrailingSeparator(JsonConvert.Undefined)", span="2299-2299", cluster="Newtonsoft.Json.JsonTextReader.ParseUndefined()", file="JsonTextReader.cs"];
m6_1218 [label="SetToken(JsonToken.Undefined)", span="2301-2301", cluster="Newtonsoft.Json.JsonTextReader.ParseUndefined()", file="JsonTextReader.cs"];
m6_1219 [label="throw JsonReaderException.Create(this, ''Error parsing undefined value.'');", span="2305-2305", cluster="Newtonsoft.Json.JsonTextReader.ParseUndefined()", file="JsonTextReader.cs"];
m6_1220 [label="Exit Newtonsoft.Json.JsonTextReader.ParseUndefined()", span="2297-2297", cluster="Newtonsoft.Json.JsonTextReader.ParseUndefined()", file="JsonTextReader.cs"];
m6_666 [label="Entry Newtonsoft.Json.Utilities.StringUtils.IsLowSurrogate(char)", span="269-269", cluster="Newtonsoft.Json.Utilities.StringUtils.IsLowSurrogate(char)", file="JsonTextReader.cs"];
m6_1166 [label="Entry Newtonsoft.Json.JsonTextReader.MatchValue(string)", span="2190-2190", cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonTextReader.cs"];
m6_1167 [label="!EnsureChars(value.Length - 1, true)", span="2192-2192", cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonTextReader.cs"];
m6_1168 [label="_charPos = _charsUsed", span="2194-2194", cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonTextReader.cs"];
m6_1169 [label="throw CreateUnexpectedEndException();", span="2195-2195", cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonTextReader.cs"];
m6_1172 [label="_chars[_charPos + i] != value[i]", span="2200-2200", cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonTextReader.cs"];
m6_1173 [label="_charPos += i", span="2202-2202", cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonTextReader.cs"];
m6_1176 [label="_charPos += value.Length", span="2207-2207", cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonTextReader.cs"];
m6_1171 [label="i < value.Length", span="2198-2198", cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonTextReader.cs"];
m6_1170 [label="int i = 0", span="2198-2198", cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonTextReader.cs"];
m6_1175 [label="i++", span="2198-2198", cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonTextReader.cs"];
m6_1174 [label="return false;", span="2203-2203", cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonTextReader.cs"];
m6_1177 [label="return true;", span="2209-2209", cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonTextReader.cs"];
m6_1178 [label="Exit Newtonsoft.Json.JsonTextReader.MatchValue(string)", span="2190-2190", cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonTextReader.cs"];
m6_537 [label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", span="950-950", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", file="JsonTextReader.cs"];
m6_538 [label="return (DateTimeOffset?)ReadStringValue(ReadType.ReadAsDateTimeOffset);", span="952-952", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", file="JsonTextReader.cs"];
m6_539 [label="Exit Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", span="950-950", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", file="JsonTextReader.cs"];
m6_540 [label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", span="960-960", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", file="JsonTextReader.cs"];
m6_541 [label="return (decimal?)ReadNumberValue(ReadType.ReadAsDecimal);", span="962-962", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", file="JsonTextReader.cs"];
m6_542 [label="Exit Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", span="960-960", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", file="JsonTextReader.cs"];
m6_361 [label="Entry Newtonsoft.Json.JsonReader.ReadDateTimeString(string)", span="808-808", cluster="Newtonsoft.Json.JsonReader.ReadDateTimeString(string)", file="JsonTextReader.cs"];
m6_7 [label="Entry Unk.nameof", span="", cluster="Unk.nameof", file="JsonTextReader.cs"];
m6_449 [label="Entry System.Convert.ToBoolean(object, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToBoolean(object, System.IFormatProvider)", file="JsonTextReader.cs"];
m6_119 [label="Entry System.IO.TextReader.Read(char[], int, int)", span="0-0", cluster="System.IO.TextReader.Read(char[], int, int)", file="JsonTextReader.cs"];
m6_368 [label="Entry Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity(Newtonsoft.Json.ReadType)", span="2346-2346", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1238 [label="MatchValueWithTrailingSeparator(JsonConvert.PositiveInfinity)", span="2348-2348", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1242 [label="_floatParseHandling == FloatParseHandling.Double", span="2354-2354", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1243 [label="SetToken(JsonToken.Float, double.PositiveInfinity)", span="2356-2356", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1246 [label="SetToken(JsonToken.String, JsonConvert.PositiveInfinity)", span="2361-2361", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1248 [label="throw JsonReaderException.Create(this, ''Cannot read Infinity value.'');", span="2365-2365", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1249 [label="throw JsonReaderException.Create(this, ''Error parsing Infinity value.'');", span="2368-2368", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1239 [label=readType, span="2350-2350", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1241 [label="ReadType.ReadAsDouble", span="2353-2353", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1244 [label="return double.PositiveInfinity;", span="2357-2357", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1245 [label="ReadType.ReadAsString", span="2360-2360", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1247 [label="return JsonConvert.PositiveInfinity;", span="2362-2362", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1240 [label="ReadType.Read", span="2352-2352", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1250 [label="Exit Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity(Newtonsoft.Json.ReadType)", span="2346-2346", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_366 [label="Entry Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeparator(string)", span="2212-2212", cluster="Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeparator(string)", file="JsonTextReader.cs"];
m6_1179 [label="bool match = MatchValue(value)", span="2215-2215", cluster="Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeparator(string)", file="JsonTextReader.cs"];
m6_1182 [label="!EnsureChars(0, false)", span="2222-2222", cluster="Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeparator(string)", file="JsonTextReader.cs"];
m6_1184 [label="return IsSeparator(_chars[_charPos]) || _chars[_charPos] == '\0';", span="2227-2227", cluster="Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeparator(string)", file="JsonTextReader.cs"];
m6_1180 [label="!match", span="2217-2217", cluster="Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeparator(string)", file="JsonTextReader.cs"];
m6_1183 [label="return true;", span="2224-2224", cluster="Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeparator(string)", file="JsonTextReader.cs"];
m6_1181 [label="return false;", span="2219-2219", cluster="Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeparator(string)", file="JsonTextReader.cs"];
m6_1185 [label="Exit Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeparator(string)", span="2212-2212", cluster="Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeparator(string)", file="JsonTextReader.cs"];
m6_72 [label="Entry System.Buffer.BlockCopy(System.Array, int, System.Array, int, int)", span="0-0", cluster="System.Buffer.BlockCopy(System.Array, int, System.Array, int, int)", file="JsonTextReader.cs"];
m6_1274 [label="Entry System.IO.TextReader.Close()", span="0-0", cluster="System.IO.TextReader.Close()", file="JsonTextReader.cs"];
m6_262 [label="Entry Newtonsoft.Json.JsonTextReader.ProcessLineFeed()", span="1666-1666", cluster="Newtonsoft.Json.JsonTextReader.ProcessLineFeed()", file="JsonTextReader.cs"];
m6_935 [label="_charPos++", span="1668-1668", cluster="Newtonsoft.Json.JsonTextReader.ProcessLineFeed()", file="JsonTextReader.cs"];
m6_936 [label="OnNewLine(_charPos)", span="1669-1669", cluster="Newtonsoft.Json.JsonTextReader.ProcessLineFeed()", file="JsonTextReader.cs"];
m6_937 [label="Exit Newtonsoft.Json.JsonTextReader.ProcessLineFeed()", span="1666-1666", cluster="Newtonsoft.Json.JsonTextReader.ProcessLineFeed()", file="JsonTextReader.cs"];
m6_369 [label="Entry Newtonsoft.Json.JsonTextReader.ParseNumberNaN(Newtonsoft.Json.ReadType)", span="2371-2371", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1251 [label="MatchValueWithTrailingSeparator(JsonConvert.NaN)", span="2373-2373", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1255 [label="_floatParseHandling == FloatParseHandling.Double", span="2379-2379", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1256 [label="SetToken(JsonToken.Float, double.NaN)", span="2381-2381", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1259 [label="SetToken(JsonToken.String, JsonConvert.NaN)", span="2386-2386", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1261 [label="throw JsonReaderException.Create(this, ''Cannot read NaN value.'');", span="2390-2390", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1262 [label="throw JsonReaderException.Create(this, ''Error parsing NaN value.'');", span="2393-2393", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1252 [label=readType, span="2375-2375", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1254 [label="ReadType.ReadAsDouble", span="2378-2378", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1257 [label="return double.NaN;", span="2382-2382", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1258 [label="ReadType.ReadAsString", span="2385-2385", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1260 [label="return JsonConvert.NaN;", span="2387-2387", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1253 [label="ReadType.Read", span="2377-2377", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1263 [label="Exit Newtonsoft.Json.JsonTextReader.ParseNumberNaN(Newtonsoft.Json.ReadType)", span="2371-2371", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_0 [label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="78-78", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonTextReader.cs"];
m6_3 [label="_reader = reader", span="85-85", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonTextReader.cs"];
m6_4 [label="_lineNumber = 1", span="86-86", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonTextReader.cs"];
m6_1 [label="reader == null", span="80-80", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonTextReader.cs"];
m6_2 [label="throw new ArgumentNullException(nameof(reader));", span="82-82", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonTextReader.cs"];
m6_5 [label="Exit Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="78-78", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonTextReader.cs"];
m6_1161 [label="Entry Newtonsoft.Json.JsonTextReader.EndComment(bool, int, int)", span="2182-2182", cluster="Newtonsoft.Json.JsonTextReader.EndComment(bool, int, int)", file="JsonTextReader.cs"];
m6_1163 [label="SetToken(JsonToken.Comment, new string(_chars, initialPosition, endPosition - initialPosition))", span="2186-2186", cluster="Newtonsoft.Json.JsonTextReader.EndComment(bool, int, int)", file="JsonTextReader.cs"];
m6_1162 [label=setToken, span="2184-2184", cluster="Newtonsoft.Json.JsonTextReader.EndComment(bool, int, int)", file="JsonTextReader.cs"];
m6_1164 [label="Exit Newtonsoft.Json.JsonTextReader.EndComment(bool, int, int)", span="2182-2182", cluster="Newtonsoft.Json.JsonTextReader.EndComment(bool, int, int)", file="JsonTextReader.cs"];
m6_66 [label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTime(Newtonsoft.Json.Utilities.StringReference, Newtonsoft.Json.DateTimeZoneHandling, string, System.Globalization.CultureInfo, out System.DateTime)", span="328-328", cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTime(Newtonsoft.Json.Utilities.StringReference, Newtonsoft.Json.DateTimeZoneHandling, string, System.Globalization.CultureInfo, out System.DateTime)", file="JsonTextReader.cs"];
m6_116 [label="Entry System.Math.Max(int, int)", span="0-0", cluster="System.Math.Max(int, int)", file="JsonTextReader.cs"];
m6_1275 [label="Entry Newtonsoft.Json.Utilities.StringBuffer.Clear(Newtonsoft.Json.IArrayPool<char>)", span="82-82", cluster="Newtonsoft.Json.Utilities.StringBuffer.Clear(Newtonsoft.Json.IArrayPool<char>)", file="JsonTextReader.cs"];
m6_535 [label="Entry Newtonsoft.Json.JsonReader.ReadDecimalString(string)", span="758-758", cluster="Newtonsoft.Json.JsonReader.ReadDecimalString(string)", file="JsonTextReader.cs"];
m6_1186 [label="Entry Newtonsoft.Json.JsonTextReader.IsSeparator(char)", span="2230-2230", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs"];
m6_1193 [label="!EnsureChars(1, false)", span="2240-2240", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs"];
m6_1195 [label="var nextChart = _chars[_charPos + 1]", span="2245-2245", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs"];
m6_1198 [label="CurrentState == State.Constructor || CurrentState == State.ConstructorStart", span="2249-2249", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs"];
m6_1192 [label="'/'", span="2238-2238", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs"];
m6_1194 [label="return false;", span="2242-2242", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs"];
m6_1196 [label="return (nextChart == '*' || nextChart == '/');", span="2247-2247", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs"];
m6_1197 [label="')'", span="2248-2248", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs"];
m6_1199 [label="return true;", span="2251-2251", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs"];
m6_1207 [label="return false;", span="2267-2267", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs"];
m6_1187 [label=c, span="2232-2232", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs"];
m6_1205 [label="char.IsWhiteSpace(c)", span="2260-2260", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs"];
m6_1191 [label="return true;", span="2237-2237", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs"];
m6_1204 [label="return true;", span="2258-2258", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs"];
m6_1206 [label="return true;", span="2262-2262", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs"];
m6_1188 [label="'}'", span="2234-2234", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs"];
m6_1200 [label="' '", span="2254-2254", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs"];
m6_1190 [label="','", span="2236-2236", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs"];
m6_1203 [label="StringUtils.CarriageReturn", span="2257-2257", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs"];
m6_1189 [label="']'", span="2235-2235", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs"];
m6_1201 [label="StringUtils.Tab", span="2255-2255", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs"];
m6_1202 [label="StringUtils.LineFeed", span="2256-2256", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs"];
m6_1208 [label="Exit Newtonsoft.Json.JsonTextReader.IsSeparator(char)", span="2230-2230", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs"];
m6_13 [label="Entry Newtonsoft.Json.JsonTextReader.OnNewLine(int)", span="121-121", cluster="Newtonsoft.Json.JsonTextReader.OnNewLine(int)", file="JsonTextReader.cs"];
m6_14 [label="_lineNumber++", span="123-123", cluster="Newtonsoft.Json.JsonTextReader.OnNewLine(int)", file="JsonTextReader.cs"];
m6_15 [label="_lineStartPos = pos", span="124-124", cluster="Newtonsoft.Json.JsonTextReader.OnNewLine(int)", file="JsonTextReader.cs"];
m6_16 [label="Exit Newtonsoft.Json.JsonTextReader.OnNewLine(int)", span="121-121", cluster="Newtonsoft.Json.JsonTextReader.OnNewLine(int)", file="JsonTextReader.cs"];
m6_1113 [label="Entry System.Convert.ToDouble(long)", span="0-0", cluster="System.Convert.ToDouble(long)", file="JsonTextReader.cs"];
m6_176 [label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47", cluster="string.FormatWith(System.IFormatProvider, object)", file="JsonTextReader.cs"];
m6_734 [label="Entry Newtonsoft.Json.Utilities.StringReference.StringReference()", span="29-29", cluster="Newtonsoft.Json.Utilities.StringReference.StringReference()", file="JsonTextReader.cs"];
m6_256 [label="Entry Newtonsoft.Json.JsonReader.ReadIntoWrappedTypeObject()", span="903-903", cluster="Newtonsoft.Json.JsonReader.ReadIntoWrappedTypeObject()", file="JsonTextReader.cs"];
m6_536 [label="Entry Newtonsoft.Json.JsonReader.ReadDoubleString(string)", span="647-647", cluster="Newtonsoft.Json.JsonReader.ReadDoubleString(string)", file="JsonTextReader.cs"];
m6_12 [label="Entry Newtonsoft.Json.Utilities.StringBuffer.StringBuffer(Newtonsoft.Json.IArrayPool<char>, int)", span="48-48", cluster="Newtonsoft.Json.Utilities.StringBuffer.StringBuffer(Newtonsoft.Json.IArrayPool<char>, int)", file="JsonTextReader.cs"];
m6_261 [label="Entry Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", span="1672-1672", cluster="Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", file="JsonTextReader.cs"];
m6_938 [label="_charPos++", span="1674-1674", cluster="Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", file="JsonTextReader.cs"];
m6_939 [label="EnsureChars(1, append) && _chars[_charPos] == StringUtils.LineFeed", span="1676-1676", cluster="Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", file="JsonTextReader.cs"];
m6_940 [label="_charPos++", span="1678-1678", cluster="Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", file="JsonTextReader.cs"];
m6_941 [label="OnNewLine(_charPos)", span="1681-1681", cluster="Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", file="JsonTextReader.cs"];
m6_942 [label="Exit Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", span="1672-1672", cluster="Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", file="JsonTextReader.cs"];
m6_67 [label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeOffset(Newtonsoft.Json.Utilities.StringReference, string, System.Globalization.CultureInfo, out System.DateTimeOffset)", span="401-401", cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeOffset(Newtonsoft.Json.Utilities.StringReference, string, System.Globalization.CultureInfo, out System.DateTimeOffset)", file="JsonTextReader.cs"];
m6_125 [label="Entry Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", span="327-327", cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonTextReader.cs"];
m6_126 [label=_isEndOfFile, span="329-329", cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonTextReader.cs"];
m6_128 [label="int charsRequired = _charPos + relativePosition - _charsUsed + 1", span="334-334", cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonTextReader.cs"];
m6_130 [label="int charsRead = ReadData(append, charsRequired - totalCharsRead)", span="342-342", cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonTextReader.cs"];
m6_127 [label="return false;", span="331-331", cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonTextReader.cs"];
m6_129 [label="int totalCharsRead = 0", span="336-336", cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonTextReader.cs"];
m6_133 [label="totalCharsRead < charsRequired", span="351-351", cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonTextReader.cs"];
m6_134 [label="totalCharsRead < charsRequired", span="353-353", cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonTextReader.cs"];
m6_131 [label="charsRead == 0", span="345-345", cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonTextReader.cs"];
m6_132 [label="totalCharsRead += charsRead", span="350-350", cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonTextReader.cs"];
m6_135 [label="return false;", span="355-355", cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonTextReader.cs"];
m6_136 [label="return true;", span="357-357", cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonTextReader.cs"];
m6_137 [label="Exit Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", span="327-327", cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonTextReader.cs"];
m6_1104 [label="Entry char.IsDigit(char)", span="0-0", cluster="char.IsDigit(char)", file="JsonTextReader.cs"];
m6_930 [label="Entry Newtonsoft.Json.JsonTextReader.ParseTrue()", span="2270-2270", cluster="Newtonsoft.Json.JsonTextReader.ParseTrue()", file="JsonTextReader.cs"];
m6_1209 [label="MatchValueWithTrailingSeparator(JsonConvert.True)", span="2275-2275", cluster="Newtonsoft.Json.JsonTextReader.ParseTrue()", file="JsonTextReader.cs"];
m6_1210 [label="SetToken(JsonToken.Boolean, true)", span="2277-2277", cluster="Newtonsoft.Json.JsonTextReader.ParseTrue()", file="JsonTextReader.cs"];
m6_1211 [label="throw JsonReaderException.Create(this, ''Error parsing boolean value.'');", span="2281-2281", cluster="Newtonsoft.Json.JsonTextReader.ParseTrue()", file="JsonTextReader.cs"];
m6_1212 [label="Exit Newtonsoft.Json.JsonTextReader.ParseTrue()", span="2270-2270", cluster="Newtonsoft.Json.JsonTextReader.ParseTrue()", file="JsonTextReader.cs"];
m6_255 [label="Entry Newtonsoft.Json.JsonReader.ReaderReadAndAssert()", span="890-890", cluster="Newtonsoft.Json.JsonReader.ReaderReadAndAssert()", file="JsonTextReader.cs"];
m6_8 [label="Entry Newtonsoft.Json.JsonTextReader.EnsureBufferNotEmpty()", span="113-113", cluster="Newtonsoft.Json.JsonTextReader.EnsureBufferNotEmpty()", file="JsonTextReader.cs"];
m6_9 [label="_stringBuffer.IsEmpty", span="115-115", cluster="Newtonsoft.Json.JsonTextReader.EnsureBufferNotEmpty()", file="JsonTextReader.cs"];
m6_10 [label="_stringBuffer = new StringBuffer(_arrayPool, 1024)", span="117-117", cluster="Newtonsoft.Json.JsonTextReader.EnsureBufferNotEmpty()", file="JsonTextReader.cs"];
m6_11 [label="Exit Newtonsoft.Json.JsonTextReader.EnsureBufferNotEmpty()", span="113-113", cluster="Newtonsoft.Json.JsonTextReader.EnsureBufferNotEmpty()", file="JsonTextReader.cs"];
m6_62 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.TryConvertGuid(string, out System.Guid)", span="1137-1137", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertGuid(string, out System.Guid)", file="JsonTextReader.cs"];
m6_1109 [label="Entry System.Convert.ToInt32(string, int)", span="0-0", cluster="System.Convert.ToInt32(string, int)", file="JsonTextReader.cs"];
m6_1165 [label="Entry string.String(char[], int, int)", span="0-0", cluster="string.String(char[], int, int)", file="JsonTextReader.cs"];
m6_68 [label="Entry Newtonsoft.Json.JsonTextReader.BlockCopyChars(char[], int, char[], int, int)", span="213-213", cluster="Newtonsoft.Json.JsonTextReader.BlockCopyChars(char[], int, char[], int, int)", file="JsonTextReader.cs"];
m6_69 [label="int charByteCount = 2", span="215-215", cluster="Newtonsoft.Json.JsonTextReader.BlockCopyChars(char[], int, char[], int, int)", file="JsonTextReader.cs"];
m6_70 [label="Buffer.BlockCopy(src, srcOffset * charByteCount, dst, dstOffset * charByteCount, count * charByteCount)", span="217-217", cluster="Newtonsoft.Json.JsonTextReader.BlockCopyChars(char[], int, char[], int, int)", file="JsonTextReader.cs"];
m6_71 [label="Exit Newtonsoft.Json.JsonTextReader.BlockCopyChars(char[], int, char[], int, int)", span="213-213", cluster="Newtonsoft.Json.JsonTextReader.BlockCopyChars(char[], int, char[], int, int)", file="JsonTextReader.cs"];
m6_685 [label="Entry System.Convert.ToChar(int)", span="0-0", cluster="System.Convert.ToChar(int)", file="JsonTextReader.cs"];
m6_58 [label="Entry Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", span="220-220", cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonTextReader.cs"];
m6_73 [label="int length = _chars.Length", span="224-224", cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonTextReader.cs"];
m6_74 [label="length - _charPos <= length * 0.1", span="225-225", cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonTextReader.cs"];
m6_75 [label="int count = _charsUsed - _charPos", span="227-227", cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonTextReader.cs"];
m6_77 [label="BlockCopyChars(_chars, _charPos, _chars, 0, count)", span="230-230", cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonTextReader.cs"];
m6_78 [label="_lineStartPos -= _charPos", span="233-233", cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonTextReader.cs"];
m6_79 [label="_charPos = 0", span="234-234", cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonTextReader.cs"];
m6_80 [label="_charsUsed = count", span="235-235", cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonTextReader.cs"];
m6_81 [label="_chars[_charsUsed] = '\0'", span="236-236", cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonTextReader.cs"];
m6_76 [label="count > 0", span="228-228", cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonTextReader.cs"];
m6_82 [label="Exit Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", span="220-220", cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonTextReader.cs"];
m6_260 [label="Entry Newtonsoft.Json.JsonTextReader.CreateUnexpectedCharacterException(char)", span="693-693", cluster="Newtonsoft.Json.JsonTextReader.CreateUnexpectedCharacterException(char)", file="JsonTextReader.cs"];
m6_370 [label="return JsonReaderException.Create(this, ''Unexpected character encountered while parsing value: {0}.''.FormatWith(CultureInfo.InvariantCulture, c));", span="695-695", cluster="Newtonsoft.Json.JsonTextReader.CreateUnexpectedCharacterException(char)", file="JsonTextReader.cs"];
m6_371 [label="Exit Newtonsoft.Json.JsonTextReader.CreateUnexpectedCharacterException(char)", span="693-693", cluster="Newtonsoft.Json.JsonTextReader.CreateUnexpectedCharacterException(char)", file="JsonTextReader.cs"];
m6_177 [label="Entry Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string)", span="108-108", cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string)", file="JsonTextReader.cs"];
m6_730 [label="Entry Newtonsoft.Json.JsonTextReader.ClearRecentString()", span="1308-1308", cluster="Newtonsoft.Json.JsonTextReader.ClearRecentString()", file="JsonTextReader.cs"];
m6_731 [label="_stringBuffer.Position = 0", span="1310-1310", cluster="Newtonsoft.Json.JsonTextReader.ClearRecentString()", file="JsonTextReader.cs"];
m6_732 [label="_stringReference = new StringReference()", span="1311-1311", cluster="Newtonsoft.Json.JsonTextReader.ClearRecentString()", file="JsonTextReader.cs"];
m6_733 [label="Exit Newtonsoft.Json.JsonTextReader.ClearRecentString()", span="1308-1308", cluster="Newtonsoft.Json.JsonTextReader.ClearRecentString()", file="JsonTextReader.cs"];
m6_264 [label="Entry Newtonsoft.Json.JsonTextReader.ReadFinished()", span="994-994", cluster="Newtonsoft.Json.JsonTextReader.ReadFinished()", file="JsonTextReader.cs"];
m6_558 [label="EnsureChars(0, false)", span="996-996", cluster="Newtonsoft.Json.JsonTextReader.ReadFinished()", file="JsonTextReader.cs"];
m6_559 [label="EatWhitespace(false)", span="998-998", cluster="Newtonsoft.Json.JsonTextReader.ReadFinished()", file="JsonTextReader.cs"];
m6_560 [label=_isEndOfFile, span="999-999", cluster="Newtonsoft.Json.JsonTextReader.ReadFinished()", file="JsonTextReader.cs"];
m6_562 [label="_chars[_charPos] == '/'", span="1003-1003", cluster="Newtonsoft.Json.JsonTextReader.ReadFinished()", file="JsonTextReader.cs"];
m6_563 [label="ParseComment(false)", span="1005-1005", cluster="Newtonsoft.Json.JsonTextReader.ReadFinished()", file="JsonTextReader.cs"];
m6_564 [label="throw JsonReaderException.Create(this, ''Additional text encountered after finished reading JSON content: {0}.''.FormatWith(CultureInfo.InvariantCulture, _chars[_charPos]));", span="1009-1009", cluster="Newtonsoft.Json.JsonTextReader.ReadFinished()", file="JsonTextReader.cs"];
m6_565 [label="SetToken(JsonToken.None)", span="1013-1013", cluster="Newtonsoft.Json.JsonTextReader.ReadFinished()", file="JsonTextReader.cs"];
m6_561 [label="return;", span="1001-1001", cluster="Newtonsoft.Json.JsonTextReader.ReadFinished()", file="JsonTextReader.cs"];
m6_566 [label="Exit Newtonsoft.Json.JsonTextReader.ReadFinished()", span="994-994", cluster="Newtonsoft.Json.JsonTextReader.ReadFinished()", file="JsonTextReader.cs"];
m6_64 [label="Entry System.Convert.FromBase64CharArray(char[], int, int)", span="0-0", cluster="System.Convert.FromBase64CharArray(char[], int, int)", file="JsonTextReader.cs"];
m6_175 [label="Entry Newtonsoft.Json.JsonTextReader.ParseComment(bool)", span="2090-2090", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs"];
m6_1120 [label="_charPos++", span="2093-2093", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs"];
m6_1121 [label="!EnsureChars(1, false)", span="2095-2095", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs"];
m6_1122 [label="throw JsonReaderException.Create(this, ''Unexpected end while parsing comment.'');", span="2097-2097", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs"];
m6_1124 [label="_chars[_charPos] == '*'", span="2102-2102", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs"];
m6_1126 [label="_chars[_charPos] == '/'", span="2106-2106", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs"];
m6_1128 [label="throw JsonReaderException.Create(this, ''Error parsing comment. Expected: *, got {0}.''.FormatWith(CultureInfo.InvariantCulture, _chars[_charPos]));", span="2112-2112", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs"];
m6_1129 [label="_charPos++", span="2115-2115", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs"];
m6_1130 [label="int initialPosition = _charPos", span="2117-2117", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs"];
m6_1132 [label="_chars[_charPos]", span="2121-2121", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs"];
m6_1134 [label="_charsUsed == _charPos", span="2124-2124", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs"];
m6_1135 [label="ReadData(true) == 0", span="2126-2126", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs"];
m6_1137 [label="throw JsonReaderException.Create(this, ''Unexpected end while parsing comment.'');", span="2130-2130", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs"];
m6_1138 [label="EndComment(setToken, initialPosition, _charPos)", span="2133-2133", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs"];
m6_1140 [label="_charPos++", span="2139-2139", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs"];
m6_1142 [label="_charPos++", span="2143-2143", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs"];
m6_1144 [label="EnsureChars(0, true)", span="2147-2147", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs"];
m6_1145 [label="_chars[_charPos] == '/'", span="2149-2149", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs"];
m6_1146 [label="EndComment(setToken, initialPosition, _charPos - 1)", span="2151-2151", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs"];
m6_1147 [label="_charPos++", span="2153-2153", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs"];
m6_1151 [label="EndComment(setToken, initialPosition, _charPos)", span="2162-2162", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs"];
m6_1153 [label="ProcessCarriageReturn(true)", span="2165-2165", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs"];
m6_1156 [label="EndComment(setToken, initialPosition, _charPos)", span="2170-2170", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs"];
m6_1158 [label="ProcessLineFeed()", span="2173-2173", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs"];
m6_1159 [label="_charPos++", span="2176-2176", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs"];
m6_1123 [label="bool singlelineComment", span="2100-2100", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs"];
m6_1125 [label="singlelineComment = false", span="2104-2104", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs"];
m6_1127 [label="singlelineComment = true", span="2108-2108", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs"];
m6_1131 [label=true, span="2119-2119", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs"];
m6_1133 [label="'\0'", span="2123-2123", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs"];
m6_1141 [label="'*'", span="2142-2142", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs"];
m6_1149 [label="StringUtils.CarriageReturn", span="2159-2159", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs"];
m6_1154 [label="StringUtils.LineFeed", span="2167-2167", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs"];
m6_1136 [label="!singlelineComment", span="2128-2128", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs"];
m6_1139 [label="return;", span="2134-2134", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs"];
m6_1143 [label="!singlelineComment", span="2145-2145", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs"];
m6_1148 [label="return;", span="2154-2154", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs"];
m6_1150 [label=singlelineComment, span="2160-2160", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs"];
m6_1152 [label="return;", span="2163-2163", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs"];
m6_1155 [label=singlelineComment, span="2168-2168", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs"];
m6_1157 [label="return;", span="2171-2171", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs"];
m6_1160 [label="Exit Newtonsoft.Json.JsonTextReader.ParseComment(bool)", span="2090-2090", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs"];
m6_60 [label="Entry Newtonsoft.Json.JsonReader.SetPostValueState(bool)", span="1008-1008", cluster="Newtonsoft.Json.JsonReader.SetPostValueState(bool)", file="JsonTextReader.cs"];
m6_1108 [label="Entry double.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out double)", span="0-0", cluster="double.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out double)", file="JsonTextReader.cs"];
m6_59 [label="Entry Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", span="1043-1043", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m6_578 [label="int charPos = _charPos", span="1045-1045", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m6_579 [label="int initialPosition = _charPos", span="1046-1046", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m6_580 [label="int lastWritePosition = _charPos", span="1047-1047", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m6_581 [label="_stringBuffer.Position = 0", span="1048-1048", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m6_583 [label="_chars[charPos++]", span="1052-1052", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m6_585 [label="_charsUsed == charPos - 1", span="1055-1055", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m6_587 [label="ReadData(true) == 0", span="1059-1059", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m6_588 [label="_charPos = charPos", span="1061-1061", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m6_589 [label="throw JsonReaderException.Create(this, ''Unterminated string. Expected delimiter: {0}.''.FormatWith(CultureInfo.InvariantCulture, quote));", span="1062-1062", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m6_591 [label="_charPos = charPos", span="1067-1067", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m6_592 [label="!EnsureChars(0, true)", span="1068-1068", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m6_593 [label="throw JsonReaderException.Create(this, ''Unterminated string. Expected delimiter: {0}.''.FormatWith(CultureInfo.InvariantCulture, quote));", span="1070-1070", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m6_595 [label="char currentChar = _chars[charPos]", span="1076-1076", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m6_616 [label="_charPos = charPos", span="1107-1107", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m6_617 [label="writeChar = ParseUnicode()", span="1108-1108", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m6_623 [label="EnsureChars(2, true) && _chars[_charPos] == '\\' && _chars[_charPos + 1] == 'u'", span="1125-1125", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m6_625 [label="_charPos += 2", span="1129-1129", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m6_626 [label="writeChar = ParseUnicode()", span="1130-1130", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m6_632 [label="EnsureBufferNotEmpty()", span="1148-1148", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m6_633 [label="WriteCharToBuffer(highSurrogate, lastWritePosition, escapeStartPos)", span="1150-1150", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m6_634 [label="lastWritePosition = _charPos", span="1151-1151", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m6_637 [label="charPos = _charPos", span="1162-1162", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m6_638 [label="_charPos = charPos", span="1165-1165", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m6_639 [label="throw JsonReaderException.Create(this, ''Bad JSON escape sequence: {0}.''.FormatWith(CultureInfo.InvariantCulture, @''\'' + currentChar));", span="1166-1166", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m6_640 [label="EnsureBufferNotEmpty()", span="1169-1169", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m6_641 [label="WriteCharToBuffer(writeChar, lastWritePosition, escapeStartPos)", span="1170-1170", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m6_644 [label="_charPos = charPos - 1", span="1175-1175", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m6_645 [label="ProcessCarriageReturn(true)", span="1176-1176", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m6_646 [label="charPos = _charPos", span="1177-1177", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m6_648 [label="_charPos = charPos - 1", span="1180-1180", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m6_649 [label="ProcessLineFeed()", span="1181-1181", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m6_650 [label="charPos = _charPos", span="1182-1182", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m6_653 [label="_chars[charPos - 1] == quote", span="1186-1186", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m6_656 [label="_stringReference = new StringReference(_chars, initialPosition, charPos - initialPosition)", span="1192-1192", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m6_657 [label="EnsureBufferNotEmpty()", span="1196-1196", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m6_659 [label="_stringBuffer.Append(_arrayPool, _chars, lastWritePosition, charPos - lastWritePosition)", span="1200-1200", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m6_660 [label="_stringReference = new StringReference(_stringBuffer.InternalBuffer, 0, _stringBuffer.Position)", span="1203-1203", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m6_662 [label="_charPos = charPos", span="1207-1207", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m6_655 [label="initialPosition == lastWritePosition", span="1190-1190", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m6_582 [label=true, span="1050-1050", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m6_584 [label="'\0'", span="1054-1054", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m6_590 [label="'\\'", span="1066-1066", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m6_643 [label="StringUtils.CarriageReturn", span="1174-1174", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m6_647 [label="StringUtils.LineFeed", span="1179-1179", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m6_651 [label="''''", span="1184-1184", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m6_586 [label="charPos--", span="1057-1057", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m6_594 [label="int escapeStartPos = charPos - 1", span="1074-1074", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m6_596 [label="charPos++", span="1077-1077", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m6_597 [label="char writeChar", span="1079-1079", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m6_598 [label=currentChar, span="1081-1081", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m6_614 [label="writeChar = currentChar", span="1104-1104", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m6_615 [label="'u'", span="1106-1106", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m6_618 [label="StringUtils.IsLowSurrogate(writeChar)", span="1110-1110", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m6_620 [label="StringUtils.IsHighSurrogate(writeChar)", span="1115-1115", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m6_624 [label="char highSurrogate = writeChar", span="1127-1127", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m6_622 [label="anotherHighSurrogate = false", span="1122-1122", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m6_635 [label="writeChar = UnicodeReplacementChar", span="1157-1157", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m6_627 [label="StringUtils.IsLowSurrogate(writeChar)", span="1132-1132", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m6_628 [label="StringUtils.IsHighSurrogate(writeChar)", span="1136-1136", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m6_631 [label="highSurrogate = UnicodeReplacementChar", span="1145-1145", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m6_630 [label="anotherHighSurrogate = true", span="1140-1140", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m6_629 [label="highSurrogate = UnicodeReplacementChar", span="1139-1139", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m6_636 [label=anotherHighSurrogate, span="1159-1159", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m6_619 [label="writeChar = UnicodeReplacementChar", span="1113-1113", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m6_642 [label="lastWritePosition = charPos", span="1172-1172", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m6_600 [label="writeChar = '\b'", span="1084-1084", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m6_602 [label="writeChar = '\t'", span="1087-1087", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m6_604 [label="writeChar = '\n'", span="1090-1090", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m6_606 [label="writeChar = '\f'", span="1093-1093", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m6_608 [label="writeChar = '\r'", span="1096-1096", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m6_610 [label="writeChar = '\\'", span="1099-1099", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m6_654 [label="charPos--", span="1188-1188", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m6_652 [label="'\''", span="1185-1185", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m6_661 [label="charPos++", span="1206-1206", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m6_658 [label="charPos > lastWritePosition", span="1198-1198", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m6_663 [label="return;", span="1208-1208", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m6_599 [label="'b'", span="1083-1083", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m6_601 [label="'t'", span="1086-1086", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m6_603 [label="'n'", span="1089-1089", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m6_605 [label="'f'", span="1092-1092", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m6_607 [label="'r'", span="1095-1095", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m6_609 [label="'\\'", span="1098-1098", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m6_611 [label="''''", span="1101-1101", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m6_613 [label="'/'", span="1103-1103", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m6_621 [label="bool anotherHighSurrogate", span="1117-1117", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m6_612 [label="'\''", span="1102-1102", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m6_664 [label="Exit Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", span="1043-1043", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m6_172 [label="Entry Newtonsoft.Json.JsonTextReader.ParsePostValue()", span="1314-1314", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m6_736 [label="char currentChar = _chars[_charPos]", span="1318-1318", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m6_739 [label="_charsUsed == _charPos", span="1323-1323", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m6_740 [label="ReadData(false) == 0", span="1325-1325", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m6_741 [label="_currentState = State.Finished", span="1327-1327", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m6_743 [label="_charPos++", span="1333-1333", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m6_745 [label="_charPos++", span="1337-1337", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m6_746 [label="SetToken(JsonToken.EndObject)", span="1338-1338", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m6_749 [label="_charPos++", span="1341-1341", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m6_750 [label="SetToken(JsonToken.EndArray)", span="1342-1342", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m6_753 [label="_charPos++", span="1345-1345", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m6_754 [label="SetToken(JsonToken.EndConstructor)", span="1346-1346", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m6_757 [label="ParseComment(true)", span="1349-1349", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m6_760 [label="_charPos++", span="1352-1352", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m6_761 [label="SetStateBasedOnCurrent()", span="1355-1355", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m6_765 [label="_charPos++", span="1360-1360", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m6_767 [label="ProcessCarriageReturn(false)", span="1363-1363", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m6_769 [label="ProcessLineFeed()", span="1366-1366", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m6_771 [label="_charPos++", span="1372-1372", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m6_772 [label="throw JsonReaderException.Create(this, ''After parsing a value an unexpected character was encountered: {0}.''.FormatWith(CultureInfo.InvariantCulture, currentChar));", span="1376-1376", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m6_735 [label=true, span="1316-1316", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m6_737 [label=currentChar, span="1320-1320", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m6_770 [label="char.IsWhiteSpace(currentChar)", span="1369-1369", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m6_738 [label="'\0'", span="1322-1322", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m6_742 [label="return false;", span="1328-1328", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m6_744 [label="'}'", span="1336-1336", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m6_747 [label="return true;", span="1339-1339", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m6_748 [label="']'", span="1340-1340", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m6_751 [label="return true;", span="1343-1343", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m6_752 [label="')'", span="1344-1344", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m6_755 [label="return true;", span="1347-1347", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m6_756 [label="'/'", span="1348-1348", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m6_758 [label="return true;", span="1350-1350", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m6_759 [label="','", span="1351-1351", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m6_762 [label="return false;", span="1356-1356", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m6_764 [label="StringUtils.Tab", span="1358-1358", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m6_766 [label="StringUtils.CarriageReturn", span="1362-1362", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m6_768 [label="StringUtils.LineFeed", span="1365-1365", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m6_763 [label="' '", span="1357-1357", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m6_773 [label="Exit Newtonsoft.Json.JsonTextReader.ParsePostValue()", span="1314-1314", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m6_254 [label="Entry Newtonsoft.Json.JsonTextReader.ReadNullChar()", span="1016-1016", cluster="Newtonsoft.Json.JsonTextReader.ReadNullChar()", file="JsonTextReader.cs"];
m6_567 [label="_charsUsed == _charPos", span="1018-1018", cluster="Newtonsoft.Json.JsonTextReader.ReadNullChar()", file="JsonTextReader.cs"];
m6_568 [label="ReadData(false) == 0", span="1020-1020", cluster="Newtonsoft.Json.JsonTextReader.ReadNullChar()", file="JsonTextReader.cs"];
m6_569 [label="_isEndOfFile = true", span="1022-1022", cluster="Newtonsoft.Json.JsonTextReader.ReadNullChar()", file="JsonTextReader.cs"];
m6_571 [label="_charPos++", span="1028-1028", cluster="Newtonsoft.Json.JsonTextReader.ReadNullChar()", file="JsonTextReader.cs"];
m6_572 [label="return false;", span="1031-1031", cluster="Newtonsoft.Json.JsonTextReader.ReadNullChar()", file="JsonTextReader.cs"];
m6_570 [label="return true;", span="1023-1023", cluster="Newtonsoft.Json.JsonTextReader.ReadNullChar()", file="JsonTextReader.cs"];
m6_573 [label="Exit Newtonsoft.Json.JsonTextReader.ReadNullChar()", span="1016-1016", cluster="Newtonsoft.Json.JsonTextReader.ReadNullChar()", file="JsonTextReader.cs"];
m6_61 [label="Entry Newtonsoft.Json.Utilities.StringReference.ToString()", span="62-62", cluster="Newtonsoft.Json.Utilities.StringReference.ToString()", file="JsonTextReader.cs"];
m6_1116 [label="Entry Newtonsoft.Json.JsonTextReader.BigIntegerParse(string, System.Globalization.CultureInfo)", span="2084-2084", cluster="Newtonsoft.Json.JsonTextReader.BigIntegerParse(string, System.Globalization.CultureInfo)", file="JsonTextReader.cs"];
m6_1117 [label="return System.Numerics.BigInteger.Parse(number, culture);", span="2086-2086", cluster="Newtonsoft.Json.JsonTextReader.BigIntegerParse(string, System.Globalization.CultureInfo)", file="JsonTextReader.cs"];
m6_1118 [label="Exit Newtonsoft.Json.JsonTextReader.BigIntegerParse(string, System.Globalization.CultureInfo)", span="2084-2084", cluster="Newtonsoft.Json.JsonTextReader.BigIntegerParse(string, System.Globalization.CultureInfo)", file="JsonTextReader.cs"];
m6_833 [label="Entry char.IsLetterOrDigit(char)", span="0-0", cluster="char.IsLetterOrDigit(char)", file="JsonTextReader.cs"];
m6_534 [label="Entry Newtonsoft.Json.JsonReader.ReadInt32String(string)", span="442-442", cluster="Newtonsoft.Json.JsonReader.ReadInt32String(string)", file="JsonTextReader.cs"];
m6_173 [label="Entry Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", span="1684-1684", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs"];
m6_946 [label="char currentChar = _chars[_charPos]", span="1690-1690", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs"];
m6_949 [label="_charsUsed == _charPos", span="1695-1695", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs"];
m6_950 [label="ReadData(false) == 0", span="1697-1697", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs"];
m6_952 [label="_charPos++", span="1704-1704", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs"];
m6_954 [label="ProcessCarriageReturn(false)", span="1708-1708", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs"];
m6_956 [label="ProcessLineFeed()", span="1711-1711", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs"];
m6_959 [label="_charPos++", span="1717-1717", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs"];
m6_943 [label="bool finished = false", span="1686-1686", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs"];
m6_944 [label="bool ateWhitespace = false", span="1687-1687", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs"];
m6_945 [label="!finished", span="1688-1688", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs"];
m6_947 [label=currentChar, span="1692-1692", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs"];
m6_957 [label="currentChar == ' ' || char.IsWhiteSpace(currentChar)", span="1714-1714", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs"];
m6_948 [label="'\0'", span="1694-1694", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs"];
m6_951 [label="finished = true", span="1699-1699", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs"];
m6_953 [label="StringUtils.CarriageReturn", span="1707-1707", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs"];
m6_955 [label="StringUtils.LineFeed", span="1710-1710", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs"];
m6_958 [label="ateWhitespace = true", span="1716-1716", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs"];
m6_961 [label="return (!oneOrMore || ateWhitespace);", span="1727-1727", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs"];
m6_960 [label="finished = true", span="1721-1721", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs"];
m6_962 [label="Exit Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", span="1684-1684", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs"];
m6_934 [label="Entry char.IsNumber(char)", span="0-0", cluster="char.IsNumber(char)", file="JsonTextReader.cs"];
m6_257 [label="Entry Newtonsoft.Json.JsonReader.ReadArrayIntoByteArray()", span="582-582", cluster="Newtonsoft.Json.JsonReader.ReadArrayIntoByteArray()", file="JsonTextReader.cs"];
m6_120 [label="Entry Newtonsoft.Json.JsonTextReader.EnsureChars(int, bool)", span="317-317", cluster="Newtonsoft.Json.JsonTextReader.EnsureChars(int, bool)", file="JsonTextReader.cs"];
m6_121 [label="_charPos + relativePosition >= _charsUsed", span="319-319", cluster="Newtonsoft.Json.JsonTextReader.EnsureChars(int, bool)", file="JsonTextReader.cs"];
m6_122 [label="return ReadChars(relativePosition, append);", span="321-321", cluster="Newtonsoft.Json.JsonTextReader.EnsureChars(int, bool)", file="JsonTextReader.cs"];
m6_123 [label="return true;", span="324-324", cluster="Newtonsoft.Json.JsonTextReader.EnsureChars(int, bool)", file="JsonTextReader.cs"];
m6_124 [label="Exit Newtonsoft.Json.JsonTextReader.EnsureChars(int, bool)", span="317-317", cluster="Newtonsoft.Json.JsonTextReader.EnsureChars(int, bool)", file="JsonTextReader.cs"];
m6_182 [label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", span="430-430", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", file="JsonTextReader.cs"];
m6_183 [label="return (DateTime?)ReadStringValue(ReadType.ReadAsDateTime);", span="432-432", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", file="JsonTextReader.cs"];
m6_184 [label="Exit Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", span="430-430", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", file="JsonTextReader.cs"];
m6_117 [label="Entry Newtonsoft.Json.Utilities.BufferUtils.RentBuffer(Newtonsoft.Json.IArrayPool<char>, int)", span="43-43", cluster="Newtonsoft.Json.Utilities.BufferUtils.RentBuffer(Newtonsoft.Json.IArrayPool<char>, int)", file="JsonTextReader.cs"];
m6_86 [label="Entry Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", span="245-245", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs"];
m6_87 [label=_isEndOfFile, span="247-247", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs"];
m6_89 [label="_charsUsed + charsRequired >= _chars.Length - 1", span="253-253", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs"];
m6_91 [label="int newArrayLength = Math.Max(_chars.Length * 2, _charsUsed + charsRequired + 1)", span="258-258", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs"];
m6_92 [label="char[] dst = BufferUtils.RentBuffer(_arrayPool, newArrayLength)", span="261-261", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs"];
m6_93 [label="BlockCopyChars(_chars, 0, dst, 0, _chars.Length)", span="263-263", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs"];
m6_94 [label="BufferUtils.ReturnBuffer(_arrayPool, _chars)", span="265-265", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs"];
m6_95 [label="_chars = dst", span="267-267", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs"];
m6_96 [label="int remainingCharCount = _charsUsed - _charPos", span="271-271", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs"];
m6_97 [label="remainingCharCount + charsRequired + 1 >= _chars.Length", span="273-273", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs"];
m6_98 [label="char[] dst = BufferUtils.RentBuffer(_arrayPool, remainingCharCount + charsRequired + 1)", span="276-276", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs"];
m6_100 [label="BlockCopyChars(_chars, _charPos, dst, 0, remainingCharCount)", span="280-280", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs"];
m6_101 [label="BufferUtils.ReturnBuffer(_arrayPool, _chars)", span="283-283", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs"];
m6_102 [label="_chars = dst", span="285-285", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs"];
m6_104 [label="BlockCopyChars(_chars, _charPos, _chars, 0, remainingCharCount)", span="292-292", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs"];
m6_105 [label="_lineStartPos -= _charPos", span="296-296", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs"];
m6_106 [label="_charPos = 0", span="297-297", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs"];
m6_107 [label="_charsUsed = remainingCharCount", span="298-298", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs"];
m6_108 [label="int attemptCharReadCount = _chars.Length - _charsUsed - 1", span="302-302", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs"];
m6_109 [label="int charsRead = _reader.Read(_chars, _charsUsed, attemptCharReadCount)", span="304-304", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs"];
m6_110 [label="_charsUsed += charsRead", span="306-306", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs"];
m6_112 [label="_isEndOfFile = true", span="310-310", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs"];
m6_113 [label="_chars[_charsUsed] = '\0'", span="313-313", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs"];
m6_88 [label="return 0;", span="249-249", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs"];
m6_90 [label=append, span="255-255", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs"];
m6_99 [label="remainingCharCount > 0", span="278-278", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs"];
m6_103 [label="remainingCharCount > 0", span="290-290", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs"];
m6_111 [label="charsRead == 0", span="308-308", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs"];
m6_114 [label="return charsRead;", span="314-314", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs"];
m6_115 [label="Exit Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", span="245-245", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs"];
m6_63 [label="Entry System.Guid.ToByteArray()", span="0-0", cluster="System.Guid.ToByteArray()", file="JsonTextReader.cs"];
m6_456 [label="Entry Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", span="1055-1055", cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonTextReader.cs"];
m6_363 [label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0", cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="JsonTextReader.cs"];
m6_259 [label="Entry Newtonsoft.Json.JsonTextReader.ProcessValueComma()", span="817-817", cluster="Newtonsoft.Json.JsonTextReader.ProcessValueComma()", file="JsonTextReader.cs"];
m6_450 [label="_charPos++", span="819-819", cluster="Newtonsoft.Json.JsonTextReader.ProcessValueComma()", file="JsonTextReader.cs"];
m6_451 [label="_currentState != State.PostValue", span="821-821", cluster="Newtonsoft.Json.JsonTextReader.ProcessValueComma()", file="JsonTextReader.cs"];
m6_452 [label="SetToken(JsonToken.Undefined)", span="823-823", cluster="Newtonsoft.Json.JsonTextReader.ProcessValueComma()", file="JsonTextReader.cs"];
m6_453 [label="throw CreateUnexpectedCharacterException(',');", span="824-824", cluster="Newtonsoft.Json.JsonTextReader.ProcessValueComma()", file="JsonTextReader.cs"];
m6_454 [label="SetStateBasedOnCurrent()", span="827-827", cluster="Newtonsoft.Json.JsonTextReader.ProcessValueComma()", file="JsonTextReader.cs"];
m6_455 [label="Exit Newtonsoft.Json.JsonTextReader.ProcessValueComma()", span="817-817", cluster="Newtonsoft.Json.JsonTextReader.ProcessValueComma()", file="JsonTextReader.cs"];
m6_65 [label="Entry Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", span="961-961", cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonTextReader.cs"];
m6_665 [label="Entry Newtonsoft.Json.JsonTextReader.ParseUnicode()", span="1225-1225", cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="JsonTextReader.cs"];
m6_677 [label="EnsureChars(4, true)", span="1228-1228", cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="JsonTextReader.cs"];
m6_678 [label="char hexChar = Convert.ToChar(ConvertUtils.HexTextToInt(_chars, _charPos, _charPos + 4))", span="1230-1230", cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="JsonTextReader.cs"];
m6_680 [label="_charPos += 4", span="1233-1233", cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="JsonTextReader.cs"];
m6_681 [label="throw JsonReaderException.Create(this, ''Unexpected end while parsing unicode character.'');", span="1237-1237", cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="JsonTextReader.cs"];
m6_676 [label="char writeChar", span="1227-1227", cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="JsonTextReader.cs"];
m6_679 [label="writeChar = hexChar", span="1231-1231", cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="JsonTextReader.cs"];
m6_682 [label="return writeChar;", span="1239-1239", cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="JsonTextReader.cs"];
m6_683 [label="Exit Newtonsoft.Json.JsonTextReader.ParseUnicode()", span="1225-1225", cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="JsonTextReader.cs"];
m6_170 [label="Entry Newtonsoft.Json.JsonTextReader.ParseValue()", span="1539-1539", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m6_852 [label="char currentChar = _chars[_charPos]", span="1543-1543", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m6_855 [label="_charsUsed == _charPos", span="1548-1548", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m6_856 [label="ReadData(false) == 0", span="1550-1550", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m6_858 [label="_charPos++", span="1557-1557", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m6_861 [label="ParseString(currentChar, ReadType.Read)", span="1562-1562", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m6_864 [label="ParseTrue()", span="1565-1565", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m6_867 [label="ParseFalse()", span="1568-1568", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m6_870 [label="EnsureChars(1, true)", span="1571-1571", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m6_871 [label="char next = _chars[_charPos + 1]", span="1573-1573", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m6_873 [label="ParseNull()", span="1577-1577", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m6_875 [label="ParseConstructor()", span="1581-1581", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m6_876 [label="throw CreateUnexpectedCharacterException(_chars[_charPos]);", span="1585-1585", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m6_877 [label="_charPos++", span="1590-1590", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m6_878 [label="throw CreateUnexpectedEndException();", span="1591-1591", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m6_881 [label="ParseNumberNaN(ReadType.Read)", span="1595-1595", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m6_884 [label="ParseNumberPositiveInfinity(ReadType.Read)", span="1598-1598", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m6_887 [label="EnsureChars(1, true) && _chars[_charPos + 1] == 'I'", span="1601-1601", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m6_888 [label="ParseNumberNegativeInfinity(ReadType.Read)", span="1603-1603", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m6_889 [label="ParseNumber(ReadType.Read)", span="1607-1607", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m6_892 [label="ParseComment(true)", span="1611-1611", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m6_895 [label="ParseUndefined()", span="1614-1614", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m6_898 [label="_charPos++", span="1617-1617", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m6_899 [label="SetToken(JsonToken.StartObject)", span="1618-1618", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m6_902 [label="_charPos++", span="1621-1621", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m6_903 [label="SetToken(JsonToken.StartArray)", span="1622-1622", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m6_906 [label="_charPos++", span="1625-1625", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m6_907 [label="SetToken(JsonToken.EndArray)", span="1626-1626", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m6_910 [label="SetToken(JsonToken.Undefined)", span="1631-1631", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m6_913 [label="_charPos++", span="1634-1634", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m6_914 [label="SetToken(JsonToken.EndConstructor)", span="1635-1635", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m6_917 [label="ProcessCarriageReturn(false)", span="1638-1638", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m6_919 [label="ProcessLineFeed()", span="1641-1641", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m6_922 [label="_charPos++", span="1646-1646", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m6_924 [label="_charPos++", span="1652-1652", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m6_926 [label="ParseNumber(ReadType.Read)", span="1657-1657", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m6_928 [label="throw CreateUnexpectedCharacterException(currentChar);", span="1661-1661", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m6_851 [label=true, span="1541-1541", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m6_853 [label=currentChar, span="1545-1545", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m6_923 [label="char.IsWhiteSpace(currentChar)", span="1649-1649", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m6_925 [label="char.IsNumber(currentChar) || currentChar == '-' || currentChar == '.'", span="1655-1655", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m6_854 [label="'\0'", span="1547-1547", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m6_857 [label="return false;", span="1552-1552", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m6_860 [label="'\''", span="1561-1561", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m6_862 [label="return true;", span="1563-1563", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m6_863 [label="'t'", span="1564-1564", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m6_865 [label="return true;", span="1566-1566", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m6_866 [label="'f'", span="1567-1567", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m6_868 [label="return true;", span="1569-1569", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m6_869 [label="'n'", span="1570-1570", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m6_872 [label="next == 'u'", span="1575-1575", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m6_874 [label="next == 'e'", span="1579-1579", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m6_879 [label="return true;", span="1593-1593", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m6_880 [label="'N'", span="1594-1594", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m6_882 [label="return true;", span="1596-1596", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m6_883 [label="'I'", span="1597-1597", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m6_885 [label="return true;", span="1599-1599", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m6_886 [label="'-'", span="1600-1600", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m6_890 [label="return true;", span="1609-1609", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m6_891 [label="'/'", span="1610-1610", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m6_893 [label="return true;", span="1612-1612", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m6_894 [label="'u'", span="1613-1613", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m6_896 [label="return true;", span="1615-1615", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m6_897 [label="'{'", span="1616-1616", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m6_900 [label="return true;", span="1619-1619", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m6_901 [label="'['", span="1620-1620", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m6_904 [label="return true;", span="1623-1623", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m6_905 [label="']'", span="1624-1624", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m6_908 [label="return true;", span="1627-1627", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m6_909 [label="','", span="1628-1628", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m6_911 [label="return true;", span="1632-1632", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m6_912 [label="')'", span="1633-1633", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m6_915 [label="return true;", span="1636-1636", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m6_916 [label="StringUtils.CarriageReturn", span="1637-1637", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m6_918 [label="StringUtils.LineFeed", span="1640-1640", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m6_921 [label="StringUtils.Tab", span="1644-1644", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m6_927 [label="return true;", span="1658-1658", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m6_859 [label="''''", span="1560-1560", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m6_920 [label="' '", span="1643-1643", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m6_929 [label="Exit Newtonsoft.Json.JsonTextReader.ParseValue()", span="1539-1539", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m6_365 [label="Entry Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", span="1813-1813", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1063 [label="double value", span="1975-1975", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", color=green, community=0, file="JsonTextReader.cs"];
m6_1005 [label="object numberValue", span="1827-1827", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1057 [label=nonBase10, span="1957-1957", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1064 [label="ParseResult parseResult = ConvertUtils.DoubleTryParse(_stringReference.Chars, _stringReference.StartIndex, _stringReference.Length, out value)", span="1976-1976", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", color=green, community=0, file="JsonTextReader.cs"];
m6_1065 [label="parseResult == ParseResult.Success", span="1977-1977", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1066 [label="numberValue = value", span="1979-1979", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1097 [label="parseResult == ParseResult.Success", span="2057-2057", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", color=green, community=0, file="JsonTextReader.cs"];
m6_1096 [label="parseResult = ConvertUtils.DoubleTryParse(_stringReference.Chars, _stringReference.StartIndex, _stringReference.Length, out d)", span="2056-2056", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1098 [label="numberValue = d", span="2059-2059", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1099 [label="throw JsonReaderException.Create(this, ''Input string '{0}' is not a valid number.''.FormatWith(CultureInfo.InvariantCulture, number));", span="2063-2063", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1004 [label="_stringReference = new StringReference(_chars, initialPosition, _charPos - initialPosition)", span="1825-1825", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1006 [label="JsonToken numberType", span="1828-1828", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1102 [label="SetToken(numberType, numberValue, false)", span="2075-2075", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1010 [label="string number = _stringReference.ToString()", span="1835-1835", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1027 [label="int integer = number.StartsWith(''0x'', StringComparison.OrdinalIgnoreCase) ? Convert.ToInt32(number, 16) : Convert.ToInt32(number, 8)", span="1881-1881", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1031 [label="int value", span="1892-1892", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1049 [label="decimal value", span="1937-1937", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1078 [label="long value", span="2014-2014", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1091 [label="decimal d", span="2043-2043", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1095 [label="double d", span="2055-2055", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1008 [label="bool nonBase10 = (firstChar == '0' && _stringReference.Length > 1 && _stringReference.Chars[_stringReference.StartIndex + 1] != '.' && _stringReference.Chars[_stringReference.StartIndex + 1] != 'e' && _stringReference.Chars[_stringReference.StartIndex + 1] != 'E')", span="1831-1831", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1055 [label=singleDigit, span="1952-1952", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1058 [label="string number = _stringReference.ToString()", span="1959-1959", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_999 [label="ShiftBufferIfNeeded()", span="1815-1815", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1000 [label="char firstChar = _chars[_charPos]", span="1817-1817", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1001 [label="int initialPosition = _charPos", span="1818-1818", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1002 [label="ReadNumberIntoBuffer()", span="1820-1820", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1003 [label="SetPostValueState(true)", span="1823-1823", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1007 [label="bool singleDigit = (char.IsDigit(firstChar) && _stringReference.Length == 1)", span="1830-1830", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1016 [label="throw JsonReaderException.Create(this, ''Input string '{0}' is not a valid number.''.FormatWith(CultureInfo.InvariantCulture, number), ex);", span="1853-1853", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1019 [label="throw JsonReaderException.Create(this, ''Input string '{0}' is not a valid number.''.FormatWith(CultureInfo.InvariantCulture, _stringReference.ToString()));", span="1861-1861", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1026 [label="string number = _stringReference.ToString()", span="1877-1877", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1030 [label="throw JsonReaderException.Create(this, ''Input string '{0}' is not a valid integer.''.FormatWith(CultureInfo.InvariantCulture, number), ex);", span="1887-1887", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1032 [label="ParseResult parseResult = ConvertUtils.Int32TryParse(_stringReference.Chars, _stringReference.StartIndex, _stringReference.Length, out value)", span="1893-1893", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1036 [label="throw JsonReaderException.Create(this, ''JSON integer {0} is too large or small for an Int32.''.FormatWith(CultureInfo.InvariantCulture, _stringReference.ToString()));", span="1900-1900", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1037 [label="throw JsonReaderException.Create(this, ''Input string '{0}' is not a valid integer.''.FormatWith(CultureInfo.InvariantCulture, _stringReference.ToString()));", span="1904-1904", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1043 [label="string number = _stringReference.ToString()", span="1919-1919", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1047 [label="throw JsonReaderException.Create(this, ''Input string '{0}' is not a valid decimal.''.FormatWith(CultureInfo.InvariantCulture, number), ex);", span="1930-1930", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1048 [label="string number = _stringReference.ToString()", span="1935-1935", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1052 [label="throw JsonReaderException.Create(this, ''Input string '{0}' is not a valid decimal.''.FormatWith(CultureInfo.InvariantCulture, _stringReference.ToString()));", span="1944-1944", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1062 [label="throw JsonReaderException.Create(this, ''Input string '{0}' is not a valid double.''.FormatWith(CultureInfo.InvariantCulture, number), ex);", span="1970-1970", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1067 [label="throw JsonReaderException.Create(this, ''Input string '{0}' is not a valid double.''.FormatWith(CultureInfo.InvariantCulture, _stringReference.ToString()));", span="1983-1983", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1073 [label="string number = _stringReference.ToString()", span="1999-1999", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1076 [label="throw JsonReaderException.Create(this, ''Input string '{0}' is not a valid number.''.FormatWith(CultureInfo.InvariantCulture, number), ex);", span="2007-2007", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1079 [label="ParseResult parseResult = ConvertUtils.Int64TryParse(_stringReference.Chars, _stringReference.StartIndex, _stringReference.Length, out value)", span="2015-2015", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1084 [label="string number = _stringReference.ToString()", span="2024-2024", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1086 [label="throw JsonReaderException.Create(this, ''JSON integer {0} is too large to parse.''.FormatWith(CultureInfo.InvariantCulture, _stringReference.ToString()));", span="2028-2028", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1089 [label="string number = _stringReference.ToString()", span="2039-2039", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1090 [label="_floatParseHandling == FloatParseHandling.Decimal", span="2041-2041", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1094 [label="throw JsonReaderException.Create(this, ''Input string '{0}' is not a valid decimal.''.FormatWith(CultureInfo.InvariantCulture, number));", span="2050-2050", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1101 [label="ClearRecentString()", span="2072-2072", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1068 [label="numberType = JsonToken.Float", span="1987-1987", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1100 [label="numberType = JsonToken.Float", span="2067-2067", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1024 [label="numberValue = firstChar - 48", span="1873-1873", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1041 [label="numberValue = (decimal)firstChar - 48", span="1915-1915", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1056 [label="numberValue = (double)firstChar - 48", span="1955-1955", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1070 [label="numberValue = (long)firstChar - 48", span="1994-1994", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1021 [label="numberValue = number", span="1866-1866", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1020 [label="numberType = JsonToken.String", span="1865-1865", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1028 [label="numberValue = integer", span="1883-1883", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1038 [label="numberType = JsonToken.Integer", span="1908-1908", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1034 [label="numberValue = value", span="1896-1896", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1045 [label="numberValue = Convert.ToDecimal(integer)", span="1926-1926", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1053 [label="numberType = JsonToken.Float", span="1948-1948", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1051 [label="numberValue = value", span="1940-1940", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1060 [label="numberValue = Convert.ToDouble(integer)", span="1966-1966", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1071 [label="numberType = JsonToken.Integer", span="1995-1995", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1074 [label="numberValue = number.StartsWith(''0x'', StringComparison.OrdinalIgnoreCase) ? Convert.ToInt64(number, 16) : Convert.ToInt64(number, 8)", span="2003-2003", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1077 [label="numberType = JsonToken.Integer", span="2010-2010", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1081 [label="numberValue = value", span="2018-2018", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1082 [label="numberType = JsonToken.Integer", span="2019-2019", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1087 [label="numberValue = BigIntegerParse(number, CultureInfo.InvariantCulture)", span="2031-2031", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1088 [label="numberType = JsonToken.Integer", span="2032-2032", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1093 [label="numberValue = d", span="2046-2046", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1009 [label="readType == ReadType.ReadAsString", span="1833-1833", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1011 [label=nonBase10, span="1838-1838", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1012 [label="number.StartsWith(''0x'', StringComparison.OrdinalIgnoreCase)", span="1842-1842", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1013 [label="Convert.ToInt64(number, 16)", span="1844-1844", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1014 [label="Convert.ToInt64(number, 8)", span="1848-1848", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1018 [label="!double.TryParse(number, NumberStyles.Float, CultureInfo.InvariantCulture, out value)", span="1859-1859", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1025 [label=nonBase10, span="1875-1875", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1050 [label="decimal.TryParse(number, NumberStyles.Number | NumberStyles.AllowExponent, CultureInfo.InvariantCulture, out value)", span="1938-1938", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1072 [label=nonBase10, span="1997-1997", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1092 [label="decimal.TryParse(number, NumberStyles.Number | NumberStyles.AllowExponent, CultureInfo.InvariantCulture, out d)", span="2044-2044", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1042 [label=nonBase10, span="1917-1917", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1054 [label="readType == ReadType.ReadAsDouble", span="1950-1950", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1059 [label="long integer = number.StartsWith(''0x'', StringComparison.OrdinalIgnoreCase) ? Convert.ToInt64(number, 16) : Convert.ToInt64(number, 8)", span="1964-1964", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1023 [label=singleDigit, span="1870-1870", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1040 [label=singleDigit, span="1912-1912", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1069 [label=singleDigit, span="1991-1991", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1015 [label=Exception, span="1851-1851", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1029 [label=Exception, span="1885-1885", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1033 [label="parseResult == ParseResult.Success", span="1894-1894", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1035 [label="parseResult == ParseResult.Overflow", span="1898-1898", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1044 [label="long integer = number.StartsWith(''0x'', StringComparison.OrdinalIgnoreCase) ? Convert.ToInt64(number, 16) : Convert.ToInt64(number, 8)", span="1924-1924", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1046 [label=Exception, span="1928-1928", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1061 [label=Exception, span="1968-1968", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1075 [label=Exception, span="2005-2005", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1080 [label="parseResult == ParseResult.Success", span="2016-2016", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1083 [label="parseResult == ParseResult.Overflow", span="2021-2021", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1085 [label="number.Length > MaximumJavascriptIntegerCharacterLength", span="2026-2026", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1022 [label="readType == ReadType.ReadAsInt32", span="1868-1868", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1017 [label="double value", span="1858-1858", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1039 [label="readType == ReadType.ReadAsDecimal", span="1910-1910", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1103 [label="Exit Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", span="1813-1813", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m6_1111 [label="Entry System.Convert.ToDecimal(long)", span="0-0", cluster="System.Convert.ToDecimal(long)", file="JsonTextReader.cs"];
m6_178 [label="Entry Newtonsoft.Json.JsonTextReader.ReadAsInt32()", span="421-421", cluster="Newtonsoft.Json.JsonTextReader.ReadAsInt32()", file="JsonTextReader.cs"];
m6_179 [label="return (int?)ReadNumberValue(ReadType.ReadAsInt32);", span="423-423", cluster="Newtonsoft.Json.JsonTextReader.ReadAsInt32()", file="JsonTextReader.cs"];
m6_180 [label="Exit Newtonsoft.Json.JsonTextReader.ReadAsInt32()", span="421-421", cluster="Newtonsoft.Json.JsonTextReader.ReadAsInt32()", file="JsonTextReader.cs"];
m6_171 [label="Entry Newtonsoft.Json.JsonTextReader.ParseObject()", span="1383-1383", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs"];
m6_775 [label="char currentChar = _chars[_charPos]", span="1387-1387", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs"];
m6_778 [label="_charsUsed == _charPos", span="1392-1392", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs"];
m6_779 [label="ReadData(false) == 0", span="1394-1394", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs"];
m6_781 [label="_charPos++", span="1401-1401", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs"];
m6_783 [label="SetToken(JsonToken.EndObject)", span="1405-1405", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs"];
m6_784 [label="_charPos++", span="1406-1406", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs"];
m6_787 [label="ParseComment(true)", span="1409-1409", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs"];
m6_790 [label="ProcessCarriageReturn(false)", span="1412-1412", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs"];
m6_792 [label="ProcessLineFeed()", span="1415-1415", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs"];
m6_795 [label="_charPos++", span="1420-1420", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs"];
m6_797 [label="_charPos++", span="1426-1426", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs"];
m6_798 [label="return ParseProperty();", span="1430-1430", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs"];
m6_774 [label=true, span="1385-1385", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs"];
m6_776 [label=currentChar, span="1389-1389", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs"];
m6_796 [label="char.IsWhiteSpace(currentChar)", span="1423-1423", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs"];
m6_777 [label="'\0'", span="1391-1391", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs"];
m6_780 [label="return false;", span="1396-1396", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs"];
m6_782 [label="'}'", span="1404-1404", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs"];
m6_785 [label="return true;", span="1407-1407", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs"];
m6_786 [label="'/'", span="1408-1408", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs"];
m6_788 [label="return true;", span="1410-1410", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs"];
m6_789 [label="StringUtils.CarriageReturn", span="1411-1411", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs"];
m6_791 [label="StringUtils.LineFeed", span="1414-1414", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs"];
m6_794 [label="StringUtils.Tab", span="1418-1418", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs"];
m6_793 [label="' '", span="1417-1417", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs"];
m6_799 [label="Exit Newtonsoft.Json.JsonTextReader.ParseObject()", span="1383-1383", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs"];
m6_1107 [label="Entry Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string, System.Exception)", span="113-113", cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string, System.Exception)", file="JsonTextReader.cs"];
m6_1279 [label="Newtonsoft.Json.JsonTextReader", span="", file="JsonTextReader.cs"];
m7_105 [label="Entry XmlDocument.cstr", span="", cluster="XmlDocument.cstr", file="PerformanceTests.cs"];
m7_255 [label="Entry Unk.Descendants", span="", cluster="Unk.Descendants", file="PerformanceTests.cs"];
m7_344 [label="Entry System.IO.MemoryStream.ToArray()", span="0-0", cluster="System.IO.MemoryStream.ToArray()", file="PerformanceTests.cs"];
m7_130 [label="Entry System.Console.WriteLine(string, object)", span="0-0", cluster="System.Console.WriteLine(string, object)", file="PerformanceTests.cs"];
m7_697 [label="Entry System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize(System.IO.Stream)", span="0-0", cluster="System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize(System.IO.Stream)", file="PerformanceTests.cs"];
m7_533 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteStartObject()", span="198-198", cluster="Newtonsoft.Json.JsonTextWriter.WriteStartObject()", file="PerformanceTests.cs"];
m7_30 [label="Entry Newtonsoft.Json.JsonTextReader.Read()", span="366-366", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="PerformanceTests.cs"];
m7_525 [label="Entry Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", span="34-34", cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", file="PerformanceTests.cs"];
m7_106 [label="Entry System.IO.File.OpenRead(string)", span="0-0", cluster="System.IO.File.OpenRead(string)", file="PerformanceTests.cs"];
m7_162 [label="Entry Newtonsoft.Json.Tests.PerformanceTests.LargeArrayAddPerformance()", span="350-350", cluster="Newtonsoft.Json.Tests.PerformanceTests.LargeArrayAddPerformance()", file="PerformanceTests.cs"];
m7_163 [label="JArray a1 = new JArray()", span="352-352", cluster="Newtonsoft.Json.Tests.PerformanceTests.LargeArrayAddPerformance()", file="PerformanceTests.cs"];
m7_164 [label="JArray a2 = new JArray()", span="354-354", cluster="Newtonsoft.Json.Tests.PerformanceTests.LargeArrayAddPerformance()", file="PerformanceTests.cs"];
m7_170 [label="TimeOperation(() =>\r\n            {\r\n                for (int i = 0; i < interations; i++)\r\n                {\r\n                    a1.Add(interations);\r\n                }\r\n\r\n                return a1;\r\n            }, ''Small'')", span="362-370", cluster="Newtonsoft.Json.Tests.PerformanceTests.LargeArrayAddPerformance()", file="PerformanceTests.cs"];
m7_165 [label="int i = 0", span="355-355", cluster="Newtonsoft.Json.Tests.PerformanceTests.LargeArrayAddPerformance()", file="PerformanceTests.cs"];
m7_167 [label="a2.Add(i)", span="357-357", cluster="Newtonsoft.Json.Tests.PerformanceTests.LargeArrayAddPerformance()", file="PerformanceTests.cs"];
m7_171 [label="TimeOperation(() =>\r\n            {\r\n                for (int i = 0; i < interations; i++)\r\n                {\r\n                    a2.Add(interations);\r\n                }\r\n\r\n                return a2;\r\n            }, ''Large'')", span="372-380", cluster="Newtonsoft.Json.Tests.PerformanceTests.LargeArrayAddPerformance()", file="PerformanceTests.cs"];
m7_166 [label="i < 100000", span="355-355", cluster="Newtonsoft.Json.Tests.PerformanceTests.LargeArrayAddPerformance()", file="PerformanceTests.cs"];
m7_168 [label="i++", span="355-355", cluster="Newtonsoft.Json.Tests.PerformanceTests.LargeArrayAddPerformance()", file="PerformanceTests.cs"];
m7_169 [label="int interations = 1000", span="360-360", cluster="Newtonsoft.Json.Tests.PerformanceTests.LargeArrayAddPerformance()", file="PerformanceTests.cs"];
m7_172 [label="Exit Newtonsoft.Json.Tests.PerformanceTests.LargeArrayAddPerformance()", span="350-350", cluster="Newtonsoft.Json.Tests.PerformanceTests.LargeArrayAddPerformance()", file="PerformanceTests.cs"];
m7_416 [label="Entry System.DateTime.AddDays(double)", span="0-0", cluster="System.DateTime.AddDays(double)", file="PerformanceTests.cs"];
m7_583 [label="Entry Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNet<T>(string, bool)", span="920-920", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNet<T>(string, bool)", file="PerformanceTests.cs"];
m7_584 [label="Type type = typeof(T)", span="922-922", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNet<T>(string, bool)", file="PerformanceTests.cs"];
m7_586 [label=isoDateTimeConverter, span="928-928", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNet<T>(string, bool)", file="PerformanceTests.cs"];
m7_588 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="933-933", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNet<T>(string, bool)", file="PerformanceTests.cs"];
m7_585 [label="JsonSerializer serializer = new JsonSerializer()", span="924-924", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNet<T>(string, bool)", file="PerformanceTests.cs"];
m7_589 [label="var value = (T)serializer.Deserialize(reader, type)", span="937-937", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNet<T>(string, bool)", file="PerformanceTests.cs"];
m7_587 [label="serializer.Converters.Add(new IsoDateTimeConverter())", span="930-930", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNet<T>(string, bool)", file="PerformanceTests.cs"];
m7_590 [label="return value;", span="938-938", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNet<T>(string, bool)", file="PerformanceTests.cs"];
m7_591 [label="Exit Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNet<T>(string, bool)", span="920-920", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNet<T>(string, bool)", file="PerformanceTests.cs"];
m7_208 [label="Entry Newtonsoft.Json.Linq.JObject.Parse(string)", span="409-409", cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", file="PerformanceTests.cs"];
m7_145 [label="Entry Newtonsoft.Json.Linq.JArray.Add(Newtonsoft.Json.Linq.JToken)", span="346-346", cluster="Newtonsoft.Json.Linq.JArray.Add(Newtonsoft.Json.Linq.JToken)", file="PerformanceTests.cs"];
m7_198 [label="Entry int.ToString()", span="0-0", cluster="int.ToString()", file="PerformanceTests.cs"];
m7_545 [label="Entry Newtonsoft.Json.Tests.PerformanceTests.SerializeBinaryFormatter(object)", span="877-877", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeBinaryFormatter(object)", file="PerformanceTests.cs"];
m7_554 [label="string json", span="879-879", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeBinaryFormatter(object)", file="PerformanceTests.cs"];
m7_557 [label="formatter.Serialize(ms, value)", span="882-882", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeBinaryFormatter(object)", file="PerformanceTests.cs"];
m7_555 [label="MemoryStream ms = new MemoryStream(Buffer)", span="880-880", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeBinaryFormatter(object)", file="PerformanceTests.cs"];
m7_556 [label="BinaryFormatter formatter = new BinaryFormatter()", span="881-881", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeBinaryFormatter(object)", file="PerformanceTests.cs"];
m7_558 [label="json = ''Bytes = '' + ms.Position", span="884-884", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeBinaryFormatter(object)", file="PerformanceTests.cs"];
m7_559 [label="return json;", span="886-886", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeBinaryFormatter(object)", file="PerformanceTests.cs"];
m7_560 [label="Exit Newtonsoft.Json.Tests.PerformanceTests.SerializeBinaryFormatter(object)", span="877-877", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeBinaryFormatter(object)", file="PerformanceTests.cs"];
m7_439 [label="Entry System.IO.StreamReader.ReadToEnd()", span="0-0", cluster="System.IO.StreamReader.ReadToEnd()", file="PerformanceTests.cs"];
m7_72 [label="Entry Newtonsoft.Json.Tests.PerformanceTests.Deserialize()", span="231-231", cluster="Newtonsoft.Json.Tests.PerformanceTests.Deserialize()", file="PerformanceTests.cs"];
m7_73 [label="BenchmarkDeserializeMethod<TestClass>(SerializeMethod.DataContractSerializer, XmlText)", span="233-233", cluster="Newtonsoft.Json.Tests.PerformanceTests.Deserialize()", file="PerformanceTests.cs"];
m7_74 [label="BenchmarkDeserializeMethod<TestClass>(SerializeMethod.BinaryFormatter, HexToBytes(BinaryFormatterHex))", span="234-234", cluster="Newtonsoft.Json.Tests.PerformanceTests.Deserialize()", file="PerformanceTests.cs"];
m7_75 [label="DeserializeTests<TestClass>(JsonText)", span="235-235", cluster="Newtonsoft.Json.Tests.PerformanceTests.Deserialize()", file="PerformanceTests.cs"];
m7_76 [label="BenchmarkDeserializeMethod<TestClass>(SerializeMethod.JsonNetWithIsoConverter, JsonIsoText)", span="236-236", cluster="Newtonsoft.Json.Tests.PerformanceTests.Deserialize()", file="PerformanceTests.cs"];
m7_77 [label="BenchmarkDeserializeMethod<TestClass>(SerializeMethod.JsonNetBinary, HexToBytes(BsonHex))", span="237-237", cluster="Newtonsoft.Json.Tests.PerformanceTests.Deserialize()", file="PerformanceTests.cs"];
m7_78 [label="Exit Newtonsoft.Json.Tests.PerformanceTests.Deserialize()", span="231-231", cluster="Newtonsoft.Json.Tests.PerformanceTests.Deserialize()", file="PerformanceTests.cs"];
m7_47 [label="Entry System.IO.File.ReadAllText(string)", span="0-0", cluster="System.IO.File.ReadAllText(string)", file="PerformanceTests.cs"];
m7_39 [label="Entry Newtonsoft.Json.Tests.PerformanceTests.BenchmarkDeserializeMethod<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object, int?, bool)", span="891-891", cluster="Newtonsoft.Json.Tests.PerformanceTests.BenchmarkDeserializeMethod<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object, int?, bool)", file="PerformanceTests.cs"];
m7_561 [label="GC.Collect()", span="893-893", cluster="Newtonsoft.Json.Tests.PerformanceTests.BenchmarkDeserializeMethod<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object, int?, bool)", file="PerformanceTests.cs"];
m7_563 [label=warmUp, span="896-896", cluster="Newtonsoft.Json.Tests.PerformanceTests.BenchmarkDeserializeMethod<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object, int?, bool)", file="PerformanceTests.cs"];
m7_564 [label="Deserialize<T>(method, json)", span="898-898", cluster="Newtonsoft.Json.Tests.PerformanceTests.BenchmarkDeserializeMethod<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object, int?, bool)", file="PerformanceTests.cs"];
m7_567 [label="iterations = iterations ?? Iterations", span="904-904", cluster="Newtonsoft.Json.Tests.PerformanceTests.BenchmarkDeserializeMethod<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object, int?, bool)", file="PerformanceTests.cs"];
m7_571 [label="value = Deserialize<T>(method, json)", span="909-909", cluster="Newtonsoft.Json.Tests.PerformanceTests.BenchmarkDeserializeMethod<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object, int?, bool)", file="PerformanceTests.cs"];
m7_574 [label="Console.WriteLine(''Deserialize method: {0}'', method)", span="914-914", cluster="Newtonsoft.Json.Tests.PerformanceTests.BenchmarkDeserializeMethod<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object, int?, bool)", file="PerformanceTests.cs"];
m7_562 [label="GC.WaitForPendingFinalizers()", span="894-894", cluster="Newtonsoft.Json.Tests.PerformanceTests.BenchmarkDeserializeMethod<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object, int?, bool)", file="PerformanceTests.cs"];
m7_565 [label="Stopwatch timed = new Stopwatch()", span="901-901", cluster="Newtonsoft.Json.Tests.PerformanceTests.BenchmarkDeserializeMethod<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object, int?, bool)", file="PerformanceTests.cs"];
m7_566 [label="timed.Start()", span="902-902", cluster="Newtonsoft.Json.Tests.PerformanceTests.BenchmarkDeserializeMethod<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object, int?, bool)", file="PerformanceTests.cs"];
m7_573 [label="timed.Stop()", span="912-912", cluster="Newtonsoft.Json.Tests.PerformanceTests.BenchmarkDeserializeMethod<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object, int?, bool)", file="PerformanceTests.cs"];
m7_575 [label="Console.WriteLine(''{0} ms'', timed.ElapsedMilliseconds)", span="915-915", cluster="Newtonsoft.Json.Tests.PerformanceTests.BenchmarkDeserializeMethod<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object, int?, bool)", file="PerformanceTests.cs"];
m7_568 [label="T value = default(T)", span="906-906", cluster="Newtonsoft.Json.Tests.PerformanceTests.BenchmarkDeserializeMethod<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object, int?, bool)", file="PerformanceTests.cs"];
m7_570 [label="x < iterations.Value", span="907-907", cluster="Newtonsoft.Json.Tests.PerformanceTests.BenchmarkDeserializeMethod<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object, int?, bool)", file="PerformanceTests.cs"];
m7_569 [label="int x = 0", span="907-907", cluster="Newtonsoft.Json.Tests.PerformanceTests.BenchmarkDeserializeMethod<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object, int?, bool)", file="PerformanceTests.cs"];
m7_576 [label="Console.WriteLine(value)", span="916-916", cluster="Newtonsoft.Json.Tests.PerformanceTests.BenchmarkDeserializeMethod<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object, int?, bool)", file="PerformanceTests.cs"];
m7_572 [label="x++", span="907-907", cluster="Newtonsoft.Json.Tests.PerformanceTests.BenchmarkDeserializeMethod<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object, int?, bool)", file="PerformanceTests.cs"];
m7_577 [label="Console.WriteLine()", span="917-917", cluster="Newtonsoft.Json.Tests.PerformanceTests.BenchmarkDeserializeMethod<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object, int?, bool)", file="PerformanceTests.cs"];
m7_578 [label="Exit Newtonsoft.Json.Tests.PerformanceTests.BenchmarkDeserializeMethod<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object, int?, bool)", span="891-891", cluster="Newtonsoft.Json.Tests.PerformanceTests.BenchmarkDeserializeMethod<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object, int?, bool)", file="PerformanceTests.cs"];
m7_713 [label="Entry Newtonsoft.Json.Tests.PerformanceTests.SerializeUnicodeChars()", span="1132-1132", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeUnicodeChars()", file="PerformanceTests.cs"];
m7_714 [label="string s = (new string('\0', 30))", span="1134-1134", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeUnicodeChars()", file="PerformanceTests.cs"];
m7_715 [label="BenchmarkSerializeMethod(SerializeMethod.JsonNet, s)", span="1136-1136", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeUnicodeChars()", file="PerformanceTests.cs"];
m7_716 [label="Exit Newtonsoft.Json.Tests.PerformanceTests.SerializeUnicodeChars()", span="1132-1132", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeUnicodeChars()", file="PerformanceTests.cs"];
m7_254 [label="Entry Unk.Parse", span="", cluster="Unk.Parse", file="PerformanceTests.cs"];
m7_631 [label="Entry Newtonsoft.Json.JsonTextReader.ReadAsString()", span="439-439", cluster="Newtonsoft.Json.JsonTextReader.ReadAsString()", file="PerformanceTests.cs"];
m7_341 [label="Entry Newtonsoft.Json.Bson.BsonWriter.BsonWriter(System.IO.Stream)", span="65-65", cluster="Newtonsoft.Json.Bson.BsonWriter.BsonWriter(System.IO.Stream)", file="PerformanceTests.cs"];
m7_527 [label="Entry Newtonsoft.Json.Linq.JObject.JObject(params object[])", span="105-105", cluster="Newtonsoft.Json.Linq.JObject.JObject(params object[])", file="PerformanceTests.cs"];
m7_543 [label="Entry System.IO.StringWriter.ToString()", span="0-0", cluster="System.IO.StringWriter.ToString()", file="PerformanceTests.cs"];
m7_534 [label="Entry Newtonsoft.Json.JsonTextWriter.WritePropertyName(string)", span="254-254", cluster="Newtonsoft.Json.JsonTextWriter.WritePropertyName(string)", file="PerformanceTests.cs"];
m7_429 [label="Entry Newtonsoft.Json.Tests.PerformanceTests.SerializeDataContractJson(object)", span="708-708", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeDataContractJson(object)", file="PerformanceTests.cs"];
m7_430 [label="DataContractJsonSerializer dataContractSerializer\r\n                = new DataContractJsonSerializer(value.GetType())", span="710-711", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeDataContractJson(object)", file="PerformanceTests.cs"];
m7_432 [label="dataContractSerializer.WriteObject(ms, value)", span="714-714", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeDataContractJson(object)", file="PerformanceTests.cs"];
m7_431 [label="MemoryStream ms = new MemoryStream()", span="713-713", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeDataContractJson(object)", file="PerformanceTests.cs"];
m7_433 [label="ms.Seek(0, SeekOrigin.Begin)", span="716-716", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeDataContractJson(object)", file="PerformanceTests.cs"];
m7_434 [label="StreamReader sr = new StreamReader(ms)", span="718-718", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeDataContractJson(object)", file="PerformanceTests.cs"];
m7_435 [label="return sr.ReadToEnd();", span="720-720", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeDataContractJson(object)", file="PerformanceTests.cs"];
m7_436 [label="Exit Newtonsoft.Json.Tests.PerformanceTests.SerializeDataContractJson(object)", span="708-708", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeDataContractJson(object)", file="PerformanceTests.cs"];
m7_634 [label="Entry Newtonsoft.Json.Tests.PerformanceTests.CreateAddress(Newtonsoft.Json.JsonTextReader)", span="1002-1002", cluster="Newtonsoft.Json.Tests.PerformanceTests.CreateAddress(Newtonsoft.Json.JsonTextReader)", file="PerformanceTests.cs"];
m7_635 [label="Address a = new Address()", span="1004-1004", cluster="Newtonsoft.Json.Tests.PerformanceTests.CreateAddress(Newtonsoft.Json.JsonTextReader)", file="PerformanceTests.cs"];
m7_636 [label="reader.Read()", span="1005-1005", cluster="Newtonsoft.Json.Tests.PerformanceTests.CreateAddress(Newtonsoft.Json.JsonTextReader)", file="PerformanceTests.cs"];
m7_637 [label="reader.TokenType == JsonToken.PropertyName", span="1007-1007", cluster="Newtonsoft.Json.Tests.PerformanceTests.CreateAddress(Newtonsoft.Json.JsonTextReader)", file="PerformanceTests.cs"];
m7_638 [label="(string)reader.Value", span="1009-1009", cluster="Newtonsoft.Json.Tests.PerformanceTests.CreateAddress(Newtonsoft.Json.JsonTextReader)", file="PerformanceTests.cs"];
m7_640 [label="a.Street = reader.ReadAsString()", span="1012-1012", cluster="Newtonsoft.Json.Tests.PerformanceTests.CreateAddress(Newtonsoft.Json.JsonTextReader)", file="PerformanceTests.cs"];
m7_642 [label="a.Phone = reader.ReadAsString()", span="1015-1015", cluster="Newtonsoft.Json.Tests.PerformanceTests.CreateAddress(Newtonsoft.Json.JsonTextReader)", file="PerformanceTests.cs"];
m7_644 [label="a.Entered = reader.ReadAsDateTime().GetValueOrDefault()", span="1018-1018", cluster="Newtonsoft.Json.Tests.PerformanceTests.CreateAddress(Newtonsoft.Json.JsonTextReader)", file="PerformanceTests.cs"];
m7_645 [label="return a;", span="1027-1027", cluster="Newtonsoft.Json.Tests.PerformanceTests.CreateAddress(Newtonsoft.Json.JsonTextReader)", file="PerformanceTests.cs"];
m7_639 [label="''Street''", span="1011-1011", cluster="Newtonsoft.Json.Tests.PerformanceTests.CreateAddress(Newtonsoft.Json.JsonTextReader)", file="PerformanceTests.cs"];
m7_641 [label="''Phone''", span="1014-1014", cluster="Newtonsoft.Json.Tests.PerformanceTests.CreateAddress(Newtonsoft.Json.JsonTextReader)", file="PerformanceTests.cs"];
m7_643 [label="''Entered''", span="1017-1017", cluster="Newtonsoft.Json.Tests.PerformanceTests.CreateAddress(Newtonsoft.Json.JsonTextReader)", file="PerformanceTests.cs"];
m7_646 [label="Exit Newtonsoft.Json.Tests.PerformanceTests.CreateAddress(Newtonsoft.Json.JsonTextReader)", span="1002-1002", cluster="Newtonsoft.Json.Tests.PerformanceTests.CreateAddress(Newtonsoft.Json.JsonTextReader)", file="PerformanceTests.cs"];
m7_36 [label="Entry System.Linq.Enumerable.Range(int, int)", span="0-0", cluster="System.Linq.Enumerable.Range(int, int)", file="PerformanceTests.cs"];
m7_89 [label="Entry Newtonsoft.Json.Tests.PerformanceTests.SerializeSizeData()", span="255-255", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeSizeData()", file="PerformanceTests.cs"];
m7_90 [label="Image image = new Image()", span="257-257", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeSizeData()", file="PerformanceTests.cs"];
m7_91 [label="image.Data = System.IO.File.ReadAllBytes(@''bunny_pancake.jpg'')", span="258-258", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeSizeData()", file="PerformanceTests.cs"];
m7_92 [label="image.FileName = ''bunny_pancake.jpg''", span="259-259", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeSizeData()", file="PerformanceTests.cs"];
m7_93 [label="image.Author = ''Hironori Akutagawa''", span="260-260", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeSizeData()", file="PerformanceTests.cs"];
m7_94 [label="image.Caption = ''I have no idea what you are talking about so here's a bunny with a pancake on its head''", span="261-261", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeSizeData()", file="PerformanceTests.cs"];
m7_95 [label="SerializeSize(image)", span="263-263", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeSizeData()", file="PerformanceTests.cs"];
m7_96 [label="Exit Newtonsoft.Json.Tests.PerformanceTests.SerializeSizeData()", span="255-255", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeSizeData()", file="PerformanceTests.cs"];
m7_536 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(string)", span="407-407", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(string)", file="PerformanceTests.cs"];
m7_422 [label="Entry Newtonsoft.Json.Tests.SimpleObject.SimpleObject()", span="1357-1357", cluster="Newtonsoft.Json.Tests.SimpleObject.SimpleObject()", file="PerformanceTests.cs"];
m7_594 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", span="799-799", cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", file="PerformanceTests.cs"];
m7_131 [label="Entry System.Diagnostics.Stopwatch.Stop()", span="0-0", cluster="System.Diagnostics.Stopwatch.Stop()", file="PerformanceTests.cs"];
m7_689 [label="Entry Newtonsoft.Json.Tests.PerformanceTests.DeserializeDataContract<T>(string)", span="1088-1088", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeDataContract<T>(string)", file="PerformanceTests.cs"];
m7_690 [label="MemoryStream ms = new MemoryStream(Encoding.UTF8.GetBytes(xml))", span="1090-1090", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeDataContract<T>(string)", file="PerformanceTests.cs"];
m7_691 [label="DataContractSerializer serializer = new DataContractSerializer(typeof(T))", span="1092-1092", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeDataContract<T>(string)", file="PerformanceTests.cs"];
m7_692 [label="return (T)serializer.ReadObject(ms);", span="1093-1093", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeDataContract<T>(string)", file="PerformanceTests.cs"];
m7_693 [label="Exit Newtonsoft.Json.Tests.PerformanceTests.DeserializeDataContract<T>(string)", span="1088-1088", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeDataContract<T>(string)", file="PerformanceTests.cs"];
m7_718 [label="Entry Newtonsoft.Json.Tests.PerformanceTests.ParseJObject()", span="1140-1140", cluster="Newtonsoft.Json.Tests.PerformanceTests.ParseJObject()", file="PerformanceTests.cs"];
m7_719 [label="Stopwatch timer = new Stopwatch()", span="1142-1142", cluster="Newtonsoft.Json.Tests.PerformanceTests.ParseJObject()", file="PerformanceTests.cs"];
m7_720 [label="timer.Start()", span="1143-1143", cluster="Newtonsoft.Json.Tests.PerformanceTests.ParseJObject()", file="PerformanceTests.cs"];
m7_725 [label="timer.Stop()", span="1154-1154", cluster="Newtonsoft.Json.Tests.PerformanceTests.ParseJObject()", file="PerformanceTests.cs"];
m7_726 [label="string linq = timer.Elapsed.TotalSeconds.ToString()", span="1156-1156", cluster="Newtonsoft.Json.Tests.PerformanceTests.ParseJObject()", file="PerformanceTests.cs"];
m7_721 [label="int i = 0", span="1144-1144", cluster="Newtonsoft.Json.Tests.PerformanceTests.ParseJObject()", file="PerformanceTests.cs"];
m7_722 [label="i < 100000", span="1144-1144", cluster="Newtonsoft.Json.Tests.PerformanceTests.ParseJObject()", file="PerformanceTests.cs"];
m7_724 [label="i++", span="1144-1144", cluster="Newtonsoft.Json.Tests.PerformanceTests.ParseJObject()", file="PerformanceTests.cs"];
m7_723 [label="JObject o = JObject.Parse(@''{\r\n  ''''CPU'''': ''''Intel'''',\r\n  ''''Drives'''': [\r\n    ''''DVD read/writer'''',\r\n    ''''500 gigabyte hard drive''''\r\n  ]\r\n}'')", span="1146-1152", cluster="Newtonsoft.Json.Tests.PerformanceTests.ParseJObject()", file="PerformanceTests.cs"];
m7_727 [label="Console.WriteLine(linq)", span="1157-1157", cluster="Newtonsoft.Json.Tests.PerformanceTests.ParseJObject()", file="PerformanceTests.cs"];
m7_728 [label="Exit Newtonsoft.Json.Tests.PerformanceTests.ParseJObject()", span="1140-1140", cluster="Newtonsoft.Json.Tests.PerformanceTests.ParseJObject()", file="PerformanceTests.cs"];
m7_31 [label="Entry Newtonsoft.Json.Tests.PerformanceTests.DeserializeDoubleList()", span="186-186", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeDoubleList()", file="PerformanceTests.cs"];
m7_32 [label="var json = new JArray(Enumerable.Range(0, 5000).Select(i => (double)i)).ToString(Formatting.None)", span="188-188", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeDoubleList()", color=red, community=0, file="PerformanceTests.cs"];
m7_33 [label="BenchmarkDeserializeMethod<IList<double>>(SerializeMethod.JsonNet, json, 1000)", span="190-190", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeDoubleList()", color=red, community=0, file="PerformanceTests.cs"];
m7_34 [label="Exit Newtonsoft.Json.Tests.PerformanceTests.DeserializeDoubleList()", span="186-186", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeDoubleList()", file="PerformanceTests.cs"];
m7_712 [label="Entry Newtonsoft.Json.Tests.LargeRecursiveTestClass.LargeRecursiveTestClass()", span="1259-1259", cluster="Newtonsoft.Json.Tests.LargeRecursiveTestClass.LargeRecursiveTestClass()", file="PerformanceTests.cs"];
m7_197 [label="Entry Newtonsoft.Json.Linq.JObject.JObject()", span="88-88", cluster="Newtonsoft.Json.Linq.JObject.JObject()", file="PerformanceTests.cs"];
m7_805 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string)", span="718-718", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string)", file="PerformanceTests.cs"];
m7_540 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTime)", span="599-599", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTime)", file="PerformanceTests.cs"];
m7_581 [label="Entry Newtonsoft.Json.Tests.PerformanceTests.Deserialize<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", span="1058-1058", cluster="Newtonsoft.Json.Tests.PerformanceTests.Deserialize<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_667 [label=method, span="1060-1060", cluster="Newtonsoft.Json.Tests.PerformanceTests.Deserialize<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_669 [label="return DeserializeJsonNet<T>((string)json, false);", span="1063-1063", cluster="Newtonsoft.Json.Tests.PerformanceTests.Deserialize<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_671 [label="return DeserializeJsonNet<T>((string)json, true);", span="1065-1065", cluster="Newtonsoft.Json.Tests.PerformanceTests.Deserialize<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_674 [label="return (T)(object)DeserializeJsonNetManual((string)json);", span="1069-1069", cluster="Newtonsoft.Json.Tests.PerformanceTests.Deserialize<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_677 [label="return DeserializeJsonNetBinary<T>((byte[])json);", span="1074-1074", cluster="Newtonsoft.Json.Tests.PerformanceTests.Deserialize<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_679 [label="return DeserializeBinaryFormatter<T>((byte[])json);", span="1076-1076", cluster="Newtonsoft.Json.Tests.PerformanceTests.Deserialize<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_681 [label="return DeserializeWebExtensions<T>((string)json);", span="1078-1078", cluster="Newtonsoft.Json.Tests.PerformanceTests.Deserialize<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_683 [label="return DeserializeDataContract<T>((string)json);", span="1080-1080", cluster="Newtonsoft.Json.Tests.PerformanceTests.Deserialize<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_685 [label="return DeserializeDataContractJson<T>((string)json);", span="1082-1082", cluster="Newtonsoft.Json.Tests.PerformanceTests.Deserialize<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_686 [label="throw new ArgumentOutOfRangeException(nameof(method));", span="1084-1084", cluster="Newtonsoft.Json.Tests.PerformanceTests.Deserialize<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_668 [label="SerializeMethod.JsonNet", span="1062-1062", cluster="Newtonsoft.Json.Tests.PerformanceTests.Deserialize<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_670 [label="SerializeMethod.JsonNetWithIsoConverter", span="1064-1064", cluster="Newtonsoft.Json.Tests.PerformanceTests.Deserialize<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_672 [label="SerializeMethod.JsonNetManual", span="1066-1066", cluster="Newtonsoft.Json.Tests.PerformanceTests.Deserialize<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_676 [label="SerializeMethod.JsonNetBinary", span="1073-1073", cluster="Newtonsoft.Json.Tests.PerformanceTests.Deserialize<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_678 [label="SerializeMethod.BinaryFormatter", span="1075-1075", cluster="Newtonsoft.Json.Tests.PerformanceTests.Deserialize<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_680 [label="SerializeMethod.JavaScriptSerializer", span="1077-1077", cluster="Newtonsoft.Json.Tests.PerformanceTests.Deserialize<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_682 [label="SerializeMethod.DataContractSerializer", span="1079-1079", cluster="Newtonsoft.Json.Tests.PerformanceTests.Deserialize<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_684 [label="SerializeMethod.DataContractJsonSerializer", span="1081-1081", cluster="Newtonsoft.Json.Tests.PerformanceTests.Deserialize<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_673 [label="typeof(T) == typeof(TestClass)", span="1067-1067", cluster="Newtonsoft.Json.Tests.PerformanceTests.Deserialize<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_675 [label="return default(T);", span="1072-1072", cluster="Newtonsoft.Json.Tests.PerformanceTests.Deserialize<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_687 [label="Exit Newtonsoft.Json.Tests.PerformanceTests.Deserialize<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", span="1058-1058", cluster="Newtonsoft.Json.Tests.PerformanceTests.Deserialize<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_698 [label="Entry Newtonsoft.Json.Tests.PerformanceTests.SerializeLargeObject()", span="1104-1104", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeLargeObject()", file="PerformanceTests.cs"];
m7_699 [label="LargeRecursiveTestClass rootValue = null", span="1106-1106", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeLargeObject()", file="PerformanceTests.cs"];
m7_700 [label="LargeRecursiveTestClass parentValue = null", span="1107-1107", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeLargeObject()", file="PerformanceTests.cs"];
m7_704 [label="rootValue == null", span="1116-1116", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeLargeObject()", file="PerformanceTests.cs"];
m7_710 [label="BenchmarkSerializeMethod(SerializeMethod.JsonNetBinary, rootValue)", span="1128-1128", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeLargeObject()", file="PerformanceTests.cs"];
m7_701 [label="int i = 0", span="1108-1108", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeLargeObject()", file="PerformanceTests.cs"];
m7_706 [label="parentValue != null", span="1120-1120", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeLargeObject()", file="PerformanceTests.cs"];
m7_707 [label="parentValue.Child = currentValue", span="1122-1122", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeLargeObject()", file="PerformanceTests.cs"];
m7_702 [label="i < 20", span="1108-1108", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeLargeObject()", file="PerformanceTests.cs"];
m7_709 [label="i++", span="1108-1108", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeLargeObject()", file="PerformanceTests.cs"];
m7_703 [label="LargeRecursiveTestClass currentValue = new LargeRecursiveTestClass()\r\n                {\r\n                    Integer = int.MaxValue,\r\n                    Text = ''The quick red fox jumped over the lazy dog.''\r\n                }", span="1110-1114", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeLargeObject()", file="PerformanceTests.cs"];
m7_705 [label="rootValue = currentValue", span="1118-1118", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeLargeObject()", file="PerformanceTests.cs"];
m7_708 [label="parentValue = currentValue", span="1125-1125", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeLargeObject()", file="PerformanceTests.cs"];
m7_711 [label="Exit Newtonsoft.Json.Tests.PerformanceTests.SerializeLargeObject()", span="1104-1104", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeLargeObject()", file="PerformanceTests.cs"];
m7_0 [label="Entry Newtonsoft.Json.Tests.PerformanceTests.SerializeSimpleObject()", span="109-109", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeSimpleObject()", file="PerformanceTests.cs"];
m7_1 [label="SimpleObject value = CreateSimpleObject()", span="111-111", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeSimpleObject()", file="PerformanceTests.cs"];
m7_2 [label="SerializeTests(value)", span="113-113", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeSimpleObject()", file="PerformanceTests.cs"];
m7_3 [label="Exit Newtonsoft.Json.Tests.PerformanceTests.SerializeSimpleObject()", span="109-109", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeSimpleObject()", file="PerformanceTests.cs"];
m7_108 [label="Entry Unk.SerializeXmlNode", span="", cluster="Unk.SerializeXmlNode", file="PerformanceTests.cs"];
m7_380 [label="Entry System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Serialize(System.IO.Stream, object)", span="0-0", cluster="System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Serialize(System.IO.Stream, object)", file="PerformanceTests.cs"];
m7_19 [label="Entry Newtonsoft.Json.Tests.PerformanceTests.CreateSerializationObject()", span="664-664", cluster="Newtonsoft.Json.Tests.PerformanceTests.CreateSerializationObject()", file="PerformanceTests.cs"];
m7_397 [label="TestClass test = new TestClass()", span="666-666", cluster="Newtonsoft.Json.Tests.PerformanceTests.CreateSerializationObject()", file="PerformanceTests.cs"];
m7_398 [label="test.dictionary = new Dictionary<string, int> { { ''Val & asd1'', 1 }, { ''Val2 & asd1'', 3 }, { ''Val3 & asd1'', 4 } }", span="668-668", cluster="Newtonsoft.Json.Tests.PerformanceTests.CreateSerializationObject()", file="PerformanceTests.cs"];
m7_399 [label="test.Address1.Street = ''fff Street''", span="670-670", cluster="Newtonsoft.Json.Tests.PerformanceTests.CreateSerializationObject()", file="PerformanceTests.cs"];
m7_400 [label="test.Address1.Entered = DateTime.Now.AddDays(20)", span="671-671", cluster="Newtonsoft.Json.Tests.PerformanceTests.CreateSerializationObject()", file="PerformanceTests.cs"];
m7_401 [label="test.BigNumber = 34123123123.121M", span="673-673", cluster="Newtonsoft.Json.Tests.PerformanceTests.CreateSerializationObject()", file="PerformanceTests.cs"];
m7_402 [label="test.Now = DateTime.Now.AddHours(1)", span="674-674", cluster="Newtonsoft.Json.Tests.PerformanceTests.CreateSerializationObject()", file="PerformanceTests.cs"];
m7_403 [label="test.strings = new List<string>() { null, ''Markus egger ]><[, (2nd)'', null }", span="675-675", cluster="Newtonsoft.Json.Tests.PerformanceTests.CreateSerializationObject()", file="PerformanceTests.cs"];
m7_407 [label="test.Addresses.Add(address)", span="681-681", cluster="Newtonsoft.Json.Tests.PerformanceTests.CreateSerializationObject()", file="PerformanceTests.cs"];
m7_411 [label="test.Addresses.Add(address)", span="686-686", cluster="Newtonsoft.Json.Tests.PerformanceTests.CreateSerializationObject()", file="PerformanceTests.cs"];
m7_412 [label="return test;", span="687-687", cluster="Newtonsoft.Json.Tests.PerformanceTests.CreateSerializationObject()", file="PerformanceTests.cs"];
m7_404 [label="Address address = new Address()", span="677-677", cluster="Newtonsoft.Json.Tests.PerformanceTests.CreateSerializationObject()", file="PerformanceTests.cs"];
m7_405 [label="address.Entered = DateTime.Now.AddDays(-1)", span="678-678", cluster="Newtonsoft.Json.Tests.PerformanceTests.CreateSerializationObject()", file="PerformanceTests.cs"];
m7_406 [label="address.Street = ''\u001farray\u003caddress''", span="679-679", cluster="Newtonsoft.Json.Tests.PerformanceTests.CreateSerializationObject()", file="PerformanceTests.cs"];
m7_408 [label="address = new Address()", span="683-683", cluster="Newtonsoft.Json.Tests.PerformanceTests.CreateSerializationObject()", file="PerformanceTests.cs"];
m7_409 [label="address.Entered = DateTime.Now.AddDays(-2)", span="684-684", cluster="Newtonsoft.Json.Tests.PerformanceTests.CreateSerializationObject()", file="PerformanceTests.cs"];
m7_410 [label="address.Street = ''array 2 address''", span="685-685", cluster="Newtonsoft.Json.Tests.PerformanceTests.CreateSerializationObject()", file="PerformanceTests.cs"];
m7_413 [label="Exit Newtonsoft.Json.Tests.PerformanceTests.CreateSerializationObject()", span="664-664", cluster="Newtonsoft.Json.Tests.PerformanceTests.CreateSerializationObject()", file="PerformanceTests.cs"];
m7_427 [label="Entry JavaScriptSerializer.cstr", span="", cluster="JavaScriptSerializer.cstr", file="PerformanceTests.cs"];
m7_43 [label="Entry Newtonsoft.Json.Tests.PerformanceTests.DeserializeLargeJson()", span="194-194", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeLargeJson()", file="PerformanceTests.cs"];
m7_44 [label="var json = System.IO.File.ReadAllText(''large.json'')", span="196-196", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeLargeJson()", file="PerformanceTests.cs"];
m7_45 [label="BenchmarkDeserializeMethod<IList<RootObject>>(SerializeMethod.JsonNet, json, Iterations / 10, false)", span="198-198", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeLargeJson()", file="PerformanceTests.cs"];
m7_46 [label="Exit Newtonsoft.Json.Tests.PerformanceTests.DeserializeLargeJson()", span="194-194", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeLargeJson()", file="PerformanceTests.cs"];
m7_15 [label="Entry Newtonsoft.Json.Tests.PerformanceTests.Serialize()", span="131-131", cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize()", file="PerformanceTests.cs"];
m7_16 [label="TestClass test = CreateSerializationObject()", span="133-133", cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize()", file="PerformanceTests.cs"];
m7_17 [label="SerializeTests(test)", span="135-135", cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize()", file="PerformanceTests.cs"];
m7_18 [label="Exit Newtonsoft.Json.Tests.PerformanceTests.Serialize()", span="131-131", cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize()", file="PerformanceTests.cs"];
m7_4 [label="Entry Newtonsoft.Json.Tests.PerformanceTests.CreateSimpleObject()", span="690-690", cluster="Newtonsoft.Json.Tests.PerformanceTests.CreateSimpleObject()", file="PerformanceTests.cs"];
m7_420 [label="return new SimpleObject\r\n            {\r\n                Name = ''Simple-1'',\r\n                Id = 2311,\r\n                Address = ''Planet Earth'',\r\n                Scores = new[] { 82, 96, 49, 40, 38, 38, 78, 96, 2, 39 }\r\n            };", span="692-698", cluster="Newtonsoft.Json.Tests.PerformanceTests.CreateSimpleObject()", file="PerformanceTests.cs"];
m7_421 [label="Exit Newtonsoft.Json.Tests.PerformanceTests.CreateSimpleObject()", span="690-690", cluster="Newtonsoft.Json.Tests.PerformanceTests.CreateSimpleObject()", file="PerformanceTests.cs"];
m7_35 [label="Entry JArray.cstr", span="", cluster="JArray.cstr", file="PerformanceTests.cs"];
m7_85 [label="Entry Newtonsoft.Json.Tests.PerformanceTests.SerializeSizeNormal()", span="249-249", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeSizeNormal()", file="PerformanceTests.cs"];
m7_86 [label="SerializeSize(CreateSerializationObject())", span="251-251", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeSizeNormal()", file="PerformanceTests.cs"];
m7_87 [label="Exit Newtonsoft.Json.Tests.PerformanceTests.SerializeSizeNormal()", span="249-249", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeSizeNormal()", file="PerformanceTests.cs"];
m7_10 [label="Entry Newtonsoft.Json.Tests.PerformanceTests.BenchmarkSerializeMethod(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", span="643-643", cluster="Newtonsoft.Json.Tests.PerformanceTests.BenchmarkSerializeMethod(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_381 [label="Serialize(method, value)", span="645-645", cluster="Newtonsoft.Json.Tests.PerformanceTests.BenchmarkSerializeMethod(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_387 [label="json = Serialize(method, value)", span="653-653", cluster="Newtonsoft.Json.Tests.PerformanceTests.BenchmarkSerializeMethod(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_390 [label="Console.WriteLine(''Serialize method: {0}'', method)", span="658-658", cluster="Newtonsoft.Json.Tests.PerformanceTests.BenchmarkSerializeMethod(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_382 [label="Stopwatch timed = new Stopwatch()", span="647-647", cluster="Newtonsoft.Json.Tests.PerformanceTests.BenchmarkSerializeMethod(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_383 [label="timed.Start()", span="648-648", cluster="Newtonsoft.Json.Tests.PerformanceTests.BenchmarkSerializeMethod(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_389 [label="timed.Stop()", span="656-656", cluster="Newtonsoft.Json.Tests.PerformanceTests.BenchmarkSerializeMethod(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_391 [label="Console.WriteLine(''{0} ms'', timed.ElapsedMilliseconds)", span="659-659", cluster="Newtonsoft.Json.Tests.PerformanceTests.BenchmarkSerializeMethod(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_384 [label="string json = null", span="650-650", cluster="Newtonsoft.Json.Tests.PerformanceTests.BenchmarkSerializeMethod(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_385 [label="int x = 0", span="651-651", cluster="Newtonsoft.Json.Tests.PerformanceTests.BenchmarkSerializeMethod(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_392 [label="Console.WriteLine(json)", span="660-660", cluster="Newtonsoft.Json.Tests.PerformanceTests.BenchmarkSerializeMethod(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_386 [label="x < Iterations", span="651-651", cluster="Newtonsoft.Json.Tests.PerformanceTests.BenchmarkSerializeMethod(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_388 [label="x++", span="651-651", cluster="Newtonsoft.Json.Tests.PerformanceTests.BenchmarkSerializeMethod(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_393 [label="Console.WriteLine()", span="661-661", cluster="Newtonsoft.Json.Tests.PerformanceTests.BenchmarkSerializeMethod(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_394 [label="Exit Newtonsoft.Json.Tests.PerformanceTests.BenchmarkSerializeMethod(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", span="643-643", cluster="Newtonsoft.Json.Tests.PerformanceTests.BenchmarkSerializeMethod(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_630 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="PerformanceTests.cs"];
m7_633 [label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", span="960-960", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", file="PerformanceTests.cs"];
m7_5 [label="Entry Newtonsoft.Json.Tests.PerformanceTests.SerializeTests(object)", span="217-217", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeTests(object)", file="PerformanceTests.cs"];
m7_62 [label="BenchmarkSerializeMethod(SerializeMethod.DataContractSerializer, value)", span="219-219", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeTests(object)", file="PerformanceTests.cs"];
m7_63 [label="BenchmarkSerializeMethod(SerializeMethod.BinaryFormatter, value)", span="220-220", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeTests(object)", file="PerformanceTests.cs"];
m7_64 [label="BenchmarkSerializeMethod(SerializeMethod.JavaScriptSerializer, value)", span="221-221", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeTests(object)", file="PerformanceTests.cs"];
m7_65 [label="BenchmarkSerializeMethod(SerializeMethod.DataContractJsonSerializer, value)", span="222-222", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeTests(object)", file="PerformanceTests.cs"];
m7_66 [label="BenchmarkSerializeMethod(SerializeMethod.JsonNet, value)", span="223-223", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeTests(object)", file="PerformanceTests.cs"];
m7_67 [label="BenchmarkSerializeMethod(SerializeMethod.JsonNetLinq, value)", span="224-224", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeTests(object)", file="PerformanceTests.cs"];
m7_68 [label="BenchmarkSerializeMethod(SerializeMethod.JsonNetManual, value)", span="225-225", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeTests(object)", file="PerformanceTests.cs"];
m7_69 [label="BenchmarkSerializeMethod(SerializeMethod.JsonNetWithIsoConverter, value)", span="226-226", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeTests(object)", file="PerformanceTests.cs"];
m7_70 [label="BenchmarkSerializeMethod(SerializeMethod.JsonNetBinary, value)", span="227-227", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeTests(object)", file="PerformanceTests.cs"];
m7_71 [label="Exit Newtonsoft.Json.Tests.PerformanceTests.SerializeTests(object)", span="217-217", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeTests(object)", file="PerformanceTests.cs"];
m7_14 [label="Entry Newtonsoft.Json.Tests.PerformanceTests.DeserializeTests<T>(string)", span="240-240", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeTests<T>(string)", file="PerformanceTests.cs"];
m7_80 [label="BenchmarkDeserializeMethod<T>(SerializeMethod.JavaScriptSerializer, json)", span="242-242", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeTests<T>(string)", file="PerformanceTests.cs"];
m7_81 [label="BenchmarkDeserializeMethod<T>(SerializeMethod.DataContractJsonSerializer, json)", span="243-243", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeTests<T>(string)", file="PerformanceTests.cs"];
m7_82 [label="BenchmarkDeserializeMethod<T>(SerializeMethod.JsonNet, json)", span="244-244", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeTests<T>(string)", file="PerformanceTests.cs"];
m7_83 [label="BenchmarkDeserializeMethod<T>(SerializeMethod.JsonNetManual, json)", span="245-245", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeTests<T>(string)", file="PerformanceTests.cs"];
m7_84 [label="Exit Newtonsoft.Json.Tests.PerformanceTests.DeserializeTests<T>(string)", span="240-240", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeTests<T>(string)", file="PerformanceTests.cs"];
m7_187 [label="Entry Newtonsoft.Json.Tests.PerformanceTests.BuildJObject()", span="384-384", cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObject()", file="PerformanceTests.cs"];
m7_188 [label="JObject o = new JObject()", span="386-386", cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObject()", file="PerformanceTests.cs"];
m7_189 [label="int i = 0", span="387-387", cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObject()", file="PerformanceTests.cs"];
m7_191 [label="o[i.ToString()] = i", span="389-389", cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObject()", file="PerformanceTests.cs"];
m7_193 [label="string jsonText = o.ToString()", span="391-391", cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObject()", file="PerformanceTests.cs"];
m7_190 [label="i < 50", span="387-387", cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObject()", file="PerformanceTests.cs"];
m7_192 [label="i++", span="387-387", cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObject()", file="PerformanceTests.cs"];
m7_194 [label="int interations = 1000", span="394-394", cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObject()", file="PerformanceTests.cs"];
m7_195 [label="TimeOperation(() =>\r\n            {\r\n                JObject oo = null;\r\n                for (int i = 0; i < interations; i++)\r\n                {\r\n                    oo = JObject.Parse(jsonText);\r\n                }\r\n\r\n                return oo;\r\n            }, ''JObject'')", span="396-405", cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObject()", file="PerformanceTests.cs"];
m7_196 [label="Exit Newtonsoft.Json.Tests.PerformanceTests.BuildJObject()", span="384-384", cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObject()", file="PerformanceTests.cs"];
m7_528 [label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", span="326-326", cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", file="PerformanceTests.cs"];
m7_257 [label="Entry Newtonsoft.Json.Tests.PerformanceTests.SerializeString()", span="483-483", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeString()", file="PerformanceTests.cs"];
m7_258 [label="string text = @''The general form of an HTML element is therefore: <tag attribute1=''''value1'''' attribute2=''''value2''''>content</tag>.\r\nSome HTML elements are defined as empty elements and take the form <tag attribute1=''''value1'''' attribute2=''''value2'''' >.\r\nEmpty elements may enclose no content, for instance, the BR tag or the inline IMG tag.\r\nThe name of an HTML element is the name used in the tags.\r\nNote that the end tag's name is preceded by a slash character, ''''/'''', and that in empty elements the end tag is neither required nor allowed.\r\nIf attributes are not mentioned, default values are used in each case.\r\n\r\nThe general form of an HTML element is therefore: <tag attribute1=''''value1'''' attribute2=''''value2''''>content</tag>.\r\nSome HTML elements are defined as empty elements and take the form <tag attribute1=''''value1'''' attribute2=''''value2'''' >.\r\nEmpty elements may enclose no content, for instance, the BR tag or the inline IMG tag.\r\nThe name of an HTML element is the name used in the tags.\r\nNote that the end tag's name is preceded by a slash character, ''''/'''', and that in empty elements the end tag is neither required nor allowed.\r\nIf attributes are not mentioned, default values are used in each case.\r\n\r\nThe general form of an HTML element is therefore: <tag attribute1=''''value1'''' attribute2=''''value2''''>content</tag>.\r\nSome HTML elements are defined as empty elements and take the form <tag attribute1=''''value1'''' attribute2=''''value2'''' >.\r\nEmpty elements may enclose no content, for instance, the BR tag or the inline IMG tag.\r\nThe name of an HTML element is the name used in the tags.\r\nNote that the end tag's name is preceded by a slash character, ''''/'''', and that in empty elements the end tag is neither required nor allowed.\r\nIf attributes are not mentioned, default values are used in each case.\r\n''", span="485-505", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeString()", file="PerformanceTests.cs"];
m7_259 [label="int interations = 1000", span="507-507", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeString()", file="PerformanceTests.cs"];
m7_260 [label="TimeOperation(() =>\r\n            {\r\n                for (int i = 0; i < interations; i++)\r\n                {\r\n                    using (StringWriter w = StringUtils.CreateStringWriter(text.Length))\r\n                    {\r\n                        char[] buffer = null;\r\n                        JavaScriptUtils.WriteEscapedJavaScriptString(w, text, '''', true, JavaScriptUtils.DoubleQuoteCharEscapeFlags, StringEscapeHandling.Default, null, ref buffer);\r\n                    }\r\n                }\r\n\r\n                return '''';\r\n            }, ''New'')", span="509-521", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeString()", file="PerformanceTests.cs"];
m7_261 [label="Exit Newtonsoft.Json.Tests.PerformanceTests.SerializeString()", span="483-483", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeString()", file="PerformanceTests.cs"];
m7_547 [label="Entry Unk.nameof", span="", cluster="Unk.nameof", file="PerformanceTests.cs"];
m7_762 [label="Entry Newtonsoft.Json.Tests.PerformanceTests.JObjectCreationAndPropertyAccess()", span="1200-1200", cluster="Newtonsoft.Json.Tests.PerformanceTests.JObjectCreationAndPropertyAccess()", file="PerformanceTests.cs"];
m7_763 [label="TimeOperation<object>(() =>\r\n            {\r\n                for (int i = 0; i < Iterations * 100; i++)\r\n                {\r\n                    JObject test = new JObject(\r\n                        new JProperty(''one'', 1),\r\n                        new JProperty(''two'', 2));\r\n\r\n                    test[''i''] = i;\r\n                    int j = (int)test[''i''];\r\n                    test[''j''] = j;\r\n                }\r\n                return null;\r\n            }, ''JObjectCreationAndPropertyAccess'')", span="1202-1215", cluster="Newtonsoft.Json.Tests.PerformanceTests.JObjectCreationAndPropertyAccess()", file="PerformanceTests.cs"];
m7_764 [label="Exit Newtonsoft.Json.Tests.PerformanceTests.JObjectCreationAndPropertyAccess()", span="1200-1200", cluster="Newtonsoft.Json.Tests.PerformanceTests.JObjectCreationAndPropertyAccess()", file="PerformanceTests.cs"];
m7_730 [label="Entry Newtonsoft.Json.Tests.PerformanceTests.JObjectToString()", span="1161-1161", cluster="Newtonsoft.Json.Tests.PerformanceTests.JObjectToString()", file="PerformanceTests.cs"];
m7_731 [label="JObject test = JObject.Parse(JsonText)", span="1163-1163", cluster="Newtonsoft.Json.Tests.PerformanceTests.JObjectToString()", file="PerformanceTests.cs"];
m7_732 [label="TimeOperation<object>(() =>\r\n            {\r\n                for (int i = 0; i < Iterations; i++)\r\n                {\r\n                    test[''dummy''] = new JValue(i);\r\n                    test.ToString(Formatting.None);\r\n                }\r\n                return null;\r\n            }, ''JObject.ToString'')", span="1165-1173", cluster="Newtonsoft.Json.Tests.PerformanceTests.JObjectToString()", file="PerformanceTests.cs"];
m7_733 [label="Exit Newtonsoft.Json.Tests.PerformanceTests.JObjectToString()", span="1161-1161", cluster="Newtonsoft.Json.Tests.PerformanceTests.JObjectToString()", file="PerformanceTests.cs"];
m7_340 [label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0", cluster="System.IO.MemoryStream.MemoryStream()", file="PerformanceTests.cs"];
m7_38 [label="Entry Newtonsoft.Json.Linq.JToken.ToString(Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", span="433-433", cluster="Newtonsoft.Json.Linq.JToken.ToString(Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", file="PerformanceTests.cs"];
m7_128 [label="Entry System.Diagnostics.Stopwatch.Start()", span="0-0", cluster="System.Diagnostics.Stopwatch.Start()", file="PerformanceTests.cs"];
m7_437 [label="Entry System.IO.MemoryStream.Seek(long, System.IO.SeekOrigin)", span="0-0", cluster="System.IO.MemoryStream.Seek(long, System.IO.SeekOrigin)", file="PerformanceTests.cs"];
m7_88 [label="Entry Newtonsoft.Json.Tests.PerformanceTests.SerializeSize(object)", span="562-562", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeSize(object)", file="PerformanceTests.cs"];
m7_305 [label="int interations = 100", span="565-565", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeSize(object)", file="PerformanceTests.cs"];
m7_306 [label="byte[] jsonBytes = TimeOperation(() =>\r\n            {\r\n                string json = null;\r\n                for (int i = 0; i < interations; i++)\r\n                {\r\n                    json = JsonConvert.SerializeObject(value, Formatting.None);\r\n                }\r\n\r\n                return Encoding.UTF8.GetBytes(json);\r\n            }, ''Json.NET'')", span="567-576", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeSize(object)", file="PerformanceTests.cs"];
m7_307 [label="byte[] bsonBytes = TimeOperation(() =>\r\n            {\r\n                MemoryStream ms = null;\r\n                for (int i = 0; i < interations; i++)\r\n                {\r\n                    ms = new MemoryStream();\r\n                    JsonSerializer serializer = new JsonSerializer();\r\n                    BsonWriter writer = new BsonWriter(ms);\r\n\r\n                    serializer.Serialize(writer, value);\r\n                    writer.Flush();\r\n                }\r\n\r\n                return ms.ToArray();\r\n            }, ''Json.NET BSON'')", span="578-592", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeSize(object)", file="PerformanceTests.cs"];
m7_308 [label="byte[] xmlBytes = TimeOperation(() =>\r\n            {\r\n                MemoryStream ms = null;\r\n                for (int i = 0; i < interations; i++)\r\n                {\r\n                    ms = new MemoryStream();\r\n                    DataContractSerializer dataContractSerializer = new DataContractSerializer(value.GetType());\r\n                    dataContractSerializer.WriteObject(ms, value);\r\n                }\r\n\r\n                return ms.ToArray();\r\n            }, ''DataContractSerializer'')", span="594-605", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeSize(object)", file="PerformanceTests.cs"];
m7_309 [label="byte[] wcfJsonBytes = TimeOperation(() =>\r\n            {\r\n                MemoryStream ms = null;\r\n                for (int i = 0; i < interations; i++)\r\n                {\r\n                    ms = new MemoryStream();\r\n                    DataContractJsonSerializer dataContractJsonSerializer = new DataContractJsonSerializer(value.GetType());\r\n                    dataContractJsonSerializer.WriteObject(ms, value);\r\n                }\r\n\r\n                return ms.ToArray();\r\n            }, ''DataContractJsonSerializer'')", span="607-618", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeSize(object)", file="PerformanceTests.cs"];
m7_310 [label="byte[] binaryFormatterBytes = TimeOperation(() =>\r\n            {\r\n                MemoryStream ms = null;\r\n                for (int i = 0; i < interations; i++)\r\n                {\r\n                    ms = new MemoryStream();\r\n                    BinaryFormatter formatter = new BinaryFormatter();\r\n                    formatter.Serialize(ms, value);\r\n                }\r\n\r\n                return ms.ToArray();\r\n            }, ''BinaryFormatter'')", span="620-631", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeSize(object)", file="PerformanceTests.cs"];
m7_311 [label="Console.WriteLine(''Json.NET size: {0} bytes'', jsonBytes.Length)", span="633-633", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeSize(object)", file="PerformanceTests.cs"];
m7_312 [label="Console.WriteLine(''BSON size: {0} bytes'', bsonBytes.Length)", span="634-634", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeSize(object)", file="PerformanceTests.cs"];
m7_314 [label="Console.WriteLine(''WCF XML size: {0} bytes'', xmlBytes.Length)", span="636-636", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeSize(object)", file="PerformanceTests.cs"];
m7_313 [label="Console.WriteLine(''WCF JSON size: {0} bytes'', wcfJsonBytes.Length)", span="635-635", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeSize(object)", file="PerformanceTests.cs"];
m7_315 [label="Console.WriteLine(''BinaryFormatter size: {0} bytes'', binaryFormatterBytes.Length)", span="637-637", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeSize(object)", file="PerformanceTests.cs"];
m7_316 [label="Exit Newtonsoft.Json.Tests.PerformanceTests.SerializeSize(object)", span="562-562", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeSize(object)", file="PerformanceTests.cs"];
m7_29 [label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="78-78", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="PerformanceTests.cs"];
m7_529 [label="Entry Newtonsoft.Json.Linq.JArray.JArray(object)", span="91-91", cluster="Newtonsoft.Json.Linq.JArray.JArray(object)", file="PerformanceTests.cs"];
m7_20 [label="Entry Newtonsoft.Json.Tests.PerformanceTests.ReadLargeJson()", span="139-139", cluster="Newtonsoft.Json.Tests.PerformanceTests.ReadLargeJson()", file="PerformanceTests.cs"];
m7_21 [label="int i = 0", span="141-141", cluster="Newtonsoft.Json.Tests.PerformanceTests.ReadLargeJson()", file="PerformanceTests.cs"];
m7_22 [label="i < 10", span="141-141", cluster="Newtonsoft.Json.Tests.PerformanceTests.ReadLargeJson()", file="PerformanceTests.cs"];
m7_26 [label="i++", span="141-141", cluster="Newtonsoft.Json.Tests.PerformanceTests.ReadLargeJson()", file="PerformanceTests.cs"];
m7_23 [label="var fs = System.IO.File.OpenText(''large.json'')", span="143-143", cluster="Newtonsoft.Json.Tests.PerformanceTests.ReadLargeJson()", file="PerformanceTests.cs"];
m7_24 [label="JsonTextReader jsonTextReader = new JsonTextReader(fs)", span="144-144", cluster="Newtonsoft.Json.Tests.PerformanceTests.ReadLargeJson()", file="PerformanceTests.cs"];
m7_25 [label="jsonTextReader.Read()", span="146-146", cluster="Newtonsoft.Json.Tests.PerformanceTests.ReadLargeJson()", file="PerformanceTests.cs"];
m7_27 [label="Exit Newtonsoft.Json.Tests.PerformanceTests.ReadLargeJson()", span="139-139", cluster="Newtonsoft.Json.Tests.PerformanceTests.ReadLargeJson()", file="PerformanceTests.cs"];
m7_742 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(long)", span="70-70", cluster="Newtonsoft.Json.Linq.JValue.JValue(long)", file="PerformanceTests.cs"];
m7_530 [label="Entry JObject.cstr", span="", cluster="JObject.cstr", file="PerformanceTests.cs"];
m7_660 [label="Entry Unk.>", span="", cluster="Unk.>", file="PerformanceTests.cs"];
m7_37 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="PerformanceTests.cs"];
m7_688 [label="Entry Newtonsoft.Json.Tests.PerformanceTests.DeserializeBinaryFormatter<T>(byte[])", span="1096-1096", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeBinaryFormatter<T>(byte[])", file="PerformanceTests.cs"];
m7_694 [label="BinaryFormatter formatter = new BinaryFormatter()", span="1098-1098", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeBinaryFormatter<T>(byte[])", file="PerformanceTests.cs"];
m7_695 [label="return (T)formatter.Deserialize(new MemoryStream(bytes));", span="1099-1099", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeBinaryFormatter<T>(byte[])", file="PerformanceTests.cs"];
m7_696 [label="Exit Newtonsoft.Json.Tests.PerformanceTests.DeserializeBinaryFormatter<T>(byte[])", span="1096-1096", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeBinaryFormatter<T>(byte[])", file="PerformanceTests.cs"];
m7_107 [label="Entry Unk.Load", span="", cluster="Unk.Load", file="PerformanceTests.cs"];
m7_538 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(int)", span="431-431", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(int)", file="PerformanceTests.cs"];
m7_199 [label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="422-422", cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="PerformanceTests.cs"];
m7_342 [label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="991-991", cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="PerformanceTests.cs"];
m7_209 [label="Entry Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", span="409-409", cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", file="PerformanceTests.cs"];
m7_210 [label="long totalIterations = 100000", span="411-411", cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", file="PerformanceTests.cs"];
m7_211 [label="String xml =\r\n                @''<?xml  version=''''1.0'''' encoding=''''ISO-8859-1''''?>\r\n                <root>\r\n                    <property name=''''Property1''''>1</property>\r\n                    <property name=''''Property2''''>2</property>\r\n                    <property name=''''Property3''''>3</property>\r\n                    <property name=''''Property4''''>4</property>\r\n                    <property name=''''Property5''''>5</property>\r\n                </root>''", span="413-421", cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", file="PerformanceTests.cs"];
m7_216 [label="iteration < totalIterations", span="434-434", cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", file="PerformanceTests.cs"];
m7_225 [label="var performance1 = (totalIterations / watch.ElapsedMilliseconds) * 1000", span="444-444", cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", file="PerformanceTests.cs"];
m7_230 [label="iteration < totalIterations", span="449-449", cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", file="PerformanceTests.cs"];
m7_249 [label="var performance2 = (totalIterations / watch.ElapsedMilliseconds) * 1000", span="478-478", cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", file="PerformanceTests.cs"];
m7_212 [label="String json =\r\n                @''{\r\n                    ''''Property1'''':''''1'''',\r\n                    ''''Property2'''':''''2'''',\r\n                    ''''Property3'''':''''3'''',\r\n                    ''''Property4'''':''''4'''',\r\n                    ''''Property5'''':''''5''''\r\n                }''", span="423-430", cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", file="PerformanceTests.cs"];
m7_231 [label="var doc = XDocument.Parse(xml)", span="451-451", cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", file="PerformanceTests.cs"];
m7_213 [label="var watch = new Stopwatch()", span="432-432", cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", file="PerformanceTests.cs"];
m7_217 [label="var obj = JObject.Parse(json)", span="436-436", cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", file="PerformanceTests.cs"];
m7_214 [label="watch.Start()", span="433-433", cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", file="PerformanceTests.cs"];
m7_224 [label="watch.Stop()", span="443-443", cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", file="PerformanceTests.cs"];
m7_226 [label="Console.WriteLine(''JSON: '' + watch.Elapsed.TotalSeconds)", span="445-445", cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", file="PerformanceTests.cs"];
m7_227 [label="watch.Reset()", span="447-447", cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", file="PerformanceTests.cs"];
m7_228 [label="watch.Start()", span="448-448", cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", file="PerformanceTests.cs"];
m7_248 [label="watch.Stop()", span="477-477", cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", file="PerformanceTests.cs"];
m7_250 [label="Console.WriteLine(''XML: '' + watch.Elapsed.TotalSeconds)", span="479-479", cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", file="PerformanceTests.cs"];
m7_215 [label="long iteration = 0", span="434-434", cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", file="PerformanceTests.cs"];
m7_223 [label="++iteration", span="434-434", cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", file="PerformanceTests.cs"];
m7_218 [label="obj[''Property1''].Value<Int32>()", span="437-437", cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", file="PerformanceTests.cs"];
m7_219 [label="obj[''Property2''].Value<Int32>()", span="438-438", cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", file="PerformanceTests.cs"];
m7_220 [label="obj[''Property3''].Value<Int32>()", span="439-439", cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", file="PerformanceTests.cs"];
m7_221 [label="obj[''Property4''].Value<Int32>()", span="440-440", cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", file="PerformanceTests.cs"];
m7_222 [label="obj[''Property5''].Value<Int32>()", span="441-441", cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", file="PerformanceTests.cs"];
m7_229 [label="long iteration = 0", span="449-449", cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", file="PerformanceTests.cs"];
m7_247 [label="++iteration", span="449-449", cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", file="PerformanceTests.cs"];
m7_232 [label="var alarmProperties = doc.Descendants(''property'')", span="452-452", cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", file="PerformanceTests.cs"];
m7_233 [label=alarmProperties, span="453-453", cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", file="PerformanceTests.cs"];
m7_234 [label="var attr = property.Attribute(''name'')", span="455-455", cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", file="PerformanceTests.cs"];
m7_238 [label="Int32.Parse(property.Value)", span="460-460", cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", file="PerformanceTests.cs"];
m7_240 [label="Int32.Parse(property.Value)", span="463-463", cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", file="PerformanceTests.cs"];
m7_242 [label="Int32.Parse(property.Value)", span="466-466", cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", file="PerformanceTests.cs"];
m7_244 [label="Int32.Parse(property.Value)", span="469-469", cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", file="PerformanceTests.cs"];
m7_246 [label="Int32.Parse(property.Value)", span="472-472", cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", file="PerformanceTests.cs"];
m7_235 [label="var name = attr.Value", span="456-456", cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", file="PerformanceTests.cs"];
m7_236 [label=name, span="457-457", cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", file="PerformanceTests.cs"];
m7_237 [label="''Property1''", span="459-459", cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", file="PerformanceTests.cs"];
m7_239 [label="''Property2''", span="462-462", cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", file="PerformanceTests.cs"];
m7_241 [label="''Property3''", span="465-465", cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", file="PerformanceTests.cs"];
m7_243 [label="''Property4''", span="468-468", cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", file="PerformanceTests.cs"];
m7_245 [label="''Property5''", span="471-471", cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", file="PerformanceTests.cs"];
m7_251 [label="Exit Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", span="409-409", cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", file="PerformanceTests.cs"];
m7_288 [label="Entry Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", span="1931-1931", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="PerformanceTests.cs"];
m7_355 [label="Entry DataContractSerializer.cstr", span="", cluster="DataContractSerializer.cstr", file="PerformanceTests.cs"];
m7_296 [label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="478-478", cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="PerformanceTests.cs"];
m7_343 [label="Entry Newtonsoft.Json.Bson.BsonWriter.Flush()", span="84-84", cluster="Newtonsoft.Json.Bson.BsonWriter.Flush()", file="PerformanceTests.cs"];
m7_595 [label="Entry Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetManual(string)", span="942-942", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetManual(string)", file="PerformanceTests.cs"];
m7_596 [label="TestClass c = new TestClass()", span="944-944", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetManual(string)", file="PerformanceTests.cs"];
m7_597 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="946-946", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetManual(string)", file="PerformanceTests.cs"];
m7_606 [label="c.strings.Add((string)reader.Value)", span="959-959", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetManual(string)", file="PerformanceTests.cs"];
m7_611 [label="c.dictionary.Add(key, reader.ReadAsInt32().GetValueOrDefault())", span="967-967", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetManual(string)", file="PerformanceTests.cs"];
m7_613 [label="c.Name = reader.ReadAsString()", span="971-971", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetManual(string)", file="PerformanceTests.cs"];
m7_615 [label="c.Now = reader.ReadAsDateTime().GetValueOrDefault()", span="974-974", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetManual(string)", file="PerformanceTests.cs"];
m7_617 [label="c.BigNumber = reader.ReadAsDecimal().GetValueOrDefault()", span="977-977", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetManual(string)", file="PerformanceTests.cs"];
m7_620 [label="c.Address1 = CreateAddress(reader)", span="981-981", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetManual(string)", file="PerformanceTests.cs"];
m7_625 [label="c.Addresses.Add(address)", span="988-988", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetManual(string)", file="PerformanceTests.cs"];
m7_626 [label="return c;", span="999-999", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetManual(string)", file="PerformanceTests.cs"];
m7_598 [label="reader.Read()", span="947-947", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetManual(string)", file="PerformanceTests.cs"];
m7_599 [label="reader.Read()", span="948-948", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetManual(string)", file="PerformanceTests.cs"];
m7_600 [label="reader.TokenType == JsonToken.PropertyName", span="950-950", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetManual(string)", file="PerformanceTests.cs"];
m7_601 [label="string propertyName = (string)reader.Value", span="952-952", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetManual(string)", file="PerformanceTests.cs"];
m7_604 [label="reader.Read()", span="956-956", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetManual(string)", file="PerformanceTests.cs"];
m7_605 [label="reader.Read() && reader.TokenType != JsonToken.EndArray", span="957-957", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetManual(string)", file="PerformanceTests.cs"];
m7_608 [label="reader.Read()", span="963-963", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetManual(string)", file="PerformanceTests.cs"];
m7_609 [label="reader.Read() && reader.TokenType != JsonToken.EndObject", span="964-964", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetManual(string)", file="PerformanceTests.cs"];
m7_610 [label="string key = (string)reader.Value", span="966-966", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetManual(string)", file="PerformanceTests.cs"];
m7_619 [label="reader.Read()", span="980-980", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetManual(string)", file="PerformanceTests.cs"];
m7_622 [label="reader.Read()", span="984-984", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetManual(string)", file="PerformanceTests.cs"];
m7_623 [label="reader.Read() && reader.TokenType != JsonToken.EndArray", span="985-985", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetManual(string)", file="PerformanceTests.cs"];
m7_624 [label="var address = CreateAddress(reader)", span="987-987", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetManual(string)", file="PerformanceTests.cs"];
m7_602 [label=propertyName, span="953-953", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetManual(string)", file="PerformanceTests.cs"];
m7_603 [label="''strings''", span="955-955", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetManual(string)", file="PerformanceTests.cs"];
m7_607 [label="''dictionary''", span="962-962", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetManual(string)", file="PerformanceTests.cs"];
m7_612 [label="''Name''", span="970-970", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetManual(string)", file="PerformanceTests.cs"];
m7_614 [label="''Now''", span="973-973", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetManual(string)", file="PerformanceTests.cs"];
m7_616 [label="''BigNumber''", span="976-976", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetManual(string)", file="PerformanceTests.cs"];
m7_618 [label="''Address1''", span="979-979", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetManual(string)", file="PerformanceTests.cs"];
m7_621 [label="''Addresses''", span="983-983", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetManual(string)", file="PerformanceTests.cs"];
m7_627 [label="Exit Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetManual(string)", span="942-942", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetManual(string)", file="PerformanceTests.cs"];
m7_297 [label="Entry Newtonsoft.Json.Linq.JToken.ToObject(System.Type, Newtonsoft.Json.JsonSerializer)", span="2066-2066", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type, Newtonsoft.Json.JsonSerializer)", file="PerformanceTests.cs"];
m7_280 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(string)", span="154-154", cluster="Newtonsoft.Json.Linq.JValue.JValue(string)", file="PerformanceTests.cs"];
m7_794 [label="Entry System.Console.WriteLine(string, object, object)", span="0-0", cluster="System.Console.WriteLine(string, object, object)", file="PerformanceTests.cs"];
m7_419 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="PerformanceTests.cs"];
m7_592 [label="Entry System.Collections.ObjectModel.Collection<T>.Add(T)", span="0-0", cluster="System.Collections.ObjectModel.Collection<T>.Add(T)", file="PerformanceTests.cs"];
m7_661 [label="Entry Newtonsoft.Json.Tests.PerformanceTests.DeserializeDataContractJson<T>(string)", span="1049-1049", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeDataContractJson<T>(string)", file="PerformanceTests.cs"];
m7_662 [label="DataContractJsonSerializer dataContractSerializer = new DataContractJsonSerializer(typeof(T))", span="1051-1051", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeDataContractJson<T>(string)", file="PerformanceTests.cs"];
m7_663 [label="MemoryStream ms = new MemoryStream(Encoding.UTF8.GetBytes(json))", span="1053-1053", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeDataContractJson<T>(string)", file="PerformanceTests.cs"];
m7_664 [label="return (T)dataContractSerializer.ReadObject(ms);", span="1055-1055", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeDataContractJson<T>(string)", file="PerformanceTests.cs"];
m7_665 [label="Exit Newtonsoft.Json.Tests.PerformanceTests.DeserializeDataContractJson<T>(string)", span="1049-1049", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeDataContractJson<T>(string)", file="PerformanceTests.cs"];
m7_129 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="PerformanceTests.cs"];
m7_415 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="PerformanceTests.cs"];
m7_806 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="PerformanceTests.cs"];
m7_541 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(decimal)", span="589-589", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(decimal)", file="PerformanceTests.cs"];
m7_11 [label="Entry Newtonsoft.Json.Tests.PerformanceTests.DeserializeSimpleObject()", span="125-125", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeSimpleObject()", file="PerformanceTests.cs"];
m7_12 [label="DeserializeTests<SimpleObject>(SimpleJsonText)", span="127-127", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeSimpleObject()", file="PerformanceTests.cs"];
m7_13 [label="Exit Newtonsoft.Json.Tests.PerformanceTests.DeserializeSimpleObject()", span="125-125", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeSimpleObject()", file="PerformanceTests.cs"];
m7_414 [label="Entry Newtonsoft.Json.Tests.TestClass.TestClass()", span="1269-1269", cluster="Newtonsoft.Json.Tests.TestClass.TestClass()", file="PerformanceTests.cs"];
m7_99 [label="Entry Newtonsoft.Json.Tests.PerformanceTests.ConvertXmlNode()", span="269-269", cluster="Newtonsoft.Json.Tests.PerformanceTests.ConvertXmlNode()", file="PerformanceTests.cs"];
m7_100 [label="XmlDocument doc = new XmlDocument()", span="271-271", cluster="Newtonsoft.Json.Tests.PerformanceTests.ConvertXmlNode()", file="PerformanceTests.cs"];
m7_101 [label="FileStream file = System.IO.File.OpenRead(''large_sample.xml'')", span="272-272", cluster="Newtonsoft.Json.Tests.PerformanceTests.ConvertXmlNode()", file="PerformanceTests.cs"];
m7_102 [label="doc.Load(file)", span="274-274", cluster="Newtonsoft.Json.Tests.PerformanceTests.ConvertXmlNode()", file="PerformanceTests.cs"];
m7_103 [label="JsonConvert.SerializeXmlNode(doc)", span="277-277", cluster="Newtonsoft.Json.Tests.PerformanceTests.ConvertXmlNode()", file="PerformanceTests.cs"];
m7_104 [label="Exit Newtonsoft.Json.Tests.PerformanceTests.ConvertXmlNode()", span="269-269", cluster="Newtonsoft.Json.Tests.PerformanceTests.ConvertXmlNode()", file="PerformanceTests.cs"];
m7_357 [label="Entry Unk.WriteObject", span="", cluster="Unk.WriteObject", file="PerformanceTests.cs"];
m7_743 [label="Entry Newtonsoft.Json.Tests.PerformanceTests.JObjectToString2()", span="1177-1177", cluster="Newtonsoft.Json.Tests.PerformanceTests.JObjectToString2()", file="PerformanceTests.cs"];
m7_744 [label="JObject test = JObject.Parse(JsonText)", span="1179-1179", cluster="Newtonsoft.Json.Tests.PerformanceTests.JObjectToString2()", file="PerformanceTests.cs"];
m7_745 [label="MemoryStream ms = new MemoryStream()", span="1180-1180", cluster="Newtonsoft.Json.Tests.PerformanceTests.JObjectToString2()", file="PerformanceTests.cs"];
m7_746 [label="TimeOperation<object>(() =>\r\n            {\r\n                for (int i = 0; i < Iterations; i++)\r\n                {\r\n                    test[''dummy''] = new JValue(i);\r\n                    ms.Seek(0, SeekOrigin.Begin);\r\n                    JsonTextWriter jsonTextWriter = new JsonTextWriter(new StreamWriter(ms));\r\n                    test.WriteTo(jsonTextWriter);\r\n                    jsonTextWriter.Flush();\r\n                    ms.ToArray();\r\n\r\n                    //Encoding.UTF8.GetBytes(test.ToString(Formatting.None));\r\n                }\r\n                return null;\r\n            }, ''JObject.ToString'')", span="1182-1196", cluster="Newtonsoft.Json.Tests.PerformanceTests.JObjectToString2()", file="PerformanceTests.cs"];
m7_747 [label="Exit Newtonsoft.Json.Tests.PerformanceTests.JObjectToString2()", span="1177-1177", cluster="Newtonsoft.Json.Tests.PerformanceTests.JObjectToString2()", file="PerformanceTests.cs"];
m7_317 [label="Entry Unk.TimeOperation", span="", cluster="Unk.TimeOperation", file="PerformanceTests.cs"];
m7_537 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="430-430", cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="PerformanceTests.cs"];
m7_542 [label="Entry Newtonsoft.Json.JsonTextWriter.Flush()", span="167-167", cluster="Newtonsoft.Json.JsonTextWriter.Flush()", file="PerformanceTests.cs"];
m7_60 [label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="PerformanceTests.cs"];
m7_532 [label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="148-148", cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="PerformanceTests.cs"];
m7_368 [label="Entry DataContractJsonSerializer.cstr", span="", cluster="DataContractJsonSerializer.cstr", file="PerformanceTests.cs"];
m7_765 [label="Entry lambda expression", span="1202-1215", cluster="lambda expression", file="PerformanceTests.cs"];
m7_40 [label="Entry lambda expression", span="188-188", cluster="lambda expression", file="PerformanceTests.cs"];
m7_41 [label="(double)i", span="188-188", cluster="lambda expression", color=red, community=0, file="PerformanceTests.cs"];
m7_42 [label="Exit lambda expression", span="188-188", cluster="lambda expression", file="PerformanceTests.cs"];
m7_150 [label="p = first.Path", span="331-331", cluster="lambda expression", file="PerformanceTests.cs"];
m7_158 [label="p = last.Path", span="342-342", cluster="lambda expression", file="PerformanceTests.cs"];
m7_149 [label="i < interations", span="329-329", cluster="lambda expression", file="PerformanceTests.cs"];
m7_157 [label="i < interations", span="340-340", cluster="lambda expression", file="PerformanceTests.cs"];
m7_146 [label="Entry lambda expression", span="326-335", cluster="lambda expression", file="PerformanceTests.cs"];
m7_154 [label="Entry lambda expression", span="337-346", cluster="lambda expression", file="PerformanceTests.cs"];
m7_147 [label="string p = null", span="328-328", cluster="lambda expression", file="PerformanceTests.cs"];
m7_148 [label="int i = 0", span="329-329", cluster="lambda expression", file="PerformanceTests.cs"];
m7_152 [label="return p;", span="334-334", cluster="lambda expression", file="PerformanceTests.cs"];
m7_151 [label="i++", span="329-329", cluster="lambda expression", file="PerformanceTests.cs"];
m7_153 [label="Exit lambda expression", span="326-335", cluster="lambda expression", file="PerformanceTests.cs"];
m7_155 [label="string p = null", span="339-339", cluster="lambda expression", file="PerformanceTests.cs"];
m7_156 [label="int i = 0", span="340-340", cluster="lambda expression", file="PerformanceTests.cs"];
m7_160 [label="return p;", span="345-345", cluster="lambda expression", file="PerformanceTests.cs"];
m7_159 [label="i++", span="340-340", cluster="lambda expression", file="PerformanceTests.cs"];
m7_161 [label="Exit lambda expression", span="337-346", cluster="lambda expression", file="PerformanceTests.cs"];
m7_176 [label="a1.Add(interations)", span="366-366", cluster="lambda expression", file="PerformanceTests.cs"];
m7_178 [label="return a1;", span="369-369", cluster="lambda expression", file="PerformanceTests.cs"];
m7_183 [label="a2.Add(interations)", span="376-376", cluster="lambda expression", file="PerformanceTests.cs"];
m7_185 [label="return a2;", span="379-379", cluster="lambda expression", file="PerformanceTests.cs"];
m7_175 [label="i < interations", span="364-364", cluster="lambda expression", file="PerformanceTests.cs"];
m7_182 [label="i < interations", span="374-374", cluster="lambda expression", file="PerformanceTests.cs"];
m7_173 [label="Entry lambda expression", span="362-370", cluster="lambda expression", file="PerformanceTests.cs"];
m7_180 [label="Entry lambda expression", span="372-380", cluster="lambda expression", file="PerformanceTests.cs"];
m7_174 [label="int i = 0", span="364-364", cluster="lambda expression", file="PerformanceTests.cs"];
m7_177 [label="i++", span="364-364", cluster="lambda expression", file="PerformanceTests.cs"];
m7_179 [label="Exit lambda expression", span="362-370", cluster="lambda expression", file="PerformanceTests.cs"];
m7_181 [label="int i = 0", span="374-374", cluster="lambda expression", file="PerformanceTests.cs"];
m7_184 [label="i++", span="374-374", cluster="lambda expression", file="PerformanceTests.cs"];
m7_186 [label="Exit lambda expression", span="372-380", cluster="lambda expression", file="PerformanceTests.cs"];
m7_204 [label="oo = JObject.Parse(jsonText)", span="401-401", cluster="lambda expression", file="PerformanceTests.cs"];
m7_203 [label="i < interations", span="399-399", cluster="lambda expression", file="PerformanceTests.cs"];
m7_200 [label="Entry lambda expression", span="396-405", cluster="lambda expression", file="PerformanceTests.cs"];
m7_201 [label="JObject oo = null", span="398-398", cluster="lambda expression", file="PerformanceTests.cs"];
m7_202 [label="int i = 0", span="399-399", cluster="lambda expression", file="PerformanceTests.cs"];
m7_206 [label="return oo;", span="404-404", cluster="lambda expression", file="PerformanceTests.cs"];
m7_205 [label="i++", span="399-399", cluster="lambda expression", file="PerformanceTests.cs"];
m7_207 [label="Exit lambda expression", span="396-405", cluster="lambda expression", file="PerformanceTests.cs"];
m7_265 [label="StringWriter w = StringUtils.CreateStringWriter(text.Length)", span="513-513", cluster="lambda expression", file="PerformanceTests.cs"];
m7_267 [label="JavaScriptUtils.WriteEscapedJavaScriptString(w, text, '''', true, JavaScriptUtils.DoubleQuoteCharEscapeFlags, StringEscapeHandling.Default, null, ref buffer)", span="516-516", cluster="lambda expression", file="PerformanceTests.cs"];
m7_264 [label="i < interations", span="511-511", cluster="lambda expression", file="PerformanceTests.cs"];
m7_262 [label="Entry lambda expression", span="509-521", cluster="lambda expression", file="PerformanceTests.cs"];
m7_263 [label="int i = 0", span="511-511", cluster="lambda expression", file="PerformanceTests.cs"];
m7_268 [label="i++", span="511-511", cluster="lambda expression", file="PerformanceTests.cs"];
m7_269 [label="return '''';", span="520-520", cluster="lambda expression", file="PerformanceTests.cs"];
m7_266 [label="char[] buffer = null", span="515-515", cluster="lambda expression", file="PerformanceTests.cs"];
m7_270 [label="Exit lambda expression", span="509-521", cluster="lambda expression", file="PerformanceTests.cs"];
m7_284 [label="s.ToObject(typeof(string))", span="535-535", cluster="lambda expression", file="PerformanceTests.cs"];
m7_292 [label="s.ToObject(typeof(string), new JsonSerializer())", span="545-545", cluster="lambda expression", file="PerformanceTests.cs"];
m7_301 [label="s.Value<string>()", span="555-555", cluster="lambda expression", file="PerformanceTests.cs"];
m7_283 [label="i < interations", span="533-533", cluster="lambda expression", file="PerformanceTests.cs"];
m7_291 [label="i < interations", span="543-543", cluster="lambda expression", file="PerformanceTests.cs"];
m7_300 [label="i < interations", span="553-553", cluster="lambda expression", file="PerformanceTests.cs"];
m7_281 [label="Entry lambda expression", span="531-539", cluster="lambda expression", file="PerformanceTests.cs"];
m7_289 [label="Entry lambda expression", span="541-549", cluster="lambda expression", file="PerformanceTests.cs"];
m7_298 [label="Entry lambda expression", span="551-559", cluster="lambda expression", file="PerformanceTests.cs"];
m7_282 [label="int i = 0", span="533-533", cluster="lambda expression", file="PerformanceTests.cs"];
m7_285 [label="i++", span="533-533", cluster="lambda expression", file="PerformanceTests.cs"];
m7_286 [label="return '''';", span="538-538", cluster="lambda expression", file="PerformanceTests.cs"];
m7_287 [label="Exit lambda expression", span="531-539", cluster="lambda expression", file="PerformanceTests.cs"];
m7_290 [label="int i = 0", span="543-543", cluster="lambda expression", file="PerformanceTests.cs"];
m7_293 [label="i++", span="543-543", cluster="lambda expression", file="PerformanceTests.cs"];
m7_294 [label="return '''';", span="548-548", cluster="lambda expression", file="PerformanceTests.cs"];
m7_295 [label="Exit lambda expression", span="541-549", cluster="lambda expression", file="PerformanceTests.cs"];
m7_299 [label="int i = 0", span="553-553", cluster="lambda expression", file="PerformanceTests.cs"];
m7_302 [label="i++", span="553-553", cluster="lambda expression", file="PerformanceTests.cs"];
m7_303 [label="return '''';", span="558-558", cluster="lambda expression", file="PerformanceTests.cs"];
m7_304 [label="Exit lambda expression", span="551-559", cluster="lambda expression", file="PerformanceTests.cs"];
m7_322 [label="json = JsonConvert.SerializeObject(value, Formatting.None)", span="572-572", cluster="lambda expression", file="PerformanceTests.cs"];
m7_335 [label="serializer.Serialize(writer, value)", span="587-587", cluster="lambda expression", file="PerformanceTests.cs"];
m7_350 [label="DataContractSerializer dataContractSerializer = new DataContractSerializer(value.GetType())", span="600-600", cluster="lambda expression", file="PerformanceTests.cs"];
m7_351 [label="dataContractSerializer.WriteObject(ms, value)", span="601-601", cluster="lambda expression", file="PerformanceTests.cs"];
m7_363 [label="DataContractJsonSerializer dataContractJsonSerializer = new DataContractJsonSerializer(value.GetType())", span="613-613", cluster="lambda expression", file="PerformanceTests.cs"];
m7_364 [label="dataContractJsonSerializer.WriteObject(ms, value)", span="614-614", cluster="lambda expression", file="PerformanceTests.cs"];
m7_375 [label="formatter.Serialize(ms, value)", span="627-627", cluster="lambda expression", file="PerformanceTests.cs"];
m7_321 [label="i < interations", span="570-570", cluster="lambda expression", file="PerformanceTests.cs"];
m7_331 [label="i < interations", span="581-581", cluster="lambda expression", file="PerformanceTests.cs"];
m7_348 [label="i < interations", span="597-597", cluster="lambda expression", file="PerformanceTests.cs"];
m7_361 [label="i < interations", span="610-610", cluster="lambda expression", file="PerformanceTests.cs"];
m7_372 [label="i < interations", span="623-623", cluster="lambda expression", file="PerformanceTests.cs"];
m7_318 [label="Entry lambda expression", span="567-576", cluster="lambda expression", file="PerformanceTests.cs"];
m7_328 [label="Entry lambda expression", span="578-592", cluster="lambda expression", file="PerformanceTests.cs"];
m7_345 [label="Entry lambda expression", span="594-605", cluster="lambda expression", file="PerformanceTests.cs"];
m7_358 [label="Entry lambda expression", span="607-618", cluster="lambda expression", file="PerformanceTests.cs"];
m7_369 [label="Entry lambda expression", span="620-631", cluster="lambda expression", file="PerformanceTests.cs"];
m7_319 [label="string json = null", span="569-569", cluster="lambda expression", file="PerformanceTests.cs"];
m7_320 [label="int i = 0", span="570-570", cluster="lambda expression", file="PerformanceTests.cs"];
m7_324 [label="return Encoding.UTF8.GetBytes(json);", span="575-575", cluster="lambda expression", file="PerformanceTests.cs"];
m7_323 [label="i++", span="570-570", cluster="lambda expression", file="PerformanceTests.cs"];
m7_325 [label="Exit lambda expression", span="567-576", cluster="lambda expression", file="PerformanceTests.cs"];
m7_329 [label="MemoryStream ms = null", span="580-580", cluster="lambda expression", file="PerformanceTests.cs"];
m7_330 [label="int i = 0", span="581-581", cluster="lambda expression", file="PerformanceTests.cs"];
m7_338 [label="return ms.ToArray();", span="591-591", cluster="lambda expression", file="PerformanceTests.cs"];
m7_337 [label="i++", span="581-581", cluster="lambda expression", file="PerformanceTests.cs"];
m7_332 [label="ms = new MemoryStream()", span="583-583", cluster="lambda expression", file="PerformanceTests.cs"];
m7_333 [label="JsonSerializer serializer = new JsonSerializer()", span="584-584", cluster="lambda expression", file="PerformanceTests.cs"];
m7_334 [label="BsonWriter writer = new BsonWriter(ms)", span="585-585", cluster="lambda expression", file="PerformanceTests.cs"];
m7_336 [label="writer.Flush()", span="588-588", cluster="lambda expression", file="PerformanceTests.cs"];
m7_339 [label="Exit lambda expression", span="578-592", cluster="lambda expression", file="PerformanceTests.cs"];
m7_346 [label="MemoryStream ms = null", span="596-596", cluster="lambda expression", file="PerformanceTests.cs"];
m7_347 [label="int i = 0", span="597-597", cluster="lambda expression", file="PerformanceTests.cs"];
m7_353 [label="return ms.ToArray();", span="604-604", cluster="lambda expression", file="PerformanceTests.cs"];
m7_352 [label="i++", span="597-597", cluster="lambda expression", file="PerformanceTests.cs"];
m7_349 [label="ms = new MemoryStream()", span="599-599", cluster="lambda expression", file="PerformanceTests.cs"];
m7_354 [label="Exit lambda expression", span="594-605", cluster="lambda expression", file="PerformanceTests.cs"];
m7_359 [label="MemoryStream ms = null", span="609-609", cluster="lambda expression", file="PerformanceTests.cs"];
m7_360 [label="int i = 0", span="610-610", cluster="lambda expression", file="PerformanceTests.cs"];
m7_366 [label="return ms.ToArray();", span="617-617", cluster="lambda expression", file="PerformanceTests.cs"];
m7_365 [label="i++", span="610-610", cluster="lambda expression", file="PerformanceTests.cs"];
m7_362 [label="ms = new MemoryStream()", span="612-612", cluster="lambda expression", file="PerformanceTests.cs"];
m7_367 [label="Exit lambda expression", span="607-618", cluster="lambda expression", file="PerformanceTests.cs"];
m7_370 [label="MemoryStream ms = null", span="622-622", cluster="lambda expression", file="PerformanceTests.cs"];
m7_371 [label="int i = 0", span="623-623", cluster="lambda expression", file="PerformanceTests.cs"];
m7_377 [label="return ms.ToArray();", span="630-630", cluster="lambda expression", file="PerformanceTests.cs"];
m7_376 [label="i++", span="623-623", cluster="lambda expression", file="PerformanceTests.cs"];
m7_373 [label="ms = new MemoryStream()", span="625-625", cluster="lambda expression", file="PerformanceTests.cs"];
m7_374 [label="BinaryFormatter formatter = new BinaryFormatter()", span="626-626", cluster="lambda expression", file="PerformanceTests.cs"];
m7_378 [label="Exit lambda expression", span="620-631", cluster="lambda expression", file="PerformanceTests.cs"];
m7_548 [label="Entry lambda expression", span="761-761", cluster="lambda expression", file="PerformanceTests.cs"];
m7_551 [label="Entry lambda expression", span="769-773", cluster="lambda expression", file="PerformanceTests.cs"];
m7_549 [label="new JProperty(d.Key, d.Value)", span="761-761", cluster="lambda expression", file="PerformanceTests.cs"];
m7_550 [label="Exit lambda expression", span="761-761", cluster="lambda expression", file="PerformanceTests.cs"];
m7_552 [label="new JObject(\r\n                                    new JProperty(''Street'', a.Street),\r\n                                    new JProperty(''Phone'', a.Phone),\r\n                                    new JProperty(''Entered'', a.Entered))", span="770-773", cluster="lambda expression", file="PerformanceTests.cs"];
m7_553 [label="Exit lambda expression", span="769-773", cluster="lambda expression", file="PerformanceTests.cs"];
m7_737 [label="test[''dummy''] = new JValue(i)", span="1169-1169", cluster="lambda expression", file="PerformanceTests.cs"];
m7_738 [label="test.ToString(Formatting.None)", span="1170-1170", cluster="lambda expression", file="PerformanceTests.cs"];
m7_734 [label="Entry lambda expression", span="1165-1173", cluster="lambda expression", file="PerformanceTests.cs"];
m7_735 [label="int i = 0", span="1167-1167", cluster="lambda expression", file="PerformanceTests.cs"];
m7_736 [label="i < Iterations", span="1167-1167", cluster="lambda expression", file="PerformanceTests.cs"];
m7_739 [label="i++", span="1167-1167", cluster="lambda expression", file="PerformanceTests.cs"];
m7_740 [label="return null;", span="1172-1172", cluster="lambda expression", file="PerformanceTests.cs"];
m7_741 [label="Exit lambda expression", span="1165-1173", cluster="lambda expression", file="PerformanceTests.cs"];
m7_751 [label="test[''dummy''] = new JValue(i)", span="1186-1186", cluster="lambda expression", file="PerformanceTests.cs"];
m7_754 [label="test.WriteTo(jsonTextWriter)", span="1189-1189", cluster="lambda expression", file="PerformanceTests.cs"];
m7_752 [label="ms.Seek(0, SeekOrigin.Begin)", span="1187-1187", cluster="lambda expression", file="PerformanceTests.cs"];
m7_753 [label="JsonTextWriter jsonTextWriter = new JsonTextWriter(new StreamWriter(ms))", span="1188-1188", cluster="lambda expression", file="PerformanceTests.cs"];
m7_756 [label="ms.ToArray()", span="1191-1191", cluster="lambda expression", file="PerformanceTests.cs"];
m7_748 [label="Entry lambda expression", span="1182-1196", cluster="lambda expression", file="PerformanceTests.cs"];
m7_749 [label="int i = 0", span="1184-1184", cluster="lambda expression", file="PerformanceTests.cs"];
m7_750 [label="i < Iterations", span="1184-1184", cluster="lambda expression", file="PerformanceTests.cs"];
m7_757 [label="i++", span="1184-1184", cluster="lambda expression", file="PerformanceTests.cs"];
m7_758 [label="return null;", span="1195-1195", cluster="lambda expression", file="PerformanceTests.cs"];
m7_755 [label="jsonTextWriter.Flush()", span="1190-1190", cluster="lambda expression", file="PerformanceTests.cs"];
m7_759 [label="Exit lambda expression", span="1182-1196", cluster="lambda expression", file="PerformanceTests.cs"];
m7_766 [label="int i = 0", span="1204-1204", cluster="lambda expression", file="PerformanceTests.cs"];
m7_767 [label="i < Iterations * 100", span="1204-1204", cluster="lambda expression", file="PerformanceTests.cs"];
m7_769 [label="test[''i''] = i", span="1210-1210", cluster="lambda expression", file="PerformanceTests.cs"];
m7_772 [label="i++", span="1204-1204", cluster="lambda expression", file="PerformanceTests.cs"];
m7_768 [label="JObject test = new JObject(\r\n                        new JProperty(''one'', 1),\r\n                        new JProperty(''two'', 2))", span="1206-1208", cluster="lambda expression", file="PerformanceTests.cs"];
m7_773 [label="return null;", span="1214-1214", cluster="lambda expression", file="PerformanceTests.cs"];
m7_770 [label="int j = (int)test[''i'']", span="1211-1211", cluster="lambda expression", file="PerformanceTests.cs"];
m7_771 [label="test[''j''] = j", span="1212-1212", cluster="lambda expression", file="PerformanceTests.cs"];
m7_774 [label="Exit lambda expression", span="1202-1215", cluster="lambda expression", file="PerformanceTests.cs"];
m7_97 [label="Entry Newtonsoft.Json.Tests.Image.Image()", span="50-50", cluster="Newtonsoft.Json.Tests.Image.Image()", file="PerformanceTests.cs"];
m7_356 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="PerformanceTests.cs"];
m7_417 [label="Entry System.DateTime.AddHours(double)", span="0-0", cluster="System.DateTime.AddHours(double)", file="PerformanceTests.cs"];
m7_144 [label="Entry Newtonsoft.Json.Linq.JArray.JArray()", span="65-65", cluster="Newtonsoft.Json.Linq.JArray.JArray()", file="PerformanceTests.cs"];
m7_48 [label="Entry Newtonsoft.Json.Tests.PerformanceTests.SerializeKeyValuePair()", span="202-202", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeKeyValuePair()", file="PerformanceTests.cs"];
m7_49 [label="IList<KeyValuePair<string, int>> value = new List<KeyValuePair<string, int>>()", span="204-204", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeKeyValuePair()", file="PerformanceTests.cs"];
m7_50 [label="int i = 0", span="205-205", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeKeyValuePair()", file="PerformanceTests.cs"];
m7_52 [label="value.Add(new KeyValuePair<string, int>(''Key'' + i, i))", span="207-207", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeKeyValuePair()", file="PerformanceTests.cs"];
m7_54 [label="BenchmarkSerializeMethod(SerializeMethod.JsonNet, value)", span="210-210", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeKeyValuePair()", file="PerformanceTests.cs"];
m7_55 [label="string json = JsonConvert.SerializeObject(value)", span="212-212", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeKeyValuePair()", file="PerformanceTests.cs"];
m7_51 [label="i < 100", span="205-205", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeKeyValuePair()", file="PerformanceTests.cs"];
m7_53 [label="i++", span="205-205", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeKeyValuePair()", file="PerformanceTests.cs"];
m7_56 [label="BenchmarkDeserializeMethod<IList<KeyValuePair<string, int>>>(SerializeMethod.JsonNet, json)", span="214-214", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeKeyValuePair()", file="PerformanceTests.cs"];
m7_57 [label="Exit Newtonsoft.Json.Tests.PerformanceTests.SerializeKeyValuePair()", span="202-202", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeKeyValuePair()", file="PerformanceTests.cs"];
m7_116 [label="Entry Newtonsoft.Json.Tests.PerformanceTests.TimeOperation<T>(System.Func<T>, string)", span="294-294", cluster="Newtonsoft.Json.Tests.PerformanceTests.TimeOperation<T>(System.Func<T>, string)", file="PerformanceTests.cs"];
m7_117 [label="operation()", span="297-297", cluster="Newtonsoft.Json.Tests.PerformanceTests.TimeOperation<T>(System.Func<T>, string)", file="PerformanceTests.cs"];
m7_120 [label="T result = operation()", span="302-302", cluster="Newtonsoft.Json.Tests.PerformanceTests.TimeOperation<T>(System.Func<T>, string)", file="PerformanceTests.cs"];
m7_121 [label="Console.WriteLine(name)", span="304-304", cluster="Newtonsoft.Json.Tests.PerformanceTests.TimeOperation<T>(System.Func<T>, string)", file="PerformanceTests.cs"];
m7_118 [label="Stopwatch timed = new Stopwatch()", span="299-299", cluster="Newtonsoft.Json.Tests.PerformanceTests.TimeOperation<T>(System.Func<T>, string)", file="PerformanceTests.cs"];
m7_119 [label="timed.Start()", span="300-300", cluster="Newtonsoft.Json.Tests.PerformanceTests.TimeOperation<T>(System.Func<T>, string)", file="PerformanceTests.cs"];
m7_122 [label="Console.WriteLine(''{0} ms'', timed.ElapsedMilliseconds)", span="305-305", cluster="Newtonsoft.Json.Tests.PerformanceTests.TimeOperation<T>(System.Func<T>, string)", file="PerformanceTests.cs"];
m7_123 [label="timed.Stop()", span="307-307", cluster="Newtonsoft.Json.Tests.PerformanceTests.TimeOperation<T>(System.Func<T>, string)", file="PerformanceTests.cs"];
m7_124 [label="return result;", span="309-309", cluster="Newtonsoft.Json.Tests.PerformanceTests.TimeOperation<T>(System.Func<T>, string)", file="PerformanceTests.cs"];
m7_125 [label="Exit Newtonsoft.Json.Tests.PerformanceTests.TimeOperation<T>(System.Func<T>, string)", span="294-294", cluster="Newtonsoft.Json.Tests.PerformanceTests.TimeOperation<T>(System.Func<T>, string)", file="PerformanceTests.cs"];
m7_396 [label="Entry System.Console.WriteLine()", span="0-0", cluster="System.Console.WriteLine()", file="PerformanceTests.cs"];
m7_126 [label="Entry System.Func<TResult>.Invoke()", span="0-0", cluster="System.Func<TResult>.Invoke()", file="PerformanceTests.cs"];
m7_656 [label="Entry Newtonsoft.Json.Tests.PerformanceTests.DeserializeWebExtensions<T>(string)", span="1042-1042", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeWebExtensions<T>(string)", file="PerformanceTests.cs"];
m7_657 [label="JavaScriptSerializer ser = new JavaScriptSerializer { MaxJsonLength = int.MaxValue }", span="1044-1044", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeWebExtensions<T>(string)", file="PerformanceTests.cs"];
m7_658 [label="return ser.Deserialize<T>(json);", span="1046-1046", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeWebExtensions<T>(string)", file="PerformanceTests.cs"];
m7_659 [label="Exit Newtonsoft.Json.Tests.PerformanceTests.DeserializeWebExtensions<T>(string)", span="1042-1042", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeWebExtensions<T>(string)", file="PerformanceTests.cs"];
m7_760 [label="Entry System.IO.StreamWriter.StreamWriter(System.IO.Stream)", span="0-0", cluster="System.IO.StreamWriter.StreamWriter(System.IO.Stream)", file="PerformanceTests.cs"];
m7_395 [label="Entry Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", span="740-740", cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_448 [label="string json", span="742-742", cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_449 [label=method, span="744-744", cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_451 [label="json = JsonConvert.SerializeObject(value)", span="747-747", cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_453 [label="json = JsonConvert.SerializeObject(value, new IsoDateTimeConverter())", span="750-750", cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_455 [label="TestClass c = value as TestClass", span="754-754", cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_461 [label="TestClass c = value as TestClass", span="786-786", cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_512 [label="serializer.Serialize(writer, value)", span="852-852", cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_515 [label="json = SerializeWebExtensions(value)", span="859-859", cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_517 [label="json = SerializeDataContractJson(value)", span="862-862", cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_519 [label="json = SerializeDataContract(value)", span="865-865", cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_521 [label="json = SerializeBinaryFormatter(value)", span="868-868", cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_522 [label="throw new ArgumentOutOfRangeException(nameof(method));", span="871-871", cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_450 [label="SerializeMethod.JsonNet", span="746-746", cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_452 [label="SerializeMethod.JsonNetWithIsoConverter", span="749-749", cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_454 [label="SerializeMethod.JsonNetLinq", span="752-752", cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_460 [label="SerializeMethod.JsonNetManual", span="784-784", cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_508 [label="SerializeMethod.JsonNetBinary", span="847-847", cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_514 [label="SerializeMethod.JavaScriptSerializer", span="858-858", cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_516 [label="SerializeMethod.DataContractJsonSerializer", span="861-861", cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_518 [label="SerializeMethod.DataContractSerializer", span="864-864", cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_520 [label="SerializeMethod.BinaryFormatter", span="867-867", cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_456 [label="c != null", span="755-755", cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_457 [label="JObject o = new JObject(\r\n                            new JProperty(''strings'', new JArray(\r\n                                c.strings\r\n                                )),\r\n                            new JProperty(''dictionary'', new JObject(c.dictionary.Select(d => new JProperty(d.Key, d.Value)))),\r\n                            new JProperty(''Name'', c.Name),\r\n                            new JProperty(''Now'', c.Now),\r\n                            new JProperty(''BigNumber'', c.BigNumber),\r\n                            new JProperty(''Address1'', new JObject(\r\n                                new JProperty(''Street'', c.Address1.Street),\r\n                                new JProperty(''Phone'', c.Address1.Phone),\r\n                                new JProperty(''Entered'', c.Address1.Entered))),\r\n                            new JProperty(''Addresses'', new JArray(c.Addresses.Select(a =>\r\n                                new JObject(\r\n                                    new JProperty(''Street'', a.Street),\r\n                                    new JProperty(''Phone'', a.Phone),\r\n                                    new JProperty(''Entered'', a.Entered)))))\r\n                            )", span="757-774", cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_459 [label="json = string.Empty", span="780-780", cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_458 [label="json = o.ToString(Formatting.None)", span="776-776", cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_462 [label="c != null", span="787-787", cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_468 [label="c.strings", span="794-794", cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_473 [label="c.dictionary", span="801-801", cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_478 [label="writer.WriteValue(c.Name)", span="808-808", cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_480 [label="writer.WriteValue(c.Now)", span="810-810", cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_482 [label="writer.WriteValue(c.BigNumber)", span="812-812", cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_486 [label="writer.WriteValue(c.BigNumber)", span="816-816", cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_488 [label="writer.WriteValue(c.BigNumber)", span="818-818", cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_490 [label="writer.WriteValue(c.BigNumber)", span="820-820", cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_494 [label="c.Addresses", span="824-824", cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_463 [label="StringWriter sw = new StringWriter()", span="789-789", cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_507 [label="json = string.Empty", span="843-843", cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_464 [label="JsonTextWriter writer = new JsonTextWriter(sw)", span="790-790", cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_506 [label="json = sw.ToString()", span="839-839", cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_465 [label="writer.WriteStartObject()", span="791-791", cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_466 [label="writer.WritePropertyName(''strings'')", span="792-792", cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_467 [label="writer.WriteStartArray()", span="793-793", cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_469 [label="writer.WriteValue(s)", span="796-796", cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_470 [label="writer.WriteEndArray()", span="798-798", cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_471 [label="writer.WritePropertyName(''dictionary'')", span="799-799", cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_472 [label="writer.WriteStartObject()", span="800-800", cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_474 [label="writer.WritePropertyName(keyValuePair.Key)", span="803-803", cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_475 [label="writer.WriteValue(keyValuePair.Value)", span="804-804", cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_476 [label="writer.WriteEndObject()", span="806-806", cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_477 [label="writer.WritePropertyName(''Name'')", span="807-807", cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_479 [label="writer.WritePropertyName(''Now'')", span="809-809", cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_481 [label="writer.WritePropertyName(''BigNumber'')", span="811-811", cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_483 [label="writer.WritePropertyName(''Address1'')", span="813-813", cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_484 [label="writer.WriteStartObject()", span="814-814", cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_485 [label="writer.WritePropertyName(''Street'')", span="815-815", cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_487 [label="writer.WritePropertyName(''Street'')", span="817-817", cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_489 [label="writer.WritePropertyName(''Street'')", span="819-819", cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_491 [label="writer.WriteEndObject()", span="821-821", cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_492 [label="writer.WritePropertyName(''Addresses'')", span="822-822", cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_493 [label="writer.WriteStartArray()", span="823-823", cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_495 [label="writer.WriteStartObject()", span="826-826", cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_496 [label="writer.WritePropertyName(''Street'')", span="827-827", cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_497 [label="writer.WriteValue(address.Street)", span="828-828", cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_498 [label="writer.WritePropertyName(''Phone'')", span="829-829", cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_499 [label="writer.WriteValue(address.Phone)", span="830-830", cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_500 [label="writer.WritePropertyName(''Entered'')", span="831-831", cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_501 [label="writer.WriteValue(address.Entered)", span="832-832", cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_502 [label="writer.WriteEndObject()", span="833-833", cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_503 [label="writer.WriteEndArray()", span="835-835", cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_504 [label="writer.WriteEndObject()", span="836-836", cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_505 [label="writer.Flush()", span="838-838", cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_509 [label="MemoryStream ms = new MemoryStream(Buffer)", span="849-849", cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_510 [label="JsonSerializer serializer = new JsonSerializer()", span="850-850", cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_511 [label="BsonWriter writer = new BsonWriter(ms)", span="851-851", cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_513 [label="json = ''Bytes = '' + ms.Position", span="855-855", cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_523 [label="return json;", span="874-874", cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_524 [label="Exit Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", span="740-740", cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs"];
m7_795 [label="Entry Newtonsoft.Json.Tests.PerformanceTests.DeserializeNestedJToken()", span="1241-1241", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeNestedJToken()", file="PerformanceTests.cs"];
m7_796 [label="string json = (new string('[', 100000)) + ''1'' + ((new string(']', 100000)))", span="1243-1243", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeNestedJToken()", file="PerformanceTests.cs"];
m7_797 [label="Stopwatch sw", span="1245-1245", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeNestedJToken()", file="PerformanceTests.cs"];
m7_800 [label="var a = (JArray)JsonConvert.DeserializeObject(json)", span="1249-1249", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeNestedJToken()", file="PerformanceTests.cs"];
m7_798 [label="sw = new Stopwatch()", span="1246-1246", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeNestedJToken()", file="PerformanceTests.cs"];
m7_799 [label="sw.Start()", span="1247-1247", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeNestedJToken()", file="PerformanceTests.cs"];
m7_801 [label="sw.Stop()", span="1251-1251", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeNestedJToken()", file="PerformanceTests.cs"];
m7_803 [label="Console.WriteLine(''Deserialize big ass nested array in {0} millis'', sw.ElapsedMilliseconds)", span="1255-1255", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeNestedJToken()", file="PerformanceTests.cs"];
m7_802 [label="Assert.AreEqual(1, a.Count)", span="1253-1253", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeNestedJToken()", file="PerformanceTests.cs"];
m7_804 [label="Exit Newtonsoft.Json.Tests.PerformanceTests.DeserializeNestedJToken()", span="1241-1241", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeNestedJToken()", file="PerformanceTests.cs"];
m7_593 [label="Entry System.IO.StringReader.StringReader(string)", span="0-0", cluster="System.IO.StringReader.StringReader(string)", file="PerformanceTests.cs"];
m7_775 [label="Entry Newtonsoft.Json.Tests.PerformanceTests.NestedJToken()", span="1219-1219", cluster="Newtonsoft.Json.Tests.PerformanceTests.NestedJToken()", file="PerformanceTests.cs"];
m7_776 [label="Stopwatch sw", span="1221-1221", cluster="Newtonsoft.Json.Tests.PerformanceTests.NestedJToken()", file="PerformanceTests.cs"];
m7_777 [label="int i = 10000", span="1222-1222", cluster="Newtonsoft.Json.Tests.PerformanceTests.NestedJToken()", file="PerformanceTests.cs"];
m7_778 [label="i <= 100000", span="1222-1222", cluster="Newtonsoft.Json.Tests.PerformanceTests.NestedJToken()", file="PerformanceTests.cs"];
m7_784 [label="j < i", span="1228-1228", cluster="Newtonsoft.Json.Tests.PerformanceTests.NestedJToken()", file="PerformanceTests.cs"];
m7_791 [label="Console.WriteLine(''Created a JToken of depth {0} (using OM) in {1} millis'', i, sw.ElapsedMilliseconds)", span="1236-1236", cluster="Newtonsoft.Json.Tests.PerformanceTests.NestedJToken()", file="PerformanceTests.cs"];
m7_792 [label="i += 10000", span="1222-1222", cluster="Newtonsoft.Json.Tests.PerformanceTests.NestedJToken()", file="PerformanceTests.cs"];
m7_779 [label="sw = new Stopwatch()", span="1224-1224", cluster="Newtonsoft.Json.Tests.PerformanceTests.NestedJToken()", file="PerformanceTests.cs"];
m7_780 [label="sw.Start()", span="1225-1225", cluster="Newtonsoft.Json.Tests.PerformanceTests.NestedJToken()", file="PerformanceTests.cs"];
m7_790 [label="sw.Stop()", span="1235-1235", cluster="Newtonsoft.Json.Tests.PerformanceTests.NestedJToken()", file="PerformanceTests.cs"];
m7_781 [label="JArray ija = new JArray()", span="1226-1226", cluster="Newtonsoft.Json.Tests.PerformanceTests.NestedJToken()", file="PerformanceTests.cs"];
m7_782 [label="JToken ijt = ija", span="1227-1227", cluster="Newtonsoft.Json.Tests.PerformanceTests.NestedJToken()", file="PerformanceTests.cs"];
m7_786 [label="ija.Add(temp)", span="1231-1231", cluster="Newtonsoft.Json.Tests.PerformanceTests.NestedJToken()", file="PerformanceTests.cs"];
m7_789 [label="ija.Add(1)", span="1234-1234", cluster="Newtonsoft.Json.Tests.PerformanceTests.NestedJToken()", file="PerformanceTests.cs"];
m7_783 [label="int j = 0", span="1228-1228", cluster="Newtonsoft.Json.Tests.PerformanceTests.NestedJToken()", file="PerformanceTests.cs"];
m7_788 [label="j++", span="1228-1228", cluster="Newtonsoft.Json.Tests.PerformanceTests.NestedJToken()", file="PerformanceTests.cs"];
m7_785 [label="JArray temp = new JArray()", span="1230-1230", cluster="Newtonsoft.Json.Tests.PerformanceTests.NestedJToken()", file="PerformanceTests.cs"];
m7_787 [label="ija = temp", span="1232-1232", cluster="Newtonsoft.Json.Tests.PerformanceTests.NestedJToken()", file="PerformanceTests.cs"];
m7_793 [label="Exit Newtonsoft.Json.Tests.PerformanceTests.NestedJToken()", span="1219-1219", cluster="Newtonsoft.Json.Tests.PerformanceTests.NestedJToken()", file="PerformanceTests.cs"];
m7_582 [label="Entry System.Console.WriteLine(object)", span="0-0", cluster="System.Console.WriteLine(object)", file="PerformanceTests.cs"];
m7_252 [label="Entry System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.Value<U>()", span="157-157", cluster="System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.Value<U>()", file="PerformanceTests.cs"];
m7_647 [label="Entry Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetBinary<T>(byte[])", span="1030-1030", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetBinary<T>(byte[])", file="PerformanceTests.cs"];
m7_648 [label="Type type = typeof(T)", span="1032-1032", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetBinary<T>(byte[])", file="PerformanceTests.cs"];
m7_653 [label="return (T)serializer.Deserialize(new BsonReader(new MemoryStream(bson)), type);", span="1039-1039", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetBinary<T>(byte[])", file="PerformanceTests.cs"];
m7_649 [label="JsonSerializer serializer = new JsonSerializer()", span="1034-1034", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetBinary<T>(byte[])", file="PerformanceTests.cs"];
m7_650 [label="serializer.ObjectCreationHandling = Newtonsoft.Json.ObjectCreationHandling.Replace", span="1035-1035", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetBinary<T>(byte[])", file="PerformanceTests.cs"];
m7_651 [label="serializer.MissingMemberHandling = Newtonsoft.Json.MissingMemberHandling.Ignore", span="1036-1036", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetBinary<T>(byte[])", file="PerformanceTests.cs"];
m7_652 [label="serializer.ReferenceLoopHandling = ReferenceLoopHandling.Ignore", span="1037-1037", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetBinary<T>(byte[])", file="PerformanceTests.cs"];
m7_654 [label="Exit Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetBinary<T>(byte[])", span="1030-1030", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetBinary<T>(byte[])", file="PerformanceTests.cs"];
m7_655 [label="Entry Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream)", span="125-125", cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream)", file="PerformanceTests.cs"];
m7_273 [label="Entry Newtonsoft.Json.Tests.PerformanceTests.JTokenToObject()", span="525-525", cluster="Newtonsoft.Json.Tests.PerformanceTests.JTokenToObject()", file="PerformanceTests.cs"];
m7_274 [label="JValue s = new JValue(''String!'')", span="527-527", cluster="Newtonsoft.Json.Tests.PerformanceTests.JTokenToObject()", file="PerformanceTests.cs"];
m7_275 [label="int interations = 1000000", span="529-529", cluster="Newtonsoft.Json.Tests.PerformanceTests.JTokenToObject()", file="PerformanceTests.cs"];
m7_276 [label="TimeOperation(() =>\r\n            {\r\n                for (int i = 0; i < interations; i++)\r\n                {\r\n                    s.ToObject(typeof(string));\r\n                }\r\n\r\n                return '''';\r\n            }, ''New'')", span="531-539", cluster="Newtonsoft.Json.Tests.PerformanceTests.JTokenToObject()", file="PerformanceTests.cs"];
m7_277 [label="TimeOperation(() =>\r\n            {\r\n                for (int i = 0; i < interations; i++)\r\n                {\r\n                    s.ToObject(typeof(string), new JsonSerializer());\r\n                }\r\n\r\n                return '''';\r\n            }, ''Old'')", span="541-549", cluster="Newtonsoft.Json.Tests.PerformanceTests.JTokenToObject()", file="PerformanceTests.cs"];
m7_278 [label="TimeOperation(() =>\r\n            {\r\n                for (int i = 0; i < interations; i++)\r\n                {\r\n                    s.Value<string>();\r\n                }\r\n\r\n                return '''';\r\n            }, ''Value'')", span="551-559", cluster="Newtonsoft.Json.Tests.PerformanceTests.JTokenToObject()", file="PerformanceTests.cs"];
m7_279 [label="Exit Newtonsoft.Json.Tests.PerformanceTests.JTokenToObject()", span="525-525", cluster="Newtonsoft.Json.Tests.PerformanceTests.JTokenToObject()", file="PerformanceTests.cs"];
m7_58 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="PerformanceTests.cs"];
m7_629 [label="Entry System.Nullable<T>.GetValueOrDefault()", span="0-0", cluster="System.Nullable<T>.GetValueOrDefault()", file="PerformanceTests.cs"];
m7_580 [label="Entry System.GC.WaitForPendingFinalizers()", span="0-0", cluster="System.GC.WaitForPendingFinalizers()", file="PerformanceTests.cs"];
m7_132 [label="Entry Newtonsoft.Json.Tests.PerformanceTests.LargeArrayJTokenPathPerformance()", span="313-313", cluster="Newtonsoft.Json.Tests.PerformanceTests.LargeArrayJTokenPathPerformance()", file="PerformanceTests.cs"];
m7_133 [label="JArray a = new JArray()", span="315-315", cluster="Newtonsoft.Json.Tests.PerformanceTests.LargeArrayJTokenPathPerformance()", file="PerformanceTests.cs"];
m7_134 [label="int i = 0", span="316-316", cluster="Newtonsoft.Json.Tests.PerformanceTests.LargeArrayJTokenPathPerformance()", file="PerformanceTests.cs"];
m7_136 [label="a.Add(i)", span="318-318", cluster="Newtonsoft.Json.Tests.PerformanceTests.LargeArrayJTokenPathPerformance()", file="PerformanceTests.cs"];
m7_138 [label="JToken first = a.First", span="321-321", cluster="Newtonsoft.Json.Tests.PerformanceTests.LargeArrayJTokenPathPerformance()", file="PerformanceTests.cs"];
m7_139 [label="JToken last = a.Last", span="322-322", cluster="Newtonsoft.Json.Tests.PerformanceTests.LargeArrayJTokenPathPerformance()", file="PerformanceTests.cs"];
m7_135 [label="i < 100000", span="316-316", cluster="Newtonsoft.Json.Tests.PerformanceTests.LargeArrayJTokenPathPerformance()", file="PerformanceTests.cs"];
m7_137 [label="i++", span="316-316", cluster="Newtonsoft.Json.Tests.PerformanceTests.LargeArrayJTokenPathPerformance()", file="PerformanceTests.cs"];
m7_141 [label="TimeOperation(() =>\r\n            {\r\n                string p = null;\r\n                for (int i = 0; i < interations; i++)\r\n                {\r\n                    p = first.Path;\r\n                }\r\n\r\n                return p;\r\n            }, ''First'')", span="326-335", cluster="Newtonsoft.Json.Tests.PerformanceTests.LargeArrayJTokenPathPerformance()", file="PerformanceTests.cs"];
m7_140 [label="int interations = 1000", span="324-324", cluster="Newtonsoft.Json.Tests.PerformanceTests.LargeArrayJTokenPathPerformance()", file="PerformanceTests.cs"];
m7_142 [label="TimeOperation(() =>\r\n            {\r\n                string p = null;\r\n                for (int i = 0; i < interations; i++)\r\n                {\r\n                    p = last.Path;\r\n                }\r\n\r\n                return p;\r\n            }, ''Last'')", span="337-346", cluster="Newtonsoft.Json.Tests.PerformanceTests.LargeArrayJTokenPathPerformance()", file="PerformanceTests.cs"];
m7_143 [label="Exit Newtonsoft.Json.Tests.PerformanceTests.LargeArrayJTokenPathPerformance()", span="313-313", cluster="Newtonsoft.Json.Tests.PerformanceTests.LargeArrayJTokenPathPerformance()", file="PerformanceTests.cs"];
m7_379 [label="Entry System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.BinaryFormatter()", span="0-0", cluster="System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.BinaryFormatter()", file="PerformanceTests.cs"];
m7_28 [label="Entry System.IO.File.OpenText(string)", span="0-0", cluster="System.IO.File.OpenText(string)", file="PerformanceTests.cs"];
m7_79 [label="Entry Newtonsoft.Json.Tests.TestFixtureBase.HexToBytes(string)", span="235-235", cluster="Newtonsoft.Json.Tests.TestFixtureBase.HexToBytes(string)", file="PerformanceTests.cs"];
m7_438 [label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0", cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="PerformanceTests.cs"];
m7_271 [label="Entry Newtonsoft.Json.Utilities.StringUtils.CreateStringWriter(int)", span="106-106", cluster="Newtonsoft.Json.Utilities.StringUtils.CreateStringWriter(int)", file="PerformanceTests.cs"];
m7_531 [label="Entry System.IO.StringWriter.StringWriter()", span="0-0", cluster="System.IO.StringWriter.StringWriter()", file="PerformanceTests.cs"];
m7_256 [label="Entry Unk.Attribute", span="", cluster="Unk.Attribute", file="PerformanceTests.cs"];
m7_98 [label="Entry System.IO.File.ReadAllBytes(string)", span="0-0", cluster="System.IO.File.ReadAllBytes(string)", file="PerformanceTests.cs"];
m7_253 [label="Entry System.Diagnostics.Stopwatch.Reset()", span="0-0", cluster="System.Diagnostics.Stopwatch.Reset()", file="PerformanceTests.cs"];
m7_115 [label="Entry Unk.SerializeXNode", span="", cluster="Unk.SerializeXNode", file="PerformanceTests.cs"];
m7_539 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="414-414", cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="PerformanceTests.cs"];
m7_6 [label="Entry Newtonsoft.Json.Tests.PerformanceTests.SerializeAnonymous()", span="117-117", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeAnonymous()", file="PerformanceTests.cs"];
m7_7 [label="var helloWorld = new { message = ''Hello, World!'' }", span="119-119", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeAnonymous()", file="PerformanceTests.cs"];
m7_8 [label="BenchmarkSerializeMethod(SerializeMethod.JsonNet, helloWorld)", span="121-121", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeAnonymous()", file="PerformanceTests.cs"];
m7_9 [label="Exit Newtonsoft.Json.Tests.PerformanceTests.SerializeAnonymous()", span="117-117", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeAnonymous()", file="PerformanceTests.cs"];
m7_666 [label="Entry Unk.ReadObject", span="", cluster="Unk.ReadObject", file="PerformanceTests.cs"];
m7_632 [label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", span="430-430", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", file="PerformanceTests.cs"];
m7_59 [label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="PerformanceTests.cs"];
m7_717 [label="Entry string.String(char, int)", span="0-0", cluster="string.String(char, int)", file="PerformanceTests.cs"];
m7_326 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="540-540", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="PerformanceTests.cs"];
m7_61 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object)", span="527-527", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", file="PerformanceTests.cs"];
m7_423 [label="Entry Newtonsoft.Json.Tests.PerformanceTests.SerializeWebExtensions(object)", span="701-701", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeWebExtensions(object)", file="PerformanceTests.cs"];
m7_424 [label="JavaScriptSerializer ser = new JavaScriptSerializer()", span="703-703", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeWebExtensions(object)", file="PerformanceTests.cs"];
m7_425 [label="return ser.Serialize(value);", span="705-705", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeWebExtensions(object)", file="PerformanceTests.cs"];
m7_426 [label="Exit Newtonsoft.Json.Tests.PerformanceTests.SerializeWebExtensions(object)", span="701-701", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeWebExtensions(object)", file="PerformanceTests.cs"];
m7_579 [label="Entry System.GC.Collect()", span="0-0", cluster="System.GC.Collect()", file="PerformanceTests.cs"];
m7_546 [label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0", cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="PerformanceTests.cs"];
m7_440 [label="Entry Newtonsoft.Json.Tests.PerformanceTests.SerializeDataContract(object)", span="724-724", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeDataContract(object)", file="PerformanceTests.cs"];
m7_441 [label="DataContractSerializer dataContractSerializer\r\n                = new DataContractSerializer(value.GetType())", span="726-727", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeDataContract(object)", file="PerformanceTests.cs"];
m7_443 [label="dataContractSerializer.WriteObject(ms, value)", span="730-730", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeDataContract(object)", file="PerformanceTests.cs"];
m7_442 [label="MemoryStream ms = new MemoryStream()", span="729-729", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeDataContract(object)", file="PerformanceTests.cs"];
m7_444 [label="ms.Seek(0, SeekOrigin.Begin)", span="732-732", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeDataContract(object)", file="PerformanceTests.cs"];
m7_445 [label="StreamReader sr = new StreamReader(ms)", span="734-734", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeDataContract(object)", file="PerformanceTests.cs"];
m7_446 [label="return sr.ReadToEnd();", span="736-736", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeDataContract(object)", file="PerformanceTests.cs"];
m7_447 [label="Exit Newtonsoft.Json.Tests.PerformanceTests.SerializeDataContract(object)", span="724-724", cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeDataContract(object)", file="PerformanceTests.cs"];
m7_526 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", span="551-551", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", file="PerformanceTests.cs"];
m7_535 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteStartArray()", span="208-208", cluster="Newtonsoft.Json.JsonTextWriter.WriteStartArray()", file="PerformanceTests.cs"];
m7_109 [label="Entry Newtonsoft.Json.Tests.PerformanceTests.ConvertXNode()", span="282-282", cluster="Newtonsoft.Json.Tests.PerformanceTests.ConvertXNode()", file="PerformanceTests.cs"];
m7_110 [label="XDocument doc", span="284-284", cluster="Newtonsoft.Json.Tests.PerformanceTests.ConvertXNode()", file="PerformanceTests.cs"];
m7_111 [label="FileStream file = System.IO.File.OpenRead(''large_sample.xml'')", span="285-285", cluster="Newtonsoft.Json.Tests.PerformanceTests.ConvertXNode()", file="PerformanceTests.cs"];
m7_112 [label="doc = XDocument.Load(file)", span="287-287", cluster="Newtonsoft.Json.Tests.PerformanceTests.ConvertXNode()", file="PerformanceTests.cs"];
m7_113 [label="JsonConvert.SerializeXNode(doc)", span="290-290", cluster="Newtonsoft.Json.Tests.PerformanceTests.ConvertXNode()", file="PerformanceTests.cs"];
m7_114 [label="Exit Newtonsoft.Json.Tests.PerformanceTests.ConvertXNode()", span="282-282", cluster="Newtonsoft.Json.Tests.PerformanceTests.ConvertXNode()", file="PerformanceTests.cs"];
m7_729 [label="Entry double.ToString()", span="0-0", cluster="double.ToString()", file="PerformanceTests.cs"];
m7_761 [label="Entry Newtonsoft.Json.Linq.JObject.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", span="475-475", cluster="Newtonsoft.Json.Linq.JObject.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="PerformanceTests.cs"];
m7_127 [label="Entry System.Diagnostics.Stopwatch.Stopwatch()", span="0-0", cluster="System.Diagnostics.Stopwatch.Stopwatch()", file="PerformanceTests.cs"];
m7_418 [label="Entry Newtonsoft.Json.Tests.Address.Address()", span="1325-1325", cluster="Newtonsoft.Json.Tests.Address.Address()", file="PerformanceTests.cs"];
m7_544 [label="Entry System.IO.MemoryStream.MemoryStream(byte[])", span="0-0", cluster="System.IO.MemoryStream.MemoryStream(byte[])", file="PerformanceTests.cs"];
m7_628 [label="Entry Newtonsoft.Json.JsonTextReader.ReadAsInt32()", span="421-421", cluster="Newtonsoft.Json.JsonTextReader.ReadAsInt32()", file="PerformanceTests.cs"];
m7_428 [label="Entry Unk.Serialize", span="", cluster="Unk.Serialize", file="PerformanceTests.cs"];
m7_272 [label="Entry Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", span="148-148", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="PerformanceTests.cs"];
m7_327 [label="Entry System.Text.Encoding.GetBytes(string)", span="0-0", cluster="System.Text.Encoding.GetBytes(string)", file="PerformanceTests.cs"];
m7_807 [label="Newtonsoft.Json.Tests.PerformanceTests", span="", file="PerformanceTests.cs"];
m7_808 [label=interations, span="", file="PerformanceTests.cs"];
m7_809 [label=first, span="", file="PerformanceTests.cs"];
m7_810 [label=last, span="", file="PerformanceTests.cs"];
m7_811 [label=interations, span="", file="PerformanceTests.cs"];
m7_812 [label=a1, span="", file="PerformanceTests.cs"];
m7_813 [label=a2, span="", file="PerformanceTests.cs"];
m7_814 [label=interations, span="", file="PerformanceTests.cs"];
m7_815 [label=jsonText, span="", file="PerformanceTests.cs"];
m7_816 [label=interations, span="", file="PerformanceTests.cs"];
m7_817 [label=text, span="", file="PerformanceTests.cs"];
m7_818 [label=interations, span="", file="PerformanceTests.cs"];
m7_819 [label=s, span="", file="PerformanceTests.cs"];
m7_820 [label=interations, span="", file="PerformanceTests.cs"];
m7_821 [label=object, span="", file="PerformanceTests.cs"];
m7_822 [label=test, span="", file="PerformanceTests.cs"];
m7_823 [label=test, span="", file="PerformanceTests.cs"];
m7_824 [label=ms, span="", file="PerformanceTests.cs"];
m8_349 [label="Entry System.IO.MemoryStream.ToArray()", span="0-0", cluster="System.IO.MemoryStream.ToArray()", file="PreserveReferencesHandlingTests.cs"];
m8_276 [label="Entry Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ExampleWithout()", span="861-861", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ExampleWithout()", file="PreserveReferencesHandlingTests.cs"];
m8_277 [label="Person p = new Person\r\n            {\r\n                BirthDate = new DateTime(1980, 12, 23, 0, 0, 0, DateTimeKind.Utc),\r\n                LastModified = new DateTime(2009, 2, 20, 12, 59, 21, DateTimeKind.Utc),\r\n                Department = ''IT'',\r\n                Name = ''James''\r\n            }", span="863-869", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ExampleWithout()", file="PreserveReferencesHandlingTests.cs"];
m8_278 [label="List<Person> people = new List<Person>()", span="871-871", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ExampleWithout()", file="PreserveReferencesHandlingTests.cs"];
m8_279 [label="people.Add(p)", span="872-872", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ExampleWithout()", file="PreserveReferencesHandlingTests.cs"];
m8_280 [label="people.Add(p)", span="873-873", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ExampleWithout()", file="PreserveReferencesHandlingTests.cs"];
m8_281 [label="string json = JsonConvert.SerializeObject(people, Formatting.Indented)", span="875-875", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ExampleWithout()", file="PreserveReferencesHandlingTests.cs"];
m8_282 [label="Exit Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ExampleWithout()", span="861-861", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ExampleWithout()", file="PreserveReferencesHandlingTests.cs"];
m8_185 [label="Entry Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeCircularReferencesWithConverter()", span="529-529", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeCircularReferencesWithConverter()", file="PreserveReferencesHandlingTests.cs"];
m8_186 [label="CircularReferenceClass c1 = new CircularReferenceClass { Name = ''c1'' }", span="531-531", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeCircularReferencesWithConverter()", file="PreserveReferencesHandlingTests.cs"];
m8_187 [label="CircularReferenceClass c2 = new CircularReferenceClass { Name = ''c2'' }", span="532-532", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeCircularReferencesWithConverter()", file="PreserveReferencesHandlingTests.cs"];
m8_189 [label="c1.Child = c2", span="535-535", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeCircularReferencesWithConverter()", file="PreserveReferencesHandlingTests.cs"];
m8_191 [label="c3.Child = c1", span="537-537", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeCircularReferencesWithConverter()", file="PreserveReferencesHandlingTests.cs"];
m8_192 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects,\r\n                Converters = new List<JsonConverter> { new CircularReferenceClassConverter() }\r\n            })", span="539-543", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeCircularReferencesWithConverter()", file="PreserveReferencesHandlingTests.cs"];
m8_188 [label="CircularReferenceClass c3 = new CircularReferenceClass { Name = ''c3'' }", span="533-533", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeCircularReferencesWithConverter()", file="PreserveReferencesHandlingTests.cs"];
m8_190 [label="c2.Child = c3", span="536-536", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeCircularReferencesWithConverter()", file="PreserveReferencesHandlingTests.cs"];
m8_193 [label="StringAssert.AreEqual(@''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$type'''': ''''CircularReferenceClass'''',\r\n  ''''Name'''': ''''c1'''',\r\n  ''''Child'''': {\r\n    ''''$id'''': ''''2'''',\r\n    ''''$type'''': ''''CircularReferenceClass'''',\r\n    ''''Name'''': ''''c2'''',\r\n    ''''Child'''': {\r\n      ''''$id'''': ''''3'''',\r\n      ''''$type'''': ''''CircularReferenceClass'''',\r\n      ''''Name'''': ''''c3'''',\r\n      ''''Child'''': {\r\n        ''''$ref'''': ''''1''''\r\n      }\r\n    }\r\n  }\r\n}'', json)", span="545-562", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeCircularReferencesWithConverter()", file="PreserveReferencesHandlingTests.cs"];
m8_194 [label="Exit Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeCircularReferencesWithConverter()", span="529-529", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeCircularReferencesWithConverter()", file="PreserveReferencesHandlingTests.cs"];
m8_283 [label="Entry Newtonsoft.Json.Tests.TestObjects.Person.Person()", span="36-36", cluster="Newtonsoft.Json.Tests.TestObjects.Person.Person()", file="PreserveReferencesHandlingTests.cs"];
m8_221 [label="Entry Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeCircularReference()", span="662-662", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeCircularReference()", file="PreserveReferencesHandlingTests.cs"];
m8_222 [label="CircularReferenceClass c1 = new CircularReferenceClass { Name = ''c1'' }", span="664-664", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeCircularReference()", color=green, community=0, file="PreserveReferencesHandlingTests.cs"];
m8_223 [label="CircularReferenceClass c2 = new CircularReferenceClass { Name = ''c2'' }", span="665-665", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeCircularReference()", file="PreserveReferencesHandlingTests.cs"];
m8_60 [label="Entry Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeDictionarysWithPreserveObjectReferences()", span="236-236", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeDictionarysWithPreserveObjectReferences()", file="PreserveReferencesHandlingTests.cs"];
m8_61 [label="CircularDictionary circularDictionary = new CircularDictionary()", span="238-238", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeDictionarysWithPreserveObjectReferences()", file="PreserveReferencesHandlingTests.cs"];
m8_62 [label="circularDictionary.Add(''other'', new CircularDictionary { { ''blah'', null } })", span="239-239", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeDictionarysWithPreserveObjectReferences()", file="PreserveReferencesHandlingTests.cs"];
m8_63 [label="circularDictionary.Add(''self'', circularDictionary)", span="240-240", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeDictionarysWithPreserveObjectReferences()", file="PreserveReferencesHandlingTests.cs"];
m8_64 [label="string json = JsonConvert.SerializeObject(circularDictionary, Formatting.Indented,\r\n                new JsonSerializerSettings { PreserveReferencesHandling = PreserveReferencesHandling.All })", span="242-243", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeDictionarysWithPreserveObjectReferences()", file="PreserveReferencesHandlingTests.cs"];
m8_65 [label="StringAssert.AreEqual(@''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''other'''': {\r\n    ''''$id'''': ''''2'''',\r\n    ''''blah'''': null\r\n  },\r\n  ''''self'''': {\r\n    ''''$ref'''': ''''1''''\r\n  }\r\n}'', json)", span="245-254", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeDictionarysWithPreserveObjectReferences()", file="PreserveReferencesHandlingTests.cs"];
m8_66 [label="Exit Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeDictionarysWithPreserveObjectReferences()", span="236-236", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeDictionarysWithPreserveObjectReferences()", file="PreserveReferencesHandlingTests.cs"];
m8_78 [label="Entry Unk.IsTrue", span="", cluster="Unk.IsTrue", file="PreserveReferencesHandlingTests.cs"];
m8_126 [label="Entry Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeCircularDictionarysError()", span="441-441", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeCircularDictionarysError()", file="PreserveReferencesHandlingTests.cs"];
m8_127 [label="string classRef = typeof(CircularDictionary).FullName", span="443-443", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeCircularDictionarysError()", file="PreserveReferencesHandlingTests.cs"];
m8_128 [label="CircularDictionary circularDictionary = new CircularDictionary()", span="445-445", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeCircularDictionarysError()", file="PreserveReferencesHandlingTests.cs"];
m8_131 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.SerializeObject(circularDictionary, Formatting.Indented); }, @''Self referencing loop detected with type ''' + classRef + '''. Path ''.'')", span="449-449", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeCircularDictionarysError()", file="PreserveReferencesHandlingTests.cs"];
m8_129 [label="circularDictionary.Add(''other'', new CircularDictionary { { ''blah'', null } })", span="446-446", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeCircularDictionarysError()", file="PreserveReferencesHandlingTests.cs"];
m8_130 [label="circularDictionary.Add(''self'', circularDictionary)", span="447-447", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeCircularDictionarysError()", file="PreserveReferencesHandlingTests.cs"];
m8_132 [label="Exit Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeCircularDictionarysError()", span="441-441", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeCircularDictionarysError()", file="PreserveReferencesHandlingTests.cs"];
m8_40 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle, System.Runtime.Serialization.SerializationBinder)", span="153-153", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle, System.Runtime.Serialization.SerializationBinder)", file="PreserveReferencesHandlingTests.cs"];
m8_165 [label="Entry Newtonsoft.Json.Linq.JObject.FromObject(object, Newtonsoft.Json.JsonSerializer)", span="458-458", cluster="Newtonsoft.Json.Linq.JObject.FromObject(object, Newtonsoft.Json.JsonSerializer)", file="PreserveReferencesHandlingTests.cs"];
m8_350 [label="Entry System.Text.Encoding.GetString(byte[], int, int)", span="0-0", cluster="System.Text.Encoding.GetString(byte[], int, int)", file="PreserveReferencesHandlingTests.cs"];
m8_21 [label="Entry Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeReferenceInConvert()", span="100-100", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeReferenceInConvert()", file="PreserveReferencesHandlingTests.cs"];
m8_22 [label="JsonSerializerSettings settings = new JsonSerializerSettings()", span="102-102", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeReferenceInConvert()", file="PreserveReferencesHandlingTests.cs"];
m8_23 [label="settings.PreserveReferencesHandling = PreserveReferencesHandling.All", span="103-103", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeReferenceInConvert()", file="PreserveReferencesHandlingTests.cs"];
m8_24 [label="settings.TypeNameHandling = TypeNameHandling.All", span="104-104", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeReferenceInConvert()", file="PreserveReferencesHandlingTests.cs"];
m8_25 [label="settings.Formatting = Formatting.Indented", span="105-105", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeReferenceInConvert()", file="PreserveReferencesHandlingTests.cs"];
m8_31 [label="string s = JsonConvert.SerializeObject(c1, settings)", span="113-113", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeReferenceInConvert()", file="PreserveReferencesHandlingTests.cs"];
m8_33 [label="Container c2 = JsonConvert.DeserializeObject<Container>(s, settings)", span="140-140", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeReferenceInConvert()", file="PreserveReferencesHandlingTests.cs"];
m8_26 [label="Container c1 = new Container()", span="107-107", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeReferenceInConvert()", file="PreserveReferencesHandlingTests.cs"];
m8_27 [label="ContentA content = new ContentA()", span="108-108", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeReferenceInConvert()", file="PreserveReferencesHandlingTests.cs"];
m8_29 [label="c1.ListA.Add(content)", span="110-110", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeReferenceInConvert()", file="PreserveReferencesHandlingTests.cs"];
m8_30 [label="c1.ListB.Add(content)", span="111-111", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeReferenceInConvert()", file="PreserveReferencesHandlingTests.cs"];
m8_28 [label="content.B.SomeValue = true", span="109-109", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeReferenceInConvert()", file="PreserveReferencesHandlingTests.cs"];
m8_32 [label="StringAssert.AreEqual(@''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests+Container, Newtonsoft.Json.Tests'''',\r\n  ''''ListA'''': {\r\n    ''''$id'''': ''''2'''',\r\n    ''''$type'''': '''''' + ReflectionUtils.GetTypeName(typeof(List<ContentA>), 0, DefaultSerializationBinder.Instance) + @'''''',\r\n    ''''$values'''': [\r\n      {\r\n        ''''$id'''': ''''3'''',\r\n        ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests+ContentB, Newtonsoft.Json.Tests'''',\r\n        ''''SomeValue'''': true\r\n      }\r\n    ]\r\n  },\r\n  ''''ListB'''': {\r\n    ''''$id'''': ''''4'''',\r\n    ''''$type'''': '''''' + ReflectionUtils.GetTypeName(typeof(List<ContentA>), 0, DefaultSerializationBinder.Instance) + @'''''',\r\n    ''''$values'''': [\r\n      {\r\n        ''''$ref'''': ''''3''''\r\n      }\r\n    ]\r\n  }\r\n}'', s)", span="115-138", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeReferenceInConvert()", file="PreserveReferencesHandlingTests.cs"];
m8_34 [label="Assert.AreEqual(c2.ListA[0], c2.ListB[0])", span="142-142", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeReferenceInConvert()", file="PreserveReferencesHandlingTests.cs"];
m8_35 [label="Assert.AreEqual(true, c2.ListA[0].B.SomeValue)", span="143-143", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeReferenceInConvert()", file="PreserveReferencesHandlingTests.cs"];
m8_36 [label="Exit Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeReferenceInConvert()", span="100-100", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeReferenceInConvert()", file="PreserveReferencesHandlingTests.cs"];
m8_161 [label="Entry Newtonsoft.Json.Serialization.IReferenceResolver.GetReference(object, object)", span="46-46", cluster="Newtonsoft.Json.Serialization.IReferenceResolver.GetReference(object, object)", file="PreserveReferencesHandlingTests.cs"];
m8_150 [label="Entry Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.CircularReferenceClassConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="488-488", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.CircularReferenceClassConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="PreserveReferencesHandlingTests.cs"];
m8_151 [label="CircularReferenceClass circularReferenceClass = (CircularReferenceClass)value", span="490-490", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.CircularReferenceClassConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="PreserveReferencesHandlingTests.cs"];
m8_152 [label="string reference = serializer.ReferenceResolver.GetReference(serializer, circularReferenceClass)", span="492-492", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.CircularReferenceClassConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="PreserveReferencesHandlingTests.cs"];
m8_155 [label="me[''$type''] = new JValue(value.GetType().Name)", span="496-496", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.CircularReferenceClassConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="PreserveReferencesHandlingTests.cs"];
m8_157 [label="JObject o = JObject.FromObject(circularReferenceClass.Child, serializer)", span="499-499", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.CircularReferenceClassConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="PreserveReferencesHandlingTests.cs"];
m8_159 [label="me.WriteTo(writer)", span="502-502", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.CircularReferenceClassConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="PreserveReferencesHandlingTests.cs"];
m8_156 [label="me[''Name''] = new JValue(circularReferenceClass.Name)", span="497-497", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.CircularReferenceClassConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="PreserveReferencesHandlingTests.cs"];
m8_153 [label="JObject me = new JObject()", span="494-494", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.CircularReferenceClassConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="PreserveReferencesHandlingTests.cs"];
m8_154 [label="me[''$id''] = new JValue(reference)", span="495-495", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.CircularReferenceClassConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="PreserveReferencesHandlingTests.cs"];
m8_158 [label="me[''Child''] = o", span="500-500", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.CircularReferenceClassConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="PreserveReferencesHandlingTests.cs"];
m8_160 [label="Exit Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.CircularReferenceClassConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="488-488", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.CircularReferenceClassConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="PreserveReferencesHandlingTests.cs"];
m8_181 [label="Entry Newtonsoft.Json.Serialization.IReferenceResolver.ResolveReference(object, string)", span="38-38", cluster="Newtonsoft.Json.Serialization.IReferenceResolver.ResolveReference(object, string)", file="PreserveReferencesHandlingTests.cs"];
m8_364 [label="Entry Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ReferencedComponentList()", span="1075-1075", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ReferencedComponentList()", file="PreserveReferencesHandlingTests.cs"];
m8_365 [label="var c1 = new TestComponentSimple()", span="1077-1077", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ReferencedComponentList()", file="PreserveReferencesHandlingTests.cs"];
m8_366 [label="ReferencedList<TestComponentSimple> l = new ReferencedList<TestComponentSimple>()", span="1079-1079", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ReferencedComponentList()", file="PreserveReferencesHandlingTests.cs"];
m8_367 [label="l.Add(c1)", span="1080-1080", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ReferencedComponentList()", file="PreserveReferencesHandlingTests.cs"];
m8_369 [label="l.Add(c1)", span="1082-1082", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ReferencedComponentList()", file="PreserveReferencesHandlingTests.cs"];
m8_368 [label="l.Add(new TestComponentSimple())", span="1081-1081", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ReferencedComponentList()", file="PreserveReferencesHandlingTests.cs"];
m8_370 [label="string json = JsonConvert.SerializeObject(l, Formatting.Indented)", span="1084-1084", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ReferencedComponentList()", file="PreserveReferencesHandlingTests.cs"];
m8_371 [label="StringAssert.AreEqual(@''[\r\n  {\r\n    ''''$id'''': ''''1'''',\r\n    ''''MyProperty'''': 0\r\n  },\r\n  {\r\n    ''''$id'''': ''''2'''',\r\n    ''''MyProperty'''': 0\r\n  },\r\n  {\r\n    ''''$ref'''': ''''1''''\r\n  }\r\n]'', json)", span="1085-1097", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ReferencedComponentList()", file="PreserveReferencesHandlingTests.cs"];
m8_372 [label="Exit Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ReferencedComponentList()", span="1075-1075", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ReferencedComponentList()", file="PreserveReferencesHandlingTests.cs"];
m8_374 [label="Entry Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ReferencedIntDictionary()", span="1101-1101", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ReferencedIntDictionary()", file="PreserveReferencesHandlingTests.cs"];
m8_375 [label="ReferencedDictionary<int> l = new ReferencedDictionary<int>()", span="1103-1103", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ReferencedIntDictionary()", file="PreserveReferencesHandlingTests.cs"];
m8_376 [label="l.Add(''First'', 1)", span="1104-1104", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ReferencedIntDictionary()", file="PreserveReferencesHandlingTests.cs"];
m8_377 [label="l.Add(''Second'', 2)", span="1105-1105", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ReferencedIntDictionary()", file="PreserveReferencesHandlingTests.cs"];
m8_378 [label="l.Add(''Third'', 3)", span="1106-1106", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ReferencedIntDictionary()", file="PreserveReferencesHandlingTests.cs"];
m8_379 [label="string json = JsonConvert.SerializeObject(l, Formatting.Indented)", span="1108-1108", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ReferencedIntDictionary()", file="PreserveReferencesHandlingTests.cs"];
m8_380 [label="StringAssert.AreEqual(@''{\r\n  ''''First'''': 1,\r\n  ''''Second'''': 2,\r\n  ''''Third'''': 3\r\n}'', json)", span="1109-1113", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ReferencedIntDictionary()", file="PreserveReferencesHandlingTests.cs"];
m8_381 [label="Exit Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ReferencedIntDictionary()", span="1101-1101", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ReferencedIntDictionary()", file="PreserveReferencesHandlingTests.cs"];
m8_143 [label="Entry Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.UnexpectedEnd()", span="470-470", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.UnexpectedEnd()", file="PreserveReferencesHandlingTests.cs"];
m8_144 [label="string json = @''{\r\n  ''''$id'''':''", span="472-473", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.UnexpectedEnd()", file="PreserveReferencesHandlingTests.cs"];
m8_145 [label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonConvert.DeserializeObject<string[][]>(json,\r\n                    new JsonSerializerSettings\r\n                    {\r\n                        PreserveReferencesHandling = PreserveReferencesHandling.All,\r\n                        MetadataPropertyHandling = MetadataPropertyHandling.Default\r\n                    });\r\n            }, @''Unexpected end when reading JSON. Path '$id', line 2, position 8.'')", span="475-483", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.UnexpectedEnd()", file="PreserveReferencesHandlingTests.cs"];
m8_146 [label="Exit Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.UnexpectedEnd()", span="470-470", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.UnexpectedEnd()", file="PreserveReferencesHandlingTests.cs"];
m8_58 [label="Entry Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.Child.Child()", span="165-165", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.Child.Child()", file="PreserveReferencesHandlingTests.cs"];
m8_300 [label="Entry Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.User.User()", span="955-955", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.User.User()", file="PreserveReferencesHandlingTests.cs"];
m8_301 [label="Exit Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.User.User()", span="955-955", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.User.User()", file="PreserveReferencesHandlingTests.cs"];
m8_246 [label="Entry Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeReferenceInList()", span="756-756", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeReferenceInList()", file="PreserveReferencesHandlingTests.cs"];
m8_247 [label="string json = @''[\r\n  {\r\n    ''''$id'''': ''''1'''',\r\n    ''''Name'''': ''''e1'''',\r\n    ''''Manager'''': null\r\n  },\r\n  {\r\n    ''''$id'''': ''''2'''',\r\n    ''''Name'''': ''''e2'''',\r\n    ''''Manager'''': null\r\n  },\r\n  {\r\n    ''''$ref'''': ''''1''''\r\n  },\r\n  {\r\n    ''''$ref'''': ''''2''''\r\n  }\r\n]''", span="758-775", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeReferenceInList()", file="PreserveReferencesHandlingTests.cs"];
m8_248 [label="List<EmployeeReference> employees = JsonConvert.DeserializeObject<List<EmployeeReference>>(json)", span="777-777", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeReferenceInList()", file="PreserveReferencesHandlingTests.cs"];
m8_249 [label="Assert.AreEqual(4, employees.Count)", span="778-778", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeReferenceInList()", file="PreserveReferencesHandlingTests.cs"];
m8_250 [label="Assert.AreEqual(''e1'', employees[0].Name)", span="780-780", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeReferenceInList()", file="PreserveReferencesHandlingTests.cs"];
m8_251 [label="Assert.AreEqual(''e2'', employees[1].Name)", span="781-781", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeReferenceInList()", file="PreserveReferencesHandlingTests.cs"];
m8_252 [label="Assert.AreEqual(''e1'', employees[2].Name)", span="782-782", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeReferenceInList()", file="PreserveReferencesHandlingTests.cs"];
m8_253 [label="Assert.AreEqual(''e2'', employees[3].Name)", span="783-783", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeReferenceInList()", file="PreserveReferencesHandlingTests.cs"];
m8_254 [label="Assert.AreEqual(employees[0], employees[2])", span="785-785", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeReferenceInList()", file="PreserveReferencesHandlingTests.cs"];
m8_255 [label="Assert.AreEqual(employees[1], employees[3])", span="786-786", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeReferenceInList()", file="PreserveReferencesHandlingTests.cs"];
m8_256 [label="Exit Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeReferenceInList()", span="756-756", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeReferenceInList()", file="PreserveReferencesHandlingTests.cs"];
m8_37 [label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="397-397", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="PreserveReferencesHandlingTests.cs"];
m8_177 [label="Entry Newtonsoft.Json.Linq.JObject.Load(Newtonsoft.Json.JsonReader)", span="356-356", cluster="Newtonsoft.Json.Linq.JObject.Load(Newtonsoft.Json.JsonReader)", file="PreserveReferencesHandlingTests.cs"];
m8_162 [label="Entry Newtonsoft.Json.Linq.JObject.JObject()", span="88-88", cluster="Newtonsoft.Json.Linq.JObject.JObject()", file="PreserveReferencesHandlingTests.cs"];
m8_180 [label="Entry Newtonsoft.Json.JsonSerializer.Populate(Newtonsoft.Json.JsonReader, object)", span="724-724", cluster="Newtonsoft.Json.JsonSerializer.Populate(Newtonsoft.Json.JsonReader, object)", file="PreserveReferencesHandlingTests.cs"];
m8_354 [label="Entry Unk.AreNotEqual", span="", cluster="Unk.AreNotEqual", file="PreserveReferencesHandlingTests.cs"];
m8_382 [label="Entry Newtonsoft.Json.Tests.Serialization.ReferencedDictionary<T>.ReferencedDictionary()", span="1277-1277", cluster="Newtonsoft.Json.Tests.Serialization.ReferencedDictionary<T>.ReferencedDictionary()", file="PreserveReferencesHandlingTests.cs"];
m8_265 [label="Entry Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeReferenceInDictionary()", span="826-826", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeReferenceInDictionary()", file="PreserveReferencesHandlingTests.cs"];
m8_266 [label="string json = @''{\r\n  ''''One'''': {\r\n    ''''$id'''': ''''1'''',\r\n    ''''Name'''': ''''e1'''',\r\n    ''''Manager'''': null\r\n  },\r\n  ''''Two'''': {\r\n    ''''$id'''': ''''2'''',\r\n    ''''Name'''': ''''e2'''',\r\n    ''''Manager'''': null\r\n  },\r\n  ''''Three'''': {\r\n    ''''$ref'''': ''''1''''\r\n  },\r\n  ''''Four'''': {\r\n    ''''$ref'''': ''''2''''\r\n  }\r\n}''", span="828-845", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeReferenceInDictionary()", file="PreserveReferencesHandlingTests.cs"];
m8_267 [label="Dictionary<string, EmployeeReference> employees = JsonConvert.DeserializeObject<Dictionary<string, EmployeeReference>>(json)", span="847-847", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeReferenceInDictionary()", file="PreserveReferencesHandlingTests.cs"];
m8_268 [label="Assert.AreEqual(4, employees.Count)", span="848-848", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeReferenceInDictionary()", file="PreserveReferencesHandlingTests.cs"];
m8_269 [label="EmployeeReference e1 = employees[''One'']", span="850-850", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeReferenceInDictionary()", file="PreserveReferencesHandlingTests.cs"];
m8_270 [label="EmployeeReference e2 = employees[''Two'']", span="851-851", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeReferenceInDictionary()", file="PreserveReferencesHandlingTests.cs"];
m8_273 [label="Assert.AreEqual(e1, employees[''Three''])", span="856-856", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeReferenceInDictionary()", file="PreserveReferencesHandlingTests.cs"];
m8_274 [label="Assert.AreEqual(e2, employees[''Four''])", span="857-857", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeReferenceInDictionary()", file="PreserveReferencesHandlingTests.cs"];
m8_271 [label="Assert.AreEqual(''e1'', e1.Name)", span="853-853", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeReferenceInDictionary()", file="PreserveReferencesHandlingTests.cs"];
m8_272 [label="Assert.AreEqual(''e2'', e2.Name)", span="854-854", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeReferenceInDictionary()", file="PreserveReferencesHandlingTests.cs"];
m8_275 [label="Exit Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeReferenceInDictionary()", span="826-826", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeReferenceInDictionary()", file="PreserveReferencesHandlingTests.cs"];
m8_306 [label="Entry Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.User.GetHashCode()", span="968-968", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.User.GetHashCode()", file="PreserveReferencesHandlingTests.cs"];
m8_307 [label="return SecretType.GetHashCode();", span="970-970", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.User.GetHashCode()", file="PreserveReferencesHandlingTests.cs"];
m8_308 [label="Exit Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.User.GetHashCode()", span="968-968", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.User.GetHashCode()", file="PreserveReferencesHandlingTests.cs"];
m8_344 [label="Entry Newtonsoft.Json.Tests.TestObjects.MyClass.MyClass()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.MyClass.MyClass()", file="PreserveReferencesHandlingTests.cs"];
m8_302 [label="Entry Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.User.User(string, System.Type)", span="959-959", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.User.User(string, System.Type)", file="PreserveReferencesHandlingTests.cs"];
m8_303 [label="Login = login", span="962-962", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.User.User(string, System.Type)", file="PreserveReferencesHandlingTests.cs"];
m8_304 [label="SecretType = secretType", span="963-963", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.User.User(string, System.Type)", file="PreserveReferencesHandlingTests.cs"];
m8_305 [label="Exit Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.User.User(string, System.Type)", span="959-959", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.User.User(string, System.Type)", file="PreserveReferencesHandlingTests.cs"];
m8_204 [label="Entry Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeEmployeeReference()", span="600-600", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeEmployeeReference()", file="PreserveReferencesHandlingTests.cs"];
m8_205 [label="EmployeeReference mikeManager = new EmployeeReference\r\n            {\r\n                Name = ''Mike Manager''\r\n            }", span="602-605", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeEmployeeReference()", file="PreserveReferencesHandlingTests.cs"];
m8_206 [label="EmployeeReference joeUser = new EmployeeReference\r\n            {\r\n                Name = ''Joe User'',\r\n                Manager = mikeManager\r\n            }", span="606-610", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeEmployeeReference()", file="PreserveReferencesHandlingTests.cs"];
m8_207 [label="List<EmployeeReference> employees = new List<EmployeeReference>\r\n            {\r\n                mikeManager,\r\n                joeUser\r\n            }", span="612-616", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeEmployeeReference()", file="PreserveReferencesHandlingTests.cs"];
m8_208 [label="string json = JsonConvert.SerializeObject(employees, Formatting.Indented)", span="618-618", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeEmployeeReference()", file="PreserveReferencesHandlingTests.cs"];
m8_209 [label="StringAssert.AreEqual(@''[\r\n  {\r\n    ''''$id'''': ''''1'''',\r\n    ''''Name'''': ''''Mike Manager'''',\r\n    ''''Manager'''': null\r\n  },\r\n  {\r\n    ''''$id'''': ''''2'''',\r\n    ''''Name'''': ''''Joe User'''',\r\n    ''''Manager'''': {\r\n      ''''$ref'''': ''''1''''\r\n    }\r\n  }\r\n]'', json)", span="619-632", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeEmployeeReference()", file="PreserveReferencesHandlingTests.cs"];
m8_210 [label="Exit Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeEmployeeReference()", span="600-600", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeEmployeeReference()", file="PreserveReferencesHandlingTests.cs"];
m8_68 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="PreserveReferencesHandlingTests.cs"];
m8_424 [label="Entry Unk.IsFalse", span="", cluster="Unk.IsFalse", file="PreserveReferencesHandlingTests.cs"];
m8_101 [label="Entry Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeListsWithPreserveObjectReferences()", span="323-323", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeListsWithPreserveObjectReferences()", file="PreserveReferencesHandlingTests.cs"];
m8_102 [label="CircularList circularList = new CircularList()", span="325-325", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeListsWithPreserveObjectReferences()", file="PreserveReferencesHandlingTests.cs"];
m8_103 [label="circularList.Add(null)", span="326-326", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeListsWithPreserveObjectReferences()", file="PreserveReferencesHandlingTests.cs"];
m8_104 [label="circularList.Add(new CircularList { null })", span="327-327", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeListsWithPreserveObjectReferences()", file="PreserveReferencesHandlingTests.cs"];
m8_105 [label="circularList.Add(new CircularList { new CircularList { circularList } })", span="328-328", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeListsWithPreserveObjectReferences()", file="PreserveReferencesHandlingTests.cs"];
m8_106 [label="string json = JsonConvert.SerializeObject(circularList, Formatting.Indented,\r\n                new JsonSerializerSettings { PreserveReferencesHandling = PreserveReferencesHandling.All })", span="330-331", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeListsWithPreserveObjectReferences()", file="PreserveReferencesHandlingTests.cs"];
m8_107 [label="StringAssert.AreEqual(@''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$values'''': [\r\n    null,\r\n    {\r\n      ''''$id'''': ''''2'''',\r\n      ''''$values'''': [\r\n        null\r\n      ]\r\n    },\r\n    {\r\n      ''''$id'''': ''''3'''',\r\n      ''''$values'''': [\r\n        {\r\n          ''''$id'''': ''''4'''',\r\n          ''''$values'''': [\r\n            {\r\n              ''''$ref'''': ''''1''''\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}'', json)", span="333-357", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeListsWithPreserveObjectReferences()", file="PreserveReferencesHandlingTests.cs"];
m8_108 [label="Exit Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeListsWithPreserveObjectReferences()", span="323-323", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeListsWithPreserveObjectReferences()", file="PreserveReferencesHandlingTests.cs"];
m8_77 [label="Entry object.ReferenceEquals(object, object)", span="0-0", cluster="object.ReferenceEquals(object, object)", file="PreserveReferencesHandlingTests.cs"];
m8_346 [label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0", cluster="System.IO.MemoryStream.MemoryStream()", file="PreserveReferencesHandlingTests.cs"];
m8_257 [label="Entry Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeReferenceInDictionary()", span="790-790", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeReferenceInDictionary()", file="PreserveReferencesHandlingTests.cs"];
m8_258 [label="EmployeeReference e1 = new EmployeeReference { Name = ''e1'' }", span="792-792", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeReferenceInDictionary()", file="PreserveReferencesHandlingTests.cs"];
m8_259 [label="EmployeeReference e2 = new EmployeeReference { Name = ''e2'' }", span="793-793", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeReferenceInDictionary()", file="PreserveReferencesHandlingTests.cs"];
m8_260 [label="Dictionary<string, EmployeeReference> employees = new Dictionary<string, EmployeeReference>\r\n            {\r\n                { ''One'', e1 },\r\n                { ''Two'', e2 },\r\n                { ''Three'', e1 },\r\n                { ''Four'', e2 }\r\n            }", span="795-801", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeReferenceInDictionary()", file="PreserveReferencesHandlingTests.cs"];
m8_261 [label="string json = JsonConvert.SerializeObject(employees, Formatting.Indented)", span="803-803", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeReferenceInDictionary()", file="PreserveReferencesHandlingTests.cs"];
m8_262 [label="StringAssert.AreEqual(@''{\r\n  ''''One'''': {\r\n    ''''$id'''': ''''1'''',\r\n    ''''Name'''': ''''e1'''',\r\n    ''''Manager'''': null\r\n  },\r\n  ''''Two'''': {\r\n    ''''$id'''': ''''2'''',\r\n    ''''Name'''': ''''e2'''',\r\n    ''''Manager'''': null\r\n  },\r\n  ''''Three'''': {\r\n    ''''$ref'''': ''''1''''\r\n  },\r\n  ''''Four'''': {\r\n    ''''$ref'''': ''''2''''\r\n  }\r\n}'', json)", span="805-822", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeReferenceInDictionary()", file="PreserveReferencesHandlingTests.cs"];
m8_263 [label="Exit Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeReferenceInDictionary()", span="790-790", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeReferenceInDictionary()", file="PreserveReferencesHandlingTests.cs"];
m8_10 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", span="787-787", cluster="Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", file="PreserveReferencesHandlingTests.cs"];
m8_136 [label="Entry Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeCircularDictionarysIgnore()", span="453-453", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeCircularDictionarysIgnore()", file="PreserveReferencesHandlingTests.cs"];
m8_137 [label="CircularDictionary circularDictionary = new CircularDictionary()", span="455-455", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeCircularDictionarysIgnore()", file="PreserveReferencesHandlingTests.cs"];
m8_138 [label="circularDictionary.Add(''other'', new CircularDictionary { { ''blah'', null } })", span="456-456", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeCircularDictionarysIgnore()", file="PreserveReferencesHandlingTests.cs"];
m8_139 [label="circularDictionary.Add(''self'', circularDictionary)", span="457-457", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeCircularDictionarysIgnore()", file="PreserveReferencesHandlingTests.cs"];
m8_140 [label="string json = JsonConvert.SerializeObject(circularDictionary, Formatting.Indented,\r\n                new JsonSerializerSettings { ReferenceLoopHandling = ReferenceLoopHandling.Ignore })", span="459-460", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeCircularDictionarysIgnore()", file="PreserveReferencesHandlingTests.cs"];
m8_141 [label="StringAssert.AreEqual(@''{\r\n  ''''other'''': {\r\n    ''''blah'''': null\r\n  }\r\n}'', json)", span="462-466", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeCircularDictionarysIgnore()", file="PreserveReferencesHandlingTests.cs"];
m8_142 [label="Exit Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeCircularDictionarysIgnore()", span="453-453", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeCircularDictionarysIgnore()", file="PreserveReferencesHandlingTests.cs"];
m8_93 [label="Entry Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeCircularListsIgnore()", span="300-300", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeCircularListsIgnore()", file="PreserveReferencesHandlingTests.cs"];
m8_94 [label="CircularList circularList = new CircularList()", span="302-302", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeCircularListsIgnore()", file="PreserveReferencesHandlingTests.cs"];
m8_95 [label="circularList.Add(null)", span="303-303", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeCircularListsIgnore()", file="PreserveReferencesHandlingTests.cs"];
m8_96 [label="circularList.Add(new CircularList { null })", span="304-304", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeCircularListsIgnore()", file="PreserveReferencesHandlingTests.cs"];
m8_97 [label="circularList.Add(new CircularList { new CircularList { circularList } })", span="305-305", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeCircularListsIgnore()", file="PreserveReferencesHandlingTests.cs"];
m8_98 [label="string json = JsonConvert.SerializeObject(circularList,\r\n                Formatting.Indented,\r\n                new JsonSerializerSettings { ReferenceLoopHandling = ReferenceLoopHandling.Ignore })", span="307-309", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeCircularListsIgnore()", file="PreserveReferencesHandlingTests.cs"];
m8_99 [label="StringAssert.AreEqual(@''[\r\n  null,\r\n  [\r\n    null\r\n  ],\r\n  [\r\n    []\r\n  ]\r\n]'', json)", span="311-319", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeCircularListsIgnore()", file="PreserveReferencesHandlingTests.cs"];
m8_100 [label="Exit Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeCircularListsIgnore()", span="300-300", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeCircularListsIgnore()", file="PreserveReferencesHandlingTests.cs"];
m8_353 [label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="78-78", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="PreserveReferencesHandlingTests.cs"];
m8_42 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="817-817", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="PreserveReferencesHandlingTests.cs"];
m8_422 [label="Entry Newtonsoft.Json.Tests.Serialization.PropertyItemIsReferenceObject.PropertyItemIsReferenceObject()", span="1259-1259", cluster="Newtonsoft.Json.Tests.Serialization.PropertyItemIsReferenceObject.PropertyItemIsReferenceObject()", file="PreserveReferencesHandlingTests.cs"];
m8_363 [label="Entry Newtonsoft.Json.Tests.Serialization.ReferencedList<T>.ReferencedList()", span="1272-1272", cluster="Newtonsoft.Json.Tests.Serialization.ReferencedList<T>.ReferencedList()", file="PreserveReferencesHandlingTests.cs"];
m8_39 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", span="585-585", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", file="PreserveReferencesHandlingTests.cs"];
m8_195 [label="Entry Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.CircularReferenceClassConverter.CircularReferenceClassConverter()", span="486-486", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.CircularReferenceClassConverter.CircularReferenceClassConverter()", file="PreserveReferencesHandlingTests.cs"];
m8_355 [label="Entry Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ReferencedIntList()", span="1059-1059", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ReferencedIntList()", file="PreserveReferencesHandlingTests.cs"];
m8_356 [label="ReferencedList<int> l = new ReferencedList<int>()", span="1061-1061", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ReferencedIntList()", file="PreserveReferencesHandlingTests.cs"];
m8_357 [label="l.Add(1)", span="1062-1062", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ReferencedIntList()", file="PreserveReferencesHandlingTests.cs"];
m8_358 [label="l.Add(2)", span="1063-1063", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ReferencedIntList()", file="PreserveReferencesHandlingTests.cs"];
m8_359 [label="l.Add(3)", span="1064-1064", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ReferencedIntList()", file="PreserveReferencesHandlingTests.cs"];
m8_360 [label="string json = JsonConvert.SerializeObject(l, Formatting.Indented)", span="1066-1066", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ReferencedIntList()", file="PreserveReferencesHandlingTests.cs"];
m8_361 [label="StringAssert.AreEqual(@''[\r\n  1,\r\n  2,\r\n  3\r\n]'', json)", span="1067-1071", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ReferencedIntList()", file="PreserveReferencesHandlingTests.cs"];
m8_362 [label="Exit Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ReferencedIntList()", span="1059-1059", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ReferencedIntList()", file="PreserveReferencesHandlingTests.cs"];
m8_3 [label="Entry Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ContentB.ContentB()", span="52-52", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ContentB.ContentB()", file="PreserveReferencesHandlingTests.cs"];
m8_119 [label="Entry Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeArraysWithPreserveObjectReferences()", span="401-401", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeArraysWithPreserveObjectReferences()", file="PreserveReferencesHandlingTests.cs"];
m8_120 [label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$values'''': [\r\n    null,\r\n    {\r\n      ''''$id'''': ''''2'''',\r\n      ''''$values'''': [\r\n        null\r\n      ]\r\n    },\r\n    {\r\n      ''''$id'''': ''''3'''',\r\n      ''''$values'''': [\r\n        {\r\n          ''''$id'''': ''''4'''',\r\n          ''''$values'''': [\r\n            {\r\n              ''''$ref'''': ''''1''''\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}''", span="403-427", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeArraysWithPreserveObjectReferences()", file="PreserveReferencesHandlingTests.cs"];
m8_121 [label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonConvert.DeserializeObject<string[][]>(json,\r\n                    new JsonSerializerSettings { PreserveReferencesHandling = PreserveReferencesHandling.All });\r\n            }, @''Cannot preserve reference to array or readonly list, or list created from a non-default constructor: System.String[][]. Path '$values', line 3, position 14.'')", span="429-433", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeArraysWithPreserveObjectReferences()", file="PreserveReferencesHandlingTests.cs"];
m8_122 [label="Exit Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeArraysWithPreserveObjectReferences()", span="401-401", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeArraysWithPreserveObjectReferences()", file="PreserveReferencesHandlingTests.cs"];
m8_69 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="621-621", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="PreserveReferencesHandlingTests.cs"];
m8_4 [label="Entry Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ListConverter.CanConvert(System.Type)", span="70-70", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ListConverter.CanConvert(System.Type)", file="PreserveReferencesHandlingTests.cs"];
m8_5 [label="return true;", span="72-72", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ListConverter.CanConvert(System.Type)", file="PreserveReferencesHandlingTests.cs"];
m8_6 [label="Exit Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ListConverter.CanConvert(System.Type)", span="70-70", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ListConverter.CanConvert(System.Type)", file="PreserveReferencesHandlingTests.cs"];
m8_7 [label="Entry Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ListConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="75-75", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ListConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="PreserveReferencesHandlingTests.cs"];
m8_8 [label="return new ContentA() { B = serializer.Deserialize<ContentB>(reader) };", span="77-77", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ListConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="PreserveReferencesHandlingTests.cs"];
m8_9 [label="Exit Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ListConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="75-75", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ListConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="PreserveReferencesHandlingTests.cs"];
m8_314 [label="Entry Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeTypeWithDubiousGetHashcode()", span="981-981", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeTypeWithDubiousGetHashcode()", file="PreserveReferencesHandlingTests.cs"];
m8_315 [label="User user1 = new User(''Peter'', typeof(Version))", span="983-983", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeTypeWithDubiousGetHashcode()", file="PreserveReferencesHandlingTests.cs"];
m8_316 [label="User user2 = new User(''Michael'', typeof(Version))", span="984-984", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeTypeWithDubiousGetHashcode()", file="PreserveReferencesHandlingTests.cs"];
m8_317 [label="user1.Friend = user2", span="986-986", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeTypeWithDubiousGetHashcode()", file="PreserveReferencesHandlingTests.cs"];
m8_319 [label="string json = JsonConvert.SerializeObject(user1, Formatting.Indented, serializerSettings)", span="996-996", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeTypeWithDubiousGetHashcode()", file="PreserveReferencesHandlingTests.cs"];
m8_318 [label="JsonSerializerSettings serializerSettings = new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.All,\r\n                ReferenceLoopHandling = ReferenceLoopHandling.Ignore,\r\n                ConstructorHandling = ConstructorHandling.AllowNonPublicDefaultConstructor,\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects\r\n            }", span="988-994", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeTypeWithDubiousGetHashcode()", file="PreserveReferencesHandlingTests.cs"];
m8_320 [label="User deserializedUser = JsonConvert.DeserializeObject<User>(json, serializerSettings)", span="998-998", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeTypeWithDubiousGetHashcode()", file="PreserveReferencesHandlingTests.cs"];
m8_321 [label="Assert.IsNotNull(deserializedUser)", span="999-999", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeTypeWithDubiousGetHashcode()", file="PreserveReferencesHandlingTests.cs"];
m8_322 [label="Exit Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeTypeWithDubiousGetHashcode()", span="981-981", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeTypeWithDubiousGetHashcode()", file="PreserveReferencesHandlingTests.cs"];
m8_15 [label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="991-991", cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="PreserveReferencesHandlingTests.cs"];
m8_239 [label="Exit Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeIsReferenceReadonlyProperty()", span="704-704", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeIsReferenceReadonlyProperty()", file="PreserveReferencesHandlingTests.cs"];
m8_240 [label="EmployeeReference e1 = new EmployeeReference { Name = ''e1'' }", span="728-728", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeReferenceInList()", file="PreserveReferencesHandlingTests.cs"];
m8_241 [label="EmployeeReference e2 = new EmployeeReference { Name = ''e2'' }", span="729-729", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeReferenceInList()", file="PreserveReferencesHandlingTests.cs"];
m8_242 [label="List<EmployeeReference> employees = new List<EmployeeReference> { e1, e2, e1, e2 }", span="731-731", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeReferenceInList()", file="PreserveReferencesHandlingTests.cs"];
m8_243 [label="string json = JsonConvert.SerializeObject(employees, Formatting.Indented)", span="733-733", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeReferenceInList()", file="PreserveReferencesHandlingTests.cs"];
m8_244 [label="StringAssert.AreEqual(@''[\r\n  {\r\n    ''''$id'''': ''''1'''',\r\n    ''''Name'''': ''''e1'''',\r\n    ''''Manager'''': null\r\n  },\r\n  {\r\n    ''''$id'''': ''''2'''',\r\n    ''''Name'''': ''''e2'''',\r\n    ''''Manager'''': null\r\n  },\r\n  {\r\n    ''''$ref'''': ''''1''''\r\n  },\r\n  {\r\n    ''''$ref'''': ''''2''''\r\n  }\r\n]'', json)", span="735-752", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeReferenceInList()", file="PreserveReferencesHandlingTests.cs"];
m8_245 [label="Exit Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeReferenceInList()", span="726-726", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeReferenceInList()", file="PreserveReferencesHandlingTests.cs"];
m8_196 [label="Entry Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeCircularReferencesWithConverter()", span="566-566", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeCircularReferencesWithConverter()", file="PreserveReferencesHandlingTests.cs"];
m8_197 [label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$type'''': ''''CircularReferenceClass'''',\r\n  ''''Name'''': ''''c1'''',\r\n  ''''Child'''': {\r\n    ''''$id'''': ''''2'''',\r\n    ''''$type'''': ''''CircularReferenceClass'''',\r\n    ''''Name'''': ''''c2'''',\r\n    ''''Child'''': {\r\n      ''''$id'''': ''''3'''',\r\n      ''''$type'''': ''''CircularReferenceClass'''',\r\n      ''''Name'''': ''''c3'''',\r\n      ''''Child'''': {\r\n        ''''$ref'''': ''''1''''\r\n      }\r\n    }\r\n  }\r\n}''", span="568-585", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeCircularReferencesWithConverter()", file="PreserveReferencesHandlingTests.cs"];
m8_198 [label="CircularReferenceClass c1 = JsonConvert.DeserializeObject<CircularReferenceClass>(json, new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects,\r\n                Converters = new List<JsonConverter> { new CircularReferenceClassConverter() }\r\n            })", span="587-591", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeCircularReferencesWithConverter()", file="PreserveReferencesHandlingTests.cs"];
m8_199 [label="Assert.AreEqual(''c1'', c1.Name)", span="593-593", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeCircularReferencesWithConverter()", file="PreserveReferencesHandlingTests.cs"];
m8_200 [label="Assert.AreEqual(''c2'', c1.Child.Name)", span="594-594", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeCircularReferencesWithConverter()", file="PreserveReferencesHandlingTests.cs"];
m8_201 [label="Assert.AreEqual(''c3'', c1.Child.Child.Name)", span="595-595", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeCircularReferencesWithConverter()", file="PreserveReferencesHandlingTests.cs"];
m8_202 [label="Assert.AreEqual(''c1'', c1.Child.Child.Child.Name)", span="596-596", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeCircularReferencesWithConverter()", file="PreserveReferencesHandlingTests.cs"];
m8_203 [label="Exit Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeCircularReferencesWithConverter()", span="566-566", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeCircularReferencesWithConverter()", file="PreserveReferencesHandlingTests.cs"];
m8_345 [label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="478-478", cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="PreserveReferencesHandlingTests.cs"];
m8_383 [label="Entry Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ReferencedComponentDictionary()", span="1117-1117", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ReferencedComponentDictionary()", file="PreserveReferencesHandlingTests.cs"];
m8_384 [label="var c1 = new TestComponentSimple()", span="1119-1119", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ReferencedComponentDictionary()", file="PreserveReferencesHandlingTests.cs"];
m8_385 [label="ReferencedDictionary<TestComponentSimple> l = new ReferencedDictionary<TestComponentSimple>()", span="1121-1121", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ReferencedComponentDictionary()", file="PreserveReferencesHandlingTests.cs"];
m8_386 [label="l.Add(''First'', c1)", span="1122-1122", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ReferencedComponentDictionary()", file="PreserveReferencesHandlingTests.cs"];
m8_388 [label="l.Add(''Third'', c1)", span="1124-1124", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ReferencedComponentDictionary()", file="PreserveReferencesHandlingTests.cs"];
m8_387 [label="l.Add(''Second'', new TestComponentSimple())", span="1123-1123", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ReferencedComponentDictionary()", file="PreserveReferencesHandlingTests.cs"];
m8_389 [label="string json = JsonConvert.SerializeObject(l, Formatting.Indented)", span="1126-1126", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ReferencedComponentDictionary()", file="PreserveReferencesHandlingTests.cs"];
m8_390 [label="StringAssert.AreEqual(@''{\r\n  ''''First'''': {\r\n    ''''$id'''': ''''1'''',\r\n    ''''MyProperty'''': 0\r\n  },\r\n  ''''Second'''': {\r\n    ''''$id'''': ''''2'''',\r\n    ''''MyProperty'''': 0\r\n  },\r\n  ''''Third'''': {\r\n    ''''$ref'''': ''''1''''\r\n  }\r\n}'', json)", span="1127-1139", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ReferencedComponentDictionary()", file="PreserveReferencesHandlingTests.cs"];
m8_391 [label="ReferencedDictionary<TestComponentSimple> d = JsonConvert.DeserializeObject<ReferencedDictionary<TestComponentSimple>>(json)", span="1141-1141", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ReferencedComponentDictionary()", file="PreserveReferencesHandlingTests.cs"];
m8_392 [label="Assert.AreEqual(3, d.Count)", span="1142-1142", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ReferencedComponentDictionary()", file="PreserveReferencesHandlingTests.cs"];
m8_393 [label="Assert.IsTrue(ReferenceEquals(d[''First''], d[''Third'']))", span="1143-1143", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ReferencedComponentDictionary()", file="PreserveReferencesHandlingTests.cs"];
m8_394 [label="Exit Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ReferencedComponentDictionary()", span="1117-1117", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ReferencedComponentDictionary()", file="PreserveReferencesHandlingTests.cs"];
m8_163 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(string)", span="154-154", cluster="Newtonsoft.Json.Linq.JValue.JValue(string)", file="PreserveReferencesHandlingTests.cs"];
m8_179 [label="Entry Newtonsoft.Json.Linq.JToken.CreateReader()", span="1875-1875", cluster="Newtonsoft.Json.Linq.JToken.CreateReader()", file="PreserveReferencesHandlingTests.cs"];
m8_313 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="PreserveReferencesHandlingTests.cs"];
m8_38 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="PreserveReferencesHandlingTests.cs"];
m8_87 [label="Entry Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.CircularList.CircularList()", span="282-282", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.CircularList.CircularList()", file="PreserveReferencesHandlingTests.cs"];
m8_16 [label="Entry Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.Container.Container()", span="92-92", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.Container.Container()", file="PreserveReferencesHandlingTests.cs"];
m8_17 [label="ListA = new List<ContentA>()", span="94-94", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.Container.Container()", file="PreserveReferencesHandlingTests.cs"];
m8_18 [label="ListB = new List<ContentA>()", span="95-95", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.Container.Container()", file="PreserveReferencesHandlingTests.cs"];
m8_19 [label="Exit Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.Container.Container()", span="92-92", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.Container.Container()", file="PreserveReferencesHandlingTests.cs"];
m8_264 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="PreserveReferencesHandlingTests.cs"];
m8_43 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="PreserveReferencesHandlingTests.cs"];
m8_323 [label="Entry Unk.IsNotNull", span="", cluster="Unk.IsNotNull", file="PreserveReferencesHandlingTests.cs"];
m8_423 [label="Entry Newtonsoft.Json.Tests.Serialization.PropertyItemIsReferenceBody.PropertyItemIsReferenceBody()", span="1252-1252", cluster="Newtonsoft.Json.Tests.Serialization.PropertyItemIsReferenceBody.PropertyItemIsReferenceBody()", file="PreserveReferencesHandlingTests.cs"];
m8_70 [label="Entry Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeDictionarysWithPreserveObjectReferences()", span="258-258", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeDictionarysWithPreserveObjectReferences()", file="PreserveReferencesHandlingTests.cs"];
m8_71 [label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''other'''': {\r\n    ''''$id'''': ''''2'''',\r\n    ''''blah'''': null\r\n  },\r\n  ''''self'''': {\r\n    ''''$ref'''': ''''1''''\r\n  }\r\n}''", span="260-269", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeDictionarysWithPreserveObjectReferences()", file="PreserveReferencesHandlingTests.cs"];
m8_72 [label="CircularDictionary circularDictionary = JsonConvert.DeserializeObject<CircularDictionary>(json,\r\n                new JsonSerializerSettings\r\n                {\r\n                    PreserveReferencesHandling = PreserveReferencesHandling.All\r\n                })", span="271-275", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeDictionarysWithPreserveObjectReferences()", file="PreserveReferencesHandlingTests.cs"];
m8_73 [label="Assert.AreEqual(2, circularDictionary.Count)", span="277-277", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeDictionarysWithPreserveObjectReferences()", file="PreserveReferencesHandlingTests.cs"];
m8_74 [label="Assert.AreEqual(1, circularDictionary[''other''].Count)", span="278-278", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeDictionarysWithPreserveObjectReferences()", file="PreserveReferencesHandlingTests.cs"];
m8_75 [label="Assert.IsTrue(ReferenceEquals(circularDictionary, circularDictionary[''self'']))", span="279-279", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeDictionarysWithPreserveObjectReferences()", file="PreserveReferencesHandlingTests.cs"];
m8_76 [label="Exit Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeDictionarysWithPreserveObjectReferences()", span="258-258", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeDictionarysWithPreserveObjectReferences()", file="PreserveReferencesHandlingTests.cs"];
m8_425 [label="Entry Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DuplicateId()", span="1230-1230", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DuplicateId()", file="PreserveReferencesHandlingTests.cs"];
m8_426 [label="string json = @''{\r\n  ''''Data'''': {\r\n    ''''Prop1'''': {\r\n      ''''$id'''': ''''1'''',\r\n      ''''MyProperty'''': 0\r\n    },\r\n    ''''Prop2'''': {\r\n      ''''$id'''': ''''1'''',\r\n      ''''MyProperty'''': 0\r\n    }\r\n  }\r\n}''", span="1232-1243", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DuplicateId()", file="PreserveReferencesHandlingTests.cs"];
m8_427 [label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<PropertyItemIsReferenceObject>(json, new JsonSerializerSettings\r\n            {\r\n                MetadataPropertyHandling = MetadataPropertyHandling.Default\r\n            }), ''Error reading object reference '1'. Path 'Data.Prop2.MyProperty', line 9, position 19.'')", span="1245-1248", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DuplicateId()", file="PreserveReferencesHandlingTests.cs"];
m8_428 [label="Exit Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DuplicateId()", span="1230-1230", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DuplicateId()", file="PreserveReferencesHandlingTests.cs"];
m8_234 [label="Assert.AreEqual(''c1'', c1.Name)", span="719-719", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeCircularReference()", file="PreserveReferencesHandlingTests.cs"];
m8_235 [label="Assert.AreEqual(''c2'', c1.Child.Name)", span="720-720", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeCircularReference()", color=green, community=1, file="PreserveReferencesHandlingTests.cs"];
m8_236 [label="Assert.AreEqual(''c3'', c1.Child.Child.Name)", span="721-721", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeCircularReference()", color=green, community=0, file="PreserveReferencesHandlingTests.cs"];
m8_237 [label="Assert.AreEqual(''c1'', c1.Child.Child.Child.Name)", span="722-722", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeCircularReference()", color=green, community=0, file="PreserveReferencesHandlingTests.cs"];
m8_238 [label="Exit Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeCircularReference()", span="695-695", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeCircularReference()", color=green, community=0, file="PreserveReferencesHandlingTests.cs"];
m8_410 [label="Entry Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.PropertyItemIsReferenceObject()", span="1181-1181", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.PropertyItemIsReferenceObject()", file="PreserveReferencesHandlingTests.cs"];
m8_411 [label="TestComponentSimple c1 = new TestComponentSimple()", span="1183-1183", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.PropertyItemIsReferenceObject()", file="PreserveReferencesHandlingTests.cs"];
m8_412 [label="PropertyItemIsReferenceObject o1 = new PropertyItemIsReferenceObject\r\n            {\r\n                Data = new PropertyItemIsReferenceBody\r\n                {\r\n                    Prop1 = c1,\r\n                    Prop2 = c1,\r\n                    Data = new List<TestComponentSimple>\r\n                    {\r\n                        c1\r\n                    }\r\n                }\r\n            }", span="1185-1196", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.PropertyItemIsReferenceObject()", file="PreserveReferencesHandlingTests.cs"];
m8_413 [label="string json = JsonConvert.SerializeObject(o1, Formatting.Indented)", span="1198-1198", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.PropertyItemIsReferenceObject()", file="PreserveReferencesHandlingTests.cs"];
m8_414 [label="StringAssert.AreEqual(@''{\r\n  ''''Data'''': {\r\n    ''''Prop1'''': {\r\n      ''''$id'''': ''''1'''',\r\n      ''''MyProperty'''': 0\r\n    },\r\n    ''''Prop2'''': {\r\n      ''''$ref'''': ''''1''''\r\n    },\r\n    ''''Data'''': {\r\n      ''''$id'''': ''''2'''',\r\n      ''''$values'''': [\r\n        {\r\n          ''''MyProperty'''': 0\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}'', json)", span="1199-1217", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.PropertyItemIsReferenceObject()", file="PreserveReferencesHandlingTests.cs"];
m8_415 [label="PropertyItemIsReferenceObject o2 = JsonConvert.DeserializeObject<PropertyItemIsReferenceObject>(json)", span="1219-1219", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.PropertyItemIsReferenceObject()", file="PreserveReferencesHandlingTests.cs"];
m8_416 [label="TestComponentSimple c2 = o2.Data.Prop1", span="1221-1221", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.PropertyItemIsReferenceObject()", file="PreserveReferencesHandlingTests.cs"];
m8_417 [label="TestComponentSimple c3 = o2.Data.Prop2", span="1222-1222", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.PropertyItemIsReferenceObject()", file="PreserveReferencesHandlingTests.cs"];
m8_418 [label="TestComponentSimple c4 = o2.Data.Data[0]", span="1223-1223", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.PropertyItemIsReferenceObject()", file="PreserveReferencesHandlingTests.cs"];
m8_419 [label="Assert.IsTrue(ReferenceEquals(c2, c3))", span="1225-1225", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.PropertyItemIsReferenceObject()", file="PreserveReferencesHandlingTests.cs"];
m8_420 [label="Assert.IsFalse(ReferenceEquals(c2, c4))", span="1226-1226", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.PropertyItemIsReferenceObject()", file="PreserveReferencesHandlingTests.cs"];
m8_421 [label="Exit Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.PropertyItemIsReferenceObject()", span="1181-1181", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.PropertyItemIsReferenceObject()", file="PreserveReferencesHandlingTests.cs"];
m8_178 [label="Entry Newtonsoft.Json.Tests.TestObjects.CircularReferenceClass.CircularReferenceClass()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.CircularReferenceClass.CircularReferenceClass()", file="PreserveReferencesHandlingTests.cs"];
m8_348 [label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="148-148", cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="PreserveReferencesHandlingTests.cs"];
m8_41 [label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="340-340", cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="PreserveReferencesHandlingTests.cs"];
m8_429 [label="Entry lambda expression", span="1245-1248", cluster="lambda expression", file="PreserveReferencesHandlingTests.cs"];
m8_90 [label="JsonConvert.SerializeObject(circularList, Formatting.Indented)", span="296-296", cluster="lambda expression", file="PreserveReferencesHandlingTests.cs"];
m8_89 [label="Entry lambda expression", span="296-296", cluster="lambda expression", file="PreserveReferencesHandlingTests.cs"];
m8_91 [label="Exit lambda expression", span="296-296", cluster="lambda expression", file="PreserveReferencesHandlingTests.cs"];
m8_124 [label="JsonConvert.DeserializeObject<string[][]>(json,\r\n                    new JsonSerializerSettings { PreserveReferencesHandling = PreserveReferencesHandling.All })", span="431-432", cluster="lambda expression", file="PreserveReferencesHandlingTests.cs"];
m8_123 [label="Entry lambda expression", span="429-433", cluster="lambda expression", file="PreserveReferencesHandlingTests.cs"];
m8_125 [label="Exit lambda expression", span="429-433", cluster="lambda expression", file="PreserveReferencesHandlingTests.cs"];
m8_134 [label="JsonConvert.SerializeObject(circularDictionary, Formatting.Indented)", span="449-449", cluster="lambda expression", file="PreserveReferencesHandlingTests.cs"];
m8_133 [label="Entry lambda expression", span="449-449", cluster="lambda expression", file="PreserveReferencesHandlingTests.cs"];
m8_135 [label="Exit lambda expression", span="449-449", cluster="lambda expression", file="PreserveReferencesHandlingTests.cs"];
m8_148 [label="JsonConvert.DeserializeObject<string[][]>(json,\r\n                    new JsonSerializerSettings\r\n                    {\r\n                        PreserveReferencesHandling = PreserveReferencesHandling.All,\r\n                        MetadataPropertyHandling = MetadataPropertyHandling.Default\r\n                    })", span="477-482", cluster="lambda expression", file="PreserveReferencesHandlingTests.cs"];
m8_147 [label="Entry lambda expression", span="475-483", cluster="lambda expression", file="PreserveReferencesHandlingTests.cs"];
m8_149 [label="Exit lambda expression", span="475-483", cluster="lambda expression", file="PreserveReferencesHandlingTests.cs"];
m8_430 [label="JsonConvert.DeserializeObject<PropertyItemIsReferenceObject>(json, new JsonSerializerSettings\r\n            {\r\n                MetadataPropertyHandling = MetadataPropertyHandling.Default\r\n            })", span="1245-1248", cluster="lambda expression", file="PreserveReferencesHandlingTests.cs"];
m8_431 [label="Exit lambda expression", span="1245-1248", cluster="lambda expression", file="PreserveReferencesHandlingTests.cs"];
m8_164 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="PreserveReferencesHandlingTests.cs"];
m8_310 [label="Entry Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.User.ToString()", span="973-973", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.User.ToString()", file="PreserveReferencesHandlingTests.cs"];
m8_311 [label="return string.Format(''SecretType: {0}, Login: {1}'', secretType, Login);", span="975-975", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.User.ToString()", file="PreserveReferencesHandlingTests.cs"];
m8_312 [label="Exit Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.User.ToString()", span="973-973", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.User.ToString()", file="PreserveReferencesHandlingTests.cs"];
m8_347 [label="Entry System.IO.StreamWriter.StreamWriter(System.IO.Stream)", span="0-0", cluster="System.IO.StreamWriter.StreamWriter(System.IO.Stream)", file="PreserveReferencesHandlingTests.cs"];
m8_67 [label="Entry Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.CircularDictionary.CircularDictionary()", span="436-436", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.CircularDictionary.CircularDictionary()", file="PreserveReferencesHandlingTests.cs"];
m8_59 [label="Entry Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.Parent.Parent()", span="146-146", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.Parent.Parent()", file="PreserveReferencesHandlingTests.cs"];
m8_395 [label="Entry Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ReferencedObjectItems()", span="1147-1147", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ReferencedObjectItems()", file="PreserveReferencesHandlingTests.cs"];
m8_396 [label="ReferenceObject o1 = new ReferenceObject()", span="1149-1149", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ReferencedObjectItems()", file="PreserveReferencesHandlingTests.cs"];
m8_397 [label="o1.Component1 = new TestComponentSimple { MyProperty = 1 }", span="1151-1151", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ReferencedObjectItems()", file="PreserveReferencesHandlingTests.cs"];
m8_398 [label="o1.Component2 = o1.Component1", span="1152-1152", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ReferencedObjectItems()", file="PreserveReferencesHandlingTests.cs"];
m8_399 [label="o1.ComponentNotReference = new TestComponentSimple()", span="1153-1153", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ReferencedObjectItems()", file="PreserveReferencesHandlingTests.cs"];
m8_400 [label="o1.String = ''String!''", span="1154-1154", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ReferencedObjectItems()", file="PreserveReferencesHandlingTests.cs"];
m8_401 [label="o1.Integer = int.MaxValue", span="1155-1155", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ReferencedObjectItems()", file="PreserveReferencesHandlingTests.cs"];
m8_402 [label="string json = JsonConvert.SerializeObject(o1, Formatting.Indented)", span="1157-1157", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ReferencedObjectItems()", file="PreserveReferencesHandlingTests.cs"];
m8_403 [label="string expected = @''{\r\n  ''''Component1'''': {\r\n    ''''$id'''': ''''1'''',\r\n    ''''MyProperty'''': 1\r\n  },\r\n  ''''Component2'''': {\r\n    ''''$ref'''': ''''1''''\r\n  },\r\n  ''''ComponentNotReference'''': {\r\n    ''''MyProperty'''': 0\r\n  },\r\n  ''''String'''': ''''String!'''',\r\n  ''''Integer'''': 2147483647\r\n}''", span="1158-1171", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ReferencedObjectItems()", file="PreserveReferencesHandlingTests.cs"];
m8_404 [label="StringAssert.AreEqual(expected, json)", span="1172-1172", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ReferencedObjectItems()", file="PreserveReferencesHandlingTests.cs"];
m8_405 [label="ReferenceObject referenceObject = JsonConvert.DeserializeObject<ReferenceObject>(json)", span="1174-1174", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ReferencedObjectItems()", file="PreserveReferencesHandlingTests.cs"];
m8_406 [label="Assert.IsNotNull(referenceObject)", span="1175-1175", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ReferencedObjectItems()", file="PreserveReferencesHandlingTests.cs"];
m8_407 [label="Assert.IsTrue(ReferenceEquals(referenceObject.Component1, referenceObject.Component2))", span="1177-1177", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ReferencedObjectItems()", file="PreserveReferencesHandlingTests.cs"];
m8_408 [label="Exit Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ReferencedObjectItems()", span="1147-1147", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ReferencedObjectItems()", file="PreserveReferencesHandlingTests.cs"];
m8_285 [label="Entry Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ExampleWith()", span="891-891", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ExampleWith()", file="PreserveReferencesHandlingTests.cs"];
m8_286 [label="Person p = new Person\r\n            {\r\n                BirthDate = new DateTime(1980, 12, 23, 0, 0, 0, DateTimeKind.Utc),\r\n                LastModified = new DateTime(2009, 2, 20, 12, 59, 21, DateTimeKind.Utc),\r\n                Department = ''IT'',\r\n                Name = ''James''\r\n            }", span="893-899", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ExampleWith()", file="PreserveReferencesHandlingTests.cs"];
m8_287 [label="List<Person> people = new List<Person>()", span="901-901", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ExampleWith()", file="PreserveReferencesHandlingTests.cs"];
m8_288 [label="people.Add(p)", span="902-902", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ExampleWith()", file="PreserveReferencesHandlingTests.cs"];
m8_289 [label="people.Add(p)", span="903-903", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ExampleWith()", file="PreserveReferencesHandlingTests.cs"];
m8_290 [label="string json = JsonConvert.SerializeObject(people, Formatting.Indented,\r\n                new JsonSerializerSettings { PreserveReferencesHandling = PreserveReferencesHandling.Objects })", span="905-906", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ExampleWith()", file="PreserveReferencesHandlingTests.cs"];
m8_291 [label="List<Person> deserializedPeople = JsonConvert.DeserializeObject<List<Person>>(json,\r\n                new JsonSerializerSettings { PreserveReferencesHandling = PreserveReferencesHandling.Objects })", span="919-920", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ExampleWith()", file="PreserveReferencesHandlingTests.cs"];
m8_292 [label="Assert.AreEqual(2, deserializedPeople.Count)", span="922-922", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ExampleWith()", file="PreserveReferencesHandlingTests.cs"];
m8_293 [label="Person p1 = deserializedPeople[0]", span="924-924", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ExampleWith()", file="PreserveReferencesHandlingTests.cs"];
m8_294 [label="Person p2 = deserializedPeople[1]", span="925-925", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ExampleWith()", file="PreserveReferencesHandlingTests.cs"];
m8_295 [label="Assert.AreEqual(''James'', p1.Name)", span="927-927", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ExampleWith()", file="PreserveReferencesHandlingTests.cs"];
m8_297 [label="bool equal = Object.ReferenceEquals(p1, p2)", span="930-930", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ExampleWith()", file="PreserveReferencesHandlingTests.cs"];
m8_296 [label="Assert.AreEqual(''James'', p2.Name)", span="928-928", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ExampleWith()", file="PreserveReferencesHandlingTests.cs"];
m8_298 [label="Assert.AreEqual(true, equal)", span="931-931", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ExampleWith()", file="PreserveReferencesHandlingTests.cs"];
m8_299 [label="Exit Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ExampleWith()", span="891-891", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ExampleWith()", file="PreserveReferencesHandlingTests.cs"];
m8_409 [label="Entry Newtonsoft.Json.Tests.Serialization.ReferenceObject.ReferenceObject()", span="1282-1282", cluster="Newtonsoft.Json.Tests.Serialization.ReferenceObject.ReferenceObject()", file="PreserveReferencesHandlingTests.cs"];
m8_20 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="PreserveReferencesHandlingTests.cs"];
m8_324 [label="Entry Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.PreserveReferencesHandlingWithReusedJsonSerializer()", span="1003-1003", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.PreserveReferencesHandlingWithReusedJsonSerializer()", file="PreserveReferencesHandlingTests.cs"];
m8_325 [label="MyClass c = new MyClass()", span="1005-1005", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.PreserveReferencesHandlingWithReusedJsonSerializer()", file="PreserveReferencesHandlingTests.cs"];
m8_326 [label="IList<MyClass> myClasses1 = new List<MyClass>\r\n            {\r\n                c,\r\n                c\r\n            }", span="1007-1011", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.PreserveReferencesHandlingWithReusedJsonSerializer()", file="PreserveReferencesHandlingTests.cs"];
m8_327 [label="var ser = new JsonSerializer()\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.All\r\n            }", span="1013-1016", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.PreserveReferencesHandlingWithReusedJsonSerializer()", file="PreserveReferencesHandlingTests.cs"];
m8_331 [label="ser.Serialize(writer, myClasses1)", span="1023-1023", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.PreserveReferencesHandlingWithReusedJsonSerializer()", file="PreserveReferencesHandlingTests.cs"];
m8_342 [label="Assert.AreNotEqual(myClasses1[0], myClasses2[0])", span="1055-1055", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.PreserveReferencesHandlingWithReusedJsonSerializer()", file="PreserveReferencesHandlingTests.cs"];
m8_328 [label="MemoryStream ms = new MemoryStream()", span="1018-1018", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.PreserveReferencesHandlingWithReusedJsonSerializer()", file="PreserveReferencesHandlingTests.cs"];
m8_339 [label="myClasses2 = ser.Deserialize<IList<MyClass>>(reader)", span="1049-1049", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.PreserveReferencesHandlingWithReusedJsonSerializer()", file="PreserveReferencesHandlingTests.cs"];
m8_329 [label="var sw = new StreamWriter(ms)", span="1020-1020", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.PreserveReferencesHandlingWithReusedJsonSerializer()", file="PreserveReferencesHandlingTests.cs"];
m8_332 [label="byte[] data = ms.ToArray()", span="1026-1026", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.PreserveReferencesHandlingWithReusedJsonSerializer()", file="PreserveReferencesHandlingTests.cs"];
m8_330 [label="var writer = new JsonTextWriter(sw) { Formatting = Formatting.Indented }", span="1021-1021", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.PreserveReferencesHandlingWithReusedJsonSerializer()", file="PreserveReferencesHandlingTests.cs"];
m8_333 [label="string json = Encoding.UTF8.GetString(data, 0, data.Length)", span="1027-1027", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.PreserveReferencesHandlingWithReusedJsonSerializer()", file="PreserveReferencesHandlingTests.cs"];
m8_335 [label="ms = new MemoryStream(data)", span="1043-1043", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.PreserveReferencesHandlingWithReusedJsonSerializer()", file="PreserveReferencesHandlingTests.cs"];
m8_334 [label="StringAssert.AreEqual(@''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$values'''': [\r\n    {\r\n      ''''$id'''': ''''2'''',\r\n      ''''PreProperty'''': 0,\r\n      ''''PostProperty'''': 0\r\n    },\r\n    {\r\n      ''''$ref'''': ''''2''''\r\n    }\r\n  ]\r\n}'', json)", span="1029-1041", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.PreserveReferencesHandlingWithReusedJsonSerializer()", file="PreserveReferencesHandlingTests.cs"];
m8_336 [label="IList<MyClass> myClasses2", span="1044-1044", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.PreserveReferencesHandlingWithReusedJsonSerializer()", file="PreserveReferencesHandlingTests.cs"];
m8_337 [label="var sr = new StreamReader(ms)", span="1046-1046", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.PreserveReferencesHandlingWithReusedJsonSerializer()", file="PreserveReferencesHandlingTests.cs"];
m8_338 [label="var reader = new JsonTextReader(sr)", span="1047-1047", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.PreserveReferencesHandlingWithReusedJsonSerializer()", file="PreserveReferencesHandlingTests.cs"];
m8_340 [label="Assert.AreEqual(2, myClasses2.Count)", span="1052-1052", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.PreserveReferencesHandlingWithReusedJsonSerializer()", file="PreserveReferencesHandlingTests.cs"];
m8_341 [label="Assert.AreEqual(myClasses2[0], myClasses2[1])", span="1053-1053", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.PreserveReferencesHandlingWithReusedJsonSerializer()", file="PreserveReferencesHandlingTests.cs"];
m8_343 [label="Exit Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.PreserveReferencesHandlingWithReusedJsonSerializer()", span="1003-1003", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.PreserveReferencesHandlingWithReusedJsonSerializer()", file="PreserveReferencesHandlingTests.cs"];
m8_352 [label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0", cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="PreserveReferencesHandlingTests.cs"];
m8_109 [label="Entry Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeListsWithPreserveObjectReferences()", span="361-361", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeListsWithPreserveObjectReferences()", file="PreserveReferencesHandlingTests.cs"];
m8_110 [label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$values'''': [\r\n    null,\r\n    {\r\n      ''''$id'''': ''''2'''',\r\n      ''''$values'''': [\r\n        null\r\n      ]\r\n    },\r\n    {\r\n      ''''$id'''': ''''3'''',\r\n      ''''$values'''': [\r\n        {\r\n          ''''$id'''': ''''4'''',\r\n          ''''$values'''': [\r\n            {\r\n              ''''$ref'''': ''''1''''\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}''", span="363-387", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeListsWithPreserveObjectReferences()", file="PreserveReferencesHandlingTests.cs"];
m8_111 [label="CircularList circularList = JsonConvert.DeserializeObject<CircularList>(json,\r\n                new JsonSerializerSettings { PreserveReferencesHandling = PreserveReferencesHandling.All })", span="389-390", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeListsWithPreserveObjectReferences()", file="PreserveReferencesHandlingTests.cs"];
m8_112 [label="Assert.AreEqual(3, circularList.Count)", span="392-392", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeListsWithPreserveObjectReferences()", file="PreserveReferencesHandlingTests.cs"];
m8_113 [label="Assert.AreEqual(null, circularList[0])", span="393-393", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeListsWithPreserveObjectReferences()", file="PreserveReferencesHandlingTests.cs"];
m8_114 [label="Assert.AreEqual(1, circularList[1].Count)", span="394-394", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeListsWithPreserveObjectReferences()", file="PreserveReferencesHandlingTests.cs"];
m8_115 [label="Assert.AreEqual(1, circularList[2].Count)", span="395-395", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeListsWithPreserveObjectReferences()", file="PreserveReferencesHandlingTests.cs"];
m8_116 [label="Assert.AreEqual(1, circularList[2][0].Count)", span="396-396", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeListsWithPreserveObjectReferences()", file="PreserveReferencesHandlingTests.cs"];
m8_117 [label="Assert.IsTrue(ReferenceEquals(circularList, circularList[2][0][0]))", span="397-397", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeListsWithPreserveObjectReferences()", file="PreserveReferencesHandlingTests.cs"];
m8_118 [label="Exit Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeListsWithPreserveObjectReferences()", span="361-361", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeListsWithPreserveObjectReferences()", file="PreserveReferencesHandlingTests.cs"];
m8_225 [label="Condition1 = condition1", span="680-680", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ClassWithConditions.ClassWithConditions(Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.Condition, Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.Condition)", file="PreserveReferencesHandlingTests.cs", color=green, community=0];
m8_227 [label="Exit Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ClassWithConditions.ClassWithConditions(Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.Condition, Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.Condition)", span="678-678", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ClassWithConditions.ClassWithConditions(Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.Condition, Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.Condition)", file="PreserveReferencesHandlingTests.cs"];
m8_228 [label="Entry Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeIsReferenceReadonlyProperty()", span="686-686", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeIsReferenceReadonlyProperty()", file="PreserveReferencesHandlingTests.cs"];
m8_224 [label="Entry Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ClassWithConditions.ClassWithConditions(Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.Condition, Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.Condition)", span="678-678", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ClassWithConditions.ClassWithConditions(Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.Condition, Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.Condition)", file="PreserveReferencesHandlingTests.cs"];
m8_226 [label="Condition2 = condition2", span="681-681", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ClassWithConditions.ClassWithConditions(Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.Condition, Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.Condition)", file="PreserveReferencesHandlingTests.cs", color=green, community=0];
m8_229 [label="Condition condition = new Condition(1)", span="688-688", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeIsReferenceReadonlyProperty()", file="PreserveReferencesHandlingTests.cs", color=green, community=0];
m8_230 [label="ClassWithConditions value = new ClassWithConditions(condition, condition)", span="689-689", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeIsReferenceReadonlyProperty()", file="PreserveReferencesHandlingTests.cs", color=green, community=0];
m8_11 [label="Entry Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ListConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="80-80", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ListConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="PreserveReferencesHandlingTests.cs"];
m8_12 [label="ContentB b = ((ContentA)value).B", span="82-82", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ListConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="PreserveReferencesHandlingTests.cs"];
m8_13 [label="serializer.Serialize(writer, b)", span="83-83", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ListConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="PreserveReferencesHandlingTests.cs"];
m8_14 [label="Exit Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ListConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="80-80", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ListConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="PreserveReferencesHandlingTests.cs"];
m8_92 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="540-540", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="PreserveReferencesHandlingTests.cs"];
m8_220 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="754-754", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="PreserveReferencesHandlingTests.cs"];
m8_212 [label="Entry Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeEmployeeReference()", span="636-636", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeEmployeeReference()", file="PreserveReferencesHandlingTests.cs"];
m8_213 [label="string json = @''[\r\n  {\r\n    ''''$id'''': ''''1'''',\r\n    ''''Name'''': ''''Mike Manager'''',\r\n    ''''Manager'''': null\r\n  },\r\n  {\r\n    ''''$id'''': ''''2'''',\r\n    ''''Name'''': ''''Joe User'''',\r\n    ''''Manager'''': {\r\n      ''''$ref'''': ''''1''''\r\n    }\r\n  }\r\n]''", span="638-651", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeEmployeeReference()", file="PreserveReferencesHandlingTests.cs"];
m8_214 [label="List<EmployeeReference> employees = JsonConvert.DeserializeObject<List<EmployeeReference>>(json)", span="653-653", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeEmployeeReference()", file="PreserveReferencesHandlingTests.cs"];
m8_215 [label="Assert.AreEqual(2, employees.Count)", span="655-655", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeEmployeeReference()", file="PreserveReferencesHandlingTests.cs"];
m8_216 [label="Assert.AreEqual(''Mike Manager'', employees[0].Name)", span="656-656", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeEmployeeReference()", file="PreserveReferencesHandlingTests.cs"];
m8_217 [label="Assert.AreEqual(''Joe User'', employees[1].Name)", span="657-657", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeEmployeeReference()", file="PreserveReferencesHandlingTests.cs"];
m8_218 [label="Assert.AreEqual(employees[0], employees[1].Manager)", span="658-658", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeEmployeeReference()", file="PreserveReferencesHandlingTests.cs"];
m8_219 [label="Exit Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeEmployeeReference()", span="636-636", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeEmployeeReference()", file="PreserveReferencesHandlingTests.cs"];
m8_79 [label="Entry Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeCircularListsError()", span="287-287", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeCircularListsError()", file="PreserveReferencesHandlingTests.cs"];
m8_80 [label="string classRef = typeof(CircularList).FullName", span="289-289", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeCircularListsError()", file="PreserveReferencesHandlingTests.cs"];
m8_81 [label="CircularList circularList = new CircularList()", span="291-291", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeCircularListsError()", file="PreserveReferencesHandlingTests.cs"];
m8_85 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.SerializeObject(circularList, Formatting.Indented); }, ''Self referencing loop detected with type ''' + classRef + '''. Path '[2][0]'.'')", span="296-296", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeCircularListsError()", file="PreserveReferencesHandlingTests.cs"];
m8_82 [label="circularList.Add(null)", span="292-292", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeCircularListsError()", file="PreserveReferencesHandlingTests.cs"];
m8_83 [label="circularList.Add(new CircularList { null })", span="293-293", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeCircularListsError()", file="PreserveReferencesHandlingTests.cs"];
m8_84 [label="circularList.Add(new CircularList { new CircularList { circularList } })", span="294-294", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeCircularListsError()", file="PreserveReferencesHandlingTests.cs"];
m8_86 [label="Exit Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeCircularListsError()", span="287-287", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeCircularListsError()", file="PreserveReferencesHandlingTests.cs"];
m8_231 [label="string json = JsonConvert.SerializeObject(value, Formatting.Indented)", span="691-691", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeIsReferenceReadonlyProperty()", file="PreserveReferencesHandlingTests.cs", color=green, community=0];
m8_232 [label="StringAssert.AreEqual(@''{\r\n  ''''Condition1'''': {\r\n    ''''$id'''': ''''1'''',\r\n    ''''Value'''': 1\r\n  },\r\n  ''''Condition2'''': {\r\n    ''''$ref'''': ''''1''''\r\n  }\r\n}'', json)", span="692-700", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeIsReferenceReadonlyProperty()", file="PreserveReferencesHandlingTests.cs", color=green, community=1];
m8_233 [label="Exit Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeIsReferenceReadonlyProperty()", span="686-686", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeIsReferenceReadonlyProperty()", file="PreserveReferencesHandlingTests.cs"];
m8_373 [label="Entry Newtonsoft.Json.Tests.TestObjects.TestComponentSimple.TestComponentSimple()", span="33-33", cluster="Newtonsoft.Json.Tests.TestObjects.TestComponentSimple.TestComponentSimple()", file="PreserveReferencesHandlingTests.cs"];
m8_284 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="PreserveReferencesHandlingTests.cs"];
m8_166 [label="Entry Newtonsoft.Json.Linq.JObject.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", span="475-475", cluster="Newtonsoft.Json.Linq.JObject.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="PreserveReferencesHandlingTests.cs"];
m8_44 [label="Entry Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeReadOnlyProperty()", span="170-170", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeReadOnlyProperty()", file="PreserveReferencesHandlingTests.cs"];
m8_45 [label="Child c = new Child\r\n            {\r\n                PropertyName = ''value?''\r\n            }", span="172-175", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeReadOnlyProperty()", file="PreserveReferencesHandlingTests.cs"];
m8_46 [label="IList<string> l = new List<string>\r\n            {\r\n                ''value!''\r\n            }", span="176-179", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeReadOnlyProperty()", file="PreserveReferencesHandlingTests.cs"];
m8_47 [label="Parent p = new Parent\r\n            {\r\n                Child1 = c,\r\n                Child2 = c,\r\n                List1 = l,\r\n                List2 = l\r\n            }", span="180-186", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeReadOnlyProperty()", file="PreserveReferencesHandlingTests.cs"];
m8_48 [label="string json = JsonConvert.SerializeObject(p, new JsonSerializerSettings\r\n            {\r\n                Formatting = Formatting.Indented,\r\n                PreserveReferencesHandling = PreserveReferencesHandling.All\r\n            })", span="188-192", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeReadOnlyProperty()", file="PreserveReferencesHandlingTests.cs"];
m8_49 [label="StringAssert.AreEqual(@''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''ReadOnlyChild'''': {\r\n    ''''PropertyName'''': ''''value?''''\r\n  },\r\n  ''''Child1'''': {\r\n    ''''$id'''': ''''2'''',\r\n    ''''PropertyName'''': ''''value?''''\r\n  },\r\n  ''''Child2'''': {\r\n    ''''$ref'''': ''''2''''\r\n  },\r\n  ''''ReadOnlyList'''': [\r\n    ''''value!''''\r\n  ],\r\n  ''''List1'''': {\r\n    ''''$id'''': ''''3'''',\r\n    ''''$values'''': [\r\n      ''''value!''''\r\n    ]\r\n  },\r\n  ''''List2'''': {\r\n    ''''$ref'''': ''''3''''\r\n  }\r\n}'', json)", span="194-218", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeReadOnlyProperty()", file="PreserveReferencesHandlingTests.cs"];
m8_50 [label="Parent newP = JsonConvert.DeserializeObject<Parent>(json, new JsonSerializerSettings\r\n            {\r\n                Formatting = Formatting.Indented,\r\n                PreserveReferencesHandling = PreserveReferencesHandling.All\r\n            })", span="220-224", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeReadOnlyProperty()", file="PreserveReferencesHandlingTests.cs"];
m8_51 [label="Assert.AreEqual(''value?'', newP.Child1.PropertyName)", span="226-226", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeReadOnlyProperty()", file="PreserveReferencesHandlingTests.cs"];
m8_52 [label="Assert.AreEqual(newP.Child1, newP.Child2)", span="227-227", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeReadOnlyProperty()", file="PreserveReferencesHandlingTests.cs"];
m8_53 [label="Assert.AreEqual(newP.Child1, newP.ReadOnlyChild)", span="228-228", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeReadOnlyProperty()", file="PreserveReferencesHandlingTests.cs"];
m8_54 [label="Assert.AreEqual(''value!'', newP.List1[0])", span="230-230", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeReadOnlyProperty()", file="PreserveReferencesHandlingTests.cs"];
m8_55 [label="Assert.AreEqual(newP.List1, newP.List2)", span="231-231", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeReadOnlyProperty()", file="PreserveReferencesHandlingTests.cs"];
m8_56 [label="Assert.AreEqual(newP.List1, newP.ReadOnlyList)", span="232-232", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeReadOnlyProperty()", file="PreserveReferencesHandlingTests.cs"];
m8_57 [label="Exit Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeReadOnlyProperty()", span="170-170", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeReadOnlyProperty()", file="PreserveReferencesHandlingTests.cs"];
m8_351 [label="Entry System.IO.MemoryStream.MemoryStream(byte[])", span="0-0", cluster="System.IO.MemoryStream.MemoryStream(byte[])", file="PreserveReferencesHandlingTests.cs"];
m8_0 [label="Entry Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ContentA.ContentA()", span="62-62", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ContentA.ContentA()", file="PreserveReferencesHandlingTests.cs"];
m8_1 [label="B = new ContentB()", span="64-64", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ContentA.ContentA()", file="PreserveReferencesHandlingTests.cs"];
m8_2 [label="Exit Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ContentA.ContentA()", span="62-62", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ContentA.ContentA()", file="PreserveReferencesHandlingTests.cs"];
m8_309 [label="Entry System.Type.GetHashCode()", span="0-0", cluster="System.Type.GetHashCode()", file="PreserveReferencesHandlingTests.cs"];
m8_88 [label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="369-369", cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="PreserveReferencesHandlingTests.cs"];
m8_167 [label="Entry Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.CircularReferenceClassConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="505-505", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.CircularReferenceClassConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="PreserveReferencesHandlingTests.cs"];
m8_168 [label="JObject o = JObject.Load(reader)", span="507-507", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.CircularReferenceClassConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="PreserveReferencesHandlingTests.cs"];
m8_172 [label="serializer.Populate(o.CreateReader(), circularReferenceClass)", span="512-512", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.CircularReferenceClassConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="PreserveReferencesHandlingTests.cs"];
m8_175 [label="return serializer.ReferenceResolver.ResolveReference(serializer, reference);", span="518-518", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.CircularReferenceClassConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="PreserveReferencesHandlingTests.cs"];
m8_169 [label="string id = (string)o[''$id'']", span="508-508", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.CircularReferenceClassConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="PreserveReferencesHandlingTests.cs"];
m8_174 [label="string reference = (string)o[''$ref'']", span="517-517", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.CircularReferenceClassConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="PreserveReferencesHandlingTests.cs"];
m8_170 [label="id != null", span="509-509", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.CircularReferenceClassConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="PreserveReferencesHandlingTests.cs"];
m8_171 [label="CircularReferenceClass circularReferenceClass = new CircularReferenceClass()", span="511-511", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.CircularReferenceClassConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="PreserveReferencesHandlingTests.cs"];
m8_173 [label="return circularReferenceClass;", span="513-513", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.CircularReferenceClassConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="PreserveReferencesHandlingTests.cs"];
m8_176 [label="Exit Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.CircularReferenceClassConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="505-505", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.CircularReferenceClassConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="PreserveReferencesHandlingTests.cs"];
m8_182 [label="Entry Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.CircularReferenceClassConverter.CanConvert(System.Type)", span="522-522", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.CircularReferenceClassConverter.CanConvert(System.Type)", file="PreserveReferencesHandlingTests.cs"];
m8_183 [label="return (objectType == typeof(CircularReferenceClass));", span="524-524", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.CircularReferenceClassConverter.CanConvert(System.Type)", file="PreserveReferencesHandlingTests.cs"];
m8_184 [label="Exit Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.CircularReferenceClassConverter.CanConvert(System.Type)", span="522-522", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.CircularReferenceClassConverter.CanConvert(System.Type)", file="PreserveReferencesHandlingTests.cs"];
m8_211 [label="Entry Newtonsoft.Json.Tests.TestObjects.EmployeeReference.EmployeeReference()", span="28-28", cluster="Newtonsoft.Json.Tests.TestObjects.EmployeeReference.EmployeeReference()", file="PreserveReferencesHandlingTests.cs"];
m8_432 [label="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ContentA", span="", file="PreserveReferencesHandlingTests.cs"];
m8_433 [label="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.Container", span="", file="PreserveReferencesHandlingTests.cs"];
m8_434 [label=circularList, span="", file="PreserveReferencesHandlingTests.cs"];
m8_435 [label=json, span="", file="PreserveReferencesHandlingTests.cs"];
m8_436 [label=circularDictionary, span="", file="PreserveReferencesHandlingTests.cs"];
m8_437 [label=json, span="", file="PreserveReferencesHandlingTests.cs"];
m8_438 [label="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.User", span="", file="PreserveReferencesHandlingTests.cs"];
m8_439 [label=json, span="", file="PreserveReferencesHandlingTests.cs"];
m8_457 [label="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.Condition", span="", file="PreserveReferencesHandlingTests.cs"];
m8_458 [label="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ClassWithConditions", span="", file="PreserveReferencesHandlingTests.cs"];
m9_1532 [label="Entry XmlDocument.cstr", span="", cluster="XmlDocument.cstr", file="ReflectionUtils.cs"];
m9_3452 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", span="0-0", cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", file="ReflectionUtils.cs"];
m9_3303 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewEmployee.NewEmployee()", span="7791-7791", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewEmployee.NewEmployee()", file="ReflectionUtils.cs"];
m9_382 [label="Assert.AreEqual(ts, c.TimeSpanField)", span="849-849", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="ReflectionUtils.cs"];
m9_199 [label="List<DateTime> testDates = new List<DateTime>\r\n        {\r\n          new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Local),\r\n          new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Unspecified),\r\n          new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Utc),\r\n          new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Local),\r\n          new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Unspecified),\r\n          new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc),\r\n        }", span="526-534", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="ReflectionUtils.cs"];
m9_200 [label="MemoryStream ms = new MemoryStream()", span="536-536", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="ReflectionUtils.cs"];
m9_202 [label="s.WriteObject(ms, testDates)", span="538-538", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="ReflectionUtils.cs"];
m9_204 [label="StreamReader sr = new StreamReader(ms)", span="540-540", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="ReflectionUtils.cs"];
m9_209 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="ReflectionUtils.cs"];
m9_213 [label="Entry System.IO.StreamReader.ReadToEnd()", span="0-0", cluster="System.IO.StreamReader.ReadToEnd()", file="ReflectionUtils.cs"];
m9_201 [label="DataContractJsonSerializer s = new DataContractJsonSerializer(typeof(List<DateTime>))", span="537-537", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="ReflectionUtils.cs"];
m9_203 [label="ms.Seek(0, SeekOrigin.Begin)", span="539-539", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="ReflectionUtils.cs"];
m9_205 [label="string expected = sr.ReadToEnd()", span="542-542", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="ReflectionUtils.cs"];
m9_206 [label="string result = JsonConvert.SerializeObject(testDates, new JsonSerializerSettings { DateFormatHandling = DateFormatHandling.MicrosoftDateFormat })", span="544-544", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="ReflectionUtils.cs"];
m9_207 [label="Assert.AreEqual(expected, result)", span="545-545", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="ReflectionUtils.cs"];
m9_208 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", span="524-524", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="ReflectionUtils.cs"];
m9_210 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="ReflectionUtils.cs"];
m9_211 [label="Entry System.IO.MemoryStream.Seek(long, System.IO.SeekOrigin)", span="0-0", cluster="System.IO.MemoryStream.Seek(long, System.IO.SeekOrigin)", file="ReflectionUtils.cs"];
m9_212 [label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0", cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="ReflectionUtils.cs"];
m9_214 [label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="296-296", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="ReflectionUtils.cs"];
m9_629 [label="Entry Newtonsoft.Json.Tests.TestObjects.JaggedArray.JaggedArray()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.JaggedArray.JaggedArray()", file="ReflectionUtils.cs"];
m9_1284 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", span="2973-2973", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", file="ReflectionUtils.cs"];
m9_1285 [label="return ((IDictionary<string, T>)_innerDictionary).Remove(item);", span="2975-2975", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", file="ReflectionUtils.cs"];
m9_1286 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", span="2973-2973", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", file="ReflectionUtils.cs"];
m9_1751 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeExample()", span="3976-3976", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeExample()", file="ReflectionUtils.cs"];
m9_1758 [label="string json = JsonConvert.SerializeObject(new[] { joe, mike }, Formatting.Indented)", span="3986-3986", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeExample()", file="ReflectionUtils.cs"];
m9_1759 [label="Console.WriteLine(json)", span="3999-3999", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeExample()", file="ReflectionUtils.cs"];
m9_1752 [label="Employee joe = new Employee()", span="3978-3978", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeExample()", file="ReflectionUtils.cs"];
m9_1754 [label="Employee mike = new Employee()", span="3980-3980", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeExample()", file="ReflectionUtils.cs"];
m9_1757 [label="mike.Manager = mike", span="3984-3984", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeExample()", file="ReflectionUtils.cs"];
m9_1753 [label="joe.Name = ''Joe Employee''", span="3979-3979", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeExample()", file="ReflectionUtils.cs"];
m9_1756 [label="joe.Manager = mike", span="3983-3983", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeExample()", file="ReflectionUtils.cs"];
m9_1755 [label="mike.Name = ''Mike Manager''", span="3981-3981", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeExample()", file="ReflectionUtils.cs"];
m9_1760 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeExample()", span="3976-3976", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeExample()", file="ReflectionUtils.cs"];
m9_1813 [label="Entry System.Console.WriteLine(string, object)", span="0-0", cluster="System.Console.WriteLine(string, object)", file="ReflectionUtils.cs"];
m9_1242 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Human.Human()", span="2823-2823", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Human.Human()", file="ReflectionUtils.cs"];
m9_772 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", span="1668-1668", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="ReflectionUtils.cs"];
m9_773 [label="_name = name", span="1670-1670", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="ReflectionUtils.cs"];
m9_774 [label="Age = age", span="1671-1671", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="ReflectionUtils.cs"];
m9_775 [label="Rank = rank", span="1672-1672", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="ReflectionUtils.cs"];
m9_776 [label="Title = title", span="1673-1673", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="ReflectionUtils.cs"];
m9_777 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", span="1668-1668", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="ReflectionUtils.cs"];
m9_263 [label="((FieldInfo)member).SetValue(target, value)", span="544-544", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", file="ReflectionUtils.cs"];
m9_2897 [label="Entry Newtonsoft.Json.JsonTextReader.Read()", span="298-298", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="ReflectionUtils.cs"];
m9_3372 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.GetEnumerator()", span="7993-7993", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.GetEnumerator()", file="ReflectionUtils.cs"];
m9_3373 [label="return _dictionary.GetEnumerator();", span="7995-7995", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.GetEnumerator()", file="ReflectionUtils.cs"];
m9_3374 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.GetEnumerator()", span="7993-7993", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.GetEnumerator()", file="ReflectionUtils.cs"];
m9_270 [label="StringWriter sw = new StringWriter()", span="658-658", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomCollectionSerialization()", file="ReflectionUtils.cs"];
m9_271 [label="jsonSerializer.Serialize(sw, collection)", span="660-660", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomCollectionSerialization()", file="ReflectionUtils.cs"];
m9_273 [label="ProductCollection collectionNew = (ProductCollection)jsonSerializer.Deserialize(new JsonTextReader(new StringReader(sw.GetStringBuilder().ToString())), typeof(ProductCollection))", span="665-665", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomCollectionSerialization()", file="ReflectionUtils.cs"];
m9_274 [label="CollectionAssert.AreEqual(collection, collectionNew)", span="667-667", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomCollectionSerialization()", file="ReflectionUtils.cs"];
m9_280 [label="Entry System.IO.StringWriter.GetStringBuilder()", span="0-0", cluster="System.IO.StringWriter.GetStringBuilder()", file="ReflectionUtils.cs"];
m9_283 [label="Entry System.IO.StringReader.StringReader(string)", span="0-0", cluster="System.IO.StringReader.StringReader(string)", file="ReflectionUtils.cs"];
m9_285 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", span="671-671", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", file="ReflectionUtils.cs"];
m9_272 [label="Assert.AreEqual(@''[{''''Name'''':''''Test1'''',''''ExpiryDate'''':''''2000-01-01T00:00:00Z'''',''''Price'''':0.0,''''Sizes'''':null},{''''Name'''':''''Test2'''',''''ExpiryDate'''':''''2000-01-01T00:00:00Z'''',''''Price'''':0.0,''''Sizes'''':null},{''''Name'''':''''Test3'''',''''ExpiryDate'''':''''2000-01-01T00:00:00Z'''',''''Price'''':0.0,''''Sizes'''':null}]'',\r\n                      sw.GetStringBuilder().ToString())", span="662-663", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomCollectionSerialization()", file="ReflectionUtils.cs"];
m9_279 [label="Entry Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", span="649-649", cluster="Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", file="ReflectionUtils.cs"];
m9_286 [label="string json = JsonConvert.SerializeObject(new object())", span="673-673", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", file="ReflectionUtils.cs"];
m9_276 [label="Entry Newtonsoft.Json.Tests.TestObjects.ProductCollection.ProductCollection()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.ProductCollection.ProductCollection()", file="ReflectionUtils.cs"];
m9_275 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomCollectionSerialization()", span="646-646", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomCollectionSerialization()", file="ReflectionUtils.cs"];
m9_277 [label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="438-438", cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="ReflectionUtils.cs"];
m9_278 [label="Entry System.IO.StringWriter.StringWriter()", span="0-0", cluster="System.IO.StringWriter.StringWriter()", file="ReflectionUtils.cs"];
m9_281 [label="Entry System.Text.StringBuilder.ToString()", span="0-0", cluster="System.Text.StringBuilder.ToString()", file="ReflectionUtils.cs"];
m9_282 [label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="73-73", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="ReflectionUtils.cs"];
m9_284 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", span="580-580", cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", file="ReflectionUtils.cs"];
m9_287 [label="Assert.AreEqual(''{}'', json)", span="674-674", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", file="ReflectionUtils.cs"];
m9_1533 [label="Entry Unk.LoadXml", span="", cluster="Unk.LoadXml", file="ReflectionUtils.cs"];
m9_322 [label="IList<MemberInfo> resolvedMembers = new List<MemberInfo>()", span="669-669", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m9_1376 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, System.DateTime)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, System.DateTime)", file="ReflectionUtils.cs"];
m9_2547 [label="Entry Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", span="457-457", cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="ReflectionUtils.cs"];
m9_433 [label="i < fullyQualifiedTypeName.Length", span="881-881", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="ReflectionUtils.cs"];
m9_862 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", span="1902-1902", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="ReflectionUtils.cs"];
m9_864 [label="RoleTransfer r = JsonConvert.DeserializeObject<RoleTransfer>(json)", span="1906-1906", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="ReflectionUtils.cs"];
m9_865 [label="Assert.AreEqual(RoleTransferOperation.Second, r.Operation)", span="1908-1908", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="ReflectionUtils.cs"];
m9_866 [label="Assert.AreEqual(''Admin'', r.RoleName)", span="1909-1909", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="ReflectionUtils.cs"];
m9_867 [label="Assert.AreEqual(RoleTransferDirection.First, r.Direction)", span="1910-1910", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="ReflectionUtils.cs"];
m9_863 [label="string json = @''{''''Operation'''':''''1'''',''''RoleName'''':''''Admin'''',''''Direction'''':''''0''''}''", span="1904-1904", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="ReflectionUtils.cs"];
m9_868 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", span="1902-1902", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="ReflectionUtils.cs"];
m9_830 [label="Entry Newtonsoft.Json.Linq.JObject.Parse(string)", span="325-325", cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", file="ReflectionUtils.cs"];
m9_39 [label="DateTime dateValue = new DateTime(2010, 3, 30)", span="206-206", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="ReflectionUtils.cs"];
m9_40 [label="Dictionary<string, object> testDictionary = new Dictionary<string, object>()", span="207-207", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="ReflectionUtils.cs"];
m9_41 [label="testDictionary[''date''] = dateValue", span="208-208", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="ReflectionUtils.cs"];
m9_43 [label="MemoryStream ms = new MemoryStream()", span="213-213", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="ReflectionUtils.cs"];
m9_45 [label="serializer.WriteObject(ms, testDictionary)", span="215-215", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="ReflectionUtils.cs"];
m9_46 [label="byte[] data = ms.ToArray()", span="217-217", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="ReflectionUtils.cs"];
m9_42 [label="string jsonText = JsonConvert.SerializeObject(testDictionary)", span="210-210", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="ReflectionUtils.cs"];
m9_44 [label="DataContractJsonSerializer serializer = new DataContractJsonSerializer(typeof(Dictionary<string, object>))", span="214-214", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="ReflectionUtils.cs"];
m9_48 [label="Dictionary<string, object> deserializedDictionary = (Dictionary<string, object>)JsonConvert.DeserializeObject(jsonText, typeof(Dictionary<string, object>))", span="221-221", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="ReflectionUtils.cs"];
m9_50 [label="Assert.AreEqual(dateValue, deserializedDate)", span="224-224", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="ReflectionUtils.cs"];
m9_47 [label="string output = Encoding.UTF8.GetString(data, 0, data.Length)", span="218-218", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="ReflectionUtils.cs"];
m9_49 [label="DateTime deserializedDate = (DateTime)deserializedDictionary[''date'']", span="222-222", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="ReflectionUtils.cs"];
m9_51 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", span="204-204", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="ReflectionUtils.cs"];
m9_52 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="ReflectionUtils.cs"];
m9_57 [label="bool writingAssemblyName = false", span="187-187", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="ReflectionUtils.cs"];
m9_1625 [label="Entry Newtonsoft.Json.Tests.TestObjects.WagePerson.WagePerson()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.WagePerson.WagePerson()", file="ReflectionUtils.cs"];
m9_28 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsPublic(System.Reflection.PropertyInfo)", span="134-134", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsPublic(System.Reflection.PropertyInfo)", file="ReflectionUtils.cs"];
m9_1211 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="2746-2746", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="ReflectionUtils.cs"];
m9_1213 [label="Add(pair.Key, pair.Value)", span="2750-2750", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="ReflectionUtils.cs"];
m9_1212 [label=initial, span="2748-2748", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="ReflectionUtils.cs"];
m9_1214 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="2746-2746", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="ReflectionUtils.cs"];
m9_1688 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", span="3854-3854", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", file="ReflectionUtils.cs"];
m9_1689 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''JSON reference $ref property must have a string or null value. Path 'Father.$ref', line 5, position 14.'',\r\n        () =>\r\n        {\r\n          //Additional text found in JSON string after finishing deserializing object.\r\n          //Test 1\r\n          var reference = new Dictionary<string, object>();\r\n          reference.Add(''$ref'', 1);\r\n          reference.Add(''$id'', 1);\r\n\r\n          var child = new Dictionary<string, object>();\r\n          child.Add(''_id'', 2);\r\n          child.Add(''Name'', ''Isabell'');\r\n          child.Add(''Father'', reference);\r\n\r\n          var json = JsonConvert.SerializeObject(child, Formatting.Indented);\r\n          JsonConvert.DeserializeObject<Dictionary<string, object>>(json);\r\n        })", span="3856-3873", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", file="ReflectionUtils.cs"];
m9_1690 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", span="3854-3854", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", file="ReflectionUtils.cs"];
m9_2943 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass<T>.System.Collections.IEnumerable.GetEnumerator()", span="6789-6789", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass<T>.System.Collections.IEnumerable.GetEnumerator()", file="ReflectionUtils.cs"];
m9_2944 [label="return GetEnumerator();", span="6791-6791", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass<T>.System.Collections.IEnumerable.GetEnumerator()", file="ReflectionUtils.cs"];
m9_2945 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass<T>.System.Collections.IEnumerable.GetEnumerator()", span="6789-6789", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass<T>.System.Collections.IEnumerable.GetEnumerator()", file="ReflectionUtils.cs"];
m9_1588 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeExistingGenericList()", span="3663-3663", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeExistingGenericList()", file="ReflectionUtils.cs"];
m9_1593 [label="GenericListTestClass newValue = JsonConvert.DeserializeObject<GenericListTestClass>(json)", span="3671-3671", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeExistingGenericList()", file="ReflectionUtils.cs"];
m9_1594 [label="Assert.AreEqual(2, newValue.GenericList.Count)", span="3672-3672", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeExistingGenericList()", file="ReflectionUtils.cs"];
m9_1595 [label="Assert.AreEqual(typeof(List<string>), newValue.GenericList.GetType())", span="3673-3673", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeExistingGenericList()", file="ReflectionUtils.cs"];
m9_1592 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="3669-3669", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeExistingGenericList()", file="ReflectionUtils.cs"];
m9_1589 [label="GenericListTestClass c = new GenericListTestClass()", span="3665-3665", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeExistingGenericList()", file="ReflectionUtils.cs"];
m9_1591 [label="c.GenericList.Add(''2'')", span="3667-3667", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeExistingGenericList()", file="ReflectionUtils.cs"];
m9_1590 [label="c.GenericList.Add(''1'')", span="3666-3666", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeExistingGenericList()", file="ReflectionUtils.cs"];
m9_1596 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeExistingGenericList()", span="3663-3663", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeExistingGenericList()", file="ReflectionUtils.cs"];
m9_252 [label="throw new ArgumentException(''MemberInfo '{0}' is not of type FieldInfo or PropertyInfo''.FormatWith(CultureInfo.InvariantCulture, CultureInfo.InvariantCulture, member.Name), nameof(member));", span="526-526", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="ReflectionUtils.cs"];
m9_1041 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", span="174-174", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", file="ReflectionUtils.cs"];
m9_475 [label="initialFields.AddRange(childPrivateFields)", span="951-951", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateFields(System.Collections.Generic.IList<System.Reflection.MemberInfo>, System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m9_480 [label="Entry System.Collections.Generic.IList<T>.AddRange<T>(System.Collections.Generic.IEnumerable<T>)", span="64-64", cluster="System.Collections.Generic.IList<T>.AddRange<T>(System.Collections.Generic.IEnumerable<T>)", file="ReflectionUtils.cs"];
m9_481 [label="Entry lambda expression", span="949-949", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_482 [label="f.IsPrivate", span="949-949", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_479 [label="Entry Unk.>", span="", cluster="Unk.>", file="ReflectionUtils.cs"];
m9_478 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="ReflectionUtils.cs"];
m9_476 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateFields(System.Collections.Generic.IList<System.Reflection.MemberInfo>, System.Type, System.Reflection.BindingFlags)", span="936-936", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateFields(System.Collections.Generic.IList<System.Reflection.MemberInfo>, System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m9_477 [label="Entry System.Reflection.BindingFlags.RemoveFlag(System.Reflection.BindingFlags)", span="988-988", cluster="System.Reflection.BindingFlags.RemoveFlag(System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m9_483 [label="Exit lambda expression", span="949-949", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_3178 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeReferenceTracked3DArray()", span="7354-7354", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeReferenceTracked3DArray()", file="ReflectionUtils.cs"];
m9_3183 [label="Assert.AreEqual(@''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$values'''': [\r\n    {\r\n      ''''$id'''': ''''2'''',\r\n      ''''$values'''': [\r\n        [\r\n          {\r\n            ''''$id'''': ''''3'''',\r\n            ''''EventName'''': ''''EventName!'''',\r\n            ''''Venue'''': null,\r\n            ''''Performances'''': null\r\n          },\r\n          {\r\n            ''''$ref'''': ''''3''''\r\n          }\r\n        ],\r\n        [\r\n          {\r\n            ''''$ref'''': ''''3''''\r\n          },\r\n          {\r\n            ''''$ref'''': ''''3''''\r\n          }\r\n        ]\r\n      ]\r\n    },\r\n    {\r\n      ''''$ref'''': ''''2''''\r\n    }\r\n  ]\r\n}'', json)", span="7373-7404", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeReferenceTracked3DArray()", file="ReflectionUtils.cs"];
m9_3182 [label="string json = JsonConvert.SerializeObject(values1, new JsonSerializerSettings\r\n        {\r\n          PreserveReferencesHandling = PreserveReferencesHandling.All,\r\n          Formatting = Formatting.Indented\r\n        })", span="7367-7371", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeReferenceTracked3DArray()", file="ReflectionUtils.cs"];
m9_3181 [label="IList<Event[,]> values1 = new List<Event[,]>\r\n        {\r\n          array1,\r\n          array1\r\n        }", span="7361-7365", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeReferenceTracked3DArray()", file="ReflectionUtils.cs"];
m9_3180 [label="Event[,] array1 = new [,] { { e1, e1 }, { e1, e1 } }", span="7360-7360", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeReferenceTracked3DArray()", file="ReflectionUtils.cs"];
m9_3179 [label="Event e1 = new Event\r\n        {\r\n          EventName = ''EventName!''\r\n        }", span="7356-7359", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeReferenceTracked3DArray()", file="ReflectionUtils.cs"];
m9_3184 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeReferenceTracked3DArray()", span="7354-7354", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeReferenceTracked3DArray()", file="ReflectionUtils.cs"];
m9_407 [label="string json = JsonConvert.SerializeObject(name, Formatting.Indented)", span="889-889", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMemberGenericList()", file="ReflectionUtils.cs"];
m9_945 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", span="2092-2092", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="ReflectionUtils.cs"];
m9_946 [label="List<decimal?> l = JsonConvert.DeserializeObject<List<decimal?>>(''[ 3.3, null, 1.1 ] '')", span="2094-2094", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="ReflectionUtils.cs"];
m9_947 [label="Assert.AreEqual(3, l.Count)", span="2095-2095", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="ReflectionUtils.cs"];
m9_948 [label="Assert.AreEqual(3.3m, l[0])", span="2097-2097", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="ReflectionUtils.cs"];
m9_949 [label="Assert.AreEqual(null, l[1])", span="2098-2098", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="ReflectionUtils.cs"];
m9_950 [label="Assert.AreEqual(1.1m, l[2])", span="2099-2099", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="ReflectionUtils.cs"];
m9_951 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", span="2092-2092", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="ReflectionUtils.cs"];
m9_2441 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", span="5691-5691", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="ReflectionUtils.cs"];
m9_2444 [label="IList<decimal> d2 = JsonConvert.DeserializeObject<IList<decimal>>(json)", span="5697-5697", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="ReflectionUtils.cs"];
m9_2445 [label="Assert.AreEqual(d1.Count, d2.Count)", span="5699-5699", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="ReflectionUtils.cs"];
m9_2446 [label="Assert.AreEqual(d1[0], d2[0])", span="5700-5700", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="ReflectionUtils.cs"];
m9_2443 [label="string json = JsonConvert.SerializeObject(d1)", span="5695-5695", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="ReflectionUtils.cs"];
m9_2442 [label="IList<decimal> d1 = new List<decimal> { 1.1m }", span="5693-5693", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="ReflectionUtils.cs"];
m9_2447 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", span="5691-5691", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="ReflectionUtils.cs"];
m9_841 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", span="1834-1834", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="ReflectionUtils.cs"];
m9_844 [label="Assert.AreEqual(@''{''''bar'''':{''''baz'''':13}}'', json)", span="1843-1843", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="ReflectionUtils.cs"];
m9_843 [label="string json = JsonConvert.SerializeObject(value)", span="1841-1841", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="ReflectionUtils.cs"];
m9_842 [label="var value = new\r\n        {\r\n          bar = new JObject(new JProperty(''baz'', 13))\r\n        }", span="1836-1839", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="ReflectionUtils.cs"];
m9_845 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", span="1834-1834", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="ReflectionUtils.cs"];
m9_1906 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", span="4362-4362", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", file="ReflectionUtils.cs"];
m9_1907 [label="NullableDateTimeTestClass d = JsonConvert.DeserializeObject<NullableDateTimeTestClass>(''{\''DateTimeOffsetField\'':\''\\/Date(946663200000+0600)\\/\''}'')", span="4364-4364", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", file="ReflectionUtils.cs"];
m9_1908 [label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6)), d.DateTimeOffsetField)", span="4365-4365", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", file="ReflectionUtils.cs"];
m9_1909 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", span="4362-4362", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", file="ReflectionUtils.cs"];
m9_630 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", span="1308-1308", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="ReflectionUtils.cs"];
m9_632 [label="JaggedArray aa = JsonConvert.DeserializeObject<JaggedArray>(json)", span="1312-1312", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="ReflectionUtils.cs"];
m9_640 [label="Assert.AreEqual(json, after)", span="1323-1323", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="ReflectionUtils.cs"];
m9_633 [label="Assert.AreEqual(''Before!'', aa.Before)", span="1314-1314", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="ReflectionUtils.cs"];
m9_634 [label="Assert.AreEqual(''After!'', aa.After)", span="1315-1315", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="ReflectionUtils.cs"];
m9_635 [label="Assert.AreEqual(4, aa.Coordinates.Length)", span="1316-1316", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="ReflectionUtils.cs"];
m9_636 [label="Assert.AreEqual(2, aa.Coordinates[0].Length)", span="1317-1317", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="ReflectionUtils.cs"];
m9_637 [label="Assert.AreEqual(1, aa.Coordinates[0][0])", span="1318-1318", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="ReflectionUtils.cs"];
m9_638 [label="Assert.AreEqual(2, aa.Coordinates[1][1])", span="1319-1319", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="ReflectionUtils.cs"];
m9_639 [label="string after = JsonConvert.SerializeObject(aa)", span="1321-1321", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="ReflectionUtils.cs"];
m9_631 [label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1,2],[2,1],[2,2]],''''After'''':''''After!''''}''", span="1310-1310", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="ReflectionUtils.cs"];
m9_641 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", span="1308-1308", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="ReflectionUtils.cs"];
m9_925 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", span="2059-2059", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", file="ReflectionUtils.cs"];
m9_926 [label="string json = @''{''''sublocation'''':''''AlertEmailSender.Program.Main'''',''''userId'''':0,''''type'''':0,''''summary'''':''''Loading settings variables'''',''''details'''':null,''''stackTrace'''':''''   at System.Environment.GetStackTrace(Exception e, Boolean needFileInfo)\r\n   at System.Environment.get_StackTrace()\r\n   at mr.Logging.Event..ctor(String summary) in C:\\Projects\\MRUtils\\Logging\\Event.vb:line 71\r\n   at AlertEmailSender.Program.Main(String[] args) in C:\\Projects\\AlertEmailSender\\AlertEmailSender\\Program.cs:line 25'''',''''tag'''':null,''''time'''':''''\/Date(1249591032026-0400)\/''''}''", span="2061-2061", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", file="ReflectionUtils.cs"];
m9_927 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        @''Unable to find a constructor to use for type Newtonsoft.Json.Tests.TestObjects.Event. A class should either have a default constructor, one constructor with arguments or a constructor marked with the JsonConstructor attribute. Path 'sublocation', line 1, position 15.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<TestObjects.Event>(json);\r\n        })", span="2063-2068", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", file="ReflectionUtils.cs"];
m9_928 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", span="2059-2059", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", file="ReflectionUtils.cs"];
m9_2681 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.MetroColorConverter()", span="6203-6203", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.MetroColorConverter()", file="ReflectionUtils.cs"];
m9_500 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", span="995-995", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m9_2963 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIEnumerableFromConstructor_Failure()", span="6833-6833", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIEnumerableFromConstructor_Failure()", file="ReflectionUtils.cs"];
m9_2964 [label="string json = @''[\r\n  ''''One'''',\r\n  ''''II'''',\r\n  ''''3''''\r\n]''", span="6835-6839", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIEnumerableFromConstructor_Failure()", file="ReflectionUtils.cs"];
m9_2965 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''Cannot create and populate list type Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+EnumerableClassFailure`1[System.String]. Path '', line 1, position 1.'',\r\n        () => JsonConvert.DeserializeObject<EnumerableClassFailure<string>>(json))", span="6841-6843", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIEnumerableFromConstructor_Failure()", file="ReflectionUtils.cs"];
m9_2966 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIEnumerableFromConstructor_Failure()", span="6833-6833", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIEnumerableFromConstructor_Failure()", file="ReflectionUtils.cs"];
m9_839 [label="Entry System.Uri.Uri(string)", span="0-0", cluster="System.Uri.Uri(string)", file="ReflectionUtils.cs"];
m9_1667 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverterTest()", span="3816-3816", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverterTest()", file="ReflectionUtils.cs"];
m9_1671 [label="Assert.AreEqual(''Existing,Appended'', p.Name)", span="3826-3826", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverterTest()", file="ReflectionUtils.cs"];
m9_1668 [label="Movie p = new Movie()", span="3818-3818", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverterTest()", file="ReflectionUtils.cs"];
m9_1670 [label="JsonConvert.PopulateObject(''{'Name':'Appended'}'', p, new JsonSerializerSettings\r\n        {\r\n          Converters = new List<JsonConverter> { new StringAppenderConverter() }\r\n        })", span="3821-3824", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverterTest()", file="ReflectionUtils.cs"];
m9_1669 [label="p.Name = ''Existing,''", span="3819-3819", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverterTest()", file="ReflectionUtils.cs"];
m9_1672 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverterTest()", span="3816-3816", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverterTest()", file="ReflectionUtils.cs"];
m9_125 [label="return false;", span="285-285", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsGenericDefinition(System.Type, System.Type)", file="ReflectionUtils.cs"];
m9_2096 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", span="4835-4835", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="ReflectionUtils.cs"];
m9_2098 [label="DeserializeStringConvert p = JsonConvert.DeserializeObject<DeserializeStringConvert>(json)", span="4844-4844", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="ReflectionUtils.cs"];
m9_2099 [label="Assert.AreEqual(40, p.Age)", span="4845-4845", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="ReflectionUtils.cs"];
m9_2100 [label="Assert.AreEqual(44.4, p.Height)", span="4846-4846", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="ReflectionUtils.cs"];
m9_2101 [label="Assert.AreEqual(4m, p.Price)", span="4847-4847", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="ReflectionUtils.cs"];
m9_2097 [label="string json = @''{\r\n  'Name': 'James Hughes',\r\n  'Age': '40',\r\n  'Height': '44.4',\r\n  'Price': '4'\r\n}''", span="4837-4842", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="ReflectionUtils.cs"];
m9_2102 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", span="4835-4835", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="ReflectionUtils.cs"];
m9_1974 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.VectorParent.VectorParent()", span="4483-4483", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.VectorParent.VectorParent()", file="ReflectionUtils.cs"];
m9_1702 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", span="3877-3877", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="ReflectionUtils.cs"];
m9_1712 [label="Dictionary<string, object> result = JsonConvert.DeserializeObject<Dictionary<string, object>>(json)", span="3890-3890", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="ReflectionUtils.cs"];
m9_1713 [label="Assert.AreEqual(3, result.Count)", span="3892-3892", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="ReflectionUtils.cs"];
m9_1714 [label="Assert.AreEqual(1, ((JObject)result[''Father'']).Count)", span="3893-3893", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="ReflectionUtils.cs"];
m9_1715 [label="Assert.AreEqual(''blah!'', (string)((JObject)result[''Father''])[''blah''])", span="3894-3894", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="ReflectionUtils.cs"];
m9_1711 [label="var json = JsonConvert.SerializeObject(child)", span="3889-3889", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="ReflectionUtils.cs"];
m9_1710 [label="child.Add(''Father'', reference)", span="3887-3887", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="ReflectionUtils.cs"];
m9_1707 [label="var child = new Dictionary<string, object>()", span="3884-3884", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="ReflectionUtils.cs"];
m9_1704 [label="reference.Add(''$ref'', null)", span="3880-3880", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="ReflectionUtils.cs"];
m9_1705 [label="reference.Add(''$id'', null)", span="3881-3881", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="ReflectionUtils.cs"];
m9_1706 [label="reference.Add(''blah'', ''blah!'')", span="3882-3882", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="ReflectionUtils.cs"];
m9_1708 [label="child.Add(''_id'', 2)", span="3885-3885", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="ReflectionUtils.cs"];
m9_1709 [label="child.Add(''Name'', ''Isabell'')", span="3886-3886", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="ReflectionUtils.cs"];
m9_1703 [label="var reference = new Dictionary<string, object>()", span="3879-3879", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="ReflectionUtils.cs"];
m9_1716 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", span="3877-3877", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="ReflectionUtils.cs"];
m9_1377 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, decimal)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, decimal)", file="ReflectionUtils.cs"];
m9_290 [label="member.MemberType()", span="606-606", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="ReflectionUtils.cs"];
m9_292 [label="FieldInfo fieldInfo = (FieldInfo)member", span="609-609", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="ReflectionUtils.cs"];
m9_291 [label="MemberTypes.Field", span="608-608", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="ReflectionUtils.cs"];
m9_293 [label="fieldInfo.IsLiteral", span="611-611", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="ReflectionUtils.cs"];
m9_2666 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", span="6145-6145", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="ReflectionUtils.cs"];
m9_2674 [label="Assert.AreEqual(@''{\r\n  '''':::NAME:::'''': '''':::APPLE:::'''',\r\n  '''':::EXPIRYDATE:::'''': ''''2012-04-01T00:00:00'''',\r\n  '''':::PRICE:::'''': 3.99,\r\n  '''':::SIZES:::'''': [\r\n    '''':::SMALL:::'''',\r\n    '''':::MEDIUM:::'''',\r\n    '''':::LARGE:::''''\r\n  ]\r\n}'', metroJson)", span="6167-6176", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="ReflectionUtils.cs"];
m9_2677 [label="Assert.AreEqual(@''[\r\n  '''':::GRAY:::'''',\r\n  '''':::GRAY:::'''',\r\n  '''':::GRAY:::'''',\r\n  '''':::GRAY:::'''',\r\n  '''':::BLACK:::'''',\r\n  '''':::GRAY:::''''\r\n]'', json2)", span="6193-6200", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="ReflectionUtils.cs"];
m9_2672 [label="string json = JsonConvert.SerializeObject(product)", span="6153-6153", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="ReflectionUtils.cs"];
m9_2673 [label="string metroJson = JsonConvert.SerializeObject(product, new JsonSerializerSettings\r\n        {\r\n          ContractResolver = new MetroPropertyNameResolver(),\r\n          Converters = { new MetroStringConverter() },\r\n          Formatting = Formatting.Indented\r\n        })", span="6161-6166", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="ReflectionUtils.cs"];
m9_2675 [label="Color[] colors = new[] { Color.Blue, Color.Red, Color.Yellow, Color.Green, Color.Black, Color.Brown }", span="6184-6184", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="ReflectionUtils.cs"];
m9_2676 [label="string json2 = JsonConvert.SerializeObject(colors, new JsonSerializerSettings\r\n      {\r\n        ContractResolver = new MetroPropertyNameResolver(),\r\n        Converters = { new MetroStringConverter(), new MetroColorConverter() },\r\n        Formatting = Formatting.Indented\r\n      })", span="6186-6191", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="ReflectionUtils.cs"];
m9_2667 [label="Product product = new Product()", span="6147-6147", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="ReflectionUtils.cs"];
m9_2671 [label="product.Sizes = new[] { ''Small'', ''Medium'', ''Large'' }", span="6151-6151", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="ReflectionUtils.cs"];
m9_2669 [label="product.ExpiryDate = new DateTime(2012, 4, 1)", span="6149-6149", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="ReflectionUtils.cs"];
m9_2668 [label="product.Name = ''Apple''", span="6148-6148", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="ReflectionUtils.cs"];
m9_2670 [label="product.Price = 3.99M", span="6150-6150", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="ReflectionUtils.cs"];
m9_2678 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", span="6145-6145", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="ReflectionUtils.cs"];
m9_621 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", span="1295-1295", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="ReflectionUtils.cs"];
m9_627 [label="Assert.AreEqual(@''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1,2],[2,1],[2,2]],''''After'''':''''After!''''}'', json)", span="1304-1304", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="ReflectionUtils.cs"];
m9_626 [label="string json = JsonConvert.SerializeObject(aa)", span="1302-1302", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="ReflectionUtils.cs"];
m9_623 [label="aa.Before = ''Before!''", span="1298-1298", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="ReflectionUtils.cs"];
m9_622 [label="JaggedArray aa = new JaggedArray()", span="1297-1297", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="ReflectionUtils.cs"];
m9_625 [label="aa.Coordinates = new[] { new[] { 1, 1 }, new[] { 1, 2 }, new[] { 2, 1 }, new[] { 2, 2 } }", span="1300-1300", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="ReflectionUtils.cs"];
m9_624 [label="aa.After = ''After!''", span="1299-1299", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="ReflectionUtils.cs"];
m9_628 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", span="1295-1295", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="ReflectionUtils.cs"];
m9_2540 [label="Entry Newtonsoft.Json.Tests.Serialization.Item.Item()", span="8290-8290", cluster="Newtonsoft.Json.Tests.Serialization.Item.Item()", file="ReflectionUtils.cs"];
m9_2567 [label="Entry Newtonsoft.Json.Tests.Serialization.WidgetId1.WidgetId1()", span="8250-8250", cluster="Newtonsoft.Json.Tests.Serialization.WidgetId1.WidgetId1()", file="ReflectionUtils.cs"];
m9_1821 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", span="4160-4160", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="ReflectionUtils.cs"];
m9_1827 [label="Dictionary<DictionaryKey, string> newDictionary =\r\n        JsonConvert.DeserializeObject<Dictionary<DictionaryKey, string>>(json)", span="4174-4175", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="ReflectionUtils.cs"];
m9_1826 [label="Assert.AreEqual(@''{\r\n  ''''First!'''': ''''First'''',\r\n  ''''Second!'''': ''''Second''''\r\n}'', json)", span="4169-4172", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="ReflectionUtils.cs"];
m9_1828 [label="Assert.AreEqual(2, newDictionary.Count)", span="4177-4177", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="ReflectionUtils.cs"];
m9_1825 [label="string json = JsonConvert.SerializeObject(dictionary, Formatting.Indented)", span="4167-4167", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="ReflectionUtils.cs"];
m9_1822 [label="Dictionary<DictionaryKey, string> dictionary = new Dictionary<DictionaryKey, string>()", span="4162-4162", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="ReflectionUtils.cs"];
m9_1824 [label="dictionary.Add(new DictionaryKey() { Value = ''Second!'' }, ''Second'')", span="4165-4165", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="ReflectionUtils.cs"];
m9_1823 [label="dictionary.Add(new DictionaryKey() { Value = ''First!'' }, ''First'')", span="4164-4164", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="ReflectionUtils.cs"];
m9_1829 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", span="4160-4160", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="ReflectionUtils.cs"];
m9_2344 [label="Entry Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", span="450-450", cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", file="ReflectionUtils.cs"];
m9_1196 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", span="2723-2723", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="ReflectionUtils.cs"];
m9_1198 [label="var dic = JsonConvert.DeserializeObject<DictionaryWithNoDefaultConstructor>(json)", span="2727-2727", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="ReflectionUtils.cs"];
m9_1199 [label="Assert.AreEqual(3, dic.Count)", span="2729-2729", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="ReflectionUtils.cs"];
m9_1200 [label="Assert.AreEqual(''value1'', dic[''key1''])", span="2730-2730", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="ReflectionUtils.cs"];
m9_1201 [label="Assert.AreEqual(''value2'', dic[''key2''])", span="2731-2731", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="ReflectionUtils.cs"];
m9_1202 [label="Assert.AreEqual(''value3'', dic[''key3''])", span="2732-2732", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="ReflectionUtils.cs"];
m9_1197 [label="string json = ''{key1:'value1',key2:'value2',key3:'value3'}''", span="2725-2725", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="ReflectionUtils.cs"];
m9_1203 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", span="2723-2723", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="ReflectionUtils.cs"];
m9_501 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.RemoveFlag(System.Reflection.BindingFlags, System.Reflection.BindingFlags)", span="988-988", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveFlag(System.Reflection.BindingFlags, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m9_156 [label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47", cluster="string.FormatWith(System.IFormatProvider, object)", file="ReflectionUtils.cs"];
m9_2401 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", span="5623-5623", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="ReflectionUtils.cs"];
m9_2405 [label="Uri output = JsonConvert.DeserializeObject<Uri>(json)", span="5628-5628", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="ReflectionUtils.cs"];
m9_2406 [label="Assert.AreEqual(uri, output)", span="5630-5630", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="ReflectionUtils.cs"];
m9_2404 [label="string json = JsonConvert.SerializeObject(uri)", span="5627-5627", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="ReflectionUtils.cs"];
m9_2403 [label="Uri uri = new Uri(input)", span="5626-5626", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="ReflectionUtils.cs"];
m9_2402 [label="string input = @''http://tes/?a=b\\c&d=e\''", span="5625-5625", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="ReflectionUtils.cs"];
m9_2407 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", span="5623-5623", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="ReflectionUtils.cs"];
m9_502 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", span="1063-1063", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="ReflectionUtils.cs"];
m9_503 [label="ClassAndMemberConverterClass c1 = new ClassAndMemberConverterClass()", span="1065-1065", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="ReflectionUtils.cs"];
m9_2248 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", span="5301-5301", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", file="ReflectionUtils.cs"];
m9_2249 [label="return _readonlyString;", span="5303-5303", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", file="ReflectionUtils.cs"];
m9_2250 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", span="5301-5301", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", file="ReflectionUtils.cs"];
m9_2665 [label="Entry Newtonsoft.Json.Tests.Serialization.PersonWithPrivateConstructor.CreatePerson()", span="8229-8229", cluster="Newtonsoft.Json.Tests.Serialization.PersonWithPrivateConstructor.CreatePerson()", file="ReflectionUtils.cs"];
m9_3429 [label="return new PersonWithPrivateConstructor();", span="8231-8231", cluster="Newtonsoft.Json.Tests.Serialization.PersonWithPrivateConstructor.CreatePerson()", file="ReflectionUtils.cs"];
m9_3430 [label="Exit Newtonsoft.Json.Tests.Serialization.PersonWithPrivateConstructor.CreatePerson()", span="8229-8229", cluster="Newtonsoft.Json.Tests.Serialization.PersonWithPrivateConstructor.CreatePerson()", file="ReflectionUtils.cs"];
m9_1654 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.StringListAppenderConverter()", span="3747-3747", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.StringListAppenderConverter()", file="ReflectionUtils.cs"];
m9_1292 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", span="2983-2983", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", file="ReflectionUtils.cs"];
m9_1293 [label="return _innerDictionary.TryGetValue(key, out value);", span="2985-2985", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", file="ReflectionUtils.cs"];
m9_1294 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", span="2983-2983", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", file="ReflectionUtils.cs"];
m9_3035 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3D()", span="7032-7032", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3D()", file="ReflectionUtils.cs"];
m9_3041 [label="Assert.AreEqual(@''{''''Before'''':''''Before!'''',''''Coordinates'''':[[[1,1,1],[1,1,2]],[[1,2,1],[1,2,2]],[[2,1,1],[2,1,2]],[[2,2,1],[2,2,2]]],''''After'''':''''After!''''}'', json)", span="7041-7041", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3D()", file="ReflectionUtils.cs"];
m9_3040 [label="string json = JsonConvert.SerializeObject(aa)", span="7039-7039", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3D()", file="ReflectionUtils.cs"];
m9_3036 [label="Array3D aa = new Array3D()", span="7034-7034", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3D()", file="ReflectionUtils.cs"];
m9_3039 [label="aa.Coordinates = new[, ,] { { { 1, 1, 1 }, { 1, 1, 2 } }, { { 1, 2, 1 }, { 1, 2, 2 } }, { { 2, 1, 1 }, { 2, 1, 2 } }, { { 2, 2, 1 }, { 2, 2, 2 } } }", span="7037-7037", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3D()", file="ReflectionUtils.cs"];
m9_3037 [label="aa.Before = ''Before!''", span="7035-7035", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3D()", file="ReflectionUtils.cs"];
m9_3038 [label="aa.After = ''After!''", span="7036-7036", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3D()", file="ReflectionUtils.cs"];
m9_3042 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3D()", span="7032-7032", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3D()", file="ReflectionUtils.cs"];
m9_1380 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, sbyte)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, sbyte)", file="ReflectionUtils.cs"];
m9_2455 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", span="5717-5717", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="ReflectionUtils.cs"];
m9_2458 [label="IList<byte[]> d2 = JsonConvert.DeserializeObject<IList<byte[]>>(json)", span="5723-5723", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="ReflectionUtils.cs"];
m9_2459 [label="Assert.AreEqual(d1.Count, d2.Count)", span="5725-5725", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="ReflectionUtils.cs"];
m9_2460 [label="Assert.AreEqual(d1[0], d2[0])", span="5726-5726", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="ReflectionUtils.cs"];
m9_2457 [label="string json = JsonConvert.SerializeObject(d1)", span="5721-5721", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="ReflectionUtils.cs"];
m9_2456 [label="IList<byte[]> d1 = new List<byte[]> { null }", span="5719-5719", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="ReflectionUtils.cs"];
m9_2461 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", span="5717-5717", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="ReflectionUtils.cs"];
m9_2863 [label="Entry Newtonsoft.Json.Tests.Serialization.PocoDataContractSerializationAttributesClass.PocoDataContractSerializationAttributesClass()", span="8481-8481", cluster="Newtonsoft.Json.Tests.Serialization.PocoDataContractSerializationAttributesClass.PocoDataContractSerializationAttributesClass()", file="ReflectionUtils.cs"];
m9_1169 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", span="2634-2634", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", file="ReflectionUtils.cs"];
m9_1170 [label="this._dict1.Add(item.Key, item)", span="2636-2636", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", file="ReflectionUtils.cs"];
m9_1171 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", span="2634-2634", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", file="ReflectionUtils.cs"];
m9_1936 [label="Entry System.Dynamic.ExpandoObject.ExpandoObject()", span="0-0", cluster="System.Dynamic.ExpandoObject.ExpandoObject()", file="ReflectionUtils.cs"];
m9_2049 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", span="4710-4710", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", file="ReflectionUtils.cs"];
m9_2050 [label="NonPublicConstructorWithJsonConstructor c = JsonConvert.DeserializeObject<NonPublicConstructorWithJsonConstructor>(''{}'')", span="4712-4712", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", file="ReflectionUtils.cs"];
m9_2051 [label="Assert.AreEqual(''NonPublic'', c.Constructor)", span="4713-4713", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", file="ReflectionUtils.cs"];
m9_2052 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", span="4710-4710", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", file="ReflectionUtils.cs"];
m9_238 [label="ValidationUtils.ArgumentNotNull(property, nameof(property))", span="496-496", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.PropertyInfo)", file="ReflectionUtils.cs"];
m9_3023 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", span="7011-7011", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", file="ReflectionUtils.cs"];
m9_3024 [label="IgnoreSerializableAttribute = false", span="7013-7013", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", file="ReflectionUtils.cs"];
m9_3025 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", span="7011-7011", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", file="ReflectionUtils.cs"];
m9_1792 [label="Entry Unk.IsFalse", span="", cluster="Unk.IsFalse", file="ReflectionUtils.cs"];
m9_13 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", span="142-142", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="ReflectionUtils.cs"];
m9_429 [label="Assert.AreEqual(@''[''''Class'''',''''!Test!'''']'', json)", span="933-933", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="ReflectionUtils.cs"];
m9_1946 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", span="4448-4448", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="ReflectionUtils.cs"];
m9_1948 [label="Invoice i = JsonConvert.DeserializeObject<Invoice>(json)", span="4451-4451", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="ReflectionUtils.cs"];
m9_1949 [label="Assert.AreEqual(123456789876543.21m, i.Amount)", span="4452-4452", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="ReflectionUtils.cs"];
m9_1947 [label="string json = ''{Amount:123456789876543.21}''", span="4450-4450", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="ReflectionUtils.cs"];
m9_1950 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", span="4448-4448", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="ReflectionUtils.cs"];
m9_1886 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", span="4327-4327", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="ReflectionUtils.cs"];
m9_1889 [label="var deserializeObject = JsonConvert.DeserializeObject<TimeZoneOffsetObject>(serializeObject)", span="4335-4335", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="ReflectionUtils.cs"];
m9_1888 [label="Assert.AreEqual(''{\''Offset\'':\''2000-01-01T00:00:00+06:00\''}'', serializeObject)", span="4334-4334", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="ReflectionUtils.cs"];
m9_1890 [label="Assert.AreEqual(TimeSpan.FromHours(6), deserializeObject.Offset.Offset)", span="4336-4336", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="ReflectionUtils.cs"];
m9_1891 [label="Assert.AreEqual(new DateTime(2000, 1, 1), deserializeObject.Offset.Date)", span="4337-4337", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="ReflectionUtils.cs"];
m9_1887 [label="var serializeObject = JsonConvert.SerializeObject(new TimeZoneOffsetObject\r\n        {\r\n          Offset = new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6))\r\n        })", span="4329-4332", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="ReflectionUtils.cs"];
m9_1892 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", span="4327-4327", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="ReflectionUtils.cs"];
m9_117 [label="JObject o = (JObject)JsonConvert.DeserializeObject(jsonText)", span="405-405", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="ReflectionUtils.cs"];
m9_2139 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", span="4973-4973", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", file="ReflectionUtils.cs"];
m9_2141 [label="JsonConvert.DeserializeObject<EnumerableArrayPropertyClass>(json)", span="4976-4976", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", file="ReflectionUtils.cs"];
m9_2140 [label="string json = JsonConvert.SerializeObject(new EnumerableArrayPropertyClass())", span="4975-4975", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", file="ReflectionUtils.cs"];
m9_2142 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", span="4973-4973", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", file="ReflectionUtils.cs"];
m9_3125 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEmpty3DArray()", span="7269-7269", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEmpty3DArray()", file="ReflectionUtils.cs"];
m9_3131 [label="Assert.AreEqual(@''{''''Before'''':''''Before!'''',''''Coordinates'''':[],''''After'''':''''After!''''}'', json)", span="7278-7278", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEmpty3DArray()", file="ReflectionUtils.cs"];
m9_3130 [label="string json = JsonConvert.SerializeObject(aa)", span="7276-7276", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEmpty3DArray()", file="ReflectionUtils.cs"];
m9_3126 [label="Array3D aa = new Array3D()", span="7271-7271", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEmpty3DArray()", file="ReflectionUtils.cs"];
m9_3129 [label="aa.Coordinates = new int[0, 0, 0]", span="7274-7274", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEmpty3DArray()", file="ReflectionUtils.cs"];
m9_3127 [label="aa.Before = ''Before!''", span="7272-7272", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEmpty3DArray()", file="ReflectionUtils.cs"];
m9_3128 [label="aa.After = ''After!''", span="7273-7273", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEmpty3DArray()", file="ReflectionUtils.cs"];
m9_3132 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEmpty3DArray()", span="7269-7269", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEmpty3DArray()", file="ReflectionUtils.cs"];
m9_3158 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNull3DArray()", span="7320-7320", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNull3DArray()", file="ReflectionUtils.cs"];
m9_3160 [label="Array3D aa = JsonConvert.DeserializeObject<Array3D>(json)", span="7324-7324", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNull3DArray()", file="ReflectionUtils.cs"];
m9_3165 [label="Assert.AreEqual(json, after)", span="7332-7332", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNull3DArray()", file="ReflectionUtils.cs"];
m9_3161 [label="Assert.AreEqual(''Before!'', aa.Before)", span="7326-7326", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNull3DArray()", file="ReflectionUtils.cs"];
m9_3162 [label="Assert.AreEqual(''After!'', aa.After)", span="7327-7327", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNull3DArray()", file="ReflectionUtils.cs"];
m9_3163 [label="Assert.AreEqual(null, aa.Coordinates)", span="7328-7328", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNull3DArray()", file="ReflectionUtils.cs"];
m9_3164 [label="string after = JsonConvert.SerializeObject(aa)", span="7330-7330", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNull3DArray()", file="ReflectionUtils.cs"];
m9_3159 [label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':null,''''After'''':''''After!''''}''", span="7322-7322", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNull3DArray()", file="ReflectionUtils.cs"];
m9_3166 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNull3DArray()", span="7320-7320", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNull3DArray()", file="ReflectionUtils.cs"];
m9_847 [label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", span="192-192", cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", file="ReflectionUtils.cs"];
m9_1975 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.Vector()", span="4471-4471", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.Vector()", file="ReflectionUtils.cs"];
m9_3375 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.System.Collections.IEnumerable.GetEnumerator()", span="7998-7998", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.System.Collections.IEnumerable.GetEnumerator()", file="ReflectionUtils.cs"];
m9_3376 [label="return _dictionary.GetEnumerator();", span="8000-8000", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.System.Collections.IEnumerable.GetEnumerator()", file="ReflectionUtils.cs"];
m9_3377 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.System.Collections.IEnumerable.GetEnumerator()", span="7998-7998", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.System.Collections.IEnumerable.GetEnumerator()", file="ReflectionUtils.cs"];
m9_3243 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", span="7681-7681", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="ReflectionUtils.cs"];
m9_3245 [label="IList<BigInteger> l = JsonConvert.DeserializeObject<IList<BigInteger>>(json)", span="7685-7685", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="ReflectionUtils.cs"];
m9_3246 [label="Assert.AreEqual(BigInteger.Parse(''999999999999999999999999999999999999999999999999''), l[0])", span="7687-7687", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="ReflectionUtils.cs"];
m9_3244 [label="string json = @''[999999999999999999999999999999999999999999999999]''", span="7683-7683", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="ReflectionUtils.cs"];
m9_3247 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''Error converting value 999999999999999999999999999999999999999999999999 to type 'System.Int64'. Path '[0]', line 1, position 49.'',\r\n        () => JsonConvert.DeserializeObject<IList<long>>(json))", span="7689-7691", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="ReflectionUtils.cs"];
m9_3248 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", span="7681-7681", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="ReflectionUtils.cs"];
m9_2480 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", span="5772-5772", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="ReflectionUtils.cs"];
m9_2483 [label="Assert.AreEqual(@''{\r\n  ''''Integer'''': 1,\r\n  ''''NullableInteger1'''': 2,\r\n  ''''NullableInteger2'''': null\r\n}'', json)", span="5783-5787", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="ReflectionUtils.cs"];
m9_2482 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="5781-5781", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="ReflectionUtils.cs"];
m9_2481 [label="ConvertableIntTestClass c = new ConvertableIntTestClass\r\n      {\r\n        Integer = new ConvertibleInt(1),\r\n        NullableInteger1 = new ConvertibleInt(2),\r\n        NullableInteger2 = null\r\n      }", span="5774-5779", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="ReflectionUtils.cs"];
m9_2484 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", span="5772-5772", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="ReflectionUtils.cs"];
m9_418 [label="ConstructorCaseSensitivityClass c = new ConstructorCaseSensitivityClass(''param1'', ''Param1'', ''Param2'')", span="916-916", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="ReflectionUtils.cs"];
m9_3084 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D_WithTooFewItems()", span="7209-7209", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D_WithTooFewItems()", file="ReflectionUtils.cs"];
m9_3085 [label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1],[2,1],[2,2]],''''After'''':''''After!''''}''", span="7211-7211", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D_WithTooFewItems()", file="ReflectionUtils.cs"];
m9_3086 [label="ExceptionAssert.Throws<Exception>(\r\n        ''Cannot deserialize non-cubical array as multidimensional array.'',\r\n        () => JsonConvert.DeserializeObject<Array2D>(json))", span="7213-7215", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D_WithTooFewItems()", file="ReflectionUtils.cs"];
m9_3087 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D_WithTooFewItems()", span="7209-7209", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D_WithTooFewItems()", file="ReflectionUtils.cs"];
m9_339 [label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="ReflectionUtils.cs"];
m9_2113 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", span="4870-4870", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="ReflectionUtils.cs"];
m9_2116 [label="Assert.AreEqual(@''{}'', json)", span="4876-4876", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="ReflectionUtils.cs"];
m9_2115 [label="string json = JsonConvert.SerializeObject(e, Formatting.Indented)", span="4874-4874", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="ReflectionUtils.cs"];
m9_2114 [label="MultiIndexSuper e = new MultiIndexSuper()", span="4872-4872", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="ReflectionUtils.cs"];
m9_2117 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", span="4870-4870", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="ReflectionUtils.cs"];
m9_427 [label="ConverterPrecedenceClass c1 = new ConverterPrecedenceClass(''!Test!'')", span="930-930", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="ReflectionUtils.cs"];
m9_431 [label="Assert.AreEqual(''!Test!'', c2.TestValue)", span="937-937", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="ReflectionUtils.cs"];
m9_434 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", span="941-941", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="ReflectionUtils.cs"];
m9_432 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", span="928-928", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="ReflectionUtils.cs"];
m9_437 [label="Assert.AreEqual(@''[''''Class'''',''''!Test!'''']'', json)", span="946-946", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="ReflectionUtils.cs"];
m9_442 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", span="848-848", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", file="ReflectionUtils.cs"];
m9_443 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", span="1062-1062", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", file="ReflectionUtils.cs"];
m9_444 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", span="954-954", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="ReflectionUtils.cs"];
m9_435 [label="ConverterPrecedenceClass c1 = new ConverterPrecedenceClass(''!Test!'')", span="943-943", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="ReflectionUtils.cs"];
m9_436 [label="string json = JsonConvert.SerializeObject(c1, new ArgumentConverterPrecedenceClassConverter())", span="945-945", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="ReflectionUtils.cs"];
m9_438 [label="ConverterPrecedenceClass c2 = JsonConvert.DeserializeObject<ConverterPrecedenceClass>(json, new ArgumentConverterPrecedenceClassConverter())", span="948-948", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="ReflectionUtils.cs"];
m9_440 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", span="941-941", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="ReflectionUtils.cs"];
m9_439 [label="Assert.AreEqual(''!Test!'', c2.TestValue)", span="950-950", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="ReflectionUtils.cs"];
m9_441 [label="Entry Newtonsoft.Json.Tests.TestObjects.ArgumentConverterPrecedenceClassConverter.ArgumentConverterPrecedenceClassConverter()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.ArgumentConverterPrecedenceClassConverter.ArgumentConverterPrecedenceClassConverter()", file="ReflectionUtils.cs"];
m9_445 [label="DateTime testDate = new DateTime(JsonConvert.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="956-956", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="ReflectionUtils.cs"];
m9_523 [label="Assert.AreEqual(@''{''''Id'''':0}'', json)", span="1094-1094", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", file="ReflectionUtils.cs"];
m9_2360 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeKeyValuePairArray()", span="5562-5562", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeKeyValuePairArray()", file="ReflectionUtils.cs"];
m9_2362 [label="IList<KeyValuePair<string, IList<string>>> values = JsonConvert.DeserializeObject<IList<KeyValuePair<string, IList<string>>>>(json)", span="5566-5566", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeKeyValuePairArray()", file="ReflectionUtils.cs"];
m9_2363 [label="Assert.AreEqual(2, values.Count)", span="5568-5568", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeKeyValuePairArray()", file="ReflectionUtils.cs"];
m9_2364 [label="Assert.AreEqual(''aaa'', values[0].Key)", span="5569-5569", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeKeyValuePairArray()", file="ReflectionUtils.cs"];
m9_2365 [label="Assert.AreEqual(2, values[0].Value.Count)", span="5570-5570", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeKeyValuePairArray()", file="ReflectionUtils.cs"];
m9_2366 [label="Assert.AreEqual(''1'', values[0].Value[0])", span="5571-5571", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeKeyValuePairArray()", file="ReflectionUtils.cs"];
m9_2367 [label="Assert.AreEqual(''2'', values[0].Value[1])", span="5572-5572", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeKeyValuePairArray()", file="ReflectionUtils.cs"];
m9_2368 [label="Assert.AreEqual(''bbb'', values[1].Key)", span="5573-5573", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeKeyValuePairArray()", file="ReflectionUtils.cs"];
m9_2369 [label="Assert.AreEqual(2, values[1].Value.Count)", span="5574-5574", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeKeyValuePairArray()", file="ReflectionUtils.cs"];
m9_2370 [label="Assert.AreEqual(''3'', values[1].Value[0])", span="5575-5575", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeKeyValuePairArray()", file="ReflectionUtils.cs"];
m9_2371 [label="Assert.AreEqual(''4'', values[1].Value[1])", span="5576-5576", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeKeyValuePairArray()", file="ReflectionUtils.cs"];
m9_2361 [label="string json = @''[ { ''''Value'''': [ ''''1'''', ''''2'''' ], ''''Key'''': ''''aaa'''', ''''BadContent'''': [ 0 ] }, { ''''Value'''': [ ''''3'''', ''''4'''' ], ''''Key'''': ''''bbb'''' } ]''", span="5564-5564", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeKeyValuePairArray()", file="ReflectionUtils.cs"];
m9_2372 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeKeyValuePairArray()", span="5562-5562", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeKeyValuePairArray()", file="ReflectionUtils.cs"];
m9_3091 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D()", span="7219-7219", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D()", file="ReflectionUtils.cs"];
m9_3093 [label="Array3D aa = JsonConvert.DeserializeObject<Array3D>(json)", span="7223-7223", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D()", file="ReflectionUtils.cs"];
m9_3102 [label="Assert.AreEqual(json, after)", span="7235-7235", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D()", file="ReflectionUtils.cs"];
m9_3094 [label="Assert.AreEqual(''Before!'', aa.Before)", span="7225-7225", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D()", file="ReflectionUtils.cs"];
m9_3095 [label="Assert.AreEqual(''After!'', aa.After)", span="7226-7226", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D()", file="ReflectionUtils.cs"];
m9_3096 [label="Assert.AreEqual(4, aa.Coordinates.GetLength(0))", span="7227-7227", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D()", file="ReflectionUtils.cs"];
m9_3097 [label="Assert.AreEqual(2, aa.Coordinates.GetLength(1))", span="7228-7228", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D()", file="ReflectionUtils.cs"];
m9_3098 [label="Assert.AreEqual(3, aa.Coordinates.GetLength(2))", span="7229-7229", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D()", file="ReflectionUtils.cs"];
m9_3099 [label="Assert.AreEqual(1, aa.Coordinates[0, 0, 0])", span="7230-7230", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D()", file="ReflectionUtils.cs"];
m9_3100 [label="Assert.AreEqual(2, aa.Coordinates[1, 1, 1])", span="7231-7231", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D()", file="ReflectionUtils.cs"];
m9_3101 [label="string after = JsonConvert.SerializeObject(aa)", span="7233-7233", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D()", file="ReflectionUtils.cs"];
m9_3092 [label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[[1,1,1],[1,1,2]],[[1,2,1],[1,2,2]],[[2,1,1],[2,1,2]],[[2,2,1],[2,2,2]]],''''After'''':''''After!''''}''", span="7221-7221", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D()", file="ReflectionUtils.cs"];
m9_3103 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D()", span="7219-7219", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D()", file="ReflectionUtils.cs"];
m9_1245 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", span="2881-2881", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="ReflectionUtils.cs"];
m9_1249 [label="_innerDictionary.Add(entry.Key, entry.Value)", span="2890-2890", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="ReflectionUtils.cs"];
m9_1248 [label=dictionary, span="2888-2888", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="ReflectionUtils.cs"];
m9_1246 [label="dictionary == null", span="2883-2883", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="ReflectionUtils.cs"];
m9_1247 [label="throw new ArgumentNullException(''dictionary'');", span="2885-2885", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="ReflectionUtils.cs"];
m9_1250 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", span="2881-2881", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="ReflectionUtils.cs"];
m9_592 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", span="1225-1225", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="ReflectionUtils.cs"];
m9_594 [label="RequiredMembersClass c = JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="1234-1234", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="ReflectionUtils.cs"];
m9_595 [label="Assert.AreEqual(''I can't be null bro!'', c.FirstName)", span="1236-1236", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="ReflectionUtils.cs"];
m9_596 [label="Assert.AreEqual(null, c.MiddleName)", span="1237-1237", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="ReflectionUtils.cs"];
m9_597 [label="Assert.AreEqual(null, c.LastName)", span="1238-1238", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="ReflectionUtils.cs"];
m9_593 [label="string json = @''{\r\n  ''''FirstName'''': ''''I can't be null bro!'''',\r\n  ''''MiddleName'''': null,\r\n  ''''LastName'''': null,\r\n  ''''BirthDate'''': ''''\/Date(977309755000)\/''''\r\n}''", span="1227-1232", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="ReflectionUtils.cs"];
m9_598 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", span="1225-1225", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="ReflectionUtils.cs"];
m9_2777 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", span="6369-6369", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="ReflectionUtils.cs"];
m9_2781 [label="IDictionary<DateTimeOffset, int> dic2 = JsonConvert.DeserializeObject<IDictionary<DateTimeOffset, int>>(json)", span="6384-6384", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="ReflectionUtils.cs"];
m9_2780 [label="Assert.AreEqual(@''{\r\n  ''''2000-12-12T12:12:12+00:00'''': 1,\r\n  ''''2013-12-12T12:12:12+00:00'''': 2\r\n}'', json)", span="6379-6382", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="ReflectionUtils.cs"];
m9_2782 [label="Assert.AreEqual(2, dic2.Count)", span="6386-6386", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="ReflectionUtils.cs"];
m9_2783 [label="Assert.AreEqual(1, dic2[new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero)])", span="6387-6387", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="ReflectionUtils.cs"];
m9_2784 [label="Assert.AreEqual(2, dic2[new DateTimeOffset(2013, 12, 12, 12, 12, 12, TimeSpan.Zero)])", span="6388-6388", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="ReflectionUtils.cs"];
m9_2779 [label="string json = JsonConvert.SerializeObject(dic1, Formatting.Indented)", span="6377-6377", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="ReflectionUtils.cs"];
m9_2778 [label="IDictionary<DateTimeOffset, int> dic1 = new Dictionary<DateTimeOffset, int>\r\n        {\r\n          {new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero), 1},\r\n          {new DateTimeOffset(2013, 12, 12, 12, 12, 12, TimeSpan.Zero), 2}\r\n        }", span="6371-6375", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="ReflectionUtils.cs"];
m9_2785 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", span="6369-6369", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="ReflectionUtils.cs"];
m9_2689 [label="Entry Unk.WriteValue", span="", cluster="Unk.WriteValue", file="ReflectionUtils.cs"];
m9_2931 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", span="6761-6761", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", file="ReflectionUtils.cs"];
m9_2933 [label="Assert.AreEqual(@''{\r\n  ''''key'''': 123,\r\n  ''''value'''': ''''test value''''\r\n}'', json)", span="6769-6772", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", file="ReflectionUtils.cs"];
m9_2932 [label="string json =\r\n        JsonConvert.SerializeObject(new KeyValuePair<int, string>(123, ''test value''), Formatting.Indented, new JsonSerializerSettings\r\n          {\r\n            ContractResolver = new CamelCasePropertyNamesContractResolver()\r\n          })", span="6763-6767", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", file="ReflectionUtils.cs"];
m9_2934 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", span="6761-6761", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", file="ReflectionUtils.cs"];
m9_230 [label="Dictionary<int, int> values = new Dictionary<int, int>()", span="582-582", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="ReflectionUtils.cs"];
m9_231 [label="values.Add(-5, 6)", span="583-583", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="ReflectionUtils.cs"];
m9_232 [label="values.Add(int.MinValue, int.MaxValue)", span="584-584", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="ReflectionUtils.cs"];
m9_233 [label="string json = JsonConvert.SerializeObject(values)", span="586-586", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="ReflectionUtils.cs"];
m9_234 [label="Assert.AreEqual(@''{''''-5'''':6,''''-2147483648'''':2147483647}'', json)", span="588-588", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="ReflectionUtils.cs"];
m9_235 [label="Dictionary<int, int> newValues = JsonConvert.DeserializeObject<Dictionary<int, int>>(json)", span="590-590", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="ReflectionUtils.cs"];
m9_236 [label="CollectionAssert.AreEqual(values, newValues)", span="592-592", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="ReflectionUtils.cs"];
m9_2911 [label="Entry System.Uri.Uri(string, System.UriKind)", span="0-0", cluster="System.Uri.Uri(string, System.UriKind)", file="ReflectionUtils.cs"];
m9_1103 [label="Entry Newtonsoft.Json.Tests.TestObjects.Bar.Bar()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.Bar.Bar()", file="ReflectionUtils.cs"];
m9_1585 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListTestClass.GenericListTestClass()", span="3656-3656", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListTestClass.GenericListTestClass()", file="ReflectionUtils.cs"];
m9_1586 [label="GenericList = new List<string>()", span="3658-3658", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListTestClass.GenericListTestClass()", file="ReflectionUtils.cs"];
m9_1587 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListTestClass.GenericListTestClass()", span="3656-3656", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListTestClass.GenericListTestClass()", file="ReflectionUtils.cs"];
m9_980 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", span="2166-2166", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", file="ReflectionUtils.cs"];
m9_981 [label="string json = @''[]''", span="2168-2168", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", file="ReflectionUtils.cs"];
m9_982 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'Newtonsoft.Json.Tests.Linq.DynamicDictionary' because the type requires a JSON object (e.g. {''''name'''':''''value''''}) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON object (e.g. {''''name'''':''''value''''}) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<DynamicDictionary>(json);\r\n        })", span="2170-2177", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", file="ReflectionUtils.cs"];
m9_983 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", span="2166-2166", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", file="ReflectionUtils.cs"];
m9_3473 [label="Entry Newtonsoft.Json.Tests.Serialization.MetroPropertyNameResolver.ResolvePropertyName(string)", span="8457-8457", cluster="Newtonsoft.Json.Tests.Serialization.MetroPropertyNameResolver.ResolvePropertyName(string)", file="ReflectionUtils.cs"];
m9_3474 [label="return '':::'' + propertyName.ToUpper(CultureInfo.InvariantCulture) + '':::'';", span="8460-8460", cluster="Newtonsoft.Json.Tests.Serialization.MetroPropertyNameResolver.ResolvePropertyName(string)", file="ReflectionUtils.cs"];
m9_3475 [label="Exit Newtonsoft.Json.Tests.Serialization.MetroPropertyNameResolver.ResolvePropertyName(string)", span="8457-8457", cluster="Newtonsoft.Json.Tests.Serialization.MetroPropertyNameResolver.ResolvePropertyName(string)", file="ReflectionUtils.cs"];
m9_311 [label="Assert.AreEqual(2, wibble.Bar[2])", span="708-708", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="ReflectionUtils.cs"];
m9_3044 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3DWithConverter()", span="7045-7045", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3DWithConverter()", file="ReflectionUtils.cs"];
m9_3050 [label="Assert.AreEqual(@''{\r\n  ''''Before'''': ''''Before!'''',\r\n  ''''Coordinates'''': [\r\n    [\r\n      [\r\n        1.0,\r\n        1.0,\r\n        1.0\r\n      ],\r\n      [\r\n        1.0,\r\n        1.0,\r\n        2.0\r\n      ]\r\n    ],\r\n    [\r\n      [\r\n        1.0,\r\n        2.0,\r\n        1.0\r\n      ],\r\n      [\r\n        1.0,\r\n        2.0,\r\n        2.0\r\n      ]\r\n    ],\r\n    [\r\n      [\r\n        2.0,\r\n        1.0,\r\n        1.0\r\n      ],\r\n      [\r\n        2.0,\r\n        1.0,\r\n        2.0\r\n      ]\r\n    ],\r\n    [\r\n      [\r\n        2.0,\r\n        2.0,\r\n        1.0\r\n      ],\r\n      [\r\n        2.0,\r\n        2.0,\r\n        2.0\r\n      ]\r\n    ]\r\n  ],\r\n  ''''After'''': ''''After!''''\r\n}'', json)", span="7054-7107", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3DWithConverter()", file="ReflectionUtils.cs"];
m9_3049 [label="string json = JsonConvert.SerializeObject(aa, Formatting.Indented)", span="7052-7052", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3DWithConverter()", file="ReflectionUtils.cs"];
m9_3045 [label="Array3DWithConverter aa = new Array3DWithConverter()", span="7047-7047", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3DWithConverter()", file="ReflectionUtils.cs"];
m9_3048 [label="aa.Coordinates = new[, ,] { { { 1, 1, 1 }, { 1, 1, 2 } }, { { 1, 2, 1 }, { 1, 2, 2 } }, { { 2, 1, 1 }, { 2, 1, 2 } }, { { 2, 2, 1 }, { 2, 2, 2 } } }", span="7050-7050", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3DWithConverter()", file="ReflectionUtils.cs"];
m9_3046 [label="aa.Before = ''Before!''", span="7048-7048", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3DWithConverter()", file="ReflectionUtils.cs"];
m9_3047 [label="aa.After = ''After!''", span="7049-7049", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3DWithConverter()", file="ReflectionUtils.cs"];
m9_3051 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3DWithConverter()", span="7045-7045", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3DWithConverter()", file="ReflectionUtils.cs"];
m9_522 [label="string json = JsonConvert.SerializeObject(new GenericImpl())", span="1093-1093", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", file="ReflectionUtils.cs"];
m9_1261 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", file="ReflectionUtils.cs"];
m9_1309 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", span="3031-3031", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="ReflectionUtils.cs"];
m9_1314 [label="_dateTimeValue = new DateTime(0, DateTimeKind.Utc)", span="3037-3037", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="ReflectionUtils.cs"];
m9_1310 [label="_stringValue = stringValue", span="3033-3033", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="ReflectionUtils.cs"];
m9_1311 [label="_intValue = intValue", span="3034-3034", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="ReflectionUtils.cs"];
m9_1312 [label="_dateTimeOffsetValue = dateTimeOffset", span="3035-3035", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="ReflectionUtils.cs"];
m9_1313 [label="_personValue = personValue", span="3036-3036", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="ReflectionUtils.cs"];
m9_1315 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", span="3031-3031", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="ReflectionUtils.cs"];
m9_455 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", span="969-969", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="ReflectionUtils.cs"];
m9_1252 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", span="2925-2925", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", file="ReflectionUtils.cs"];
m9_1253 [label="((IDictionary<string, T>)_innerDictionary).Add(item)", span="2927-2927", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", file="ReflectionUtils.cs"];
m9_1254 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", span="2925-2925", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", file="ReflectionUtils.cs"];
m9_1938 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", span="4434-4434", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", file="ReflectionUtils.cs"];
m9_1939 [label="decimal d = JsonConvert.DeserializeObject<decimal>(''123456789876543.21'')", span="4436-4436", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", file="ReflectionUtils.cs"];
m9_1940 [label="Assert.AreEqual(123456789876543.21m, d)", span="4437-4437", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", file="ReflectionUtils.cs"];
m9_1941 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", span="4434-4434", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", file="ReflectionUtils.cs"];
m9_1728 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", span="3924-3924", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="ReflectionUtils.cs"];
m9_1731 [label="Assert.AreEqual(typeof(decimal), dic[''value''].GetType())", span="3934-3934", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="ReflectionUtils.cs"];
m9_1732 [label="Assert.AreEqual(9.9m, dic[''value''])", span="3935-3935", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="ReflectionUtils.cs"];
m9_1730 [label="var dic = JsonConvert.DeserializeObject<IDictionary<string, object>>(\r\n        json, new JsonSerializerSettings\r\n                {\r\n                  FloatParseHandling = FloatParseHandling.Decimal\r\n                })", span="3928-3932", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="ReflectionUtils.cs"];
m9_1729 [label="string json = @''{'value':9.9}''", span="3926-3926", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="ReflectionUtils.cs"];
m9_1733 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", span="3924-3924", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="ReflectionUtils.cs"];
m9_2165 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObject.ChildObject()", span="5045-5045", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObject.ChildObject()", file="ReflectionUtils.cs"];
m9_1734 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", span="3939-3939", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="ReflectionUtils.cs"];
m9_1743 [label="ShouldSerializeTestClass deserialized = JsonConvert.DeserializeObject<ShouldSerializeTestClass>(json)", span="3959-3959", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="ReflectionUtils.cs"];
m9_1739 [label="Assert.AreEqual(@''{\r\n  ''''Age'''': 27\r\n}'', json)", span="3947-3949", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="ReflectionUtils.cs"];
m9_1742 [label="Assert.AreEqual(@''{\r\n  ''''Name'''': ''''James'''',\r\n  ''''Age'''': 27\r\n}'', json)", span="3954-3957", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="ReflectionUtils.cs"];
m9_1744 [label="Assert.AreEqual(''James'', deserialized.Name)", span="3960-3960", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="ReflectionUtils.cs"];
m9_1745 [label="Assert.AreEqual(27, deserialized.Age)", span="3961-3961", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="ReflectionUtils.cs"];
m9_1741 [label="json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="3952-3952", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="ReflectionUtils.cs"];
m9_1738 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="3945-3945", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="ReflectionUtils.cs"];
m9_1740 [label="c._shouldSerializeName = true", span="3951-3951", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="ReflectionUtils.cs"];
m9_1735 [label="ShouldSerializeTestClass c = new ShouldSerializeTestClass()", span="3941-3941", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="ReflectionUtils.cs"];
m9_1737 [label="c.Age = 27", span="3943-3943", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="ReflectionUtils.cs"];
m9_1736 [label="c.Name = ''James''", span="3942-3942", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="ReflectionUtils.cs"];
m9_1746 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", span="3939-3939", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="ReflectionUtils.cs"];
m9_3461 [label="Entry string.ToUpper(System.Globalization.CultureInfo)", span="0-0", cluster="string.ToUpper(System.Globalization.CultureInfo)", file="ReflectionUtils.cs"];
m9_2957 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClassFailure<T>.GetEnumerator()", span="6821-6821", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClassFailure<T>.GetEnumerator()", file="ReflectionUtils.cs"];
m9_2958 [label="return _values.GetEnumerator();", span="6823-6823", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClassFailure<T>.GetEnumerator()", file="ReflectionUtils.cs"];
m9_2959 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClassFailure<T>.GetEnumerator()", span="6821-6821", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClassFailure<T>.GetEnumerator()", file="ReflectionUtils.cs"];
m9_728 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="893-893", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="ReflectionUtils.cs"];
m9_289 [label="Entry object.Object()", span="0-0", cluster="object.Object()", file="ReflectionUtils.cs"];
m9_295 [label="string json = ''{foo:'hello',bar:[1,2,3]}''", span="687-687", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="ReflectionUtils.cs"];
m9_297 [label="Assert.AreEqual(''hello'', wibble.Foo)", span="689-689", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="ReflectionUtils.cs"];
m9_303 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", span="685-685", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="ReflectionUtils.cs"];
m9_306 [label="ClassWithArray wibble = JsonConvert.DeserializeObject<ClassWithArray>(json)", span="702-702", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="ReflectionUtils.cs"];
m9_308 [label="Assert.AreEqual(4, wibble.Bar.Count)", span="705-705", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="ReflectionUtils.cs"];
m9_302 [label="Assert.AreEqual(3, wibble.Bar[3])", span="695-695", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="ReflectionUtils.cs"];
m9_309 [label="Assert.AreEqual(int.MaxValue, wibble.Bar[0])", span="706-706", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="ReflectionUtils.cs"];
m9_299 [label="Assert.AreEqual(int.MaxValue, wibble.Bar[0])", span="692-692", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="ReflectionUtils.cs"];
m9_294 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", span="685-685", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="ReflectionUtils.cs"];
m9_296 [label="ClassWithArray wibble = JsonConvert.DeserializeObject<ClassWithArray>(json)", span="688-688", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="ReflectionUtils.cs"];
m9_298 [label="Assert.AreEqual(4, wibble.Bar.Count)", span="691-691", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="ReflectionUtils.cs"];
m9_300 [label="Assert.AreEqual(1, wibble.Bar[1])", span="693-693", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="ReflectionUtils.cs"];
m9_301 [label="Assert.AreEqual(2, wibble.Bar[2])", span="694-694", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="ReflectionUtils.cs"];
m9_304 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", span="699-699", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="ReflectionUtils.cs"];
m9_305 [label="string json = ''{bar:[1,2,3], foo:'hello'}''", span="701-701", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="ReflectionUtils.cs"];
m9_307 [label="Assert.AreEqual(''hello'', wibble.Foo)", span="703-703", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="ReflectionUtils.cs"];
m9_310 [label="Assert.AreEqual(1, wibble.Bar[1])", span="707-707", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="ReflectionUtils.cs"];
m9_1504 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", span="3508-3508", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="ReflectionUtils.cs"];
m9_1511 [label="XNodeTestObject newTestObject = JsonConvert.DeserializeObject<XNodeTestObject>(json)", span="3529-3529", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="ReflectionUtils.cs"];
m9_1512 [label="Assert.AreEqual(testObject.Document.ToString(), newTestObject.Document.ToString())", span="3530-3530", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="ReflectionUtils.cs"];
m9_1513 [label="Assert.AreEqual(testObject.Element.ToString(), newTestObject.Element.ToString())", span="3531-3531", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="ReflectionUtils.cs"];
m9_1510 [label="Assert.AreEqual(expected, json)", span="3527-3527", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="ReflectionUtils.cs"];
m9_1508 [label="string json = JsonConvert.SerializeObject(testObject, Formatting.Indented)", span="3514-3514", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="ReflectionUtils.cs"];
m9_1514 [label="Assert.IsNull(newTestObject.Element.Parent)", span="3533-3533", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="ReflectionUtils.cs"];
m9_1505 [label="XNodeTestObject testObject = new XNodeTestObject()", span="3510-3510", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="ReflectionUtils.cs"];
m9_1509 [label="string expected = @''{\r\n  ''''Document'''': {\r\n    ''''root'''': ''''hehe, root''''\r\n  },\r\n  ''''Element'''': {\r\n    ''''fifth'''': {\r\n      ''''@xmlns:json'''': ''''http://json.org'''',\r\n      ''''@json:Awesome'''': ''''true'''',\r\n      ''''#text'''': ''''element''''\r\n    }\r\n  }\r\n}''", span="3515-3526", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="ReflectionUtils.cs"];
m9_1507 [label="testObject.Element = XElement.Parse(@''<fifth xmlns:json=''''http://json.org'''' json:Awesome=''''true''''>element</fifth>'')", span="3512-3512", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="ReflectionUtils.cs"];
m9_1506 [label="testObject.Document = XDocument.Parse(''<root>hehe, root</root>'')", span="3511-3511", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="ReflectionUtils.cs"];
m9_1515 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", span="3508-3508", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="ReflectionUtils.cs"];
m9_3167 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSemiEmpty3DArray()", span="7336-7336", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSemiEmpty3DArray()", file="ReflectionUtils.cs"];
m9_3169 [label="Array3D aa = JsonConvert.DeserializeObject<Array3D>(json)", span="7340-7340", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSemiEmpty3DArray()", file="ReflectionUtils.cs"];
m9_3176 [label="Assert.AreEqual(json, after)", span="7350-7350", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSemiEmpty3DArray()", file="ReflectionUtils.cs"];
m9_3170 [label="Assert.AreEqual(''Before!'', aa.Before)", span="7342-7342", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSemiEmpty3DArray()", file="ReflectionUtils.cs"];
m9_3171 [label="Assert.AreEqual(''After!'', aa.After)", span="7343-7343", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSemiEmpty3DArray()", file="ReflectionUtils.cs"];
m9_3172 [label="Assert.AreEqual(1, aa.Coordinates.GetLength(0))", span="7344-7344", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSemiEmpty3DArray()", file="ReflectionUtils.cs"];
m9_3173 [label="Assert.AreEqual(0, aa.Coordinates.GetLength(1))", span="7345-7345", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSemiEmpty3DArray()", file="ReflectionUtils.cs"];
m9_3174 [label="Assert.AreEqual(0, aa.Coordinates.GetLength(2))", span="7346-7346", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSemiEmpty3DArray()", file="ReflectionUtils.cs"];
m9_3175 [label="string after = JsonConvert.SerializeObject(aa)", span="7348-7348", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSemiEmpty3DArray()", file="ReflectionUtils.cs"];
m9_3168 [label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[]],''''After'''':''''After!''''}''", span="7338-7338", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSemiEmpty3DArray()", file="ReflectionUtils.cs"];
m9_3177 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSemiEmpty3DArray()", span="7336-7336", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSemiEmpty3DArray()", file="ReflectionUtils.cs"];
m9_80 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", span="182-182", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="ReflectionUtils.cs"];
m9_83 [label="Entry System.Text.StringBuilder.ToString()", span="0-0", cluster="System.Text.StringBuilder.ToString()", file="ReflectionUtils.cs"];
m9_84 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type, bool)", span="227-227", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type, bool)", file="ReflectionUtils.cs"];
m9_82 [label="Entry System.Text.StringBuilder.Append(char)", span="0-0", cluster="System.Text.StringBuilder.Append(char)", file="ReflectionUtils.cs"];
m9_81 [label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0", cluster="System.Text.StringBuilder.StringBuilder()", file="ReflectionUtils.cs"];
m9_85 [label="ValidationUtils.ArgumentNotNull(t, nameof(t))", span="229-229", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type, bool)", file="ReflectionUtils.cs"];
m9_1258 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", span="2935-2935", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", file="ReflectionUtils.cs"];
m9_1259 [label="_innerDictionary.Clear()", span="2937-2937", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", file="ReflectionUtils.cs"];
m9_1260 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", span="2935-2935", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", file="ReflectionUtils.cs"];
m9_71 [label="','", span="204-204", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="ReflectionUtils.cs"];
m9_2118 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuper.MultiIndexSuper()", span="4879-4879", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuper.MultiIndexSuper()", file="ReflectionUtils.cs"];
m9_2158 [label="Entry DataContractSerializer.cstr", span="", cluster="DataContractSerializer.cstr", file="ReflectionUtils.cs"];
m9_3401 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePrivateListCtor()", span="8076-8076", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePrivateListCtor()", file="ReflectionUtils.cs"];
m9_3404 [label="Assert.AreEqual(2, list.Count)", span="8088-8088", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePrivateListCtor()", file="ReflectionUtils.cs"];
m9_3403 [label="var list = JsonConvert.DeserializeObject<PrivateDefaultCtorList<int>>(''[1,2]'', new JsonSerializerSettings\r\n        {\r\n          ConstructorHandling = ConstructorHandling.AllowNonPublicDefaultConstructor\r\n        })", span="8083-8086", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePrivateListCtor()", file="ReflectionUtils.cs"];
m9_3402 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''Unable to find a constructor to use for type Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+PrivateDefaultCtorList`1[System.Int32]. Path '', line 1, position 1.'',\r\n        () => JsonConvert.DeserializeObject<PrivateDefaultCtorList<int>>(''[1,2]'')\r\n        )", span="8078-8081", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePrivateListCtor()", file="ReflectionUtils.cs"];
m9_3405 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePrivateListCtor()", span="8076-8076", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePrivateListCtor()", file="ReflectionUtils.cs"];
m9_507 [label="!IsPublic(subTypeProperty)", span="1008-1008", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m9_509 [label="index == -1", span="1013-1013", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m9_510 [label="initialProperties.Add(subTypeProperty)", span="1015-1015", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m9_506 [label="PropertyInfo subTypeProperty = propertyInfo", span="1006-1006", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m9_508 [label="int index = initialProperties.IndexOf(p => p.Name == subTypeProperty.Name)", span="1012-1012", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m9_505 [label="targetType.GetProperties(bindingAttr)", span="1004-1004", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m9_504 [label="(targetType = targetType.BaseType()) != null", span="1002-1002", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m9_511 [label="PropertyInfo childProperty = initialProperties[index]", span="1019-1019", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m9_2697 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", span="6231-6231", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="ReflectionUtils.cs"];
m9_2708 [label="Console.WriteLine(a.ToString())", span="6248-6248", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="ReflectionUtils.cs"];
m9_2707 [label="Console.WriteLine(v.Value.GetType())", span="6247-6247", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="ReflectionUtils.cs"];
m9_2704 [label="BsonReader reader = new BsonReader(new MemoryStream(data))\r\n        {\r\n          ReadRootValueAsArray = true\r\n        }", span="6240-6243", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="ReflectionUtils.cs"];
m9_2705 [label="JArray a = (JArray)JArray.ReadFrom(reader)", span="6245-6245", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="ReflectionUtils.cs"];
m9_2706 [label="JValue v = (JValue)a[0]", span="6246-6246", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="ReflectionUtils.cs"];
m9_2698 [label="MemoryStream ms = new MemoryStream()", span="6233-6233", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="ReflectionUtils.cs"];
m9_2703 [label="byte[] data = ms.ToArray()", span="6239-6239", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="ReflectionUtils.cs"];
m9_2699 [label="BsonWriter writer = new BsonWriter(ms)", span="6234-6234", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="ReflectionUtils.cs"];
m9_2702 [label="writer.WriteEndArray()", span="6237-6237", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="ReflectionUtils.cs"];
m9_2700 [label="writer.WriteStartArray()", span="6235-6235", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="ReflectionUtils.cs"];
m9_2701 [label="writer.WriteValue(''2000-01-02T03:04:05+06:00'')", span="6236-6236", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="ReflectionUtils.cs"];
m9_2709 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", span="6231-6231", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="ReflectionUtils.cs"];
m9_1042 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", span="2290-2290", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", file="ReflectionUtils.cs"];
m9_1043 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        @''Error setting value to 'ReadTimeout' on 'System.IO.MemoryStream'.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:0}'', new JsonSerializerSettings\r\n          {\r\n            ContractResolver = new DefaultContractResolver\r\n            {\r\n#if !(SILVERLIGHT || NETFX_CORE || PORTABLE)\r\n              IgnoreSerializableAttribute = true\r\n#endif\r\n            }\r\n          });\r\n        })", span="2292-2305", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", file="ReflectionUtils.cs"];
m9_1044 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", span="2290-2290", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", file="ReflectionUtils.cs"];
m9_1446 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", span="3475-3475", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="ReflectionUtils.cs"];
m9_1493 [label="BB_field1 = g", span="3478-3478", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="ReflectionUtils.cs"];
m9_1494 [label="BB_field2 = g", span="3479-3479", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="ReflectionUtils.cs"];
m9_1495 [label="BB_property1 = g", span="3480-3480", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="ReflectionUtils.cs"];
m9_1496 [label="BB_property2 = g", span="3481-3481", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="ReflectionUtils.cs"];
m9_1497 [label="BB_property3 = g", span="3482-3482", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="ReflectionUtils.cs"];
m9_1498 [label="BB_property4 = g", span="3483-3483", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="ReflectionUtils.cs"];
m9_1499 [label="BB_property5 = g", span="3484-3484", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="ReflectionUtils.cs"];
m9_1500 [label="BB_property6 = g", span="3485-3485", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="ReflectionUtils.cs"];
m9_1501 [label="BB_property7 = g", span="3486-3486", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="ReflectionUtils.cs"];
m9_1502 [label="BB_property8 = g", span="3487-3487", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="ReflectionUtils.cs"];
m9_1503 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", span="3475-3475", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="ReflectionUtils.cs"];
m9_105 [label="Assert.AreEqual(99, c.Field)", span="302-302", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="ReflectionUtils.cs"];
m9_526 [label="Exit lambda expression", span="1012-1012", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_529 [label="Exit lambda expression", span="1034-1035", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_531 [label="p.Name == subTypeProperty.Name\r\n                                                                       && p.IsVirtual()\r\n                                                                       && p.GetBaseDefinition() != null\r\n                                                                       && p.GetBaseDefinition().DeclaringType.IsAssignableFrom(subTypeProperty.GetBaseDefinition().DeclaringType)", span="1044-1047", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_528 [label="p.Name == subTypeProperty.Name\r\n                                                                       && p.DeclaringType == subTypeProperty.DeclaringType", span="1034-1035", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_530 [label="Entry lambda expression", span="1044-1047", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_527 [label="Entry lambda expression", span="1034-1035", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_532 [label="Exit lambda expression", span="1044-1047", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_848 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", span="1847-1847", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="ReflectionUtils.cs"];
m9_851 [label="Assert.AreEqual(@''{\r\n  ''''Children'''': [\r\n    {\r\n      ''''Children'''': null,\r\n      ''''Text'''': ''''First''''\r\n    },\r\n    {\r\n      ''''Children'''': null,\r\n      ''''Text'''': ''''Second''''\r\n    }\r\n  ],\r\n  ''''Text'''': ''''Blah, blah, blah''''\r\n}'', json)", span="1861-1873", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="ReflectionUtils.cs"];
m9_850 [label="string json = JsonConvert.SerializeObject(content, Formatting.Indented)", span="1859-1859", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="ReflectionUtils.cs"];
m9_849 [label="Content content = new Content\r\n        {\r\n          Text = ''Blah, blah, blah'',\r\n          Children = new List<Content>\r\n            {\r\n              new Content {Text = ''First''},\r\n              new Content {Text = ''Second''}\r\n            }\r\n        }", span="1849-1857", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="ReflectionUtils.cs"];
m9_852 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", span="1847-1847", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="ReflectionUtils.cs"];
m9_1850 [label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0", cluster="System.Collections.Generic.HashSet<T>.HashSet()", file="ReflectionUtils.cs"];
m9_1188 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ThisGenericTest()", span="2628-2628", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ThisGenericTest()", file="ReflectionUtils.cs"];
m9_1794 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", span="4109-4109", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="ReflectionUtils.cs"];
m9_1806 [label="FamilyDetails mike = JsonConvert.DeserializeObject<FamilyDetails>(mikeString)", span="4134-4134", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="ReflectionUtils.cs"];
m9_1809 [label="mike = JsonConvert.DeserializeObject<FamilyDetails>(mikeFullDisclosureString)", span="4139-4139", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="ReflectionUtils.cs"];
m9_1805 [label="string mikeString = ''{\''Name\'': \''Mike Person\''}''", span="4133-4133", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="ReflectionUtils.cs"];
m9_1807 [label="Console.WriteLine(''mikeString specifies number of children: {0}'', mike.NumberOfChildrenSpecified)", span="4136-4136", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="ReflectionUtils.cs"];
m9_1808 [label="string mikeFullDisclosureString = ''{\''Name\'': \''Mike Person\'', \''NumberOfChildren\'': \''0\''}''", span="4138-4138", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="ReflectionUtils.cs"];
m9_1810 [label="Console.WriteLine(''mikeString specifies number of children: {0}'', mike.NumberOfChildrenSpecified)", span="4141-4141", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="ReflectionUtils.cs"];
m9_1804 [label="Console.WriteLine(json)", span="4131-4131", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="ReflectionUtils.cs"];
m9_1803 [label="string json = JsonConvert.SerializeObject(new[] { joe, martha }, Formatting.Indented)", span="4121-4121", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="ReflectionUtils.cs"];
m9_1795 [label="FamilyDetails joe = new FamilyDetails()", span="4111-4111", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="ReflectionUtils.cs"];
m9_1799 [label="FamilyDetails martha = new FamilyDetails()", span="4116-4116", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="ReflectionUtils.cs"];
m9_1802 [label="martha.NumberOfChildrenSpecified = false", span="4119-4119", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="ReflectionUtils.cs"];
m9_1796 [label="joe.Name = ''Joe Family Details''", span="4112-4112", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="ReflectionUtils.cs"];
m9_1797 [label="joe.NumberOfChildren = 4", span="4113-4113", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="ReflectionUtils.cs"];
m9_1798 [label="joe.NumberOfChildrenSpecified = true", span="4114-4114", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="ReflectionUtils.cs"];
m9_1800 [label="martha.Name = ''Martha Family Details''", span="4117-4117", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="ReflectionUtils.cs"];
m9_1801 [label="martha.NumberOfChildren = 3", span="4118-4118", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="ReflectionUtils.cs"];
m9_1811 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", span="4109-4109", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="ReflectionUtils.cs"];
m9_533 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", span="1110-1110", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="ReflectionUtils.cs"];
m9_401 [label="ParameterInfo p = (ParameterInfo)provider", span="803-803", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="ReflectionUtils.cs"];
m9_409 [label="Entry System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type)", span="0-0", cluster="System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type)", file="ReflectionUtils.cs"];
m9_408 [label="Entry System.Reflection.MemberInfo.GetCustomAttributes(bool)", span="0-0", cluster="System.Reflection.MemberInfo.GetCustomAttributes(bool)", file="ReflectionUtils.cs"];
m9_410 [label="Entry System.Attribute.GetCustomAttributes(System.Reflection.Assembly)", span="0-0", cluster="System.Attribute.GetCustomAttributes(System.Reflection.Assembly)", file="ReflectionUtils.cs"];
m9_411 [label="Entry System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, bool)", span="0-0", cluster="System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, bool)", file="ReflectionUtils.cs"];
m9_412 [label="Entry System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, bool)", span="0-0", cluster="System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, bool)", file="ReflectionUtils.cs"];
m9_413 [label="Entry System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, bool)", span="0-0", cluster="System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, bool)", file="ReflectionUtils.cs"];
m9_402 [label="return (attributeType != null) ? Attribute.GetCustomAttributes(p, attributeType, inherit) : Attribute.GetCustomAttributes(p, inherit);", span="804-804", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="ReflectionUtils.cs"];
m9_406 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", span="755-755", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="ReflectionUtils.cs"];
m9_403 [label="ICustomAttributeProvider customAttributeProvider = (ICustomAttributeProvider)attributeProvider", span="808-808", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="ReflectionUtils.cs"];
m9_405 [label="return (Attribute[])result;", span="811-811", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="ReflectionUtils.cs"];
m9_404 [label="object[] result = (attributeType != null) ? customAttributeProvider.GetCustomAttributes(attributeType, inherit) : customAttributeProvider.GetCustomAttributes(inherit)", span="809-809", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="ReflectionUtils.cs"];
m9_414 [label="Entry System.Attribute.GetCustomAttributes(System.Reflection.Module, bool)", span="0-0", cluster="System.Attribute.GetCustomAttributes(System.Reflection.Module, bool)", file="ReflectionUtils.cs"];
m9_1344 [label="Entry System.Runtime.Serialization.SerializationInfo.GetInt16(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetInt16(string)", file="ReflectionUtils.cs"];
m9_1385 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", span="3169-3169", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="ReflectionUtils.cs"];
m9_1397 [label="ISerializableTestObject o2 = JsonConvert.DeserializeObject<ISerializableTestObject>(json)", span="3213-3213", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="ReflectionUtils.cs"];
m9_1400 [label="Assert.AreEqual(dateTimeOffset, o2._dateTimeOffsetValue)", span="3216-3216", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="ReflectionUtils.cs"];
m9_1396 [label="Assert.AreEqual(@''{\r\n  ''''stringValue'''': ''''String!'''',\r\n  ''''intValue'''': -2147483648,\r\n  ''''dateTimeOffsetValue'''': '''''' + dateTimeOffsetText + @'''''',\r\n  ''''personValue'''': {\r\n    ''''Name'''': ''''Name!'''',\r\n    ''''BirthDate'''': ''''2000-01-01T01:01:01Z'''',\r\n    ''''LastModified'''': ''''2000-01-01T01:01:01Z''''\r\n  },\r\n  ''''nullPersonValue'''': null,\r\n  ''''nullableInt'''': null,\r\n  ''''booleanValue'''': false,\r\n  ''''byteValue'''': 0,\r\n  ''''charValue'''': ''''\u0000'''',\r\n  ''''dateTimeValue'''': ''''0001-01-01T00:00:00Z'''',\r\n  ''''decimalValue'''': 0.0,\r\n  ''''shortValue'''': 0,\r\n  ''''longValue'''': 0,\r\n  ''''sbyteValue'''': 0,\r\n  ''''floatValue'''': 0.0,\r\n  ''''ushortValue'''': 0,\r\n  ''''uintValue'''': 0,\r\n  ''''ulongValue'''': 0\r\n}'', json)", span="3188-3211", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="ReflectionUtils.cs"];
m9_1398 [label="Assert.AreEqual(''String!'', o2._stringValue)", span="3214-3214", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="ReflectionUtils.cs"];
m9_1399 [label="Assert.AreEqual(int.MinValue, o2._intValue)", span="3215-3215", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="ReflectionUtils.cs"];
m9_1401 [label="Assert.AreEqual(''Name!'', o2._personValue.Name)", span="3217-3217", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="ReflectionUtils.cs"];
m9_1402 [label="Assert.AreEqual(null, o2._nullPersonValue)", span="3218-3218", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="ReflectionUtils.cs"];
m9_1403 [label="Assert.AreEqual(null, o2._nullableInt)", span="3219-3219", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="ReflectionUtils.cs"];
m9_1395 [label="string json = JsonConvert.SerializeObject(o, Formatting.Indented)", span="3187-3187", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="ReflectionUtils.cs"];
m9_1391 [label="DateTimeOffset dateTimeOffset = new DateTimeOffset(2000, 12, 20, 22, 59, 59, TimeSpan.FromHours(2))", span="3177-3177", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="ReflectionUtils.cs"];
m9_1393 [label="dateTimeOffsetText = @''2000-12-20T22:59:59+02:00''", span="3180-3180", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="ReflectionUtils.cs"];
m9_1394 [label="ISerializableTestObject o = new ISerializableTestObject(''String!'', int.MinValue, dateTimeOffset, person)", span="3185-3185", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="ReflectionUtils.cs"];
m9_1387 [label="person.BirthDate = new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc)", span="3172-3172", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="ReflectionUtils.cs"];
m9_1390 [label="person.Name = ''Name!''", span="3175-3175", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="ReflectionUtils.cs"];
m9_1392 [label="string dateTimeOffsetText", span="3178-3178", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="ReflectionUtils.cs"];
m9_1386 [label="Person person = new Person()", span="3171-3171", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="ReflectionUtils.cs"];
m9_1388 [label="person.LastModified = person.BirthDate", span="3173-3173", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="ReflectionUtils.cs"];
m9_1389 [label="person.Department = ''Department!''", span="3174-3174", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="ReflectionUtils.cs"];
m9_1404 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", span="3169-3169", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="ReflectionUtils.cs"];
m9_2500 [label="Entry Newtonsoft.Json.Tests.Serialization.WidgetId.WidgetId()", span="8311-8311", cluster="Newtonsoft.Json.Tests.Serialization.WidgetId.WidgetId()", file="ReflectionUtils.cs"];
m9_3424 [label="Entry Newtonsoft.Json.Tests.Serialization.SelectListItem.SelectListItem()", span="8122-8122", cluster="Newtonsoft.Json.Tests.Serialization.SelectListItem.SelectListItem()", file="ReflectionUtils.cs"];
m9_2462 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", span="5730-5730", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="ReflectionUtils.cs"];
m9_2469 [label="Bb b2 = JsonConvert.DeserializeObject<Bb>(json)", span="5741-5741", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="ReflectionUtils.cs"];
m9_2468 [label="Assert.AreEqual(@''{''''no'''':true}'', json)", span="5739-5739", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="ReflectionUtils.cs"];
m9_2470 [label="Assert.AreEqual(true, b2.no)", span="5743-5743", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="ReflectionUtils.cs"];
m9_2467 [label="string json = JsonConvert.SerializeObject(b)", span="5737-5737", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="ReflectionUtils.cs"];
m9_2463 [label="Bb b = new Bb()", span="5732-5732", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="ReflectionUtils.cs"];
m9_2466 [label="a.no = int.MaxValue", span="5735-5735", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="ReflectionUtils.cs"];
m9_2464 [label="b.no = true", span="5733-5733", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="ReflectionUtils.cs"];
m9_2465 [label="Aa a = b", span="5734-5734", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="ReflectionUtils.cs"];
m9_2471 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", span="5730-5730", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="ReflectionUtils.cs"];
m9_583 [label="Entry System.Activator.CreateInstance(System.Type)", span="0-0", cluster="System.Activator.CreateInstance(System.Type)", file="ReflectionUtils.cs"];
m9_587 [label="RequiredMembersClass c2 = JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="1218-1218", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="ReflectionUtils.cs"];
m9_586 [label=string, span="", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="ReflectionUtils.cs"];
m9_588 [label="Assert.AreEqual(''Bob'', c2.FirstName)", span="1220-1220", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="ReflectionUtils.cs"];
m9_589 [label="Assert.AreEqual(new DateTime(2000, 12, 20, 10, 55, 55, DateTimeKind.Utc), c2.BirthDate)", span="1221-1221", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="ReflectionUtils.cs"];
m9_585 [label="System.Type", span="", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="ReflectionUtils.cs"];
m9_584 [label=subTypeProperty, span="", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="ReflectionUtils.cs"];
m9_590 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", span="1199-1199", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="ReflectionUtils.cs"];
m9_2178 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", span="5122-5122", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", file="ReflectionUtils.cs"];
m9_2180 [label="Categories = new List<string>()", span="5125-5125", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", file="ReflectionUtils.cs"];
m9_2179 [label="Title = title", span="5124-5124", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", file="ReflectionUtils.cs"];
m9_2181 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", span="5122-5122", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", file="ReflectionUtils.cs"];
m9_241 [label="string json = JsonConvert.SerializeObject(anonymous)", span="608-608", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="ReflectionUtils.cs"];
m9_2566 [label="Entry Newtonsoft.Json.Tests.Serialization.Widget1.Widget1()", span="8244-8244", cluster="Newtonsoft.Json.Tests.Serialization.Widget1.Widget1()", file="ReflectionUtils.cs"];
m9_55 [label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", span="0-0", cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", file="ReflectionUtils.cs"];
m9_525 [label="p.Name == subTypeProperty.Name", span="1012-1012", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_2033 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DecimalTest.DecimalTest(decimal)", span="4672-4672", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DecimalTest.DecimalTest(decimal)", file="ReflectionUtils.cs"];
m9_2034 [label="Value = val", span="4674-4674", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DecimalTest.DecimalTest(decimal)", file="ReflectionUtils.cs"];
m9_2035 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DecimalTest.DecimalTest(decimal)", span="4672-4672", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DecimalTest.DecimalTest(decimal)", file="ReflectionUtils.cs"];
m9_2345 [label="Entry Newtonsoft.Json.JsonTextWriter.Flush()", span="132-132", cluster="Newtonsoft.Json.JsonTextWriter.Flush()", file="ReflectionUtils.cs"];
m9_2711 [label="Entry Newtonsoft.Json.Bson.BsonWriter.WriteStartArray()", span="143-143", cluster="Newtonsoft.Json.Bson.BsonWriter.WriteStartArray()", file="ReflectionUtils.cs"];
m9_1215 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", span="2790-2790", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="ReflectionUtils.cs"];
m9_1218 [label="Assert.AreEqual(@''{\r\n  ''''B2'''': null,\r\n  ''''A1'''': null,\r\n  ''''B3'''': null,\r\n  ''''A2'''': null\r\n}'', json)", span="2795-2800", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="ReflectionUtils.cs"];
m9_1217 [label="string json = JsonConvert.SerializeObject(value, Formatting.Indented)", span="2793-2793", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="ReflectionUtils.cs"];
m9_1216 [label="B value = new B()", span="2792-2792", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="ReflectionUtils.cs"];
m9_1219 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", span="2790-2790", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="ReflectionUtils.cs"];
m9_737 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", span="1566-1566", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="ReflectionUtils.cs"];
m9_739 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''Self referencing loop detected for property 'ReferenceLoopHandlingErrorProperty' with type ''' + classRef + '''. Path ''.'',\r\n        () =>\r\n        {\r\n          JsonPropertyWithHandlingValues o = new JsonPropertyWithHandlingValues();\r\n          o.ReferenceLoopHandlingErrorProperty = o;\r\n\r\n          JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings { ReferenceLoopHandling = ReferenceLoopHandling.Ignore });\r\n        })", span="1570-1578", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="ReflectionUtils.cs"];
m9_738 [label="string classRef = typeof(JsonPropertyWithHandlingValues).FullName", span="1568-1568", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="ReflectionUtils.cs"];
m9_740 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", span="1566-1566", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="ReflectionUtils.cs"];
m9_2095 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexItem.ComplexItem()", span="4809-4809", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexItem.ComplexItem()", file="ReflectionUtils.cs"];
m9_2288 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIDictionary()", span="5422-5422", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIDictionary()", file="ReflectionUtils.cs"];
m9_2289 [label="IDictionary dictionary = JsonConvert.DeserializeObject<IDictionary>(''{'name':'value!'}'')", span="5424-5424", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIDictionary()", file="ReflectionUtils.cs"];
m9_2290 [label="Assert.AreEqual(1, dictionary.Count)", span="5425-5425", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIDictionary()", file="ReflectionUtils.cs"];
m9_2291 [label="Assert.AreEqual(''value!'', dictionary[''name''])", span="5426-5426", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIDictionary()", file="ReflectionUtils.cs"];
m9_2292 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIDictionary()", span="5422-5422", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIDictionary()", file="ReflectionUtils.cs"];
m9_599 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", span="1242-1242", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="ReflectionUtils.cs"];
m9_600 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''Required property 'FirstName' expects a value but got null. Path '', line 6, position 2.'',\r\n        () =>\r\n        {\r\n          string json = @''{\r\n  ''''FirstName'''': null,\r\n  ''''MiddleName'''': null,\r\n  ''''LastName'''': null,\r\n  ''''BirthDate'''': ''''\/Date(977309755000)\/''''\r\n}'';\r\n\r\n          JsonConvert.DeserializeObject<RequiredMembersClass>(json);\r\n        })", span="1244-1256", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="ReflectionUtils.cs"];
m9_601 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", span="1242-1242", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="ReflectionUtils.cs"];
m9_1542 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.PosConverter()", span="3590-3590", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.PosConverter()", file="ReflectionUtils.cs"];
m9_3 [label="Store deserializedStore = (Store)JsonConvert.DeserializeObject(jsonText, typeof(Store))", span="133-133", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="ReflectionUtils.cs"];
m9_4 [label="Assert.AreEqual(store.Establised, deserializedStore.Establised)", span="135-135", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="ReflectionUtils.cs"];
m9_5 [label="Assert.AreEqual(store.product.Count, deserializedStore.product.Count)", span="136-136", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="ReflectionUtils.cs"];
m9_8 [label="Entry Newtonsoft.Json.Tests.TestObjects.Store.Store()", span="46-46", cluster="Newtonsoft.Json.Tests.TestObjects.Store.Store()", file="ReflectionUtils.cs"];
m9_6 [label="Console.WriteLine(jsonText)", span="138-138", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="ReflectionUtils.cs"];
m9_7 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", span="127-127", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="ReflectionUtils.cs"];
m9_9 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object)", span="824-824", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", file="ReflectionUtils.cs"];
m9_10 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type)", span="1003-1003", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type)", file="ReflectionUtils.cs"];
m9_11 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="ReflectionUtils.cs"];
m9_12 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="ReflectionUtils.cs"];
m9_3211 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", span="7585-7585", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="ReflectionUtils.cs"];
m9_3214 [label="Assert.AreEqual(@''[\r\n  ''''2000 p.m.'''',\r\n  ''''2000 p.m.''''\r\n]'', json)", span="7599-7602", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="ReflectionUtils.cs"];
m9_3213 [label="string json = JsonConvert.SerializeObject(dates, Formatting.Indented, new JsonSerializerSettings\r\n        {\r\n          DateFormatString = ''yyyy tt'',\r\n          Culture = new CultureInfo(''en-NZ'')\r\n        })", span="7593-7597", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="ReflectionUtils.cs"];
m9_3212 [label="IList<object> dates = new List<object>\r\n        {\r\n          new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc),\r\n          new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1))\r\n        }", span="7587-7591", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="ReflectionUtils.cs"];
m9_3215 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", span="7585-7585", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="ReflectionUtils.cs"];
m9_15 [label="product.Name = ''Apple''", span="146-146", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="ReflectionUtils.cs"];
m9_1255 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", span="2930-2930", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", file="ReflectionUtils.cs"];
m9_1256 [label="_innerDictionary.Add(key, value)", span="2932-2932", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", file="ReflectionUtils.cs"];
m9_1257 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", span="2930-2930", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", file="ReflectionUtils.cs"];
m9_2425 [label="Entry System.IO.StreamWriter.StreamWriter(System.IO.Stream)", span="0-0", cluster="System.IO.StreamWriter.StreamWriter(System.IO.Stream)", file="ReflectionUtils.cs"];
m9_169 [label="DataContractJsonSerializer s = new DataContractJsonSerializer(typeof(List<string>))", span="479-479", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="ReflectionUtils.cs"];
m9_1089 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", span="2402-2402", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="ReflectionUtils.cs"];
m9_1096 [label="Foo newFoo = JsonConvert.DeserializeObject<Foo>(json)", span="2418-2418", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="ReflectionUtils.cs"];
m9_1095 [label="Assert.AreEqual(@''{\r\n  ''''Bars'''': [\r\n    0,\r\n    1,\r\n    2\r\n  ]\r\n}'', json)", span="2410-2416", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="ReflectionUtils.cs"];
m9_1097 [label="Assert.AreEqual(3, newFoo.Bars.Count)", span="2419-2419", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="ReflectionUtils.cs"];
m9_1098 [label="Assert.AreEqual(0, newFoo.Bars[0].Id)", span="2420-2420", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="ReflectionUtils.cs"];
m9_1099 [label="Assert.AreEqual(1, newFoo.Bars[1].Id)", span="2421-2421", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="ReflectionUtils.cs"];
m9_1100 [label="Assert.AreEqual(2, newFoo.Bars[2].Id)", span="2422-2422", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="ReflectionUtils.cs"];
m9_1094 [label="string json = JsonConvert.SerializeObject(f, Formatting.Indented)", span="2409-2409", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="ReflectionUtils.cs"];
m9_1090 [label="Foo f = new Foo()", span="2404-2404", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="ReflectionUtils.cs"];
m9_1093 [label="f.Bars.Add(new Bar { Id = 2 })", span="2407-2407", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="ReflectionUtils.cs"];
m9_1091 [label="f.Bars.Add(new Bar { Id = 0 })", span="2405-2405", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="ReflectionUtils.cs"];
m9_1092 [label="f.Bars.Add(new Bar { Id = 1 })", span="2406-2406", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="ReflectionUtils.cs"];
m9_1101 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", span="2402-2402", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="ReflectionUtils.cs"];
m9_1351 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="3063-3063", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReflectionUtils.cs"];
m9_1352 [label="info.AddValue(''stringValue'', _stringValue)", span="3065-3065", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReflectionUtils.cs"];
m9_1353 [label="info.AddValue(''intValue'', _intValue)", span="3066-3066", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReflectionUtils.cs"];
m9_1354 [label="info.AddValue(''dateTimeOffsetValue'', _dateTimeOffsetValue)", span="3067-3067", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReflectionUtils.cs"];
m9_1355 [label="info.AddValue(''personValue'', _personValue)", span="3068-3068", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReflectionUtils.cs"];
m9_1356 [label="info.AddValue(''nullPersonValue'', _nullPersonValue)", span="3069-3069", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReflectionUtils.cs"];
m9_1358 [label="info.AddValue(''booleanValue'', _booleanValue)", span="3072-3072", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReflectionUtils.cs"];
m9_1359 [label="info.AddValue(''byteValue'', _byteValue)", span="3073-3073", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReflectionUtils.cs"];
m9_1360 [label="info.AddValue(''charValue'', _charValue)", span="3074-3074", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReflectionUtils.cs"];
m9_1361 [label="info.AddValue(''dateTimeValue'', _dateTimeValue)", span="3075-3075", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReflectionUtils.cs"];
m9_1362 [label="info.AddValue(''decimalValue'', _decimalValue)", span="3076-3076", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReflectionUtils.cs"];
m9_1363 [label="info.AddValue(''shortValue'', _shortValue)", span="3077-3077", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReflectionUtils.cs"];
m9_1364 [label="info.AddValue(''longValue'', _longValue)", span="3078-3078", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReflectionUtils.cs"];
m9_1365 [label="info.AddValue(''sbyteValue'', _sbyteValue)", span="3079-3079", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReflectionUtils.cs"];
m9_1366 [label="info.AddValue(''floatValue'', _floatValue)", span="3080-3080", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReflectionUtils.cs"];
m9_1367 [label="info.AddValue(''ushortValue'', _ushortValue)", span="3081-3081", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReflectionUtils.cs"];
m9_1368 [label="info.AddValue(''uintValue'', _uintValue)", span="3082-3082", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReflectionUtils.cs"];
m9_1369 [label="info.AddValue(''ulongValue'', _ulongValue)", span="3083-3083", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReflectionUtils.cs"];
m9_1357 [label="info.AddValue(''nullableInt'', null)", span="3070-3070", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReflectionUtils.cs"];
m9_1370 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="3063-3063", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReflectionUtils.cs"];
m9_1295 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="ReflectionUtils.cs"];
m9_145 [label="i.IsGenericType()", span="324-324", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs"];
m9_152 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", span="298-298", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs"];
m9_153 [label="Entry System.Type.IsInterface()", span="144-144", cluster="System.Type.IsInterface()", file="ReflectionUtils.cs"];
m9_154 [label="Entry System.Type.IsGenericTypeDefinition()", span="162-162", cluster="System.Type.IsGenericTypeDefinition()", file="ReflectionUtils.cs"];
m9_151 [label="return false;", span="337-337", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs"];
m9_148 [label="implementingType = i", span="330-330", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs"];
m9_150 [label="implementingType = null", span="336-336", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs"];
m9_147 [label="genericInterfaceDefinition == interfaceDefinition", span="328-328", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs"];
m9_149 [label="return true;", span="331-331", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs"];
m9_146 [label="Type interfaceDefinition = i.GetGenericTypeDefinition()", span="326-326", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs"];
m9_155 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="ReflectionUtils.cs"];
m9_2960 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClassFailure<T>.System.Collections.IEnumerable.GetEnumerator()", span="6826-6826", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClassFailure<T>.System.Collections.IEnumerable.GetEnumerator()", file="ReflectionUtils.cs"];
m9_2961 [label="return GetEnumerator();", span="6828-6828", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClassFailure<T>.System.Collections.IEnumerable.GetEnumerator()", file="ReflectionUtils.cs"];
m9_2962 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClassFailure<T>.System.Collections.IEnumerable.GetEnumerator()", span="6826-6826", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClassFailure<T>.System.Collections.IEnumerable.GetEnumerator()", file="ReflectionUtils.cs"];
m9_2272 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", span="5392-5392", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", file="ReflectionUtils.cs"];
m9_2273 [label="Exceptions = new List<Exception>()", span="5394-5394", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", file="ReflectionUtils.cs"];
m9_2274 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", span="5392-5392", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", file="ReflectionUtils.cs"];
m9_568 [label="PrimitiveTypeCode.BigInteger", span="1103-1103", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ReflectionUtils.cs"];
m9_573 [label="return new DateTimeOffset();", span="1110-1110", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ReflectionUtils.cs"];
m9_579 [label="Entry System.DateTime.DateTime()", span="0-0", cluster="System.DateTime.DateTime()", file="ReflectionUtils.cs"];
m9_572 [label="PrimitiveTypeCode.DateTimeOffset", span="1109-1109", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ReflectionUtils.cs"];
m9_574 [label="IsNullable(type)", span="1114-1114", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ReflectionUtils.cs"];
m9_578 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type)", span="185-185", cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type)", file="ReflectionUtils.cs"];
m9_580 [label="Entry BigInteger.cstr", span="", cluster="BigInteger.cstr", file="ReflectionUtils.cs"];
m9_571 [label="return new Guid();", span="1107-1107", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ReflectionUtils.cs"];
m9_577 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", span="1072-1072", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ReflectionUtils.cs"];
m9_569 [label="return new BigInteger();", span="1104-1104", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ReflectionUtils.cs"];
m9_575 [label="return null;", span="1116-1116", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ReflectionUtils.cs"];
m9_570 [label="PrimitiveTypeCode.Guid", span="1106-1106", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ReflectionUtils.cs"];
m9_576 [label="return Activator.CreateInstance(type);", span="1120-1120", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ReflectionUtils.cs"];
m9_581 [label="Entry System.Guid.Guid()", span="0-0", cluster="System.Guid.Guid()", file="ReflectionUtils.cs"];
m9_2714 [label="Entry Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream)", span="123-123", cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream)", file="ReflectionUtils.cs"];
m9_3064 [label="Entry System.Array.GetLength(int)", span="0-0", cluster="System.Array.GetLength(int)", file="ReflectionUtils.cs"];
m9_3387 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyCollection<T>.GetEnumerator()", span="8036-8036", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyCollection<T>.GetEnumerator()", file="ReflectionUtils.cs"];
m9_3388 [label="return _values.GetEnumerator();", span="8038-8038", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyCollection<T>.GetEnumerator()", file="ReflectionUtils.cs"];
m9_3389 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyCollection<T>.GetEnumerator()", span="8036-8036", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyCollection<T>.GetEnumerator()", file="ReflectionUtils.cs"];
m9_3222 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", span="7626-7626", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="ReflectionUtils.cs"];
m9_3229 [label="Assert.AreEqual(CultureInfo.InvariantCulture, jsonWriter.Culture)", span="7646-7646", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="ReflectionUtils.cs"];
m9_3230 [label="Assert.AreEqual(Formatting.None, jsonWriter.Formatting)", span="7647-7647", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="ReflectionUtils.cs"];
m9_3232 [label="Assert.AreEqual(@''[\r\n  ''''2000 p.m.'''',\r\n  ''''2000 p.m.''''\r\n]'', json)", span="7651-7654", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="ReflectionUtils.cs"];
m9_3225 [label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="7635-7635", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="ReflectionUtils.cs"];
m9_3228 [label="Assert.IsNull(jsonWriter.DateFormatString)", span="7645-7645", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="ReflectionUtils.cs"];
m9_3231 [label="string json = sw.ToString()", span="7649-7649", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="ReflectionUtils.cs"];
m9_3223 [label="IList<object> dates = new List<object>\r\n        {\r\n          new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc),\r\n          new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1))\r\n        }", span="7628-7632", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="ReflectionUtils.cs"];
m9_3224 [label="StringWriter sw = new StringWriter()", span="7634-7634", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="ReflectionUtils.cs"];
m9_3226 [label="JsonSerializer serializer = JsonSerializer.Create(new JsonSerializerSettings\r\n        {\r\n          DateFormatString = ''yyyy tt'',\r\n          Culture = new CultureInfo(''en-NZ''),\r\n          Formatting = Formatting.Indented\r\n        })", span="7637-7642", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="ReflectionUtils.cs"];
m9_3227 [label="serializer.Serialize(jsonWriter, dates)", span="7643-7643", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="ReflectionUtils.cs"];
m9_3233 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", span="7626-7626", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="ReflectionUtils.cs"];
m9_2472 [label="Entry Newtonsoft.Json.Tests.Serialization.Bb.Bb()", span="8353-8353", cluster="Newtonsoft.Json.Tests.Serialization.Bb.Bb()", file="ReflectionUtils.cs"];
m9_959 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", span="2118-2118", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", file="ReflectionUtils.cs"];
m9_960 [label="string json = @''[]''", span="2120-2120", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", file="ReflectionUtils.cs"];
m9_961 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'System.Collections.Generic.Dictionary`2[System.String,System.String]' because the type requires a JSON object (e.g. {''''name'''':''''value''''}) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON object (e.g. {''''name'''':''''value''''}) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<Dictionary<string, string>>(json);\r\n        })", span="2122-2129", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", file="ReflectionUtils.cs"];
m9_962 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", span="2118-2118", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", file="ReflectionUtils.cs"];
m9_331 [label="Assert.AreEqual(''hello'', wibbleOut.Foo)", span="738-738", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="ReflectionUtils.cs"];
m9_2198 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", span="5165-5165", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="ReflectionUtils.cs"];
m9_2204 [label="NonDefaultConstructorWithReadOnlyDictionaryProperty c2 = JsonConvert.DeserializeObject<NonDefaultConstructorWithReadOnlyDictionaryProperty>(json)", span="5180-5180", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="ReflectionUtils.cs"];
m9_2205 [label="Assert.AreEqual(c1.Title, c2.Title)", span="5181-5181", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="ReflectionUtils.cs"];
m9_2206 [label="Assert.AreEqual(c1.Categories.Count, c2.Categories.Count)", span="5182-5182", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="ReflectionUtils.cs"];
m9_2203 [label="Assert.AreEqual(@''{\r\n  ''''Title'''': ''''blah'''',\r\n  ''''Categories'''': {\r\n    ''''one'''': 1,\r\n    ''''two'''': 2\r\n  }\r\n}'', json)", span="5172-5178", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="ReflectionUtils.cs"];
m9_2207 [label="Assert.AreEqual(1, c2.Categories[''one''])", span="5183-5183", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="ReflectionUtils.cs"];
m9_2208 [label="Assert.AreEqual(2, c2.Categories[''two''])", span="5184-5184", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="ReflectionUtils.cs"];
m9_2202 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="5171-5171", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="ReflectionUtils.cs"];
m9_2199 [label="NonDefaultConstructorWithReadOnlyDictionaryProperty c1 = new NonDefaultConstructorWithReadOnlyDictionaryProperty(''blah'')", span="5167-5167", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="ReflectionUtils.cs"];
m9_2201 [label="c1.Categories.Add(''two'', 2)", span="5169-5169", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="ReflectionUtils.cs"];
m9_2200 [label="c1.Categories.Add(''one'', 1)", span="5168-5168", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="ReflectionUtils.cs"];
m9_2209 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", span="5165-5165", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="ReflectionUtils.cs"];
m9_1761 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Employee.Employee()", span="3964-3964", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Employee.Employee()", file="ReflectionUtils.cs"];
m9_1447 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", span="3340-3340", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="ReflectionUtils.cs"];
m9_1448 [label="AA myA = JsonConvert.DeserializeObject<AA>(\r\n        @''{\r\n  ''''AA_field1'''': 2,\r\n  ''''AA_field2'''': 2,\r\n  ''''AA_property1'''': 2,\r\n  ''''AA_property2'''': 2,\r\n  ''''AA_property3'''': 2,\r\n  ''''AA_property4'''': 2,\r\n  ''''AA_property5'''': 2,\r\n  ''''AA_property6'''': 2\r\n}'')", span="3342-3352", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="ReflectionUtils.cs"];
m9_1457 [label="BB myB = JsonConvert.DeserializeObject<BB>(\r\n        @''{\r\n  ''''BB_field1'''': 4,\r\n  ''''BB_field2'''': 4,\r\n  ''''AA_field1'''': 3,\r\n  ''''AA_field2'''': 3,\r\n  ''''AA_property1'''': 2,\r\n  ''''AA_property2'''': 2,\r\n  ''''AA_property3'''': 2,\r\n  ''''AA_property4'''': 2,\r\n  ''''AA_property5'''': 2,\r\n  ''''AA_property6'''': 2,\r\n  ''''BB_property1'''': 3,\r\n  ''''BB_property2'''': 3,\r\n  ''''BB_property3'''': 3,\r\n  ''''BB_property4'''': 3,\r\n  ''''BB_property5'''': 3,\r\n  ''''BB_property6'''': 3,\r\n  ''''BB_property7'''': 3,\r\n  ''''BB_property8'''': 3\r\n}'')", span="3363-3383", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="ReflectionUtils.cs"];
m9_1449 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetField(''AA_field1'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="3354-3354", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="ReflectionUtils.cs"];
m9_1450 [label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetField(''AA_field2'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="3355-3355", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="ReflectionUtils.cs"];
m9_1451 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property1'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="3356-3356", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="ReflectionUtils.cs"];
m9_1452 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property2'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="3357-3357", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="ReflectionUtils.cs"];
m9_1453 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property3'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="3358-3358", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="ReflectionUtils.cs"];
m9_1454 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property4'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="3359-3359", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="ReflectionUtils.cs"];
m9_1455 [label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property5'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="3360-3360", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="ReflectionUtils.cs"];
m9_1456 [label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property6'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="3361-3361", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="ReflectionUtils.cs"];
m9_1458 [label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(AA).GetField(''AA_field1'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="3385-3385", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="ReflectionUtils.cs"];
m9_1459 [label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetField(''AA_field2'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="3386-3386", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="ReflectionUtils.cs"];
m9_1460 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property1'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="3387-3387", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="ReflectionUtils.cs"];
m9_1461 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property2'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="3388-3388", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="ReflectionUtils.cs"];
m9_1462 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property3'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="3389-3389", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="ReflectionUtils.cs"];
m9_1463 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property4'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="3390-3390", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="ReflectionUtils.cs"];
m9_1464 [label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property5'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="3391-3391", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="ReflectionUtils.cs"];
m9_1465 [label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property6'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="3392-3392", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="ReflectionUtils.cs"];
m9_1466 [label="Assert.AreEqual(4, myB.BB_field1)", span="3394-3394", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="ReflectionUtils.cs"];
m9_1467 [label="Assert.AreEqual(4, myB.BB_field2)", span="3395-3395", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="ReflectionUtils.cs"];
m9_1468 [label="Assert.AreEqual(3, myB.BB_property1)", span="3396-3396", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="ReflectionUtils.cs"];
m9_1469 [label="Assert.AreEqual(3, myB.BB_property2)", span="3397-3397", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="ReflectionUtils.cs"];
m9_1470 [label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property3'', BindingFlags.Instance | BindingFlags.Public), myB))", span="3398-3398", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="ReflectionUtils.cs"];
m9_1471 [label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property4'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="3399-3399", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="ReflectionUtils.cs"];
m9_1472 [label="Assert.AreEqual(0, myB.BB_property5)", span="3400-3400", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="ReflectionUtils.cs"];
m9_1473 [label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property6'', BindingFlags.Instance | BindingFlags.Public), myB))", span="3401-3401", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="ReflectionUtils.cs"];
m9_1474 [label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property7'', BindingFlags.Instance | BindingFlags.Public), myB))", span="3402-3402", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="ReflectionUtils.cs"];
m9_1475 [label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property8'', BindingFlags.Instance | BindingFlags.Public), myB))", span="3403-3403", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="ReflectionUtils.cs"];
m9_1476 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", span="3340-3340", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="ReflectionUtils.cs"];
m9_3444 [label="Entry int.Parse(string)", span="0-0", cluster="int.Parse(string)", file="ReflectionUtils.cs"];
m9_351 [label="Type declaringType = propertyInfo.DeclaringType", span="705-705", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m9_3378 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReadOnlyDictionary()", span="8005-8005", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReadOnlyDictionary()", file="ReflectionUtils.cs"];
m9_3382 [label="Assert.AreEqual(@''{\r\n  ''''one'''': 1,\r\n  ''''two'''': 2\r\n}'', json)", span="8016-8019", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReadOnlyDictionary()", file="ReflectionUtils.cs"];
m9_3381 [label="string json = JsonConvert.SerializeObject(dic, Formatting.Indented)", span="8015-8015", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReadOnlyDictionary()", file="ReflectionUtils.cs"];
m9_3380 [label="CustomReadOnlyDictionary<string, int> dic = new CustomReadOnlyDictionary<string, int>(d)", span="8013-8013", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReadOnlyDictionary()", file="ReflectionUtils.cs"];
m9_3379 [label="IDictionary<string, int> d = new Dictionary<string, int>\r\n                                     {\r\n                                       {''one'', 1},\r\n                                       {''two'', 2}\r\n                                     }", span="8007-8011", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReadOnlyDictionary()", file="ReflectionUtils.cs"];
m9_3383 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReadOnlyDictionary()", span="8005-8005", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReadOnlyDictionary()", file="ReflectionUtils.cs"];
m9_688 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", span="1466-1466", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="ReflectionUtils.cs"];
m9_690 [label="PropertyCase o = JsonConvert.DeserializeObject<PropertyCase>(json)", span="1475-1475", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="ReflectionUtils.cs"];
m9_692 [label="Assert.AreEqual(''firstName'', o.firstName)", span="1478-1478", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="ReflectionUtils.cs"];
m9_693 [label="Assert.AreEqual(''FirstName'', o.FirstName)", span="1479-1479", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="ReflectionUtils.cs"];
m9_694 [label="Assert.AreEqual(''LastName'', o.LastName)", span="1480-1480", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="ReflectionUtils.cs"];
m9_695 [label="Assert.AreEqual(''lastName'', o.lastName)", span="1481-1481", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="ReflectionUtils.cs"];
m9_689 [label="string json = @''{\r\n  ''''firstName'''': ''''firstName'''',\r\n  ''''FirstName'''': ''''FirstName'''',\r\n  ''''LastName'''': ''''LastName'''',\r\n  ''''lastName'''': ''''lastName'''',\r\n}''", span="1468-1473", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="ReflectionUtils.cs"];
m9_691 [label="Assert.IsNotNull(o)", span="1476-1476", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="ReflectionUtils.cs"];
m9_696 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", span="1466-1466", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="ReflectionUtils.cs"];
m9_493 [label="member.DeclaringType != targetType", span="978-978", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m9_314 [label="targetMembers.AddRange(GetFields(type, bindingAttr))", span="649-649", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m9_319 [label="IList<MemberInfo> members = groupedMember.ToList()", span="661-661", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m9_320 [label="count == 1", span="663-663", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m9_318 [label="int count = groupedMember.Count()", span="660-660", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m9_315 [label="targetMembers.AddRange(GetProperties(type, bindingAttr))", span="650-650", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m9_316 [label="List<MemberInfo> distinctMembers = new List<MemberInfo>(targetMembers.Count)", span="656-656", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m9_317 [label="targetMembers.GroupBy(m => m.Name)", span="658-658", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m9_321 [label="distinctMembers.Add(members.First())", span="665-665", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m9_716 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", span="1525-1525", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="ReflectionUtils.cs"];
m9_723 [label="Assert.AreEqual(@''{\r\n  ''''DefaultValueHandlingIncludeProperty'''': ''''Default!'''',\r\n  ''''DefaultValueHandlingPopulateProperty'''': ''''Default!'''',\r\n  ''''NullValueHandlingIncludeProperty'''': null,\r\n  ''''ReferenceLoopHandlingErrorProperty'''': null,\r\n  ''''ReferenceLoopHandlingIgnoreProperty'''': null,\r\n  ''''ReferenceLoopHandlingSerializeProperty'''': null\r\n}'', json)", span="1535-1542", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="ReflectionUtils.cs"];
m9_725 [label="Assert.AreEqual(@''{\r\n  ''''DefaultValueHandlingIncludeProperty'''': ''''Default!'''',\r\n  ''''DefaultValueHandlingPopulateProperty'''': ''''Default!'''',\r\n  ''''NullValueHandlingIncludeProperty'''': null\r\n}'', json)", span="1546-1550", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="ReflectionUtils.cs"];
m9_722 [label="string json = JsonConvert.SerializeObject(o, Formatting.Indented)", span="1533-1533", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="ReflectionUtils.cs"];
m9_724 [label="json = JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings { NullValueHandling = NullValueHandling.Ignore })", span="1544-1544", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="ReflectionUtils.cs"];
m9_717 [label="JsonPropertyWithHandlingValues o = new JsonPropertyWithHandlingValues()", span="1527-1527", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="ReflectionUtils.cs"];
m9_721 [label="o.DefaultValueHandlingIgnoreAndPopulateProperty = ''Default!''", span="1531-1531", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="ReflectionUtils.cs"];
m9_718 [label="o.DefaultValueHandlingIgnoreProperty = ''Default!''", span="1528-1528", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="ReflectionUtils.cs"];
m9_719 [label="o.DefaultValueHandlingIncludeProperty = ''Default!''", span="1529-1529", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="ReflectionUtils.cs"];
m9_720 [label="o.DefaultValueHandlingPopulateProperty = ''Default!''", span="1530-1530", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="ReflectionUtils.cs"];
m9_726 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", span="1525-1525", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="ReflectionUtils.cs"];
m9_1379 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, long)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, long)", file="ReflectionUtils.cs"];
m9_2898 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", span="6699-6699", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="ReflectionUtils.cs"];
m9_2899 [label="IList<Uri> uris = JsonConvert.DeserializeObject<IList<Uri>>(@''[''''http://localhost/path?query#hash'''']'')", span="6701-6701", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="ReflectionUtils.cs"];
m9_2902 [label="Uri uri = JsonConvert.DeserializeObject<Uri>(@''''''http://localhost/path?query#hash'''''')", span="6705-6705", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="ReflectionUtils.cs"];
m9_2907 [label="uri = JsonConvert.DeserializeObject<Uri>(@''''''/path?query#hash'''''')", span="6712-6712", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="ReflectionUtils.cs"];
m9_2900 [label="Assert.AreEqual(1, uris.Count)", span="6702-6702", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="ReflectionUtils.cs"];
m9_2901 [label="Assert.AreEqual(new Uri(''http://localhost/path?query#hash''), uris[0])", span="6703-6703", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="ReflectionUtils.cs"];
m9_2906 [label="Assert.AreEqual(i1, i2)", span="6710-6710", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="ReflectionUtils.cs"];
m9_2909 [label="Assert.AreEqual(new Uri(''/path?query#hash'', UriKind.RelativeOrAbsolute), uri)", span="6714-6714", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="ReflectionUtils.cs"];
m9_2903 [label="Assert.IsNotNull(uri)", span="6706-6706", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="ReflectionUtils.cs"];
m9_2908 [label="Assert.IsNotNull(uri)", span="6713-6713", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="ReflectionUtils.cs"];
m9_2904 [label="Uri i1 = new Uri(''http://localhost/path?query#hash'', UriKind.RelativeOrAbsolute)", span="6708-6708", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="ReflectionUtils.cs"];
m9_2905 [label="Uri i2 = new Uri(''http://localhost/path?query#hash'')", span="6709-6709", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="ReflectionUtils.cs"];
m9_2910 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", span="6699-6699", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="ReflectionUtils.cs"];
m9_239 [label="return (property.GetIndexParameters().Length > 0);", span="498-498", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.PropertyInfo)", file="ReflectionUtils.cs"];
m9_242 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", span="507-507", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="ReflectionUtils.cs"];
m9_244 [label="ValidationUtils.ArgumentNotNull(target, nameof(target))", span="510-510", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="ReflectionUtils.cs"];
m9_245 [label="member.MemberType()", span="512-512", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="ReflectionUtils.cs"];
m9_246 [label="MemberTypes.Field", span="514-514", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="ReflectionUtils.cs"];
m9_247 [label="return ((FieldInfo)member).GetValue(target);", span="515-515", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="ReflectionUtils.cs"];
m9_248 [label="MemberTypes.Property", span="516-516", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="ReflectionUtils.cs"];
m9_249 [label="return ((PropertyInfo)member).GetValue(target, null);", span="519-519", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="ReflectionUtils.cs"];
m9_250 [label=TargetParameterCountException, span="521-521", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="ReflectionUtils.cs"];
m9_243 [label="ValidationUtils.ArgumentNotNull(member, nameof(member))", span="509-509", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="ReflectionUtils.cs"];
m9_240 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.PropertyInfo)", span="494-494", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.PropertyInfo)", file="ReflectionUtils.cs"];
m9_251 [label="throw new ArgumentException(''MemberInfo '{0}' has index parameters''.FormatWith(CultureInfo.InvariantCulture, member.Name), e);", span="523-523", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="ReflectionUtils.cs"];
m9_29 [label="Entry System.DateTime.DateTime(int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int)", file="ReflectionUtils.cs"];
m9_31 [label="string value = @''{''''Name'''':''''Orange'''', ''''Price'''':3.99, ''''ExpiryDate'''':''''01/24/2010 12:00:00''''}''", span="194-194", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="ReflectionUtils.cs"];
m9_30 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", span="192-192", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="ReflectionUtils.cs"];
m9_32 [label="Product p = JsonConvert.DeserializeObject(value, typeof(Product)) as Product", span="196-196", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="ReflectionUtils.cs"];
m9_33 [label="Assert.AreEqual(''Orange'', p.Name)", span="198-198", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="ReflectionUtils.cs"];
m9_34 [label="Assert.AreEqual(new DateTime(2010, 1, 24, 12, 0, 0), p.ExpiryDate)", span="199-199", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="ReflectionUtils.cs"];
m9_1721 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", span="3913-3913", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="ReflectionUtils.cs"];
m9_1723 [label="ConstructorCompexIgnoredProperty cc = JsonConvert.DeserializeObject<ConstructorCompexIgnoredProperty>(json)", span="3917-3917", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="ReflectionUtils.cs"];
m9_1724 [label="Assert.AreEqual(''First'', cc.First)", span="3918-3918", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="ReflectionUtils.cs"];
m9_1725 [label="Assert.AreEqual(2, cc.Second)", span="3919-3919", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="ReflectionUtils.cs"];
m9_1726 [label="Assert.AreEqual(null, cc.Ignored)", span="3920-3920", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="ReflectionUtils.cs"];
m9_1722 [label="string json = @''{''''First'''':''''First'''',''''Second'''':2,''''Ignored'''':{''''Name'''':''''James''''},''''AdditionalContent'''':{''''LOL'''':true}}''", span="3915-3915", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="ReflectionUtils.cs"];
m9_1727 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", span="3913-3913", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="ReflectionUtils.cs"];
m9_2275 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", span="5400-5400", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="ReflectionUtils.cs"];
m9_2281 [label="ClassWithException dex = JsonConvert.DeserializeObject<ClassWithException>(sex)", span="5412-5412", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="ReflectionUtils.cs"];
m9_2284 [label="dex = JsonConvert.DeserializeObject<ClassWithException>(sex)", span="5417-5417", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="ReflectionUtils.cs"];
m9_2282 [label="Assert.AreEqual(dex.Exceptions[0].ToString(), dex.Exceptions[0].ToString())", span="5413-5413", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="ReflectionUtils.cs"];
m9_2285 [label="Assert.AreEqual(dex.Exceptions[0].ToString(), dex.Exceptions[0].ToString())", span="5418-5418", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="ReflectionUtils.cs"];
m9_2280 [label="string sex = JsonConvert.SerializeObject(classWithException)", span="5411-5411", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="ReflectionUtils.cs"];
m9_2283 [label="sex = JsonConvert.SerializeObject(classWithException, Formatting.Indented)", span="5415-5415", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="ReflectionUtils.cs"];
m9_2276 [label="ClassWithException classWithException = new ClassWithException()", span="5402-5402", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="ReflectionUtils.cs"];
m9_2277 [label="throw new Exception(''Test Exception'');", span="5405-5405", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="ReflectionUtils.cs"];
m9_2279 [label="classWithException.Exceptions.Add(ex)", span="5409-5409", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="ReflectionUtils.cs"];
m9_2278 [label=Exception, span="5407-5407", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="ReflectionUtils.cs"];
m9_2286 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", span="5400-5400", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="ReflectionUtils.cs"];
m9_2266 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", span="5370-5370", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="ReflectionUtils.cs"];
m9_2269 [label="Assert.AreEqual(@''{\r\n  ''''dinosaur'''': null,\r\n  ''''dog'''': null,\r\n  ''''cat'''': null,\r\n  ''''zebra'''': null,\r\n  ''''bird'''': null,\r\n  ''''parrot'''': null,\r\n  ''''albatross'''': null,\r\n  ''''antelope'''': null\r\n}'', json)", span="5375-5384", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="ReflectionUtils.cs"];
m9_2268 [label="string json = JsonConvert.SerializeObject(d, Formatting.Indented)", span="5373-5373", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="ReflectionUtils.cs"];
m9_2267 [label="DerivedType d = new DerivedType()", span="5372-5372", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="ReflectionUtils.cs"];
m9_2270 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", span="5370-5370", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="ReflectionUtils.cs"];
m9_415 [label="Entry System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, bool)", span="0-0", cluster="System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, bool)", file="ReflectionUtils.cs"];
m9_1543 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.PosDoubleConverter()", span="3613-3613", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.PosDoubleConverter()", file="ReflectionUtils.cs"];
m9_1873 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTestClass.StringDictionaryTestClass()", span="4261-4261", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTestClass.StringDictionaryTestClass()", file="ReflectionUtils.cs"];
m9_582 [label="Entry Newtonsoft.Json.Tests.TestObjects.TypeClass.TypeClass()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.TypeClass.TypeClass()", file="ReflectionUtils.cs"];
m9_1520 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", span="3539-3539", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="ReflectionUtils.cs"];
m9_1528 [label="XmlNodeTestObject newTestObject = JsonConvert.DeserializeObject<XmlNodeTestObject>(json)", span="3554-3554", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="ReflectionUtils.cs"];
m9_1529 [label="Assert.AreEqual(testObject.Document.InnerXml, newTestObject.Document.InnerXml)", span="3555-3555", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="ReflectionUtils.cs"];
m9_1527 [label="Assert.AreEqual(expected, json)", span="3552-3552", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="ReflectionUtils.cs"];
m9_1525 [label="string json = JsonConvert.SerializeObject(testObject, Formatting.Indented)", span="3546-3546", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="ReflectionUtils.cs"];
m9_1521 [label="XmlNodeTestObject testObject = new XmlNodeTestObject()", span="3541-3541", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="ReflectionUtils.cs"];
m9_1526 [label="string expected = @''{\r\n  ''''Document'''': {\r\n    ''''root'''': ''''hehe, root''''\r\n  }\r\n}''", span="3547-3551", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="ReflectionUtils.cs"];
m9_1524 [label="testObject.Document = document", span="3544-3544", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="ReflectionUtils.cs"];
m9_1522 [label="XmlDocument document = new XmlDocument()", span="3542-3542", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="ReflectionUtils.cs"];
m9_1523 [label="document.LoadXml(''<root>hehe, root</root>'')", span="3543-3543", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="ReflectionUtils.cs"];
m9_1530 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", span="3539-3539", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="ReflectionUtils.cs"];
m9_1274 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", span="2955-2955", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", file="ReflectionUtils.cs"];
m9_1275 [label="return _innerDictionary.GetEnumerator();", span="2957-2957", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", file="ReflectionUtils.cs"];
m9_1276 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", span="2955-2955", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", file="ReflectionUtils.cs"];
m9_2824 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", span="6485-6485", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", file="ReflectionUtils.cs"];
m9_2825 [label="var json = Serialize(obj)", span="6488-6488", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", file="ReflectionUtils.cs"];
m9_2826 [label="return Deserialize<T>(json);", span="6489-6489", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", file="ReflectionUtils.cs"];
m9_2827 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", span="6485-6485", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", file="ReflectionUtils.cs"];
m9_1965 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", span="4489-4489", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="ReflectionUtils.cs"];
m9_1969 [label="obj = JsonConvert.DeserializeObject<VectorParent>(str)", span="4496-4496", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="ReflectionUtils.cs"];
m9_1970 [label="Assert.AreEqual(1, obj.Position.X)", span="4498-4498", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="ReflectionUtils.cs"];
m9_1971 [label="Assert.AreEqual(2, obj.Position.Y)", span="4499-4499", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="ReflectionUtils.cs"];
m9_1972 [label="Assert.AreEqual(3, obj.Position.Z)", span="4500-4500", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="ReflectionUtils.cs"];
m9_1968 [label="string str = JsonConvert.SerializeObject(obj)", span="4494-4494", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="ReflectionUtils.cs"];
m9_1966 [label="VectorParent obj = new VectorParent()", span="4491-4491", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="ReflectionUtils.cs"];
m9_1967 [label="obj.Position = new Vector { X = 1, Y = 2, Z = 3 }", span="4492-4492", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="ReflectionUtils.cs"];
m9_1973 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", span="4489-4489", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="ReflectionUtils.cs"];
m9_781 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", span="1698-1698", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="ReflectionUtils.cs"];
m9_786 [label="DataContractPrivateMembers cc = JsonConvert.DeserializeObject<DataContractPrivateMembers>(json)", span="1711-1711", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="ReflectionUtils.cs"];
m9_785 [label="Assert.AreEqual(@''{\r\n  ''''_name'''': ''''Jeff'''',\r\n  ''''_age'''': 26,\r\n  ''''Rank'''': 10,\r\n  ''''JsonTitle'''': ''''Dr''''\r\n}'', json)", span="1704-1709", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="ReflectionUtils.cs"];
m9_787 [label="Assert.AreEqual(''_name: Jeff, _age: 26, Rank: 10, JsonTitle: Dr'', cc.ToString())", span="1712-1712", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="ReflectionUtils.cs"];
m9_784 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="1702-1702", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="ReflectionUtils.cs"];
m9_782 [label="DataContractPrivateMembers c = new DataContractPrivateMembers(''Jeff'', 26, 10, ''Dr'')", span="1700-1700", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="ReflectionUtils.cs"];
m9_783 [label="c.NotIncluded = ''Hi''", span="1701-1701", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="ReflectionUtils.cs"];
m9_788 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", span="1698-1698", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="ReflectionUtils.cs"];
m9_2591 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", span="5998-5998", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", file="ReflectionUtils.cs"];
m9_2592 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''No JSON content found and type 'System.Double' is not nullable. Path '', line 0, position 0.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<double>('''');\r\n        })", span="6000-6005", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", file="ReflectionUtils.cs"];
m9_2593 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", span="5998-5998", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", file="ReflectionUtils.cs"];
m9_369 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(object, bool)", span="734-734", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(object, bool)", file="ReflectionUtils.cs"];
m9_2643 [label="Entry System.DateTime.ToLocalTime()", span="0-0", cluster="System.DateTime.ToLocalTime()", file="ReflectionUtils.cs"];
m9_2240 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", span="5282-5282", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="ReflectionUtils.cs"];
m9_2241 [label="_privateString = privateString", span="5284-5284", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="ReflectionUtils.cs"];
m9_2242 [label="_readonlyString = readonlyString", span="5285-5285", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="ReflectionUtils.cs"];
m9_2243 [label="_internalString = internalString", span="5286-5286", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="ReflectionUtils.cs"];
m9_2244 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", span="5282-5282", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="ReflectionUtils.cs"];
m9_2149 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContract.ChildDataContract()", span="4990-4990", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContract.ChildDataContract()", file="ReflectionUtils.cs"];
m9_3196 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", span="7533-7533", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="ReflectionUtils.cs"];
m9_3201 [label="Assert.AreEqual(TimeSpan.FromHours(9.5), dateTimeOffset.Offset)", span="7543-7543", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="ReflectionUtils.cs"];
m9_3202 [label="Assert.AreEqual(''07/19/2012 14:30:00 +09:30'', dateTimeOffset.ToString(CultureInfo.InvariantCulture))", span="7544-7544", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="ReflectionUtils.cs"];
m9_3200 [label="var dateTimeOffset = (DateTimeOffset)((JValue) obj[''startDateTime'']).Value", span="7541-7541", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="ReflectionUtils.cs"];
m9_3199 [label="var obj = (JObject)JsonConvert.DeserializeObject(content, jsonSerializerSettings)", span="7539-7539", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="ReflectionUtils.cs"];
m9_3198 [label="var jsonSerializerSettings = new JsonSerializerSettings() {DateFormatHandling = DateFormatHandling.IsoDateFormat, DateParseHandling = DateParseHandling.DateTimeOffset, DateTimeZoneHandling = DateTimeZoneHandling.RoundtripKind}", span="7537-7537", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="ReflectionUtils.cs"];
m9_3197 [label="var content = @''{''''startDateTime'''':''''2012-07-19T14:30:00+09:30''''}''", span="7535-7535", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="ReflectionUtils.cs"];
m9_3203 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", span="7533-7533", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="ReflectionUtils.cs"];
m9_197 [label="Exit lambda expression", span="517-520", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_361 [label="!memberUnderlyingType.IsGenericParameter", span="721-721", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m9_2089 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass.EnumerableClass()", span="4772-4772", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass.EnumerableClass()", file="ReflectionUtils.cs"];
m9_426 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string, out string, out string)", span="860-860", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string, out string, out string)", file="ReflectionUtils.cs"];
m9_430 [label="Entry string.Trim()", span="0-0", cluster="string.Trim()", file="ReflectionUtils.cs"];
m9_428 [label="Entry System.Nullable<T>.GetValueOrDefault()", span="0-0", cluster="System.Nullable<T>.GetValueOrDefault()", file="ReflectionUtils.cs"];
m9_2644 [label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, int, System.TimeSpan)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, int, System.TimeSpan)", file="ReflectionUtils.cs"];
m9_729 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", span="1554-1554", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="ReflectionUtils.cs"];
m9_731 [label="JsonPropertyWithHandlingValues o = JsonConvert.DeserializeObject<JsonPropertyWithHandlingValues>(json)", span="1558-1558", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="ReflectionUtils.cs"];
m9_732 [label="Assert.AreEqual(''Default!'', o.DefaultValueHandlingIgnoreAndPopulateProperty)", span="1559-1559", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="ReflectionUtils.cs"];
m9_733 [label="Assert.AreEqual(''Default!'', o.DefaultValueHandlingPopulateProperty)", span="1560-1560", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="ReflectionUtils.cs"];
m9_734 [label="Assert.AreEqual(null, o.DefaultValueHandlingIgnoreProperty)", span="1561-1561", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="ReflectionUtils.cs"];
m9_735 [label="Assert.AreEqual(null, o.DefaultValueHandlingIncludeProperty)", span="1562-1562", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="ReflectionUtils.cs"];
m9_730 [label="string json = ''{}''", span="1556-1556", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="ReflectionUtils.cs"];
m9_736 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", span="1554-1554", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="ReflectionUtils.cs"];
m9_1793 [label="Entry Unk.IsTrue", span="", cluster="Unk.IsTrue", file="ReflectionUtils.cs"];
m9_2828 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", span="6492-6492", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="ReflectionUtils.cs"];
m9_2833 [label="serializer.Serialize(stringWriter, obj)", span="6501-6501", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="ReflectionUtils.cs"];
m9_2830 [label="var stringWriter = new StringWriter()", span="6495-6495", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="ReflectionUtils.cs"];
m9_2834 [label="return stringWriter.ToString();", span="6503-6503", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="ReflectionUtils.cs"];
m9_2831 [label="var serializer = new Newtonsoft.Json.JsonSerializer()", span="6496-6496", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="ReflectionUtils.cs"];
m9_2832 [label="serializer.ContractResolver = new DefaultContractResolver(false)\r\n        {\r\n          IgnoreSerializableAttribute = false\r\n        }", span="6497-6500", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="ReflectionUtils.cs"];
m9_2835 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", span="6492-6492", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="ReflectionUtils.cs"];
m9_2028 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Response.Response()", span="4637-4637", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Response.Response()", file="ReflectionUtils.cs"];
m9_2530 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", span="5871-5871", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="ReflectionUtils.cs"];
m9_2534 [label="Item actual = JsonConvert.DeserializeObject<Item>(jsonString)", span="5897-5897", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="ReflectionUtils.cs"];
m9_2533 [label="Assert.AreEqual(@''{\r\n  ''''SourceTypeID'''': ''''d8220a4b-75b1-4b7a-8112-b7bdae956a45'''',\r\n  ''''BrokerID'''': ''''951663c4-924e-4c86-a57a-7ed737501dbd'''',\r\n  ''''Latitude'''': 33.657145,\r\n  ''''Longitude'''': -117.766684,\r\n  ''''TimeStamp'''': ''''2000-03-01T23:59:59Z'''',\r\n  ''''Payload'''': {\r\n    ''''$type'''': ''''System.Byte[], mscorlib'''',\r\n    ''''$value'''': ''''AAECAwQFBgcICQ==''''\r\n  }\r\n}'', jsonString)", span="5885-5895", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="ReflectionUtils.cs"];
m9_2535 [label="Assert.AreEqual(new Guid(''d8220a4b-75b1-4b7a-8112-b7bdae956a45''), actual.SourceTypeID)", span="5899-5899", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="ReflectionUtils.cs"];
m9_2536 [label="Assert.AreEqual(new Guid(''951663c4-924e-4c86-a57a-7ed737501dbd''), actual.BrokerID)", span="5900-5900", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="ReflectionUtils.cs"];
m9_2531 [label="Item expected = new Item()\r\n        {\r\n          SourceTypeID = new Guid(''d8220a4b-75b1-4b7a-8112-b7bdae956a45''),\r\n          BrokerID = new Guid(''951663c4-924e-4c86-a57a-7ed737501dbd''),\r\n          Latitude = 33.657145,\r\n          Longitude = -117.766684,\r\n          TimeStamp = new DateTime(2000, 3, 1, 23, 59, 59, DateTimeKind.Utc),\r\n          Payload = new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }\r\n        }", span="5873-5881", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="ReflectionUtils.cs"];
m9_2532 [label="string jsonString = JsonConvert.SerializeObject(expected, Formatting.Indented)", span="5883-5883", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="ReflectionUtils.cs"];
m9_2537 [label="byte[] bytes = (byte[])actual.Payload", span="5901-5901", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="ReflectionUtils.cs"];
m9_2538 [label="CollectionAssert.AreEquivalent((new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }).ToList(), bytes.ToList())", span="5902-5902", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="ReflectionUtils.cs"];
m9_2539 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", span="5871-5871", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="ReflectionUtils.cs"];
m9_3327 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListInterface()", span="7896-7896", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListInterface()", file="ReflectionUtils.cs"];
m9_3328 [label="IReadOnlyList<int> list = JsonConvert.DeserializeObject<IReadOnlyList<int>>(''[1,2,3]'')", span="7898-7898", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListInterface()", file="ReflectionUtils.cs"];
m9_3329 [label="Assert.AreEqual(3, list.Count)", span="7900-7900", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListInterface()", file="ReflectionUtils.cs"];
m9_3330 [label="Assert.AreEqual(1, list[0])", span="7901-7901", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListInterface()", file="ReflectionUtils.cs"];
m9_3331 [label="Assert.AreEqual(2, list[1])", span="7902-7902", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListInterface()", file="ReflectionUtils.cs"];
m9_3332 [label="Assert.AreEqual(3, list[2])", span="7903-7903", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListInterface()", file="ReflectionUtils.cs"];
m9_3333 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListInterface()", span="7896-7896", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListInterface()", file="ReflectionUtils.cs"];
m9_1437 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", span="3307-3307", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="ReflectionUtils.cs"];
m9_1440 [label="Assert.AreEqual(@''{\r\n  ''''AA_field1'''': 2,\r\n  ''''AA_property1'''': 2,\r\n  ''''AA_property2'''': 2,\r\n  ''''AA_property3'''': 2,\r\n  ''''AA_property4'''': 2\r\n}'', json)", span="3311-3317", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="ReflectionUtils.cs"];
m9_1443 [label="Assert.AreEqual(@''{\r\n  ''''BB_field1'''': 4,\r\n  ''''BB_field2'''': 4,\r\n  ''''AA_field1'''': 3,\r\n  ''''BB_property1'''': 4,\r\n  ''''BB_property2'''': 4,\r\n  ''''BB_property3'''': 4,\r\n  ''''BB_property4'''': 4,\r\n  ''''BB_property5'''': 4,\r\n  ''''BB_property7'''': 4,\r\n  ''''AA_property1'''': 3,\r\n  ''''AA_property2'''': 3,\r\n  ''''AA_property3'''': 3,\r\n  ''''AA_property4'''': 3\r\n}'', json)", span="3321-3335", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="ReflectionUtils.cs"];
m9_1439 [label="string json = JsonConvert.SerializeObject(myA, Formatting.Indented)", span="3310-3310", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="ReflectionUtils.cs"];
m9_1441 [label="BB myB = new BB(3, 4)", span="3319-3319", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="ReflectionUtils.cs"];
m9_1442 [label="json = JsonConvert.SerializeObject(myB, Formatting.Indented)", span="3320-3320", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="ReflectionUtils.cs"];
m9_1438 [label="AA myA = new AA(2)", span="3309-3309", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="ReflectionUtils.cs"];
m9_1444 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", span="3307-3307", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="ReflectionUtils.cs"];
m9_2864 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", span="6619-6619", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="ReflectionUtils.cs"];
m9_2870 [label="Assert.AreEqual(1, o[''one''])", span="6628-6628", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="ReflectionUtils.cs"];
m9_2868 [label="IDictionary<string, int> o = s.Deserialize<Dictionary<string, int>>(new JsonTextReader(new StringReader(json)))", span="6625-6625", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="ReflectionUtils.cs"];
m9_2869 [label="Assert.IsNotNull(o)", span="6627-6627", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="ReflectionUtils.cs"];
m9_2871 [label="settings.CheckAdditionalContent = true", span="6630-6630", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="ReflectionUtils.cs"];
m9_2865 [label="string json = ''{one:1}{}''", span="6621-6621", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="ReflectionUtils.cs"];
m9_2867 [label="JsonSerializer s = JsonSerializer.Create(settings)", span="6624-6624", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="ReflectionUtils.cs"];
m9_2866 [label="JsonSerializerSettings settings = new JsonSerializerSettings()", span="6623-6623", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="ReflectionUtils.cs"];
m9_2872 [label="s = JsonSerializer.Create(settings)", span="6631-6631", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="ReflectionUtils.cs"];
m9_2873 [label="ExceptionAssert.Throws<JsonReaderException>(\r\n        ''Additional text encountered after finished reading JSON content: {. Path '', line 1, position 7.'',\r\n        () =>\r\n          {\r\n            s.Deserialize<Dictionary<string, int>>(new JsonTextReader(new StringReader(json)));\r\n          })", span="6632-6637", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="ReflectionUtils.cs"];
m9_2874 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", span="6619-6619", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="ReflectionUtils.cs"];
m9_1762 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", span="4003-4003", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="ReflectionUtils.cs"];
m9_1769 [label="SpecifiedTestClass deserialized = JsonConvert.DeserializeObject<SpecifiedTestClass>(json)", span="4016-4016", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="ReflectionUtils.cs"];
m9_1782 [label="deserialized = JsonConvert.DeserializeObject<SpecifiedTestClass>(json)", span="4038-4038", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="ReflectionUtils.cs"];
m9_1768 [label="Assert.AreEqual(@''{\r\n  ''''Age'''': 27\r\n}'', json)", span="4012-4014", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="ReflectionUtils.cs"];
m9_1775 [label="Assert.AreEqual(27, deserialized.Age)", span="4022-4022", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="ReflectionUtils.cs"];
m9_1781 [label="Assert.AreEqual(@''{\r\n  ''''Name'''': ''''James'''',\r\n  ''''Age'''': 27,\r\n  ''''Weight'''': 0,\r\n  ''''Height'''': 0,\r\n  ''''FavoriteNumber'''': 23\r\n}'', json)", span="4030-4036", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="ReflectionUtils.cs"];
m9_1783 [label="Assert.AreEqual(''James'', deserialized.Name)", span="4039-4039", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="ReflectionUtils.cs"];
m9_1788 [label="Assert.AreEqual(27, deserialized.Age)", span="4044-4044", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="ReflectionUtils.cs"];
m9_1789 [label="Assert.AreEqual(23, deserialized.FavoriteNumber)", span="4045-4045", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="ReflectionUtils.cs"];
m9_1767 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="4010-4010", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="ReflectionUtils.cs"];
m9_1770 [label="Assert.IsNull(deserialized.Name)", span="4017-4017", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="ReflectionUtils.cs"];
m9_1771 [label="Assert.IsFalse(deserialized.NameSpecified)", span="4018-4018", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="ReflectionUtils.cs"];
m9_1772 [label="Assert.IsFalse(deserialized.WeightSpecified)", span="4019-4019", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="ReflectionUtils.cs"];
m9_1773 [label="Assert.IsFalse(deserialized.HeightSpecified)", span="4020-4020", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="ReflectionUtils.cs"];
m9_1774 [label="Assert.IsFalse(deserialized.FavoriteNumberSpecified)", span="4021-4021", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="ReflectionUtils.cs"];
m9_1780 [label="json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="4028-4028", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="ReflectionUtils.cs"];
m9_1784 [label="Assert.IsTrue(deserialized.NameSpecified)", span="4040-4040", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="ReflectionUtils.cs"];
m9_1785 [label="Assert.IsTrue(deserialized.WeightSpecified)", span="4041-4041", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="ReflectionUtils.cs"];
m9_1786 [label="Assert.IsTrue(deserialized.HeightSpecified)", span="4042-4042", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="ReflectionUtils.cs"];
m9_1787 [label="Assert.IsTrue(deserialized.FavoriteNumberSpecified)", span="4043-4043", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="ReflectionUtils.cs"];
m9_1776 [label="c.NameSpecified = true", span="4024-4024", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="ReflectionUtils.cs"];
m9_1763 [label="SpecifiedTestClass c = new SpecifiedTestClass()", span="4005-4005", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="ReflectionUtils.cs"];
m9_1766 [label="c.NameSpecified = false", span="4008-4008", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="ReflectionUtils.cs"];
m9_1779 [label="c.FavoriteNumber = 23", span="4027-4027", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="ReflectionUtils.cs"];
m9_1777 [label="c.WeightSpecified = true", span="4025-4025", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="ReflectionUtils.cs"];
m9_1764 [label="c.Name = ''James''", span="4006-4006", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="ReflectionUtils.cs"];
m9_1765 [label="c.Age = 27", span="4007-4007", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="ReflectionUtils.cs"];
m9_1778 [label="c.HeightSpecified = true", span="4026-4026", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="ReflectionUtils.cs"];
m9_1790 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", span="4003-4003", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="ReflectionUtils.cs"];
m9_79 [label="return builder.ToString();", span="224-224", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="ReflectionUtils.cs"];
m9_2210 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="ReflectionUtils.cs"];
m9_2018 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", span="4625-4625", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", file="ReflectionUtils.cs"];
m9_2019 [label="return JsonConvert.DeserializeObject<NullableStructPropertyClass>(\r\n        serStr,\r\n        new JsonSerializerSettings\r\n          {\r\n            NullValueHandling = NullValueHandling.Ignore,\r\n            MissingMemberHandling = MissingMemberHandling.Ignore\r\n          });", span="4627-4633", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", file="ReflectionUtils.cs"];
m9_2020 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", span="4625-4625", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", file="ReflectionUtils.cs"];
m9_2603 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", span="6020-6020", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", file="ReflectionUtils.cs"];
m9_2604 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''No JSON content found and type 'System.Int32' is not nullable. Path '', line 0, position 0.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<int>('''');\r\n        })", span="6022-6027", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", file="ReflectionUtils.cs"];
m9_2605 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", span="6020-6020", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", file="ReflectionUtils.cs"];
m9_129 [label="test.SweetCakesCount = int.MaxValue", span="418-418", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="ReflectionUtils.cs"];
m9_130 [label="string jsonText = JsonConvert.SerializeObject(test)", span="420-420", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="ReflectionUtils.cs"];
m9_131 [label="Assert.AreEqual(@''{''''pie'''':''''Delicious'''',''''pie1'''':''''PieChart!'''',''''sweet_cakes_count'''':2147483647}'', jsonText)", span="422-422", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="ReflectionUtils.cs"];
m9_132 [label="JsonPropertyClass test2 = JsonConvert.DeserializeObject<JsonPropertyClass>(jsonText)", span="424-424", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="ReflectionUtils.cs"];
m9_642 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", span="1327-1327", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", file="ReflectionUtils.cs"];
m9_644 [label="GoogleMapGeocoderStructure jsonGoogleMapGeocoder = JsonConvert.DeserializeObject<GoogleMapGeocoderStructure>(json)", span="1366-1366", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", file="ReflectionUtils.cs"];
m9_643 [label="string json = @''{\r\n  ''''name'''': ''''1600 Amphitheatre Parkway, Mountain View, CA, USA'''',\r\n  ''''Status'''': {\r\n    ''''code'''': 200,\r\n    ''''request'''': ''''geocode''''\r\n  },\r\n  ''''Placemark'''': [\r\n    {\r\n      ''''address'''': ''''1600 Amphitheatre Pkwy, Mountain View, CA 94043, USA'''',\r\n      ''''AddressDetails'''': {\r\n        ''''Country'''': {\r\n          ''''CountryNameCode'''': ''''US'''',\r\n          ''''AdministrativeArea'''': {\r\n            ''''AdministrativeAreaName'''': ''''CA'''',\r\n            ''''SubAdministrativeArea'''': {\r\n              ''''SubAdministrativeAreaName'''': ''''Santa Clara'''',\r\n              ''''Locality'''': {\r\n                ''''LocalityName'''': ''''Mountain View'''',\r\n                ''''Thoroughfare'''': {\r\n                  ''''ThoroughfareName'''': ''''1600 Amphitheatre Pkwy''''\r\n                },\r\n                ''''PostalCode'''': {\r\n                  ''''PostalCodeNumber'''': ''''94043''''\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        ''''Accuracy'''': 8\r\n      },\r\n      ''''Point'''': {\r\n        ''''coordinates'''': [-122.083739, 37.423021, 0]\r\n      }\r\n    }\r\n  ]\r\n}''", span="1329-1364", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", file="ReflectionUtils.cs"];
m9_645 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", span="1327-1327", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", file="ReflectionUtils.cs"];
m9_1156 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", span="2598-2598", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="ReflectionUtils.cs"];
m9_1157 [label="ExistingValueClass d = JsonConvert.DeserializeObject<ExistingValueClass>(@''{'Dictionary':{appended:'appended',existing:'new'}}'')", span="2600-2600", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="ReflectionUtils.cs"];
m9_1160 [label="Assert.AreEqual(typeof(Dictionary<string, string>), d.Dictionary.GetType())", span="2604-2604", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="ReflectionUtils.cs"];
m9_1161 [label="Assert.AreEqual(typeof(List<string>), d.List.GetType())", span="2605-2605", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="ReflectionUtils.cs"];
m9_1162 [label="Assert.AreEqual(2, d.Dictionary.Count)", span="2606-2606", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="ReflectionUtils.cs"];
m9_1163 [label="Assert.AreEqual(''new'', d.Dictionary[''existing''])", span="2607-2607", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="ReflectionUtils.cs"];
m9_1164 [label="Assert.AreEqual(''appended'', d.Dictionary[''appended''])", span="2608-2608", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="ReflectionUtils.cs"];
m9_1165 [label="Assert.AreEqual(1, d.List.Count)", span="2609-2609", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="ReflectionUtils.cs"];
m9_1166 [label="Assert.AreEqual(''existing'', d.List[0])", span="2610-2610", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="ReflectionUtils.cs"];
m9_1158 [label="Assert.IsNotNull(d)", span="2602-2602", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="ReflectionUtils.cs"];
m9_1159 [label="Assert.IsNotNull(d.Dictionary)", span="2603-2603", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="ReflectionUtils.cs"];
m9_1167 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", span="2598-2598", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="ReflectionUtils.cs"];
m9_1384 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, ulong)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, ulong)", file="ReflectionUtils.cs"];
m9_37 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetObjectType(object)", span="148-148", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetObjectType(object)", file="ReflectionUtils.cs"];
m9_987 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", span="2182-2182", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", file="ReflectionUtils.cs"];
m9_988 [label="string json = @''[]''", span="2184-2184", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", file="ReflectionUtils.cs"];
m9_989 [label="ExceptionAssert.Throws<InvalidCastException>(\r\n        @''Unable to cast object of type 'Newtonsoft.Json.Linq.JArray' to type 'Newtonsoft.Json.Linq.JObject'.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<JObject>(json);\r\n        })", span="2186-2191", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", file="ReflectionUtils.cs"];
m9_990 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", span="2182-2182", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", file="ReflectionUtils.cs"];
m9_2029 [label="Entry Newtonsoft.Json.Linq.JObject.JObject(params object[])", span="104-104", cluster="Newtonsoft.Json.Linq.JObject.JObject(params object[])", file="ReflectionUtils.cs"];
m9_1640 [label="Entry System.Collections.Generic.List<T>.List(System.Collections.Generic.IEnumerable<T>)", span="0-0", cluster="System.Collections.Generic.List<T>.List(System.Collections.Generic.IEnumerable<T>)", file="ReflectionUtils.cs"];
m9_468 [label="Assert.AreEqual(@''{''''DefaultConverter'''':''''\/Date(0)\/'''',''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="996-996", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="ReflectionUtils.cs"];
m9_2710 [label="Entry Newtonsoft.Json.Bson.BsonWriter.BsonWriter(System.IO.Stream)", span="65-65", cluster="Newtonsoft.Json.Bson.BsonWriter.BsonWriter(System.IO.Stream)", file="ReflectionUtils.cs"];
m9_3371 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="ReflectionUtils.cs"];
m9_21 [label="return m.GetBaseDefinition();", span="122-122", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetBaseDefinition(System.Reflection.PropertyInfo)", file="ReflectionUtils.cs"];
m9_22 [label="m = propertyInfo.GetSetMethod()", span="125-125", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetBaseDefinition(System.Reflection.PropertyInfo)", file="ReflectionUtils.cs"];
m9_23 [label="m != null", span="126-126", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetBaseDefinition(System.Reflection.PropertyInfo)", file="ReflectionUtils.cs"];
m9_24 [label="return m.GetBaseDefinition();", span="128-128", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetBaseDefinition(System.Reflection.PropertyInfo)", file="ReflectionUtils.cs"];
m9_25 [label="return null;", span="131-131", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetBaseDefinition(System.Reflection.PropertyInfo)", file="ReflectionUtils.cs"];
m9_26 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetBaseDefinition(System.Reflection.PropertyInfo)", span="115-115", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetBaseDefinition(System.Reflection.PropertyInfo)", file="ReflectionUtils.cs"];
m9_19 [label="MethodInfo m = propertyInfo.GetGetMethod()", span="119-119", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetBaseDefinition(System.Reflection.PropertyInfo)", file="ReflectionUtils.cs"];
m9_20 [label="m != null", span="120-120", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetBaseDefinition(System.Reflection.PropertyInfo)", file="ReflectionUtils.cs"];
m9_14 [label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", span="31-31", cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", file="ReflectionUtils.cs"];
m9_18 [label="ValidationUtils.ArgumentNotNull(propertyInfo, nameof(propertyInfo))", span="117-117", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetBaseDefinition(System.Reflection.PropertyInfo)", file="ReflectionUtils.cs"];
m9_16 [label="Entry System.Reflection.PropertyInfo.GetSetMethod()", span="0-0", cluster="System.Reflection.PropertyInfo.GetSetMethod()", file="ReflectionUtils.cs"];
m9_17 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetBaseDefinition(System.Reflection.PropertyInfo)", span="115-115", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetBaseDefinition(System.Reflection.PropertyInfo)", file="ReflectionUtils.cs"];
m9_27 [label="Entry System.Reflection.MethodInfo.GetBaseDefinition()", span="0-0", cluster="System.Reflection.MethodInfo.GetBaseDefinition()", file="ReflectionUtils.cs"];
m9_53 [label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0", cluster="System.IO.MemoryStream.MemoryStream()", file="ReflectionUtils.cs"];
m9_1915 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", span="4395-4395", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="ReflectionUtils.cs"];
m9_1924 [label="IDictionary<string, object> newExpando = JsonConvert.DeserializeObject<ExpandoObject>(json)", span="4414-4414", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="ReflectionUtils.cs"];
m9_1926 [label="Assert.AreEqual((long)expando.Int, newExpando[''Int''])", span="4417-4417", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="ReflectionUtils.cs"];
m9_1928 [label="Assert.AreEqual(expando.Decimal, newExpando[''Decimal''])", span="4420-4420", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="ReflectionUtils.cs"];
m9_1932 [label="Assert.AreEqual(expando.Complex.String, o[''String''])", span="4426-4426", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="ReflectionUtils.cs"];
m9_1934 [label="Assert.AreEqual(expando.Complex.DateTime, o[''DateTime''])", span="4429-4429", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="ReflectionUtils.cs"];
m9_1923 [label="Assert.AreEqual(@''{\r\n  ''''Int'''': 1,\r\n  ''''Decimal'''': 99.9,\r\n  ''''Complex'''': {\r\n    ''''String'''': ''''I am a string'''',\r\n    ''''DateTime'''': ''''2000-12-20T18:55:00Z''''\r\n  }\r\n}'', json)", span="4405-4412", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="ReflectionUtils.cs"];
m9_1922 [label="string json = JsonConvert.SerializeObject(expando, Formatting.Indented)", span="4404-4404", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="ReflectionUtils.cs"];
m9_1925 [label="CustomAssert.IsInstanceOfType(typeof(long), newExpando[''Int''])", span="4416-4416", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="ReflectionUtils.cs"];
m9_1927 [label="CustomAssert.IsInstanceOfType(typeof(double), newExpando[''Decimal''])", span="4419-4419", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="ReflectionUtils.cs"];
m9_1929 [label="CustomAssert.IsInstanceOfType(typeof(ExpandoObject), newExpando[''Complex''])", span="4422-4422", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="ReflectionUtils.cs"];
m9_1930 [label="IDictionary<string, object> o = (ExpandoObject)newExpando[''Complex'']", span="4423-4423", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="ReflectionUtils.cs"];
m9_1916 [label="dynamic expando = new ExpandoObject()", span="4397-4397", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="ReflectionUtils.cs"];
m9_1931 [label="CustomAssert.IsInstanceOfType(typeof(string), o[''String''])", span="4425-4425", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="ReflectionUtils.cs"];
m9_1933 [label="CustomAssert.IsInstanceOfType(typeof(DateTime), o[''DateTime''])", span="4428-4428", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="ReflectionUtils.cs"];
m9_1921 [label="expando.Complex.DateTime = new DateTime(2000, 12, 20, 18, 55, 0, DateTimeKind.Utc)", span="4402-4402", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="ReflectionUtils.cs"];
m9_1917 [label="expando.Int = 1", span="4398-4398", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="ReflectionUtils.cs"];
m9_1918 [label="expando.Decimal = 99.9d", span="4399-4399", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="ReflectionUtils.cs"];
m9_1919 [label="expando.Complex = new ExpandoObject()", span="4400-4400", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="ReflectionUtils.cs"];
m9_1920 [label="expando.Complex.String = ''I am a string''", span="4401-4401", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="ReflectionUtils.cs"];
m9_1935 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", span="4395-4395", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="ReflectionUtils.cs"];
m9_2424 [label="Entry Newtonsoft.Json.Tests.Serialization.TestObject.TestObject(string, byte[])", span="8329-8329", cluster="Newtonsoft.Json.Tests.Serialization.TestObject.TestObject(string, byte[])", file="ReflectionUtils.cs"];
m9_3447 [label="Name = name", span="8331-8331", cluster="Newtonsoft.Json.Tests.Serialization.TestObject.TestObject(string, byte[])", file="ReflectionUtils.cs"];
m9_3448 [label="Data = data", span="8332-8332", cluster="Newtonsoft.Json.Tests.Serialization.TestObject.TestObject(string, byte[])", file="ReflectionUtils.cs"];
m9_3449 [label="Exit Newtonsoft.Json.Tests.Serialization.TestObject.TestObject(string, byte[])", span="8329-8329", cluster="Newtonsoft.Json.Tests.Serialization.TestObject.TestObject(string, byte[])", file="ReflectionUtils.cs"];
m9_540 [label="Entry lambda expression", span="1062-1066", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_513 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", span="1079-1079", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", file="ReflectionUtils.cs"];
m9_515 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", span="1079-1079", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", file="ReflectionUtils.cs"];
m9_517 [label="IncompatibleJsonAttributeClass c = new IncompatibleJsonAttributeClass()", span="1085-1085", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_518 [label="JsonConvert.SerializeObject(c)", span="1086-1086", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_520 [label="Entry Newtonsoft.Json.Tests.TestObjects.IncompatibleJsonAttributeClass.IncompatibleJsonAttributeClass()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.IncompatibleJsonAttributeClass.IncompatibleJsonAttributeClass()", file="ReflectionUtils.cs"];
m9_514 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''Unexpected value when converting date. Expected DateTime or DateTimeOffset, got Newtonsoft.Json.Tests.TestObjects.IncompatibleJsonAttributeClass.'',\r\n        () =>\r\n        {\r\n          IncompatibleJsonAttributeClass c = new IncompatibleJsonAttributeClass();\r\n          JsonConvert.SerializeObject(c);\r\n        })", span="1081-1087", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", file="ReflectionUtils.cs"];
m9_512 [label="Entry Newtonsoft.Json.Tests.TestObjects.ClassAndMemberConverterClass.ClassAndMemberConverterClass()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.ClassAndMemberConverterClass.ClassAndMemberConverterClass()", file="ReflectionUtils.cs"];
m9_516 [label="Entry lambda expression", span="1083-1087", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_519 [label="Exit lambda expression", span="1083-1087", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_521 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", span="1091-1091", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", file="ReflectionUtils.cs"];
m9_1030 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", span="2262-2262", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="ReflectionUtils.cs"];
m9_1032 [label="Person p = JsonConvert.DeserializeObject<Person>(json)", span="2266-2266", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="ReflectionUtils.cs"];
m9_1033 [label="Assert.AreEqual('''', p.Name)", span="2267-2267", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="ReflectionUtils.cs"];
m9_1031 [label="string json = @''{''''Name'''':''''''''}''", span="2264-2264", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="ReflectionUtils.cs"];
m9_1034 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", span="2262-2262", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="ReflectionUtils.cs"];
m9_1630 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="3754-3754", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionUtils.cs"];
m9_1636 [label="newStrings.Add(s)", span="3764-3764", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionUtils.cs"];
m9_1635 [label="string s = (string)reader.Value", span="3763-3763", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionUtils.cs"];
m9_1632 [label="List<string> newStrings = new List<string>(existingStrings)", span="3757-3757", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionUtils.cs"];
m9_1637 [label="reader.Read()", span="3766-3766", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionUtils.cs"];
m9_1634 [label="reader.TokenType != JsonToken.EndArray", span="3761-3761", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionUtils.cs"];
m9_1631 [label="List<string> existingStrings = (List<string>)existingValue", span="3756-3756", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionUtils.cs"];
m9_1633 [label="reader.Read()", span="3759-3759", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionUtils.cs"];
m9_1638 [label="return newStrings;", span="3769-3769", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionUtils.cs"];
m9_1639 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="3754-3754", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionUtils.cs"];
m9_257 [label="settings.Converters.Add(new IsoDateTimeConverter\r\n        {\r\n          DateTimeFormat = ''yyyy''\r\n        })", span="633-636", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="ReflectionUtils.cs"];
m9_2885 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", span="6679-6679", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", file="ReflectionUtils.cs"];
m9_2886 [label="ExceptionAssert.Throws<JsonException>(\r\n       ''Additional text found in JSON string after finishing deserializing object.'',\r\n       () =>\r\n         {\r\n           string json = ''[{},1]'';\r\n\r\n           JsonSerializer serializer = new JsonSerializer();\r\n           serializer.CheckAdditionalContent = true;\r\n\r\n           var reader = new JsonTextReader(new StringReader(json));\r\n           reader.Read();\r\n           reader.Read();\r\n\r\n           serializer.Deserialize(reader, typeof (MyType));\r\n         })", span="6681-6695", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", file="ReflectionUtils.cs"];
m9_2887 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", span="6679-6679", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", file="ReflectionUtils.cs"];
m9_1239 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)", file="ReflectionUtils.cs"];
m9_196 [label="JsonConvert.DeserializeObject<List<string>>(json)", span="519-519", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_35 [label="Assert.AreEqual(3.99m, p.Price)", span="200-200", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="ReflectionUtils.cs"];
m9_36 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", span="192-192", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="ReflectionUtils.cs"];
m9_1077 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", span="2375-2375", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="ReflectionUtils.cs"];
m9_1082 [label="StructTest deserialized = JsonConvert.DeserializeObject<StructTest>(json)", span="2394-2394", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="ReflectionUtils.cs"];
m9_1083 [label="Assert.AreEqual(structTest.StringProperty, deserialized.StringProperty)", span="2395-2395", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="ReflectionUtils.cs"];
m9_1081 [label="Assert.AreEqual(@''{\r\n  ''''StringField'''': ''''StringField'''',\r\n  ''''IntField'''': 10,\r\n  ''''StringProperty'''': ''''StringProperty!'''',\r\n  ''''IntProperty'''': 5\r\n}'', json)", span="2387-2392", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="ReflectionUtils.cs"];
m9_1084 [label="Assert.AreEqual(structTest.StringField, deserialized.StringField)", span="2396-2396", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="ReflectionUtils.cs"];
m9_1085 [label="Assert.AreEqual(structTest.IntProperty, deserialized.IntProperty)", span="2397-2397", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="ReflectionUtils.cs"];
m9_1086 [label="Assert.AreEqual(structTest.IntField, deserialized.IntField)", span="2398-2398", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="ReflectionUtils.cs"];
m9_1079 [label="string json = JsonConvert.SerializeObject(structTest, Formatting.Indented)", span="2385-2385", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="ReflectionUtils.cs"];
m9_1078 [label="StructTest structTest = new StructTest\r\n        {\r\n          StringProperty = ''StringProperty!'',\r\n          StringField = ''StringField'',\r\n          IntProperty = 5,\r\n          IntField = 10\r\n        }", span="2377-2383", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="ReflectionUtils.cs"];
m9_1080 [label="Console.WriteLine(json)", span="2386-2386", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="ReflectionUtils.cs"];
m9_1087 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", span="2375-2375", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="ReflectionUtils.cs"];
m9_2508 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", span="5827-5827", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", file="ReflectionUtils.cs"];
m9_2509 [label="ExceptionAssert.Throws<JsonReaderException>(\r\n        ''Error reading integer. Unexpected token: Boolean. Path 'PreProperty', line 2, position 22.'',\r\n        () =>\r\n        {\r\n          string json = @''{\r\n  ''''PreProperty'''': true,\r\n  ''''PostProperty'''': ''''-1''''\r\n}'';\r\n\r\n          JsonConvert.DeserializeObject<TestObjects.MyClass>(json);\r\n        })", span="5829-5839", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", file="ReflectionUtils.cs"];
m9_2510 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", span="5827-5827", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", file="ReflectionUtils.cs"];
m9_266 [label="throw new ArgumentException(''MemberInfo '{0}' must be of type FieldInfo or PropertyInfo''.FormatWith(CultureInfo.InvariantCulture, member.Name), nameof(member));", span="550-550", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", file="ReflectionUtils.cs"];
m9_267 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", span="536-536", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", file="ReflectionUtils.cs"];
m9_268 [label="Entry System.Reflection.FieldInfo.SetValue(object, object)", span="0-0", cluster="System.Reflection.FieldInfo.SetValue(object, object)", file="ReflectionUtils.cs"];
m9_269 [label="Entry System.Reflection.PropertyInfo.SetValue(object, object, object[])", span="0-0", cluster="System.Reflection.PropertyInfo.SetValue(object, object, object[])", file="ReflectionUtils.cs"];
m9_2017 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable()", span="4557-4557", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable()", file="ReflectionUtils.cs"];
m9_1265 [label="Entry System.Collections.Generic.ICollection<T>.Contains(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Contains(T)", file="ReflectionUtils.cs"];
m9_1336 [label="Entry System.Runtime.Serialization.SerializationInfo.GetString(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetString(string)", file="ReflectionUtils.cs"];
m9_1348 [label="Entry System.Runtime.Serialization.SerializationInfo.GetUInt16(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetUInt16(string)", file="ReflectionUtils.cs"];
m9_189 [label="throw new Exception(''Type {0} is not a collection.''.FormatWith(CultureInfo.InvariantCulture, type));", span="399-399", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="ReflectionUtils.cs"];
m9_191 [label="typeof(IEnumerable).IsAssignableFrom(type)", span="404-404", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="ReflectionUtils.cs"];
m9_192 [label="return null;", span="406-406", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="ReflectionUtils.cs"];
m9_193 [label="throw new Exception(''Type {0} is not a collection.''.FormatWith(CultureInfo.InvariantCulture, type));", span="409-409", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="ReflectionUtils.cs"];
m9_194 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", span="386-386", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="ReflectionUtils.cs"];
m9_1338 [label="Entry System.Runtime.Serialization.SerializationInfo.GetValue(string, System.Type)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetValue(string, System.Type)", file="ReflectionUtils.cs"];
m9_454 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberInfoFromType(System.Type, System.Reflection.MemberInfo)", span="904-904", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberInfoFromType(System.Type, System.Reflection.MemberInfo)", file="ReflectionUtils.cs"];
m9_417 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", span="914-914", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="ReflectionUtils.cs"];
m9_697 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", span="1485-1485", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="ReflectionUtils.cs"];
m9_702 [label="SubKlass ii = JsonConvert.DeserializeObject<SubKlass>(json)", span="1493-1493", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="ReflectionUtils.cs"];
m9_701 [label="Assert.AreEqual(@''{''''SubProp'''':''''my subprop'''',''''SuperProp'''':''''overrided superprop''''}'', json)", span="1491-1491", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="ReflectionUtils.cs"];
m9_704 [label="Assert.AreEqual(@''{''''SubProp'''':''''my subprop'''',''''SuperProp'''':''''overrided superprop''''}'', newJson)", span="1496-1496", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="ReflectionUtils.cs"];
m9_700 [label="string json = JsonConvert.SerializeObject(i)", span="1490-1490", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="ReflectionUtils.cs"];
m9_703 [label="string newJson = JsonConvert.SerializeObject(ii)", span="1495-1495", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="ReflectionUtils.cs"];
m9_698 [label="SubKlass i = new SubKlass(''my subprop'')", span="1487-1487", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="ReflectionUtils.cs"];
m9_699 [label="i.SuperProp = ''overrided superprop''", span="1488-1488", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="ReflectionUtils.cs"];
m9_705 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", span="1485-1485", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="ReflectionUtils.cs"];
m9_2804 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", span="6442-6442", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="ReflectionUtils.cs"];
m9_2808 [label="IDictionary<DateTime, int> dic2 = JsonConvert.DeserializeObject<IDictionary<DateTime, int>>(json)", span="6460-6460", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="ReflectionUtils.cs"];
m9_2807 [label="Assert.AreEqual(@''{\r\n  ''''\/Date(976623132000)\/'''': 1,\r\n  ''''\/Date(1386850332000)\/'''': 2\r\n}'', json)", span="6455-6458", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="ReflectionUtils.cs"];
m9_2809 [label="Assert.AreEqual(2, dic2.Count)", span="6462-6462", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="ReflectionUtils.cs"];
m9_2810 [label="Assert.AreEqual(1, dic2[new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", span="6463-6463", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="ReflectionUtils.cs"];
m9_2811 [label="Assert.AreEqual(2, dic2[new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", span="6464-6464", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="ReflectionUtils.cs"];
m9_2806 [label="string json = JsonConvert.SerializeObject(dic1, Formatting.Indented, new JsonSerializerSettings\r\n      {\r\n        DateFormatHandling = DateFormatHandling.MicrosoftDateFormat\r\n      })", span="6450-6453", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="ReflectionUtils.cs"];
m9_2805 [label="IDictionary<DateTime, int> dic1 = new Dictionary<DateTime, int>\r\n        {\r\n          {new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc), 1},\r\n          {new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc), 2}\r\n        }", span="6444-6448", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="ReflectionUtils.cs"];
m9_2812 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", span="6442-6442", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="ReflectionUtils.cs"];
m9_221 [label="return ((PropertyInfo)member).PropertyType;", span="454-454", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="ReflectionUtils.cs"];
m9_2297 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", span="5435-5435", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="ReflectionUtils.cs"];
m9_2301 [label="UriGuidTimeSpanTestClass c2 = JsonConvert.DeserializeObject<UriGuidTimeSpanTestClass>(json)", span="5448-5448", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="ReflectionUtils.cs"];
m9_2302 [label="Assert.AreEqual(c1.Guid, c2.Guid)", span="5449-5449", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="ReflectionUtils.cs"];
m9_2303 [label="Assert.AreEqual(c1.NullableGuid, c2.NullableGuid)", span="5450-5450", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="ReflectionUtils.cs"];
m9_2304 [label="Assert.AreEqual(c1.TimeSpan, c2.TimeSpan)", span="5451-5451", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="ReflectionUtils.cs"];
m9_2305 [label="Assert.AreEqual(c1.NullableTimeSpan, c2.NullableTimeSpan)", span="5452-5452", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="ReflectionUtils.cs"];
m9_2306 [label="Assert.AreEqual(c1.Uri, c2.Uri)", span="5453-5453", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="ReflectionUtils.cs"];
m9_2300 [label="Assert.AreEqual(@''{\r\n  ''''Guid'''': ''''00000000-0000-0000-0000-000000000000'''',\r\n  ''''NullableGuid'''': null,\r\n  ''''TimeSpan'''': ''''00:00:00'''',\r\n  ''''NullableTimeSpan'''': null,\r\n  ''''Uri'''': null\r\n}'', json)", span="5440-5446", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="ReflectionUtils.cs"];
m9_2299 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="5438-5438", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="ReflectionUtils.cs"];
m9_2298 [label="UriGuidTimeSpanTestClass c1 = new UriGuidTimeSpanTestClass()", span="5437-5437", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="ReflectionUtils.cs"];
m9_2307 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", span="5435-5435", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="ReflectionUtils.cs"];
m9_966 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", span="2134-2134", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", file="ReflectionUtils.cs"];
m9_967 [label="string json = @''[]''", span="2136-2136", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", file="ReflectionUtils.cs"];
m9_968 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'System.Exception' because the type requires a JSON object (e.g. {''''name'''':''''value''''}) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON object (e.g. {''''name'''':''''value''''}) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<Exception>(json);\r\n        })", span="2138-2145", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", file="ReflectionUtils.cs"];
m9_969 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", span="2134-2134", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", file="ReflectionUtils.cs"];
m9_92 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type)", span="239-239", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type)", file="ReflectionUtils.cs"];
m9_2996 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", span="6930-6930", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="ReflectionUtils.cs"];
m9_2998 [label="var l = JsonConvert.DeserializeObject<IReadOnlyList<int?>>(json)", span="6937-6937", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="ReflectionUtils.cs"];
m9_2999 [label="Assert.AreEqual(1, l[0])", span="6939-6939", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="ReflectionUtils.cs"];
m9_3000 [label="Assert.AreEqual(null, l[1])", span="6940-6940", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="ReflectionUtils.cs"];
m9_2997 [label="string json = @''[\r\n        1,\r\n        null\r\n      ]''", span="6932-6935", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="ReflectionUtils.cs"];
m9_3001 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", span="6930-6930", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="ReflectionUtils.cs"];
m9_1008 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", span="2221-2221", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="ReflectionUtils.cs"];
m9_1009 [label="string json = @''{}''", span="2223-2223", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="ReflectionUtils.cs"];
m9_1010 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        @''Cannot deserialize the current JSON object (e.g. {''''name'''':''''value''''}) into type 'System.Collections.Generic.List`1[Newtonsoft.Json.Tests.TestObjects.Person]' because the type requires a JSON array (e.g. [1,2,3]) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON array (e.g. [1,2,3]) or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.\r\nPath '', line 1, position 2.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<List<Person>>(json);\r\n        })", span="2225-2232", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="ReflectionUtils.cs"];
m9_1011 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", span="2221-2221", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="ReflectionUtils.cs"];
m9_459 [label="Assert.AreEqual(@''{''''DefaultConverter'''':''''\/Date(0)\/'''',''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="978-978", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="ReflectionUtils.cs"];
m9_1986 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", span="4537-4537", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="ReflectionUtils.cs"];
m9_1991 [label="Assert.AreEqual(((Derived)meh).IDoWork, ''woo'')", span="4551-4551", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="ReflectionUtils.cs"];
m9_1992 [label="Assert.AreEqual(meh.IDontWork, ''meh'')", span="4552-4552", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="ReflectionUtils.cs"];
m9_1990 [label="var meh = JsonConvert.DeserializeObject<Base>(json, settings)", span="4549-4549", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="ReflectionUtils.cs"];
m9_1988 [label="var settings = new JsonSerializerSettings\r\n        {\r\n          TypeNameHandling = TypeNameHandling.Objects,\r\n          ConstructorHandling = ConstructorHandling.AllowNonPublicDefaultConstructor\r\n        }", span="4541-4545", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="ReflectionUtils.cs"];
m9_1989 [label="string json = JsonConvert.SerializeObject(derived, Formatting.Indented, settings)", span="4547-4547", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="ReflectionUtils.cs"];
m9_1987 [label="var derived = new Derived(''meh'', ''woo'')", span="4539-4539", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="ReflectionUtils.cs"];
m9_1993 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", span="4537-4537", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="ReflectionUtils.cs"];
m9_994 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", span="2195-2195", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", file="ReflectionUtils.cs"];
m9_995 [label="string json = @''new Constructor(123)''", span="2197-2197", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", file="ReflectionUtils.cs"];
m9_996 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        @''Error converting value ''''Constructor'''' to type 'Newtonsoft.Json.Tests.TestObjects.Person'. Path '', line 1, position 16.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<Person>(json);\r\n        })", span="2199-2204", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", file="ReflectionUtils.cs"];
m9_997 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", span="2195-2195", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", file="ReflectionUtils.cs"];
m9_1349 [label="Entry System.Runtime.Serialization.SerializationInfo.GetUInt32(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetUInt32(string)", file="ReflectionUtils.cs"];
m9_237 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", span="580-580", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="ReflectionUtils.cs"];
m9_2970 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", span="6851-6851", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", file="ReflectionUtils.cs"];
m9_2971 [label="m_Item1 = item1", span="6853-6853", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", file="ReflectionUtils.cs"];
m9_2972 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", span="6851-6851", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", file="ReflectionUtils.cs"];
m9_2239 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CollectionClassAttributeDerived()", span="5202-5202", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CollectionClassAttributeDerived()", file="ReflectionUtils.cs"];
m9_2194 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", span="5157-5157", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", file="ReflectionUtils.cs"];
m9_2196 [label="Categories = new Dictionary<string, int>()", span="5160-5160", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", file="ReflectionUtils.cs"];
m9_2195 [label="Title = title", span="5159-5159", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", file="ReflectionUtils.cs"];
m9_2197 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", span="5157-5157", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", file="ReflectionUtils.cs"];
m9_3210 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloats.NullableFloats()", span="7547-7547", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloats.NullableFloats()", file="ReflectionUtils.cs"];
m9_366 [label="ClassWithGuid c = JsonConvert.DeserializeObject<ClassWithGuid>(json)", span="819-819", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="ReflectionUtils.cs"];
m9_367 [label="Assert.AreEqual(guid, c.GuidField)", span="820-820", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="ReflectionUtils.cs"];
m9_368 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", span="812-812", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="ReflectionUtils.cs"];
m9_1956 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", span="4464-4464", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="ReflectionUtils.cs"];
m9_1958 [label="IDictionary<string, decimal> d = JsonConvert.DeserializeObject<IDictionary<string, decimal>>(json)", span="4467-4467", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="ReflectionUtils.cs"];
m9_1959 [label="Assert.AreEqual(123456789876543.21m, d[''Value''])", span="4468-4468", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="ReflectionUtils.cs"];
m9_1957 [label="string json = ''{'Value':123456789876543.21}''", span="4466-4466", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="ReflectionUtils.cs"];
m9_1960 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", span="4464-4464", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="ReflectionUtils.cs"];
m9_229 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", span="580-580", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="ReflectionUtils.cs"];
m9_2245 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", span="5289-5289", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", file="ReflectionUtils.cs"];
m9_2246 [label="_readonlyString = ''default!''", span="5291-5291", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", file="ReflectionUtils.cs"];
m9_2247 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", span="5289-5289", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", file="ReflectionUtils.cs"];
m9_1342 [label="Entry System.Runtime.Serialization.SerializationInfo.GetDateTime(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetDateTime(string)", file="ReflectionUtils.cs"];
m9_144 [label="type.GetInterfaces()", span="322-322", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs"];
m9_377 [label="attributes != null", span="747-747", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes<T>(object, bool)", file="ReflectionUtils.cs"];
m9_381 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", span="755-755", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="ReflectionUtils.cs"];
m9_380 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes<T>(object, bool)", span="742-742", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes<T>(object, bool)", file="ReflectionUtils.cs"];
m9_379 [label="return a.Cast<T>().ToArray();", span="752-752", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes<T>(object, bool)", file="ReflectionUtils.cs"];
m9_378 [label="return attributes;", span="749-749", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes<T>(object, bool)", file="ReflectionUtils.cs"];
m9_383 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="ReflectionUtils.cs"];
m9_195 [label="Entry lambda expression", span="517-520", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_3002 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", span="6945-6945", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="ReflectionUtils.cs"];
m9_3005 [label="Assert.AreEqual(@''{''''m_Item1'''':500}'', json)", span="6949-6949", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="ReflectionUtils.cs"];
m9_3009 [label="Assert.AreEqual(500, obj.Item1)", span="6960-6960", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="ReflectionUtils.cs"];
m9_3004 [label="var json = JsonConvert.SerializeObject(tuple)", span="6948-6948", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="ReflectionUtils.cs"];
m9_3006 [label="MyTuple<int> obj = null", span="6951-6951", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="ReflectionUtils.cs"];
m9_3008 [label="doStuff()", span="6959-6959", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="ReflectionUtils.cs"];
m9_3003 [label="var tuple = new MyTuple<int>(500)", span="6947-6947", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="ReflectionUtils.cs"];
m9_3007 [label="Action doStuff = () =>\r\n      {\r\n        obj = JsonConvert.DeserializeObject<MyTuple<int>>(json);\r\n      }", span="6953-6956", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="ReflectionUtils.cs"];
m9_3010 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", span="6945-6945", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="ReflectionUtils.cs"];
m9_1316 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="3040-3040", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReflectionUtils.cs"];
m9_1317 [label="_stringValue = info.GetString(''stringValue'')", span="3042-3042", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReflectionUtils.cs"];
m9_1318 [label="_intValue = info.GetInt32(''intValue'')", span="3043-3043", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReflectionUtils.cs"];
m9_1319 [label="_dateTimeOffsetValue = (DateTimeOffset)info.GetValue(''dateTimeOffsetValue'', typeof(DateTimeOffset))", span="3044-3044", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReflectionUtils.cs"];
m9_1320 [label="_personValue = (Person)info.GetValue(''personValue'', typeof(Person))", span="3045-3045", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReflectionUtils.cs"];
m9_1321 [label="_nullPersonValue = (Person)info.GetValue(''nullPersonValue'', typeof(Person))", span="3046-3046", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReflectionUtils.cs"];
m9_1322 [label="_nullableInt = (int?)info.GetValue(''nullableInt'', typeof(int?))", span="3047-3047", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReflectionUtils.cs"];
m9_1323 [label="_booleanValue = info.GetBoolean(''booleanValue'')", span="3049-3049", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReflectionUtils.cs"];
m9_1324 [label="_byteValue = info.GetByte(''byteValue'')", span="3050-3050", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReflectionUtils.cs"];
m9_1325 [label="_charValue = info.GetChar(''charValue'')", span="3051-3051", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReflectionUtils.cs"];
m9_1326 [label="_dateTimeValue = info.GetDateTime(''dateTimeValue'')", span="3052-3052", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReflectionUtils.cs"];
m9_1327 [label="_decimalValue = info.GetDecimal(''decimalValue'')", span="3053-3053", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReflectionUtils.cs"];
m9_1328 [label="_shortValue = info.GetInt16(''shortValue'')", span="3054-3054", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReflectionUtils.cs"];
m9_1329 [label="_longValue = info.GetInt64(''longValue'')", span="3055-3055", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReflectionUtils.cs"];
m9_1330 [label="_sbyteValue = info.GetSByte(''sbyteValue'')", span="3056-3056", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReflectionUtils.cs"];
m9_1331 [label="_floatValue = info.GetSingle(''floatValue'')", span="3057-3057", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReflectionUtils.cs"];
m9_1332 [label="_ushortValue = info.GetUInt16(''ushortValue'')", span="3058-3058", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReflectionUtils.cs"];
m9_1333 [label="_uintValue = info.GetUInt32(''uintValue'')", span="3059-3059", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReflectionUtils.cs"];
m9_1334 [label="_ulongValue = info.GetUInt64(''ulongValue'')", span="3060-3060", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReflectionUtils.cs"];
m9_1335 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="3040-3040", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReflectionUtils.cs"];
m9_2541 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", span="5906-5906", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="ReflectionUtils.cs"];
m9_2544 [label="Assert.AreEqual('''', dict[''k1''])", span="5911-5911", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="ReflectionUtils.cs"];
m9_2545 [label="Assert.AreEqual(''v2'', dict[''k2''])", span="5912-5912", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="ReflectionUtils.cs"];
m9_2543 [label="var dict = serializer.Deserialize<Dictionary<string, string>>(new JsonTextReader(new StringReader(''{'k1':'','k2':'v2'}'')))", span="5909-5909", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="ReflectionUtils.cs"];
m9_2542 [label="var serializer = JsonSerializer.Create(new JsonSerializerSettings())", span="5908-5908", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="ReflectionUtils.cs"];
m9_2546 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", span="5906-5906", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="ReflectionUtils.cs"];
m9_2813 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", span="6468-6468", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", file="ReflectionUtils.cs"];
m9_2815 [label="Assert.AreEqual('''', s)", span="6471-6471", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", file="ReflectionUtils.cs"];
m9_2814 [label="string s = (string) new JsonSerializer().Deserialize(new JsonTextReader(new StringReader('''''')))", span="6470-6470", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", file="ReflectionUtils.cs"];
m9_2816 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", span="6468-6468", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", file="ReflectionUtils.cs"];
m9_2926 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", span="6749-6749", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="ReflectionUtils.cs"];
m9_2927 [label="KeyValuePair<int, string> result =\r\n        JsonConvert.DeserializeObject<KeyValuePair<int, string>>(\r\n          ''{key: 123, \''VALUE\'': \''test value\''}''\r\n          )", span="6751-6754", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="ReflectionUtils.cs"];
m9_2928 [label="Assert.AreEqual(123, result.Key)", span="6756-6756", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="ReflectionUtils.cs"];
m9_2929 [label="Assert.AreEqual(''test value'', result.Value)", span="6757-6757", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="ReflectionUtils.cs"];
m9_2930 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", span="6749-6749", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="ReflectionUtils.cs"];
m9_360 [label="Type memberUnderlyingType = GetMemberUnderlyingType(members[0])", span="720-720", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m9_93 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="1014-1014", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="ReflectionUtils.cs"];
m9_94 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", span="283-283", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="ReflectionUtils.cs"];
m9_1243 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary()", span="2877-2877", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary()", file="ReflectionUtils.cs"];
m9_1244 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary()", span="2877-2877", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary()", file="ReflectionUtils.cs"];
m9_2320 [label="Entry System.TimeSpan.FromDays(double)", span="0-0", cluster="System.TimeSpan.FromDays(double)", file="ReflectionUtils.cs"];
m9_657 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", span="1384-1384", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", file="ReflectionUtils.cs"];
m9_658 [label="Person person = new Person\r\n        {\r\n          Name = ''Mike Manager'',\r\n          BirthDate = new DateTime(1983, 8, 3, 0, 0, 0, DateTimeKind.Utc),\r\n          Department = ''IT'',\r\n          LastModified = new DateTime(2009, 2, 15, 0, 0, 0, DateTimeKind.Utc)\r\n        }", span="1386-1392", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", file="ReflectionUtils.cs"];
m9_659 [label="return person;", span="1393-1393", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", file="ReflectionUtils.cs"];
m9_660 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", span="1384-1384", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", file="ReflectionUtils.cs"];
m9_122 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", span="392-392", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="ReflectionUtils.cs"];
m9_831 [label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="393-393", cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="ReflectionUtils.cs"];
m9_3111 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithBadItems()", span="7249-7249", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithBadItems()", file="ReflectionUtils.cs"];
m9_3112 [label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[[1,1,1],[1,1,2]],[[1,2,1],[1,2,2]],[[2,1,1],[2,1,2]],[[2,2,1],{}]],''''After'''':''''After!''''}''", span="7251-7251", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithBadItems()", file="ReflectionUtils.cs"];
m9_3113 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''Unexpected token when deserializing multidimensional array: StartObject. Path 'Coordinates[3][1]', line 1, position 99.'',\r\n        () => JsonConvert.DeserializeObject<Array3D>(json))", span="7253-7255", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithBadItems()", file="ReflectionUtils.cs"];
m9_3114 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithBadItems()", span="7249-7249", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithBadItems()", file="ReflectionUtils.cs"];
m9_99 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type, bool)", span="244-244", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type, bool)", file="ReflectionUtils.cs"];
m9_2426 [label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="692-692", cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="ReflectionUtils.cs"];
m9_3292 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeInheritedClassTest()", span="7802-7802", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeInheritedClassTest()", file="ReflectionUtils.cs"];
m9_3301 [label="Assert.AreEqual(@''{\r\n  ''''Age'''': 100,\r\n  ''''Name'''': ''''Joe Employee'''',\r\n  ''''Manager'''': {\r\n    ''''Name'''': ''''Mike Manager''''\r\n  }\r\n}'', json)", span="7826-7832", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeInheritedClassTest()", file="ReflectionUtils.cs"];
m9_3300 [label="string json = JsonConvert.SerializeObject(joe, Formatting.Indented)", span="7824-7824", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeInheritedClassTest()", file="ReflectionUtils.cs"];
m9_3293 [label="NewEmployee joe = new NewEmployee()", span="7804-7804", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeInheritedClassTest()", file="ReflectionUtils.cs"];
m9_3299 [label="joe.Manager = mike", span="7812-7812", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeInheritedClassTest()", file="ReflectionUtils.cs"];
m9_3294 [label="joe.Name = ''Joe Employee''", span="7805-7805", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeInheritedClassTest()", file="ReflectionUtils.cs"];
m9_3295 [label="joe.Age = 100", span="7806-7806", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeInheritedClassTest()", file="ReflectionUtils.cs"];
m9_3296 [label="Employee mike = new Employee()", span="7808-7808", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeInheritedClassTest()", file="ReflectionUtils.cs"];
m9_3298 [label="mike.Manager = mike", span="7810-7810", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeInheritedClassTest()", file="ReflectionUtils.cs"];
m9_3297 [label="mike.Name = ''Mike Manager''", span="7809-7809", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeInheritedClassTest()", file="ReflectionUtils.cs"];
m9_3302 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeInheritedClassTest()", span="7802-7802", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeInheritedClassTest()", file="ReflectionUtils.cs"];
m9_614 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", span="1280-1280", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="ReflectionUtils.cs"];
m9_615 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''Required property 'LastName' not found in JSON. Path '', line 3, position 2.'',\r\n        () =>\r\n        {\r\n          string json = @''{\r\n  ''''FirstName'''': ''''Bob''''\r\n}'';\r\n\r\n          JsonConvert.DeserializeObject<RequiredMembersClass>(json);\r\n        })", span="1282-1291", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="ReflectionUtils.cs"];
m9_616 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", span="1280-1280", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="ReflectionUtils.cs"];
m9_606 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", span="1260-1260", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", file="ReflectionUtils.cs"];
m9_607 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''Cannot write a null value for property 'FirstName'. Property requires a value. Path ''.'',\r\n        () =>\r\n        {\r\n          RequiredMembersClass requiredMembersClass = new RequiredMembersClass\r\n            {\r\n              FirstName = null,\r\n              BirthDate = new DateTime(2000, 10, 10, 10, 10, 10, DateTimeKind.Utc),\r\n              LastName = null,\r\n              MiddleName = null\r\n            };\r\n\r\n          string json = JsonConvert.SerializeObject(requiredMembersClass);\r\n          Console.WriteLine(json);\r\n        })", span="1262-1276", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", file="ReflectionUtils.cs"];
m9_608 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", span="1260-1260", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", file="ReflectionUtils.cs"];
m9_1997 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="4573-4573", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReflectionUtils.cs"];
m9_1998 [label="info.AddValue(''Name'', _name)", span="4575-4575", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReflectionUtils.cs"];
m9_1999 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="4573-4573", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReflectionUtils.cs"];
m9_158 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type)", span="340-340", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type)", file="ReflectionUtils.cs"];
m9_340 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", span="749-749", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="ReflectionUtils.cs"];
m9_1540 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pos.Pos()", span="3578-3578", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pos.Pos()", file="ReflectionUtils.cs"];
m9_3011 [label="Entry System.Action.Invoke()", span="0-0", cluster="System.Action.Invoke()", file="ReflectionUtils.cs"];
m9_2657 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", span="6130-6130", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="ReflectionUtils.cs"];
m9_2662 [label="var roundtrippedPerson = JsonConvert.DeserializeObject<PersonWithPrivateConstructor>(serializedPerson)", span="6137-6137", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="ReflectionUtils.cs"];
m9_2663 [label="Assert.AreEqual(person.Name, roundtrippedPerson.Name)", span="6139-6139", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="ReflectionUtils.cs"];
m9_2661 [label="var serializedPerson = JsonConvert.SerializeObject(person)", span="6136-6136", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="ReflectionUtils.cs"];
m9_2658 [label="var person = PersonWithPrivateConstructor.CreatePerson()", span="6132-6132", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="ReflectionUtils.cs"];
m9_2660 [label="person.Age = 25", span="6134-6134", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="ReflectionUtils.cs"];
m9_2659 [label="person.Name = ''John Doe''", span="6133-6133", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="ReflectionUtils.cs"];
m9_2664 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", span="6130-6130", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="ReflectionUtils.cs"];
m9_811 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", span="1773-1773", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="ReflectionUtils.cs"];
m9_814 [label="Assert.AreEqual(''Apple'', deserializedProduct.Name)", span="1788-1788", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="ReflectionUtils.cs"];
m9_815 [label="Assert.AreEqual(new DateTime(2008, 12, 28, 0, 0, 0, DateTimeKind.Utc), deserializedProduct.ExpiryDate)", span="1789-1789", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="ReflectionUtils.cs"];
m9_816 [label="Assert.AreEqual(3.99m, deserializedProduct.Price)", span="1790-1790", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="ReflectionUtils.cs"];
m9_817 [label="Assert.AreEqual(''Small'', deserializedProduct.Sizes[0])", span="1791-1791", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="ReflectionUtils.cs"];
m9_818 [label="Assert.AreEqual(''Medium'', deserializedProduct.Sizes[1])", span="1792-1792", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="ReflectionUtils.cs"];
m9_819 [label="Assert.AreEqual(''Large'', deserializedProduct.Sizes[2])", span="1793-1793", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="ReflectionUtils.cs"];
m9_813 [label="Product deserializedProduct = (Product)JsonConvert.DeserializeObject(json, typeof(Product))", span="1786-1786", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="ReflectionUtils.cs"];
m9_812 [label="string json = @''/*comment*/ { /*comment*/\r\n        ''''Name'''': /*comment*/ ''''Apple'''' /*comment*/, /*comment*/\r\n        ''''ExpiryDate'''': ''''\/Date(1230422400000)\/'''',\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''': /*comment*/ [ /*comment*/\r\n          ''''Small'''', /*comment*/\r\n          ''''Medium'''' /*comment*/,\r\n          /*comment*/ ''''Large''''\r\n        /*comment*/ ] /*comment*/\r\n      } /*comment*/''", span="1775-1784", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="ReflectionUtils.cs"];
m9_820 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", span="1773-1773", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="ReflectionUtils.cs"];
m9_3151 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIncompleteNotTopLevel3DArray()", span="7310-7310", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIncompleteNotTopLevel3DArray()", file="ReflectionUtils.cs"];
m9_3152 [label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[/*hi*/[/*hi*/''", span="7312-7312", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIncompleteNotTopLevel3DArray()", file="ReflectionUtils.cs"];
m9_3153 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''Unexpected end when deserializing array. Path 'Coordinates[0]', line 1, position 48.'',\r\n        () => JsonConvert.DeserializeObject<Array3D>(json))", span="7314-7316", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIncompleteNotTopLevel3DArray()", file="ReflectionUtils.cs"];
m9_3154 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIncompleteNotTopLevel3DArray()", span="7310-7310", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIncompleteNotTopLevel3DArray()", file="ReflectionUtils.cs"];
m9_0 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.ReflectionUtils()", span="87-87", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ReflectionUtils()", file="ReflectionUtils.cs"];
m9_2 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.ReflectionUtils()", span="87-87", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ReflectionUtils()", file="ReflectionUtils.cs"];
m9_1 [label="EmptyTypes = Type.EmptyTypes", span="90-90", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ReflectionUtils()", file="ReflectionUtils.cs"];
m9_162 [label="Assert.AreEqual(''[0,1,2,3,4]'', jsonText)", span="466-466", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadOnlyCollectionSerialize()", file="ReflectionUtils.cs"];
m9_163 [label="ReadOnlyCollection<int> r2 = JsonConvert.DeserializeObject<ReadOnlyCollection<int>>(jsonText)", span="468-468", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadOnlyCollectionSerialize()", file="ReflectionUtils.cs"];
m9_164 [label="CollectionAssert.AreEqual(r1, r2)", span="470-470", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadOnlyCollectionSerialize()", file="ReflectionUtils.cs"];
m9_165 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadOnlyCollectionSerialize()", span="460-460", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadOnlyCollectionSerialize()", file="ReflectionUtils.cs"];
m9_166 [label="Entry System.Collections.ObjectModel.ReadOnlyCollection<T>.ReadOnlyCollection(System.Collections.Generic.IList<T>)", span="0-0", cluster="System.Collections.ObjectModel.ReadOnlyCollection<T>.ReadOnlyCollection(System.Collections.Generic.IList<T>)", file="ReflectionUtils.cs"];
m9_167 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", span="475-475", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="ReflectionUtils.cs"];
m9_168 [label="string json = @''[''''PRE\u003cPOST'''']''", span="477-477", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="ReflectionUtils.cs"];
m9_1518 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="ReflectionUtils.cs"];
m9_2842 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", span="6521-6521", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="ReflectionUtils.cs"];
m9_2845 [label="Assert.AreEqual(@''{\r\n  ''''EventName'''': ''''Blackadder III'''',\r\n  ''''Venue'''': ''''Gryphon Theatre'''',\r\n  ''''Performances'''': [\r\n    new Date(\r\n      1336458600000\r\n    ),\r\n    new Date(\r\n      1336545000000\r\n    ),\r\n    new Date(\r\n      1336636800000\r\n    )\r\n  ]\r\n}'', json)", span="6546-6560", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="ReflectionUtils.cs"];
m9_2844 [label="string json = JsonConvert.SerializeObject(e, Formatting.Indented)", span="6535-6535", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="ReflectionUtils.cs"];
m9_2843 [label="Event e = new Event\r\n        {\r\n          EventName = ''Blackadder III'',\r\n          Venue = ''Gryphon Theatre'',\r\n          Performances = new List<DateTime>\r\n            {\r\n              JsonConvert.ConvertJavaScriptTicksToDateTime(1336458600000),\r\n              JsonConvert.ConvertJavaScriptTicksToDateTime(1336545000000),\r\n              JsonConvert.ConvertJavaScriptTicksToDateTime(1336636800000)\r\n            }\r\n        }", span="6523-6533", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="ReflectionUtils.cs"];
m9_2846 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", span="6521-6521", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="ReflectionUtils.cs"];
m9_2074 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", span="4764-4764", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", file="ReflectionUtils.cs"];
m9_2075 [label="MultipleParamatrizedConstructorsJsonConstructor c = JsonConvert.DeserializeObject<MultipleParamatrizedConstructorsJsonConstructor>(''{Value:'value!', Age:1}'')", span="4766-4766", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", file="ReflectionUtils.cs"];
m9_2076 [label="Assert.AreEqual(''Public Paramatized 2'', c.Constructor)", span="4767-4767", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", file="ReflectionUtils.cs"];
m9_2077 [label="Assert.AreEqual(''value!'', c.Value)", span="4768-4768", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", file="ReflectionUtils.cs"];
m9_2078 [label="Assert.AreEqual(1, c.Age)", span="4769-4769", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", file="ReflectionUtils.cs"];
m9_2079 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", span="4764-4764", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", file="ReflectionUtils.cs"];
m9_323 [label=members, span="670-670", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m9_330 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", span="645-645", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m9_332 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetFields(System.Type, System.Reflection.BindingFlags)", span="921-921", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFields(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m9_333 [label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0", cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", file="ReflectionUtils.cs"];
m9_334 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", span="957-957", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m9_335 [label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0", cluster="System.Collections.Generic.List<T>.List(int)", file="ReflectionUtils.cs"];
m9_336 [label="Entry System.Collections.Generic.IEnumerable<TSource>.GroupBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.GroupBy<TSource, TKey>(System.Func<TSource, TKey>)", file="ReflectionUtils.cs"];
m9_337 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="ReflectionUtils.cs"];
m9_329 [label="return distinctMembers;", span="689-689", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m9_324 [label="resolvedMembers.Count == 0", span="675-675", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m9_328 [label="distinctMembers.AddRange(resolvedMembers)", span="685-685", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m9_325 [label="resolvedMembers.Add(memberInfo)", span="677-677", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m9_326 [label="!IsOverridenGenericMember(memberInfo, bindingAttr) || memberInfo.Name == ''Item''", span="679-679", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m9_327 [label="resolvedMembers.Add(memberInfo)", span="681-681", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m9_338 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="ReflectionUtils.cs"];
m9_1405 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", span="3223-3223", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="ReflectionUtils.cs"];
m9_1417 [label="ISerializableTestObject o2 = JsonConvert.DeserializeObject<ISerializableTestObject>(json)", span="3270-3270", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="ReflectionUtils.cs"];
m9_1420 [label="Assert.AreEqual(dateTimeOffset, o2._dateTimeOffsetValue)", span="3273-3273", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="ReflectionUtils.cs"];
m9_1416 [label="Assert.AreEqual(@''{\r\n  ''''stringValue'''': ''''String!'''',\r\n  ''''intValue'''': -2147483648,\r\n  ''''dateTimeOffsetValue'''': '''''' + dateTimeOffsetText + @'''''',\r\n  ''''personValue'''': {\r\n    ''''Name'''': ''''Name!'''',\r\n    ''''BirthDate'''': ''''\/Date(946688461000)\/'''',\r\n    ''''LastModified'''': ''''\/Date(946688461000)\/''''\r\n  },\r\n  ''''nullPersonValue'''': null,\r\n  ''''nullableInt'''': null,\r\n  ''''booleanValue'''': false,\r\n  ''''byteValue'''': 0,\r\n  ''''charValue'''': ''''\u0000'''',\r\n  ''''dateTimeValue'''': ''''\/Date(-62135596800000)\/'''',\r\n  ''''decimalValue'''': 0.0,\r\n  ''''shortValue'''': 0,\r\n  ''''longValue'''': 0,\r\n  ''''sbyteValue'''': 0,\r\n  ''''floatValue'''': 0.0,\r\n  ''''ushortValue'''': 0,\r\n  ''''uintValue'''': 0,\r\n  ''''ulongValue'''': 0\r\n}'', json)", span="3245-3268", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="ReflectionUtils.cs"];
m9_1418 [label="Assert.AreEqual(''String!'', o2._stringValue)", span="3271-3271", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="ReflectionUtils.cs"];
m9_1419 [label="Assert.AreEqual(int.MinValue, o2._intValue)", span="3272-3272", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="ReflectionUtils.cs"];
m9_1421 [label="Assert.AreEqual(''Name!'', o2._personValue.Name)", span="3274-3274", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="ReflectionUtils.cs"];
m9_1422 [label="Assert.AreEqual(null, o2._nullPersonValue)", span="3275-3275", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="ReflectionUtils.cs"];
m9_1423 [label="Assert.AreEqual(null, o2._nullableInt)", span="3276-3276", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="ReflectionUtils.cs"];
m9_1415 [label="string json = JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings\r\n        {\r\n          DateFormatHandling = DateFormatHandling.MicrosoftDateFormat\r\n        })", span="3241-3244", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="ReflectionUtils.cs"];
m9_1411 [label="DateTimeOffset dateTimeOffset = new DateTimeOffset(2000, 12, 20, 22, 59, 59, TimeSpan.FromHours(2))", span="3231-3231", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="ReflectionUtils.cs"];
m9_1413 [label="dateTimeOffsetText = @''\/Date(977345999000+0200)\/''", span="3234-3234", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="ReflectionUtils.cs"];
m9_1414 [label="ISerializableTestObject o = new ISerializableTestObject(''String!'', int.MinValue, dateTimeOffset, person)", span="3239-3239", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="ReflectionUtils.cs"];
m9_1407 [label="person.BirthDate = new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc)", span="3226-3226", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="ReflectionUtils.cs"];
m9_1410 [label="person.Name = ''Name!''", span="3229-3229", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="ReflectionUtils.cs"];
m9_1412 [label="string dateTimeOffsetText", span="3232-3232", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="ReflectionUtils.cs"];
m9_1406 [label="Person person = new Person()", span="3225-3225", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="ReflectionUtils.cs"];
m9_1408 [label="person.LastModified = person.BirthDate", span="3227-3227", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="ReflectionUtils.cs"];
m9_1409 [label="person.Department = ''Department!''", span="3228-3228", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="ReflectionUtils.cs"];
m9_1424 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", span="3223-3223", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="ReflectionUtils.cs"];
m9_3205 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", span="7558-7558", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="ReflectionUtils.cs"];
m9_3208 [label="Assert.AreEqual(@''{\r\n  ''''Object'''': 0.0,\r\n  ''''Float'''': 0.0,\r\n  ''''Double'''': 0.0,\r\n  ''''NullableFloat'''': null,\r\n  ''''NullableDouble'''': null,\r\n  ''''ObjectNull'''': null\r\n}'', json)", span="7574-7581", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="ReflectionUtils.cs"];
m9_3207 [label="string json = JsonConvert.SerializeObject(floats, Formatting.Indented, new JsonSerializerSettings\r\n        {\r\n          FloatFormatHandling = FloatFormatHandling.DefaultValue\r\n        })", span="7569-7572", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="ReflectionUtils.cs"];
m9_3206 [label="NullableFloats floats = new NullableFloats\r\n        {\r\n          Object = double.NaN,\r\n          ObjectNull = null,\r\n          Float = float.NaN,\r\n          NullableDouble = double.NaN,\r\n          NullableFloat = null\r\n        }", span="7560-7567", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="ReflectionUtils.cs"];
m9_3209 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", span="7558-7558", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="ReflectionUtils.cs"];
m9_255 [label="var anonymous =\r\n        new\r\n        {\r\n          DateValue = d\r\n        }", span="626-630", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="ReflectionUtils.cs"];
m9_2522 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", span="5857-5857", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="ReflectionUtils.cs"];
m9_2524 [label="var c = JsonConvert.DeserializeObject<NullableGuid>(json)", span="5860-5860", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="ReflectionUtils.cs"];
m9_2527 [label="c = JsonConvert.DeserializeObject<NullableGuid>(json)", span="5865-5865", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="ReflectionUtils.cs"];
m9_2525 [label="Assert.AreEqual(null, c.Id)", span="5862-5862", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="ReflectionUtils.cs"];
m9_2528 [label="Assert.AreEqual(new Guid(''d8220a4b-75b1-4b7a-8112-b7bdae956a45''), c.Id)", span="5867-5867", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="ReflectionUtils.cs"];
m9_2523 [label="string json = @''{''''Id'''':null}''", span="5859-5859", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="ReflectionUtils.cs"];
m9_2526 [label="json = @''{''''Id'''':''''d8220a4b-75b1-4b7a-8112-b7bdae956a45''''}''", span="5864-5864", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="ReflectionUtils.cs"];
m9_2529 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", span="5857-5857", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="ReflectionUtils.cs"];
m9_484 [label="ValidationUtils.ArgumentNotNull(targetType, nameof(targetType))", span="959-959", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m9_490 [label="int i = 0", span="975-975", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m9_491 [label="i < propertyInfos.Count", span="975-975", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m9_488 [label="propertyInfos.AddRange(i.GetProperties(bindingAttr))", span="968-968", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m9_485 [label="List<PropertyInfo> propertyInfos = new List<PropertyInfo>(targetType.GetProperties(bindingAttr))", span="961-961", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m9_489 [label="GetChildPrivateProperties(propertyInfos, targetType, bindingAttr)", span="972-972", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m9_487 [label="targetType.GetInterfaces()", span="966-966", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m9_486 [label="targetType.IsInterface()", span="964-964", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m9_492 [label="PropertyInfo member = propertyInfos[i]", span="977-977", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m9_2359 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>)", file="ReflectionUtils.cs"];
m9_706 [label="Entry Newtonsoft.Json.Tests.TestObjects.SubKlass.SubKlass(string)", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.SubKlass.SubKlass(string)", file="ReflectionUtils.cs"];
m9_2342 [label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="115-115", cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="ReflectionUtils.cs"];
m9_854 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", span="1877-1877", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="ReflectionUtils.cs"];
m9_856 [label="Content content = JsonConvert.DeserializeObject<Content>(json)", span="1893-1893", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="ReflectionUtils.cs"];
m9_857 [label="Assert.AreEqual(''Blah, blah, blah'', content.Text)", span="1895-1895", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="ReflectionUtils.cs"];
m9_858 [label="Assert.AreEqual(2, content.Children.Count)", span="1896-1896", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="ReflectionUtils.cs"];
m9_859 [label="Assert.AreEqual(''First'', content.Children[0].Text)", span="1897-1897", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="ReflectionUtils.cs"];
m9_860 [label="Assert.AreEqual(''Second'', content.Children[1].Text)", span="1898-1898", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="ReflectionUtils.cs"];
m9_855 [label="string json = @''{\r\n  ''''Children'''': [\r\n    {\r\n      ''''Children'''': null,\r\n      ''''Text'''': ''''First''''\r\n    },\r\n    {\r\n      ''''Children'''': null,\r\n      ''''Text'''': ''''Second''''\r\n    }\r\n  ],\r\n  ''''Text'''': ''''Blah, blah, blah''''\r\n}''", span="1879-1891", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="ReflectionUtils.cs"];
m9_861 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", span="1877-1877", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="ReflectionUtils.cs"];
m9_3315 [label="Entry Newtonsoft.Json.Tests.Serialization.AnswerFilterModel.AnswerFilterModel()", span="8139-8139", cluster="Newtonsoft.Json.Tests.Serialization.AnswerFilterModel.AnswerFilterModel()", file="ReflectionUtils.cs"];
m9_3421 [label="this.answerValues = (from answer in Enum.GetNames(typeof(Antworten))\r\n                           select new SelectListItem { Text = answer, Value = answer, Selected = false })\r\n                           .ToList()", span="8141-8143", cluster="Newtonsoft.Json.Tests.Serialization.AnswerFilterModel.AnswerFilterModel()", file="ReflectionUtils.cs"];
m9_3422 [label="Exit Newtonsoft.Json.Tests.Serialization.AnswerFilterModel.AnswerFilterModel()", span="8139-8139", cluster="Newtonsoft.Json.Tests.Serialization.AnswerFilterModel.AnswerFilterModel()", file="ReflectionUtils.cs"];
m9_1172 [label="Entry lambda expression", span="2647-2647", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_102 [label="Assert.AreEqual(@''{''''Field'''':0,''''Property'''':21}'', json)", span="297-297", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="ReflectionUtils.cs"];
m9_103 [label="JsonIgnoreAttributeTestClass c = JsonConvert.DeserializeObject<JsonIgnoreAttributeTestClass>(@''{''''Field'''':99,''''Property'''':-1,''''IgnoredField'''':-1,''''IgnoredObject'''':[1,2,3,4,5]}'')", span="299-299", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="ReflectionUtils.cs"];
m9_104 [label="Assert.AreEqual(0, c.IgnoredField)", span="301-301", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="ReflectionUtils.cs"];
m9_343 [label="expected = @''{\r\n  ''''String'''': ''''string'''',\r\n  ''''Int32'''': 2147483647,\r\n  ''''UInt32'''': 4294967295,\r\n  ''''Byte'''': 255,\r\n  ''''SByte'''': 127,\r\n  ''''Short'''': 32767,\r\n  ''''UShort'''': 65535,\r\n  ''''Long'''': 9223372036854775807,\r\n  ''''ULong'''': 9223372036854775807,\r\n  ''''Double'''': 1.7976931348623157E+308,\r\n  ''''Float'''': 3.40282347E+38,\r\n  ''''DBNull'''': null,\r\n  ''''Bool'''': true,\r\n  ''''Char'''': ''''\u0000''''\r\n}''", span="755-770", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="ReflectionUtils.cs"];
m9_344 [label="Assert.AreEqual(expected, json)", span="789-789", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="ReflectionUtils.cs"];
m9_345 [label="ConverableMembers c = JsonConvert.DeserializeObject<ConverableMembers>(json)", span="791-791", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="ReflectionUtils.cs"];
m9_460 [label="MemberConverterClass m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json)", span="980-980", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="ReflectionUtils.cs"];
m9_461 [label="Assert.AreEqual(testDate, m2.DefaultConverter)", span="982-982", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="ReflectionUtils.cs"];
m9_462 [label="Assert.AreEqual(testDate, m2.MemberConverter)", span="983-983", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="ReflectionUtils.cs"];
m9_524 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", span="1091-1091", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", file="ReflectionUtils.cs"];
m9_541 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", span="1126-1126", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="ReflectionUtils.cs"];
m9_542 [label="string json = @''{''''first_name'''':''''FirstNameValue'''',''''RawContent'''':[1,2,3,4,5],''''last_name'''':''''LastNameValue''''}''", span="1128-1128", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="ReflectionUtils.cs", color=green, community=0];
m9_604 [label="JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="1255-1255", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_619 [label="JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="1290-1290", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_930 [label="JsonConvert.DeserializeObject<TestObjects.Event>(json)", span="2067-2067", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_957 [label="JsonConvert.DeserializeObject<Person>(json)", span="2113-2113", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_964 [label="JsonConvert.DeserializeObject<Dictionary<string, string>>(json)", span="2128-2128", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_971 [label="JsonConvert.DeserializeObject<Exception>(json)", span="2144-2144", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_978 [label="JsonConvert.DeserializeObject<double>(json)", span="2160-2160", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_985 [label="JsonConvert.DeserializeObject<DynamicDictionary>(json)", span="2176-2176", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_992 [label="JsonConvert.DeserializeObject<JObject>(json)", span="2190-2190", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_999 [label="JsonConvert.DeserializeObject<Person>(json)", span="2203-2203", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_1006 [label="JsonConvert.DeserializeObject<List<Person>>(json)", span="2216-2216", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_1013 [label="JsonConvert.DeserializeObject<List<Person>>(json)", span="2231-2231", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_1123 [label="JsonConvert.DeserializeObject<Dictionary<Person, int>>(json)", span="2466-2466", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_1686 [label="JsonConvert.DeserializeObject<Dictionary<string, object>>(json)", span="3849-3849", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_1700 [label="JsonConvert.DeserializeObject<Dictionary<string, object>>(json)", span="3872-3872", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_1876 [label="JsonConvert.DeserializeObject<StringDictionaryTestClass>(json)", span="4287-4287", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_2392 [label="JsonConvert.DeserializeObject<IList<KeyValuePair<string, IList<string>>>>(json)", span="5607-5607", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_2478 [label="List<int> numbers = JsonConvert.DeserializeObject<List<int>>(json)", span="5760-5760", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_2492 [label="JsonConvert.DeserializeObject<ConvertableIntTestClass>(json)", span="5801-5801", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_2513 [label="JsonConvert.DeserializeObject<TestObjects.MyClass>(json)", span="5838-5838", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_2520 [label="JsonConvert.DeserializeObject<TestObjects.MyClass>(json)", span="5852-5852", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_2595 [label="JsonConvert.DeserializeObject<double>('''')", span="6004-6004", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_2601 [label="JsonConvert.DeserializeObject<StringComparison>('''')", span="6015-6015", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_2607 [label="JsonConvert.DeserializeObject<int>('''')", span="6026-6026", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_2617 [label="JsonConvert.DeserializeObject<double>(null)", span="6045-6045", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_2968 [label="JsonConvert.DeserializeObject<EnumerableClassFailure<string>>(json)", span="6843-6843", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_3013 [label="obj = JsonConvert.DeserializeObject<MyTuple<int>>(json)", span="6955-6955", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_3082 [label="JsonConvert.DeserializeObject<Array2D>(json)", span="7205-7205", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_3089 [label="JsonConvert.DeserializeObject<Array2D>(json)", span="7215-7215", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_3109 [label="JsonConvert.DeserializeObject<Array3D>(json)", span="7245-7245", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_3116 [label="JsonConvert.DeserializeObject<Array3D>(json)", span="7255-7255", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_3123 [label="JsonConvert.DeserializeObject<Array3D>(json)", span="7265-7265", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_3149 [label="JsonConvert.DeserializeObject<Array3D>(json)", span="7306-7306", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_3156 [label="JsonConvert.DeserializeObject<Array3D>(json)", span="7316-7316", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_3250 [label="JsonConvert.DeserializeObject<IList<long>>(json)", span="7691-7691", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_3407 [label="JsonConvert.DeserializeObject<PrivateDefaultCtorList<int>>(''[1,2]'')", span="8080-8080", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_142 [label="implementingType = type", span="316-316", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs"];
m9_611 [label="string json = JsonConvert.SerializeObject(requiredMembersClass)", span="1274-1274", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_603 [label="string json = @''{\r\n  ''''FirstName'''': null,\r\n  ''''MiddleName'''': null,\r\n  ''''LastName'''': null,\r\n  ''''BirthDate'''': ''''\/Date(977309755000)\/''''\r\n}''", span="1248-1253", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_605 [label="Exit lambda expression", span="1246-1256", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_618 [label="string json = @''{\r\n  ''''FirstName'''': ''''Bob''''\r\n}''", span="1286-1288", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_620 [label="Exit lambda expression", span="1284-1291", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_929 [label="Entry lambda expression", span="2065-2068", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_931 [label="Exit lambda expression", span="2065-2068", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_956 [label="Entry lambda expression", span="2111-2114", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_958 [label="Exit lambda expression", span="2111-2114", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_963 [label="Entry lambda expression", span="2126-2129", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_965 [label="Exit lambda expression", span="2126-2129", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_970 [label="Entry lambda expression", span="2142-2145", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_972 [label="Exit lambda expression", span="2142-2145", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_977 [label="Entry lambda expression", span="2158-2161", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_979 [label="Exit lambda expression", span="2158-2161", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_984 [label="Entry lambda expression", span="2174-2177", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_986 [label="Exit lambda expression", span="2174-2177", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_991 [label="Entry lambda expression", span="2188-2191", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_993 [label="Exit lambda expression", span="2188-2191", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_998 [label="Entry lambda expression", span="2201-2204", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_1000 [label="Exit lambda expression", span="2201-2204", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_1005 [label="Entry lambda expression", span="2214-2217", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_1007 [label="Exit lambda expression", span="2214-2217", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_1012 [label="Entry lambda expression", span="2229-2232", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_1014 [label="Exit lambda expression", span="2229-2232", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_1122 [label="string json =\r\n          @''{\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Person'''': 1,\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Person'''': 2\r\n}''", span="2460-2464", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_1124 [label="Exit lambda expression", span="2458-2467", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_1685 [label="Entry lambda expression", span="3847-3850", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_1687 [label="Exit lambda expression", span="3847-3850", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_1699 [label="var json = JsonConvert.SerializeObject(child, Formatting.Indented)", span="3871-3871", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_1701 [label="Exit lambda expression", span="3858-3873", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_1875 [label="Entry lambda expression", span="4285-4288", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_1877 [label="Exit lambda expression", span="4285-4288", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_2391 [label="Entry lambda expression", span="5605-5608", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_2393 [label="Exit lambda expression", span="5605-5608", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_2477 [label="Entry lambda expression", span="5758-5761", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_2479 [label="Exit lambda expression", span="5758-5761", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_2491 [label="Entry lambda expression", span="5801-5801", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_2493 [label="Exit lambda expression", span="5801-5801", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_2512 [label="string json = @''{\r\n  ''''PreProperty'''': true,\r\n  ''''PostProperty'''': ''''-1''''\r\n}''", span="5833-5836", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_2514 [label="Exit lambda expression", span="5831-5839", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_2519 [label="string json = @''{\r\n  ''''PreProperty'''': ''", span="5849-5850", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_2521 [label="Exit lambda expression", span="5847-5853", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_2594 [label="Entry lambda expression", span="6002-6005", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_2596 [label="Exit lambda expression", span="6002-6005", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_2600 [label="Entry lambda expression", span="6013-6016", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_2602 [label="Exit lambda expression", span="6013-6016", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_2606 [label="Entry lambda expression", span="6024-6027", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_2608 [label="Exit lambda expression", span="6024-6027", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_2616 [label="Entry lambda expression", span="6043-6046", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_2618 [label="Exit lambda expression", span="6043-6046", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_2967 [label="Entry lambda expression", span="6843-6843", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_2969 [label="Exit lambda expression", span="6843-6843", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_3012 [label="Entry lambda expression", span="6953-6956", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_3014 [label="Exit lambda expression", span="6953-6956", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_3081 [label="Entry lambda expression", span="7205-7205", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_3083 [label="Exit lambda expression", span="7205-7205", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_3088 [label="Entry lambda expression", span="7215-7215", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_3090 [label="Exit lambda expression", span="7215-7215", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_3108 [label="Entry lambda expression", span="7245-7245", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_3110 [label="Exit lambda expression", span="7245-7245", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_3115 [label="Entry lambda expression", span="7255-7255", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_3117 [label="Exit lambda expression", span="7255-7255", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_3122 [label="Entry lambda expression", span="7265-7265", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_3124 [label="Exit lambda expression", span="7265-7265", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_3148 [label="Entry lambda expression", span="7306-7306", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_3150 [label="Exit lambda expression", span="7306-7306", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_3155 [label="Entry lambda expression", span="7316-7316", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_3157 [label="Exit lambda expression", span="7316-7316", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_3249 [label="Entry lambda expression", span="7691-7691", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_3251 [label="Exit lambda expression", span="7691-7691", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_3406 [label="Entry lambda expression", span="8080-8080", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_3408 [label="Exit lambda expression", span="8080-8080", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_141 [label="genericInterfaceDefinition == interfaceDefinition", span="314-314", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs"];
m9_143 [label="return true;", span="317-317", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs"];
m9_610 [label="RequiredMembersClass requiredMembersClass = new RequiredMembersClass\r\n            {\r\n              FirstName = null,\r\n              BirthDate = new DateTime(2000, 10, 10, 10, 10, 10, DateTimeKind.Utc),\r\n              LastName = null,\r\n              MiddleName = null\r\n            }", span="1266-1272", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_612 [label="Console.WriteLine(json)", span="1275-1275", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_655 [label="InterfacePropertyTestClass testFromDe = (InterfacePropertyTestClass)JsonConvert.DeserializeObject(strFromTest, typeof(InterfacePropertyTestClass))", span="1380-1380", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_602 [label="Entry lambda expression", span="1246-1256", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_617 [label="Entry lambda expression", span="1284-1291", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_1121 [label="Entry lambda expression", span="2458-2467", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_1698 [label="child.Add(''Father'', reference)", span="3869-3869", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_1695 [label="var child = new Dictionary<string, object>()", span="3866-3866", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_1691 [label="Entry lambda expression", span="3858-3873", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_2511 [label="Entry lambda expression", span="5831-5839", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_2518 [label="Entry lambda expression", span="5847-5853", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_472 [label="BindingFlags nonPublicBindingAttr = bindingAttr.RemoveFlag(BindingFlags.Public)", span="943-943", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateFields(System.Collections.Generic.IList<System.Reflection.MemberInfo>, System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m9_471 [label="(bindingAttr & BindingFlags.NonPublic) != 0", span="940-940", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateFields(System.Collections.Generic.IList<System.Reflection.MemberInfo>, System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m9_2730 [label="errors.Add(e.ErrorContext.Error.Message)", span="6259-6259", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_2745 [label="errors.Add(e.ErrorContext.Error.Message)", span="6284-6284", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_2760 [label="errors.Add(e.ErrorContext.Error.Message)", span="6307-6307", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_1693 [label="reference.Add(''$ref'', 1)", span="3863-3863", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_1694 [label="reference.Add(''$id'', 1)", span="3864-3864", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_1696 [label="child.Add(''_id'', 2)", span="3867-3867", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_1697 [label="child.Add(''Name'', ''Isabell'')", span="3868-3868", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_609 [label="Entry lambda expression", span="1264-1276", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_613 [label="Exit lambda expression", span="1264-1276", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_654 [label="Entry lambda expression", span="1378-1381", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_656 [label="Exit lambda expression", span="1378-1381", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_744 [label="JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings { ReferenceLoopHandling = ReferenceLoopHandling.Ignore })", span="1577-1577", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_1039 [label="JsonConvert.SerializeObject(new MemoryStream(), new JsonSerializerSettings\r\n          {\r\n            ContractResolver = new DefaultContractResolver\r\n            {\r\n#if !(SILVERLIGHT || NETFX_CORE || PORTABLE)\r\n              IgnoreSerializableAttribute = true\r\n#endif\r\n            }\r\n          })", span="2277-2285", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_1046 [label="JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:0}'', new JsonSerializerSettings\r\n          {\r\n            ContractResolver = new DefaultContractResolver\r\n            {\r\n#if !(SILVERLIGHT || NETFX_CORE || PORTABLE)\r\n              IgnoreSerializableAttribute = true\r\n#endif\r\n            }\r\n          })", span="2296-2304", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_1052 [label="JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:''}'', new JsonSerializerSettings\r\n            {\r\n              ContractResolver = new DefaultContractResolver\r\n                {\r\n#if !(SILVERLIGHT || NETFX_CORE || PORTABLE)\r\n                  IgnoreSerializableAttribute = true\r\n#endif\r\n                }\r\n            })", span="2315-2323", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_1058 [label="JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:null}'', new JsonSerializerSettings\r\n          {\r\n            ContractResolver = new DefaultContractResolver\r\n            {\r\n#if !(SILVERLIGHT || NETFX_CORE || PORTABLE)\r\n              IgnoreSerializableAttribute = true\r\n#endif\r\n            }\r\n          })", span="2334-2342", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_1209 [label="JsonConvert.DeserializeObject<DictionaryWithNoDefaultConstructor>(json, new JsonSerializerSettings { PreserveReferencesHandling = PreserveReferencesHandling.All })", span="2741-2741", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_1692 [label="var reference = new Dictionary<string, object>()", span="3862-3862", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_2107 [label="JsonConvert.DeserializeObject(''null'', typeof(DateTime))", span="4857-4857", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_2623 [label="JsonConvert.DeserializeObject(null)", span="6057-6057", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_2876 [label="s.Deserialize<Dictionary<string, int>>(new JsonTextReader(new StringReader(json)))", span="6636-6636", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_2892 [label="var reader = new JsonTextReader(new StringReader(json))", span="6690-6690", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_2895 [label="serializer.Deserialize(reader, typeof (MyType))", span="6694-6694", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_473 [label="(targetType = targetType.BaseType()) != null", span="945-945", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateFields(System.Collections.Generic.IList<System.Reflection.MemberInfo>, System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m9_1028 [label="JsonConvert.PopulateObject(json, new List<Person>())", span="2257-2257", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_2731 [label="e.ErrorContext.Handled = true", span="6260-6260", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_2729 [label="Entry lambda expression", span="6257-6261", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_2746 [label="e.ErrorContext.Handled = true", span="6285-6285", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_2744 [label="Entry lambda expression", span="6282-6286", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_2761 [label="e.ErrorContext.Handled = true", span="6308-6308", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_2759 [label="Entry lambda expression", span="6305-6309", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_2890 [label="JsonSerializer serializer = new JsonSerializer()", span="6687-6687", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_742 [label="JsonPropertyWithHandlingValues o = new JsonPropertyWithHandlingValues()", span="1574-1574", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_743 [label="o.ReferenceLoopHandlingErrorProperty = o", span="1575-1575", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_745 [label="Exit lambda expression", span="1572-1578", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_1038 [label="Entry lambda expression", span="2275-2286", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_1040 [label="Exit lambda expression", span="2275-2286", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_1045 [label="Entry lambda expression", span="2294-2305", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_1047 [label="Exit lambda expression", span="2294-2305", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_1051 [label="Entry lambda expression", span="2313-2324", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_1053 [label="Exit lambda expression", span="2313-2324", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_1057 [label="Entry lambda expression", span="2332-2343", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_1059 [label="Exit lambda expression", span="2332-2343", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_1208 [label="Entry lambda expression", span="2741-2741", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_1210 [label="Exit lambda expression", span="2741-2741", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_2106 [label="Entry lambda expression", span="4855-4858", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_2108 [label="Exit lambda expression", span="4855-4858", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_2622 [label="Entry lambda expression", span="6055-6058", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_2624 [label="Exit lambda expression", span="6055-6058", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_2875 [label="Entry lambda expression", span="6634-6637", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_2877 [label="Exit lambda expression", span="6634-6637", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_2889 [label="string json = ''[{},1]''", span="6685-6685", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_2891 [label="serializer.CheckAdditionalContent = true", span="6688-6688", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_2893 [label="reader.Read()", span="6691-6691", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_2894 [label="reader.Read()", span="6692-6692", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_2896 [label="Exit lambda expression", span="6683-6695", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_741 [label="Entry lambda expression", span="1572-1578", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_1019 [label="Entry lambda expression", span="2242-2245", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_1027 [label="Entry lambda expression", span="2255-2258", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_2888 [label="Entry lambda expression", span="6683-6695", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_1020 [label="JsonConvert.PopulateObject(json, new Person())", span="2244-2244", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_1029 [label="Exit lambda expression", span="2255-2258", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_2732 [label="Exit lambda expression", span="6257-6261", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_2747 [label="Exit lambda expression", span="6282-6286", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_2762 [label="Exit lambda expression", span="6305-6309", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_1173 [label="x.Id == id", span="2647-2647", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_1021 [label="Exit lambda expression", span="2242-2245", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_1174 [label="Exit lambda expression", span="2647-2647", cluster="lambda expression", file="ReflectionUtils.cs"];
m9_1168 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="ReflectionUtils.cs"];
m9_38 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", span="204-204", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="ReflectionUtils.cs"];
m9_1574 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", span="3637-3637", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", file="ReflectionUtils.cs"];
m9_1577 [label="Assert.AreEqual(@''''''host\\user'''''', serialized)", span="3641-3641", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", file="ReflectionUtils.cs"];
m9_1580 [label="Assert.AreEqual(@''{''''5'''':''''host\\user''''}'', JsonConvert.SerializeObject(d1))", span="3645-3645", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", file="ReflectionUtils.cs"];
m9_1583 [label="Assert.AreEqual(@''{''''host\\user'''':5}'', JsonConvert.SerializeObject(d2))", span="3649-3649", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", file="ReflectionUtils.cs"];
m9_1576 [label="string serialized = JsonConvert.SerializeObject(s)", span="3640-3640", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", file="ReflectionUtils.cs"];
m9_1578 [label="Dictionary<int, object> d1 = new Dictionary<int, object>()", span="3643-3643", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", file="ReflectionUtils.cs"];
m9_1579 [label="d1.Add(5, s)", span="3644-3644", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", file="ReflectionUtils.cs"];
m9_1581 [label="Dictionary<string, object> d2 = new Dictionary<string, object>()", span="3647-3647", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", file="ReflectionUtils.cs"];
m9_1582 [label="d2.Add(s, 5)", span="3648-3648", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", file="ReflectionUtils.cs"];
m9_1575 [label="string s = @''host\user''", span="3639-3639", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", file="ReflectionUtils.cs"];
m9_1584 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", span="3637-3637", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", file="ReflectionUtils.cs"];
m9_2976 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", span="6879-6879", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="ReflectionUtils.cs"];
m9_2982 [label="Assert.AreEqual(''[1.1,0.0,0.0]'', json)", span="6893-6893", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="ReflectionUtils.cs"];
m9_2979 [label="json = JsonConvert.SerializeObject(d)", span="6884-6884", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="ReflectionUtils.cs"];
m9_2981 [label="json = JsonConvert.SerializeObject(d, new JsonSerializerSettings {FloatFormatHandling = FloatFormatHandling.DefaultValue})", span="6890-6890", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="ReflectionUtils.cs"];
m9_2978 [label="IList<double> d = new List<double> {1.1, double.NaN, double.PositiveInfinity}", span="6882-6882", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="ReflectionUtils.cs"];
m9_2980 [label="json = JsonConvert.SerializeObject(d, new JsonSerializerSettings { FloatFormatHandling = FloatFormatHandling.Symbol })", span="6887-6887", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="ReflectionUtils.cs"];
m9_2977 [label="string json", span="6881-6881", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="ReflectionUtils.cs"];
m9_2983 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", span="6879-6879", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="ReflectionUtils.cs"];
m9_54 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", span="182-182", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="ReflectionUtils.cs"];
m9_2939 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass<T>.GetEnumerator()", span="6784-6784", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass<T>.GetEnumerator()", file="ReflectionUtils.cs"];
m9_2940 [label="return _values.GetEnumerator();", span="6786-6786", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass<T>.GetEnumerator()", file="ReflectionUtils.cs"];
m9_2941 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass<T>.GetEnumerator()", span="6784-6784", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass<T>.GetEnumerator()", file="ReflectionUtils.cs"];
m9_494 [label="PropertyInfo declaredMember = (PropertyInfo)GetMemberInfoFromType(member.DeclaringType, member)", span="980-980", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m9_497 [label="return propertyInfos;", span="985-985", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m9_498 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", span="957-957", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m9_496 [label="i++", span="975-975", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m9_495 [label="propertyInfos[i] = declaredMember", span="981-981", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m9_499 [label="Entry System.Type.GetProperties(System.Reflection.BindingFlags)", span="0-0", cluster="System.Type.GetProperties(System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m9_106 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", span="293-293", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="ReflectionUtils.cs"];
m9_3341 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyCollection()", span="7919-7919", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyCollection()", file="ReflectionUtils.cs"];
m9_3342 [label="ReadOnlyCollection<int> list = JsonConvert.DeserializeObject<ReadOnlyCollection<int>>(''[1,2,3]'')", span="7921-7921", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyCollection()", file="ReflectionUtils.cs"];
m9_3343 [label="Assert.AreEqual(3, list.Count)", span="7923-7923", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyCollection()", file="ReflectionUtils.cs"];
m9_3344 [label="Assert.AreEqual(1, list[0])", span="7925-7925", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyCollection()", file="ReflectionUtils.cs"];
m9_3345 [label="Assert.AreEqual(2, list[1])", span="7926-7926", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyCollection()", file="ReflectionUtils.cs"];
m9_3346 [label="Assert.AreEqual(3, list[2])", span="7927-7927", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyCollection()", file="ReflectionUtils.cs"];
m9_3347 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyCollection()", span="7919-7919", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyCollection()", file="ReflectionUtils.cs"];
m9_1137 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="ReflectionUtils.cs"];
m9_1048 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", span="2309-2309", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", file="ReflectionUtils.cs"];
m9_1049 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        @''Error converting value {null} to type 'System.Int32'. Path 'ReadTimeout', line 1, position 15.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:''}'', new JsonSerializerSettings\r\n            {\r\n              ContractResolver = new DefaultContractResolver\r\n                {\r\n#if !(SILVERLIGHT || NETFX_CORE || PORTABLE)\r\n                  IgnoreSerializableAttribute = true\r\n#endif\r\n                }\r\n            });\r\n        })", span="2311-2324", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", file="ReflectionUtils.cs"];
m9_1050 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", span="2309-2309", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", file="ReflectionUtils.cs"];
m9_2847 [label="Entry Newtonsoft.Json.Tests.Serialization.Event.Event()", span="8209-8209", cluster="Newtonsoft.Json.Tests.Serialization.Event.Event()", file="ReflectionUtils.cs"];
m9_3052 [label="Entry Newtonsoft.Json.Tests.Serialization.Array3DWithConverter.Array3DWithConverter()", span="8508-8508", cluster="Newtonsoft.Json.Tests.Serialization.Array3DWithConverter.Array3DWithConverter()", file="ReflectionUtils.cs"];
m9_2922 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", span="6742-6742", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", file="ReflectionUtils.cs"];
m9_2923 [label="var actual = JsonConvert.DeserializeObject<MyType>(@''{ ''''MyProperty'''':{''''Key'''':''''Y''''}}'')", span="6744-6744", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", file="ReflectionUtils.cs"];
m9_2924 [label="Assert.AreEqual(''X'', actual.MyProperty[''Key''])", span="6745-6745", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", file="ReflectionUtils.cs"];
m9_2925 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", span="6742-6742", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", file="ReflectionUtils.cs"];
m9_1125 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", span="2471-2471", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="ReflectionUtils.cs"];
m9_1131 [label="SearchResult searchResult = JsonConvert.DeserializeObject<SearchResult>(result.ToString())", span="2534-2534", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="ReflectionUtils.cs"];
m9_1133 [label="Assert.AreEqual(2, searchResults.Count)", span="2546-2546", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="ReflectionUtils.cs"];
m9_1134 [label="Assert.AreEqual(''<b>Paris Hilton</b> - Wikipedia, the free encyclopedia'', searchResults[0].Title)", span="2547-2547", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="ReflectionUtils.cs"];
m9_1135 [label="Assert.AreEqual(''<b>Paris Hilton</b>'', searchResults[1].Title)", span="2548-2548", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="ReflectionUtils.cs"];
m9_1130 [label=results, span="2532-2532", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="ReflectionUtils.cs"];
m9_1132 [label="searchResults.Add(searchResult)", span="2535-2535", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="ReflectionUtils.cs"];
m9_1129 [label="IList<SearchResult> searchResults = new List<SearchResult>()", span="2531-2531", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="ReflectionUtils.cs"];
m9_1128 [label="IList<JToken> results = googleSearch[''responseData''][''results''].Children().ToList()", span="2528-2528", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="ReflectionUtils.cs"];
m9_1127 [label="JObject googleSearch = JObject.Parse(googleSearchText)", span="2525-2525", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="ReflectionUtils.cs"];
m9_1126 [label="string googleSearchText = @''{\r\n        ''''responseData'''': {\r\n          ''''results'''': [\r\n            {\r\n              ''''GsearchResultClass'''': ''''GwebSearch'''',\r\n              ''''unescapedUrl'''': ''''http://en.wikipedia.org/wiki/Paris_Hilton'''',\r\n              ''''url'''': ''''http://en.wikipedia.org/wiki/Paris_Hilton'''',\r\n              ''''visibleUrl'''': ''''en.wikipedia.org'''',\r\n              ''''cacheUrl'''': ''''http://www.google.com/search?q=cache:TwrPfhd22hYJ:en.wikipedia.org'''',\r\n              ''''title'''': ''''<b>Paris Hilton</b> - Wikipedia, the free encyclopedia'''',\r\n              ''''titleNoFormatting'''': ''''Paris Hilton - Wikipedia, the free encyclopedia'''',\r\n              ''''content'''': ''''[1] In 2006, she released her debut album...''''\r\n            },\r\n            {\r\n              ''''GsearchResultClass'''': ''''GwebSearch'''',\r\n              ''''unescapedUrl'''': ''''http://www.imdb.com/name/nm0385296/'''',\r\n              ''''url'''': ''''http://www.imdb.com/name/nm0385296/'''',\r\n              ''''visibleUrl'''': ''''www.imdb.com'''',\r\n              ''''cacheUrl'''': ''''http://www.google.com/search?q=cache:1i34KkqnsooJ:www.imdb.com'''',\r\n              ''''title'''': ''''<b>Paris Hilton</b>'''',\r\n              ''''titleNoFormatting'''': ''''Paris Hilton'''',\r\n              ''''content'''': ''''Self: Zoolander. Socialite <b>Paris Hilton</b>...''''\r\n            }\r\n          ],\r\n          ''''cursor'''': {\r\n            ''''pages'''': [\r\n              {\r\n                ''''start'''': ''''0'''',\r\n                ''''label'''': 1\r\n              },\r\n              {\r\n                ''''start'''': ''''4'''',\r\n                ''''label'''': 2\r\n              },\r\n              {\r\n                ''''start'''': ''''8'''',\r\n                ''''label'''': 3\r\n              },\r\n              {\r\n                ''''start'''': ''''12'''',\r\n                ''''label'''': 4\r\n              }\r\n            ],\r\n            ''''estimatedResultCount'''': ''''59600000'''',\r\n            ''''currentPageIndex'''': 0,\r\n            ''''moreResultsUrl'''': ''''http://www.google.com/search?oe=utf8&ie=utf8...''''\r\n          }\r\n        },\r\n        ''''responseDetails'''': null,\r\n        ''''responseStatus'''': 200\r\n      }''", span="2473-2523", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="ReflectionUtils.cs"];
m9_1136 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", span="2471-2471", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="ReflectionUtils.cs"];
m9_1429 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", span="3293-3293", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="ReflectionUtils.cs"];
m9_1430 [label="List<KVPair<string, string>> kvPairs =\r\n        JsonConvert.DeserializeObject<List<KVPair<string, string>>>(\r\n          ''[{\''Key\'':\''Two\'',\''Value\'':\''2\''},{\''Key\'':\''One\'',\''Value\'':\''1\''}]'')", span="3295-3297", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="ReflectionUtils.cs"];
m9_1431 [label="Assert.AreEqual(2, kvPairs.Count)", span="3299-3299", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="ReflectionUtils.cs"];
m9_1432 [label="Assert.AreEqual(''Two'', kvPairs[0].Key)", span="3300-3300", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="ReflectionUtils.cs"];
m9_1433 [label="Assert.AreEqual(''2'', kvPairs[0].Value)", span="3301-3301", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="ReflectionUtils.cs"];
m9_1434 [label="Assert.AreEqual(''One'', kvPairs[1].Key)", span="3302-3302", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="ReflectionUtils.cs"];
m9_1435 [label="Assert.AreEqual(''1'', kvPairs[1].Value)", span="3303-3303", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="ReflectionUtils.cs"];
m9_1436 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", span="3293-3293", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="ReflectionUtils.cs"];
m9_1273 [label="Entry System.Collections.Generic.ICollection<T>.CopyTo(T[], int)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.CopyTo(T[], int)", file="ReflectionUtils.cs"];
m9_646 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", span="1370-1370", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="ReflectionUtils.cs"];
m9_649 [label="String strFromTest = JsonConvert.SerializeObject(testClass)", span="1374-1374", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="ReflectionUtils.cs"];
m9_647 [label="InterfacePropertyTestClass testClass = new InterfacePropertyTestClass()", span="1372-1372", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="ReflectionUtils.cs"];
m9_648 [label="testClass.co = new Co()", span="1373-1373", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="ReflectionUtils.cs"];
m9_650 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        @''Could not create an instance of type Newtonsoft.Json.Tests.TestObjects.ICo. Type is an interface or abstract class and cannot be instantiated. Path 'co.Name', line 1, position 14.'',\r\n        () =>\r\n        {\r\n          InterfacePropertyTestClass testFromDe = (InterfacePropertyTestClass)JsonConvert.DeserializeObject(strFromTest, typeof(InterfacePropertyTestClass));\r\n        })", span="1376-1381", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="ReflectionUtils.cs"];
m9_651 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", span="1370-1370", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="ReflectionUtils.cs"];
m9_2613 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", span="6038-6038", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", file="ReflectionUtils.cs"];
m9_2614 [label="ExceptionAssert.Throws<ArgumentNullException>(\r\n        @''Value cannot be null.\r\nParameter name: value'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<double>(null);\r\n        })", span="6040-6046", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", file="ReflectionUtils.cs"];
m9_2615 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", span="6038-6038", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", file="ReflectionUtils.cs"];
m9_1111 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", span="2440-2440", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="ReflectionUtils.cs"];
m9_1116 [label="Assert.AreEqual(@''{\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Person'''': 1,\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Person'''': 2\r\n}'', json)", span="2448-2451", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="ReflectionUtils.cs"];
m9_1115 [label="string json = JsonConvert.SerializeObject(dictionary, Formatting.Indented)", span="2446-2446", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="ReflectionUtils.cs"];
m9_1112 [label="Dictionary<Person, int> dictionary = new Dictionary<Person, int>()", span="2442-2442", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="ReflectionUtils.cs"];
m9_1114 [label="dictionary.Add(new Person { Name = ''p2'' }, 2)", span="2444-2444", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="ReflectionUtils.cs"];
m9_1113 [label="dictionary.Add(new Person { Name = ''p1'' }, 1)", span="2443-2443", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="ReflectionUtils.cs"];
m9_1117 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", span="2440-2440", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="ReflectionUtils.cs"];
m9_1102 [label="Entry Newtonsoft.Json.Tests.TestObjects.Foo.Foo()", span="31-31", cluster="Newtonsoft.Json.Tests.TestObjects.Foo.Foo()", file="ReflectionUtils.cs"];
m9_2036 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OnError()", span="4682-4682", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OnError()", file="ReflectionUtils.cs"];
m9_2039 [label="var obj = JsonConvert.DeserializeObject<DecimalTest>(json)", span="4686-4686", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OnError()", file="ReflectionUtils.cs"];
m9_2040 [label="Assert.AreEqual(decimal.MinValue, obj.Value)", span="4688-4688", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OnError()", file="ReflectionUtils.cs"];
m9_2038 [label="var json = JsonConvert.SerializeObject(data)", span="4685-4685", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OnError()", file="ReflectionUtils.cs"];
m9_2037 [label="var data = new DecimalTest(decimal.MinValue)", span="4684-4684", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OnError()", file="ReflectionUtils.cs"];
m9_2041 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OnError()", span="4682-4682", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OnError()", file="ReflectionUtils.cs"];
m9_1383 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, uint)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, uint)", file="ReflectionUtils.cs"];
m9_371 [label="return (attributes != null) ? attributes.FirstOrDefault() : null;", span="738-738", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(object, bool)", file="ReflectionUtils.cs"];
m9_374 [label="Entry System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", file="ReflectionUtils.cs"];
m9_373 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes<T>(object, bool)", span="742-742", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes<T>(object, bool)", file="ReflectionUtils.cs"];
m9_375 [label="Attribute[] a = GetAttributes(attributeProvider, typeof(T), inherit)", span="744-744", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes<T>(object, bool)", file="ReflectionUtils.cs"];
m9_372 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(object, bool)", span="734-734", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(object, bool)", file="ReflectionUtils.cs"];
m9_376 [label="T[] attributes = a as T[]", span="746-746", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes<T>(object, bool)", file="ReflectionUtils.cs"];
m9_2575 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", span="5968-5968", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="ReflectionUtils.cs"];
m9_2576 [label="object v = JsonConvert.DeserializeObject<double?>('''')", span="5970-5970", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="ReflectionUtils.cs"];
m9_2578 [label="v = JsonConvert.DeserializeObject<char?>('''')", span="5973-5973", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="ReflectionUtils.cs"];
m9_2580 [label="v = JsonConvert.DeserializeObject<int?>('''')", span="5976-5976", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="ReflectionUtils.cs"];
m9_2582 [label="v = JsonConvert.DeserializeObject<decimal?>('''')", span="5979-5979", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="ReflectionUtils.cs"];
m9_2584 [label="v = JsonConvert.DeserializeObject<DateTime?>('''')", span="5982-5982", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="ReflectionUtils.cs"];
m9_2586 [label="v = JsonConvert.DeserializeObject<DateTimeOffset?>('''')", span="5985-5985", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="ReflectionUtils.cs"];
m9_2588 [label="v = JsonConvert.DeserializeObject<byte[]>('''')", span="5988-5988", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="ReflectionUtils.cs"];
m9_2577 [label="Assert.IsNull(v)", span="5971-5971", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="ReflectionUtils.cs"];
m9_2579 [label="Assert.IsNull(v)", span="5974-5974", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="ReflectionUtils.cs"];
m9_2581 [label="Assert.IsNull(v)", span="5977-5977", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="ReflectionUtils.cs"];
m9_2583 [label="Assert.IsNull(v)", span="5980-5980", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="ReflectionUtils.cs"];
m9_2585 [label="Assert.IsNull(v)", span="5983-5983", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="ReflectionUtils.cs"];
m9_2587 [label="Assert.IsNull(v)", span="5986-5986", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="ReflectionUtils.cs"];
m9_2589 [label="Assert.IsNull(v)", span="5989-5989", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="ReflectionUtils.cs"];
m9_2590 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", span="5968-5968", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="ReflectionUtils.cs"];
m9_1076 [label="Entry Newtonsoft.Json.Tests.TestObjects.ConstructorReadonlyFields.ConstructorReadonlyFields(string, int)", span="32-32", cluster="Newtonsoft.Json.Tests.TestObjects.ConstructorReadonlyFields.ConstructorReadonlyFields(string, int)", file="ReflectionUtils.cs"];
m9_3271 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", span="7754-7754", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="ReflectionUtils.cs"];
m9_3273 [label="NullableTestClass c2 = JsonConvert.DeserializeObject<NullableTestClass>(json)", span="7764-7764", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="ReflectionUtils.cs"];
m9_3272 [label="string json = @''{\r\n  ''''MyNullableBool'''': '''''''',\r\n  ''''MyNullableInteger'''': '''''''',\r\n  ''''MyNullableDateTime'''': '''''''',\r\n  ''''MyNullableDateTimeOffset'''': '''''''',\r\n  ''''MyNullableDecimal'''': ''''''''\r\n}''", span="7756-7762", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="ReflectionUtils.cs"];
m9_3274 [label="Assert.IsNull(c2.MyNullableBool)", span="7765-7765", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="ReflectionUtils.cs"];
m9_3275 [label="Assert.IsNull(c2.MyNullableInteger)", span="7766-7766", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="ReflectionUtils.cs"];
m9_3276 [label="Assert.IsNull(c2.MyNullableDateTime)", span="7767-7767", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="ReflectionUtils.cs"];
m9_3277 [label="Assert.IsNull(c2.MyNullableDateTimeOffset)", span="7768-7768", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="ReflectionUtils.cs"];
m9_3278 [label="Assert.IsNull(c2.MyNullableDecimal)", span="7769-7769", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="ReflectionUtils.cs"];
m9_3279 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", span="7754-7754", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="ReflectionUtils.cs"];
m9_56 [label="Entry System.IO.MemoryStream.ToArray()", span="0-0", cluster="System.IO.MemoryStream.ToArray()", file="ReflectionUtils.cs"];
m9_60 [label="executorObject.serverClassName = ''BanSubs''", span="231-231", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="ReflectionUtils.cs"];
m9_61 [label="executorObject.serverMethodParams = new object[] { ''21321546'', ''101'', ''1236'', ''D:\\1.txt'' }", span="232-232", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="ReflectionUtils.cs"];
m9_66 [label="Assert.AreEqual(executorObject2.serverClassName, ''BanSubs'')", span="240-240", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="ReflectionUtils.cs"];
m9_70 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", span="228-228", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="ReflectionUtils.cs"];
m9_74 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", span="248-248", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="ReflectionUtils.cs"];
m9_77 [label="Assert.AreEqual(''Orange'', p[''Name''].ToString())", span="254-254", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="ReflectionUtils.cs"];
m9_58 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", span="228-228", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="ReflectionUtils.cs"];
m9_59 [label="MethodExecutorObject executorObject = new MethodExecutorObject()", span="230-230", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="ReflectionUtils.cs"];
m9_78 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", span="248-248", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="ReflectionUtils.cs"];
m9_62 [label="executorObject.clientGetResultFunction = ''ClientBanSubsCB''", span="233-233", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="ReflectionUtils.cs"];
m9_63 [label="string output = JsonConvert.SerializeObject(executorObject)", span="235-235", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="ReflectionUtils.cs"];
m9_67 [label="Assert.AreEqual(executorObject2.serverMethodParams.Length, 4)", span="241-241", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="ReflectionUtils.cs"];
m9_76 [label="Hashtable p = JsonConvert.DeserializeObject(value, typeof(Hashtable)) as Hashtable", span="252-252", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="ReflectionUtils.cs"];
m9_64 [label="MethodExecutorObject executorObject2 = JsonConvert.DeserializeObject(output, typeof(MethodExecutorObject)) as MethodExecutorObject", span="237-237", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="ReflectionUtils.cs"];
m9_65 [label="Assert.AreNotSame(executorObject, executorObject2)", span="239-239", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="ReflectionUtils.cs"];
m9_68 [label="CustomAssert.Contains(executorObject2.serverMethodParams, ''101'')", span="242-242", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="ReflectionUtils.cs"];
m9_69 [label="Assert.AreEqual(executorObject2.clientGetResultFunction, ''ClientBanSubsCB'')", span="243-243", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="ReflectionUtils.cs"];
m9_72 [label="Entry Unk.AreNotSame", span="", cluster="Unk.AreNotSame", file="ReflectionUtils.cs"];
m9_73 [label="Entry Newtonsoft.Json.Tests.CustomAssert.Contains(System.Collections.IList, object)", span="108-108", cluster="Newtonsoft.Json.Tests.CustomAssert.Contains(System.Collections.IList, object)", file="ReflectionUtils.cs"];
m9_75 [label="string value = @''{''''Name'''':''''Orange'''', ''''Price'''':3.99, ''''ExpiryDate'''':''''01/24/2010 12:00:00''''}''", span="250-250", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="ReflectionUtils.cs"];
m9_352 [label="!declaringType.IsGenericType()", span="706-706", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m9_358 [label="members.Length == 0", span="716-716", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m9_357 [label="MemberInfo[] members = genericTypeDefinition.GetMember(propertyInfo.Name, bindingAttr)", span="715-715", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m9_353 [label="return false;", span="708-708", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m9_356 [label="return false;", span="713-713", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m9_354 [label="Type genericTypeDefinition = declaringType.GetGenericTypeDefinition()", span="710-710", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m9_355 [label="genericTypeDefinition == null", span="711-711", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m9_359 [label="return false;", span="718-718", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m9_2494 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", span="5805-5805", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="ReflectionUtils.cs"];
m9_2497 [label="Assert.AreEqual(@''{''''Id'''':{''''Value'''':''''id''''}}'', json)", span="5811-5811", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="ReflectionUtils.cs"];
m9_2496 [label="string json = JsonConvert.SerializeObject(widget)", span="5809-5809", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="ReflectionUtils.cs"];
m9_2495 [label="Widget widget = new Widget { Id = new WidgetId { Value = ''id'' } }", span="5807-5807", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="ReflectionUtils.cs"];
m9_2498 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", span="5805-5805", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="ReflectionUtils.cs"];
m9_198 [label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0", cluster="System.Type.IsAssignableFrom(System.Type)", file="ReflectionUtils.cs"];
m9_591 [label="Entry Newtonsoft.Json.Tests.TestObjects.RequiredMembersClass.RequiredMembersClass()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.RequiredMembersClass.RequiredMembersClass()", file="ReflectionUtils.cs"];
m9_778 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", span="1691-1691", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", file="ReflectionUtils.cs"];
m9_779 [label="return ''_name: '' + _name + '', _age: '' + Age + '', Rank: '' + Rank + '', JsonTitle: '' + Title;", span="1693-1693", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", file="ReflectionUtils.cs"];
m9_780 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", span="1691-1691", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", file="ReflectionUtils.cs"];
m9_2408 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", span="5634-5634", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="ReflectionUtils.cs"];
m9_2421 [label="Assert.AreEqual(''Test'', newObject.Name)", span="5657-5657", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="ReflectionUtils.cs"];
m9_2420 [label="TestObject newObject = (TestObject)serializer.Deserialize(bsonReader)", span="5655-5655", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="ReflectionUtils.cs"];
m9_2422 [label="CollectionAssert.AreEquivalent(new byte[] { 72, 63, 62, 71, 92, 55 }, newObject.Data)", span="5658-5658", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="ReflectionUtils.cs"];
m9_2410 [label="JsonSerializer serializer = new JsonSerializer()", span="5638-5638", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="ReflectionUtils.cs"];
m9_2419 [label="JsonReader bsonReader = new JsonTextReader(new StreamReader(bsonStream))", span="5652-5652", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="ReflectionUtils.cs"];
m9_2418 [label="MemoryStream bsonStream = new MemoryStream(objectBytes)", span="5651-5651", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="ReflectionUtils.cs"];
m9_2409 [label="TestObject test = new TestObject(''Test'', new byte[] { 72, 63, 62, 71, 92, 55 })", span="5636-5636", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="ReflectionUtils.cs"];
m9_2411 [label="serializer.TypeNameHandling = TypeNameHandling.All", span="5639-5639", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="ReflectionUtils.cs"];
m9_2415 [label="serializer.Serialize(bsonWriter, test)", span="5645-5645", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="ReflectionUtils.cs"];
m9_2414 [label="JsonWriter bsonWriter = new JsonTextWriter(new StreamWriter(bsonStream))", span="5643-5643", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="ReflectionUtils.cs"];
m9_2413 [label="MemoryStream bsonStream = new MemoryStream()", span="5642-5642", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="ReflectionUtils.cs"];
m9_2417 [label="objectBytes = bsonStream.ToArray()", span="5648-5648", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="ReflectionUtils.cs"];
m9_2412 [label="byte[] objectBytes", span="5641-5641", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="ReflectionUtils.cs"];
m9_2416 [label="bsonWriter.Flush()", span="5646-5646", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="ReflectionUtils.cs"];
m9_2423 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", span="5634-5634", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="ReflectionUtils.cs"];
m9_177 [label="implementingType = null", span="374-374", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinitionInternal(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs"];
m9_1516 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.XNodeTestObject.XNodeTestObject()", span="3492-3492", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.XNodeTestObject.XNodeTestObject()", file="ReflectionUtils.cs"];
m9_458 [label="string json = JsonConvert.SerializeObject(m1, new JsonSerializerSettings\r\n        {\r\n          DateFormatHandling = DateFormatHandling.MicrosoftDateFormat\r\n        })", span="974-977", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="ReflectionUtils.cs"];
m9_96 [label=nonPublic, span="247-247", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type, bool)", file="ReflectionUtils.cs"];
m9_97 [label="bindingFlags = bindingFlags | BindingFlags.NonPublic", span="249-249", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type, bool)", file="ReflectionUtils.cs"];
m9_95 [label="BindingFlags bindingFlags = BindingFlags.Instance | BindingFlags.Public", span="246-246", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type, bool)", file="ReflectionUtils.cs"];
m9_98 [label="return t.GetConstructors(bindingFlags).SingleOrDefault(c => !c.GetParameters().Any());", span="252-252", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type, bool)", file="ReflectionUtils.cs"];
m9_653 [label="Entry Newtonsoft.Json.Tests.TestObjects.Co.Co()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.Co.Co()", file="ReflectionUtils.cs"];
m9_1262 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", span="2940-2940", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", file="ReflectionUtils.cs"];
m9_1263 [label="return ((IDictionary<string, T>)_innerDictionary).Contains(item);", span="2942-2942", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", file="ReflectionUtils.cs"];
m9_1264 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", span="2940-2940", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", file="ReflectionUtils.cs"];
m9_1189 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KeyValueId.KeyValueId()", span="2621-2621", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KeyValueId.KeyValueId()", file="ReflectionUtils.cs"];
m9_2717 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", span="6252-6252", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="ReflectionUtils.cs"];
m9_2723 [label="Assert.AreEqual(4, errors.Count)", span="6269-6269", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="ReflectionUtils.cs"];
m9_2724 [label="Assert.AreEqual(''Required property 'NonAttributeProperty' not found in JSON. Path '', line 1, position 2.'', errors[0])", span="6270-6270", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="ReflectionUtils.cs"];
m9_2725 [label="Assert.AreEqual(''Required property 'UnsetProperty' not found in JSON. Path '', line 1, position 2.'', errors[1])", span="6271-6271", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="ReflectionUtils.cs"];
m9_2726 [label="Assert.AreEqual(''Required property 'AllowNullProperty' not found in JSON. Path '', line 1, position 2.'', errors[2])", span="6272-6272", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="ReflectionUtils.cs"];
m9_2727 [label="Assert.AreEqual(''Required property 'AlwaysProperty' not found in JSON. Path '', line 1, position 2.'', errors[3])", span="6273-6273", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="ReflectionUtils.cs"];
m9_2719 [label="IList<string> errors = new List<string>()", span="6255-6255", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="ReflectionUtils.cs"];
m9_2722 [label="Assert.IsNotNull(o)", span="6268-6268", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="ReflectionUtils.cs"];
m9_2718 [label="string json = ''{}''", span="6254-6254", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="ReflectionUtils.cs"];
m9_2720 [label="EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs> error = (s, e) =>\r\n        {\r\n          errors.Add(e.ErrorContext.Error.Message);\r\n          e.ErrorContext.Handled = true;\r\n        }", span="6257-6261", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="ReflectionUtils.cs"];
m9_2721 [label="var o = JsonConvert.DeserializeObject<RequiredObject>(json, new JsonSerializerSettings\r\n        {\r\n          Error = error\r\n        })", span="6263-6266", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="ReflectionUtils.cs"];
m9_2728 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", span="6252-6252", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="ReflectionUtils.cs"];
m9_457 [label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="972-972", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="ReflectionUtils.cs"];
m9_548 [label="return false;", span="1082-1082", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ReflectionUtils.cs"];
m9_671 [label="Entry Newtonsoft.Json.Tests.TestObjects.LogEntry.LogEntry()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.LogEntry.LogEntry()", file="ReflectionUtils.cs"];
m9_464 [label="List<MemberInfo> fieldInfos = new List<MemberInfo>(targetType.GetFields(bindingAttr))", span="925-925", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFields(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m9_467 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetFields(System.Type, System.Reflection.BindingFlags)", span="921-921", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFields(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m9_469 [label="Entry System.Type.GetFields(System.Reflection.BindingFlags)", span="0-0", cluster="System.Type.GetFields(System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m9_466 [label="return fieldInfos.Cast<FieldInfo>();", span="932-932", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFields(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m9_465 [label="GetChildPrivateFields(fieldInfos, targetType, bindingAttr)", span="929-929", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFields(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m9_470 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateFields(System.Collections.Generic.IList<System.Reflection.MemberInfo>, System.Type, System.Reflection.BindingFlags)", span="936-936", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateFields(System.Collections.Generic.IList<System.Reflection.MemberInfo>, System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m9_3252 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", span="7696-7696", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="ReflectionUtils.cs"];
m9_3254 [label="IList<float> floats = JsonConvert.DeserializeObject<IList<float>>(json)", span="7704-7704", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="ReflectionUtils.cs"];
m9_3258 [label="IList<double> doubles = JsonConvert.DeserializeObject<IList<double>>(json)", span="7709-7709", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="ReflectionUtils.cs"];
m9_3255 [label="Assert.AreEqual(float.NaN, floats[0])", span="7705-7705", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="ReflectionUtils.cs"];
m9_3256 [label="Assert.AreEqual(float.PositiveInfinity, floats[1])", span="7706-7706", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="ReflectionUtils.cs"];
m9_3257 [label="Assert.AreEqual(float.NegativeInfinity, floats[2])", span="7707-7707", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="ReflectionUtils.cs"];
m9_3259 [label="Assert.AreEqual(float.NaN, doubles[0])", span="7710-7710", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="ReflectionUtils.cs"];
m9_3260 [label="Assert.AreEqual(float.PositiveInfinity, doubles[1])", span="7711-7711", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="ReflectionUtils.cs"];
m9_3261 [label="Assert.AreEqual(float.NegativeInfinity, doubles[2])", span="7712-7712", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="ReflectionUtils.cs"];
m9_3253 [label="string json = @''[\r\n  ''''NaN'''',\r\n  ''''Infinity'''',\r\n  ''''-Infinity''''\r\n]''", span="7698-7702", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="ReflectionUtils.cs"];
m9_3262 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", span="7696-7696", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="ReflectionUtils.cs"];
m9_1288 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", span="2978-2978", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", file="ReflectionUtils.cs"];
m9_1289 [label="return _innerDictionary.Remove(key);", span="2980-2980", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", file="ReflectionUtils.cs"];
m9_1290 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", span="2978-2978", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", file="ReflectionUtils.cs"];
m9_2090 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", span="4815-4815", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="ReflectionUtils.cs"];
m9_2093 [label="Assert.AreEqual(@''{\r\n  ''''Name'''': null\r\n}'', json)", span="4821-4823", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="ReflectionUtils.cs"];
m9_2092 [label="string json = JsonConvert.SerializeObject(i, Formatting.Indented)", span="4819-4819", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="ReflectionUtils.cs"];
m9_2091 [label="ComplexItem i = new ComplexItem()", span="4817-4817", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="ReflectionUtils.cs"];
m9_2094 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", span="4815-4815", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="ReflectionUtils.cs"];
m9_3458 [label="Entry Newtonsoft.Json.Tests.Serialization.MetroStringConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="8427-8427", cluster="Newtonsoft.Json.Tests.Serialization.MetroStringConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionUtils.cs"];
m9_3459 [label="writer.WriteValue('':::'' + value.ToString().ToUpper(CultureInfo.InvariantCulture) + '':::'')", span="8430-8430", cluster="Newtonsoft.Json.Tests.Serialization.MetroStringConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionUtils.cs"];
m9_3460 [label="Exit Newtonsoft.Json.Tests.Serialization.MetroStringConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="8427-8427", cluster="Newtonsoft.Json.Tests.Serialization.MetroStringConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionUtils.cs"];
m9_973 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", span="2150-2150", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", file="ReflectionUtils.cs"];
m9_974 [label="string json = @''[]''", span="2152-2152", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", file="ReflectionUtils.cs"];
m9_975 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'System.Double' because the type requires a JSON primitive value (e.g. string, number, boolean, null) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON primitive value (e.g. string, number, boolean, null) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<double>(json);\r\n        })", span="2154-2161", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", file="ReflectionUtils.cs"];
m9_976 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", span="2150-2150", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", file="ReflectionUtils.cs"];
m9_2645 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", span="6104-6104", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="ReflectionUtils.cs"];
m9_2651 [label="NullableDateTimeTestClass c2 =\r\n        JsonConvert.DeserializeObject<NullableDateTimeTestClass>(\r\n          @''{''''PreField'''':''''Pre'''',''''DateTimeField'''':null,''''DateTimeOffsetField'''':null,''''PostField'''':''''Post''''}'')", span="6119-6121", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="ReflectionUtils.cs"];
m9_2647 [label="Assert.AreEqual(new DateTime(2008, 12, 12, 12, 12, 12, 0, DateTimeKind.Utc).ToLocalTime(), c.DateTimeField)", span="6114-6114", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="ReflectionUtils.cs"];
m9_2648 [label="Assert.AreEqual(new DateTimeOffset(2008, 12, 12, 12, 12, 12, 0, TimeSpan.Zero), c.DateTimeOffsetField)", span="6115-6115", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="ReflectionUtils.cs"];
m9_2649 [label="Assert.AreEqual(''Pre'', c.PreField)", span="6116-6116", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="ReflectionUtils.cs"];
m9_2650 [label="Assert.AreEqual(''Post'', c.PostField)", span="6117-6117", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="ReflectionUtils.cs"];
m9_2652 [label="Assert.AreEqual(null, c2.DateTimeField)", span="6123-6123", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="ReflectionUtils.cs"];
m9_2653 [label="Assert.AreEqual(null, c2.DateTimeOffsetField)", span="6124-6124", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="ReflectionUtils.cs"];
m9_2654 [label="Assert.AreEqual(''Pre'', c2.PreField)", span="6125-6125", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="ReflectionUtils.cs"];
m9_2655 [label="Assert.AreEqual(''Post'', c2.PostField)", span="6126-6126", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="ReflectionUtils.cs"];
m9_2646 [label="NullableDateTimeTestClass c =\r\n        JsonConvert.DeserializeObject<NullableDateTimeTestClass>(\r\n          @''{''''PreField'''':''''Pre'''',''''DateTimeField'''':''''2008-12-12T12:12:12Z'''',''''DateTimeOffsetField'''':''''2008-12-12T12:12:12Z'''',''''PostField'''':''''Post''''}'',\r\n          new JsonSerializerSettings\r\n          {\r\n            DateTimeZoneHandling = DateTimeZoneHandling.Local\r\n          })", span="6106-6112", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="ReflectionUtils.cs"];
m9_2656 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", span="6104-6104", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="ReflectionUtils.cs"];
m9_911 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericList()", span="2016-2016", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericList()", file="ReflectionUtils.cs"];
m9_913 [label="List<Product> products = JsonConvert.DeserializeObject<List<Product>>(json)", span="2033-2033", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericList()", file="ReflectionUtils.cs"];
m9_917 [label="Assert.AreEqual(2, products.Count)", span="2043-2043", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericList()", file="ReflectionUtils.cs"];
m9_918 [label="Assert.AreEqual(''Product 1'', products[0].Name)", span="2044-2044", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericList()", file="ReflectionUtils.cs"];
m9_912 [label="string json = @''[\r\n        {\r\n          ''''Name'''': ''''Product 1'''',\r\n          ''''ExpiryDate'''': ''''\/Date(978048000000)\/'''',\r\n          ''''Price'''': 99.95,\r\n          ''''Sizes'''': null\r\n        },\r\n        {\r\n          ''''Name'''': ''''Product 2'''',\r\n          ''''ExpiryDate'''': ''''\/Date(1248998400000)\/'''',\r\n          ''''Price'''': 12.50,\r\n          ''''Sizes'''': null\r\n        }\r\n      ]''", span="2018-2031", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericList()", file="ReflectionUtils.cs"];
m9_914 [label="Console.WriteLine(products.Count)", span="2035-2035", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericList()", file="ReflectionUtils.cs"];
m9_915 [label="Product p1 = products[0]", span="2038-2038", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericList()", file="ReflectionUtils.cs"];
m9_916 [label="Console.WriteLine(p1.Name)", span="2040-2040", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericList()", file="ReflectionUtils.cs"];
m9_919 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericList()", span="2016-2016", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericList()", file="ReflectionUtils.cs"];
m9_3185 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeName3DArray()", span="7408-7408", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeName3DArray()", file="ReflectionUtils.cs"];
m9_3190 [label="Assert.AreEqual(@''{\r\n  ''''$type'''': ''''System.Collections.Generic.List`1[[Newtonsoft.Json.Tests.Serialization.Event[,], Newtonsoft.Json.Tests]], mscorlib'''',\r\n  ''''$values'''': [\r\n    {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.Event[,], Newtonsoft.Json.Tests'''',\r\n      ''''$values'''': [\r\n        [\r\n          {\r\n            ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.Event, Newtonsoft.Json.Tests'''',\r\n            ''''EventName'''': ''''EventName!'''',\r\n            ''''Venue'''': null,\r\n            ''''Performances'''': null\r\n          },\r\n          {\r\n            ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.Event, Newtonsoft.Json.Tests'''',\r\n            ''''EventName'''': ''''EventName!'''',\r\n            ''''Venue'''': null,\r\n            ''''Performances'''': null\r\n          }\r\n        ],\r\n        [\r\n          {\r\n            ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.Event, Newtonsoft.Json.Tests'''',\r\n            ''''EventName'''': ''''EventName!'''',\r\n            ''''Venue'''': null,\r\n            ''''Performances'''': null\r\n          },\r\n          {\r\n            ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.Event, Newtonsoft.Json.Tests'''',\r\n            ''''EventName'''': ''''EventName!'''',\r\n            ''''Venue'''': null,\r\n            ''''Performances'''': null\r\n          }\r\n        ]\r\n      ]\r\n    },\r\n    {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.Event[,], Newtonsoft.Json.Tests'''',\r\n      ''''$values'''': [\r\n        [\r\n          {\r\n            ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.Event, Newtonsoft.Json.Tests'''',\r\n            ''''EventName'''': ''''EventName!'''',\r\n            ''''Venue'''': null,\r\n            ''''Performances'''': null\r\n          },\r\n          {\r\n            ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.Event, Newtonsoft.Json.Tests'''',\r\n            ''''EventName'''': ''''EventName!'''',\r\n            ''''Venue'''': null,\r\n            ''''Performances'''': null\r\n          }\r\n        ],\r\n        [\r\n          {\r\n            ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.Event, Newtonsoft.Json.Tests'''',\r\n            ''''EventName'''': ''''EventName!'''',\r\n            ''''Venue'''': null,\r\n            ''''Performances'''': null\r\n          },\r\n          {\r\n            ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.Event, Newtonsoft.Json.Tests'''',\r\n            ''''EventName'''': ''''EventName!'''',\r\n            ''''Venue'''': null,\r\n            ''''Performances'''': null\r\n          }\r\n        ]\r\n      ]\r\n    }\r\n  ]\r\n}'', json)", span="7427-7497", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeName3DArray()", file="ReflectionUtils.cs"];
m9_3192 [label="Assert.AreEqual(2, values2.Count)", span="7504-7504", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeName3DArray()", file="ReflectionUtils.cs"];
m9_3193 [label="Assert.AreEqual(''EventName!'', values2[0][0, 0].EventName)", span="7505-7505", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeName3DArray()", file="ReflectionUtils.cs"];
m9_3189 [label="string json = JsonConvert.SerializeObject(values1, new JsonSerializerSettings\r\n      {\r\n        TypeNameHandling = TypeNameHandling.All,\r\n        Formatting = Formatting.Indented\r\n      })", span="7421-7425", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeName3DArray()", file="ReflectionUtils.cs"];
m9_3191 [label="IList<Event[,]> values2 = (IList<Event[,]>)JsonConvert.DeserializeObject(json, new JsonSerializerSettings\r\n        {\r\n          TypeNameHandling = TypeNameHandling.All\r\n        })", span="7499-7502", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeName3DArray()", file="ReflectionUtils.cs"];
m9_3188 [label="IList<Event[,]> values1 = new List<Event[,]>\r\n        {\r\n          array1,\r\n          array1\r\n        }", span="7415-7419", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeName3DArray()", file="ReflectionUtils.cs"];
m9_3187 [label="Event[,] array1 = new[,] { { e1, e1 }, { e1, e1 } }", span="7414-7414", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeName3DArray()", file="ReflectionUtils.cs"];
m9_3186 [label="Event e1 = new Event\r\n      {\r\n        EventName = ''EventName!''\r\n      }", span="7410-7413", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeName3DArray()", file="ReflectionUtils.cs"];
m9_3194 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeName3DArray()", span="7408-7408", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeName3DArray()", file="ReflectionUtils.cs"];
m9_107 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", span="255-255", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", file="ReflectionUtils.cs"];
m9_2862 [label="Entry Newtonsoft.Json.Tests.Serialization.DataContractSerializationAttributesClass.DataContractSerializationAttributesClass()", span="8469-8469", cluster="Newtonsoft.Json.Tests.Serialization.DataContractSerializationAttributesClass.DataContractSerializationAttributesClass()", file="ReflectionUtils.cs"];
m9_1240 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTestClass.DataContractJsonSerializerTestClass()", span="2834-2834", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTestClass.DataContractJsonSerializerTestClass()", file="ReflectionUtils.cs"];
m9_1519 [label="Entry Unk.IsNull", span="", cluster="Unk.IsNull", file="ReflectionUtils.cs"];
m9_3104 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithTooManyItems()", span="7239-7239", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithTooManyItems()", file="ReflectionUtils.cs"];
m9_3105 [label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[[1,1,1],[1,1,2,1]],[[1,2,1],[1,2,2]],[[2,1,1],[2,1,2]],[[2,2,1],[2,2,2]]],''''After'''':''''After!''''}''", span="7241-7241", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithTooManyItems()", file="ReflectionUtils.cs"];
m9_3106 [label="ExceptionAssert.Throws<Exception>(\r\n        ''Cannot deserialize non-cubical array as multidimensional array.'',\r\n        () => JsonConvert.DeserializeObject<Array3D>(json))", span="7243-7245", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithTooManyItems()", file="ReflectionUtils.cs"];
m9_3107 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithTooManyItems()", span="7239-7239", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithTooManyItems()", file="ReflectionUtils.cs"];
m9_449 [label="MemberTypes.Property", span="910-910", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberInfoFromType(System.Type, System.Reflection.MemberInfo)", file="ReflectionUtils.cs"];
m9_450 [label="PropertyInfo propertyInfo = (PropertyInfo)memberInfo", span="911-911", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberInfoFromType(System.Type, System.Reflection.MemberInfo)", file="ReflectionUtils.cs"];
m9_451 [label="Type[] types = propertyInfo.GetIndexParameters().Select(p => p.ParameterType).ToArray()", span="913-913", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberInfoFromType(System.Type, System.Reflection.MemberInfo)", file="ReflectionUtils.cs"];
m9_448 [label="memberInfo.MemberType()", span="908-908", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberInfoFromType(System.Type, System.Reflection.MemberInfo)", file="ReflectionUtils.cs"];
m9_447 [label="BindingFlags bindingAttr = BindingFlags.Instance | BindingFlags.Static | BindingFlags.Public | BindingFlags.NonPublic", span="906-906", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberInfoFromType(System.Type, System.Reflection.MemberInfo)", file="ReflectionUtils.cs"];
m9_446 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberInfoFromType(System.Type, System.Reflection.MemberInfo)", span="904-904", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberInfoFromType(System.Type, System.Reflection.MemberInfo)", file="ReflectionUtils.cs"];
m9_452 [label="return targetType.GetProperty(propertyInfo.Name, bindingAttr, null, propertyInfo.PropertyType, types, null);", span="915-915", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberInfoFromType(System.Type, System.Reflection.MemberInfo)", file="ReflectionUtils.cs"];
m9_1266 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", span="2945-2945", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", file="ReflectionUtils.cs"];
m9_1267 [label="return _innerDictionary.ContainsKey(key);", span="2947-2947", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", file="ReflectionUtils.cs"];
m9_1268 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", span="2945-2945", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", file="ReflectionUtils.cs"];
m9_3216 [label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0", cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="ReflectionUtils.cs"];
m9_2485 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertableIntTestClass.ConvertableIntTestClass()", span="5764-5764", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertableIntTestClass.ConvertableIntTestClass()", file="ReflectionUtils.cs"];
m9_2693 [label="Entry System.Enum.Parse(System.Type, string)", span="0-0", cluster="System.Enum.Parse(System.Type, string)", file="ReflectionUtils.cs"];
m9_2935 [label="Entry Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver.CamelCasePropertyNamesContractResolver()", span="38-38", cluster="Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver.CamelCasePropertyNamesContractResolver()", file="ReflectionUtils.cs"];
m9_2486 [label="Entry Newtonsoft.Json.Tests.ConvertibleInt.ConvertibleInt(int)", span="1278-1278", cluster="Newtonsoft.Json.Tests.ConvertibleInt.ConvertibleInt(int)", file="ReflectionUtils.cs"];
m9_2836 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver(bool)", span="188-188", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver(bool)", file="ReflectionUtils.cs"];
m9_952 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", span="2103-2103", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", file="ReflectionUtils.cs"];
m9_953 [label="string json = @''[]''", span="2105-2105", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", file="ReflectionUtils.cs"];
m9_954 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'Newtonsoft.Json.Tests.TestObjects.Person' because the type requires a JSON object (e.g. {''''name'''':''''value''''}) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON object (e.g. {''''name'''':''''value''''}) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<Person>(json);\r\n        })", span="2107-2114", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", file="ReflectionUtils.cs"];
m9_955 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", span="2103-2103", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", file="ReflectionUtils.cs"];
m9_2733 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", span="6277-6277", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="ReflectionUtils.cs"];
m9_2739 [label="Assert.AreEqual(3, errors.Count)", span="6294-6294", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="ReflectionUtils.cs"];
m9_2740 [label="Assert.AreEqual(''Required property 'NonAttributeProperty' expects a value but got null. Path '', line 1, position 97.'', errors[0])", span="6295-6295", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="ReflectionUtils.cs"];
m9_2741 [label="Assert.AreEqual(''Required property 'UnsetProperty' expects a value but got null. Path '', line 1, position 97.'', errors[1])", span="6296-6296", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="ReflectionUtils.cs"];
m9_2742 [label="Assert.AreEqual(''Required property 'AlwaysProperty' expects a value but got null. Path '', line 1, position 97.'', errors[2])", span="6297-6297", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="ReflectionUtils.cs"];
m9_2735 [label="IList<string> errors = new List<string>()", span="6280-6280", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="ReflectionUtils.cs"];
m9_2738 [label="Assert.IsNotNull(o)", span="6293-6293", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="ReflectionUtils.cs"];
m9_2734 [label="string json = ''{'NonAttributeProperty':null,'UnsetProperty':null,'AllowNullProperty':null,'AlwaysProperty':null}''", span="6279-6279", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="ReflectionUtils.cs"];
m9_2736 [label="EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs> error = (s, e) =>\r\n      {\r\n        errors.Add(e.ErrorContext.Error.Message);\r\n        e.ErrorContext.Handled = true;\r\n      }", span="6282-6286", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="ReflectionUtils.cs"];
m9_2737 [label="var o = JsonConvert.DeserializeObject<RequiredObject>(json, new JsonSerializerSettings\r\n      {\r\n        Error = error\r\n      })", span="6288-6291", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="ReflectionUtils.cs"];
m9_2743 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", span="6277-6277", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="ReflectionUtils.cs"];
m9_1874 [label="Entry System.Collections.Specialized.StringDictionary.StringDictionary()", span="0-0", cluster="System.Collections.Specialized.StringDictionary.StringDictionary()", file="ReflectionUtils.cs"];
m9_1372 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, int)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, int)", file="ReflectionUtils.cs"];
m9_2817 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", span="6476-6476", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="ReflectionUtils.cs"];
m9_2820 [label="Assert.AreEqual(testObj.Name, objDeserialized.Name)", span="6481-6481", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="ReflectionUtils.cs"];
m9_2821 [label="Assert.AreEqual(0, objDeserialized.Age)", span="6482-6482", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="ReflectionUtils.cs"];
m9_2818 [label="var testObj = new PersonSerializable() { Name = ''John Doe'', Age = 28 }", span="6478-6478", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="ReflectionUtils.cs"];
m9_2819 [label="var objDeserialized = this.SerializeAndDeserialize<PersonSerializable>(testObj)", span="6479-6479", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="ReflectionUtils.cs"];
m9_2822 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", span="6476-6476", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="ReflectionUtils.cs"];
m9_940 [label="Entry Newtonsoft.Json.Tests.TestObjects.SetOnlyPropertyClass2.GetValue()", span="34-34", cluster="Newtonsoft.Json.Tests.TestObjects.SetOnlyPropertyClass2.GetValue()", file="ReflectionUtils.cs"];
m9_1152 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", span="2584-2584", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", file="ReflectionUtils.cs"];
m9_1153 [label="Dictionary = new Dictionary<string, string>\r\n          {\r\n            {''existing'', ''yup''}\r\n          }", span="2586-2589", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", file="ReflectionUtils.cs"];
m9_1154 [label="List = new List<string>\r\n          {\r\n            ''existing''\r\n          }", span="2590-2593", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", file="ReflectionUtils.cs"];
m9_1155 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", span="2584-2584", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", file="ReflectionUtils.cs"];
m9_3034 [label="Entry Newtonsoft.Json.Tests.Serialization.Array2D.Array2D()", span="8494-8494", cluster="Newtonsoft.Json.Tests.Serialization.Array2D.Array2D()", file="ReflectionUtils.cs"];
m9_2080 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", span="4778-4778", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="ReflectionUtils.cs"];
m9_2084 [label="EnumerableClass c2 = JsonConvert.DeserializeObject<EnumerableClass>(json)", span="4795-4795", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="ReflectionUtils.cs"];
m9_2083 [label="Assert.AreEqual(@''{\r\n  ''''Enumerable'''': [\r\n    ''''One'''',\r\n    ''''Two'''',\r\n    ''''Three''''\r\n  ]\r\n}'', json)", span="4787-4793", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="ReflectionUtils.cs"];
m9_2085 [label="Assert.AreEqual(''One'', c2.Enumerable.ElementAt(0))", span="4797-4797", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="ReflectionUtils.cs"];
m9_2086 [label="Assert.AreEqual(''Two'', c2.Enumerable.ElementAt(1))", span="4798-4798", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="ReflectionUtils.cs"];
m9_2087 [label="Assert.AreEqual(''Three'', c2.Enumerable.ElementAt(2))", span="4799-4799", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="ReflectionUtils.cs"];
m9_2082 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="4785-4785", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="ReflectionUtils.cs"];
m9_2081 [label="EnumerableClass c = new EnumerableClass\r\n        {\r\n          Enumerable = new List<string> { ''One'', ''Two'', ''Three'' }\r\n        }", span="4780-4783", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="ReflectionUtils.cs"];
m9_2088 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", span="4778-4778", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="ReflectionUtils.cs"];
m9_384 [label="Entry System.TimeSpan.TimeSpan(int, int, int, int)", span="0-0", cluster="System.TimeSpan.TimeSpan(int, int, int, int)", file="ReflectionUtils.cs"];
m9_385 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithTimeSpan.ClassWithTimeSpan()", span="833-833", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithTimeSpan.ClassWithTimeSpan()", file="ReflectionUtils.cs"];
m9_388 [label="Assert.AreEqual(@''{''''TheField'''':0,''''Property'''':21}'', json)", span="857-857", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="ReflectionUtils.cs"];
m9_393 [label="Entry Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeOnClassTestClass.JsonIgnoreAttributeOnClassTestClass()", span="28-28", cluster="Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeOnClassTestClass.JsonIgnoreAttributeOnClassTestClass()", file="ReflectionUtils.cs"];
m9_396 [label="ArrayList o = JsonConvert.DeserializeObject<ArrayList>(jsonText)", span="870-870", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArrayAsArrayList()", file="ReflectionUtils.cs"];
m9_399 [label="Assert.AreEqual(0, ((JObject)o[3]).Count)", span="874-874", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArrayAsArrayList()", file="ReflectionUtils.cs"];
m9_386 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", span="853-853", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="ReflectionUtils.cs"];
m9_387 [label="string json = JsonConvert.SerializeObject(new JsonIgnoreAttributeOnClassTestClass())", span="855-855", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="ReflectionUtils.cs"];
m9_391 [label="Assert.AreEqual(99, c.Field)", span="862-862", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="ReflectionUtils.cs"];
m9_392 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", span="853-853", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="ReflectionUtils.cs"];
m9_394 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArrayAsArrayList()", span="867-867", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArrayAsArrayList()", file="ReflectionUtils.cs"];
m9_395 [label="string jsonText = @''[3, ''''somestring'''',[1,2,3],{}]''", span="869-869", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArrayAsArrayList()", file="ReflectionUtils.cs"];
m9_397 [label="Assert.AreEqual(4, o.Count)", span="872-872", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArrayAsArrayList()", file="ReflectionUtils.cs"];
m9_398 [label="Assert.AreEqual(3, ((JArray)o[2]).Count)", span="873-873", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArrayAsArrayList()", file="ReflectionUtils.cs"];
m9_400 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArrayAsArrayList()", span="867-867", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArrayAsArrayList()", file="ReflectionUtils.cs"];
m9_389 [label="JsonIgnoreAttributeOnClassTestClass c = JsonConvert.DeserializeObject<JsonIgnoreAttributeOnClassTestClass>(@''{''''TheField'''':99,''''Property'''':-1,''''IgnoredField'''':-1}'')", span="859-859", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="ReflectionUtils.cs"];
m9_390 [label="Assert.AreEqual(0, c.IgnoredField)", span="861-861", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="ReflectionUtils.cs"];
m9_2501 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", span="5815-5815", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="ReflectionUtils.cs"];
m9_2503 [label="Widget w = JsonConvert.DeserializeObject<Widget>(json)", span="5819-5819", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="ReflectionUtils.cs"];
m9_2504 [label="Assert.AreEqual(new WidgetId { Value = ''id'' }, w.Id)", span="5821-5821", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="ReflectionUtils.cs"];
m9_2505 [label="Assert.AreEqual(new WidgetId { Value = ''id'' }, w.Id.Value)", span="5822-5822", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="ReflectionUtils.cs"];
m9_2506 [label="Assert.AreEqual(''id'', w.Id.Value.Value)", span="5823-5823", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="ReflectionUtils.cs"];
m9_2502 [label="string json = @''{''''Id'''':{''''Value'''':''''id''''}}''", span="5817-5817", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="ReflectionUtils.cs"];
m9_2507 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", span="5815-5815", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="ReflectionUtils.cs"];
m9_3427 [label="Entry Newtonsoft.Json.Tests.Serialization.PersonWithPrivateConstructor.PersonWithPrivateConstructor()", span="8226-8226", cluster="Newtonsoft.Json.Tests.Serialization.PersonWithPrivateConstructor.PersonWithPrivateConstructor()", file="ReflectionUtils.cs"];
m9_3428 [label="Exit Newtonsoft.Json.Tests.Serialization.PersonWithPrivateConstructor.PersonWithPrivateConstructor()", span="8226-8226", cluster="Newtonsoft.Json.Tests.Serialization.PersonWithPrivateConstructor.PersonWithPrivateConstructor()", file="ReflectionUtils.cs"];
m9_2346 [label="Entry System.IO.StringWriter.ToString()", span="0-0", cluster="System.IO.StringWriter.ToString()", file="ReflectionUtils.cs"];
m9_456 [label="Entry Unk.ToArray", span="", cluster="Unk.ToArray", file="ReflectionUtils.cs"];
m9_463 [label="ValidationUtils.ArgumentNotNull(targetType, nameof(targetType))", span="923-923", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFields(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m9_3118 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithTooFewItems()", span="7259-7259", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithTooFewItems()", file="ReflectionUtils.cs"];
m9_3119 [label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[[1,1,1],[1,1]],[[1,2,1],[1,2,2]],[[2,1,1],[2,1,2]],[[2,2,1],[2,2,2]]],''''After'''':''''After!''''}''", span="7261-7261", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithTooFewItems()", file="ReflectionUtils.cs"];
m9_3120 [label="ExceptionAssert.Throws<Exception>(\r\n        ''Cannot deserialize non-cubical array as multidimensional array.'',\r\n        () => JsonConvert.DeserializeObject<Array3D>(json))", span="7263-7265", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithTooFewItems()", file="ReflectionUtils.cs"];
m9_3121 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithTooFewItems()", span="7259-7259", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithTooFewItems()", file="ReflectionUtils.cs"];
m9_2568 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", span="5956-5956", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="ReflectionUtils.cs"];
m9_2573 [label="Assert.AreEqual(dict[''k1''], dict2[''k1''])", span="5964-5964", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="ReflectionUtils.cs"];
m9_2570 [label="var dict = serializer.Deserialize<Dictionary<string, string>>(new JsonTextReader(new StringReader(''{'k1':'','k2':'v2'}'')))", span="5959-5959", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="ReflectionUtils.cs"];
m9_2572 [label="var dict2 = serializer.Deserialize<Dictionary<string, object>>(reader)", span="5962-5962", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="ReflectionUtils.cs"];
m9_2569 [label="var serializer = JsonSerializer.Create(new JsonSerializerSettings())", span="5958-5958", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="ReflectionUtils.cs"];
m9_2571 [label="var reader = new JsonTextReader(new StringReader(''{'k1':'','k2':'v2'}''))", span="5961-5961", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="ReflectionUtils.cs"];
m9_2574 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", span="5956-5956", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="ReflectionUtils.cs"];
m9_1820 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.DictionaryKey()", span="4144-4144", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.DictionaryKey()", file="ReflectionUtils.cs"];
m9_846 [label="Entry Newtonsoft.Json.Linq.JObject.JObject(object)", span="113-113", cluster="Newtonsoft.Json.Linq.JObject.JObject(object)", file="ReflectionUtils.cs"];
m9_2748 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", span="6301-6301", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="ReflectionUtils.cs"];
m9_2753 [label="Assert.AreEqual(3, errors.Count)", span="6322-6322", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="ReflectionUtils.cs"];
m9_2754 [label="Assert.AreEqual(''Cannot write a null value for property 'NonAttributeProperty'. Property requires a value. Path ''.'', errors[0])", span="6323-6323", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="ReflectionUtils.cs"];
m9_2755 [label="Assert.AreEqual(''Cannot write a null value for property 'UnsetProperty'. Property requires a value. Path ''.'', errors[1])", span="6324-6324", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="ReflectionUtils.cs"];
m9_2756 [label="Assert.AreEqual(''Cannot write a null value for property 'AlwaysProperty'. Property requires a value. Path ''.'', errors[2])", span="6325-6325", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="ReflectionUtils.cs"];
m9_2752 [label="Assert.AreEqual(@''{\r\n  ''''DefaultProperty'''': null,\r\n  ''''AllowNullProperty'''': null\r\n}'', json)", span="6317-6320", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="ReflectionUtils.cs"];
m9_2749 [label="IList<string> errors = new List<string>()", span="6303-6303", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="ReflectionUtils.cs"];
m9_2751 [label="string json = JsonConvert.SerializeObject(new RequiredObject(), new JsonSerializerSettings\r\n      {\r\n        Error = error,\r\n        Formatting = Formatting.Indented\r\n      })", span="6311-6315", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="ReflectionUtils.cs"];
m9_2750 [label="EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs> error = (s, e) =>\r\n      {\r\n        errors.Add(e.ErrorContext.Error.Message);\r\n        e.ErrorContext.Handled = true;\r\n      }", span="6305-6309", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="ReflectionUtils.cs"];
m9_2757 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", span="6301-6301", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="ReflectionUtils.cs"];
m9_2373 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableKeyValuePairArray()", span="5580-5580", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableKeyValuePairArray()", file="ReflectionUtils.cs"];
m9_2375 [label="IList<KeyValuePair<string, IList<string>>?> values = JsonConvert.DeserializeObject<IList<KeyValuePair<string, IList<string>>?>>(json)", span="5584-5584", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableKeyValuePairArray()", file="ReflectionUtils.cs"];
m9_2376 [label="Assert.AreEqual(3, values.Count)", span="5586-5586", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableKeyValuePairArray()", file="ReflectionUtils.cs"];
m9_2377 [label="Assert.AreEqual(''aaa'', values[0].Value.Key)", span="5587-5587", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableKeyValuePairArray()", file="ReflectionUtils.cs"];
m9_2378 [label="Assert.AreEqual(2, values[0].Value.Value.Count)", span="5588-5588", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableKeyValuePairArray()", file="ReflectionUtils.cs"];
m9_2379 [label="Assert.AreEqual(''1'', values[0].Value.Value[0])", span="5589-5589", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableKeyValuePairArray()", file="ReflectionUtils.cs"];
m9_2380 [label="Assert.AreEqual(''2'', values[0].Value.Value[1])", span="5590-5590", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableKeyValuePairArray()", file="ReflectionUtils.cs"];
m9_2381 [label="Assert.AreEqual(null, values[1])", span="5591-5591", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableKeyValuePairArray()", file="ReflectionUtils.cs"];
m9_2382 [label="Assert.AreEqual(''bbb'', values[2].Value.Key)", span="5592-5592", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableKeyValuePairArray()", file="ReflectionUtils.cs"];
m9_2383 [label="Assert.AreEqual(2, values[2].Value.Value.Count)", span="5593-5593", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableKeyValuePairArray()", file="ReflectionUtils.cs"];
m9_2384 [label="Assert.AreEqual(''3'', values[2].Value.Value[0])", span="5594-5594", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableKeyValuePairArray()", file="ReflectionUtils.cs"];
m9_2385 [label="Assert.AreEqual(''4'', values[2].Value.Value[1])", span="5595-5595", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableKeyValuePairArray()", file="ReflectionUtils.cs"];
m9_2374 [label="string json = @''[ { ''''Value'''': [ ''''1'''', ''''2'''' ], ''''Key'''': ''''aaa'''', ''''BadContent'''': [ 0 ] }, null, { ''''Value'''': [ ''''3'''', ''''4'''' ], ''''Key'''': ''''bbb'''' } ]''", span="5582-5582", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableKeyValuePairArray()", file="ReflectionUtils.cs"];
m9_2386 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableKeyValuePairArray()", span="5580-5580", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableKeyValuePairArray()", file="ReflectionUtils.cs"];
m9_3348 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyDictionaryInterface()", span="7931-7931", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyDictionaryInterface()", file="ReflectionUtils.cs"];
m9_3349 [label="IReadOnlyDictionary<string, int> dic = JsonConvert.DeserializeObject<IReadOnlyDictionary<string, int>>(''{'one':1,'two':2}'')", span="7933-7933", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyDictionaryInterface()", file="ReflectionUtils.cs"];
m9_3350 [label="Assert.AreEqual(2, dic.Count)", span="7935-7935", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyDictionaryInterface()", file="ReflectionUtils.cs"];
m9_3351 [label="Assert.AreEqual(1, dic[''one''])", span="7937-7937", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyDictionaryInterface()", file="ReflectionUtils.cs"];
m9_3352 [label="Assert.AreEqual(2, dic[''two''])", span="7938-7938", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyDictionaryInterface()", file="ReflectionUtils.cs"];
m9_3353 [label="CustomAssert.IsInstanceOfType(typeof(ReadOnlyDictionary<string, int>), dic)", span="7940-7940", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyDictionaryInterface()", file="ReflectionUtils.cs"];
m9_3354 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyDictionaryInterface()", span="7931-7931", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyDictionaryInterface()", file="ReflectionUtils.cs"];
m9_182 [label="DataContractJsonSerializer s = new DataContractJsonSerializer(typeof(List<string>))", span="498-498", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="ReflectionUtils.cs"];
m9_183 [label="List<string> dataContractResult = (List<string>)s.ReadObject(new MemoryStream(Encoding.UTF8.GetBytes(json)))", span="499-499", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="ReflectionUtils.cs"];
m9_185 [label="Assert.AreEqual(1, jsonNetResult.Count)", span="503-503", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="ReflectionUtils.cs"];
m9_186 [label="Assert.AreEqual(dataContractResult[0], jsonNetResult[0])", span="504-504", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="ReflectionUtils.cs"];
m9_187 [label="Assert.AreEqual(javaScriptSerializerResult[0], jsonNetResult[0])", span="506-506", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="ReflectionUtils.cs"];
m9_184 [label="List<string> jsonNetResult = JsonConvert.DeserializeObject<List<string>>(json)", span="501-501", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="ReflectionUtils.cs"];
m9_188 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", span="489-489", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="ReflectionUtils.cs"];
m9_190 [label="Entry Unk.>", span="", cluster="Unk.>", file="ReflectionUtils.cs"];
m9_86 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", span="272-272", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="ReflectionUtils.cs"];
m9_88 [label="GetOnlyPropertyClass c = JsonConvert.DeserializeObject<GetOnlyPropertyClass>(value)", span="276-276", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="ReflectionUtils.cs"];
m9_87 [label="string value = JsonConvert.SerializeObject(new GetOnlyPropertyClass())", span="274-274", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="ReflectionUtils.cs"];
m9_89 [label="Assert.AreEqual(c.Field, ''Field'')", span="278-278", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="ReflectionUtils.cs"];
m9_2321 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableValueGenericDictionary()", span="5485-5485", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableValueGenericDictionary()", file="ReflectionUtils.cs"];
m9_2325 [label="IDictionary<string, int?> v2 = JsonConvert.DeserializeObject<IDictionary<string, int?>>(json)", span="5502-5502", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableValueGenericDictionary()", file="ReflectionUtils.cs"];
m9_2324 [label="Assert.AreEqual(@''{\r\n  ''''First'''': 1,\r\n  ''''Second'''': null,\r\n  ''''Third'''': 3\r\n}'', json)", span="5496-5500", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableValueGenericDictionary()", file="ReflectionUtils.cs"];
m9_2326 [label="Assert.AreEqual(3, v2.Count)", span="5503-5503", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableValueGenericDictionary()", file="ReflectionUtils.cs"];
m9_2327 [label="Assert.AreEqual(1, v2[''First''])", span="5504-5504", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableValueGenericDictionary()", file="ReflectionUtils.cs"];
m9_2328 [label="Assert.AreEqual(null, v2[''Second''])", span="5505-5505", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableValueGenericDictionary()", file="ReflectionUtils.cs"];
m9_2329 [label="Assert.AreEqual(3, v2[''Third''])", span="5506-5506", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableValueGenericDictionary()", file="ReflectionUtils.cs"];
m9_2323 [label="string json = JsonConvert.SerializeObject(v1, Formatting.Indented)", span="5494-5494", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableValueGenericDictionary()", file="ReflectionUtils.cs"];
m9_2322 [label="IDictionary<string, int?> v1 = new Dictionary<string, int?>\r\n        {\r\n          {''First'', 1},\r\n          {''Second'', null},\r\n          {''Third'', 3}\r\n        }", span="5487-5492", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableValueGenericDictionary()", file="ReflectionUtils.cs"];
m9_2330 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableValueGenericDictionary()", span="5485-5485", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableValueGenericDictionary()", file="ReflectionUtils.cs"];
m9_3022 [label="Entry System.Tuple.Create<T1>(T1)", span="0-0", cluster="System.Tuple.Create<T1>(T1)", file="ReflectionUtils.cs"];
m9_1381 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, float)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, float)", file="ReflectionUtils.cs"];
m9_1341 [label="Entry System.Runtime.Serialization.SerializationInfo.GetChar(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetChar(string)", file="ReflectionUtils.cs"];
m9_1851 [label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0", cluster="System.Collections.Generic.HashSet<T>.Contains(T)", file="ReflectionUtils.cs"];
m9_2853 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTestClass.IgnoreDataMemberTestClass()", span="6564-6564", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTestClass.IgnoreDataMemberTestClass()", file="ReflectionUtils.cs"];
m9_1138 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", span="2552-2552", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="ReflectionUtils.cs"];
m9_1148 [label="PersonPropertyClass newPersonPropertyClass = JsonConvert.DeserializeObject<PersonPropertyClass>(json)", span="2575-2575", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="ReflectionUtils.cs"];
m9_1149 [label="Assert.AreEqual(wagePerson.HourlyWage, ((WagePerson)newPersonPropertyClass.Person).HourlyWage)", span="2576-2576", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="ReflectionUtils.cs"];
m9_1147 [label="Assert.AreEqual(\r\n        @''{\r\n  ''''Person'''': {\r\n    ''''HourlyWage'''': 12.50,\r\n    ''''Name'''': ''''Jim Bob'''',\r\n    ''''BirthDate'''': ''''2000-11-29T23:59:59Z'''',\r\n    ''''LastModified'''': ''''2000-11-29T23:59:59Z''''\r\n  }\r\n}'',\r\n        json)", span="2564-2573", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="ReflectionUtils.cs"];
m9_1146 [label="string json = JsonConvert.SerializeObject(personPropertyClass, Formatting.Indented)", span="2563-2563", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="ReflectionUtils.cs"];
m9_1140 [label="WagePerson wagePerson = (WagePerson)personPropertyClass.Person", span="2555-2555", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="ReflectionUtils.cs"];
m9_1139 [label="PersonPropertyClass personPropertyClass = new PersonPropertyClass()", span="2554-2554", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="ReflectionUtils.cs"];
m9_1145 [label="wagePerson.Name = ''Jim Bob''", span="2561-2561", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="ReflectionUtils.cs"];
m9_1141 [label="wagePerson.BirthDate = new DateTime(2000, 11, 29, 23, 59, 59, DateTimeKind.Utc)", span="2557-2557", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="ReflectionUtils.cs"];
m9_1144 [label="wagePerson.LastModified = new DateTime(2000, 11, 29, 23, 59, 59, DateTimeKind.Utc)", span="2560-2560", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="ReflectionUtils.cs"];
m9_1142 [label="wagePerson.Department = ''McDees''", span="2558-2558", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="ReflectionUtils.cs"];
m9_1143 [label="wagePerson.HourlyWage = 12.50m", span="2559-2559", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="ReflectionUtils.cs"];
m9_1150 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", span="2552-2552", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="ReflectionUtils.cs"];
m9_685 [label="Entry Newtonsoft.Json.Tests.TestObjects.GenericListAndDictionaryInterfaceProperties.GenericListAndDictionaryInterfaceProperties()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.GenericListAndDictionaryInterfaceProperties.GenericListAndDictionaryInterfaceProperties()", file="ReflectionUtils.cs"];
m9_1655 [label="Entry Newtonsoft.Json.JsonConvert.PopulateObject(string, object, Newtonsoft.Json.JsonSerializerSettings)", span="1203-1203", cluster="Newtonsoft.Json.JsonConvert.PopulateObject(string, object, Newtonsoft.Json.JsonSerializerSettings)", file="ReflectionUtils.cs"];
m9_1204 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", span="2736-2736", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", file="ReflectionUtils.cs"];
m9_1206 [label="ExceptionAssert.Throws<JsonSerializationException>(''Cannot preserve reference to readonly dictionary, or dictionary created from a non-default constructor: Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+DictionaryWithNoDefaultConstructor. Path 'key1', line 1, position 16.'',\r\n        () => JsonConvert.DeserializeObject<DictionaryWithNoDefaultConstructor>(json, new JsonSerializerSettings { PreserveReferencesHandling = PreserveReferencesHandling.All }))", span="2740-2741", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", file="ReflectionUtils.cs"];
m9_1205 [label="string json = ''{'$id':'1',key1:'value1',key2:'value2',key3:'value3'}''", span="2738-2738", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", file="ReflectionUtils.cs"];
m9_1207 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", span="2736-2736", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", file="ReflectionUtils.cs"];
m9_115 [label="return (t.IsGenericType() && t.GetGenericTypeDefinition() == typeof(Nullable<>));", span="271-271", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", file="ReflectionUtils.cs"];
m9_118 [label="Entry System.Type.GetGenericTypeDefinition()", span="0-0", cluster="System.Type.GetGenericTypeDefinition()", file="ReflectionUtils.cs"];
m9_121 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.EnsureNotNullableType(System.Type)", span="274-274", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.EnsureNotNullableType(System.Type)", file="ReflectionUtils.cs"];
m9_116 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", span="267-267", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", file="ReflectionUtils.cs"];
m9_119 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.EnsureNotNullableType(System.Type)", span="274-274", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.EnsureNotNullableType(System.Type)", file="ReflectionUtils.cs"];
m9_120 [label="return (IsNullableType(t))\r\n                ? Nullable.GetUnderlyingType(t)\r\n                : t;", span="276-278", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.EnsureNotNullableType(System.Type)", file="ReflectionUtils.cs"];
m9_869 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrimitiveValuesInObjectArray()", span="1914-1914", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrimitiveValuesInObjectArray()", file="ReflectionUtils.cs"];
m9_871 [label="ObjectArrayPropertyTest o = JsonConvert.DeserializeObject<ObjectArrayPropertyTest>(json)", span="1918-1918", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrimitiveValuesInObjectArray()", file="ReflectionUtils.cs"];
m9_872 [label="Assert.AreEqual(''Router'', o.Action)", span="1920-1920", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrimitiveValuesInObjectArray()", file="ReflectionUtils.cs"];
m9_873 [label="Assert.AreEqual(''Navigate'', o.Method)", span="1921-1921", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrimitiveValuesInObjectArray()", file="ReflectionUtils.cs"];
m9_874 [label="Assert.AreEqual(2, o.Data.Length)", span="1922-1922", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrimitiveValuesInObjectArray()", file="ReflectionUtils.cs"];
m9_875 [label="Assert.AreEqual(''dashboard'', o.Data[0])", span="1923-1923", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrimitiveValuesInObjectArray()", file="ReflectionUtils.cs"];
m9_876 [label="Assert.AreEqual(null, o.Data[1])", span="1924-1924", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrimitiveValuesInObjectArray()", file="ReflectionUtils.cs"];
m9_870 [label="string json = @''{''''action'''':''''Router'''',''''method'''':''''Navigate'''',''''data'''':[''''dashboard'''',null],''''type'''':''''rpc'''',''''tid'''':2}''", span="1916-1916", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrimitiveValuesInObjectArray()", file="ReflectionUtils.cs"];
m9_877 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrimitiveValuesInObjectArray()", span="1914-1914", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrimitiveValuesInObjectArray()", file="ReflectionUtils.cs"];
m9_3195 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", span="992-992", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", file="ReflectionUtils.cs"];
m9_256 [label="JsonSerializerSettings settings = new JsonSerializerSettings()", span="632-632", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="ReflectionUtils.cs"];
m9_1291 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="ReflectionUtils.cs"];
m9_2984 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", span="6899-6899", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="ReflectionUtils.cs"];
m9_2986 [label="var l = JsonConvert.DeserializeObject<IReadOnlyList<BigInteger>>(json)", span="6905-6905", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="ReflectionUtils.cs"];
m9_2988 [label="Assert.AreEqual(BigInteger.Parse(''9000000000000000000000000000000000000000000000000''), nineQuindecillion)", span="6910-6910", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="ReflectionUtils.cs"];
m9_2985 [label="string json = @''[\r\n        9000000000000000000000000000000000000000000000000\r\n      ]''", span="6901-6903", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="ReflectionUtils.cs"];
m9_2987 [label="BigInteger nineQuindecillion = l[0]", span="6907-6907", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="ReflectionUtils.cs"];
m9_2989 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", span="6899-6899", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="ReflectionUtils.cs"];
m9_707 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", span="1500-1500", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="ReflectionUtils.cs"];
m9_711 [label="Assert.AreEqual(@''{''''$id'''':''''1'''',''''SubProp'''':''''my subprop'''',''''SuperProp'''':''''overrided superprop''''}'', json)", span="1510-1510", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="ReflectionUtils.cs"];
m9_714 [label="Assert.AreEqual(@''{''''$id'''':''''1'''',''''SubProp'''':''''my subprop'''',''''SuperProp'''':''''overrided superprop''''}'', newJson)", span="1521-1521", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="ReflectionUtils.cs"];
m9_710 [label="string json = JsonConvert.SerializeObject(i, new JsonSerializerSettings\r\n        {\r\n          PreserveReferencesHandling = PreserveReferencesHandling.Objects\r\n        })", span="1505-1508", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="ReflectionUtils.cs"];
m9_712 [label="SubKlass ii = JsonConvert.DeserializeObject<SubKlass>(json, new JsonSerializerSettings\r\n        {\r\n          PreserveReferencesHandling = PreserveReferencesHandling.Objects\r\n        })", span="1512-1515", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="ReflectionUtils.cs"];
m9_713 [label="string newJson = JsonConvert.SerializeObject(ii, new JsonSerializerSettings\r\n      {\r\n        PreserveReferencesHandling = PreserveReferencesHandling.Objects\r\n      })", span="1517-1520", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="ReflectionUtils.cs"];
m9_708 [label="SubKlass i = new SubKlass(''my subprop'')", span="1502-1502", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="ReflectionUtils.cs"];
m9_709 [label="i.SuperProp = ''overrided superprop''", span="1503-1503", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="ReflectionUtils.cs"];
m9_715 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", span="1500-1500", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="ReflectionUtils.cs"];
m9_1345 [label="Entry System.Runtime.Serialization.SerializationInfo.GetInt64(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetInt64(string)", file="ReflectionUtils.cs"];
m9_2625 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", span="6063-6063", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="ReflectionUtils.cs"];
m9_2628 [label="Assert.AreEqual(DateTimeKind.Local, c.Value.Kind)", span="6069-6069", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="ReflectionUtils.cs"];
m9_2627 [label="DateTimeWrapper c = JsonConvert.DeserializeObject<DateTimeWrapper>(jsonIsoText, new IsoDateTimeConverter())", span="6068-6068", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="ReflectionUtils.cs"];
m9_2626 [label="string jsonIsoText =\r\n        @''{''''Value'''':''''2012-02-25T19:55:50.6095676+13:00''''}''", span="6065-6066", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="ReflectionUtils.cs"];
m9_2629 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", span="6063-6063", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="ReflectionUtils.cs"];
m9_3077 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D_WithTooManyItems()", span="7199-7199", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D_WithTooManyItems()", file="ReflectionUtils.cs"];
m9_3078 [label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1,2,3],[2,1],[2,2]],''''After'''':''''After!''''}''", span="7201-7201", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D_WithTooManyItems()", file="ReflectionUtils.cs"];
m9_3079 [label="ExceptionAssert.Throws<Exception>(\r\n        ''Cannot deserialize non-cubical array as multidimensional array.'',\r\n        () => JsonConvert.DeserializeObject<Array2D>(json))", span="7203-7205", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D_WithTooManyItems()", file="ReflectionUtils.cs"];
m9_3080 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D_WithTooManyItems()", span="7199-7199", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D_WithTooManyItems()", file="ReflectionUtils.cs"];
m9_1371 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, object)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, object)", file="ReflectionUtils.cs"];
m9_2021 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", span="4644-4644", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="ReflectionUtils.cs"];
m9_2024 [label="Response deserializedResponse = JsonConvert.DeserializeObject<Response>(json)", span="4654-4654", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="ReflectionUtils.cs"];
m9_2025 [label="Assert.AreEqual(''Success'', deserializedResponse.Name)", span="4656-4656", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="ReflectionUtils.cs"];
m9_2023 [label="string json = JsonConvert.SerializeObject(response, Formatting.Indented)", span="4652-4652", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="ReflectionUtils.cs"];
m9_2026 [label="Assert.IsTrue(deserializedResponse.Data.DeepEquals(response.Data))", span="4657-4657", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="ReflectionUtils.cs"];
m9_2022 [label="Response response = new Response\r\n        {\r\n          Name = ''Success'',\r\n          Data = new JObject(new JProperty(''First'', ''Value1''), new JProperty(''Second'', ''Value2''))\r\n        }", span="4646-4650", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="ReflectionUtils.cs"];
m9_2027 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", span="4644-4644", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="ReflectionUtils.cs"];
m9_1994 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="4561-4561", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReflectionUtils.cs"];
m9_1995 [label="_name = info.GetString(''Name'')", span="4563-4563", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReflectionUtils.cs"];
m9_1996 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="4561-4561", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReflectionUtils.cs"];
m9_3217 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", span="7606-7606", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="ReflectionUtils.cs"];
m9_3220 [label="Assert.AreEqual(@''[\r\n  ''''2000-12-12T12:12:12.000Z'''',\r\n  ''''2000-12-12T12:12:12.000+01:00''''\r\n]'', json)", span="7619-7622", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="ReflectionUtils.cs"];
m9_3219 [label="string json = JsonConvert.SerializeObject(dates, Formatting.Indented, new JsonSerializerSettings\r\n      {\r\n        DateFormatString = @''yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffK''\r\n      })", span="7614-7617", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="ReflectionUtils.cs"];
m9_3218 [label="IList<object> dates = new List<object>\r\n        {\r\n          new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc),\r\n          new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1))\r\n        }", span="7608-7612", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="ReflectionUtils.cs"];
m9_3221 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", span="7606-7606", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="ReflectionUtils.cs"];
m9_1118 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", span="2455-2455", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="ReflectionUtils.cs"];
m9_1119 [label="ExceptionAssert.Throws<JsonSerializationException>(''Could not convert string 'Newtonsoft.Json.Tests.TestObjects.Person' to dictionary key type 'Newtonsoft.Json.Tests.TestObjects.Person'. Create a TypeConverter to convert from the string to the key type object. Path 'Newtonsoft.Json.Tests.TestObjects.Person', line 2, position 46.'',\r\n      () =>\r\n      {\r\n        string json =\r\n          @''{\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Person'''': 1,\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Person'''': 2\r\n}'';\r\n\r\n        JsonConvert.DeserializeObject<Dictionary<Person, int>>(json);\r\n      })", span="2457-2467", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="ReflectionUtils.cs"];
m9_1120 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", span="2455-2455", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="ReflectionUtils.cs"];
m9_2848 [label="Entry Newtonsoft.Json.JsonConvert.ConvertJavaScriptTicksToDateTime(long)", span="303-303", cluster="Newtonsoft.Json.JsonConvert.ConvertJavaScriptTicksToDateTime(long)", file="ReflectionUtils.cs"];
m9_2060 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", span="4735-4735", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="ReflectionUtils.cs"];
m9_2061 [label="PublicConstructorOverridenByJsonConstructor c = JsonConvert.DeserializeObject<PublicConstructorOverridenByJsonConstructor>(''{Value:'value!'}'')", span="4737-4737", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="ReflectionUtils.cs"];
m9_2062 [label="Assert.AreEqual(''Public Paramatized'', c.Constructor)", span="4738-4738", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="ReflectionUtils.cs"];
m9_2063 [label="Assert.AreEqual(''value!'', c.Value)", span="4739-4739", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="ReflectionUtils.cs"];
m9_2064 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", span="4735-4735", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="ReflectionUtils.cs"];
m9_3393 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReadOnlyCollection()", span="8048-8048", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReadOnlyCollection()", file="ReflectionUtils.cs"];
m9_3397 [label="Assert.AreEqual(@''[\r\n  1,\r\n  2,\r\n  3\r\n]'', json)", span="8060-8064", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReadOnlyCollection()", file="ReflectionUtils.cs"];
m9_3396 [label="string json = JsonConvert.SerializeObject(list, Formatting.Indented)", span="8059-8059", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReadOnlyCollection()", file="ReflectionUtils.cs"];
m9_3395 [label="CustomReadOnlyCollection<int> list = new CustomReadOnlyCollection<int>(l)", span="8057-8057", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReadOnlyCollection()", file="ReflectionUtils.cs"];
m9_3394 [label="IList<int> l = new List<int>\r\n                       {\r\n                         1,\r\n                         2,\r\n                         3\r\n                       }", span="8050-8055", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReadOnlyCollection()", file="ReflectionUtils.cs"];
m9_3398 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReadOnlyCollection()", span="8048-8048", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReadOnlyCollection()", file="ReflectionUtils.cs"];
m9_171 [label="currentType.IsGenericType()", span="361-361", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinitionInternal(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs"];
m9_173 [label="genericClassDefinition == currentGenericClassDefinition", span="365-365", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinitionInternal(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs"];
m9_172 [label="Type currentGenericClassDefinition = currentType.GetGenericTypeDefinition()", span="363-363", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinitionInternal(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs"];
m9_170 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinitionInternal(System.Type, System.Type, out System.Type)", span="359-359", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinitionInternal(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs"];
m9_174 [label="implementingType = currentType", span="367-367", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinitionInternal(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs"];
m9_1347 [label="Entry System.Runtime.Serialization.SerializationInfo.GetSingle(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetSingle(string)", file="ReflectionUtils.cs"];
m9_2172 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", span="5101-5101", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="ReflectionUtils.cs"];
m9_2175 [label="Assert.AreEqual(@''{\r\n  ''''virtualMember'''': ''''2010-12-31T00:00:00Z'''',\r\n  ''''newMemberWithProperty'''': null\r\n}'', result)", span="5111-5114", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="ReflectionUtils.cs"];
m9_2174 [label="string result = JsonConvert.SerializeObject(cc, Formatting.Indented)", span="5109-5109", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="ReflectionUtils.cs"];
m9_2173 [label="ImplementInterfaceObject cc = new ImplementInterfaceObject\r\n        {\r\n          InterfaceMember = new DateTime(2010, 12, 31, 0, 0, 0, DateTimeKind.Utc),\r\n          NewMember = ''NewMember!''\r\n        }", span="5103-5107", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="ReflectionUtils.cs"];
m9_2176 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", span="5101-5101", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="ReflectionUtils.cs"];
m9_91 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", span="272-272", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="ReflectionUtils.cs"];
m9_2912 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="6719-6719", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionUtils.cs"];
m9_2913 [label="writer.WriteValue(''X'')", span="6721-6721", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionUtils.cs"];
m9_2914 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="6719-6719", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionUtils.cs"];
m9_2758 [label="Entry Newtonsoft.Json.Tests.Serialization.RequiredObject.RequiredObject()", span="8412-8412", cluster="Newtonsoft.Json.Tests.Serialization.RequiredObject.RequiredObject()", file="ReflectionUtils.cs"];
m9_1747 [label="Entry Newtonsoft.Json.Tests.Serialization.ShouldSerializeTestClass.ShouldSerializeTestClass()", span="8534-8534", cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTestClass.ShouldSerializeTestClass()", file="ReflectionUtils.cs"];
m9_1277 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.GetEnumerator()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.GetEnumerator()", file="ReflectionUtils.cs"];
m9_1296 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", span="2988-2988", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", file="ReflectionUtils.cs"];
m9_1297 [label="return ((IEnumerable)_innerDictionary).GetEnumerator();", span="2990-2990", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", file="ReflectionUtils.cs"];
m9_1298 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", span="2988-2988", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", file="ReflectionUtils.cs"];
m9_215 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", span="445-445", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="ReflectionUtils.cs"];
m9_1337 [label="Entry System.Runtime.Serialization.SerializationInfo.GetInt32(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetInt32(string)", file="ReflectionUtils.cs"];
m9_796 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", span="1736-1736", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="ReflectionUtils.cs"];
m9_799 [label="Assert.AreEqual(''Name!'', c.Name)", span="1760-1760", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="ReflectionUtils.cs"];
m9_800 [label="Assert.AreEqual(3, c.Dictionary.Count)", span="1761-1761", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="ReflectionUtils.cs"];
m9_801 [label="Assert.AreEqual(11, c.Dictionary[''Item''])", span="1762-1762", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="ReflectionUtils.cs"];
m9_802 [label="Assert.AreEqual(1, c.Dictionary[''existing''])", span="1763-1763", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="ReflectionUtils.cs"];
m9_803 [label="Assert.AreEqual(4, c.Collection.Count)", span="1764-1764", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="ReflectionUtils.cs"];
m9_804 [label="Assert.AreEqual(1, c.Collection.ElementAt(0))", span="1765-1765", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="ReflectionUtils.cs"];
m9_805 [label="Assert.AreEqual(999, c.Collection.ElementAt(3))", span="1766-1766", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="ReflectionUtils.cs"];
m9_806 [label="Assert.AreEqual(''EmployeeName!'', c.Employee.Name)", span="1767-1767", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="ReflectionUtils.cs"];
m9_807 [label="Assert.AreEqual(''ManagerName!'', c.Employee.Manager.Name)", span="1768-1768", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="ReflectionUtils.cs"];
m9_798 [label="DictionaryInterfaceClass c = JsonConvert.DeserializeObject<DictionaryInterfaceClass>(json,\r\n                                                                                           new JsonSerializerSettings { ObjectCreationHandling = ObjectCreationHandling.Reuse })", span="1757-1758", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="ReflectionUtils.cs"];
m9_808 [label="Assert.IsNotNull(c.Random)", span="1769-1769", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="ReflectionUtils.cs"];
m9_797 [label="string json = @''{\r\n  ''''Random'''': {\r\n    ''''blah'''': 1\r\n  },\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Dictionary'''': {\r\n    ''''Item'''': 11,\r\n    ''''Item1'''': 12\r\n  },\r\n  ''''Collection'''': [\r\n    999\r\n  ],\r\n  ''''Employee'''': {\r\n    ''''Manager'''': {\r\n      ''''Name'''': ''''ManagerName!''''\r\n    }\r\n  }\r\n}''", span="1738-1755", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="ReflectionUtils.cs"];
m9_809 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", span="1736-1736", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="ReflectionUtils.cs"];
m9_1373 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, bool)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, bool)", file="ReflectionUtils.cs"];
m9_537 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.IsMethodOverridden(System.Type, System.Type, string)", span="1059-1059", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsMethodOverridden(System.Type, System.Type, string)", file="ReflectionUtils.cs"];
m9_536 [label="return isMethodOverriden;", span="1069-1069", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsMethodOverridden(System.Type, System.Type, string)", file="ReflectionUtils.cs"];
m9_534 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsMethodOverridden(System.Type, System.Type, string)", span="1059-1059", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsMethodOverridden(System.Type, System.Type, string)", file="ReflectionUtils.cs"];
m9_535 [label="bool isMethodOverriden = currentType.GetMethods(BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance)\r\n                .Any(info =>\r\n                    info.Name == method &&\r\n                    // check that the method overrides the original on DynamicObjectProxy\r\n                    info.DeclaringType != methodDeclaringType\r\n                    && info.GetBaseDefinition().DeclaringType == methodDeclaringType\r\n                )", span="1061-1067", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsMethodOverridden(System.Type, System.Type, string)", file="ReflectionUtils.cs"];
m9_538 [label="Entry System.Type.GetMethods(System.Reflection.BindingFlags)", span="0-0", cluster="System.Type.GetMethods(System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m9_453 [label="Entry System.DateTime.DateTime(long, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(long, System.DateTimeKind)", file="ReflectionUtils.cs"];
m9_1270 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", span="2950-2950", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", file="ReflectionUtils.cs"];
m9_1271 [label="((IDictionary<string, T>)_innerDictionary).CopyTo(array, arrayIndex)", span="2952-2952", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", file="ReflectionUtils.cs"];
m9_1272 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", span="2950-2950", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", file="ReflectionUtils.cs"];
m9_2387 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToNonNullableKeyValuePairArray()", span="5599-5599", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToNonNullableKeyValuePairArray()", file="ReflectionUtils.cs"];
m9_2388 [label="string json = @''[ null ]''", span="5601-5601", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToNonNullableKeyValuePairArray()", file="ReflectionUtils.cs"];
m9_2389 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''Cannot convert null value to KeyValuePair. Path '[0]', line 1, position 6.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<IList<KeyValuePair<string, IList<string>>>>(json);\r\n        })", span="5603-5608", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToNonNullableKeyValuePairArray()", file="ReflectionUtils.cs"];
m9_2390 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToNonNullableKeyValuePairArray()", span="5599-5599", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToNonNullableKeyValuePairArray()", file="ReflectionUtils.cs"];
m9_727 [label="Entry Newtonsoft.Json.Tests.TestObjects.JsonPropertyWithHandlingValues.JsonPropertyWithHandlingValues()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.JsonPropertyWithHandlingValues.JsonPropertyWithHandlingValues()", file="ReflectionUtils.cs"];
m9_2854 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", span="6580-6580", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="ReflectionUtils.cs"];
m9_2857 [label="Assert.AreEqual(@''{\r\n  ''''DataMemberAttribute'''': ''''Value!'''',\r\n  ''''IgnoreDataMemberAndDataMemberAttribute'''': ''''Value!''''\r\n}'', json)", span="6597-6600", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="ReflectionUtils.cs"];
m9_2860 [label="Assert.AreEqual(@''{\r\n  ''''NoAttribute'''': ''''Value!'''',\r\n  ''''DataMemberAttribute'''': ''''Value!''''\r\n}'', json)", span="6611-6614", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="ReflectionUtils.cs"];
m9_2856 [label="string json = JsonConvert.SerializeObject(dataContract, Formatting.Indented)", span="6596-6596", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="ReflectionUtils.cs"];
m9_2858 [label="PocoDataContractSerializationAttributesClass poco = new PocoDataContractSerializationAttributesClass\r\n      {\r\n        NoAttribute = ''Value!'',\r\n        IgnoreDataMemberAttribute = ''Value!'',\r\n        DataMemberAttribute = ''Value!'',\r\n        IgnoreDataMemberAndDataMemberAttribute = ''Value!''\r\n      }", span="6602-6608", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="ReflectionUtils.cs"];
m9_2859 [label="json = JsonConvert.SerializeObject(poco, Formatting.Indented)", span="6610-6610", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="ReflectionUtils.cs"];
m9_2855 [label="DataContractSerializationAttributesClass dataContract = new DataContractSerializationAttributesClass\r\n        {\r\n          NoAttribute = ''Value!'',\r\n          IgnoreDataMemberAttribute = ''Value!'',\r\n          DataMemberAttribute = ''Value!'',\r\n          IgnoreDataMemberAndDataMemberAttribute = ''Value!''\r\n        }", span="6582-6588", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="ReflectionUtils.cs"];
m9_2861 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", span="6580-6580", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="ReflectionUtils.cs"];
m9_1641 [label="Entry Newtonsoft.Json.JsonReader.Read()", span="332-332", cluster="Newtonsoft.Json.JsonReader.Read()", file="ReflectionUtils.cs"];
m9_1895 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", span="4341-4341", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", file="ReflectionUtils.cs"];
m9_1896 [label="NullableDateTimeTestClass d = JsonConvert.DeserializeObject<NullableDateTimeTestClass>(''{\''DateTimeOffsetField\'':\''2000-01-01T00:00:00+06:00\''}'')", span="4343-4343", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", file="ReflectionUtils.cs"];
m9_1897 [label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6)), d.DateTimeOffsetField)", span="4344-4344", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", file="ReflectionUtils.cs"];
m9_1898 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", span="4341-4341", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", file="ReflectionUtils.cs"];
m9_2119 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", span="4907-4907", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="ReflectionUtils.cs"];
m9_2121 [label="CommentTestClass commentTestClass = JsonConvert.DeserializeObject<CommentTestClass>(json)", span="4920-4920", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="ReflectionUtils.cs"];
m9_2122 [label="Assert.AreEqual(true, commentTestClass.Indexed)", span="4922-4922", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="ReflectionUtils.cs"];
m9_2123 [label="Assert.AreEqual(1939, commentTestClass.StartYear)", span="4923-4923", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="ReflectionUtils.cs"];
m9_2124 [label="Assert.AreEqual(63, commentTestClass.Values.Count)", span="4924-4924", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="ReflectionUtils.cs"];
m9_2120 [label="string json = @''{''''indexed'''':true, ''''startYear'''':1939, ''''values'''':\r\n                            [  3000,  /* 1940-1949 */\r\n                               3000,   3600,   3600,   3600,   3600,   4200,   4200,   4200,   4200,   4800,  /* 1950-1959 */\r\n                               4800,   4800,   4800,   4800,   4800,   4800,   6600,   6600,   7800,   7800,  /* 1960-1969 */\r\n                               7800,   7800,   9000,  10800,  13200,  14100,  15300,  16500,  17700,  22900,  /* 1970-1979 */\r\n                              25900,  29700,  32400,  35700,  37800,  39600,  42000,  43800,  45000,  48000,  /* 1980-1989 */\r\n                              51300,  53400,  55500,  57600,  60600,  61200,  62700,  65400,  68400,  72600,  /* 1990-1999 */\r\n                              76200,  80400,  84900,  87000,  87900,  90000,  94200,  97500, 102000, 106800,  /* 2000-2009 */\r\n                             106800, 106800]  /* 2010-2011 */\r\n                                }''", span="4909-4918", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="ReflectionUtils.cs"];
m9_2125 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", span="4907-4907", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="ReflectionUtils.cs"];
m9_2343 [label="Entry Newtonsoft.Json.Linq.JToken.CreateReader()", span="1575-1575", cluster="Newtonsoft.Json.Linq.JToken.CreateReader()", file="ReflectionUtils.cs"];
m9_920 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", span="2049-2049", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="ReflectionUtils.cs"];
m9_922 [label="NullableDateTimeTestClass c = JsonConvert.DeserializeObject<NullableDateTimeTestClass>(json)", span="2053-2053", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="ReflectionUtils.cs"];
m9_923 [label="Assert.AreEqual(null, c.DateTimeField)", span="2054-2054", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="ReflectionUtils.cs"];
m9_921 [label="string json = @''{''''DateTimeField'''':''''''''}''", span="2051-2051", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="ReflectionUtils.cs"];
m9_924 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", span="2049-2049", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="ReflectionUtils.cs"];
m9_2341 [label="Entry Newtonsoft.Json.Linq.JObject.FromObject(object)", span="342-342", cluster="Newtonsoft.Json.Linq.JObject.FromObject(object)", file="ReflectionUtils.cs"];
m9_1866 [label="Entry System.Collections.ObjectModel.Collection<T>.Add(T)", span="0-0", cluster="System.Collections.ObjectModel.Collection<T>.Add(T)", file="ReflectionUtils.cs"];
m9_2915 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="829-829", cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="ReflectionUtils.cs"];
m9_216 [label="ValidationUtils.ArgumentNotNull(member, nameof(member))", span="447-447", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="ReflectionUtils.cs"];
m9_219 [label="return ((FieldInfo)member).FieldType;", span="452-452", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="ReflectionUtils.cs"];
m9_218 [label="MemberTypes.Field", span="451-451", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="ReflectionUtils.cs"];
m9_217 [label="member.MemberType()", span="449-449", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="ReflectionUtils.cs"];
m9_220 [label="MemberTypes.Property", span="453-453", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="ReflectionUtils.cs"];
m9_2597 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", span="6009-6009", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", file="ReflectionUtils.cs"];
m9_2598 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''No JSON content found and type 'System.StringComparison' is not nullable. Path '', line 0, position 0.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<StringComparison>('''');\r\n        })", span="6011-6016", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", file="ReflectionUtils.cs"];
m9_2599 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", span="6009-6009", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", file="ReflectionUtils.cs"];
m9_2829 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", span="6506-6506", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="ReflectionUtils.cs"];
m9_2837 [label="var jsonReader = new Newtonsoft.Json.JsonTextReader(new StringReader(json))", span="6509-6509", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="ReflectionUtils.cs"];
m9_2840 [label="return serializer.Deserialize(jsonReader, typeof(T)) as T;", span="6516-6516", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="ReflectionUtils.cs"];
m9_2838 [label="var serializer = new Newtonsoft.Json.JsonSerializer()", span="6510-6510", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="ReflectionUtils.cs"];
m9_2839 [label="serializer.ContractResolver = new DefaultContractResolver(false)\r\n      {\r\n        IgnoreSerializableAttribute = false\r\n      }", span="6511-6514", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="ReflectionUtils.cs"];
m9_2841 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", span="6506-6506", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="ReflectionUtils.cs"];
m9_2549 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", span="5916-5916", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="ReflectionUtils.cs"];
m9_2552 [label="WithEnums e = JsonConvert.DeserializeObject<WithEnums>(json)", span="5926-5926", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="ReflectionUtils.cs"];
m9_2556 [label="e = JsonConvert.DeserializeObject<WithEnums>(json)", span="5938-5938", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="ReflectionUtils.cs"];
m9_2551 [label="Assert.AreEqual(@''{''''Id'''':7,''''NullableEnum'''':null}'', json)", span="5924-5924", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="ReflectionUtils.cs"];
m9_2553 [label="Assert.AreEqual(null, e.NullableEnum)", span="5928-5928", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="ReflectionUtils.cs"];
m9_2555 [label="Assert.AreEqual(@''{''''Id'''':7,''''NullableEnum'''':1}'', json)", span="5936-5936", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="ReflectionUtils.cs"];
m9_2557 [label="Assert.AreEqual(MyEnum.Value2, e.NullableEnum)", span="5940-5940", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="ReflectionUtils.cs"];
m9_2550 [label="string json = JsonConvert.SerializeObject(new WithEnums\r\n        {\r\n          Id = 7,\r\n          NullableEnum = null\r\n        })", span="5918-5922", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="ReflectionUtils.cs"];
m9_2554 [label="json = JsonConvert.SerializeObject(new WithEnums\r\n        {\r\n          Id = 7,\r\n          NullableEnum = MyEnum.Value2\r\n        })", span="5930-5934", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="ReflectionUtils.cs"];
m9_2558 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", span="5916-5916", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="ReflectionUtils.cs"];
m9_3334 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyCollectionInterface()", span="7907-7907", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyCollectionInterface()", file="ReflectionUtils.cs"];
m9_3335 [label="IReadOnlyCollection<int> list = JsonConvert.DeserializeObject<IReadOnlyCollection<int>>(''[1,2,3]'')", span="7909-7909", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyCollectionInterface()", file="ReflectionUtils.cs"];
m9_3336 [label="Assert.AreEqual(3, list.Count)", span="7911-7911", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyCollectionInterface()", file="ReflectionUtils.cs"];
m9_3337 [label="Assert.AreEqual(1, list.ElementAt(0))", span="7913-7913", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyCollectionInterface()", file="ReflectionUtils.cs"];
m9_3338 [label="Assert.AreEqual(2, list.ElementAt(1))", span="7914-7914", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyCollectionInterface()", file="ReflectionUtils.cs"];
m9_3339 [label="Assert.AreEqual(3, list.ElementAt(2))", span="7915-7915", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyCollectionInterface()", file="ReflectionUtils.cs"];
m9_3340 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyCollectionInterface()", span="7907-7907", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyCollectionInterface()", file="ReflectionUtils.cs"];
m9_224 [label="MemberTypes.Method", span="457-457", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="ReflectionUtils.cs"];
m9_227 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", span="445-445", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="ReflectionUtils.cs"];
m9_226 [label="throw new ArgumentException(''MemberInfo must be of type FieldInfo, PropertyInfo, EventInfo or MethodInfo'', nameof(member));", span="460-460", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="ReflectionUtils.cs"];
m9_225 [label="return ((MethodInfo)member).ReturnType;", span="458-458", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="ReflectionUtils.cs"];
m9_228 [label="Entry System.Reflection.MemberInfo.MemberType()", span="107-107", cluster="System.Reflection.MemberInfo.MemberType()", file="ReflectionUtils.cs"];
m9_176 [label="Entry System.Text.Encoding.GetBytes(string)", span="0-0", cluster="System.Text.Encoding.GetBytes(string)", file="ReflectionUtils.cs"];
m9_179 [label="string json = @''[''''vvv\/vvv\tvvv\''''vvv\bvvv\nvvv\rvvv\\vvv\fvvv'''']''", span="491-491", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="ReflectionUtils.cs"];
m9_175 [label="Entry System.IO.MemoryStream.MemoryStream(byte[])", span="0-0", cluster="System.IO.MemoryStream.MemoryStream(byte[])", file="ReflectionUtils.cs"];
m9_178 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", span="489-489", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="ReflectionUtils.cs"];
m9_180 [label="JavaScriptSerializer javaScriptSerializer = new JavaScriptSerializer()", span="494-494", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="ReflectionUtils.cs"];
m9_2429 [label="Entry Unk.AreEquivalent", span="", cluster="Unk.AreEquivalent", file="ReflectionUtils.cs"];
m9_1479 [label="Entry System.Type.GetProperty(string, System.Reflection.BindingFlags)", span="0-0", cluster="System.Type.GetProperty(string, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m9_686 [label="Entry Unk.IsNotNull", span="", cluster="Unk.IsNotNull", file="ReflectionUtils.cs"];
m9_108 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", span="306-306", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="ReflectionUtils.cs"];
m9_109 [label="string json = @''{\r\n    results:\r\n        [\r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://www.google.com/'''',\r\n                url : ''''http://www.google.com/'''',\r\n                visibleUrl : ''''www.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:zhool8dxBV4J:www.google.com'''',\r\n                title : ''''Google'''',\r\n                titleNoFormatting : ''''Google'''',\r\n                content : ''''Enables users to search the Web, Usenet, and \r\nimages. Features include PageRank,   caching and translation of \r\nresults, and an option to find similar pages.''''\r\n            },\r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://news.google.com/'''',\r\n                url : ''''http://news.google.com/'''',\r\n                visibleUrl : ''''news.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:Va_XShOz_twJ:news.google.com'''',\r\n                title : ''''Google News'''',\r\n                titleNoFormatting : ''''Google News'''',\r\n                content : ''''Aggregated headlines and a search engine of many of the world's news sources.''''\r\n            },\r\n            \r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://groups.google.com/'''',\r\n                url : ''''http://groups.google.com/'''',\r\n                visibleUrl : ''''groups.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:x2uPD3hfkn0J:groups.google.com'''',\r\n                title : ''''Google Groups'''',\r\n                titleNoFormatting : ''''Google Groups'''',\r\n                content : ''''Enables users to search and browse the Usenet \r\narchives which consist of over 700   million messages, and post new \r\ncomments.''''\r\n            },\r\n            \r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://maps.google.com/'''',\r\n                url : ''''http://maps.google.com/'''',\r\n                visibleUrl : ''''maps.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:dkf5u2twBXIJ:maps.google.com'''',\r\n                title : ''''Google Maps'''',\r\n                titleNoFormatting : ''''Google Maps'''',\r\n                content : ''''Provides directions, interactive maps, and \r\nsatellite/aerial imagery of the United   States. Can also search by \r\nkeyword such as type of business.''''\r\n            }\r\n        ],\r\n        \r\n    adResults:\r\n        [\r\n            {\r\n                GsearchResultClass:''''GwebSearch.ad'''',\r\n                title : ''''Gartner Symposium/ITxpo'''',\r\n                content1 : ''''Meet brilliant Gartner IT analysts'''',\r\n                content2 : ''''20-23 May 2007- Barcelona, Spain'''',\r\n                url : \r\n''''http://www.google.com/url?sa=L&ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB&num=1&q=http://www.gartner.com/it/sym/2007/spr8/spr8.jsp%3Fsrc%3D_spain_07_%26WT.srch%3D1&usg=__CxRH06E4Xvm9Muq13S4MgMtnziY='''', \r\n\r\n                impressionUrl : \r\n''''http://www.google.com/uds/css/ad-indicator-on.gif?ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB'''', \r\n\r\n                unescapedUrl : \r\n''''http://www.google.com/url?sa=L&ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB&num=1&q=http://www.gartner.com/it/sym/2007/spr8/spr8.jsp%3Fsrc%3D_spain_07_%26WT.srch%3D1&usg=__CxRH06E4Xvm9Muq13S4MgMtnziY='''', \r\n\r\n                visibleUrl : ''''www.gartner.com''''\r\n            }\r\n        ]\r\n}\r\n''", span="308-385", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="ReflectionUtils.cs"];
m9_110 [label="object o = JsonConvert.DeserializeObject(json)", span="386-386", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="ReflectionUtils.cs"];
m9_111 [label="string s = string.Empty", span="387-387", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="ReflectionUtils.cs"];
m9_112 [label="s += s", span="388-388", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="ReflectionUtils.cs"];
m9_3311 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", span="7848-7848", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", file="ReflectionUtils.cs"];
m9_3313 [label="Assert.AreEqual(@''{\r\n  ''''<Active>k__BackingField'''': false,\r\n  ''''<Ja>k__BackingField'''': false,\r\n  ''''<Handlungsbedarf>k__BackingField'''': false,\r\n  ''''<Beratungsbedarf>k__BackingField'''': false,\r\n  ''''<Unzutreffend>k__BackingField'''': false,\r\n  ''''<Unbeantwortet>k__BackingField'''': false\r\n}'', json)", span="7859-7866", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", file="ReflectionUtils.cs"];
m9_3312 [label="string json =\r\n        JsonConvert.SerializeObject(new AnswerFilterModel(), Formatting.Indented, new JsonSerializerSettings\r\n          {\r\n            ContractResolver = new DefaultContractResolver\r\n              {\r\n                IgnoreSerializableAttribute = false\r\n              }\r\n          })", span="7850-7857", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", file="ReflectionUtils.cs"];
m9_3314 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", span="7848-7848", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", file="ReflectionUtils.cs"];
m9_264 [label="MemberTypes.Property", span="546-546", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", file="ReflectionUtils.cs"];
m9_341 [label="string json = JsonConvert.SerializeObject(new ConverableMembers(), Formatting.Indented)", span="751-751", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="ReflectionUtils.cs"];
m9_2713 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="386-386", cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="ReflectionUtils.cs"];
m9_416 [label="Entry Newtonsoft.Json.Tests.TestObjects.PhoneNumber.PhoneNumber(string)", span="31-31", cluster="Newtonsoft.Json.Tests.TestObjects.PhoneNumber.PhoneNumber(string)", file="ReflectionUtils.cs"];
m9_136 [label="!genericInterfaceDefinition.IsInterface() || !genericInterfaceDefinition.IsGenericTypeDefinition()", span="303-303", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs"];
m9_2515 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", span="5843-5843", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", file="ReflectionUtils.cs"];
m9_2516 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''Unexpected end when setting PreProperty's value. Path 'PreProperty', line 2, position 18.'',\r\n        () =>\r\n        {\r\n          string json = @''{\r\n  ''''PreProperty'''': '';\r\n\r\n          JsonConvert.DeserializeObject<TestObjects.MyClass>(json);\r\n        })", span="5845-5853", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", file="ReflectionUtils.cs"];
m9_2517 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", span="5843-5843", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", file="ReflectionUtils.cs"];
m9_2103 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", span="4851-4851", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", file="ReflectionUtils.cs"];
m9_2104 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''Error converting value {null} to type 'System.DateTime'. Path '', line 1, position 4.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject(''null'', typeof(DateTime));\r\n        })", span="4853-4858", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", file="ReflectionUtils.cs"];
m9_2105 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", span="4851-4851", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", file="ReflectionUtils.cs"];
m9_1300 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", span="2995-2995", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="ReflectionUtils.cs"];
m9_1305 [label="ModelStateDictionary<string> newModelStateDictionary = JsonConvert.DeserializeObject<ModelStateDictionary<string>>(json)", span="3004-3004", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="ReflectionUtils.cs"];
m9_1304 [label="Assert.AreEqual(@''{''''key'''':''''value''''}'', json)", span="3002-3002", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="ReflectionUtils.cs"];
m9_1306 [label="Assert.AreEqual(1, newModelStateDictionary.Count)", span="3005-3005", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="ReflectionUtils.cs"];
m9_1307 [label="Assert.AreEqual(''value'', newModelStateDictionary[''key''])", span="3006-3006", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="ReflectionUtils.cs"];
m9_1303 [label="string json = JsonConvert.SerializeObject(modelStateDictionary)", span="3000-3000", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="ReflectionUtils.cs"];
m9_1301 [label="ModelStateDictionary<string> modelStateDictionary = new ModelStateDictionary<string>()", span="2997-2997", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="ReflectionUtils.cs"];
m9_1302 [label="modelStateDictionary.Add(''key'', ''value'')", span="2998-2998", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="ReflectionUtils.cs"];
m9_1308 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", span="2995-2995", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="ReflectionUtils.cs"];
m9_3414 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePrivateListConstructor()", span="8105-8105", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePrivateListConstructor()", file="ReflectionUtils.cs"];
m9_3415 [label="var list = JsonConvert.DeserializeObject<PrivateDefaultCtorWithIEnumerableCtorList<int>>(''[1,2]'')", span="8107-8107", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePrivateListConstructor()", file="ReflectionUtils.cs"];
m9_3416 [label="Assert.AreEqual(3, list.Count)", span="8109-8109", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePrivateListConstructor()", file="ReflectionUtils.cs"];
m9_3417 [label="Assert.AreEqual(1, list[0])", span="8110-8110", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePrivateListConstructor()", file="ReflectionUtils.cs"];
m9_3418 [label="Assert.AreEqual(2, list[1])", span="8111-8111", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePrivateListConstructor()", file="ReflectionUtils.cs"];
m9_3419 [label="Assert.AreEqual(0, list[2])", span="8112-8112", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePrivateListConstructor()", file="ReflectionUtils.cs"];
m9_3420 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePrivateListConstructor()", span="8105-8105", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePrivateListConstructor()", file="ReflectionUtils.cs"];
m9_2293 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIList()", span="5429-5429", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIList()", file="ReflectionUtils.cs"];
m9_2294 [label="IList list = JsonConvert.DeserializeObject<IList>(''['1', 'two', 'III']'')", span="5431-5431", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIList()", file="ReflectionUtils.cs"];
m9_2295 [label="Assert.AreEqual(3, list.Count)", span="5432-5432", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIList()", file="ReflectionUtils.cs"];
m9_2296 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIList()", span="5429-5429", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIList()", file="ReflectionUtils.cs"];
m9_1611 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", span="3696-3696", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="ReflectionUtils.cs"];
m9_1618 [label="List<KeyValuePair<string, WagePerson>> result = JsonConvert.DeserializeObject<List<KeyValuePair<string, WagePerson>>>(json)", span="3739-3739", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="ReflectionUtils.cs"];
m9_1617 [label="Assert.AreEqual(@''[\r\n  {\r\n    ''''Key'''': ''''key1'''',\r\n    ''''Value'''': {\r\n      ''''HourlyWage'''': 1.0,\r\n      ''''Name'''': null,\r\n      ''''BirthDate'''': ''''2000-12-01T23:01:01Z'''',\r\n      ''''LastModified'''': ''''2000-12-01T23:01:01Z''''\r\n    }\r\n  },\r\n  {\r\n    ''''Key'''': ''''key2'''',\r\n    ''''Value'''': {\r\n      ''''HourlyWage'''': 2.0,\r\n      ''''Name'''': null,\r\n      ''''BirthDate'''': ''''2000-12-01T23:01:01Z'''',\r\n      ''''LastModified'''': ''''2000-12-01T23:01:01Z''''\r\n    }\r\n  }\r\n]'', json)", span="3718-3737", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="ReflectionUtils.cs"];
m9_1619 [label="Assert.AreEqual(2, result.Count)", span="3740-3740", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="ReflectionUtils.cs"];
m9_1620 [label="Assert.AreEqual(''key1'', result[0].Key)", span="3741-3741", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="ReflectionUtils.cs"];
m9_1621 [label="Assert.AreEqual(1, result[0].Value.HourlyWage)", span="3742-3742", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="ReflectionUtils.cs"];
m9_1622 [label="Assert.AreEqual(''key2'', result[1].Key)", span="3743-3743", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="ReflectionUtils.cs"];
m9_1623 [label="Assert.AreEqual(2, result[1].Value.HourlyWage)", span="3744-3744", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="ReflectionUtils.cs"];
m9_1616 [label="string json = JsonConvert.SerializeObject(list, Formatting.Indented)", span="3716-3716", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="ReflectionUtils.cs"];
m9_1613 [label="List<KeyValuePair<string, WagePerson>> list = new List<KeyValuePair<string, WagePerson>>()", span="3700-3700", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="ReflectionUtils.cs"];
m9_1615 [label="list.Add(new KeyValuePair<string, WagePerson>(''key2'', new WagePerson\r\n        {\r\n          BirthDate = dateTime,\r\n          Department = ''Department2'',\r\n          LastModified = dateTime,\r\n          HourlyWage = 2\r\n        }))", span="3708-3714", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="ReflectionUtils.cs"];
m9_1612 [label="DateTime dateTime = new DateTime(2000, 12, 1, 23, 1, 1, DateTimeKind.Utc)", span="3698-3698", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="ReflectionUtils.cs"];
m9_1614 [label="list.Add(new KeyValuePair<string, WagePerson>(''key1'', new WagePerson\r\n        {\r\n          BirthDate = dateTime,\r\n          Department = ''Department1'',\r\n          LastModified = dateTime,\r\n          HourlyWage = 1\r\n        }))", span="3701-3707", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="ReflectionUtils.cs"];
m9_1624 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", span="3696-3696", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="ReflectionUtils.cs"];
m9_133 [label="Assert.AreEqual(test.Pie, test2.Pie)", span="426-426", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="ReflectionUtils.cs"];
m9_134 [label="Assert.AreEqual(test.SweetCakesCount, test2.SweetCakesCount)", span="427-427", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="ReflectionUtils.cs"];
m9_135 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", span="414-414", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="ReflectionUtils.cs"];
m9_137 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", span="431-431", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", file="ReflectionUtils.cs"];
m9_138 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        @''A member with the name 'pie' already exists on 'Newtonsoft.Json.Tests.TestObjects.BadJsonPropertyClass'. Use the JsonPropertyAttribute to specify another name.'',\r\n        () =>\r\n        {\r\n          JsonConvert.SerializeObject(new BadJsonPropertyClass());\r\n        })", span="433-438", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", file="ReflectionUtils.cs"];
m9_139 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", span="431-431", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", file="ReflectionUtils.cs"];
m9_140 [label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(string, System.Action)", span="121-121", cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(string, System.Action)", file="ReflectionUtils.cs"];
m9_159 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadOnlyCollectionSerialize()", span="460-460", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadOnlyCollectionSerialize()", file="ReflectionUtils.cs"];
m9_160 [label="ReadOnlyCollection<int> r1 = new ReadOnlyCollection<int>(new int[] { 0, 1, 2, 3, 4 })", span="462-462", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadOnlyCollectionSerialize()", file="ReflectionUtils.cs"];
m9_161 [label="string jsonText = JsonConvert.SerializeObject(r1)", span="464-464", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadOnlyCollectionSerialize()", file="ReflectionUtils.cs"];
m9_181 [label="List<string> javaScriptSerializerResult = javaScriptSerializer.Deserialize<List<string>>(json)", span="495-495", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="ReflectionUtils.cs"];
m9_1478 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", span="490-490", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="ReflectionUtils.cs"];
m9_253 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", span="622-622", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="ReflectionUtils.cs"];
m9_3065 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D()", span="7180-7180", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D()", file="ReflectionUtils.cs"];
m9_3067 [label="Array2D aa = JsonConvert.DeserializeObject<Array2D>(json)", span="7184-7184", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D()", file="ReflectionUtils.cs"];
m9_3075 [label="Assert.AreEqual(json, after)", span="7195-7195", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D()", file="ReflectionUtils.cs"];
m9_3068 [label="Assert.AreEqual(''Before!'', aa.Before)", span="7186-7186", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D()", file="ReflectionUtils.cs"];
m9_3069 [label="Assert.AreEqual(''After!'', aa.After)", span="7187-7187", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D()", file="ReflectionUtils.cs"];
m9_3070 [label="Assert.AreEqual(4, aa.Coordinates.GetLength(0))", span="7188-7188", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D()", file="ReflectionUtils.cs"];
m9_3071 [label="Assert.AreEqual(2, aa.Coordinates.GetLength(1))", span="7189-7189", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D()", file="ReflectionUtils.cs"];
m9_3072 [label="Assert.AreEqual(1, aa.Coordinates[0, 0])", span="7190-7190", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D()", file="ReflectionUtils.cs"];
m9_3073 [label="Assert.AreEqual(2, aa.Coordinates[1, 1])", span="7191-7191", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D()", file="ReflectionUtils.cs"];
m9_3074 [label="string after = JsonConvert.SerializeObject(aa)", span="7193-7193", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D()", file="ReflectionUtils.cs"];
m9_3066 [label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1,2],[2,1],[2,2]],''''After'''':''''After!''''}''", span="7182-7182", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D()", file="ReflectionUtils.cs"];
m9_3076 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D()", span="7180-7180", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D()", file="ReflectionUtils.cs"];
m9_2954 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClassFailure<T>.EnumerableClassFailure()", span="6816-6816", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClassFailure<T>.EnumerableClassFailure()", file="ReflectionUtils.cs"];
m9_2955 [label="_values = new List<T>()", span="6818-6818", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClassFailure<T>.EnumerableClassFailure()", file="ReflectionUtils.cs"];
m9_2956 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClassFailure<T>.EnumerableClassFailure()", span="6816-6816", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClassFailure<T>.EnumerableClassFailure()", file="ReflectionUtils.cs"];
m9_2715 [label="Entry Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", span="1763-1763", cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="ReflectionUtils.cs"];
m9_3316 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNonGenericList()", span="7871-7871", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNonGenericList()", file="ReflectionUtils.cs"];
m9_3317 [label="IList l = JsonConvert.DeserializeObject<IList>(''['string!']'')", span="7873-7873", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNonGenericList()", file="ReflectionUtils.cs"];
m9_3318 [label="Assert.AreEqual(typeof(List<object>), l.GetType())", span="7875-7875", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNonGenericList()", file="ReflectionUtils.cs"];
m9_3319 [label="Assert.AreEqual(1, l.Count)", span="7876-7876", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNonGenericList()", file="ReflectionUtils.cs"];
m9_3320 [label="Assert.AreEqual(''string!'', l[0])", span="7877-7877", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNonGenericList()", file="ReflectionUtils.cs"];
m9_3321 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNonGenericList()", span="7871-7871", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNonGenericList()", file="ReflectionUtils.cs"];
m9_2150 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", span="5016-5016", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="ReflectionUtils.cs"];
m9_2156 [label="Console.WriteLine(xml)", span="5031-5031", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="ReflectionUtils.cs"];
m9_2153 [label="MemoryStream ms = new MemoryStream()", span="5026-5026", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="ReflectionUtils.cs"];
m9_2155 [label="string xml = Encoding.UTF8.GetString(ms.ToArray(), 0, Convert.ToInt32(ms.Length))", span="5029-5029", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="ReflectionUtils.cs"];
m9_2154 [label="serializer.WriteObject(ms, cc)", span="5027-5027", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="ReflectionUtils.cs"];
m9_2152 [label="DataContractSerializer serializer = new DataContractSerializer(typeof(ChildDataContract))", span="5024-5024", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="ReflectionUtils.cs"];
m9_2151 [label="ChildDataContract cc = new ChildDataContract\r\n        {\r\n          VirtualMember = ''VirtualMember!'',\r\n          NonVirtualMember = ''NonVirtualMember!''\r\n        }", span="5018-5022", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="ReflectionUtils.cs"];
m9_2157 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", span="5016-5016", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="ReflectionUtils.cs"];
m9_2159 [label="Entry System.Convert.ToInt32(long)", span="0-0", cluster="System.Convert.ToInt32(long)", file="ReflectionUtils.cs"];
m9_2160 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", span="5058-5058", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="ReflectionUtils.cs"];
m9_2163 [label="Assert.AreEqual(@''{''''virtualMember'''':''''VirtualMember!'''',''''nonVirtualMember'''':''''NonVirtualMember!''''}'', result)", span="5067-5067", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="ReflectionUtils.cs"];
m9_2162 [label="string result = JsonConvert.SerializeObject(cc)", span="5066-5066", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="ReflectionUtils.cs"];
m9_2161 [label="ChildObject cc = new ChildObject\r\n        {\r\n          VirtualMember = ''VirtualMember!'',\r\n          NonVirtualMember = ''NonVirtualMember!''\r\n        }", span="5060-5064", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="ReflectionUtils.cs"];
m9_2164 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", span="5058-5058", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="ReflectionUtils.cs"];
m9_474 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="1077-1077", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="ReflectionUtils.cs"];
m9_891 [label="Entry Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", span="96-96", cluster="Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", file="ReflectionUtils.cs"];
m9_1060 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", span="2347-2347", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="ReflectionUtils.cs"];
m9_1066 [label="Assert.AreEqual(@''[''''str_1'''',''''str_2'''',''''str_3'''']'', json)", span="2356-2356", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="ReflectionUtils.cs"];
m9_1065 [label="string json = JsonConvert.SerializeObject(strings)", span="2355-2355", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="ReflectionUtils.cs"];
m9_1061 [label="List<String> strings = new List<String>()", span="2349-2349", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="ReflectionUtils.cs"];
m9_1064 [label="strings.Add(''str_3'')", span="2353-2353", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="ReflectionUtils.cs"];
m9_1062 [label="strings.Add(''str_1'')", span="2351-2351", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="ReflectionUtils.cs"];
m9_1063 [label="strings.Add(''str_2'')", span="2352-2352", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="ReflectionUtils.cs"];
m9_1067 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", span="2347-2347", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="ReflectionUtils.cs"];
m9_1068 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", span="2360-2360", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="ReflectionUtils.cs"];
m9_1072 [label="ConstructorReadonlyFields c2 = JsonConvert.DeserializeObject<ConstructorReadonlyFields>(json)", span="2369-2369", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="ReflectionUtils.cs"];
m9_1071 [label="Assert.AreEqual(@''{\r\n  ''''A'''': ''''String!'''',\r\n  ''''B'''': 2147483647\r\n}'', json)", span="2364-2367", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="ReflectionUtils.cs"];
m9_1073 [label="Assert.AreEqual(''String!'', c2.A)", span="2370-2370", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="ReflectionUtils.cs"];
m9_1074 [label="Assert.AreEqual(int.MaxValue, c2.B)", span="2371-2371", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="ReflectionUtils.cs"];
m9_1070 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="2363-2363", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="ReflectionUtils.cs"];
m9_1069 [label="ConstructorReadonlyFields c1 = new ConstructorReadonlyFields(''String!'', int.MaxValue)", span="2362-2362", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="ReflectionUtils.cs"];
m9_1075 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", span="2360-2360", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="ReflectionUtils.cs"];
m9_2560 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", span="5944-5944", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="ReflectionUtils.cs"];
m9_2563 [label="Widget1 w = JsonConvert.DeserializeObject<Widget1>(@''{''''Id'''':''''1234''''}'')", span="5950-5950", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="ReflectionUtils.cs"];
m9_2562 [label="Assert.AreEqual(@''{''''Id'''':''''1234''''}'', json)", span="5948-5948", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="ReflectionUtils.cs"];
m9_2564 [label="Assert.AreEqual(new WidgetId1 { Value = 1234 }, w.Id)", span="5952-5952", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="ReflectionUtils.cs"];
m9_2561 [label="string json = JsonConvert.SerializeObject(new Widget1 { Id = new WidgetId1 { Value = 1234 } })", span="5946-5946", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="ReflectionUtils.cs"];
m9_2565 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", span="5944-5944", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="ReflectionUtils.cs"];
m9_2763 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", span="6329-6329", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="ReflectionUtils.cs"];
m9_2765 [label="var c2 = JsonConvert.DeserializeObject<PropertyItemConverter>(''{'Data':['::ONE::','::TWO::']}'')", span="6341-6341", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="ReflectionUtils.cs"];
m9_2767 [label="Assert.AreEqual(2, c2.Data.Count)", span="6344-6344", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="ReflectionUtils.cs"];
m9_2768 [label="Assert.AreEqual(''one'', c2.Data[0])", span="6345-6345", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="ReflectionUtils.cs"];
m9_2769 [label="Assert.AreEqual(''two'', c2.Data[1])", span="6346-6346", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="ReflectionUtils.cs"];
m9_2764 [label="PropertyItemConverter c = new PropertyItemConverter\r\n        {\r\n          Data =\r\n            new[]{\r\n              ''one'',\r\n              ''two'',\r\n              ''three''\r\n            }\r\n        }", span="6331-6339", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="ReflectionUtils.cs"];
m9_2766 [label="Assert.IsNotNull(c2)", span="6343-6343", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="ReflectionUtils.cs"];
m9_2770 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", span="6329-6329", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="ReflectionUtils.cs"];
m9_2716 [label="Entry System.Console.WriteLine(object)", span="0-0", cluster="System.Console.WriteLine(object)", file="ReflectionUtils.cs"];
m9_2630 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", span="6074-6074", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="ReflectionUtils.cs"];
m9_2632 [label="Assert.AreEqual(new DateTime(2008, 12, 12, 12, 12, 12, 0, DateTimeKind.Utc).ToLocalTime(), c.DateTimeField)", span="6084-6084", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="ReflectionUtils.cs"];
m9_2633 [label="Assert.AreEqual(new DateTimeOffset(2008, 12, 12, 12, 12, 12, 0, TimeSpan.Zero), c.DateTimeOffsetField)", span="6085-6085", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="ReflectionUtils.cs"];
m9_2634 [label="Assert.AreEqual(''Pre'', c.PreField)", span="6086-6086", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="ReflectionUtils.cs"];
m9_2635 [label="Assert.AreEqual(''Post'', c.PostField)", span="6087-6087", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="ReflectionUtils.cs"];
m9_2637 [label="Assert.AreEqual(new DateTime(2008, 1, 1, 1, 1, 1, 0, DateTimeKind.Utc).ToLocalTime(), c2.DateTimeField)", span="6097-6097", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="ReflectionUtils.cs"];
m9_2638 [label="Assert.AreEqual(new DateTimeOffset(2008, 1, 1, 1, 1, 1, 0, TimeSpan.Zero), c2.DateTimeOffsetField)", span="6098-6098", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="ReflectionUtils.cs"];
m9_2639 [label="Assert.AreEqual(''Pre'', c2.PreField)", span="6099-6099", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="ReflectionUtils.cs"];
m9_2640 [label="Assert.AreEqual(''Post'', c2.PostField)", span="6100-6100", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="ReflectionUtils.cs"];
m9_2631 [label="DateTimeTestClass c =\r\n        JsonConvert.DeserializeObject<DateTimeTestClass>(\r\n          @''{''''PreField'''':''''Pre'''',''''DateTimeField'''':''''2008-12-12T12:12:12Z'''',''''DateTimeOffsetField'''':''''2008-12-12T12:12:12Z'''',''''PostField'''':''''Post''''}'',\r\n          new JsonSerializerSettings\r\n          {\r\n            DateTimeZoneHandling = DateTimeZoneHandling.Local\r\n          })", span="6076-6082", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="ReflectionUtils.cs"];
m9_2636 [label="DateTimeTestClass c2 =\r\n        JsonConvert.DeserializeObject<DateTimeTestClass>(\r\n          @''{''''PreField'''':''''Pre'''',''''DateTimeField'''':''''2008-01-01T01:01:01Z'''',''''DateTimeOffsetField'''':''''2008-01-01T01:01:01Z'''',''''PostField'''':''''Post''''}'',\r\n          new JsonSerializerSettings\r\n          {\r\n            DateTimeZoneHandling = DateTimeZoneHandling.Local\r\n          })", span="6089-6095", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="ReflectionUtils.cs"];
m9_2641 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", span="6074-6074", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="ReflectionUtils.cs"];
m9_1894 [label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime, System.TimeSpan)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime, System.TimeSpan)", file="ReflectionUtils.cs"];
m9_2232 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", span="5254-5254", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="ReflectionUtils.cs"];
m9_2234 [label="Assert.AreEqual(@''{\r\n  ''''DerivedClassValue'''': ''''DerivedClassValue!'''',\r\n  ''''BaseClassValue'''': ''''BaseClassValue!''''\r\n}'', json)", span="5263-5266", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="ReflectionUtils.cs"];
m9_2236 [label="Assert.AreEqual(@''{\r\n  ''''CollectionDerivedClassValue'''': ''''CollectionDerivedClassValue!'''',\r\n  ''''BaseClassValue'''': ''''BaseClassValue!''''\r\n}'', json)", span="5274-5277", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="ReflectionUtils.cs"];
m9_2233 [label="string json = JsonConvert.SerializeObject(new ClassAttributeDerived\r\n        {\r\n          BaseClassValue = ''BaseClassValue!'',\r\n          DerivedClassValue = ''DerivedClassValue!'',\r\n          NonSerialized = ''NonSerialized!''\r\n        }, Formatting.Indented)", span="5256-5261", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="ReflectionUtils.cs"];
m9_2235 [label="json = JsonConvert.SerializeObject(new CollectionClassAttributeDerived\r\n        {\r\n          BaseClassValue = ''BaseClassValue!'',\r\n          CollectionDerivedClassValue = ''CollectionDerivedClassValue!''\r\n        }, Formatting.Indented)", span="5268-5272", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="ReflectionUtils.cs"];
m9_2237 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", span="5254-5254", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="ReflectionUtils.cs"];
m9_3053 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3DWithConverter()", span="7111-7111", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3DWithConverter()", file="ReflectionUtils.cs"];
m9_3055 [label="Array3DWithConverter aa = JsonConvert.DeserializeObject<Array3DWithConverter>(json)", span="7168-7168", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3DWithConverter()", file="ReflectionUtils.cs"];
m9_3056 [label="Assert.AreEqual(''Before!'', aa.Before)", span="7170-7170", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3DWithConverter()", file="ReflectionUtils.cs"];
m9_3057 [label="Assert.AreEqual(''After!'', aa.After)", span="7171-7171", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3DWithConverter()", file="ReflectionUtils.cs"];
m9_3058 [label="Assert.AreEqual(4, aa.Coordinates.GetLength(0))", span="7172-7172", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3DWithConverter()", file="ReflectionUtils.cs"];
m9_3059 [label="Assert.AreEqual(2, aa.Coordinates.GetLength(1))", span="7173-7173", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3DWithConverter()", file="ReflectionUtils.cs"];
m9_3060 [label="Assert.AreEqual(3, aa.Coordinates.GetLength(2))", span="7174-7174", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3DWithConverter()", file="ReflectionUtils.cs"];
m9_3061 [label="Assert.AreEqual(1, aa.Coordinates[0, 0, 0])", span="7175-7175", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3DWithConverter()", file="ReflectionUtils.cs"];
m9_3062 [label="Assert.AreEqual(2, aa.Coordinates[1, 1, 1])", span="7176-7176", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3DWithConverter()", file="ReflectionUtils.cs"];
m9_3054 [label="string json = @''{\r\n  ''''Before'''': ''''Before!'''',\r\n  ''''Coordinates'''': [\r\n    [\r\n      [\r\n        1.0,\r\n        1.0,\r\n        1.0\r\n      ],\r\n      [\r\n        1.0,\r\n        1.0,\r\n        2.0\r\n      ]\r\n    ],\r\n    [\r\n      [\r\n        1.0,\r\n        2.0,\r\n        1.0\r\n      ],\r\n      [\r\n        1.0,\r\n        2.0,\r\n        2.0\r\n      ]\r\n    ],\r\n    [\r\n      [\r\n        2.0,\r\n        1.0,\r\n        1.0\r\n      ],\r\n      [\r\n        2.0,\r\n        1.0,\r\n        2.0\r\n      ]\r\n    ],\r\n    [\r\n      [\r\n        2.0,\r\n        2.0,\r\n        1.0\r\n      ],\r\n      [\r\n        2.0,\r\n        2.0,\r\n        2.0\r\n      ]\r\n    ]\r\n  ],\r\n  ''''After'''': ''''After!''''\r\n}''", span="7113-7166", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3DWithConverter()", file="ReflectionUtils.cs"];
m9_3063 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3DWithConverter()", span="7111-7111", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3DWithConverter()", file="ReflectionUtils.cs"];
m9_1015 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", span="2236-2236", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", file="ReflectionUtils.cs"];
m9_1017 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        @''Cannot populate JSON array onto type 'Newtonsoft.Json.Tests.TestObjects.Person'. Path '', line 1, position 1.'',\r\n        () =>\r\n        {\r\n          JsonConvert.PopulateObject(json, new Person());\r\n        })", span="2240-2245", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", file="ReflectionUtils.cs"];
m9_1016 [label="string json = @''[]''", span="2238-2238", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", file="ReflectionUtils.cs"];
m9_1018 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", span="2236-2236", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", file="ReflectionUtils.cs"];
m9_3390 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyCollection<T>.System.Collections.IEnumerable.GetEnumerator()", span="8041-8041", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyCollection<T>.System.Collections.IEnumerable.GetEnumerator()", file="ReflectionUtils.cs"];
m9_3391 [label="return _values.GetEnumerator();", span="8043-8043", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyCollection<T>.System.Collections.IEnumerable.GetEnumerator()", file="ReflectionUtils.cs"];
m9_3392 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyCollection<T>.System.Collections.IEnumerable.GetEnumerator()", span="8041-8041", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyCollection<T>.System.Collections.IEnumerable.GetEnumerator()", file="ReflectionUtils.cs"];
m9_1375 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, char)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, char)", file="ReflectionUtils.cs"];
m9_288 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", span="671-671", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", file="ReflectionUtils.cs"];
m9_2795 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", span="6419-6419", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="ReflectionUtils.cs"];
m9_2799 [label="IDictionary<DateTime, int> dic2 = JsonConvert.DeserializeObject<IDictionary<DateTime, int>>(json)", span="6434-6434", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="ReflectionUtils.cs"];
m9_2798 [label="Assert.AreEqual(@''{\r\n  ''''2000-12-12T12:12:12Z'''': 1,\r\n  ''''2013-12-12T12:12:12Z'''': 2\r\n}'', json)", span="6429-6432", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="ReflectionUtils.cs"];
m9_2800 [label="Assert.AreEqual(2, dic2.Count)", span="6436-6436", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="ReflectionUtils.cs"];
m9_2801 [label="Assert.AreEqual(1, dic2[new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", span="6437-6437", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="ReflectionUtils.cs"];
m9_2802 [label="Assert.AreEqual(2, dic2[new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", span="6438-6438", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="ReflectionUtils.cs"];
m9_2797 [label="string json = JsonConvert.SerializeObject(dic1, Formatting.Indented)", span="6427-6427", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="ReflectionUtils.cs"];
m9_2796 [label="IDictionary<DateTime, int> dic1 = new Dictionary<DateTime, int>\r\n        {\r\n          {new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc), 1},\r\n          {new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc), 2}\r\n        }", span="6421-6425", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="ReflectionUtils.cs"];
m9_2803 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", span="6419-6419", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="ReflectionUtils.cs"];
m9_2499 [label="Entry Newtonsoft.Json.Tests.Serialization.Widget.Widget()", span="8306-8306", cluster="Newtonsoft.Json.Tests.Serialization.Widget.Widget()", file="ReflectionUtils.cs"];
m9_892 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", span="1946-1946", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="ReflectionUtils.cs"];
m9_894 [label="Dictionary<string, string> values = JsonConvert.DeserializeObject<Dictionary<string, string>>(json)", span="1950-1950", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="ReflectionUtils.cs"];
m9_897 [label="Assert.AreEqual(2, values.Count)", span="1958-1958", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="ReflectionUtils.cs"];
m9_898 [label="Assert.AreEqual(''value1'', values[''key1''])", span="1959-1959", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="ReflectionUtils.cs"];
m9_899 [label="Assert.AreEqual(''value2'', values[''key2''])", span="1960-1960", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="ReflectionUtils.cs"];
m9_893 [label="string json = @''{''''key1'''':''''value1'''',''''key2'''':''''value2''''}''", span="1948-1948", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="ReflectionUtils.cs"];
m9_895 [label="Console.WriteLine(values.Count)", span="1952-1952", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="ReflectionUtils.cs"];
m9_896 [label="Console.WriteLine(values[''key1''])", span="1955-1955", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="ReflectionUtils.cs"];
m9_900 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", span="1946-1946", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="ReflectionUtils.cs"];
m9_1175 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", span="2659-2659", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", file="ReflectionUtils.cs"];
m9_1176 [label="return JsonConvert.SerializeObject(this, Formatting.Indented);", span="2661-2661", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", file="ReflectionUtils.cs"];
m9_1177 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", span="2659-2659", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", file="ReflectionUtils.cs"];
m9_2823 [label="Entry Newtonsoft.Json.Tests.Serialization.PersonSerializable.PersonSerializable()", span="8189-8189", cluster="Newtonsoft.Json.Tests.Serialization.PersonSerializable.PersonSerializable()", file="ReflectionUtils.cs"];
m9_3426 [label="Exit Newtonsoft.Json.Tests.Serialization.PersonSerializable.PersonSerializable()", span="8189-8189", cluster="Newtonsoft.Json.Tests.Serialization.PersonSerializable.PersonSerializable()", file="ReflectionUtils.cs"];
m9_1951 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", span="4456-4456", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="ReflectionUtils.cs"];
m9_1953 [label="IList<decimal> a = JsonConvert.DeserializeObject<IList<decimal>>(json)", span="4459-4459", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="ReflectionUtils.cs"];
m9_1954 [label="Assert.AreEqual(123456789876543.21m, a[0])", span="4460-4460", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="ReflectionUtils.cs"];
m9_1952 [label="string json = ''[123456789876543.21]''", span="4458-4458", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="ReflectionUtils.cs"];
m9_1955 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", span="4456-4456", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="ReflectionUtils.cs"];
m9_365 [label="Assert.AreEqual(@''{''''GuidField'''':''''bed7f4ea-1a96-11d2-8f08-00a0c9a6186d''''}'', json)", span="817-817", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="ReflectionUtils.cs"];
m9_254 [label="DateTime d = new DateTime(2000, 1, 1)", span="624-624", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="ReflectionUtils.cs"];
m9_2357 [label="Entry Newtonsoft.Json.Tests.Serialization.Component.Component()", span="8383-8383", cluster="Newtonsoft.Json.Tests.Serialization.Component.Component()", file="ReflectionUtils.cs"];
m9_3453 [label="Exit Newtonsoft.Json.Tests.Serialization.Component.Component()", span="8383-8383", cluster="Newtonsoft.Json.Tests.Serialization.Component.Component()", file="ReflectionUtils.cs"];
m9_941 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", span="2084-2084", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", file="ReflectionUtils.cs"];
m9_943 [label="ListTestClass l = JsonConvert.DeserializeObject<ListTestClass>(json)", span="2088-2088", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", file="ReflectionUtils.cs"];
m9_942 [label="string json = @''{id: ''''12'''', name: ''''test'''', items: [{id: ''''112'''', name: ''''testing''''}]}''", span="2086-2086", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", file="ReflectionUtils.cs"];
m9_944 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", span="2084-2084", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", file="ReflectionUtils.cs"];
m9_2347 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConcurrentDictionary()", span="5530-5530", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConcurrentDictionary()", file="ReflectionUtils.cs"];
m9_2352 [label="GameObject newObject = JsonConvert.DeserializeObject<GameObject>(originalJson)", span="5553-5553", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConcurrentDictionary()", file="ReflectionUtils.cs"];
m9_2351 [label="Assert.AreEqual(@''{\r\n  ''''Components'''': {\r\n    ''''Key!'''': {}\r\n  },\r\n  ''''Id'''': ''''Id!'''',\r\n  ''''Name'''': ''''Name!''''\r\n}'', originalJson)", span="5545-5551", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConcurrentDictionary()", file="ReflectionUtils.cs"];
m9_2353 [label="Assert.AreEqual(1, newObject.Components.Count)", span="5555-5555", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConcurrentDictionary()", file="ReflectionUtils.cs"];
m9_2354 [label="Assert.AreEqual(''Id!'', newObject.Id)", span="5556-5556", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConcurrentDictionary()", file="ReflectionUtils.cs"];
m9_2355 [label="Assert.AreEqual(''Name!'', newObject.Name)", span="5557-5557", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConcurrentDictionary()", file="ReflectionUtils.cs"];
m9_2350 [label="string originalJson = JsonConvert.SerializeObject(go, Formatting.Indented)", span="5543-5543", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConcurrentDictionary()", file="ReflectionUtils.cs"];
m9_2349 [label="GameObject go = new GameObject\r\n        {\r\n          Components = new ConcurrentDictionary<string, Component>(components),\r\n          Id = ''Id!'',\r\n          Name = ''Name!''\r\n        }", span="5536-5541", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConcurrentDictionary()", file="ReflectionUtils.cs"];
m9_2348 [label="IDictionary<string, Component> components = new Dictionary<string, Component>\r\n        {\r\n          {''Key!'', new Component()}\r\n        }", span="5532-5535", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConcurrentDictionary()", file="ReflectionUtils.cs"];
m9_2356 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConcurrentDictionary()", span="5530-5530", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConcurrentDictionary()", file="ReflectionUtils.cs"];
m9_157 [label="Entry Newtonsoft.Json.Tests.TestObjects.ArticleCollection.ArticleCollection()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.ArticleCollection.ArticleCollection()", file="ReflectionUtils.cs"];
m9_1151 [label="Entry Newtonsoft.Json.Tests.TestObjects.PersonPropertyClass.PersonPropertyClass()", span="31-31", cluster="Newtonsoft.Json.Tests.TestObjects.PersonPropertyClass.PersonPropertyClass()", file="ReflectionUtils.cs"];
m9_3015 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", span="6993-6993", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="ReflectionUtils.cs"];
m9_3018 [label="Assert.AreEqual(@''{''''m_Item1'''':500}'', json)", span="7000-7000", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="ReflectionUtils.cs"];
m9_3020 [label="Assert.AreEqual(500, obj.Item1)", span="7006-7006", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="ReflectionUtils.cs"];
m9_3017 [label="var json = JsonConvert.SerializeObject(tuple, new JsonSerializerSettings\r\n      {\r\n        ContractResolver = new SerializableContractResolver()\r\n      })", span="6996-6999", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="ReflectionUtils.cs"];
m9_3019 [label="var obj = JsonConvert.DeserializeObject<Tuple<int>>(json, new JsonSerializerSettings\r\n      {\r\n        ContractResolver = new SerializableContractResolver()\r\n      })", span="7002-7005", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="ReflectionUtils.cs"];
m9_3016 [label="var tuple = Tuple.Create(500)", span="6995-6995", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="ReflectionUtils.cs"];
m9_3021 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", span="6993-6993", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="ReflectionUtils.cs"];
m9_1382 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, ushort)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, ushort)", file="ReflectionUtils.cs"];
m9_549 [label="PrimitiveTypeCode.Char", span="1083-1083", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ReflectionUtils.cs"];
m9_550 [label="PrimitiveTypeCode.SByte", span="1084-1084", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", color=green, community=0, file="ReflectionUtils.cs"];
m9_551 [label="PrimitiveTypeCode.Byte", span="1085-1085", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", color=green, community=0, file="ReflectionUtils.cs"];
m9_552 [label="PrimitiveTypeCode.Int16", span="1086-1086", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", color=green, community=0, file="ReflectionUtils.cs"];
m9_553 [label="PrimitiveTypeCode.UInt16", span="1087-1087", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", color=green, community=0, file="ReflectionUtils.cs"];
m9_554 [label="PrimitiveTypeCode.Int32", span="1088-1088", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", color=green, community=0, file="ReflectionUtils.cs"];
m9_555 [label="PrimitiveTypeCode.UInt32", span="1089-1089", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", color=green, community=0, file="ReflectionUtils.cs"];
m9_556 [label="return 0;", span="1090-1090", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ReflectionUtils.cs"];
m9_557 [label="PrimitiveTypeCode.Int64", span="1091-1091", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ReflectionUtils.cs"];
m9_558 [label="PrimitiveTypeCode.UInt64", span="1092-1092", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ReflectionUtils.cs"];
m9_559 [label="return 0L;", span="1093-1093", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ReflectionUtils.cs"];
m9_560 [label="PrimitiveTypeCode.Single", span="1094-1094", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ReflectionUtils.cs"];
m9_561 [label="return 0f;", span="1095-1095", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ReflectionUtils.cs"];
m9_1054 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", span="2328-2328", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", file="ReflectionUtils.cs"];
m9_1055 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        @''Error converting value {null} to type 'System.Int32'. Path 'ReadTimeout', line 1, position 17.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:null}'', new JsonSerializerSettings\r\n          {\r\n            ContractResolver = new DefaultContractResolver\r\n            {\r\n#if !(SILVERLIGHT || NETFX_CORE || PORTABLE)\r\n              IgnoreSerializableAttribute = true\r\n#endif\r\n            }\r\n          });\r\n        })", span="2330-2343", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", file="ReflectionUtils.cs"];
m9_1056 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", span="2328-2328", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", file="ReflectionUtils.cs"];
m9_2251 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", span="5308-5308", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="ReflectionUtils.cs"];
m9_2255 [label="PrivateMembersClassWithAttributes c2 = JsonConvert.DeserializeObject<PrivateMembersClassWithAttributes>(json)", span="5319-5319", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="ReflectionUtils.cs"];
m9_2254 [label="Assert.AreEqual(@''{\r\n  ''''_privateString'''': ''''privateString!'''',\r\n  ''''_readonlyString'''': ''''readonlyString!'''',\r\n  ''''_internalString'''': ''''internalString!''''\r\n}'', json)", span="5313-5317", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="ReflectionUtils.cs"];
m9_2256 [label="Assert.AreEqual(''readonlyString!'', c2.UseValue())", span="5320-5320", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="ReflectionUtils.cs"];
m9_2253 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="5312-5312", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="ReflectionUtils.cs"];
m9_2252 [label="PrivateMembersClassWithAttributes c1 = new PrivateMembersClassWithAttributes(''privateString!'', ''internalString!'', ''readonlyString!'')", span="5310-5310", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="ReflectionUtils.cs"];
m9_2257 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", span="5308-5308", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="ReflectionUtils.cs"];
m9_3234 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", span="7658-7658", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="ReflectionUtils.cs"];
m9_3239 [label="Assert.AreEqual(StringEscapeHandling.Default, jsonWriter.StringEscapeHandling)", span="7670-7670", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="ReflectionUtils.cs"];
m9_3241 [label="Assert.AreEqual(@''{\r\n  ''''html'''': ''''\u003chtml\u003e\u003c/html\u003e''''\r\n}'', json)", span="7674-7676", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="ReflectionUtils.cs"];
m9_3236 [label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="7661-7661", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="ReflectionUtils.cs"];
m9_3238 [label="serializer.Serialize(jsonWriter, new { html = ''<html></html>'' })", span="7668-7668", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="ReflectionUtils.cs"];
m9_3240 [label="string json = sw.ToString()", span="7672-7672", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="ReflectionUtils.cs"];
m9_3235 [label="StringWriter sw = new StringWriter()", span="7660-7660", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="ReflectionUtils.cs"];
m9_3237 [label="JsonSerializer serializer = JsonSerializer.Create(new JsonSerializerSettings\r\n      {\r\n        StringEscapeHandling = StringEscapeHandling.EscapeHtml,\r\n        Formatting = Formatting.Indented\r\n      })", span="7663-7667", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="ReflectionUtils.cs"];
m9_3242 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", span="7658-7658", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="ReflectionUtils.cs"];
m9_223 [label="Entry System.TimeSpan.FromHours(double)", span="0-0", cluster="System.TimeSpan.FromHours(double)", file="ReflectionUtils.cs"];
m9_222 [label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", file="ReflectionUtils.cs"];
m9_1914 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedEvent.DerivedEvent()", span="4375-4375", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedEvent.DerivedEvent()", file="ReflectionUtils.cs"];
m9_1001 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", span="2208-2208", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", file="ReflectionUtils.cs"];
m9_1002 [label="string json = @''[new Constructor(123)]''", span="2210-2210", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", file="ReflectionUtils.cs"];
m9_1003 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        @''Error converting value ''''Constructor'''' to type 'Newtonsoft.Json.Tests.TestObjects.Person'. Path '[0]', line 1, position 17.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<List<Person>>(json);\r\n        })", span="2212-2217", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", file="ReflectionUtils.cs"];
m9_1004 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", span="2208-2208", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", file="ReflectionUtils.cs"];
m9_1088 [label="Entry Newtonsoft.Json.Tests.TestObjects.StructTest.StructTest()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.StructTest.StructTest()", file="ReflectionUtils.cs"];
m9_2642 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int, int, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int, int, System.DateTimeKind)", file="ReflectionUtils.cs"];
m9_1378 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, short)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, short)", file="ReflectionUtils.cs"];
m9_757 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", span="1635-1635", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="ReflectionUtils.cs"];
m9_764 [label="OptInClass newOptInClass = JsonConvert.DeserializeObject<OptInClass>(@''{\r\n  ''''Name'''': ''''James NK'''',\r\n  ''''NotIncluded'''': ''''Ignore me!'''',\r\n  ''''Age'''': 26\r\n}'')", span="1649-1653", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="ReflectionUtils.cs"];
m9_763 [label="Assert.AreEqual(@''{\r\n  ''''Name'''': ''''James NK'''',\r\n  ''''Age'''': 26\r\n}'', json)", span="1644-1647", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="ReflectionUtils.cs"];
m9_765 [label="Assert.AreEqual(26, newOptInClass.Age)", span="1654-1654", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="ReflectionUtils.cs"];
m9_766 [label="Assert.AreEqual(''James NK'', newOptInClass.Name)", span="1655-1655", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="ReflectionUtils.cs"];
m9_767 [label="Assert.AreEqual(null, newOptInClass.NotIncluded)", span="1656-1656", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="ReflectionUtils.cs"];
m9_762 [label="string json = JsonConvert.SerializeObject(optInClass, Formatting.Indented)", span="1642-1642", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="ReflectionUtils.cs"];
m9_758 [label="OptInClass optInClass = new OptInClass()", span="1637-1637", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="ReflectionUtils.cs"];
m9_761 [label="optInClass.NotIncluded = ''Poor me :(''", span="1640-1640", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="ReflectionUtils.cs"];
m9_759 [label="optInClass.Age = 26", span="1638-1638", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="ReflectionUtils.cs"];
m9_760 [label="optInClass.Name = ''James NK''", span="1639-1639", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="ReflectionUtils.cs"];
m9_768 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", span="1635-1635", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="ReflectionUtils.cs"];
m9_662 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", span="1397-1397", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="ReflectionUtils.cs"];
m9_664 [label="string defaultJson = JsonConvert.SerializeObject(entry)", span="1405-1405", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="ReflectionUtils.cs"];
m9_663 [label="LogEntry entry = new LogEntry\r\n        {\r\n          LogDate = new DateTime(2009, 2, 15, 0, 0, 0, DateTimeKind.Utc),\r\n          Details = ''Application started.''\r\n        }", span="1399-1403", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="ReflectionUtils.cs"];
m9_665 [label="string isoJson = JsonConvert.SerializeObject(entry, new IsoDateTimeConverter())", span="1408-1408", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="ReflectionUtils.cs"];
m9_667 [label="Console.WriteLine(defaultJson)", span="1414-1414", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="ReflectionUtils.cs"];
m9_666 [label="string javascriptJson = JsonConvert.SerializeObject(entry, new JavaScriptDateTimeConverter())", span="1411-1411", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="ReflectionUtils.cs"];
m9_668 [label="Console.WriteLine(isoJson)", span="1415-1415", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="ReflectionUtils.cs"];
m9_669 [label="Console.WriteLine(javascriptJson)", span="1416-1416", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="ReflectionUtils.cs"];
m9_670 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", span="1397-1397", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="ReflectionUtils.cs"];
m9_101 [label="string json = JsonConvert.SerializeObject(new JsonIgnoreAttributeTestClass())", span="295-295", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="ReflectionUtils.cs"];
m9_350 [label="return false;", span="702-702", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m9_2238 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributeDerived.ClassAttributeDerived()", span="5194-5194", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributeDerived.ClassAttributeDerived()", file="ReflectionUtils.cs"];
m9_1343 [label="Entry System.Runtime.Serialization.SerializationInfo.GetDecimal(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetDecimal(string)", file="ReflectionUtils.cs"];
m9_370 [label="Entry Newtonsoft.Json.Tests.TestObjects.ClassWithGuid.ClassWithGuid()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.ClassWithGuid.ClassWithGuid()", file="ReflectionUtils.cs"];
m9_2682 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="6205-6205", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionUtils.cs"];
m9_2685 [label="writer.WriteValue('':::'' + fixedColor.ToKnownColor().ToString().ToUpper() + '':::'')", span="6210-6210", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionUtils.cs"];
m9_2684 [label="Color fixedColor = (color == Color.White || color == Color.Black) ? color : Color.Gray", span="6208-6208", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionUtils.cs"];
m9_2683 [label="Color color = (Color)value", span="6207-6207", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionUtils.cs"];
m9_2686 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="6205-6205", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionUtils.cs"];
m9_1878 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", span="4302-4302", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="ReflectionUtils.cs"];
m9_1882 [label="StructWithAttribute newStruct = JsonConvert.DeserializeObject<StructWithAttribute>(json)", span="4315-4315", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="ReflectionUtils.cs"];
m9_1881 [label="Assert.AreEqual(@''{\r\n  ''''MyInt'''': 2147483647\r\n}'', json)", span="4311-4313", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="ReflectionUtils.cs"];
m9_1883 [label="Assert.AreEqual(int.MaxValue, newStruct.MyInt)", span="4317-4317", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="ReflectionUtils.cs"];
m9_1880 [label="string json = JsonConvert.SerializeObject(testStruct, Formatting.Indented)", span="4309-4309", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="ReflectionUtils.cs"];
m9_1879 [label="StructWithAttribute testStruct = new StructWithAttribute\r\n        {\r\n          MyInt = int.MaxValue\r\n        }", span="4304-4307", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="ReflectionUtils.cs"];
m9_1884 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", span="4302-4302", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="ReflectionUtils.cs"];
m9_1350 [label="Entry System.Runtime.Serialization.SerializationInfo.GetUInt64(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetUInt64(string)", file="ReflectionUtils.cs"];
m9_661 [label="Entry Newtonsoft.Json.Tests.TestObjects.Person.Person()", span="34-34", cluster="Newtonsoft.Json.Tests.TestObjects.Person.Person()", file="ReflectionUtils.cs"];
m9_1531 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.XmlNodeTestObject.XmlNodeTestObject()", span="3500-3500", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.XmlNodeTestObject.XmlNodeTestObject()", file="ReflectionUtils.cs"];
m9_2030 [label="Entry Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken)", span="126-126", cluster="Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="ReflectionUtils.cs"];
m9_2109 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", span="4862-4862", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", file="ReflectionUtils.cs"];
m9_2111 [label="Assert.IsNull(dateTime)", span="4866-4866", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", file="ReflectionUtils.cs"];
m9_2110 [label="object dateTime = JsonConvert.DeserializeObject(''null'', typeof(DateTime?))", span="4864-4864", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", file="ReflectionUtils.cs"];
m9_2112 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", span="4862-4862", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", file="ReflectionUtils.cs"];
m9_2849 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", span="6571-6571", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", file="ReflectionUtils.cs"];
m9_2851 [label="Assert.AreEqual(@''{}'', json)", span="6574-6574", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", file="ReflectionUtils.cs"];
m9_2850 [label="string json = JsonConvert.SerializeObject(new IgnoreDataMemberTestClass() { Ignored = int.MaxValue }, Formatting.Indented)", span="6573-6573", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", file="ReflectionUtils.cs"];
m9_2852 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", span="6571-6571", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", file="ReflectionUtils.cs"];
m9_543 [label="PersonRaw personRaw = JsonConvert.DeserializeObject<PersonRaw>(json)", span="1130-1130", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="ReflectionUtils.cs", color=green, community=0];
m9_544 [label="Assert.AreEqual(''FirstNameValue'', personRaw.FirstName)", span="1132-1132", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="ReflectionUtils.cs", color=green, community=0];
m9_546 [label="Assert.AreEqual(''LastNameValue'', personRaw.LastName)", span="1134-1134", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="ReflectionUtils.cs", color=green, community=0];
m9_545 [label="Assert.AreEqual(''[1,2,3,4,5]'', personRaw.RawContent.ToString())", span="1133-1133", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="ReflectionUtils.cs", color=green, community=0];
m9_547 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", span="1126-1126", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="ReflectionUtils.cs"];
m9_562 [label="Entry Newtonsoft.Json.Tests.TestObjects.UserNullable.UserNullable()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.UserNullable.UserNullable()", file="ReflectionUtils.cs"];
m9_564 [label="string json = @''{''''Height'''':1}''", span="1170-1170", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="ReflectionUtils.cs"];
m9_566 [label="Assert.AreEqual(1, c.Height)", span="1173-1173", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="ReflectionUtils.cs"];
m9_563 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", span="1168-1168", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="ReflectionUtils.cs"];
m9_565 [label="DoubleClass c = JsonConvert.DeserializeObject<DoubleClass>(json)", span="1172-1172", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="ReflectionUtils.cs"];
m9_567 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", span="1168-1168", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="ReflectionUtils.cs"];
m9_2448 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", span="5704-5704", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="ReflectionUtils.cs"];
m9_2451 [label="IList<DateTimeOffset?> d2 = JsonConvert.DeserializeObject<IList<DateTimeOffset?>>(json)", span="5710-5710", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="ReflectionUtils.cs"];
m9_2452 [label="Assert.AreEqual(d1.Count, d2.Count)", span="5712-5712", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="ReflectionUtils.cs"];
m9_2453 [label="Assert.AreEqual(d1[0], d2[0])", span="5713-5713", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="ReflectionUtils.cs"];
m9_2450 [label="string json = JsonConvert.SerializeObject(d1)", span="5708-5708", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="ReflectionUtils.cs"];
m9_2449 [label="IList<DateTimeOffset?> d1 = new List<DateTimeOffset?> { null }", span="5706-5706", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="ReflectionUtils.cs"];
m9_2454 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", span="5704-5704", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="ReflectionUtils.cs"];
m9_1346 [label="Entry System.Runtime.Serialization.SerializationInfo.GetSByte(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetSByte(string)", file="ReflectionUtils.cs"];
m9_2990 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", span="6915-6915", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="ReflectionUtils.cs"];
m9_2992 [label="var l = JsonConvert.DeserializeObject<IReadOnlyList<int>>(json)", span="6921-6921", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="ReflectionUtils.cs"];
m9_2994 [label="Assert.AreEqual(900, i)", span="6926-6926", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="ReflectionUtils.cs"];
m9_2991 [label="string json = @''[\r\n        900\r\n      ]''", span="6917-6919", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="ReflectionUtils.cs"];
m9_2993 [label="int i = l[0]", span="6923-6923", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="ReflectionUtils.cs"];
m9_2995 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", span="6915-6915", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="ReflectionUtils.cs"];
m9_1899 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", span="4348-4348", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="ReflectionUtils.cs"];
m9_1902 [label="var deserializeObject = JsonConvert.DeserializeObject<TimeZoneOffsetObject>(serializeObject)", span="4356-4356", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="ReflectionUtils.cs"];
m9_1901 [label="Assert.AreEqual(''{\''Offset\'':\''\\/Date(946663200000+0600)\\/\''}'', serializeObject)", span="4355-4355", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="ReflectionUtils.cs"];
m9_1903 [label="Assert.AreEqual(TimeSpan.FromHours(6), deserializeObject.Offset.Offset)", span="4357-4357", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="ReflectionUtils.cs"];
m9_1904 [label="Assert.AreEqual(new DateTime(2000, 1, 1), deserializeObject.Offset.Date)", span="4358-4358", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="ReflectionUtils.cs"];
m9_1900 [label="var serializeObject = JsonConvert.SerializeObject(new TimeZoneOffsetObject\r\n      {\r\n        Offset = new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6))\r\n      }, Formatting.None, new JsonSerializerSettings { DateFormatHandling = DateFormatHandling.MicrosoftDateFormat })", span="4350-4353", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="ReflectionUtils.cs"];
m9_1905 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", span="4348-4348", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="ReflectionUtils.cs"];
m9_3425 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="ReflectionUtils.cs"];
m9_1937 [label="Entry Unk.SerializeObject", span="", cluster="Unk.SerializeObject", file="ReflectionUtils.cs"];
m9_1445 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", span="3432-3432", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="ReflectionUtils.cs"];
m9_1482 [label="AA_field1 = f", span="3434-3434", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="ReflectionUtils.cs"];
m9_1483 [label="AA_field2 = f", span="3435-3435", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="ReflectionUtils.cs"];
m9_1484 [label="AA_property1 = f", span="3436-3436", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="ReflectionUtils.cs"];
m9_1485 [label="AA_property2 = f", span="3437-3437", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="ReflectionUtils.cs"];
m9_1486 [label="AA_property3 = f", span="3438-3438", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="ReflectionUtils.cs"];
m9_1487 [label="AA_property4 = f", span="3439-3439", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="ReflectionUtils.cs"];
m9_1488 [label="AA_property5 = f", span="3440-3440", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="ReflectionUtils.cs"];
m9_1489 [label="AA_property6 = f", span="3441-3441", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="ReflectionUtils.cs"];
m9_1490 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", span="3432-3432", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="ReflectionUtils.cs"];
m9_1269 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="ReflectionUtils.cs"];
m9_1830 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", span="4181-4181", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="ReflectionUtils.cs"];
m9_1832 [label="Assert.AreEqual(@''[\r\n  2.4,\r\n  4.3,\r\n  null\r\n]'', jsonText)", span="4185-4189", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="ReflectionUtils.cs"];
m9_1831 [label="string jsonText = JsonConvert.SerializeObject(new double?[] { 2.4, 4.3, null }, Formatting.Indented)", span="4183-4183", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="ReflectionUtils.cs"];
m9_1833 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", span="4181-4181", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="ReflectionUtils.cs"];
m9_3133 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmpty3DArray()", span="7282-7282", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmpty3DArray()", file="ReflectionUtils.cs"];
m9_3135 [label="Array3D aa = JsonConvert.DeserializeObject<Array3D>(json)", span="7286-7286", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmpty3DArray()", file="ReflectionUtils.cs"];
m9_3142 [label="Assert.AreEqual(json, after)", span="7296-7296", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmpty3DArray()", file="ReflectionUtils.cs"];
m9_3136 [label="Assert.AreEqual(''Before!'', aa.Before)", span="7288-7288", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmpty3DArray()", file="ReflectionUtils.cs"];
m9_3137 [label="Assert.AreEqual(''After!'', aa.After)", span="7289-7289", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmpty3DArray()", file="ReflectionUtils.cs"];
m9_3138 [label="Assert.AreEqual(0, aa.Coordinates.GetLength(0))", span="7290-7290", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmpty3DArray()", file="ReflectionUtils.cs"];
m9_3139 [label="Assert.AreEqual(0, aa.Coordinates.GetLength(1))", span="7291-7291", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmpty3DArray()", file="ReflectionUtils.cs"];
m9_3140 [label="Assert.AreEqual(0, aa.Coordinates.GetLength(2))", span="7292-7292", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmpty3DArray()", file="ReflectionUtils.cs"];
m9_3141 [label="string after = JsonConvert.SerializeObject(aa)", span="7294-7294", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmpty3DArray()", file="ReflectionUtils.cs"];
m9_3134 [label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[],''''After'''':''''After!''''}''", span="7284-7284", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmpty3DArray()", file="ReflectionUtils.cs"];
m9_3143 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmpty3DArray()", span="7282-7282", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmpty3DArray()", file="ReflectionUtils.cs"];
m9_420 [label="int? assemblyDelimiterIndex = GetAssemblyDelimiterIndex(fullyQualifiedTypeName)", span="862-862", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string, out string, out string)", file="ReflectionUtils.cs"];
m9_421 [label="assemblyDelimiterIndex != null", span="864-864", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string, out string, out string)", file="ReflectionUtils.cs"];
m9_422 [label="typeName = fullyQualifiedTypeName.Substring(0, assemblyDelimiterIndex.GetValueOrDefault()).Trim()", span="866-866", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string, out string, out string)", file="ReflectionUtils.cs"];
m9_423 [label="assemblyName = fullyQualifiedTypeName.Substring(assemblyDelimiterIndex.GetValueOrDefault() + 1, fullyQualifiedTypeName.Length - assemblyDelimiterIndex.GetValueOrDefault() - 1).Trim()", span="867-867", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string, out string, out string)", file="ReflectionUtils.cs"];
m9_419 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string, out string, out string)", span="860-860", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string, out string, out string)", file="ReflectionUtils.cs"];
m9_424 [label="typeName = fullyQualifiedTypeName", span="871-871", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string, out string, out string)", file="ReflectionUtils.cs"];
m9_100 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", span="293-293", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="ReflectionUtils.cs"];
m9_90 [label="Assert.AreEqual(c.GetOnlyProperty, ''GetOnlyProperty'')", span="279-279", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="ReflectionUtils.cs"];
m9_901 [label="Entry System.Console.WriteLine(int)", span="0-0", cluster="System.Console.WriteLine(int)", file="ReflectionUtils.cs"];
m9_1867 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", span="4267-4267", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="ReflectionUtils.cs"];
m9_1870 [label="string json = JsonConvert.SerializeObject(s1, Formatting.Indented)", span="4281-4281", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="ReflectionUtils.cs"];
m9_1869 [label="StringDictionaryTestClass s1 = new StringDictionaryTestClass()\r\n        {\r\n          StringDictionaryProperty = new StringDictionary()\r\n            {\r\n              {''1'', ''One''},\r\n              {''2'', ''II''},\r\n              {''3'', ''3''}\r\n            }\r\n        }", span="4271-4279", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="ReflectionUtils.cs"];
m9_1871 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''Cannot create and populate list type '' + classRef + ''. Path 'StringDictionaryProperty', line 2, position 32.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<StringDictionaryTestClass>(json);\r\n        })", span="4283-4288", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="ReflectionUtils.cs"];
m9_1868 [label="string classRef = typeof(StringDictionary).FullName", span="4269-4269", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="ReflectionUtils.cs"];
m9_1872 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", span="4267-4267", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="ReflectionUtils.cs"];
m9_362 [label="return false;", span="723-723", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m9_363 [label="return true;", span="726-726", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m9_364 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", span="692-692", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m9_1978 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", span="4513-4513", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", file="ReflectionUtils.cs"];
m9_1979 [label="IDoWork = doWork", span="4516-4516", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", file="ReflectionUtils.cs"];
m9_1980 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", span="4513-4513", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", file="ReflectionUtils.cs"];
m9_2619 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", span="6050-6050", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", file="ReflectionUtils.cs"];
m9_2620 [label="ExceptionAssert.Throws<ArgumentNullException>(\r\n        @''Value cannot be null.\r\nParameter name: value'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject(null);\r\n        })", span="6052-6058", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", file="ReflectionUtils.cs"];
m9_2621 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", span="6050-6050", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", file="ReflectionUtils.cs"];
m9_2171 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObject.ChildWithDifferentOverrideObject()", span="5051-5051", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObject.ChildWithDifferentOverrideObject()", file="ReflectionUtils.cs"];
m9_1517 [label="Entry Unk.Parse", span="", cluster="Unk.Parse", file="ReflectionUtils.cs"];
m9_769 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClass.OptInClass()", span="1615-1615", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClass.OptInClass()", file="ReflectionUtils.cs"];
m9_3364 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)", span="7963-7963", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)", file="ReflectionUtils.cs"];
m9_3365 [label="return _dictionary.ContainsKey(key);", span="7965-7965", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)", file="ReflectionUtils.cs"];
m9_3366 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)", span="7963-7963", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)", file="ReflectionUtils.cs"];
m9_1817 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", span="4153-4153", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", file="ReflectionUtils.cs"];
m9_1818 [label="return new DictionaryKey() { Value = value };", span="4155-4155", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", file="ReflectionUtils.cs"];
m9_1819 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", span="4153-4153", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", file="ReflectionUtils.cs"];
m9_2144 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", span="4997-4997", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="ReflectionUtils.cs"];
m9_2146 [label="string result = JsonConvert.SerializeObject(cc, Formatting.Indented)", span="5005-5005", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="ReflectionUtils.cs"];
m9_2147 [label="Console.WriteLine(result)", span="5012-5012", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="ReflectionUtils.cs"];
m9_2145 [label="ChildDataContract cc = new ChildDataContract\r\n      {\r\n        VirtualMember = ''VirtualMember!'',\r\n        NonVirtualMember = ''NonVirtualMember!''\r\n      }", span="4999-5003", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="ReflectionUtils.cs"];
m9_2148 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", span="4997-4997", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="ReflectionUtils.cs"];
m9_2143 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableArrayPropertyClass.EnumerableArrayPropertyClass()", span="4960-4960", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableArrayPropertyClass.EnumerableArrayPropertyClass()", file="ReflectionUtils.cs"];
m9_2427 [label="Entry Newtonsoft.Json.JsonWriter.Flush()", span="342-342", cluster="Newtonsoft.Json.JsonWriter.Flush()", file="ReflectionUtils.cs"];
m9_853 [label="Entry Newtonsoft.Json.Tests.TestObjects.Content.Content()", span="31-31", cluster="Newtonsoft.Json.Tests.TestObjects.Content.Content()", file="ReflectionUtils.cs"];
m9_1241 [label="Entry System.TimeSpan.TimeSpan(int, int, int, int, int)", span="0-0", cluster="System.TimeSpan.TimeSpan(int, int, int, int, int)", file="ReflectionUtils.cs"];
m9_1477 [label="Entry System.Type.GetField(string, System.Reflection.BindingFlags)", span="0-0", cluster="System.Type.GetField(string, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m9_2712 [label="Entry Newtonsoft.Json.Bson.BsonWriter.WriteValue(string)", span="246-246", cluster="Newtonsoft.Json.Bson.BsonWriter.WriteValue(string)", file="ReflectionUtils.cs"];
m9_346 [label="memberInfo.MemberType() != MemberTypes.Property", span="694-694", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m9_347 [label="return false;", span="696-696", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m9_348 [label="PropertyInfo propertyInfo = (PropertyInfo)memberInfo", span="699-699", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m9_342 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", span="692-692", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m9_349 [label="!IsVirtual(propertyInfo)", span="700-700", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m9_1855 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", span="4244-4244", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="ReflectionUtils.cs"];
m9_1862 [label="Assert.AreEqual(2, z.Length)", span="4255-4255", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="ReflectionUtils.cs"];
m9_1863 [label="Assert.AreEqual(0, z[0].Prop1.Length)", span="4256-4256", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="ReflectionUtils.cs"];
m9_1864 [label="Assert.AreEqual(0, z[1].Prop1.Length)", span="4257-4257", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="ReflectionUtils.cs"];
m9_1861 [label="MyClass[] z = (MyClass[])serializer1.Deserialize(reader, typeof(MyClass[]))", span="4254-4254", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="ReflectionUtils.cs"];
m9_1856 [label="JsonSerializer serializer1 = new JsonSerializer()", span="4246-4246", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="ReflectionUtils.cs"];
m9_1860 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="4252-4252", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="ReflectionUtils.cs"];
m9_1857 [label="serializer1.Converters.Add(new IsoDateTimeConverter())", span="4247-4247", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="ReflectionUtils.cs"];
m9_1858 [label="serializer1.NullValueHandling = NullValueHandling.Ignore", span="4248-4248", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="ReflectionUtils.cs"];
m9_1859 [label="string json = @''[{''''Prop1'''':''''''''},{''''Prop1'''':''''''''}]''", span="4250-4250", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="ReflectionUtils.cs"];
m9_1865 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", span="4244-4244", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="ReflectionUtils.cs"];
m9_821 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", span="1797-1797", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="ReflectionUtils.cs"];
m9_824 [label="Shortie s = JsonConvert.DeserializeObject<Shortie>(o[''short''].ToString())", span="1813-1813", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="ReflectionUtils.cs"];
m9_826 [label="Assert.AreEqual(s.Original, ''http://www.contrast.ie/blog/online&#45;marketing&#45;2009/'')", span="1816-1816", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="ReflectionUtils.cs"];
m9_827 [label="Assert.AreEqual(s.Short, ''m2sqc6'')", span="1817-1817", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="ReflectionUtils.cs"];
m9_828 [label="Assert.AreEqual(s.Shortened, ''http://short.ie/m2sqc6'')", span="1818-1818", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="ReflectionUtils.cs"];
m9_823 [label="JObject o = JObject.Parse(json)", span="1811-1811", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="ReflectionUtils.cs"];
m9_825 [label="Assert.IsNotNull(s)", span="1814-1814", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="ReflectionUtils.cs"];
m9_822 [label="string json = @''{\r\n  ''''short'''': {\r\n    ''''original'''': ''''http://www.contrast.ie/blog/online&#45;marketing&#45;2009/'''',\r\n    ''''short'''': ''''m2sqc6'''',\r\n    ''''shortened'''': ''''http://short.ie/m2sqc6'''',\r\n    ''''error'''': {\r\n      ''''code'''': 0,\r\n      ''''msg'''': ''''No action taken''''\r\n    }\r\n  }\r\n}''", span="1799-1809", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="ReflectionUtils.cs"];
m9_829 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", span="1797-1797", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="ReflectionUtils.cs"];
m9_2679 [label="Entry Newtonsoft.Json.Tests.Serialization.MetroPropertyNameResolver.MetroPropertyNameResolver()", span="8455-8455", cluster="Newtonsoft.Json.Tests.Serialization.MetroPropertyNameResolver.MetroPropertyNameResolver()", file="ReflectionUtils.cs"];
m9_2430 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", span="5664-5664", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="ReflectionUtils.cs"];
m9_2436 [label="DecimalTestClass c = JsonConvert.DeserializeObject<DecimalTestClass>(json)", span="5677-5677", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="ReflectionUtils.cs"];
m9_2437 [label="Assert.AreEqual(1.5m, c.Quantity)", span="5679-5679", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="ReflectionUtils.cs"];
m9_2438 [label="Assert.AreEqual(2.2d, c.OptionalQuantity)", span="5680-5680", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="ReflectionUtils.cs"];
m9_2435 [label="string json = @''{ 'Quantity': '1.5', 'OptionalQuantity': '2.2' }''", span="5675-5675", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="ReflectionUtils.cs"];
m9_2434 [label="Thread.CurrentThread.CurrentUICulture = testCulture", span="5673-5673", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="ReflectionUtils.cs"];
m9_2432 [label="CultureInfo testCulture = CultureInfo.CreateSpecificCulture(''nb-NO'')", span="5670-5670", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="ReflectionUtils.cs"];
m9_2433 [label="Thread.CurrentThread.CurrentCulture = testCulture", span="5672-5672", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="ReflectionUtils.cs"];
m9_2431 [label="CultureInfo initialCulture = Thread.CurrentThread.CurrentCulture", span="5666-5666", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="ReflectionUtils.cs"];
m9_2439 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", span="5664-5664", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="ReflectionUtils.cs"];
m9_672 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", span="1419-1419", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="ReflectionUtils.cs"];
m9_679 [label="GenericListAndDictionaryInterfaceProperties deserializedObject = JsonConvert.DeserializeObject<GenericListAndDictionaryInterfaceProperties>(json)", span="1457-1457", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="ReflectionUtils.cs"];
m9_681 [label="CollectionAssert.AreEqual(o.IListProperty.ToArray(), deserializedObject.IListProperty.ToArray())", span="1460-1460", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="ReflectionUtils.cs"];
m9_682 [label="CollectionAssert.AreEqual(o.IEnumerableProperty.ToArray(), deserializedObject.IEnumerableProperty.ToArray())", span="1461-1461", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="ReflectionUtils.cs"];
m9_683 [label="CollectionAssert.AreEqual(o.IDictionaryProperty.ToArray(), deserializedObject.IDictionaryProperty.ToArray())", span="1462-1462", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="ReflectionUtils.cs"];
m9_678 [label="Assert.AreEqual(@''{\r\n  ''''IEnumerableProperty'''': [\r\n    4,\r\n    5,\r\n    6\r\n  ],\r\n  ''''IListProperty'''': [\r\n    1,\r\n    2,\r\n    3\r\n  ],\r\n  ''''IDictionaryProperty'''': {\r\n    ''''one'''': 1,\r\n    ''''two'''': 2,\r\n    ''''three'''': 3\r\n  }\r\n}'', json)", span="1439-1455", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="ReflectionUtils.cs"];
m9_677 [label="string json = JsonConvert.SerializeObject(o, Formatting.Indented)", span="1437-1437", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="ReflectionUtils.cs"];
m9_680 [label="Assert.IsNotNull(deserializedObject)", span="1458-1458", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="ReflectionUtils.cs"];
m9_673 [label="GenericListAndDictionaryInterfaceProperties o = new GenericListAndDictionaryInterfaceProperties()", span="1421-1421", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="ReflectionUtils.cs"];
m9_676 [label="o.IEnumerableProperty = new List<int>\r\n        {\r\n          4, 5, 6\r\n        }", span="1432-1435", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="ReflectionUtils.cs"];
m9_674 [label="o.IDictionaryProperty = new Dictionary<string, int>\r\n        {\r\n          {''one'', 1},\r\n          {''two'', 2},\r\n          {''three'', 3}\r\n        }", span="1422-1427", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="ReflectionUtils.cs"];
m9_675 [label="o.IListProperty = new List<int>\r\n        {\r\n          1, 2, 3\r\n        }", span="1428-1431", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="ReflectionUtils.cs"];
m9_684 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", span="1419-1419", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="ReflectionUtils.cs"];
m9_2394 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", span="5612-5612", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="ReflectionUtils.cs"];
m9_2398 [label="Uri output = JsonConvert.DeserializeObject<Uri>(json)", span="5617-5617", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="ReflectionUtils.cs"];
m9_2399 [label="Assert.AreEqual(uri, output)", span="5619-5619", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="ReflectionUtils.cs"];
m9_2397 [label="string json = JsonConvert.SerializeObject(uri)", span="5616-5616", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="ReflectionUtils.cs"];
m9_2396 [label="Uri uri = new Uri(input)", span="5615-5615", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="ReflectionUtils.cs"];
m9_2395 [label="string input = ''http://test.com/%22foo+bar%22''", span="5614-5614", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="ReflectionUtils.cs"];
m9_2400 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", span="5612-5612", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="ReflectionUtils.cs"];
m9_1541 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDouble.PosDouble()", span="3584-3584", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDouble.PosDouble()", file="ReflectionUtils.cs"];
m9_746 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", span="1582-1582", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="ReflectionUtils.cs"];
m9_748 [label="RequestOnly r = JsonConvert.DeserializeObject<RequestOnly>(json)", span="1602-1602", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="ReflectionUtils.cs"];
m9_750 [label="NonRequest n = JsonConvert.DeserializeObject<NonRequest>(json)", span="1605-1605", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="ReflectionUtils.cs"];
m9_749 [label="Assert.AreEqual(''ux.settings.update'', r.Request)", span="1603-1603", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="ReflectionUtils.cs"];
m9_751 [label="Assert.AreEqual(new Guid(''14c561bd-32a8-457e-b4e5-4bba0832897f''), n.Sid)", span="1606-1606", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="ReflectionUtils.cs"];
m9_752 [label="Assert.AreEqual(new Guid(''30c39065-0f31-de11-9442-001e3786a8ec''), n.Uid)", span="1607-1607", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="ReflectionUtils.cs"];
m9_753 [label="Assert.AreEqual(8, n.FidOrder.Count)", span="1608-1608", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="ReflectionUtils.cs"];
m9_754 [label="Assert.AreEqual(''id'', n.FidOrder[0])", span="1609-1609", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="ReflectionUtils.cs"];
m9_755 [label="Assert.AreEqual(''titleId'', n.FidOrder[n.FidOrder.Count - 1])", span="1610-1610", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="ReflectionUtils.cs"];
m9_747 [label="string json = @''{\r\n    ''''request'''': ''''ux.settings.update'''',\r\n    ''''sid'''': ''''14c561bd-32a8-457e-b4e5-4bba0832897f'''',\r\n    ''''uid'''': ''''30c39065-0f31-de11-9442-001e3786a8ec'''',\r\n    ''''fidOrder'''': [\r\n        ''''id'''',\r\n        ''''andytest_name'''',\r\n        ''''andytest_age'''',\r\n        ''''andytest_address'''',\r\n        ''''andytest_phone'''',\r\n        ''''date'''',\r\n        ''''title'''',\r\n        ''''titleId''''\r\n    ],\r\n    ''''entityName'''': ''''Andy Test'''',\r\n    ''''setting'''': ''''entity.field.order''''\r\n}''", span="1584-1600", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="ReflectionUtils.cs"];
m9_756 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", span="1582-1582", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="ReflectionUtils.cs"];
m9_2680 [label="Entry Newtonsoft.Json.Tests.Serialization.MetroStringConverter.MetroStringConverter()", span="8425-8425", cluster="Newtonsoft.Json.Tests.Serialization.MetroStringConverter.MetroStringConverter()", file="ReflectionUtils.cs"];
m9_312 [label="Assert.AreEqual(3, wibble.Bar[3])", span="709-709", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="ReflectionUtils.cs"];
m9_313 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", span="699-699", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="ReflectionUtils.cs"];
m9_1673 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.StringAppenderConverter()", span="3794-3794", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.StringAppenderConverter()", file="ReflectionUtils.cs"];
m9_2000 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", span="4601-4601", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="ReflectionUtils.cs"];
m9_2009 [label="Assert.AreEqual(deserialized.Foo1.Name, ''foo 1'')", span="4614-4614", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="ReflectionUtils.cs"];
m9_2010 [label="Assert.AreEqual(deserialized.Foo2.Value.Name, ''foo 2'')", span="4615-4615", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="ReflectionUtils.cs"];
m9_2013 [label="Assert.AreEqual(deserialized.Foo1.Name, ''foo 1'')", span="4620-4620", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="ReflectionUtils.cs"];
m9_2014 [label="Assert.AreEqual(deserialized.Foo2, null)", span="4621-4621", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="ReflectionUtils.cs"];
m9_2007 [label="string s = JsonConvert.SerializeObject(nullableStructPropertyClass)", span="4612-4612", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="ReflectionUtils.cs"];
m9_2011 [label="s = JsonConvert.SerializeObject(barWithNull)", span="4618-4618", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="ReflectionUtils.cs"];
m9_2008 [label="NullableStructPropertyClass deserialized = deserialize(s)", span="4613-4613", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="ReflectionUtils.cs"];
m9_2012 [label="deserialized = deserialize(s)", span="4619-4619", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="ReflectionUtils.cs"];
m9_2001 [label="NullableStructPropertyClass nullableStructPropertyClass = new NullableStructPropertyClass()", span="4603-4603", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="ReflectionUtils.cs"];
m9_2006 [label="barWithNull.Foo2 = null", span="4609-4609", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="ReflectionUtils.cs"];
m9_2004 [label="NullableStructPropertyClass barWithNull = new NullableStructPropertyClass()", span="4607-4607", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="ReflectionUtils.cs"];
m9_2002 [label="nullableStructPropertyClass.Foo1 = new StructISerializable() { Name = ''foo 1'' }", span="4604-4604", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="ReflectionUtils.cs"];
m9_2003 [label="nullableStructPropertyClass.Foo2 = new StructISerializable() { Name = ''foo 2'' }", span="4605-4605", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="ReflectionUtils.cs"];
m9_2005 [label="barWithNull.Foo1 = new StructISerializable() { Name = ''foo 1'' }", span="4608-4608", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="ReflectionUtils.cs"];
m9_2015 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", span="4601-4601", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="ReflectionUtils.cs"];
m9_113 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", span="306-306", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="ReflectionUtils.cs"];
m9_114 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string)", span="978-978", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string)", file="ReflectionUtils.cs"];
m9_1597 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", span="3677-3677", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="ReflectionUtils.cs"];
m9_1603 [label="List<KeyValuePair<string, string>> result = JsonConvert.DeserializeObject<List<KeyValuePair<string, string>>>(json)", span="3687-3687", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="ReflectionUtils.cs"];
m9_1602 [label="Assert.AreEqual(@''[{''''Key'''':''''key1'''',''''Value'''':''''value1''''},{''''Key'''':''''key2'''',''''Value'''':''''value2''''}]'', json)", span="3685-3685", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="ReflectionUtils.cs"];
m9_1604 [label="Assert.AreEqual(2, result.Count)", span="3688-3688", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="ReflectionUtils.cs"];
m9_1605 [label="Assert.AreEqual(''key1'', result[0].Key)", span="3689-3689", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="ReflectionUtils.cs"];
m9_1606 [label="Assert.AreEqual(''value1'', result[0].Value)", span="3690-3690", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="ReflectionUtils.cs"];
m9_1607 [label="Assert.AreEqual(''key2'', result[1].Key)", span="3691-3691", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="ReflectionUtils.cs"];
m9_1608 [label="Assert.AreEqual(''value2'', result[1].Value)", span="3692-3692", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="ReflectionUtils.cs"];
m9_1601 [label="string json = JsonConvert.SerializeObject(list)", span="3683-3683", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="ReflectionUtils.cs"];
m9_1598 [label="List<KeyValuePair<string, string>> list = new List<KeyValuePair<string, string>>()", span="3679-3679", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="ReflectionUtils.cs"];
m9_1600 [label="list.Add(new KeyValuePair<string, string>(''key2'', ''value2''))", span="3681-3681", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="ReflectionUtils.cs"];
m9_1599 [label="list.Add(new KeyValuePair<string, string>(''key1'', ''value1''))", span="3680-3680", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="ReflectionUtils.cs"];
m9_1609 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", span="3677-3677", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="ReflectionUtils.cs"];
m9_124 [label="!type.IsGenericType()", span="283-283", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsGenericDefinition(System.Type, System.Type)", file="ReflectionUtils.cs"];
m9_1534 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", span="3560-3560", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="ReflectionUtils.cs"];
m9_1537 [label="Assert.AreEqual(''{\''position\'':new Pos(100,200),\''center\'':new PosD(251.6,361.3)}'', json)", span="3569-3569", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="ReflectionUtils.cs"];
m9_1536 [label="string json = JsonConvert.SerializeObject(source, new PosConverter(), new PosDoubleConverter())", span="3568-3568", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="ReflectionUtils.cs"];
m9_1535 [label="ClientMap source = new ClientMap()\r\n        {\r\n          position = new Pos() { X = 100, Y = 200 },\r\n          center = new PosDouble() { X = 251.6, Y = 361.3 }\r\n        }", span="3562-3566", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="ReflectionUtils.cs"];
m9_1538 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", span="3560-3560", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="ReflectionUtils.cs"];
m9_1251 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="ReflectionUtils.cs"];
m9_2331 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", span="5510-5510", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="ReflectionUtils.cs"];
m9_2339 [label="Assert.AreEqual(@''{''''p'''':1}'', result)", span="5524-5524", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="ReflectionUtils.cs"];
m9_2338 [label="string result = sw.ToString()", span="5523-5523", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="ReflectionUtils.cs"];
m9_2334 [label="var sw = new StringWriter()", span="5517-5517", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="ReflectionUtils.cs"];
m9_2337 [label="jw.Flush()", span="5521-5521", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="ReflectionUtils.cs"];
m9_2333 [label="var json = JObject.FromObject(o)", span="5515-5515", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="ReflectionUtils.cs"];
m9_2335 [label="var jw = new JsonTextWriter(sw)", span="5518-5518", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="ReflectionUtils.cs"];
m9_2336 [label="jw.WriteToken(json.CreateReader())", span="5520-5520", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="ReflectionUtils.cs"];
m9_2332 [label="object o = new { p = 1 }", span="5513-5513", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="ReflectionUtils.cs"];
m9_2340 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", span="5510-5510", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="ReflectionUtils.cs"];
m9_2687 [label="Entry Unk.ToKnownColor", span="", cluster="Unk.ToKnownColor", file="ReflectionUtils.cs"];
m9_1539 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClientMap.ClientMap()", span="3572-3572", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClientMap.ClientMap()", file="ReflectionUtils.cs"];
m9_687 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="ReflectionUtils.cs"];
m9_1339 [label="Entry System.Runtime.Serialization.SerializationInfo.GetBoolean(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetBoolean(string)", file="ReflectionUtils.cs"];
m9_1287 [label="Entry System.Collections.Generic.ICollection<T>.Remove(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Remove(T)", file="ReflectionUtils.cs"];
m9_2308 [label="Entry Newtonsoft.Json.Tests.Serialization.UriGuidTimeSpanTestClass.UriGuidTimeSpanTestClass()", span="8339-8339", cluster="Newtonsoft.Json.Tests.Serialization.UriGuidTimeSpanTestClass.UriGuidTimeSpanTestClass()", file="ReflectionUtils.cs"];
m9_1910 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", span="4384-4384", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", file="ReflectionUtils.cs"];
m9_1912 [label="Assert.AreEqual(@''{\r\n  ''''event'''': ''''derived''''\r\n}'', json)", span="4388-4390", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", file="ReflectionUtils.cs"];
m9_1911 [label="string json = JsonConvert.SerializeObject(new DerivedEvent(), Formatting.Indented)", span="4386-4386", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", file="ReflectionUtils.cs"];
m9_1913 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", span="4384-4384", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", file="ReflectionUtils.cs"];
m9_1278 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", span="2960-2960", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="ReflectionUtils.cs"];
m9_1282 [label="this[entry.Key] = entry.Value", span="2969-2969", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="ReflectionUtils.cs"];
m9_1281 [label=dictionary, span="2967-2967", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="ReflectionUtils.cs"];
m9_1279 [label="dictionary == null", span="2962-2962", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="ReflectionUtils.cs"];
m9_1280 [label="return;", span="2964-2964", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="ReflectionUtils.cs"];
m9_1283 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", span="2960-2960", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="ReflectionUtils.cs"];
m9_425 [label="Entry Newtonsoft.Json.Tests.TestObjects.ConstructorCaseSensitivityClass.ConstructorCaseSensitivityClass(string, string, string)", span="33-33", cluster="Newtonsoft.Json.Tests.TestObjects.ConstructorCaseSensitivityClass.ConstructorCaseSensitivityClass(string, string, string)", file="ReflectionUtils.cs"];
m9_1022 [label="Entry Newtonsoft.Json.JsonConvert.PopulateObject(string, object)", span="1189-1189", cluster="Newtonsoft.Json.JsonConvert.PopulateObject(string, object)", file="ReflectionUtils.cs"];
m9_840 [label="Entry System.Uri.ToString()", span="0-0", cluster="System.Uri.ToString()", file="ReflectionUtils.cs"];
m9_1834 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", span="4193-4193", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="ReflectionUtils.cs"];
m9_1836 [label="Assert.AreEqual(3, d.Length)", span="4201-4201", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="ReflectionUtils.cs"];
m9_1837 [label="Assert.AreEqual(2.4, d[0])", span="4202-4202", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="ReflectionUtils.cs"];
m9_1838 [label="Assert.AreEqual(4.3, d[1])", span="4203-4203", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="ReflectionUtils.cs"];
m9_1839 [label="Assert.AreEqual(null, d[2])", span="4204-4204", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="ReflectionUtils.cs"];
m9_1835 [label="double?[] d = (double?[])JsonConvert.DeserializeObject(@''[\r\n  2.4,\r\n  4.3,\r\n  null\r\n]'', typeof(double?[]))", span="4195-4199", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="ReflectionUtils.cs"];
m9_1840 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", span="4193-4193", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="ReflectionUtils.cs"];
m9_539 [label="Entry Newtonsoft.Json.Tests.TestObjects.PersonRaw.PersonRaw()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.PersonRaw.PersonRaw()", file="ReflectionUtils.cs"];
m9_1885 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructWithAttribute.StructWithAttribute()", span="4293-4293", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructWithAttribute.StructWithAttribute()", file="ReflectionUtils.cs"];
m9_810 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", file="ReflectionUtils.cs"];
m9_2548 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", span="568-568", cluster="Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", file="ReflectionUtils.cs"];
m9_2016 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructPropertyClass.NullableStructPropertyClass()", span="4580-4580", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructPropertyClass.NullableStructPropertyClass()", file="ReflectionUtils.cs"];
m9_1812 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FamilyDetails.FamilyDetails()", span="4099-4099", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FamilyDetails.FamilyDetails()", file="ReflectionUtils.cs"];
m9_2690 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="6213-6213", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionUtils.cs"];
m9_2691 [label="return Enum.Parse(typeof(Color), reader.Value.ToString());", span="6215-6215", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionUtils.cs"];
m9_2692 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="6213-6213", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionUtils.cs"];
m9_1653 [label="Entry Newtonsoft.Json.Tests.TestObjects.Movie.Movie()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.Movie.Movie()", file="ReflectionUtils.cs"];
m9_3026 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray2D()", span="7019-7019", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray2D()", file="ReflectionUtils.cs"];
m9_3032 [label="Assert.AreEqual(@''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1,2],[2,1],[2,2]],''''After'''':''''After!''''}'', json)", span="7028-7028", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray2D()", file="ReflectionUtils.cs"];
m9_3031 [label="string json = JsonConvert.SerializeObject(aa)", span="7026-7026", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray2D()", file="ReflectionUtils.cs"];
m9_3027 [label="Array2D aa = new Array2D()", span="7021-7021", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray2D()", file="ReflectionUtils.cs"];
m9_3030 [label="aa.Coordinates = new[,] { { 1, 1 }, { 1, 2 }, { 2, 1 }, { 2, 2 } }", span="7024-7024", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray2D()", file="ReflectionUtils.cs"];
m9_3028 [label="aa.Before = ''Before!''", span="7022-7022", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray2D()", file="ReflectionUtils.cs"];
m9_3029 [label="aa.After = ''After!''", span="7023-7023", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray2D()", file="ReflectionUtils.cs"];
m9_3033 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray2D()", span="7019-7019", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray2D()", file="ReflectionUtils.cs"];
m9_2309 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", span="5456-5456", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="ReflectionUtils.cs"];
m9_2313 [label="UriGuidTimeSpanTestClass c2 = JsonConvert.DeserializeObject<UriGuidTimeSpanTestClass>(json)", span="5476-5476", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="ReflectionUtils.cs"];
m9_2314 [label="Assert.AreEqual(c1.Guid, c2.Guid)", span="5477-5477", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="ReflectionUtils.cs"];
m9_2315 [label="Assert.AreEqual(c1.NullableGuid, c2.NullableGuid)", span="5478-5478", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="ReflectionUtils.cs"];
m9_2316 [label="Assert.AreEqual(c1.TimeSpan, c2.TimeSpan)", span="5479-5479", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="ReflectionUtils.cs"];
m9_2317 [label="Assert.AreEqual(c1.NullableTimeSpan, c2.NullableTimeSpan)", span="5480-5480", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="ReflectionUtils.cs"];
m9_2318 [label="Assert.AreEqual(c1.Uri, c2.Uri)", span="5481-5481", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="ReflectionUtils.cs"];
m9_2312 [label="Assert.AreEqual(@''{\r\n  ''''Guid'''': ''''1924129c-f7e0-40f3-9607-9939c531395a'''',\r\n  ''''NullableGuid'''': ''''9e9f3adf-e017-4f72-91e0-617ebe85967d'''',\r\n  ''''TimeSpan'''': ''''1.00:00:00'''',\r\n  ''''NullableTimeSpan'''': ''''01:00:00'''',\r\n  ''''Uri'''': ''''http://testuri.com/''''\r\n}'', json)", span="5468-5474", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="ReflectionUtils.cs"];
m9_2310 [label="UriGuidTimeSpanTestClass c1 = new UriGuidTimeSpanTestClass\r\n        {\r\n          Guid = new Guid(''1924129C-F7E0-40F3-9607-9939C531395A''),\r\n          NullableGuid = new Guid(''9E9F3ADF-E017-4F72-91E0-617EBE85967D''),\r\n          TimeSpan = TimeSpan.FromDays(1),\r\n          NullableTimeSpan = TimeSpan.FromHours(1),\r\n          Uri = new Uri(''http://testuri.com'')\r\n        }", span="5458-5465", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="ReflectionUtils.cs"];
m9_2311 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="5466-5466", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="ReflectionUtils.cs"];
m9_2319 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", span="5456-5456", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="ReflectionUtils.cs"];
m9_3411 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateDefaultCtorWithIEnumerableCtorList<T>.PrivateDefaultCtorWithIEnumerableCtorList(System.Collections.Generic.IEnumerable<T>)", span="8097-8097", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateDefaultCtorWithIEnumerableCtorList<T>.PrivateDefaultCtorWithIEnumerableCtorList(System.Collections.Generic.IEnumerable<T>)", file="ReflectionUtils.cs"];
m9_3412 [label="Add(default(T))", span="8100-8100", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateDefaultCtorWithIEnumerableCtorList<T>.PrivateDefaultCtorWithIEnumerableCtorList(System.Collections.Generic.IEnumerable<T>)", file="ReflectionUtils.cs"];
m9_3413 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateDefaultCtorWithIEnumerableCtorList<T>.PrivateDefaultCtorWithIEnumerableCtorList(System.Collections.Generic.IEnumerable<T>)", span="8097-8097", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateDefaultCtorWithIEnumerableCtorList<T>.PrivateDefaultCtorWithIEnumerableCtorList(System.Collections.Generic.IEnumerable<T>)", file="ReflectionUtils.cs"];
m9_3438 [label="Entry long.ToString()", span="0-0", cluster="long.ToString()", file="ReflectionUtils.cs"];
m9_2946 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIEnumerableFromConstructor()", span="6796-6796", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIEnumerableFromConstructor()", file="ReflectionUtils.cs"];
m9_2948 [label="var result = JsonConvert.DeserializeObject<EnumerableClass<int?>>(json)", span="6804-6804", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIEnumerableFromConstructor()", file="ReflectionUtils.cs"];
m9_2949 [label="Assert.AreEqual(3, result.Count())", span="6806-6806", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIEnumerableFromConstructor()", file="ReflectionUtils.cs"];
m9_2950 [label="Assert.AreEqual(1, result.ElementAt(0))", span="6807-6807", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIEnumerableFromConstructor()", file="ReflectionUtils.cs"];
m9_2951 [label="Assert.AreEqual(2, result.ElementAt(1))", span="6808-6808", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIEnumerableFromConstructor()", file="ReflectionUtils.cs"];
m9_2952 [label="Assert.AreEqual(null, result.ElementAt(2))", span="6809-6809", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIEnumerableFromConstructor()", file="ReflectionUtils.cs"];
m9_2947 [label="string json = @''[\r\n  1,\r\n  2,\r\n  null\r\n]''", span="6798-6802", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIEnumerableFromConstructor()", file="ReflectionUtils.cs"];
m9_2953 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIEnumerableFromConstructor()", span="6796-6796", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIEnumerableFromConstructor()", file="ReflectionUtils.cs"];
m9_1340 [label="Entry System.Runtime.Serialization.SerializationInfo.GetByte(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetByte(string)", file="ReflectionUtils.cs"];
m9_2182 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", span="5130-5130", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="ReflectionUtils.cs"];
m9_2188 [label="NonDefaultConstructorWithReadOnlyCollectionProperty c2 = JsonConvert.DeserializeObject<NonDefaultConstructorWithReadOnlyCollectionProperty>(json)", span="5145-5145", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="ReflectionUtils.cs"];
m9_2189 [label="Assert.AreEqual(c1.Title, c2.Title)", span="5146-5146", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="ReflectionUtils.cs"];
m9_2190 [label="Assert.AreEqual(c1.Categories.Count, c2.Categories.Count)", span="5147-5147", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="ReflectionUtils.cs"];
m9_2187 [label="Assert.AreEqual(@''{\r\n  ''''Title'''': ''''blah'''',\r\n  ''''Categories'''': [\r\n    ''''one'''',\r\n    ''''two''''\r\n  ]\r\n}'', json)", span="5137-5143", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="ReflectionUtils.cs"];
m9_2191 [label="Assert.AreEqual(''one'', c2.Categories[0])", span="5148-5148", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="ReflectionUtils.cs"];
m9_2192 [label="Assert.AreEqual(''two'', c2.Categories[1])", span="5149-5149", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="ReflectionUtils.cs"];
m9_2186 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="5136-5136", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="ReflectionUtils.cs"];
m9_2183 [label="NonDefaultConstructorWithReadOnlyCollectionProperty c1 = new NonDefaultConstructorWithReadOnlyCollectionProperty(''blah'')", span="5132-5132", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="ReflectionUtils.cs"];
m9_2185 [label="c1.Categories.Add(''two'')", span="5134-5134", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="ReflectionUtils.cs"];
m9_2184 [label="c1.Categories.Add(''one'')", span="5133-5133", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="ReflectionUtils.cs"];
m9_2193 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", span="5130-5130", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="ReflectionUtils.cs"];
m9_2287 [label="Entry System.Exception.ToString()", span="0-0", cluster="System.Exception.ToString()", file="ReflectionUtils.cs"];
m9_932 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", span="2072-2072", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="ReflectionUtils.cs"];
m9_934 [label="SetOnlyPropertyClass2 setOnly = JsonConvert.DeserializeObject<SetOnlyPropertyClass2>(json)", span="2076-2076", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="ReflectionUtils.cs"];
m9_936 [label="Assert.AreEqual(5, a.Count)", span="2078-2078", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="ReflectionUtils.cs"];
m9_937 [label="Assert.AreEqual(1, (int)a[0])", span="2079-2079", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="ReflectionUtils.cs"];
m9_938 [label="Assert.AreEqual(5, (int)a[a.Count - 1])", span="2080-2080", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="ReflectionUtils.cs"];
m9_933 [label="string json = @''{'SetOnlyProperty':[1,2,3,4,5]}''", span="2074-2074", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="ReflectionUtils.cs"];
m9_935 [label="JArray a = (JArray)setOnly.GetValue()", span="2077-2077", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="ReflectionUtils.cs"];
m9_939 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", span="2072-2072", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="ReflectionUtils.cs"];
m9_789 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", span="1717-1717", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="ReflectionUtils.cs"];
m9_792 [label="Assert.AreEqual(''Name!'', c.Name)", span="1730-1730", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="ReflectionUtils.cs"];
m9_793 [label="Assert.AreEqual(1, c.Dictionary.Count)", span="1731-1731", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="ReflectionUtils.cs"];
m9_794 [label="Assert.AreEqual(11, c.Dictionary[''Item''])", span="1732-1732", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="ReflectionUtils.cs"];
m9_791 [label="DictionaryInterfaceClass c = JsonConvert.DeserializeObject<DictionaryInterfaceClass>(\r\n        json,\r\n        new JsonSerializerSettings { ObjectCreationHandling = ObjectCreationHandling.Replace })", span="1726-1728", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="ReflectionUtils.cs"];
m9_790 [label="string json = @''{\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Dictionary'''': {\r\n    ''''Item'''': 11\r\n  }\r\n}''", span="1719-1724", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="ReflectionUtils.cs"];
m9_795 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", span="1717-1717", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="ReflectionUtils.cs"];
m9_1221 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", span="2810-2810", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="ReflectionUtils.cs"];
m9_1223 [label="var item = JsonConvert.DeserializeObject<TestClass>(json)", span="2813-2813", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="ReflectionUtils.cs"];
m9_1224 [label="Assert.AreEqual(123L, item.Value)", span="2815-2815", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="ReflectionUtils.cs"];
m9_1222 [label="var json = ''{ Key: 'abc', Value: 123 }''", span="2812-2812", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="ReflectionUtils.cs"];
m9_1225 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", span="2810-2810", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="ReflectionUtils.cs"];
m9_3288 [label="Entry System.Collections.Generic.HashSet<T>.HashSet(System.Collections.Generic.IEnumerable<T>)", span="0-0", cluster="System.Collections.Generic.HashSet<T>.HashSet(System.Collections.Generic.IEnumerable<T>)", file="ReflectionUtils.cs"];
m9_1023 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", span="2249-2249", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", file="ReflectionUtils.cs"];
m9_1025 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        @''Cannot populate JSON object onto type 'System.Collections.Generic.List`1[Newtonsoft.Json.Tests.TestObjects.Person]'. Path '', line 1, position 2.'',\r\n        () =>\r\n        {\r\n          JsonConvert.PopulateObject(json, new List<Person>());\r\n        })", span="2253-2258", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", file="ReflectionUtils.cs"];
m9_1024 [label="string json = @''{}''", span="2251-2251", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", file="ReflectionUtils.cs"];
m9_1026 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", span="2249-2249", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", file="ReflectionUtils.cs"];
m9_2440 [label="Entry System.Globalization.CultureInfo.CreateSpecificCulture(string)", span="0-0", cluster="System.Globalization.CultureInfo.CreateSpecificCulture(string)", file="ReflectionUtils.cs"];
m9_3144 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIncomplete3DArray()", span="7300-7300", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIncomplete3DArray()", file="ReflectionUtils.cs"];
m9_3145 [label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[/*hi*/[/*hi*/[1/*hi*/,/*hi*/1/*hi*/,1]/*hi*/,/*hi*/[1,1''", span="7302-7302", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIncomplete3DArray()", file="ReflectionUtils.cs"];
m9_3146 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''Unexpected end when deserializing array. Path 'Coordinates[0][1][1]', line 1, position 90.'',\r\n        () => JsonConvert.DeserializeObject<Array3D>(json))", span="7304-7306", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIncomplete3DArray()", file="ReflectionUtils.cs"];
m9_3147 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIncomplete3DArray()", span="7300-7300", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIncomplete3DArray()", file="ReflectionUtils.cs"];
m9_3204 [label="Entry System.DateTimeOffset.ToString(System.IFormatProvider)", span="0-0", cluster="System.DateTimeOffset.ToString(System.IFormatProvider)", file="ReflectionUtils.cs"];
m9_1226 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", span="2843-2843", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="ReflectionUtils.cs"];
m9_1230 [label="c.GuidProperty = new Guid(''66143115-BE2A-4a59-AF0A-348E1EA15B1E'')", span="2849-2849", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="ReflectionUtils.cs"];
m9_1228 [label="DataContractJsonSerializerTestClass c = new DataContractJsonSerializerTestClass()", span="2847-2847", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="ReflectionUtils.cs"];
m9_1229 [label="c.TimeSpanProperty = new TimeSpan(200, 20, 59, 30, 900)", span="2848-2848", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="ReflectionUtils.cs"];
m9_1231 [label="c.AnimalProperty = new Human() { Ethnicity = ''European'' }", span="2850-2850", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="ReflectionUtils.cs"];
m9_1227 [label="Exception ex = new Exception(''Blah blah blah'')", span="2845-2845", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="ReflectionUtils.cs"];
m9_1232 [label="c.ExceptionProperty = ex", span="2851-2851", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="ReflectionUtils.cs"];
m9_1235 [label="serializer.WriteObject(ms, c)", span="2857-2857", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="ReflectionUtils.cs"];
m9_1233 [label="MemoryStream ms = new MemoryStream()", span="2853-2853", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="ReflectionUtils.cs"];
m9_1234 [label="DataContractJsonSerializer serializer = new DataContractJsonSerializer(\r\n        typeof(DataContractJsonSerializerTestClass),\r\n        new Type[] { typeof(Human) })", span="2854-2856", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="ReflectionUtils.cs"];
m9_1236 [label="byte[] jsonBytes = ms.ToArray()", span="2859-2859", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="ReflectionUtils.cs"];
m9_1237 [label="string json = Encoding.UTF8.GetString(jsonBytes, 0, jsonBytes.Length)", span="2860-2860", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="ReflectionUtils.cs"];
m9_1238 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", span="2843-2843", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="ReflectionUtils.cs"];
m9_3304 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", span="7836-7836", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="ReflectionUtils.cs"];
m9_3309 [label="Assert.AreEqual(1234567890.123456m, d)", span="7843-7843", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="ReflectionUtils.cs"];
m9_3308 [label="decimal? d = serialiser.Deserialize<decimal?>(reader)", span="7841-7841", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="ReflectionUtils.cs"];
m9_3305 [label="JsonTextReader reader = new JsonTextReader(new StringReader(''1234567890.123456''))", span="7838-7838", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="ReflectionUtils.cs"];
m9_3307 [label="var serialiser = JsonSerializer.Create(settings)", span="7840-7840", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="ReflectionUtils.cs"];
m9_3306 [label="var settings = new JsonSerializerSettings()", span="7839-7839", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="ReflectionUtils.cs"];
m9_3310 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", span="7836-7836", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="ReflectionUtils.cs"];
m9_2271 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedType.DerivedType()", span="5351-5351", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedType.DerivedType()", file="ReflectionUtils.cs"];
m9_1104 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", span="2426-2426", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="ReflectionUtils.cs"];
m9_1109 [label="Assert.AreEqual(@''{\r\n  ''''f60eaee0-ae47-488e-b330-59527b742d77'''': 1,\r\n  ''''c2594c02-eba1-426a-aa87-8dd8871350b0'''': 2\r\n}'', json)", span="2433-2436", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="ReflectionUtils.cs"];
m9_1106 [label="dictionary.Add(new Guid(''F60EAEE0-AE47-488E-B330-59527B742D77''), 1)", span="2429-2429", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="ReflectionUtils.cs"];
m9_1107 [label="dictionary.Add(new Guid(''C2594C02-EBA1-426A-AA87-8DD8871350B0''), 2)", span="2430-2430", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="ReflectionUtils.cs"];
m9_1108 [label="string json = JsonConvert.SerializeObject(dictionary, Formatting.Indented)", span="2432-2432", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="ReflectionUtils.cs"];
m9_1105 [label="Dictionary<Guid, int> dictionary = new Dictionary<Guid, int>()", span="2428-2428", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="ReflectionUtils.cs"];
m9_1110 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", span="2426-2426", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="ReflectionUtils.cs"];
m9_2936 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass<T>.EnumerableClass(System.Collections.Generic.IEnumerable<T>)", span="6779-6779", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass<T>.EnumerableClass(System.Collections.Generic.IEnumerable<T>)", file="ReflectionUtils.cs"];
m9_2937 [label="_values = new List<T>(values)", span="6781-6781", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass<T>.EnumerableClass(System.Collections.Generic.IEnumerable<T>)", file="ReflectionUtils.cs"];
m9_2938 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass<T>.EnumerableClass(System.Collections.Generic.IEnumerable<T>)", span="6779-6779", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass<T>.EnumerableClass(System.Collections.Generic.IEnumerable<T>)", file="ReflectionUtils.cs"];
m9_1942 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", span="4441-4441", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", file="ReflectionUtils.cs"];
m9_1943 [label="decimal? d = JsonConvert.DeserializeObject<decimal?>(''123456789876543.21'')", span="4443-4443", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", file="ReflectionUtils.cs"];
m9_1944 [label="Assert.AreEqual(123456789876543.21m, d)", span="4444-4444", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", file="ReflectionUtils.cs"];
m9_1945 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", span="4441-4441", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", file="ReflectionUtils.cs"];
m9_3367 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="ReflectionUtils.cs"];
m9_3384 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyCollection<T>.CustomReadOnlyCollection(System.Collections.Generic.IList<T>)", span="8026-8026", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyCollection<T>.CustomReadOnlyCollection(System.Collections.Generic.IList<T>)", file="ReflectionUtils.cs"];
m9_3385 [label="_values = values", span="8028-8028", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyCollection<T>.CustomReadOnlyCollection(System.Collections.Generic.IList<T>)", file="ReflectionUtils.cs"];
m9_3386 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyCollection<T>.CustomReadOnlyCollection(System.Collections.Generic.IList<T>)", span="8026-8026", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyCollection<T>.CustomReadOnlyCollection(System.Collections.Generic.IList<T>)", file="ReflectionUtils.cs"];
m9_3361 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.CustomReadOnlyDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="7958-7958", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.CustomReadOnlyDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="ReflectionUtils.cs"];
m9_3362 [label="_dictionary = dictionary", span="7960-7960", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.CustomReadOnlyDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="ReflectionUtils.cs"];
m9_3363 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.CustomReadOnlyDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="7958-7958", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.CustomReadOnlyDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="ReflectionUtils.cs"];
m9_1374 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, byte)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, byte)", file="ReflectionUtils.cs"];
m9_1841 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", span="4209-4209", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="ReflectionUtils.cs"];
m9_1844 [label="HashSet<string> d = JsonConvert.DeserializeObject<HashSet<string>>(jsonText)", span="4224-4224", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="ReflectionUtils.cs"];
m9_1843 [label="Assert.AreEqual(@''[\r\n  ''''One'''',\r\n  ''''2'''',\r\n  ''''III''''\r\n]'', jsonText)", span="4218-4222", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="ReflectionUtils.cs"];
m9_1845 [label="Assert.AreEqual(3, d.Count)", span="4226-4226", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="ReflectionUtils.cs"];
m9_1842 [label="string jsonText = JsonConvert.SerializeObject(new HashSet<string>()\r\n        {\r\n          ''One'',\r\n          ''2'',\r\n          ''III''\r\n        }, Formatting.Indented)", span="4211-4216", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="ReflectionUtils.cs"];
m9_1846 [label="Assert.IsTrue(d.Contains(''One''))", span="4227-4227", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="ReflectionUtils.cs"];
m9_1847 [label="Assert.IsTrue(d.Contains(''2''))", span="4228-4228", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="ReflectionUtils.cs"];
m9_1848 [label="Assert.IsTrue(d.Contains(''III''))", span="4229-4229", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="ReflectionUtils.cs"];
m9_1849 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", span="4209-4209", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="ReflectionUtils.cs"];
m9_265 [label="((PropertyInfo)member).SetValue(target, value, null)", span="547-547", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", file="ReflectionUtils.cs"];
m9_123 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsGenericDefinition(System.Type, System.Type)", span="281-281", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsGenericDefinition(System.Type, System.Type)", file="ReflectionUtils.cs"];
m9_832 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", span="1822-1822", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="ReflectionUtils.cs"];
m9_836 [label="Uri newUri = JsonConvert.DeserializeObject<Uri>(json)", span="1829-1829", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="ReflectionUtils.cs"];
m9_835 [label="Assert.AreEqual(''http://codeplex.com/'', uri.ToString())", span="1827-1827", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="ReflectionUtils.cs"];
m9_837 [label="Assert.AreEqual(uri, newUri)", span="1830-1830", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="ReflectionUtils.cs"];
m9_834 [label="string json = JsonConvert.SerializeObject(uri)", span="1825-1825", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="ReflectionUtils.cs"];
m9_833 [label="Uri uri = new Uri(''http://codeplex.com'')", span="1824-1824", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="ReflectionUtils.cs"];
m9_838 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", span="1822-1822", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="ReflectionUtils.cs"];
m9_1674 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", span="3830-3830", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="ReflectionUtils.cs"];
m9_1682 [label="var json = JsonConvert.SerializeObject(child, Formatting.Indented)", span="3843-3843", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="ReflectionUtils.cs"];
m9_1681 [label="child.Add(''Father'', reference)", span="3841-3841", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="ReflectionUtils.cs"];
m9_1678 [label="var child = new Dictionary<string, object>()", span="3838-3838", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="ReflectionUtils.cs"];
m9_1683 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''Additional content found in JSON reference object. A JSON reference object should only have a $ref property. Path 'Father.$id', line 6, position 11.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<Dictionary<string, object>>(json);\r\n        })", span="3845-3850", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="ReflectionUtils.cs"];
m9_1676 [label="reference.Add(''$ref'', ''Persons'')", span="3835-3835", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="ReflectionUtils.cs"];
m9_1677 [label="reference.Add(''$id'', 1)", span="3836-3836", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="ReflectionUtils.cs"];
m9_1679 [label="child.Add(''_id'', 2)", span="3839-3839", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="ReflectionUtils.cs"];
m9_1680 [label="child.Add(''Name'', ''Isabell'')", span="3840-3840", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="ReflectionUtils.cs"];
m9_1675 [label="var reference = new Dictionary<string, object>()", span="3834-3834", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="ReflectionUtils.cs"];
m9_1684 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", span="3830-3830", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="ReflectionUtils.cs"];
m9_2772 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", span="6350-6350", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="ReflectionUtils.cs"];
m9_2775 [label="Assert.AreEqual(@''{''''Data'''':['''':::ONE:::'''','''':::TWO:::'''','''':::THREE:::'''']}'', json)", span="6364-6364", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="ReflectionUtils.cs"];
m9_2774 [label="string json = JsonConvert.SerializeObject(c)", span="6362-6362", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="ReflectionUtils.cs"];
m9_2773 [label="PropertyItemConverter c = new PropertyItemConverter\r\n        {\r\n          Data = new[]\r\n            {\r\n              ''one'',\r\n              ''two'',\r\n              ''three''\r\n            }\r\n        }", span="6352-6360", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="ReflectionUtils.cs"];
m9_2776 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", span="6350-6350", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="ReflectionUtils.cs"];
m9_2473 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", span="5747-5747", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", file="ReflectionUtils.cs"];
m9_2474 [label="string json = @''[\r\n  1,\r\n  2,\r\n  3,\r\n  null\r\n]''", span="5749-5754", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", file="ReflectionUtils.cs"];
m9_2475 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''Error converting value {null} to type 'System.Int32'. Path '[3]', line 5, position 7.'',\r\n        () =>\r\n        {\r\n          List<int> numbers = JsonConvert.DeserializeObject<List<int>>(json);\r\n        })", span="5756-5761", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", file="ReflectionUtils.cs"];
m9_2476 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", span="5747-5747", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", file="ReflectionUtils.cs"];
m9_1791 [label="Entry Newtonsoft.Json.Tests.Serialization.SpecifiedTestClass.SpecifiedTestClass()", span="8552-8552", cluster="Newtonsoft.Json.Tests.Serialization.SpecifiedTestClass.SpecifiedTestClass()", file="ReflectionUtils.cs"];
m9_2942 [label="Entry System.Collections.Generic.IEnumerable<T>.GetEnumerator()", span="0-0", cluster="System.Collections.Generic.IEnumerable<T>.GetEnumerator()", file="ReflectionUtils.cs"];
m9_652 [label="Entry Newtonsoft.Json.Tests.TestObjects.InterfacePropertyTestClass.InterfacePropertyTestClass()", span="46-46", cluster="Newtonsoft.Json.Tests.TestObjects.InterfacePropertyTestClass.InterfacePropertyTestClass()", file="ReflectionUtils.cs"];
m9_3439 [label="Entry Newtonsoft.Json.Tests.Serialization.WidgetIdJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="8268-8268", cluster="Newtonsoft.Json.Tests.Serialization.WidgetIdJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionUtils.cs"];
m9_3442 [label="return new WidgetId1 { Value = int.Parse(reader.Value.ToString()) };", span="8272-8272", cluster="Newtonsoft.Json.Tests.Serialization.WidgetIdJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionUtils.cs"];
m9_3440 [label="reader.TokenType == JsonToken.Null", span="8270-8270", cluster="Newtonsoft.Json.Tests.Serialization.WidgetIdJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionUtils.cs"];
m9_3441 [label="return null;", span="8271-8271", cluster="Newtonsoft.Json.Tests.Serialization.WidgetIdJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionUtils.cs"];
m9_3443 [label="Exit Newtonsoft.Json.Tests.Serialization.WidgetIdJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="8268-8268", cluster="Newtonsoft.Json.Tests.Serialization.WidgetIdJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionUtils.cs"];
m9_258 [label="string json = JsonConvert.SerializeObject(anonymous, settings)", span="638-638", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="ReflectionUtils.cs"];
m9_259 [label="Assert.AreEqual(@''{''''DateValue'''':''''2000''''}'', json)", span="639-639", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="ReflectionUtils.cs"];
m9_260 [label="anonymous = JsonConvert.DeserializeAnonymousType(json, anonymous, settings)", span="641-641", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="ReflectionUtils.cs"];
m9_261 [label="Assert.AreEqual(d, anonymous.DateValue)", span="642-642", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="ReflectionUtils.cs"];
m9_262 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", span="622-622", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="ReflectionUtils.cs"];
m9_3280 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", span="7775-7775", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="ReflectionUtils.cs"];
m9_3283 [label="ISet<string> s2 = JsonConvert.DeserializeObject<ISet<string>>(json)", span="7781-7781", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="ReflectionUtils.cs"];
m9_3284 [label="Assert.AreEqual(s1.Count, s2.Count)", span="7783-7783", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="ReflectionUtils.cs"];
m9_3282 [label="string json = JsonConvert.SerializeObject(s1)", span="7779-7779", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="ReflectionUtils.cs"];
m9_3286 [label="Assert.IsTrue(s2.Contains(s))", span="7786-7786", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="ReflectionUtils.cs"];
m9_3281 [label="ISet<string> s1 = new HashSet<string>(new[] {''1'', ''two'', ''III''})", span="7777-7777", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="ReflectionUtils.cs"];
m9_3285 [label=s1, span="7784-7784", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="ReflectionUtils.cs"];
m9_3287 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", span="7775-7775", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="ReflectionUtils.cs"];
m9_1220 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.B.B()", span="2772-2772", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.B.B()", file="ReflectionUtils.cs"];
m9_902 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericList()", span="1964-1964", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericList()", file="ReflectionUtils.cs"];
m9_909 [label="Assert.AreEqual(@''[\r\n  {\r\n    ''''Name'''': ''''Product 1'''',\r\n    ''''ExpiryDate'''': ''''2000-12-29T00:00:00Z'''',\r\n    ''''Price'''': 99.95,\r\n    ''''Sizes'''': null\r\n  },\r\n  {\r\n    ''''Name'''': ''''Product 2'''',\r\n    ''''ExpiryDate'''': ''''2009-07-31T00:00:00Z'''',\r\n    ''''Price'''': 12.50,\r\n    ''''Sizes'''': null\r\n  }\r\n]'', json)", span="1999-2012", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericList()", file="ReflectionUtils.cs"];
m9_908 [label="string json = JsonConvert.SerializeObject(products, Formatting.Indented)", span="1983-1983", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericList()", file="ReflectionUtils.cs"];
m9_903 [label="Product p1 = new Product\r\n        {\r\n          Name = ''Product 1'',\r\n          Price = 99.95m,\r\n          ExpiryDate = new DateTime(2000, 12, 29, 0, 0, 0, DateTimeKind.Utc),\r\n        }", span="1966-1971", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericList()", file="ReflectionUtils.cs"];
m9_904 [label="Product p2 = new Product\r\n        {\r\n          Name = ''Product 2'',\r\n          Price = 12.50m,\r\n          ExpiryDate = new DateTime(2009, 7, 31, 0, 0, 0, DateTimeKind.Utc),\r\n        }", span="1972-1977", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericList()", file="ReflectionUtils.cs"];
m9_905 [label="List<Product> products = new List<Product>()", span="1979-1979", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericList()", file="ReflectionUtils.cs"];
m9_907 [label="products.Add(p2)", span="1981-1981", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericList()", file="ReflectionUtils.cs"];
m9_906 [label="products.Add(p1)", span="1980-1980", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericList()", file="ReflectionUtils.cs"];
m9_910 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericList()", span="1964-1964", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericList()", file="ReflectionUtils.cs"];
m9_1893 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeZoneOffsetObject.TimeZoneOffsetObject()", span="4320-4320", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeZoneOffsetObject.TimeZoneOffsetObject()", file="ReflectionUtils.cs"];
m9_2559 [label="Entry Newtonsoft.Json.Tests.Serialization.WithEnums.WithEnums()", span="8284-8284", cluster="Newtonsoft.Json.Tests.Serialization.WithEnums.WithEnums()", file="ReflectionUtils.cs"];
m9_2688 [label="Entry Unk.ToUpper", span="", cluster="Unk.ToUpper", file="ReflectionUtils.cs"];
m9_3434 [label="Entry Newtonsoft.Json.Tests.Serialization.WidgetIdJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="8262-8262", cluster="Newtonsoft.Json.Tests.Serialization.WidgetIdJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionUtils.cs"];
m9_3436 [label="writer.WriteValue(id.Value.ToString())", span="8265-8265", cluster="Newtonsoft.Json.Tests.Serialization.WidgetIdJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionUtils.cs"];
m9_3435 [label="WidgetId1 id = (WidgetId1)value", span="8264-8264", cluster="Newtonsoft.Json.Tests.Serialization.WidgetIdJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionUtils.cs"];
m9_3437 [label="Exit Newtonsoft.Json.Tests.Serialization.WidgetIdJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="8262-8262", cluster="Newtonsoft.Json.Tests.Serialization.WidgetIdJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionUtils.cs"];
m9_1190 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", span="2713-2713", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="ReflectionUtils.cs"];
m9_1191 [label="JRawValueTestObject deserialized = JsonConvert.DeserializeObject<JRawValueTestObject>(''{value:3}'')", span="2715-2715", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="ReflectionUtils.cs"];
m9_1193 [label="deserialized = JsonConvert.DeserializeObject<JRawValueTestObject>(''{value:'3'}'')", span="2718-2718", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="ReflectionUtils.cs"];
m9_1192 [label="Assert.AreEqual(''3'', deserialized.Value.ToString())", span="2716-2716", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="ReflectionUtils.cs"];
m9_1194 [label="Assert.AreEqual(@''''''3'''''', deserialized.Value.ToString())", span="2719-2719", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="ReflectionUtils.cs"];
m9_1195 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", span="2713-2713", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="ReflectionUtils.cs"];
m9_2358 [label="Entry Newtonsoft.Json.Tests.Serialization.GameObject.GameObject()", span="8370-8370", cluster="Newtonsoft.Json.Tests.Serialization.GameObject.GameObject()", file="ReflectionUtils.cs"];
m9_3450 [label="Components = new ConcurrentDictionary<string, Component>()", span="8372-8372", cluster="Newtonsoft.Json.Tests.Serialization.GameObject.GameObject()", file="ReflectionUtils.cs"];
m9_3451 [label="Exit Newtonsoft.Json.Tests.Serialization.GameObject.GameObject()", span="8370-8370", cluster="Newtonsoft.Json.Tests.Serialization.GameObject.GameObject()", file="ReflectionUtils.cs"];
m9_3263 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", span="7716-7716", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="ReflectionUtils.cs"];
m9_3269 [label="Assert.AreEqual(expected, actual)", span="7739-7739", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="ReflectionUtils.cs"];
m9_3265 [label="string expected = JsonConvert.SerializeObject(dates, Formatting.Indented)", span="7728-7728", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="ReflectionUtils.cs"];
m9_3267 [label="string actual = JsonConvert.SerializeObject(dates, Formatting.Indented, new JsonSerializerSettings\r\n        {\r\n          DateFormatString = JsonSerializerSettings.DefaultDateFormatString\r\n        })", span="7732-7735", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="ReflectionUtils.cs"];
m9_3268 [label="Console.WriteLine(expected)", span="7737-7737", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="ReflectionUtils.cs"];
m9_3264 [label="IDictionary<string, object> dates = new Dictionary<string, object>\r\n        {\r\n          {''DateTime-Unspecified'', new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Unspecified)},\r\n          {''DateTime-Utc'', new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc)},\r\n          {''DateTime-Local'', new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Local)},\r\n          {''DateTimeOffset-Zero'', new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero)},\r\n          {''DateTimeOffset-Plus1'', new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1))},\r\n          {''DateTimeOffset-Plus15'', new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1.5))}\r\n        }", span="7718-7726", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="ReflectionUtils.cs"];
m9_3266 [label="Console.WriteLine(expected)", span="7730-7730", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="ReflectionUtils.cs"];
m9_3270 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", span="7716-7716", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="ReflectionUtils.cs"];
m9_2786 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", span="6392-6392", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="ReflectionUtils.cs"];
m9_2790 [label="IDictionary<DateTimeOffset?, int> dic2 = JsonConvert.DeserializeObject<IDictionary<DateTimeOffset?, int>>(json)", span="6410-6410", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="ReflectionUtils.cs"];
m9_2789 [label="Assert.AreEqual(@''{\r\n  ''''\/Date(976623132000+0000)\/'''': 1,\r\n  ''''\/Date(1386850332000+0000)\/'''': 2\r\n}'', json)", span="6405-6408", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="ReflectionUtils.cs"];
m9_2791 [label="Assert.AreEqual(2, dic2.Count)", span="6412-6412", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="ReflectionUtils.cs"];
m9_2792 [label="Assert.AreEqual(1, dic2[new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero)])", span="6413-6413", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="ReflectionUtils.cs"];
m9_2793 [label="Assert.AreEqual(2, dic2[new DateTimeOffset(2013, 12, 12, 12, 12, 12, TimeSpan.Zero)])", span="6414-6414", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="ReflectionUtils.cs"];
m9_2788 [label="string json = JsonConvert.SerializeObject(dic1, Formatting.Indented, new JsonSerializerSettings\r\n        {\r\n          DateFormatHandling = DateFormatHandling.MicrosoftDateFormat\r\n        })", span="6400-6403", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="ReflectionUtils.cs"];
m9_2787 [label="IDictionary<DateTimeOffset?, int> dic1 = new Dictionary<DateTimeOffset?, int>\r\n        {\r\n          {new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero), 1},\r\n          {new DateTimeOffset(2013, 12, 12, 12, 12, 12, TimeSpan.Zero), 2}\r\n        }", span="6394-6398", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="ReflectionUtils.cs"];
m9_2794 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", span="6392-6392", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="ReflectionUtils.cs"];
m9_2177 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObject.ImplementInterfaceObject()", span="5091-5091", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObject.ImplementInterfaceObject()", file="ReflectionUtils.cs"];
m9_2133 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", span="4951-4951", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="ReflectionUtils.cs"];
m9_2135 [label="var withoutParameterisedConstructor = JsonConvert.DeserializeObject<DTOWithoutParameterisedConstructor>(json)", span="4955-4955", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="ReflectionUtils.cs"];
m9_2136 [label="var withParameterisedConstructor = JsonConvert.DeserializeObject<DTOWithParameterisedConstructor>(json)", span="4956-4956", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="ReflectionUtils.cs"];
m9_2137 [label="Assert.AreEqual(withoutParameterisedConstructor.B, withParameterisedConstructor.B)", span="4957-4957", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="ReflectionUtils.cs"];
m9_2134 [label="string json = @''{A:''''Test''''}''", span="4953-4953", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="ReflectionUtils.cs"];
m9_2138 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", span="4951-4951", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="ReflectionUtils.cs"];
m9_2771 [label="Entry Newtonsoft.Json.Tests.Serialization.PropertyItemConverter.PropertyItemConverter()", span="8218-8218", cluster="Newtonsoft.Json.Tests.Serialization.PropertyItemConverter.PropertyItemConverter()", file="ReflectionUtils.cs"];
m9_2428 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", span="544-544", cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", file="ReflectionUtils.cs"];
m9_3355 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyDictionary()", span="7944-7944", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyDictionary()", file="ReflectionUtils.cs"];
m9_3356 [label="ReadOnlyDictionary<string, int> dic = JsonConvert.DeserializeObject<ReadOnlyDictionary<string, int>>(''{'one':1,'two':2}'')", span="7946-7946", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyDictionary()", file="ReflectionUtils.cs"];
m9_3357 [label="Assert.AreEqual(2, dic.Count)", span="7948-7948", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyDictionary()", file="ReflectionUtils.cs"];
m9_3358 [label="Assert.AreEqual(1, dic[''one''])", span="7950-7950", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyDictionary()", file="ReflectionUtils.cs"];
m9_3359 [label="Assert.AreEqual(2, dic[''two''])", span="7951-7951", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyDictionary()", file="ReflectionUtils.cs"];
m9_3360 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyDictionary()", span="7944-7944", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyDictionary()", file="ReflectionUtils.cs"];
m9_2878 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", span="6642-6642", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="ReflectionUtils.cs"];
m9_2880 [label="InvalidOperationException exception = JsonConvert.DeserializeObject<InvalidOperationException>(json)", span="6670-6670", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="ReflectionUtils.cs"];
m9_2883 [label="Assert.AreEqual(''Outter exception...'', exception.Message)", span="6674-6674", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="ReflectionUtils.cs"];
m9_2879 [label="string json = @''{ ''''ClassName'''' : ''''System.InvalidOperationException'''',\r\n  ''''Data'''' : null,\r\n  ''''ExceptionMethod'''' : ''''8\nLogin\nAppBiz, Version=4.0.0.0, Culture=neutral, PublicKeyToken=null\nMyApp.LoginBiz\nMyApp.User Login()'''',\r\n  ''''HResult'''' : -2146233079,\r\n  ''''HelpURL'''' : null,\r\n  ''''InnerException'''' : { ''''ClassName'''' : ''''System.Exception'''',\r\n      ''''Data'''' : null,\r\n      ''''ExceptionMethod'''' : null,\r\n      ''''HResult'''' : -2146233088,\r\n      ''''HelpURL'''' : null,\r\n      ''''InnerException'''' : null,\r\n      ''''Message'''' : ''''Inner exception...'''',\r\n      ''''RemoteStackIndex'''' : 0,\r\n      ''''RemoteStackTraceString'''' : null,\r\n      ''''Source'''' : null,\r\n      ''''StackTraceString'''' : null,\r\n      ''''WatsonBuckets'''' : null\r\n    },\r\n  ''''Message'''' : ''''Outter exception...'''',\r\n  ''''RemoteStackIndex'''' : 0,\r\n  ''''RemoteStackTraceString'''' : null,\r\n  ''''Source'''' : ''''AppBiz'''',\r\n  ''''StackTraceString'''' : '''' at MyApp.LoginBiz.Login() in C:\\MyApp\\LoginBiz.cs:line 44\r\n at MyApp.LoginSvc.Login() in C:\\MyApp\\LoginSvc.cs:line 71\r\n at SyncInvokeLogin(Object , Object[] , Object[] )\r\n at System.ServiceModel.Dispatcher.SyncMethodInvoker.Invoke(Object instance, Object[] inputs, Object[]& outputs)\r\n at System.ServiceModel.Dispatcher.DispatchOperationRuntime.InvokeBegin(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage5(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage41(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage4(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage31(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage3(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage2(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage11(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage1(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.MessageRpc.Process(Boolean isOperationContextSet)'''',\r\n  ''''WatsonBuckets'''' : null\r\n}''", span="6644-6668", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="ReflectionUtils.cs"];
m9_2881 [label="Assert.IsNotNull(exception)", span="6671-6671", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="ReflectionUtils.cs"];
m9_2882 [label="CustomAssert.IsInstanceOfType(typeof(InvalidOperationException), exception)", span="6672-6672", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="ReflectionUtils.cs"];
m9_2884 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", span="6642-6642", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="ReflectionUtils.cs"];
m9_1645 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverterTest()", span="3779-3779", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverterTest()", file="ReflectionUtils.cs"];
m9_1649 [label="Assert.AreEqual(2, p.ReleaseCountries.Count)", span="3789-3789", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverterTest()", file="ReflectionUtils.cs"];
m9_1650 [label="Assert.AreEqual(''Existing'', p.ReleaseCountries[0])", span="3790-3790", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverterTest()", file="ReflectionUtils.cs"];
m9_1651 [label="Assert.AreEqual(''Appended'', p.ReleaseCountries[1])", span="3791-3791", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverterTest()", file="ReflectionUtils.cs"];
m9_1646 [label="Movie p = new Movie()", span="3781-3781", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverterTest()", file="ReflectionUtils.cs"];
m9_1648 [label="JsonConvert.PopulateObject(''{'ReleaseCountries':['Appended']}'', p, new JsonSerializerSettings\r\n        {\r\n          Converters = new List<JsonConverter> { new StringListAppenderConverter() }\r\n        })", span="3784-3787", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverterTest()", file="ReflectionUtils.cs"];
m9_1647 [label="p.ReleaseCountries = new List<string> { ''Existing'' }", span="3782-3782", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverterTest()", file="ReflectionUtils.cs"];
m9_1652 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverterTest()", span="3779-3779", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverterTest()", file="ReflectionUtils.cs"];
m9_1610 [label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="ReflectionUtils.cs"];
m9_1178 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", span="2676-2676", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="ReflectionUtils.cs"];
m9_1185 [label="ThisGenericTest<KeyValueId> gen = JsonConvert.DeserializeObject<ThisGenericTest<KeyValueId>>(json)", span="2703-2703", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="ReflectionUtils.cs"];
m9_1184 [label="Assert.AreEqual(@''{\r\n  ''''MyProperty'''': ''''some value'''',\r\n  ''''TheItems'''': [\r\n    {\r\n      ''''Id'''': 1,\r\n      ''''Key'''': ''''key1'''',\r\n      ''''Value'''': ''''value1''''\r\n    },\r\n    {\r\n      ''''Id'''': 2,\r\n      ''''Key'''': ''''key2'''',\r\n      ''''Value'''': ''''value2''''\r\n    }\r\n  ]\r\n}'', json)", span="2687-2701", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="ReflectionUtils.cs"];
m9_1186 [label="Assert.AreEqual(''some value'', gen.MyProperty)", span="2704-2704", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="ReflectionUtils.cs"];
m9_1183 [label="string json = g.ToJson()", span="2685-2685", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="ReflectionUtils.cs"];
m9_1179 [label="ThisGenericTest<KeyValueId> g = new ThisGenericTest<KeyValueId>()", span="2678-2678", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="ReflectionUtils.cs"];
m9_1182 [label="g.MyProperty = ''some value''", span="2683-2683", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="ReflectionUtils.cs"];
m9_1180 [label="g.Add(new KeyValueId { Id = 1, Key = ''key1'', Value = ''value1'' })", span="2680-2680", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="ReflectionUtils.cs"];
m9_1181 [label="g.Add(new KeyValueId { Id = 2, Key = ''key2'', Value = ''value2'' })", span="2681-2681", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="ReflectionUtils.cs"];
m9_1187 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", span="2676-2676", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="ReflectionUtils.cs"];
m9_3322 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", span="7882-7882", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="ReflectionUtils.cs"];
m9_3325 [label="Assert.AreEqual(@''[\r\n  123456789999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999990\r\n]'', json)", span="7888-7890", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="ReflectionUtils.cs"];
m9_3324 [label="string json = JsonConvert.SerializeObject(new [] {i}, Formatting.Indented)", span="7886-7886", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="ReflectionUtils.cs"];
m9_3323 [label="BigInteger i = BigInteger.Parse(''123456789999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999990'')", span="7884-7884", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="ReflectionUtils.cs"];
m9_3326 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", span="7882-7882", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="ReflectionUtils.cs"];
m9_1035 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", span="2271-2271", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", file="ReflectionUtils.cs"];
m9_1036 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        @''Error getting value from 'ReadTimeout' on 'System.IO.MemoryStream'.'',\r\n        () =>\r\n        {\r\n          JsonConvert.SerializeObject(new MemoryStream(), new JsonSerializerSettings\r\n          {\r\n            ContractResolver = new DefaultContractResolver\r\n            {\r\n#if !(SILVERLIGHT || NETFX_CORE || PORTABLE)\r\n              IgnoreSerializableAttribute = true\r\n#endif\r\n            }\r\n          });\r\n        })", span="2273-2286", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", file="ReflectionUtils.cs"];
m9_1037 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", span="2271-2271", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", file="ReflectionUtils.cs"];
m9_1299 [label="Entry System.Collections.IEnumerable.GetEnumerator()", span="0-0", cluster="System.Collections.IEnumerable.GetEnumerator()", file="ReflectionUtils.cs"];
m9_3043 [label="Entry Newtonsoft.Json.Tests.Serialization.Array3D.Array3D()", span="8501-8501", cluster="Newtonsoft.Json.Tests.Serialization.Array3D.Array3D()", file="ReflectionUtils.cs"];
m9_126 [label="Type t = type.GetGenericTypeDefinition()", span="288-288", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsGenericDefinition(System.Type, System.Type)", file="ReflectionUtils.cs"];
m9_127 [label="return (t == genericInterfaceDefinition);", span="289-289", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsGenericDefinition(System.Type, System.Type)", file="ReflectionUtils.cs"];
m9_128 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.IsGenericDefinition(System.Type, System.Type)", span="281-281", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsGenericDefinition(System.Type, System.Type)", file="ReflectionUtils.cs"];
m9_2609 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", span="6031-6031", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", file="ReflectionUtils.cs"];
m9_2610 [label="byte[] b = JsonConvert.DeserializeObject<byte[]>('''')", span="6033-6033", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", file="ReflectionUtils.cs"];
m9_2611 [label="Assert.IsNull(b)", span="6034-6034", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", file="ReflectionUtils.cs"];
m9_2612 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", span="6031-6031", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", file="ReflectionUtils.cs"];
m9_2166 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", span="5071-5071", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="ReflectionUtils.cs"];
m9_2169 [label="Assert.AreEqual(@''{''''differentVirtualMember'''':''''VirtualMember!'''',''''nonVirtualMember'''':''''NonVirtualMember!''''}'', result)", span="5080-5080", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="ReflectionUtils.cs"];
m9_2168 [label="string result = JsonConvert.SerializeObject(cc)", span="5079-5079", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="ReflectionUtils.cs"];
m9_2167 [label="ChildWithDifferentOverrideObject cc = new ChildWithDifferentOverrideObject\r\n        {\r\n          VirtualMember = ''VirtualMember!'',\r\n          NonVirtualMember = ''NonVirtualMember!''\r\n        }", span="5073-5077", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="ReflectionUtils.cs"];
m9_2170 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", span="5071-5071", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="ReflectionUtils.cs"];
m9_3368 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="7973-7973", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="ReflectionUtils.cs"];
m9_3369 [label="return _dictionary.TryGetValue(key, out value);", span="7975-7975", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="ReflectionUtils.cs"];
m9_3370 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="7973-7973", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="ReflectionUtils.cs"];
m9_2487 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", span="5791-5791", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", file="ReflectionUtils.cs"];
m9_2488 [label="string json = @''{\r\n  ''''Integer'''': 1,\r\n  ''''NullableInteger1'''': 2,\r\n  ''''NullableInteger2'''': null\r\n}''", span="5793-5797", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", file="ReflectionUtils.cs"];
m9_2489 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''Error converting value 1 to type 'Newtonsoft.Json.Tests.ConvertibleInt'. Path 'Integer', line 2, position 15.'',\r\n        () => JsonConvert.DeserializeObject<ConvertableIntTestClass>(json))", span="5799-5801", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", file="ReflectionUtils.cs"];
m9_2490 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", span="5791-5791", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", file="ReflectionUtils.cs"];
m9_2258 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", span="5330-5330", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="ReflectionUtils.cs"];
m9_2259 [label="BusRun r = JsonConvert.DeserializeObject<BusRun>(''{\''Departures\'':[\''\\/Date(1309874148734-0400)\\/\'',\''\\/Date(1309874148739-0400)\\/\'',null],\''WheelchairAccessible\'':true}'')", span="5332-5332", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="ReflectionUtils.cs"];
m9_2260 [label="Assert.AreEqual(typeof(List<DateTime?>), r.Departures.GetType())", span="5334-5334", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="ReflectionUtils.cs"];
m9_2261 [label="Assert.AreEqual(3, r.Departures.Count())", span="5335-5335", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="ReflectionUtils.cs"];
m9_2262 [label="Assert.IsNotNull(r.Departures.ElementAt(0))", span="5336-5336", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="ReflectionUtils.cs"];
m9_2263 [label="Assert.IsNotNull(r.Departures.ElementAt(1))", span="5337-5337", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="ReflectionUtils.cs"];
m9_2264 [label="Assert.IsNull(r.Departures.ElementAt(2))", span="5338-5338", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="ReflectionUtils.cs"];
m9_2265 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", span="5330-5330", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="ReflectionUtils.cs"];
m9_878 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", span="1928-1928", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="ReflectionUtils.cs"];
m9_880 [label="ObjectArrayPropertyTest o = JsonConvert.DeserializeObject<ObjectArrayPropertyTest>(json)", span="1932-1932", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="ReflectionUtils.cs"];
m9_881 [label="Assert.AreEqual(''Router'', o.Action)", span="1934-1934", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="ReflectionUtils.cs"];
m9_882 [label="Assert.AreEqual(''Navigate'', o.Method)", span="1935-1935", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="ReflectionUtils.cs"];
m9_883 [label="Assert.AreEqual(3, o.Data.Length)", span="1936-1936", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="ReflectionUtils.cs"];
m9_884 [label="Assert.AreEqual(''dashboard'', o.Data[0])", span="1937-1937", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="ReflectionUtils.cs"];
m9_886 [label="Assert.AreEqual(4, ((JArray)o.Data[1]).Count)", span="1939-1939", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="ReflectionUtils.cs"];
m9_888 [label="Assert.AreEqual(1, ((JObject)o.Data[2]).Count)", span="1941-1941", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="ReflectionUtils.cs"];
m9_889 [label="Assert.AreEqual(1, (int)((JObject)o.Data[2])[''one''])", span="1942-1942", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="ReflectionUtils.cs"];
m9_879 [label="string json = @''{''''action'''':''''Router'''',''''method'''':''''Navigate'''',''''data'''':[''''dashboard'''',[''''id'''', 1, ''''teststring'''', ''''test''''],{''''one'''':1}],''''type'''':''''rpc'''',''''tid'''':2}''", span="1930-1930", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="ReflectionUtils.cs"];
m9_885 [label="CustomAssert.IsInstanceOfType(typeof(JArray), o.Data[1])", span="1938-1938", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="ReflectionUtils.cs"];
m9_887 [label="CustomAssert.IsInstanceOfType(typeof(JObject), o.Data[2])", span="1940-1940", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="ReflectionUtils.cs"];
m9_890 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", span="1928-1928", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="ReflectionUtils.cs"];
m9_3423 [label="Entry System.Enum.GetNames(System.Type)", span="0-0", cluster="System.Enum.GetNames(System.Type)", file="ReflectionUtils.cs"];
m9_3493 [label=json, span="", file="ReflectionUtils.cs"];
m9_3497 [label=json, span="", file="ReflectionUtils.cs"];
m9_3498 [label=json, span="", file="ReflectionUtils.cs"];
m9_3499 [label=json, span="", file="ReflectionUtils.cs"];
m9_3500 [label=json, span="", file="ReflectionUtils.cs"];
m9_3501 [label=json, span="", file="ReflectionUtils.cs"];
m9_3502 [label=json, span="", file="ReflectionUtils.cs"];
m9_3503 [label=json, span="", file="ReflectionUtils.cs"];
m9_3504 [label=json, span="", file="ReflectionUtils.cs"];
m9_3505 [label=json, span="", file="ReflectionUtils.cs"];
m9_3506 [label=json, span="", file="ReflectionUtils.cs"];
m9_3519 [label=json, span="", file="ReflectionUtils.cs"];
m9_3524 [label=json, span="", file="ReflectionUtils.cs"];
m9_3540 [label=json, span="", file="ReflectionUtils.cs"];
m9_3541 [label=json, span="", file="ReflectionUtils.cs"];
m9_3542 [label=json, span="", file="ReflectionUtils.cs"];
m9_3551 [label=json, span="", file="ReflectionUtils.cs"];
m9_3554 [label=json, span="", file="ReflectionUtils.cs"];
m9_3556 [label=json, span="", file="ReflectionUtils.cs"];
m9_3557 [label=json, span="", file="ReflectionUtils.cs"];
m9_3558 [label=json, span="", file="ReflectionUtils.cs"];
m9_3559 [label=json, span="", file="ReflectionUtils.cs"];
m9_3560 [label=json, span="", file="ReflectionUtils.cs"];
m9_3561 [label=json, span="", file="ReflectionUtils.cs"];
m9_3562 [label=json, span="", file="ReflectionUtils.cs"];
m9_3563 [label=json, span="", file="ReflectionUtils.cs"];
m9_3546 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest", span="", file="ReflectionUtils.cs"];
m9_3495 [label=strFromTest, span="", file="ReflectionUtils.cs"];
m9_3494 [label=json, span="", file="ReflectionUtils.cs"];
m9_3496 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers", span="", file="ReflectionUtils.cs"];
m9_3538 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes", span="", file="ReflectionUtils.cs"];
m9_3543 [label=errors, span="", file="ReflectionUtils.cs"];
m9_3544 [label=errors, span="", file="ReflectionUtils.cs"];
m9_3545 [label=errors, span="", file="ReflectionUtils.cs"];
m9_3510 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>", span="", file="ReflectionUtils.cs"];
m9_3512 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor", span="", file="ReflectionUtils.cs"];
m9_3513 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", span="", file="ReflectionUtils.cs"];
m9_3511 [label=json, span="", file="ReflectionUtils.cs"];
m9_3509 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass", span="", file="ReflectionUtils.cs"];
m9_3537 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty", span="", file="ReflectionUtils.cs"];
m9_3547 [label=json, span="", file="ReflectionUtils.cs"];
m9_3548 [label=s, span="", file="ReflectionUtils.cs"];
m9_3514 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", span="", file="ReflectionUtils.cs"];
m9_3508 [label=json, span="", file="ReflectionUtils.cs"];
m9_3518 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListTestClass", span="", file="ReflectionUtils.cs"];
m9_3536 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty", span="", file="ReflectionUtils.cs"];
m9_3539 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException", span="", file="ReflectionUtils.cs"];
m9_3550 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClassFailure<T>", span="", file="ReflectionUtils.cs"];
m9_3517 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB", span="", file="ReflectionUtils.cs"];
m9_3555 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver", span="", file="ReflectionUtils.cs"];
m9_3567 [label="Newtonsoft.Json.Tests.Serialization.AnswerFilterModel", span="", file="ReflectionUtils.cs"];
m9_3566 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateDefaultCtorWithIEnumerableCtorList<T>", span="", file="ReflectionUtils.cs"];
m9_3530 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DecimalTest", span="", file="ReflectionUtils.cs"];
m9_3552 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>", span="", file="ReflectionUtils.cs"];
m9_3569 [label="Newtonsoft.Json.Tests.Serialization.GameObject", span="", file="ReflectionUtils.cs"];
m9_3507 [label=json, span="", file="ReflectionUtils.cs"];
m9_3516 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA", span="", file="ReflectionUtils.cs"];
m9_3564 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>", span="", file="ReflectionUtils.cs"];
m9_3565 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyCollection<T>", span="", file="ReflectionUtils.cs"];
m9_3526 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived", span="", file="ReflectionUtils.cs"];
m9_3568 [label="Newtonsoft.Json.Tests.Serialization.TestObject", span="", file="ReflectionUtils.cs"];
m9_3549 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass<T>", span="", file="ReflectionUtils.cs"];
m9_3528 [label="out Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable", span="", file="ReflectionUtils.cs"];
m9_3529 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable", span="", file="ReflectionUtils.cs"];
m11_121 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)", file="TypeNameHandlingTests.cs"];
m11_86 [label="Entry Unk.Contains", span="", cluster="Unk.Contains", file="TypeNameHandlingTests.cs"];
m11_76 [label="Entry Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", span="296-296", cluster="Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", file="TypeNameHandlingTests.cs"];
m11_77 [label="Assert.IsInstanceOf(t, instance)", span="298-298", cluster="Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", file="TypeNameHandlingTests.cs"];
m11_78 [label="Exit Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", span="296-296", cluster="Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", file="TypeNameHandlingTests.cs"];
m11_27 [label="Entry System.IO.MemoryStream.ToArray()", span="0-0", cluster="System.IO.MemoryStream.ToArray()", file="TypeNameHandlingTests.cs"];
m11_34 [label="Entry System.DateTime.SpecifyKind(System.DateTime, System.DateTimeKind)", span="0-0", cluster="System.DateTime.SpecifyKind(System.DateTime, System.DateTimeKind)", file="TypeNameHandlingTests.cs"];
m11_11 [label="Entry System.Type.GetField(string)", span="0-0", cluster="System.Type.GetField(string)", file="TypeNameHandlingTests.cs"];
m11_12 [label="Entry Newtonsoft.Json.Tests.TestReflectionUtils.GetMethod(System.Type, string)", span="85-85", cluster="Newtonsoft.Json.Tests.TestReflectionUtils.GetMethod(System.Type, string)", file="TypeNameHandlingTests.cs"];
m11_13 [label="return type.GetMethod(name);", span="88-88", cluster="Newtonsoft.Json.Tests.TestReflectionUtils.GetMethod(System.Type, string)", file="TypeNameHandlingTests.cs"];
m11_14 [label="Exit Newtonsoft.Json.Tests.TestReflectionUtils.GetMethod(System.Type, string)", span="85-85", cluster="Newtonsoft.Json.Tests.TestReflectionUtils.GetMethod(System.Type, string)", file="TypeNameHandlingTests.cs"];
m11_69 [label="Entry Newtonsoft.Json.Tests.TestFixtureBase.WriteEscapedJson(string)", span="283-283", cluster="Newtonsoft.Json.Tests.TestFixtureBase.WriteEscapedJson(string)", file="TypeNameHandlingTests.cs"];
m11_70 [label="Console.WriteLine(EscapeJson(json))", span="285-285", cluster="Newtonsoft.Json.Tests.TestFixtureBase.WriteEscapedJson(string)", file="TypeNameHandlingTests.cs"];
m11_71 [label="Exit Newtonsoft.Json.Tests.TestFixtureBase.WriteEscapedJson(string)", span="283-283", cluster="Newtonsoft.Json.Tests.TestFixtureBase.WriteEscapedJson(string)", file="TypeNameHandlingTests.cs"];
m11_16 [label="Entry Newtonsoft.Json.Tests.TestFixtureBase.GetDataContractJsonSerializeResult(object)", span="195-195", cluster="Newtonsoft.Json.Tests.TestFixtureBase.GetDataContractJsonSerializeResult(object)", file="TypeNameHandlingTests.cs"];
m11_17 [label="MemoryStream ms = new MemoryStream()", span="197-197", cluster="Newtonsoft.Json.Tests.TestFixtureBase.GetDataContractJsonSerializeResult(object)", file="TypeNameHandlingTests.cs"];
m11_18 [label="DataContractJsonSerializer s = new DataContractJsonSerializer(o.GetType())", span="198-198", cluster="Newtonsoft.Json.Tests.TestFixtureBase.GetDataContractJsonSerializeResult(object)", file="TypeNameHandlingTests.cs"];
m11_19 [label="s.WriteObject(ms, o)", span="199-199", cluster="Newtonsoft.Json.Tests.TestFixtureBase.GetDataContractJsonSerializeResult(object)", file="TypeNameHandlingTests.cs"];
m11_20 [label="var data = ms.ToArray()", span="201-201", cluster="Newtonsoft.Json.Tests.TestFixtureBase.GetDataContractJsonSerializeResult(object)", file="TypeNameHandlingTests.cs"];
m11_21 [label="return Encoding.UTF8.GetString(data, 0, data.Length);", span="202-202", cluster="Newtonsoft.Json.Tests.TestFixtureBase.GetDataContractJsonSerializeResult(object)", file="TypeNameHandlingTests.cs"];
m11_22 [label="Exit Newtonsoft.Json.Tests.TestFixtureBase.GetDataContractJsonSerializeResult(object)", span="195-195", cluster="Newtonsoft.Json.Tests.TestFixtureBase.GetDataContractJsonSerializeResult(object)", file="TypeNameHandlingTests.cs"];
m11_4 [label="Entry Newtonsoft.Json.Tests.TestReflectionUtils.GetProperty(System.Type, string)", span="67-67", cluster="Newtonsoft.Json.Tests.TestReflectionUtils.GetProperty(System.Type, string)", file="TypeNameHandlingTests.cs"];
m11_5 [label="return type.GetProperty(name);", span="70-70", cluster="Newtonsoft.Json.Tests.TestReflectionUtils.GetProperty(System.Type, string)", file="TypeNameHandlingTests.cs"];
m11_6 [label="Exit Newtonsoft.Json.Tests.TestReflectionUtils.GetProperty(System.Type, string)", span="67-67", cluster="Newtonsoft.Json.Tests.TestReflectionUtils.GetProperty(System.Type, string)", file="TypeNameHandlingTests.cs"];
m11_83 [label="Entry Newtonsoft.Json.Tests.CustomAssert.Contains(System.Collections.IList, object, string)", span="306-306", cluster="Newtonsoft.Json.Tests.CustomAssert.Contains(System.Collections.IList, object, string)", file="TypeNameHandlingTests.cs"];
m11_84 [label="Assert.Contains(value, collection, message)", span="309-309", cluster="Newtonsoft.Json.Tests.CustomAssert.Contains(System.Collections.IList, object, string)", file="TypeNameHandlingTests.cs"];
m11_85 [label="Exit Newtonsoft.Json.Tests.CustomAssert.Contains(System.Collections.IList, object, string)", span="306-306", cluster="Newtonsoft.Json.Tests.CustomAssert.Contains(System.Collections.IList, object, string)", file="TypeNameHandlingTests.cs"];
m11_92 [label="Entry Newtonsoft.Json.Tests.StringAssert.Normalize(string)", span="337-337", cluster="Newtonsoft.Json.Tests.StringAssert.Normalize(string)", file="TypeNameHandlingTests.cs"];
m11_100 [label="s != null", span="339-339", cluster="Newtonsoft.Json.Tests.StringAssert.Normalize(string)", file="TypeNameHandlingTests.cs"];
m11_101 [label="s = Regex.Replace(s, ''\r\n'')", span="341-341", cluster="Newtonsoft.Json.Tests.StringAssert.Normalize(string)", file="TypeNameHandlingTests.cs"];
m11_102 [label="return s;", span="344-344", cluster="Newtonsoft.Json.Tests.StringAssert.Normalize(string)", file="TypeNameHandlingTests.cs"];
m11_103 [label="Exit Newtonsoft.Json.Tests.StringAssert.Normalize(string)", span="337-337", cluster="Newtonsoft.Json.Tests.StringAssert.Normalize(string)", file="TypeNameHandlingTests.cs"];
m11_122 [label="Entry string.Join(string, params string[])", span="0-0", cluster="string.Join(string, params string[])", file="TypeNameHandlingTests.cs"];
m11_49 [label="Entry Newtonsoft.Json.Tests.TestFixtureBase.HexToBytes(string)", span="230-230", cluster="Newtonsoft.Json.Tests.TestFixtureBase.HexToBytes(string)", file="TypeNameHandlingTests.cs"];
m11_50 [label="string fixedHex = hex.Replace(''-'', string.Empty)", span="232-232", cluster="Newtonsoft.Json.Tests.TestFixtureBase.HexToBytes(string)", file="TypeNameHandlingTests.cs"];
m11_51 [label="byte[] bytes = new byte[fixedHex.Length / 2]", span="235-235", cluster="Newtonsoft.Json.Tests.TestFixtureBase.HexToBytes(string)", file="TypeNameHandlingTests.cs"];
m11_54 [label=fixedHex, span="241-241", cluster="Newtonsoft.Json.Tests.TestFixtureBase.HexToBytes(string)", file="TypeNameHandlingTests.cs"];
m11_52 [label="int shift = 4", span="237-237", cluster="Newtonsoft.Json.Tests.TestFixtureBase.HexToBytes(string)", file="TypeNameHandlingTests.cs"];
m11_58 [label="bytes[offset] |= (byte)(b << shift)", span="252-252", cluster="Newtonsoft.Json.Tests.TestFixtureBase.HexToBytes(string)", file="TypeNameHandlingTests.cs"];
m11_62 [label="return bytes;", span="261-261", cluster="Newtonsoft.Json.Tests.TestFixtureBase.HexToBytes(string)", file="TypeNameHandlingTests.cs"];
m11_53 [label="int offset = 0", span="239-239", cluster="Newtonsoft.Json.Tests.TestFixtureBase.HexToBytes(string)", file="TypeNameHandlingTests.cs"];
m11_59 [label="shift ^= 4", span="254-254", cluster="Newtonsoft.Json.Tests.TestFixtureBase.HexToBytes(string)", file="TypeNameHandlingTests.cs"];
m11_61 [label="offset++", span="258-258", cluster="Newtonsoft.Json.Tests.TestFixtureBase.HexToBytes(string)", file="TypeNameHandlingTests.cs"];
m11_55 [label="int b = (c - '0') % 32", span="245-245", cluster="Newtonsoft.Json.Tests.TestFixtureBase.HexToBytes(string)", file="TypeNameHandlingTests.cs"];
m11_56 [label="b > 9", span="247-247", cluster="Newtonsoft.Json.Tests.TestFixtureBase.HexToBytes(string)", file="TypeNameHandlingTests.cs"];
m11_57 [label="b -= 7", span="249-249", cluster="Newtonsoft.Json.Tests.TestFixtureBase.HexToBytes(string)", file="TypeNameHandlingTests.cs"];
m11_60 [label="shift != 0", span="256-256", cluster="Newtonsoft.Json.Tests.TestFixtureBase.HexToBytes(string)", file="TypeNameHandlingTests.cs"];
m11_63 [label="Exit Newtonsoft.Json.Tests.TestFixtureBase.HexToBytes(string)", span="230-230", cluster="Newtonsoft.Json.Tests.TestFixtureBase.HexToBytes(string)", file="TypeNameHandlingTests.cs"];
m11_35 [label="Entry System.DateTime.GetUtcOffset()", span="51-51", cluster="System.DateTime.GetUtcOffset()", file="TypeNameHandlingTests.cs"];
m11_8 [label="Entry Newtonsoft.Json.Tests.TestReflectionUtils.GetField(System.Type, string)", span="76-76", cluster="Newtonsoft.Json.Tests.TestReflectionUtils.GetField(System.Type, string)", file="TypeNameHandlingTests.cs"];
m11_9 [label="return type.GetField(name);", span="79-79", cluster="Newtonsoft.Json.Tests.TestReflectionUtils.GetField(System.Type, string)", file="TypeNameHandlingTests.cs"];
m11_10 [label="Exit Newtonsoft.Json.Tests.TestReflectionUtils.GetField(System.Type, string)", span="76-76", cluster="Newtonsoft.Json.Tests.TestReflectionUtils.GetField(System.Type, string)", file="TypeNameHandlingTests.cs"];
m11_124 [label="Entry System.Exception.GetType()", span="0-0", cluster="System.Exception.GetType()", file="TypeNameHandlingTests.cs"];
m11_125 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="TypeNameHandlingTests.cs"];
m11_15 [label="Entry System.Type.GetMethod(string)", span="0-0", cluster="System.Type.GetMethod(string)", file="TypeNameHandlingTests.cs"];
m11_104 [label="Entry System.Text.RegularExpressions.Regex.Replace(string, string)", span="0-0", cluster="System.Text.RegularExpressions.Regex.Replace(string, string)", file="TypeNameHandlingTests.cs"];
m11_28 [label="Entry System.Text.Encoding.GetString(byte[], int, int)", span="0-0", cluster="System.Text.Encoding.GetString(byte[], int, int)", file="TypeNameHandlingTests.cs"];
m11_3 [label="Entry System.Type.GetConstructors()", span="0-0", cluster="System.Type.GetConstructors()", file="TypeNameHandlingTests.cs"];
m11_73 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="TypeNameHandlingTests.cs"];
m11_94 [label="Entry Newtonsoft.Json.Tests.StringAssert.Equals(string, string)", span="329-329", cluster="Newtonsoft.Json.Tests.StringAssert.Equals(string, string)", file="TypeNameHandlingTests.cs"];
m11_95 [label="s1 = Normalize(s1)", span="331-331", cluster="Newtonsoft.Json.Tests.StringAssert.Equals(string, string)", file="TypeNameHandlingTests.cs"];
m11_96 [label="s2 = Normalize(s2)", span="332-332", cluster="Newtonsoft.Json.Tests.StringAssert.Equals(string, string)", file="TypeNameHandlingTests.cs"];
m11_97 [label="return string.Equals(s1, s2);", span="334-334", cluster="Newtonsoft.Json.Tests.StringAssert.Equals(string, string)", file="TypeNameHandlingTests.cs"];
m11_98 [label="Exit Newtonsoft.Json.Tests.StringAssert.Equals(string, string)", span="329-329", cluster="Newtonsoft.Json.Tests.StringAssert.Equals(string, string)", file="TypeNameHandlingTests.cs"];
m11_119 [label="Entry System.Action.Invoke()", span="0-0", cluster="System.Action.Invoke()", file="TypeNameHandlingTests.cs"];
m11_72 [label="Entry Newtonsoft.Json.Tests.TestFixtureBase.EscapeJson(string)", span="288-288", cluster="Newtonsoft.Json.Tests.TestFixtureBase.EscapeJson(string)", file="TypeNameHandlingTests.cs"];
m11_74 [label="return @''@'''''' + json.Replace(@'''''''', @'''''''''''') + @'''''''';", span="290-290", cluster="Newtonsoft.Json.Tests.TestFixtureBase.EscapeJson(string)", file="TypeNameHandlingTests.cs"];
m11_75 [label="Exit Newtonsoft.Json.Tests.TestFixtureBase.EscapeJson(string)", span="288-288", cluster="Newtonsoft.Json.Tests.TestFixtureBase.EscapeJson(string)", file="TypeNameHandlingTests.cs"];
m11_0 [label="Entry Newtonsoft.Json.Tests.TestReflectionUtils.GetConstructors(System.Type)", span="58-58", cluster="Newtonsoft.Json.Tests.TestReflectionUtils.GetConstructors(System.Type)", file="TypeNameHandlingTests.cs"];
m11_1 [label="return type.GetConstructors();", span="61-61", cluster="Newtonsoft.Json.Tests.TestReflectionUtils.GetConstructors(System.Type)", file="TypeNameHandlingTests.cs"];
m11_2 [label="Exit Newtonsoft.Json.Tests.TestReflectionUtils.GetConstructors(System.Type)", span="58-58", cluster="Newtonsoft.Json.Tests.TestReflectionUtils.GetConstructors(System.Type)", file="TypeNameHandlingTests.cs"];
m11_93 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="TypeNameHandlingTests.cs"];
m11_23 [label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0", cluster="System.IO.MemoryStream.MemoryStream()", file="TypeNameHandlingTests.cs"];
m11_99 [label="Entry string.Equals(string, string)", span="0-0", cluster="string.Equals(string, string)", file="TypeNameHandlingTests.cs"];
m11_26 [label="Entry Unk.WriteObject", span="", cluster="Unk.WriteObject", file="TypeNameHandlingTests.cs"];
m11_41 [label="Entry Newtonsoft.Json.Tests.TestFixtureBase.BytesToHex(byte[], bool)", span="219-219", cluster="Newtonsoft.Json.Tests.TestFixtureBase.BytesToHex(byte[], bool)", file="TypeNameHandlingTests.cs"];
m11_42 [label="string hex = BitConverter.ToString(bytes)", span="221-221", cluster="Newtonsoft.Json.Tests.TestFixtureBase.BytesToHex(byte[], bool)", file="TypeNameHandlingTests.cs"];
m11_43 [label=removeDashes, span="222-222", cluster="Newtonsoft.Json.Tests.TestFixtureBase.BytesToHex(byte[], bool)", file="TypeNameHandlingTests.cs"];
m11_44 [label="hex = hex.Replace(''-'', '''')", span="224-224", cluster="Newtonsoft.Json.Tests.TestFixtureBase.BytesToHex(byte[], bool)", file="TypeNameHandlingTests.cs"];
m11_45 [label="return hex;", span="227-227", cluster="Newtonsoft.Json.Tests.TestFixtureBase.BytesToHex(byte[], bool)", file="TypeNameHandlingTests.cs"];
m11_46 [label="Exit Newtonsoft.Json.Tests.TestFixtureBase.BytesToHex(byte[], bool)", span="219-219", cluster="Newtonsoft.Json.Tests.TestFixtureBase.BytesToHex(byte[], bool)", file="TypeNameHandlingTests.cs"];
m11_37 [label="Entry string.String(char[], int, int)", span="0-0", cluster="string.String(char[], int, int)", file="TypeNameHandlingTests.cs"];
m11_123 [label="Entry System.Exception.Exception(string, System.Exception)", span="0-0", cluster="System.Exception.Exception(string, System.Exception)", file="TypeNameHandlingTests.cs"];
m11_64 [label="Entry Newtonsoft.Json.Tests.TestFixtureBase.TestSetup()", span="268-268", cluster="Newtonsoft.Json.Tests.TestFixtureBase.TestSetup()", file="TypeNameHandlingTests.cs"];
m11_65 [label="Thread.CurrentThread.CurrentCulture = CultureInfo.InvariantCulture", span="276-276", cluster="Newtonsoft.Json.Tests.TestFixtureBase.TestSetup()", file="TypeNameHandlingTests.cs"];
m11_66 [label="Thread.CurrentThread.CurrentUICulture = CultureInfo.InvariantCulture", span="277-277", cluster="Newtonsoft.Json.Tests.TestFixtureBase.TestSetup()", file="TypeNameHandlingTests.cs"];
m11_67 [label="JsonConvert.DefaultSettings = null", span="280-280", cluster="Newtonsoft.Json.Tests.TestFixtureBase.TestSetup()", file="TypeNameHandlingTests.cs"];
m11_68 [label="Exit Newtonsoft.Json.Tests.TestFixtureBase.TestSetup()", span="268-268", cluster="Newtonsoft.Json.Tests.TestFixtureBase.TestSetup()", file="TypeNameHandlingTests.cs"];
m11_48 [label="Entry string.Replace(string, string)", span="0-0", cluster="string.Replace(string, string)", file="TypeNameHandlingTests.cs"];
m11_120 [label="Entry Unk.Fail", span="", cluster="Unk.Fail", file="TypeNameHandlingTests.cs"];
m11_7 [label="Entry System.Type.GetProperty(string)", span="0-0", cluster="System.Type.GetProperty(string)", file="TypeNameHandlingTests.cs"];
m11_24 [label="Entry DataContractJsonSerializer.cstr", span="", cluster="DataContractJsonSerializer.cstr", file="TypeNameHandlingTests.cs"];
m11_29 [label="Entry Newtonsoft.Json.Tests.TestFixtureBase.GetOffset(System.DateTime, Newtonsoft.Json.DateFormatHandling)", span="206-206", cluster="Newtonsoft.Json.Tests.TestFixtureBase.GetOffset(System.DateTime, Newtonsoft.Json.DateFormatHandling)", file="TypeNameHandlingTests.cs"];
m11_30 [label="char[] chars = new char[8]", span="208-208", cluster="Newtonsoft.Json.Tests.TestFixtureBase.GetOffset(System.DateTime, Newtonsoft.Json.DateFormatHandling)", file="TypeNameHandlingTests.cs"];
m11_31 [label="int pos = DateTimeUtils.WriteDateTimeOffset(chars, 0, DateTime.SpecifyKind(d, DateTimeKind.Local).GetUtcOffset(), dateFormatHandling)", span="209-209", cluster="Newtonsoft.Json.Tests.TestFixtureBase.GetOffset(System.DateTime, Newtonsoft.Json.DateFormatHandling)", file="TypeNameHandlingTests.cs"];
m11_32 [label="return new string(chars, 0, pos);", span="211-211", cluster="Newtonsoft.Json.Tests.TestFixtureBase.GetOffset(System.DateTime, Newtonsoft.Json.DateFormatHandling)", file="TypeNameHandlingTests.cs"];
m11_33 [label="Exit Newtonsoft.Json.Tests.TestFixtureBase.GetOffset(System.DateTime, Newtonsoft.Json.DateFormatHandling)", span="206-206", cluster="Newtonsoft.Json.Tests.TestFixtureBase.GetOffset(System.DateTime, Newtonsoft.Json.DateFormatHandling)", file="TypeNameHandlingTests.cs"];
m11_25 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="TypeNameHandlingTests.cs"];
m11_87 [label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="321-321", cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="TypeNameHandlingTests.cs"];
m11_88 [label="expected = Normalize(expected)", span="323-323", cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="TypeNameHandlingTests.cs"];
m11_89 [label="actual = Normalize(actual)", span="324-324", cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="TypeNameHandlingTests.cs"];
m11_90 [label="Assert.AreEqual(expected, actual)", span="326-326", cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="TypeNameHandlingTests.cs"];
m11_91 [label="Exit Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="321-321", cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="TypeNameHandlingTests.cs"];
m11_80 [label="Entry Newtonsoft.Json.Tests.CustomAssert.Contains(System.Collections.IList, object)", span="301-301", cluster="Newtonsoft.Json.Tests.CustomAssert.Contains(System.Collections.IList, object)", file="TypeNameHandlingTests.cs"];
m11_81 [label="Contains(collection, value, null)", span="303-303", cluster="Newtonsoft.Json.Tests.CustomAssert.Contains(System.Collections.IList, object)", file="TypeNameHandlingTests.cs"];
m11_82 [label="Exit Newtonsoft.Json.Tests.CustomAssert.Contains(System.Collections.IList, object)", span="301-301", cluster="Newtonsoft.Json.Tests.CustomAssert.Contains(System.Collections.IList, object)", file="TypeNameHandlingTests.cs"];
m11_38 [label="Entry Newtonsoft.Json.Tests.TestFixtureBase.BytesToHex(byte[])", span="214-214", cluster="Newtonsoft.Json.Tests.TestFixtureBase.BytesToHex(byte[])", file="TypeNameHandlingTests.cs"];
m11_39 [label="return BytesToHex(bytes, false);", span="216-216", cluster="Newtonsoft.Json.Tests.TestFixtureBase.BytesToHex(byte[])", file="TypeNameHandlingTests.cs"];
m11_40 [label="Exit Newtonsoft.Json.Tests.TestFixtureBase.BytesToHex(byte[])", span="214-214", cluster="Newtonsoft.Json.Tests.TestFixtureBase.BytesToHex(byte[])", file="TypeNameHandlingTests.cs"];
m11_36 [label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeOffset(char[], int, System.TimeSpan, Newtonsoft.Json.DateFormatHandling)", span="746-746", cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeOffset(char[], int, System.TimeSpan, Newtonsoft.Json.DateFormatHandling)", file="TypeNameHandlingTests.cs"];
m11_105 [label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="350-350", cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="TypeNameHandlingTests.cs"];
m11_106 [label="action()", span="355-355", cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="TypeNameHandlingTests.cs"];
m11_110 [label="possibleMessages == null || possibleMessages.Length == 0", span="362-362", cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="TypeNameHandlingTests.cs"];
m11_112 [label=possibleMessages, span="366-366", cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="TypeNameHandlingTests.cs"];
m11_115 [label="throw new Exception(''Unexpected exception message.'' + Environment.NewLine + ''Expected one of: '' + string.Join(Environment.NewLine, possibleMessages) + Environment.NewLine + ''Got: '' + ex.Message + Environment.NewLine + Environment.NewLine + ex);", span="374-374", cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="TypeNameHandlingTests.cs"];
m11_107 [label="Assert.Fail(''Exception of type {0} expected. No exception thrown.'', typeof(TException).Name)", span="357-357", cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="TypeNameHandlingTests.cs"];
m11_108 [label="return null;", span="358-358", cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="TypeNameHandlingTests.cs"];
m11_109 [label=TException, span="360-360", cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="TypeNameHandlingTests.cs"];
m11_111 [label="return ex;", span="364-364", cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="TypeNameHandlingTests.cs"];
m11_113 [label="StringAssert.Equals(possibleMessage, ex.Message)", span="368-368", cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="TypeNameHandlingTests.cs"];
m11_114 [label="return ex;", span="370-370", cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="TypeNameHandlingTests.cs"];
m11_116 [label=Exception, span="376-376", cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="TypeNameHandlingTests.cs"];
m11_117 [label="throw new Exception(string.Format(''Exception of type {0} expected; got exception of type {1}.'', typeof(TException).Name, ex.GetType().Name), ex);", span="378-378", cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="TypeNameHandlingTests.cs"];
m11_118 [label="Exit Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="350-350", cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="TypeNameHandlingTests.cs"];
m11_47 [label="Entry System.BitConverter.ToString(byte[])", span="0-0", cluster="System.BitConverter.ToString(byte[])", file="TypeNameHandlingTests.cs"];
m11_79 [label="Entry Unk.IsInstanceOf", span="", cluster="Unk.IsInstanceOf", file="TypeNameHandlingTests.cs"];
m11_126 [label="Newtonsoft.Json.Tests.TestFixtureBase", span="", file="TypeNameHandlingTests.cs"];
m0_29 -> m0_30  [key=0, style=solid, color=red];
m0_30 -> m0_31  [key=0, style=solid, color=red];
m0_31 -> m0_32  [key=0, style=solid, color=red];
m0_31 -> m0_37  [key=2, style=dotted, color=red];
m0_31 -> m0_38  [key=2, style=dotted, color=red];
m0_31 -> m0_33  [key=1, style=dashed, color=red, label=reader];
m0_31 -> m0_34  [key=1, style=dashed, color=red, label=reader];
m0_31 -> m0_35  [key=1, style=dashed, color=red, label=reader];
m0_32 -> m0_33  [key=0, style=solid, color=red];
m0_32 -> m0_36  [key=0, style=solid, color=red];
m0_32 -> m0_39  [key=2, style=dotted, color=red];
m0_33 -> m0_34  [key=0, style=solid, color=red];
m0_33 -> m0_35  [key=0, style=solid, color=red];
m0_34 -> m0_32  [key=0, style=solid, color=red];
m0_34 -> m0_40  [key=2, style=dotted, color=red];
m0_35 -> m0_32  [key=0, style=solid, color=red];
m0_35 -> m0_41  [key=2, style=dotted, color=red];
m0_36 -> m0_29  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid, color=red];
m0_1 -> m0_2  [key=0, style=solid, color=red];
m0_1 -> m0_19  [key=2, style=dotted, color=red];
m0_2 -> m0_3  [key=0, style=solid, color=red];
m0_2 -> m0_20  [key=2, style=dotted, color=red];
m0_3 -> m0_4  [key=0, style=solid, color=red];
m0_3 -> m0_21  [key=2, style=dotted, color=red];
m0_3 -> m0_5  [key=1, style=dashed, color=red, label=writer];
m0_3 -> m0_6  [key=1, style=dashed, color=red, label=writer];
m0_3 -> m0_7  [key=1, style=dashed, color=red, label=writer];
m0_3 -> m0_8  [key=1, style=dashed, color=red, label=writer];
m0_3 -> m0_9  [key=1, style=dashed, color=red, label=writer];
m0_3 -> m0_10  [key=1, style=dashed, color=red, label=writer];
m0_3 -> m0_11  [key=1, style=dashed, color=red, label=writer];
m0_3 -> m0_12  [key=1, style=dashed, color=red, label=writer];
m0_3 -> m0_13  [key=1, style=dashed, color=red, label=writer];
m0_3 -> m0_14  [key=1, style=dashed, color=red, label=writer];
m0_3 -> m0_15  [key=1, style=dashed, color=red, label=writer];
m0_3 -> m0_16  [key=1, style=dashed, color=red, label=writer];
m0_3 -> m0_17  [key=1, style=dashed, color=red, label=writer];
m0_4 -> m0_5  [key=0, style=solid, color=red];
m0_5 -> m0_6  [key=0, style=solid, color=red];
m0_5 -> m0_22  [key=2, style=dotted, color=red];
m0_6 -> m0_7  [key=0, style=solid, color=red];
m0_6 -> m0_23  [key=2, style=dotted, color=red];
m0_7 -> m0_8  [key=0, style=solid, color=red];
m0_7 -> m0_24  [key=2, style=dotted, color=red];
m0_8 -> m0_9  [key=0, style=solid, color=red];
m0_8 -> m0_23  [key=2, style=dotted, color=red];
m0_9 -> m0_10  [key=0, style=solid, color=red];
m0_9 -> m0_24  [key=2, style=dotted, color=red];
m0_10 -> m0_11  [key=0, style=solid, color=red];
m0_10 -> m0_23  [key=2, style=dotted, color=red];
m0_11 -> m0_12  [key=0, style=solid, color=red];
m0_11 -> m0_25  [key=2, style=dotted, color=red];
m0_12 -> m0_13  [key=0, style=solid, color=red];
m0_12 -> m0_24  [key=2, style=dotted, color=red];
m0_13 -> m0_14  [key=0, style=solid, color=red];
m0_13 -> m0_26  [key=2, style=dotted, color=red];
m0_14 -> m0_15  [key=0, style=solid, color=red];
m0_14 -> m0_24  [key=2, style=dotted, color=red];
m0_15 -> m0_16  [key=0, style=solid, color=red];
m0_15 -> m0_24  [key=2, style=dotted, color=red];
m0_16 -> m0_17  [key=0, style=solid, color=red];
m0_16 -> m0_27  [key=2, style=dotted, color=red];
m0_17 -> m0_18  [key=0, style=solid, color=red];
m0_17 -> m0_28  [key=2, style=dotted, color=red];
m0_18 -> m0_0  [key=0, style=bold, color=blue];
m0_42 -> m0_43  [key=0, style=solid, color=red];
m0_43 -> m0_44  [key=0, style=solid, color=red];
m0_43 -> m0_49  [key=2, style=dotted, color=red];
m0_43 -> m0_50  [key=2, style=dotted, color=red];
m0_43 -> m0_51  [key=2, style=dotted, color=red];
m0_43 -> m0_45  [key=1, style=dashed, color=red, label=o];
m0_44 -> m0_45  [key=0, style=solid, color=red];
m0_44 -> m0_52  [key=2, style=dotted, color=red];
m0_45 -> m0_46  [key=0, style=solid, color=red];
m0_45 -> m0_53  [key=2, style=dotted, color=red];
m0_45 -> m0_54  [key=2, style=dotted, color=red];
m0_45 -> m0_47  [key=1, style=dashed, color=red, label=p];
m0_46 -> m0_47  [key=0, style=solid, color=red];
m0_46 -> m0_55  [key=2, style=dotted, color=red];
m0_47 -> m0_48  [key=0, style=solid];
m0_47 -> m0_56  [key=2, style=dotted];
m0_48 -> m0_42  [key=0, style=bold, color=blue];
m1_152 -> m1_153  [key=0, style=solid];
m1_152 -> m1_47  [key=2, style=dotted];
m1_1864 -> m1_1865  [key=0, style=solid];
m1_1865 -> m1_1866  [key=0, style=solid];
m1_1865 -> m1_1867  [key=2, style=dotted];
m1_1866 -> m1_1864  [key=0, style=bold, color=blue];
m1_406 -> m1_407  [key=0, style=solid];
m1_406 -> m1_408  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_406 -> m1_409  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.PersonReference"];
m1_406 -> m1_410  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.PersonReference"];
m1_406 -> m1_411  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.PersonReference"];
m1_407 -> m1_408  [key=0, style=solid];
m1_408 -> m1_409  [key=0, style=solid];
m1_409 -> m1_410  [key=0, style=solid];
m1_410 -> m1_411  [key=0, style=solid];
m1_411 -> m1_412  [key=0, style=solid];
m1_412 -> m1_406  [key=0, style=bold, color=blue];
m1_480 -> m1_481  [key=0, style=solid];
m1_486 -> m1_34  [key=2, style=dotted];
m1_486 -> m1_487  [key=0, style=solid];
m1_487 -> m1_34  [key=2, style=dotted];
m1_487 -> m1_488  [key=0, style=solid];
m1_481 -> m1_2962  [key=3, color=darkorchid, style=bold, label="Local variable string s"];
m1_481 -> m1_482  [key=0, style=solid];
m1_482 -> m1_486  [key=1, style=dashed, color=darkseagreen4, label=v];
m1_482 -> m1_487  [key=1, style=dashed, color=darkseagreen4, label=v];
m1_482 -> m1_483  [key=0, style=solid];
m1_482 -> m1_490  [key=2, style=dotted];
m1_482 -> m1_484  [key=1, style=dashed, color=darkseagreen4, label=v];
m1_485 -> m1_486  [key=0, style=solid];
m1_485 -> m1_493  [key=2, style=dotted];
m1_485 -> m1_488  [key=1, style=dashed, color=darkseagreen4, label=output];
m1_488 -> m1_489  [key=0, style=solid];
m1_488 -> m1_67  [key=2, style=dotted];
m1_483 -> m1_485  [key=1, style=dashed, color=darkseagreen4, label=o];
m1_483 -> m1_484  [key=0, style=solid];
m1_483 -> m1_491  [key=2, style=dotted];
m1_484 -> m1_485  [key=0, style=solid];
m1_484 -> m1_492  [key=2, style=dotted];
m1_489 -> m1_480  [key=0, style=bold, color=blue];
m1_1375 -> m1_1376  [key=0, style=solid];
m1_1375 -> m1_1377  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_1375 -> m1_1378  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_1375 -> m1_1379  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_1376 -> m1_1377  [key=0, style=solid];
m1_1377 -> m1_1378  [key=0, style=solid];
m1_1378 -> m1_1379  [key=0, style=solid];
m1_1379 -> m1_1380  [key=0, style=solid];
m1_1380 -> m1_1375  [key=0, style=bold, color=blue];
m1_521 -> m1_522  [key=0, style=solid];
m1_525 -> m1_34  [key=2, style=dotted];
m1_525 -> m1_526  [key=0, style=solid];
m1_523 -> m1_525  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_523 -> m1_47  [key=2, style=dotted];
m1_523 -> m1_524  [key=0, style=solid];
m1_524 -> m1_525  [key=0, style=solid];
m1_524 -> m1_524  [key=3, color=darkorchid, style=bold, label="Local variable string expectedJson"];
m1_522 -> m1_523  [key=0, style=solid];
m1_522 -> m1_527  [key=2, style=dotted];
m1_522 -> m1_513  [key=2, style=dotted];
m1_526 -> m1_521  [key=0, style=bold, color=blue];
m1_1462 -> m1_1463  [key=0, style=solid];
m1_1464 -> m1_12  [key=2, style=dotted];
m1_1464 -> m1_1465  [key=0, style=solid];
m1_1464 -> m1_1466  [key=1, style=dashed, color=darkseagreen4, label=r];
m1_1464 -> m1_1467  [key=1, style=dashed, color=darkseagreen4, label=r];
m1_1465 -> m1_34  [key=2, style=dotted];
m1_1465 -> m1_1466  [key=0, style=solid];
m1_1466 -> m1_34  [key=2, style=dotted];
m1_1466 -> m1_1467  [key=0, style=solid];
m1_1467 -> m1_34  [key=2, style=dotted];
m1_1467 -> m1_1468  [key=0, style=solid];
m1_1463 -> m1_1464  [key=0, style=solid];
m1_1463 -> m1_1463  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m1_1468 -> m1_1462  [key=0, style=bold, color=blue];
m1_201 -> m1_202  [key=0, style=solid];
m1_964 -> m1_965  [key=0, style=solid];
m1_967 -> m1_34  [key=2, style=dotted];
m1_967 -> m1_968  [key=0, style=solid];
m1_966 -> m1_967  [key=0, style=solid];
m1_966 -> m1_47  [key=2, style=dotted];
m1_965 -> m1_966  [key=0, style=solid];
m1_965 -> m1_831  [key=2, style=dotted];
m1_968 -> m1_964  [key=0, style=bold, color=blue];
m1_2161 -> m1_2162  [key=0, style=solid];
m1_2162 -> m1_8  [key=2, style=dotted];
m1_2162 -> m1_2163  [key=0, style=solid];
m1_2162 -> m1_2164  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_2163 -> m1_2161  [key=0, style=bold, color=blue];
m1_1769 -> m1_1770  [key=0, style=solid];
m1_1771 -> m1_557  [key=2, style=dotted];
m1_1771 -> m1_1771  [key=1, style=dashed, color=darkseagreen4, label=pair];
m1_1771 -> m1_1770  [key=0, style=solid];
m1_1770 -> m1_1771  [key=0, style=solid];
m1_1770 -> m1_1772  [key=0, style=solid];
m1_1772 -> m1_1769  [key=0, style=bold, color=blue];
m1_441 -> m1_442  [key=0, style=solid];
m1_451 -> m1_12  [key=2, style=dotted];
m1_451 -> m1_452  [key=0, style=solid];
m1_451 -> m1_453  [key=1, style=dashed, color=darkseagreen4, label=obj2];
m1_451 -> m1_454  [key=1, style=dashed, color=darkseagreen4, label=obj2];
m1_451 -> m1_455  [key=1, style=dashed, color=darkseagreen4, label=obj2];
m1_451 -> m1_456  [key=1, style=dashed, color=darkseagreen4, label=obj2];
m1_451 -> m1_457  [key=1, style=dashed, color=darkseagreen4, label=obj2];
m1_451 -> m1_458  [key=1, style=dashed, color=darkseagreen4, label=obj2];
m1_451 -> m1_459  [key=1, style=dashed, color=darkseagreen4, label=obj2];
m1_451 -> m1_460  [key=1, style=dashed, color=darkseagreen4, label=obj2];
m1_452 -> m1_34  [key=2, style=dotted];
m1_452 -> m1_453  [key=0, style=solid];
m1_453 -> m1_34  [key=2, style=dotted];
m1_453 -> m1_454  [key=0, style=solid];
m1_454 -> m1_34  [key=2, style=dotted];
m1_454 -> m1_455  [key=0, style=solid];
m1_455 -> m1_34  [key=2, style=dotted];
m1_455 -> m1_456  [key=0, style=solid];
m1_456 -> m1_34  [key=2, style=dotted];
m1_456 -> m1_457  [key=0, style=solid];
m1_457 -> m1_34  [key=2, style=dotted];
m1_457 -> m1_458  [key=0, style=solid];
m1_458 -> m1_34  [key=2, style=dotted];
m1_458 -> m1_459  [key=0, style=solid];
m1_459 -> m1_34  [key=2, style=dotted];
m1_459 -> m1_460  [key=0, style=solid];
m1_460 -> m1_34  [key=2, style=dotted];
m1_460 -> m1_461  [key=0, style=solid];
m1_449 -> m1_451  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_449 -> m1_450  [key=0, style=solid];
m1_449 -> m1_463  [key=2, style=dotted];
m1_450 -> m1_451  [key=0, style=solid];
m1_450 -> m1_67  [key=2, style=dotted];
m1_446 -> m1_452  [key=1, style=dashed, color=darkseagreen4, label=obj];
m1_446 -> m1_453  [key=1, style=dashed, color=darkseagreen4, label=obj];
m1_446 -> m1_454  [key=1, style=dashed, color=darkseagreen4, label=obj];
m1_446 -> m1_455  [key=1, style=dashed, color=darkseagreen4, label=obj];
m1_446 -> m1_456  [key=1, style=dashed, color=darkseagreen4, label=obj];
m1_446 -> m1_449  [key=1, style=dashed, color=darkseagreen4, label=obj];
m1_446 -> m1_447  [key=0, style=solid];
m1_446 -> m1_406  [key=2, style=dotted];
m1_448 -> m1_449  [key=0, style=solid];
m1_448 -> m1_95  [key=2, style=dotted];
m1_442 -> m1_446  [key=1, style=dashed, color=darkseagreen4, label=p1];
m1_442 -> m1_443  [key=0, style=solid];
m1_442 -> m1_462  [key=2, style=dotted];
m1_442 -> m1_444  [key=1, style=dashed, color=darkseagreen4, label=p1];
m1_442 -> m1_445  [key=1, style=dashed, color=darkseagreen4, label=p1];
m1_443 -> m1_446  [key=1, style=dashed, color=darkseagreen4, label=p2];
m1_443 -> m1_444  [key=0, style=solid];
m1_443 -> m1_462  [key=2, style=dotted];
m1_443 -> m1_445  [key=1, style=dashed, color=darkseagreen4, label=p2];
m1_445 -> m1_446  [key=0, style=solid];
m1_447 -> m1_448  [key=0, style=solid];
m1_444 -> m1_445  [key=0, style=solid];
m1_461 -> m1_441  [key=0, style=bold, color=blue];
m1_1056 -> m1_1057  [key=0, style=solid];
m1_1061 -> m1_12  [key=2, style=dotted];
m1_1061 -> m1_1062  [key=0, style=solid];
m1_1061 -> m1_1063  [key=1, style=dashed, color=darkseagreen4, label=m2];
m1_1062 -> m1_34  [key=2, style=dotted];
m1_1062 -> m1_1063  [key=0, style=solid];
m1_1063 -> m1_34  [key=2, style=dotted];
m1_1063 -> m1_1064  [key=0, style=solid];
m1_1060 -> m1_34  [key=2, style=dotted];
m1_1060 -> m1_1061  [key=0, style=solid];
m1_1059 -> m1_1061  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_1059 -> m1_1060  [key=0, style=solid];
m1_1059 -> m1_95  [key=2, style=dotted];
m1_1059 -> m1_463  [key=2, style=dotted];
m1_1057 -> m1_1062  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m1_1057 -> m1_1063  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m1_1057 -> m1_1058  [key=0, style=solid];
m1_1057 -> m1_1036  [key=2, style=dotted];
m1_1058 -> m1_1059  [key=0, style=solid];
m1_1058 -> m1_1037  [key=2, style=dotted];
m1_1064 -> m1_1056  [key=0, style=bold, color=blue];
m1_1504 -> m1_1505  [key=0, style=solid];
m1_1505 -> m1_12  [key=2, style=dotted];
m1_1505 -> m1_1506  [key=0, style=solid];
m1_1505 -> m1_1507  [key=1, style=dashed, color=darkseagreen4, label=l];
m1_1505 -> m1_1508  [key=1, style=dashed, color=darkseagreen4, label=l];
m1_1505 -> m1_1509  [key=1, style=dashed, color=darkseagreen4, label=l];
m1_1506 -> m1_34  [key=2, style=dotted];
m1_1506 -> m1_1507  [key=0, style=solid];
m1_1507 -> m1_34  [key=2, style=dotted];
m1_1507 -> m1_1508  [key=0, style=solid];
m1_1508 -> m1_34  [key=2, style=dotted];
m1_1508 -> m1_1509  [key=0, style=solid];
m1_1509 -> m1_34  [key=2, style=dotted];
m1_1509 -> m1_1510  [key=0, style=solid];
m1_1510 -> m1_1504  [key=0, style=bold, color=blue];
m1_2791 -> m1_2792  [key=0, style=solid];
m1_2794 -> m1_12  [key=2, style=dotted];
m1_2794 -> m1_2795  [key=0, style=solid];
m1_2794 -> m1_2796  [key=1, style=dashed, color=darkseagreen4, label=d2];
m1_2795 -> m1_34  [key=2, style=dotted];
m1_2795 -> m1_2796  [key=0, style=solid];
m1_2796 -> m1_34  [key=2, style=dotted];
m1_2796 -> m1_2797  [key=0, style=solid];
m1_2793 -> m1_2794  [key=0, style=solid];
m1_2793 -> m1_47  [key=2, style=dotted];
m1_2792 -> m1_2795  [key=1, style=dashed, color=darkseagreen4, label=d1];
m1_2792 -> m1_2796  [key=1, style=dashed, color=darkseagreen4, label=d1];
m1_2792 -> m1_2793  [key=0, style=solid];
m1_2792 -> m1_120  [key=2, style=dotted];
m1_2797 -> m1_2791  [key=0, style=bold, color=blue];
m1_1442 -> m1_1443  [key=0, style=solid];
m1_1445 -> m1_34  [key=2, style=dotted];
m1_1445 -> m1_1446  [key=0, style=solid];
m1_1444 -> m1_1445  [key=0, style=solid];
m1_1444 -> m1_47  [key=2, style=dotted];
m1_1443 -> m1_1444  [key=0, style=solid];
m1_1443 -> m1_648  [key=2, style=dotted];
m1_1443 -> m1_1447  [key=2, style=dotted];
m1_1446 -> m1_1442  [key=0, style=bold, color=blue];
m1_2312 -> m1_2313  [key=0, style=solid];
m1_2313 -> m1_12  [key=2, style=dotted];
m1_2313 -> m1_2314  [key=0, style=solid];
m1_2314 -> m1_34  [key=2, style=dotted];
m1_2314 -> m1_2315  [key=0, style=solid];
m1_2314 -> m1_2296  [key=2, style=dotted];
m1_2314 -> m1_683  [key=2, style=dotted];
m1_2314 -> m1_839  [key=2, style=dotted];
m1_2315 -> m1_2312  [key=0, style=bold, color=blue];
m1_1213 -> m1_1214  [key=0, style=solid];
m1_1215 -> m1_12  [key=2, style=dotted];
m1_1215 -> m1_1216  [key=0, style=solid];
m1_1215 -> m1_1217  [key=1, style=dashed, color=darkseagreen4, label=aa];
m1_1215 -> m1_1218  [key=1, style=dashed, color=darkseagreen4, label=aa];
m1_1215 -> m1_1219  [key=1, style=dashed, color=darkseagreen4, label=aa];
m1_1215 -> m1_1220  [key=1, style=dashed, color=darkseagreen4, label=aa];
m1_1215 -> m1_1221  [key=1, style=dashed, color=darkseagreen4, label=aa];
m1_1215 -> m1_1222  [key=1, style=dashed, color=darkseagreen4, label=aa];
m1_1223 -> m1_34  [key=2, style=dotted];
m1_1223 -> m1_1224  [key=0, style=solid];
m1_1216 -> m1_34  [key=2, style=dotted];
m1_1216 -> m1_1217  [key=0, style=solid];
m1_1217 -> m1_34  [key=2, style=dotted];
m1_1217 -> m1_1218  [key=0, style=solid];
m1_1218 -> m1_34  [key=2, style=dotted];
m1_1218 -> m1_1219  [key=0, style=solid];
m1_1219 -> m1_34  [key=2, style=dotted];
m1_1219 -> m1_1220  [key=0, style=solid];
m1_1220 -> m1_34  [key=2, style=dotted];
m1_1220 -> m1_1221  [key=0, style=solid];
m1_1221 -> m1_34  [key=2, style=dotted];
m1_1221 -> m1_1222  [key=0, style=solid];
m1_1214 -> m1_1215  [key=0, style=solid];
m1_1214 -> m1_1223  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_1214 -> m1_1214  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m1_1222 -> m1_1223  [key=0, style=solid];
m1_1222 -> m1_47  [key=2, style=dotted];
m1_1224 -> m1_1213  [key=0, style=bold, color=blue];
m1_1484 -> m1_1485  [key=0, style=solid];
m1_1486 -> m1_8  [key=2, style=dotted];
m1_1486 -> m1_1487  [key=0, style=solid];
m1_1486 -> m1_1488  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_1485 -> m1_1486  [key=0, style=solid];
m1_1485 -> m1_1489  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_1485 -> m1_1485  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m1_1487 -> m1_1484  [key=0, style=bold, color=blue];
m1_176 -> m1_177  [key=0, style=solid];
m1_176 -> m1_40  [key=2, style=dotted];
m1_176 -> m1_178  [key=1, style=dashed, color=darkseagreen4, label=propertySchema];
m1_176 -> m1_179  [key=1, style=dashed, color=darkseagreen4, label=propertySchema];
m1_2481 -> m1_2482  [key=0, style=solid];
m1_2483 -> m1_12  [key=2, style=dotted];
m1_2483 -> m1_2484  [key=0, style=solid];
m1_2483 -> m1_2485  [key=1, style=dashed, color=darkseagreen4, label=p];
m1_2483 -> m1_2486  [key=1, style=dashed, color=darkseagreen4, label=p];
m1_2484 -> m1_34  [key=2, style=dotted];
m1_2484 -> m1_2485  [key=0, style=solid];
m1_2485 -> m1_34  [key=2, style=dotted];
m1_2485 -> m1_2486  [key=0, style=solid];
m1_2486 -> m1_34  [key=2, style=dotted];
m1_2486 -> m1_2487  [key=0, style=solid];
m1_2482 -> m1_2483  [key=0, style=solid];
m1_2482 -> m1_2482  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m1_2487 -> m1_2481  [key=0, style=bold, color=blue];
m1_2175 -> m1_2176  [key=0, style=solid];
m1_2186 -> m1_12  [key=2, style=dotted];
m1_2186 -> m1_2187  [key=0, style=solid];
m1_2186 -> m1_2188  [key=1, style=dashed, color=darkseagreen4, label=result];
m1_2186 -> m1_2189  [key=1, style=dashed, color=darkseagreen4, label=result];
m1_2187 -> m1_34  [key=2, style=dotted];
m1_2187 -> m1_2188  [key=0, style=solid];
m1_2188 -> m1_34  [key=2, style=dotted];
m1_2188 -> m1_2189  [key=0, style=solid];
m1_2189 -> m1_34  [key=2, style=dotted];
m1_2189 -> m1_2190  [key=0, style=solid];
m1_2184 -> m1_2186  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_2184 -> m1_47  [key=2, style=dotted];
m1_2184 -> m1_2185  [key=0, style=solid];
m1_2185 -> m1_2186  [key=0, style=solid];
m1_2185 -> m1_66  [key=2, style=dotted];
m1_2183 -> m1_2184  [key=0, style=solid];
m1_2183 -> m1_557  [key=2, style=dotted];
m1_2180 -> m1_2184  [key=1, style=dashed, color=darkseagreen4, label=child];
m1_2180 -> m1_2183  [key=1, style=dashed, color=darkseagreen4, label=child];
m1_2180 -> m1_2181  [key=0, style=solid];
m1_2180 -> m1_554  [key=2, style=dotted];
m1_2180 -> m1_2182  [key=1, style=dashed, color=darkseagreen4, label=child];
m1_2176 -> m1_2183  [key=1, style=dashed, color=darkseagreen4, label=reference];
m1_2176 -> m1_554  [key=2, style=dotted];
m1_2176 -> m1_2177  [key=0, style=solid];
m1_2176 -> m1_2178  [key=1, style=dashed, color=darkseagreen4, label=reference];
m1_2176 -> m1_2179  [key=1, style=dashed, color=darkseagreen4, label=reference];
m1_2182 -> m1_2183  [key=0, style=solid];
m1_2182 -> m1_557  [key=2, style=dotted];
m1_2179 -> m1_2180  [key=0, style=solid];
m1_2179 -> m1_557  [key=2, style=dotted];
m1_2181 -> m1_557  [key=2, style=dotted];
m1_2181 -> m1_2182  [key=0, style=solid];
m1_2177 -> m1_557  [key=2, style=dotted];
m1_2177 -> m1_2178  [key=0, style=solid];
m1_2178 -> m1_557  [key=2, style=dotted];
m1_2178 -> m1_2179  [key=0, style=solid];
m1_2190 -> m1_2175  [key=0, style=bold, color=blue];
m1_885 -> m1_886  [key=0, style=solid];
m1_887 -> m1_34  [key=2, style=dotted];
m1_887 -> m1_888  [key=0, style=solid];
m1_886 -> m1_887  [key=0, style=solid];
m1_886 -> m1_47  [key=2, style=dotted];
m1_888 -> m1_885  [key=0, style=bold, color=blue];
m1_3629 -> m1_3630  [key=0, style=solid];
m1_3631 -> m1_65  [key=2, style=dotted];
m1_3631 -> m1_3632  [key=0, style=solid];
m1_3632 -> m1_67  [key=2, style=dotted];
m1_3632 -> m1_3633  [key=0, style=solid];
m1_3630 -> m1_3631  [key=0, style=solid];
m1_3630 -> m1_3634  [key=2, style=dotted];
m1_3630 -> m1_3635  [key=2, style=dotted];
m1_3633 -> m1_3629  [key=0, style=bold, color=blue];
m1_3014 -> m1_3015  [key=0, style=solid];
m1_3020 -> m1_47  [key=2, style=dotted];
m1_3020 -> m1_3021  [key=0, style=solid];
m1_3017 -> m1_683  [key=2, style=dotted];
m1_3017 -> m1_3018  [key=0, style=solid];
m1_3015 -> m1_3020  [key=1, style=dashed, color=darkseagreen4, label=product];
m1_3015 -> m1_3017  [key=1, style=dashed, color=darkseagreen4, label=product];
m1_3015 -> m1_3016  [key=0, style=solid];
m1_3015 -> m1_682  [key=2, style=dotted];
m1_3015 -> m1_3018  [key=1, style=dashed, color=darkseagreen4, label=product];
m1_3015 -> m1_3019  [key=1, style=dashed, color=darkseagreen4, label=product];
m1_3015 -> m1_3021  [key=1, style=dashed, color=darkseagreen4, label=product];
m1_3019 -> m1_3020  [key=0, style=solid];
m1_3021 -> m1_463  [key=2, style=dotted];
m1_3021 -> m1_95  [key=2, style=dotted];
m1_3021 -> m1_3022  [key=0, style=solid];
m1_3021 -> m1_3027  [key=2, style=dotted];
m1_3021 -> m1_3028  [key=2, style=dotted];
m1_3022 -> m1_67  [key=2, style=dotted];
m1_3022 -> m1_3023  [key=0, style=solid];
m1_3025 -> m1_67  [key=2, style=dotted];
m1_3025 -> m1_3026  [key=0, style=solid];
m1_3024 -> m1_463  [key=2, style=dotted];
m1_3024 -> m1_95  [key=2, style=dotted];
m1_3024 -> m1_3025  [key=0, style=solid];
m1_3024 -> m1_3027  [key=2, style=dotted];
m1_3024 -> m1_3028  [key=2, style=dotted];
m1_3024 -> m1_3029  [key=2, style=dotted];
m1_3016 -> m1_3017  [key=0, style=solid];
m1_3018 -> m1_3019  [key=0, style=solid];
m1_3023 -> m1_3024  [key=0, style=solid];
m1_3026 -> m1_3014  [key=0, style=bold, color=blue];
m1_1204 -> m1_1205  [key=0, style=solid];
m1_1210 -> m1_34  [key=2, style=dotted];
m1_1210 -> m1_1211  [key=0, style=solid];
m1_1209 -> m1_1210  [key=0, style=solid];
m1_1209 -> m1_47  [key=2, style=dotted];
m1_1205 -> m1_1209  [key=1, style=dashed, color=darkseagreen4, label=aa];
m1_1205 -> m1_1206  [key=0, style=solid];
m1_1205 -> m1_1212  [key=2, style=dotted];
m1_1205 -> m1_1207  [key=1, style=dashed, color=darkseagreen4, label=aa];
m1_1205 -> m1_1208  [key=1, style=dashed, color=darkseagreen4, label=aa];
m1_1208 -> m1_1209  [key=0, style=solid];
m1_1206 -> m1_1207  [key=0, style=solid];
m1_1207 -> m1_1208  [key=0, style=solid];
m1_1211 -> m1_1204  [key=0, style=bold, color=blue];
m1_3636 -> m1_3637  [key=0, style=solid];
m1_3637 -> m1_8  [key=2, style=dotted];
m1_3637 -> m1_3637  [key=3, color=darkorchid, style=bold, label="Local variable string content"];
m1_3637 -> m1_3638  [key=0, style=solid];
m1_3637 -> m1_3639  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_3638 -> m1_3636  [key=0, style=bold, color=blue];
m1_2215 -> m1_2216  [key=0, style=solid];
m1_2221 -> m1_12  [key=2, style=dotted];
m1_2221 -> m1_2222  [key=0, style=solid];
m1_2222 -> m1_34  [key=2, style=dotted];
m1_2222 -> m1_2223  [key=0, style=solid];
m1_2219 -> m1_2221  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_2219 -> m1_2220  [key=0, style=solid];
m1_2219 -> m1_65  [key=2, style=dotted];
m1_2220 -> m1_2221  [key=0, style=solid];
m1_2220 -> m1_67  [key=2, style=dotted];
m1_2216 -> m1_2219  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m1_2216 -> m1_2217  [key=0, style=solid];
m1_2216 -> m1_554  [key=2, style=dotted];
m1_2216 -> m1_2218  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m1_2218 -> m1_2219  [key=0, style=solid];
m1_2218 -> m1_2214  [key=2, style=dotted];
m1_2218 -> m1_557  [key=2, style=dotted];
m1_2217 -> m1_2218  [key=0, style=solid];
m1_2217 -> m1_557  [key=2, style=dotted];
m1_2217 -> m1_2214  [key=2, style=dotted];
m1_2223 -> m1_2215  [key=0, style=bold, color=blue];
m1_1754 -> m1_1755  [key=0, style=solid];
m1_1756 -> m1_12  [key=2, style=dotted];
m1_1756 -> m1_1757  [key=0, style=solid];
m1_1756 -> m1_1758  [key=1, style=dashed, color=darkseagreen4, label=dic];
m1_1756 -> m1_1759  [key=1, style=dashed, color=darkseagreen4, label=dic];
m1_1756 -> m1_1760  [key=1, style=dashed, color=darkseagreen4, label=dic];
m1_1757 -> m1_34  [key=2, style=dotted];
m1_1757 -> m1_1758  [key=0, style=solid];
m1_1758 -> m1_34  [key=2, style=dotted];
m1_1758 -> m1_1759  [key=0, style=solid];
m1_1759 -> m1_34  [key=2, style=dotted];
m1_1759 -> m1_1760  [key=0, style=solid];
m1_1760 -> m1_34  [key=2, style=dotted];
m1_1760 -> m1_1761  [key=0, style=solid];
m1_1755 -> m1_1756  [key=0, style=solid];
m1_1755 -> m1_1755  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m1_1761 -> m1_1754  [key=0, style=bold, color=blue];
m1_2722 -> m1_2723  [key=0, style=solid];
m1_2726 -> m1_12  [key=2, style=dotted];
m1_2726 -> m1_2727  [key=0, style=solid];
m1_2727 -> m1_34  [key=2, style=dotted];
m1_2727 -> m1_2728  [key=0, style=solid];
m1_2725 -> m1_2726  [key=0, style=solid];
m1_2725 -> m1_47  [key=2, style=dotted];
m1_2724 -> m1_2727  [key=1, style=dashed, color=darkseagreen4, label=uri];
m1_2724 -> m1_2725  [key=0, style=solid];
m1_2724 -> m1_1440  [key=2, style=dotted];
m1_2723 -> m1_2724  [key=0, style=solid];
m1_2723 -> m1_2723  [key=3, color=darkorchid, style=bold, label="Local variable string input"];
m1_2728 -> m1_2722  [key=0, style=bold, color=blue];
m1_121 -> m1_122  [key=0, style=solid];
m1_121 -> m1_158  [key=2, style=dotted];
m1_2634 -> m1_2635  [key=0, style=solid];
m1_2635 -> m1_2636  [key=0, style=solid];
m1_2636 -> m1_2634  [key=0, style=bold, color=blue];
m1_1872 -> m1_1873  [key=0, style=solid];
m1_1873 -> m1_1874  [key=0, style=solid];
m1_1873 -> m1_1875  [key=2, style=dotted];
m1_1874 -> m1_1872  [key=0, style=bold, color=blue];
m1_2805 -> m1_2806  [key=0, style=solid];
m1_2808 -> m1_12  [key=2, style=dotted];
m1_2808 -> m1_2809  [key=0, style=solid];
m1_2808 -> m1_2810  [key=1, style=dashed, color=darkseagreen4, label=d2];
m1_2809 -> m1_34  [key=2, style=dotted];
m1_2809 -> m1_2810  [key=0, style=solid];
m1_2810 -> m1_34  [key=2, style=dotted];
m1_2810 -> m1_2811  [key=0, style=solid];
m1_2807 -> m1_2808  [key=0, style=solid];
m1_2807 -> m1_47  [key=2, style=dotted];
m1_2806 -> m1_2809  [key=1, style=dashed, color=darkseagreen4, label=d1];
m1_2806 -> m1_2810  [key=1, style=dashed, color=darkseagreen4, label=d1];
m1_2806 -> m1_2807  [key=0, style=solid];
m1_2806 -> m1_120  [key=2, style=dotted];
m1_2811 -> m1_2805  [key=0, style=bold, color=blue];
m1_3739 -> m1_3740  [key=0, style=solid];
m1_3743 -> m1_12  [key=2, style=dotted];
m1_3743 -> m1_3744  [key=0, style=solid];
m1_3741 -> m1_3743  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_3741 -> m1_3742  [key=0, style=solid];
m1_3741 -> m1_65  [key=2, style=dotted];
m1_3742 -> m1_3743  [key=0, style=solid];
m1_3742 -> m1_67  [key=2, style=dotted];
m1_3740 -> m1_3741  [key=0, style=solid];
m1_3740 -> m1_3745  [key=2, style=dotted];
m1_3744 -> m1_3739  [key=0, style=bold, color=blue];
m1_3390 -> m1_3391  [key=0, style=solid];
m1_3394 -> m1_12  [key=2, style=dotted];
m1_3394 -> m1_3395  [key=0, style=solid];
m1_3394 -> m1_3396  [key=1, style=dashed, color=darkseagreen4, label=tuple2];
m1_3393 -> m1_34  [key=2, style=dotted];
m1_3393 -> m1_3394  [key=0, style=solid];
m1_3395 -> m1_34  [key=2, style=dotted];
m1_3395 -> m1_3396  [key=0, style=solid];
m1_3396 -> m1_34  [key=2, style=dotted];
m1_3396 -> m1_3397  [key=0, style=solid];
m1_3392 -> m1_3394  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_3392 -> m1_3393  [key=0, style=solid];
m1_3392 -> m1_47  [key=2, style=dotted];
m1_3391 -> m1_3392  [key=0, style=solid];
m1_3391 -> m1_3398  [key=2, style=dotted];
m1_3397 -> m1_3390  [key=0, style=bold, color=blue];
m1_1727 -> m1_1728  [key=0, style=solid];
m1_1728 -> m1_557  [key=2, style=dotted];
m1_1728 -> m1_1729  [key=0, style=solid];
m1_1729 -> m1_1727  [key=0, style=bold, color=blue];
m1_2450 -> m1_2451  [key=0, style=solid];
m1_2451 -> m1_12  [key=2, style=dotted];
m1_2451 -> m1_2452  [key=0, style=solid];
m1_2452 -> m1_34  [key=2, style=dotted];
m1_2452 -> m1_2453  [key=0, style=solid];
m1_2453 -> m1_2450  [key=0, style=bold, color=blue];
m1_3349 -> m1_3350  [key=0, style=solid];
m1_3350 -> m1_3351  [key=0, style=solid];
m1_3351 -> m1_3349  [key=0, style=bold, color=blue];
m1_1798 -> m1_1800  [key=0, style=solid];
m1_1800 -> m1_1801  [key=0, style=solid];
m1_1801 -> m1_1798  [key=0, style=bold, color=blue];
m1_81 -> m1_82  [key=0, style=solid];
m1_82 -> m1_12  [key=2, style=dotted];
m1_82 -> m1_83  [key=0, style=solid];
m1_82 -> m1_84  [key=1, style=dashed, color=darkseagreen4, label=otc];
m1_82 -> m1_85  [key=1, style=dashed, color=darkseagreen4, label=otc];
m1_82 -> m1_86  [key=1, style=dashed, color=darkseagreen4, label=otc];
m1_82 -> m1_87  [key=1, style=dashed, color=darkseagreen4, label=otc];
m1_82 -> m1_142  [key=0, style=solid];
m1_84 -> m1_34  [key=2, style=dotted];
m1_84 -> m1_85  [key=0, style=solid];
m1_84 -> m1_142  [key=0, style=solid];
m1_84 -> m1_146  [key=2, style=dotted];
m1_84 -> m1_147  [key=2, style=dotted];
m1_85 -> m1_34  [key=2, style=dotted];
m1_85 -> m1_86  [key=0, style=solid];
m1_85 -> m1_148  [key=2, style=dotted];
m1_85 -> m1_87  [key=1, style=dashed, color=darkseagreen4, label=contract];
m1_85 -> m1_100  [key=1, style=dashed, color=darkseagreen4, label=contract];
m1_85 -> m1_108  [key=1, style=dashed, color=darkseagreen4, label=contract];
m1_85 -> m1_117  [key=1, style=dashed, color=darkseagreen4, label=contract];
m1_85 -> m1_127  [key=1, style=dashed, color=darkseagreen4, label=contract];
m1_85 -> m1_130  [key=1, style=dashed, color=darkseagreen4, label=contract];
m1_85 -> m1_131  [key=1, style=dashed, color=darkseagreen4, label=contract];
m1_85 -> m1_134  [key=1, style=dashed, color=darkseagreen4, label=contract];
m1_85 -> m1_135  [key=1, style=dashed, color=darkseagreen4, label=contract];
m1_85 -> m1_136  [key=1, style=dashed, color=darkseagreen4, label=contract];
m1_85 -> m1_138  [key=1, style=dashed, color=darkseagreen4, label=contract];
m1_85 -> m1_140  [key=1, style=dashed, color=darkseagreen4, label=contract];
m1_86 -> m1_34  [key=2, style=dotted];
m1_86 -> m1_87  [key=0, style=solid];
m1_83 -> m1_84  [key=0, style=solid];
m1_83 -> m1_89  [key=2, style=dotted];
m1_83 -> m1_85  [key=0, style=solid];
m1_83 -> m1_145  [key=2, style=dotted];
m1_83 -> m1_165  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_87 -> m1_88  [key=0, style=solid];
m1_87 -> m1_89  [key=2, style=dotted];
m1_87 -> m1_91  [key=0, style=solid];
m1_87 -> m1_98  [key=1, style=dashed, color=darkseagreen4, label=converter];
m1_88 -> m1_81  [key=0, style=bold, color=blue];
m1_88 -> m1_89  [key=0, style=solid];
m1_88 -> m1_149  [key=2, style=dotted];
m1_88 -> m1_90  [key=1, style=dashed, color=darkseagreen4, label=converterSchema];
m1_2524 -> m1_2525  [key=0, style=solid];
m1_2526 -> m1_12  [key=2, style=dotted];
m1_2526 -> m1_2527  [key=0, style=solid];
m1_2525 -> m1_2526  [key=0, style=solid];
m1_2525 -> m1_47  [key=2, style=dotted];
m1_2525 -> m1_2528  [key=2, style=dotted];
m1_2527 -> m1_2524  [key=0, style=bold, color=blue];
m1_2285 -> m1_2286  [key=0, style=solid];
m1_2287 -> m1_34  [key=2, style=dotted];
m1_2287 -> m1_2288  [key=0, style=solid];
m1_2292 -> m1_34  [key=2, style=dotted];
m1_2292 -> m1_2293  [key=0, style=solid];
m1_2292 -> m1_839  [key=2, style=dotted];
m1_2293 -> m1_34  [key=2, style=dotted];
m1_2293 -> m1_2294  [key=0, style=solid];
m1_2293 -> m1_683  [key=2, style=dotted];
m1_2286 -> m1_2287  [key=0, style=solid];
m1_2286 -> m1_47  [key=2, style=dotted];
m1_2286 -> m1_683  [key=2, style=dotted];
m1_2286 -> m1_2295  [key=2, style=dotted];
m1_2286 -> m1_2296  [key=2, style=dotted];
m1_2286 -> m1_839  [key=2, style=dotted];
m1_2286 -> m1_2288  [key=1, style=dashed, color=darkseagreen4, label=serializeObject];
m1_2288 -> m1_2289  [key=0, style=solid];
m1_2288 -> m1_117  [key=2, style=dotted];
m1_2288 -> m1_118  [key=2, style=dotted];
m1_2288 -> m1_2291  [key=1, style=dashed, color=darkseagreen4, label=reader];
m1_2291 -> m1_2292  [key=0, style=solid];
m1_2291 -> m1_2293  [key=1, style=dashed, color=darkseagreen4, label=deserializeObject];
m1_2291 -> m1_2297  [key=2, style=dotted];
m1_2289 -> m1_2290  [key=0, style=solid];
m1_2290 -> m1_2291  [key=0, style=solid];
m1_2290 -> m1_119  [key=2, style=dotted];
m1_2294 -> m1_2285  [key=0, style=bold, color=blue];
m1_2352 -> m1_2353  [key=0, style=solid];
m1_2358 -> m1_34  [key=2, style=dotted];
m1_2358 -> m1_2359  [key=0, style=solid];
m1_2357 -> m1_2358  [key=0, style=solid];
m1_2357 -> m1_2297  [key=2, style=dotted];
m1_2354 -> m1_2357  [key=1, style=dashed, color=darkseagreen4, label=reader];
m1_2354 -> m1_117  [key=2, style=dotted];
m1_2354 -> m1_118  [key=2, style=dotted];
m1_2354 -> m1_2355  [key=0, style=solid];
m1_2356 -> m1_2357  [key=0, style=solid];
m1_2356 -> m1_119  [key=2, style=dotted];
m1_2353 -> m1_2354  [key=0, style=solid];
m1_2353 -> m1_2353  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m1_2355 -> m1_2356  [key=0, style=solid];
m1_2359 -> m1_2352  [key=0, style=bold, color=blue];
m1_586 -> m1_587  [key=0, style=solid];
m1_593 -> m1_67  [key=2, style=dotted];
m1_593 -> m1_594  [key=0, style=solid];
m1_592 -> m1_596  [key=2, style=dotted];
m1_592 -> m1_593  [key=0, style=solid];
m1_587 -> m1_592  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m1_587 -> m1_588  [key=0, style=solid];
m1_587 -> m1_595  [key=2, style=dotted];
m1_587 -> m1_589  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m1_587 -> m1_590  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m1_587 -> m1_591  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m1_591 -> m1_592  [key=0, style=solid];
m1_588 -> m1_589  [key=0, style=solid];
m1_589 -> m1_590  [key=0, style=solid];
m1_590 -> m1_591  [key=0, style=solid];
m1_594 -> m1_586  [key=0, style=bold, color=blue];
m1_3424 -> m1_3425  [key=0, style=solid];
m1_3428 -> m1_8  [key=2, style=dotted];
m1_3428 -> m1_3429  [key=0, style=solid];
m1_3428 -> m1_3430  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_3426 -> m1_12  [key=2, style=dotted];
m1_3426 -> m1_3427  [key=0, style=solid];
m1_3427 -> m1_34  [key=2, style=dotted];
m1_3427 -> m1_3428  [key=0, style=solid];
m1_3427 -> m1_2092  [key=2, style=dotted];
m1_3425 -> m1_3428  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_3425 -> m1_3426  [key=0, style=solid];
m1_3425 -> m1_3431  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_3425 -> m1_3425  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m1_3429 -> m1_3424  [key=0, style=bold, color=blue];
m1_336 -> m1_337  [key=0, style=solid];
m1_340 -> m1_34  [key=2, style=dotted];
m1_340 -> m1_341  [key=0, style=solid];
m1_342 -> m1_34  [key=2, style=dotted];
m1_342 -> m1_343  [key=0, style=solid];
m1_344 -> m1_34  [key=2, style=dotted];
m1_344 -> m1_345  [key=0, style=solid];
m1_346 -> m1_34  [key=2, style=dotted];
m1_346 -> m1_347  [key=0, style=solid];
m1_346 -> m1_270  [key=2, style=dotted];
m1_349 -> m1_34  [key=2, style=dotted];
m1_349 -> m1_350  [key=0, style=solid];
m1_351 -> m1_34  [key=2, style=dotted];
m1_351 -> m1_352  [key=0, style=solid];
m1_353 -> m1_34  [key=2, style=dotted];
m1_353 -> m1_354  [key=0, style=solid];
m1_353 -> m1_274  [key=2, style=dotted];
m1_355 -> m1_34  [key=2, style=dotted];
m1_355 -> m1_356  [key=0, style=solid];
m1_357 -> m1_34  [key=2, style=dotted];
m1_357 -> m1_358  [key=0, style=solid];
m1_359 -> m1_34  [key=2, style=dotted];
m1_359 -> m1_360  [key=0, style=solid];
m1_361 -> m1_34  [key=2, style=dotted];
m1_361 -> m1_362  [key=0, style=solid];
m1_363 -> m1_34  [key=2, style=dotted];
m1_363 -> m1_364  [key=0, style=solid];
m1_365 -> m1_34  [key=2, style=dotted];
m1_365 -> m1_366  [key=0, style=solid];
m1_367 -> m1_34  [key=2, style=dotted];
m1_367 -> m1_368  [key=0, style=solid];
m1_369 -> m1_34  [key=2, style=dotted];
m1_369 -> m1_370  [key=0, style=solid];
m1_371 -> m1_34  [key=2, style=dotted];
m1_371 -> m1_372  [key=0, style=solid];
m1_373 -> m1_34  [key=2, style=dotted];
m1_373 -> m1_374  [key=0, style=solid];
m1_375 -> m1_34  [key=2, style=dotted];
m1_375 -> m1_376  [key=0, style=solid];
m1_377 -> m1_34  [key=2, style=dotted];
m1_377 -> m1_378  [key=0, style=solid];
m1_379 -> m1_34  [key=2, style=dotted];
m1_379 -> m1_380  [key=0, style=solid];
m1_381 -> m1_34  [key=2, style=dotted];
m1_381 -> m1_382  [key=0, style=solid];
m1_384 -> m1_34  [key=2, style=dotted];
m1_384 -> m1_385  [key=0, style=solid];
m1_386 -> m1_34  [key=2, style=dotted];
m1_386 -> m1_387  [key=0, style=solid];
m1_389 -> m1_34  [key=2, style=dotted];
m1_389 -> m1_390  [key=0, style=solid];
m1_391 -> m1_34  [key=2, style=dotted];
m1_391 -> m1_392  [key=0, style=solid];
m1_393 -> m1_34  [key=2, style=dotted];
m1_393 -> m1_394  [key=0, style=solid];
m1_350 -> m1_35  [key=2, style=dotted];
m1_350 -> m1_351  [key=0, style=solid];
m1_350 -> m1_272  [key=2, style=dotted];
m1_337 -> m1_340  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m1_337 -> m1_342  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m1_337 -> m1_344  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m1_337 -> m1_346  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m1_337 -> m1_349  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m1_337 -> m1_351  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m1_337 -> m1_353  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m1_337 -> m1_355  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m1_337 -> m1_357  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m1_337 -> m1_359  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m1_337 -> m1_361  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m1_337 -> m1_363  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m1_337 -> m1_365  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m1_337 -> m1_367  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m1_337 -> m1_369  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m1_337 -> m1_371  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m1_337 -> m1_373  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m1_337 -> m1_375  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m1_337 -> m1_377  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m1_337 -> m1_379  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m1_337 -> m1_381  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m1_337 -> m1_384  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m1_337 -> m1_386  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m1_337 -> m1_389  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m1_337 -> m1_391  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m1_337 -> m1_393  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m1_337 -> m1_350  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m1_337 -> m1_338  [key=0, style=solid];
m1_337 -> m1_395  [key=2, style=dotted];
m1_337 -> m1_396  [key=2, style=dotted];
m1_337 -> m1_119  [key=2, style=dotted];
m1_337 -> m1_339  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m1_337 -> m1_341  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m1_337 -> m1_343  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m1_337 -> m1_345  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m1_337 -> m1_348  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m1_337 -> m1_352  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m1_337 -> m1_354  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m1_337 -> m1_356  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m1_337 -> m1_358  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m1_337 -> m1_360  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m1_337 -> m1_362  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m1_337 -> m1_364  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m1_337 -> m1_366  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m1_337 -> m1_368  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m1_337 -> m1_370  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m1_337 -> m1_372  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m1_337 -> m1_374  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m1_337 -> m1_376  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m1_337 -> m1_378  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m1_337 -> m1_380  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m1_337 -> m1_383  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m1_337 -> m1_385  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m1_337 -> m1_388  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m1_337 -> m1_390  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m1_337 -> m1_392  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m1_338 -> m1_340  [key=1, style=dashed, color=darkseagreen4, label=customBinder];
m1_338 -> m1_339  [key=0, style=solid];
m1_338 -> m1_269  [key=2, style=dotted];
m1_339 -> m1_340  [key=0, style=solid];
m1_341 -> m1_342  [key=0, style=solid];
m1_343 -> m1_344  [key=0, style=solid];
m1_345 -> m1_346  [key=0, style=solid];
m1_345 -> m1_270  [key=2, style=dotted];
m1_347 -> m1_349  [key=1, style=dashed, color=darkseagreen4, label=resolver];
m1_347 -> m1_348  [key=0, style=solid];
m1_347 -> m1_271  [key=2, style=dotted];
m1_348 -> m1_349  [key=0, style=solid];
m1_352 -> m1_353  [key=0, style=solid];
m1_352 -> m1_273  [key=2, style=dotted];
m1_354 -> m1_355  [key=0, style=solid];
m1_356 -> m1_357  [key=0, style=solid];
m1_358 -> m1_359  [key=0, style=solid];
m1_360 -> m1_361  [key=0, style=solid];
m1_362 -> m1_363  [key=0, style=solid];
m1_364 -> m1_365  [key=0, style=solid];
m1_366 -> m1_367  [key=0, style=solid];
m1_368 -> m1_369  [key=0, style=solid];
m1_370 -> m1_371  [key=0, style=solid];
m1_372 -> m1_373  [key=0, style=solid];
m1_374 -> m1_375  [key=0, style=solid];
m1_376 -> m1_377  [key=0, style=solid];
m1_378 -> m1_379  [key=0, style=solid];
m1_380 -> m1_381  [key=0, style=solid];
m1_382 -> m1_384  [key=1, style=dashed, color=darkseagreen4, label=referenceResolver];
m1_382 -> m1_383  [key=0, style=solid];
m1_382 -> m1_275  [key=2, style=dotted];
m1_383 -> m1_384  [key=0, style=solid];
m1_385 -> m1_386  [key=0, style=solid];
m1_387 -> m1_389  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m1_387 -> m1_388  [key=0, style=solid];
m1_387 -> m1_276  [key=2, style=dotted];
m1_388 -> m1_389  [key=0, style=solid];
m1_390 -> m1_391  [key=0, style=solid];
m1_392 -> m1_393  [key=0, style=solid];
m1_394 -> m1_336  [key=0, style=bold, color=blue];
m1_2830 -> m1_2831  [key=0, style=solid];
m1_2833 -> m1_2834  [key=0, style=solid];
m1_2833 -> m1_67  [key=2, style=dotted];
m1_2832 -> m1_65  [key=2, style=dotted];
m1_2832 -> m1_2833  [key=0, style=solid];
m1_2831 -> m1_2832  [key=0, style=solid];
m1_2831 -> m1_2835  [key=2, style=dotted];
m1_2831 -> m1_2836  [key=2, style=dotted];
m1_2834 -> m1_2830  [key=0, style=bold, color=blue];
m1_7 -> m1_8  [key=0, style=solid];
m1_7 -> m1_9  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaGenerator.TypeSchema"];
m1_7 -> m1_10  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaGenerator.TypeSchema"];
m1_7 -> m1_0  [key=0, style=bold, color=blue];
m1_8 -> m1_9  [key=0, style=solid];
m1_9 -> m1_10  [key=0, style=solid, color=green];
m1_9 -> m1_12  [key=2, style=dotted];
m1_10 -> m1_11  [key=0, style=solid, color=green];
m1_10 -> m1_12  [key=2, style=dotted, color=green];
m1_11 -> m1_7  [key=0, style=bold, color=blue];
m1_11 -> m1_9  [key=0, style=bold, color=blue];
m1_2498 -> m1_2499  [key=0, style=solid];
m1_2501 -> m1_34  [key=2, style=dotted];
m1_2501 -> m1_2502  [key=0, style=solid];
m1_2500 -> m1_2501  [key=0, style=solid];
m1_2500 -> m1_65  [key=2, style=dotted];
m1_2499 -> m1_2500  [key=0, style=solid];
m1_2499 -> m1_2503  [key=2, style=dotted];
m1_2502 -> m1_2498  [key=0, style=bold, color=blue];
m1_1825 -> m1_1828  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m1_1825 -> m1_1826  [key=0, style=solid];
m1_1829 -> m1_557  [key=2, style=dotted];
m1_1829 -> m1_1829  [key=1, style=dashed, color=darkseagreen4, label=entry];
m1_1829 -> m1_1828  [key=0, style=solid];
m1_1828 -> m1_1829  [key=0, style=solid];
m1_1828 -> m1_1830  [key=0, style=solid];
m1_1826 -> m1_1828  [key=0, style=solid];
m1_1826 -> m1_1827  [key=0, style=solid];
m1_1827 -> m1_1830  [key=0, style=solid];
m1_1827 -> m1_1831  [key=2, style=dotted];
m1_1830 -> m1_1825  [key=0, style=bold, color=blue];
m1_63 -> m1_64  [key=0, style=solid];
m1_63 -> m1_65  [key=0, style=solid];
m1_28 -> m1_35  [key=0, style=solid];
m1_28 -> m1_36  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaResolver"];
m1_28 -> m1_37  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaResolver"];
m1_28 -> m1_38  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_28 -> m1_29  [key=0, style=solid, color=green];
m1_35 -> m1_36  [key=0, style=solid];
m1_35 -> m1_6  [key=2, style=dotted];
m1_36 -> m1_37  [key=0, style=solid];
m1_36 -> m1_6  [key=2, style=dotted];
m1_37 -> m1_38  [key=0, style=solid, color=green];
m1_38 -> m1_39  [key=0, style=solid, color=green];
m1_38 -> m1_40  [key=2, style=dotted];
m1_38 -> m1_45  [key=2, style=dotted, color=green];
m1_39 -> m1_28  [key=0, style=bold, color=blue];
m1_39 -> m1_40  [key=0, style=solid, color=green];
m1_39 -> m1_46  [key=2, style=dotted, color=green];
m1_3437 -> m1_3438  [key=0, style=solid];
m1_3440 -> m1_34  [key=2, style=dotted];
m1_3440 -> m1_3441  [key=0, style=solid];
m1_3444 -> m1_34  [key=2, style=dotted];
m1_3444 -> m1_3445  [key=0, style=solid];
m1_3439 -> m1_3440  [key=0, style=solid];
m1_3439 -> m1_47  [key=2, style=dotted];
m1_3441 -> m1_3442  [key=0, style=solid];
m1_3441 -> m1_1600  [key=2, style=dotted];
m1_3441 -> m1_3443  [key=1, style=dashed, color=darkseagreen4, label=r];
m1_3443 -> m1_3444  [key=0, style=solid];
m1_3443 -> m1_95  [key=2, style=dotted];
m1_3443 -> m1_463  [key=2, style=dotted];
m1_3438 -> m1_3439  [key=0, style=solid];
m1_3438 -> m1_3443  [key=1, style=dashed, color=darkseagreen4, label=p];
m1_3438 -> m1_3433  [key=2, style=dotted];
m1_3442 -> m1_3443  [key=0, style=solid];
m1_3445 -> m1_3437  [key=0, style=bold, color=blue];
m1_1173 -> m1_1174  [key=0, style=solid];
m1_1175 -> m1_12  [key=2, style=dotted];
m1_1175 -> m1_1176  [key=0, style=solid];
m1_1175 -> m1_1177  [key=1, style=dashed, color=darkseagreen4, label=c];
m1_1175 -> m1_1178  [key=1, style=dashed, color=darkseagreen4, label=c];
m1_1176 -> m1_34  [key=2, style=dotted];
m1_1176 -> m1_1177  [key=0, style=solid];
m1_1177 -> m1_34  [key=2, style=dotted];
m1_1177 -> m1_1178  [key=0, style=solid];
m1_1178 -> m1_34  [key=2, style=dotted];
m1_1178 -> m1_1179  [key=0, style=solid];
m1_1174 -> m1_1175  [key=0, style=solid];
m1_1174 -> m1_1174  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m1_1179 -> m1_1173  [key=0, style=bold, color=blue];
m1_3139 -> m1_3140  [key=0, style=solid];
m1_3143 -> m1_12  [key=2, style=dotted];
m1_3143 -> m1_3144  [key=0, style=solid];
m1_3143 -> m1_3145  [key=1, style=dashed, color=darkseagreen4, label=dic2];
m1_3143 -> m1_3146  [key=1, style=dashed, color=darkseagreen4, label=dic2];
m1_3144 -> m1_34  [key=2, style=dotted];
m1_3144 -> m1_3145  [key=0, style=solid];
m1_3145 -> m1_34  [key=2, style=dotted];
m1_3145 -> m1_3146  [key=0, style=solid];
m1_3145 -> m1_123  [key=2, style=dotted];
m1_3146 -> m1_34  [key=2, style=dotted];
m1_3146 -> m1_3147  [key=0, style=solid];
m1_3146 -> m1_123  [key=2, style=dotted];
m1_3141 -> m1_3143  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_3141 -> m1_3142  [key=0, style=solid];
m1_3141 -> m1_65  [key=2, style=dotted];
m1_3142 -> m1_3143  [key=0, style=solid];
m1_3142 -> m1_67  [key=2, style=dotted];
m1_3140 -> m1_3141  [key=0, style=solid];
m1_3140 -> m1_123  [key=2, style=dotted];
m1_3140 -> m1_554  [key=2, style=dotted];
m1_3147 -> m1_3139  [key=0, style=bold, color=blue];
m1_3291 -> m1_3292  [key=0, style=solid];
m1_3293 -> m1_67  [key=2, style=dotted];
m1_3293 -> m1_3294  [key=0, style=solid];
m1_3292 -> m1_95  [key=2, style=dotted];
m1_3292 -> m1_962  [key=2, style=dotted];
m1_3292 -> m1_271  [key=2, style=dotted];
m1_3292 -> m1_3293  [key=0, style=solid];
m1_3292 -> m1_3295  [key=2, style=dotted];
m1_3294 -> m1_3291  [key=0, style=bold, color=blue];
m1_1539 -> m1_1540  [key=0, style=solid];
m1_1541 -> m1_8  [key=2, style=dotted];
m1_1541 -> m1_1542  [key=0, style=solid];
m1_1541 -> m1_1543  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_1540 -> m1_1541  [key=0, style=solid];
m1_1540 -> m1_1544  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_1540 -> m1_1512  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m1_1542 -> m1_1539  [key=0, style=bold, color=blue];
m1_1889 -> m1_1890  [key=0, style=solid];
m1_1889 -> m1_1891  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_1889 -> m1_1892  [key=1, style=dashed, color=darkseagreen4, label="System.DateTimeOffset"];
m1_1889 -> m1_1893  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.Person"];
m1_1894 -> m1_1036  [key=2, style=dotted];
m1_1894 -> m1_1895  [key=0, style=solid];
m1_1890 -> m1_1891  [key=0, style=solid];
m1_1891 -> m1_1892  [key=0, style=solid];
m1_1892 -> m1_1893  [key=0, style=solid];
m1_1893 -> m1_1894  [key=0, style=solid];
m1_1895 -> m1_1889  [key=0, style=bold, color=blue];
m1_514 -> m1_515  [key=0, style=solid];
m1_516 -> m1_12  [key=2, style=dotted];
m1_516 -> m1_517  [key=0, style=solid];
m1_516 -> m1_518  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m1_518 -> m1_34  [key=2, style=dotted];
m1_518 -> m1_519  [key=0, style=solid];
m1_515 -> m1_516  [key=0, style=solid];
m1_515 -> m1_509  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m1_517 -> m1_518  [key=0, style=solid];
m1_517 -> m1_520  [key=2, style=dotted];
m1_519 -> m1_514  [key=0, style=bold, color=blue];
m1_2344 -> m1_2345  [key=0, style=solid];
m1_2345 -> m1_12  [key=2, style=dotted];
m1_2345 -> m1_2346  [key=0, style=solid];
m1_2346 -> m1_34  [key=2, style=dotted];
m1_2346 -> m1_2347  [key=0, style=solid];
m1_2347 -> m1_2344  [key=0, style=bold, color=blue];
m1_2202 -> m1_2203  [key=0, style=solid];
m1_2205 -> m1_34  [key=2, style=dotted];
m1_2205 -> m1_2206  [key=0, style=solid];
m1_2205 -> m1_122  [key=2, style=dotted];
m1_2206 -> m1_34  [key=2, style=dotted];
m1_2206 -> m1_2207  [key=0, style=solid];
m1_2204 -> m1_2205  [key=0, style=solid];
m1_2204 -> m1_2206  [key=1, style=dashed, color=darkseagreen4, label=dic];
m1_2204 -> m1_95  [key=2, style=dotted];
m1_2204 -> m1_96  [key=2, style=dotted];
m1_2203 -> m1_2204  [key=0, style=solid];
m1_2203 -> m1_2203  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m1_2207 -> m1_2202  [key=0, style=bold, color=blue];
m1_1832 -> m1_1833  [key=0, style=solid];
m1_1833 -> m1_64  [key=2, style=dotted];
m1_1833 -> m1_1834  [key=0, style=solid];
m1_1834 -> m1_1832  [key=0, style=bold, color=blue];
m1_2079 -> m1_2080  [key=0, style=solid];
m1_2086 -> m1_12  [key=2, style=dotted];
m1_2086 -> m1_2087  [key=0, style=solid];
m1_2086 -> m1_2088  [key=1, style=dashed, color=darkseagreen4, label=newTestObject];
m1_2086 -> m1_2089  [key=1, style=dashed, color=darkseagreen4, label=newTestObject];
m1_2087 -> m1_34  [key=2, style=dotted];
m1_2087 -> m1_2088  [key=0, style=solid];
m1_2087 -> m1_2093  [key=2, style=dotted];
m1_2088 -> m1_34  [key=2, style=dotted];
m1_2088 -> m1_2089  [key=0, style=solid];
m1_2088 -> m1_2093  [key=2, style=dotted];
m1_2083 -> m1_2086  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_2083 -> m1_2084  [key=0, style=solid];
m1_2083 -> m1_65  [key=2, style=dotted];
m1_2083 -> m1_2085  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_2085 -> m1_2086  [key=0, style=solid];
m1_2085 -> m1_67  [key=2, style=dotted];
m1_2089 -> m1_2090  [key=0, style=solid];
m1_2089 -> m1_89  [key=2, style=dotted];
m1_2080 -> m1_2087  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m1_2080 -> m1_2088  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m1_2080 -> m1_2083  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m1_2080 -> m1_2081  [key=0, style=solid];
m1_2080 -> m1_2091  [key=2, style=dotted];
m1_2080 -> m1_2082  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m1_2082 -> m1_2083  [key=0, style=solid];
m1_2082 -> m1_2092  [key=2, style=dotted];
m1_2084 -> m1_2085  [key=0, style=solid];
m1_2084 -> m1_2084  [key=3, color=darkorchid, style=bold, label="Local variable string expected"];
m1_2081 -> m1_2092  [key=2, style=dotted];
m1_2081 -> m1_2082  [key=0, style=solid];
m1_2090 -> m1_2079  [key=0, style=bold, color=blue];
m1_23 -> m1_12  [key=2, style=dotted];
m1_23 -> m1_24  [key=0, style=solid];
m1_728 -> m1_729  [key=0, style=solid];
m1_731 -> m1_34  [key=2, style=dotted];
m1_731 -> m1_732  [key=0, style=solid];
m1_731 -> m1_727  [key=2, style=dotted];
m1_730 -> m1_731  [key=0, style=solid];
m1_730 -> m1_666  [key=2, style=dotted];
m1_730 -> m1_732  [key=1, style=dashed, color=darkseagreen4, label=p];
m1_732 -> m1_727  [key=2, style=dotted];
m1_732 -> m1_733  [key=0, style=solid];
m1_732 -> m1_67  [key=2, style=dotted];
m1_729 -> m1_730  [key=0, style=solid];
m1_729 -> m1_729  [key=3, color=darkorchid, style=bold, label="Local variable string value"];
m1_733 -> m1_728  [key=0, style=bold, color=blue];
m1_1838 -> m1_1839  [key=0, style=solid];
m1_1839 -> m1_1840  [key=0, style=solid];
m1_1839 -> m1_1841  [key=2, style=dotted];
m1_1840 -> m1_1838  [key=0, style=bold, color=blue];
m1_1601 -> m1_1602  [key=0, style=solid];
m1_1602 -> m1_8  [key=2, style=dotted];
m1_1602 -> m1_1603  [key=0, style=solid];
m1_1602 -> m1_1604  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_1603 -> m1_1601  [key=0, style=bold, color=blue];
m1_1083 -> m1_1084  [key=0, style=solid];
m1_1088 -> m1_34  [key=2, style=dotted];
m1_1088 -> m1_1089  [key=0, style=solid];
m1_1090 -> m1_34  [key=2, style=dotted];
m1_1090 -> m1_1091  [key=0, style=solid];
m1_1091 -> m1_34  [key=2, style=dotted];
m1_1091 -> m1_1092  [key=0, style=solid];
m1_1089 -> m1_36  [key=2, style=dotted];
m1_1089 -> m1_1090  [key=0, style=solid];
m1_1089 -> m1_1091  [key=1, style=dashed, color=darkseagreen4, label=c2];
m1_1089 -> m1_1025  [key=2, style=dotted];
m1_1087 -> m1_1088  [key=0, style=solid];
m1_1087 -> m1_1089  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_1087 -> m1_1025  [key=2, style=dotted];
m1_1087 -> m1_1026  [key=2, style=dotted];
m1_1084 -> m1_1087  [key=1, style=dashed, color=darkseagreen4, label=c1];
m1_1084 -> m1_1085  [key=0, style=solid];
m1_1084 -> m1_1093  [key=2, style=dotted];
m1_1084 -> m1_1086  [key=1, style=dashed, color=darkseagreen4, label=c1];
m1_1086 -> m1_1087  [key=0, style=solid];
m1_1086 -> m1_1017  [key=2, style=dotted];
m1_1085 -> m1_1086  [key=0, style=solid];
m1_1085 -> m1_1017  [key=2, style=dotted];
m1_1092 -> m1_1083  [key=0, style=bold, color=blue];
m1_3059 -> m1_3060  [key=0, style=solid];
m1_3070 -> m1_493  [key=2, style=dotted];
m1_3070 -> m1_3071  [key=0, style=solid];
m1_3070 -> m1_66  [key=2, style=dotted];
m1_3069 -> m1_122  [key=2, style=dotted];
m1_3069 -> m1_3070  [key=0, style=solid];
m1_3069 -> m1_3078  [key=2, style=dotted];
m1_3066 -> m1_797  [key=2, style=dotted];
m1_3066 -> m1_3067  [key=0, style=solid];
m1_3066 -> m1_3076  [key=2, style=dotted];
m1_3067 -> m1_3070  [key=1, style=dashed, color=darkseagreen4, label=a];
m1_3067 -> m1_3077  [key=2, style=dotted];
m1_3067 -> m1_3068  [key=0, style=solid];
m1_3068 -> m1_3069  [key=0, style=solid];
m1_3060 -> m1_559  [key=2, style=dotted];
m1_3060 -> m1_3061  [key=0, style=solid];
m1_3060 -> m1_3065  [key=1, style=dashed, color=darkseagreen4, label=ms];
m1_3065 -> m1_3066  [key=0, style=solid];
m1_3065 -> m1_646  [key=2, style=dotted];
m1_3061 -> m1_3062  [key=0, style=solid];
m1_3061 -> m1_3072  [key=2, style=dotted];
m1_3061 -> m1_3063  [key=1, style=dashed, color=darkseagreen4, label=writer];
m1_3061 -> m1_3064  [key=1, style=dashed, color=darkseagreen4, label=writer];
m1_3064 -> m1_3065  [key=0, style=solid];
m1_3064 -> m1_3075  [key=2, style=dotted];
m1_3062 -> m1_3063  [key=0, style=solid];
m1_3062 -> m1_3073  [key=2, style=dotted];
m1_3063 -> m1_3064  [key=0, style=solid];
m1_3063 -> m1_3074  [key=2, style=dotted];
m1_3071 -> m1_3059  [key=0, style=bold, color=blue];
m1_2021 -> m1_2068  [key=0, style=solid];
m1_2021 -> m1_2069  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_2021 -> m1_2070  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_2021 -> m1_2071  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_2021 -> m1_2072  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_2021 -> m1_2073  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_2021 -> m1_2074  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_2021 -> m1_2075  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_2021 -> m1_2076  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_2021 -> m1_2077  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_2068 -> m1_2069  [key=0, style=solid];
m1_2069 -> m1_2070  [key=0, style=solid];
m1_2070 -> m1_2071  [key=0, style=solid];
m1_2071 -> m1_2072  [key=0, style=solid];
m1_2072 -> m1_2073  [key=0, style=solid];
m1_2073 -> m1_2074  [key=0, style=solid];
m1_2074 -> m1_2075  [key=0, style=solid];
m1_2075 -> m1_2076  [key=0, style=solid];
m1_2076 -> m1_2077  [key=0, style=solid];
m1_2077 -> m1_2078  [key=0, style=solid];
m1_2078 -> m1_2021  [key=0, style=bold, color=blue];
m1_574 -> m1_575  [key=0, style=solid];
m1_576 -> m1_555  [key=2, style=dotted];
m1_576 -> m1_577  [key=0, style=solid];
m1_576 -> m1_579  [key=2, style=dotted];
m1_575 -> m1_576  [key=0, style=solid];
m1_575 -> m1_578  [key=2, style=dotted];
m1_577 -> m1_574  [key=0, style=bold, color=blue];
m1_1107 -> m1_1108  [key=0, style=solid];
m1_1110 -> m1_34  [key=2, style=dotted];
m1_1110 -> m1_1111  [key=0, style=solid];
m1_1112 -> m1_34  [key=2, style=dotted];
m1_1112 -> m1_1113  [key=0, style=solid];
m1_1109 -> m1_1110  [key=0, style=solid];
m1_1109 -> m1_47  [key=2, style=dotted];
m1_1111 -> m1_1112  [key=0, style=solid];
m1_1111 -> m1_47  [key=2, style=dotted];
m1_1108 -> m1_1109  [key=0, style=solid];
m1_1113 -> m1_1107  [key=0, style=bold, color=blue];
m1_1448 -> m1_1449  [key=0, style=solid];
m1_1451 -> m1_67  [key=2, style=dotted];
m1_1451 -> m1_1452  [key=0, style=solid];
m1_1450 -> m1_65  [key=2, style=dotted];
m1_1450 -> m1_1451  [key=0, style=solid];
m1_1449 -> m1_120  [key=2, style=dotted];
m1_1449 -> m1_1450  [key=0, style=solid];
m1_1449 -> m1_1453  [key=2, style=dotted];
m1_1452 -> m1_1448  [key=0, style=bold, color=blue];
m1_51 -> m1_52  [key=0, style=solid];
m1_51 -> m1_53  [key=0, style=solid];
m1_51 -> m1_48  [key=2, style=dotted];
m1_3505 -> m1_3506  [key=0, style=solid];
m1_3507 -> m1_12  [key=2, style=dotted];
m1_3507 -> m1_3508  [key=0, style=solid];
m1_3508 -> m1_34  [key=2, style=dotted];
m1_3508 -> m1_3509  [key=0, style=solid];
m1_3506 -> m1_3507  [key=0, style=solid];
m1_3506 -> m1_3506  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m1_3509 -> m1_3505  [key=0, style=bold, color=blue];
m1_1960 -> m1_1961  [key=0, style=solid];
m1_1972 -> m1_12  [key=2, style=dotted];
m1_1972 -> m1_1973  [key=0, style=solid];
m1_1972 -> m1_1974  [key=1, style=dashed, color=darkseagreen4, label=o2];
m1_1972 -> m1_1975  [key=1, style=dashed, color=darkseagreen4, label=o2];
m1_1972 -> m1_1976  [key=1, style=dashed, color=darkseagreen4, label=o2];
m1_1972 -> m1_1977  [key=1, style=dashed, color=darkseagreen4, label=o2];
m1_1972 -> m1_1978  [key=1, style=dashed, color=darkseagreen4, label=o2];
m1_1975 -> m1_34  [key=2, style=dotted];
m1_1975 -> m1_1976  [key=0, style=solid];
m1_1973 -> m1_34  [key=2, style=dotted];
m1_1973 -> m1_1974  [key=0, style=solid];
m1_1974 -> m1_34  [key=2, style=dotted];
m1_1974 -> m1_1975  [key=0, style=solid];
m1_1976 -> m1_34  [key=2, style=dotted];
m1_1976 -> m1_1977  [key=0, style=solid];
m1_1977 -> m1_34  [key=2, style=dotted];
m1_1977 -> m1_1978  [key=0, style=solid];
m1_1978 -> m1_34  [key=2, style=dotted];
m1_1978 -> m1_1979  [key=0, style=solid];
m1_1971 -> m1_1972  [key=0, style=solid];
m1_1971 -> m1_67  [key=2, style=dotted];
m1_1970 -> m1_1972  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_1970 -> m1_1971  [key=0, style=solid];
m1_1970 -> m1_65  [key=2, style=dotted];
m1_1966 -> m1_1975  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffset];
m1_1966 -> m1_123  [key=2, style=dotted];
m1_1966 -> m1_1967  [key=0, style=solid];
m1_1966 -> m1_839  [key=2, style=dotted];
m1_1966 -> m1_1969  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffset];
m1_1968 -> m1_1971  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffsetText];
m1_1968 -> m1_1969  [key=0, style=solid];
m1_1969 -> m1_1970  [key=0, style=solid];
m1_1969 -> m1_1889  [key=2, style=dotted];
m1_1962 -> m1_831  [key=2, style=dotted];
m1_1962 -> m1_1963  [key=0, style=solid];
m1_1965 -> m1_1966  [key=0, style=solid];
m1_1967 -> m1_1968  [key=0, style=solid];
m1_1961 -> m1_1969  [key=1, style=dashed, color=darkseagreen4, label=person];
m1_1961 -> m1_1962  [key=0, style=solid];
m1_1961 -> m1_1965  [key=1, style=dashed, color=darkseagreen4, label=person];
m1_1961 -> m1_1244  [key=2, style=dotted];
m1_1961 -> m1_1963  [key=1, style=dashed, color=darkseagreen4, label=person];
m1_1961 -> m1_1964  [key=1, style=dashed, color=darkseagreen4, label=person];
m1_1963 -> m1_1964  [key=0, style=solid];
m1_1964 -> m1_1965  [key=0, style=solid];
m1_1979 -> m1_1960  [key=0, style=bold, color=blue];
m1_2812 -> m1_2813  [key=0, style=solid];
m1_2819 -> m1_12  [key=2, style=dotted];
m1_2819 -> m1_2820  [key=0, style=solid];
m1_2818 -> m1_34  [key=2, style=dotted];
m1_2818 -> m1_2819  [key=0, style=solid];
m1_2820 -> m1_34  [key=2, style=dotted];
m1_2820 -> m1_2821  [key=0, style=solid];
m1_2817 -> m1_2819  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_2817 -> m1_2818  [key=0, style=solid];
m1_2817 -> m1_47  [key=2, style=dotted];
m1_2813 -> m1_2817  [key=1, style=dashed, color=darkseagreen4, label=b];
m1_2813 -> m1_2814  [key=0, style=solid];
m1_2813 -> m1_2822  [key=2, style=dotted];
m1_2813 -> m1_2815  [key=1, style=dashed, color=darkseagreen4, label=b];
m1_2816 -> m1_2817  [key=0, style=solid];
m1_2815 -> m1_2813  [key=3, color=darkorchid, style=bold, label="Local variable Newtonsoft.Json.Tests.TestObjects.Aa a"];
m1_2815 -> m1_2816  [key=0, style=solid];
m1_2814 -> m1_2815  [key=0, style=solid];
m1_2821 -> m1_2812  [key=0, style=bold, color=blue];
m1_1164 -> m1_1165  [key=0, style=solid];
m1_1168 -> m1_12  [key=2, style=dotted];
m1_1168 -> m1_1169  [key=0, style=solid];
m1_1168 -> m1_1170  [key=1, style=dashed, color=darkseagreen4, label=c2];
m1_1169 -> m1_34  [key=2, style=dotted];
m1_1169 -> m1_1170  [key=0, style=solid];
m1_1170 -> m1_34  [key=2, style=dotted];
m1_1170 -> m1_1171  [key=0, style=solid];
m1_1170 -> m1_831  [key=2, style=dotted];
m1_1166 -> m1_1168  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_1166 -> m1_1167  [key=0, style=solid];
m1_1166 -> m1_65  [key=2, style=dotted];
m1_1167 -> m1_1168  [key=0, style=solid];
m1_1167 -> m1_67  [key=2, style=dotted];
m1_1165 -> m1_1166  [key=0, style=solid];
m1_1165 -> m1_831  [key=2, style=dotted];
m1_1165 -> m1_1172  [key=2, style=dotted];
m1_1171 -> m1_1164  [key=0, style=bold, color=blue];
m1_2564 -> m1_2565  [key=0, style=solid];
m1_2566 -> m1_120  [key=2, style=dotted];
m1_2566 -> m1_2567  [key=0, style=solid];
m1_2565 -> m1_2566  [key=0, style=solid];
m1_2567 -> m1_2564  [key=0, style=bold, color=blue];
m1_1773 -> m1_1774  [key=0, style=solid];
m1_1775 -> m1_65  [key=2, style=dotted];
m1_1775 -> m1_1776  [key=0, style=solid];
m1_1776 -> m1_67  [key=2, style=dotted];
m1_1776 -> m1_1777  [key=0, style=solid];
m1_1774 -> m1_1775  [key=0, style=solid];
m1_1774 -> m1_1778  [key=2, style=dotted];
m1_1777 -> m1_1773  [key=0, style=bold, color=blue];
m1_1340 -> m1_1341  [key=0, style=solid];
m1_1342 -> m1_8  [key=2, style=dotted];
m1_1342 -> m1_1343  [key=0, style=solid];
m1_1342 -> m1_1344  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_1341 -> m1_1342  [key=0, style=solid];
m1_1343 -> m1_1340  [key=0, style=bold, color=blue];
m1_1180 -> m1_1181  [key=0, style=solid];
m1_1182 -> m1_12  [key=2, style=dotted];
m1_1182 -> m1_1183  [key=0, style=solid];
m1_1181 -> m1_1182  [key=0, style=solid];
m1_1181 -> m1_1181  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m1_1183 -> m1_1184  [key=0, style=solid];
m1_1183 -> m1_1186  [key=0, style=solid];
m1_1183 -> m1_1187  [key=2, style=dotted];
m1_1184 -> m1_1185  [key=0, style=solid];
m1_1185 -> m1_1186  [key=0, style=solid];
m1_1185 -> m1_203  [key=2, style=dotted];
m1_1185 -> m1_1188  [key=2, style=dotted];
m1_1186 -> m1_1180  [key=0, style=bold, color=blue];
m1_22 -> m1_23  [key=0, style=solid];
m1_3368 -> m1_3369  [key=0, style=solid];
m1_3369 -> m1_123  [key=2, style=dotted];
m1_3369 -> m1_831  [key=2, style=dotted];
m1_3369 -> m1_839  [key=2, style=dotted];
m1_3369 -> m1_120  [key=2, style=dotted];
m1_3369 -> m1_3370  [key=0, style=solid];
m1_3371 -> m1_67  [key=2, style=dotted];
m1_3371 -> m1_3372  [key=0, style=solid];
m1_3370 -> m1_95  [key=2, style=dotted];
m1_3370 -> m1_962  [key=2, style=dotted];
m1_3370 -> m1_273  [key=2, style=dotted];
m1_3370 -> m1_3371  [key=0, style=solid];
m1_3372 -> m1_3368  [key=0, style=bold, color=blue];
m1_67 -> m1_71  [key=0, style=solid];
m1_1835 -> m1_1882  [key=3, color=darkorchid, style=bold, label="Parameter variable T value"];
m1_1835 -> m1_1836  [key=0, style=solid];
m1_1836 -> m1_557  [key=2, style=dotted];
m1_1836 -> m1_1837  [key=0, style=solid];
m1_1837 -> m1_1835  [key=0, style=bold, color=blue];
m1_571 -> m1_572  [key=0, style=solid];
m1_572 -> m1_573  [key=0, style=solid];
m1_573 -> m1_571  [key=0, style=bold, color=blue];
m1_1649 -> m1_1650  [key=0, style=solid];
m1_1656 -> m1_12  [key=2, style=dotted];
m1_1656 -> m1_1657  [key=0, style=solid];
m1_1656 -> m1_1658  [key=1, style=dashed, color=darkseagreen4, label=newFoo];
m1_1656 -> m1_1659  [key=1, style=dashed, color=darkseagreen4, label=newFoo];
m1_1656 -> m1_1660  [key=1, style=dashed, color=darkseagreen4, label=newFoo];
m1_1657 -> m1_34  [key=2, style=dotted];
m1_1657 -> m1_1658  [key=0, style=solid];
m1_1658 -> m1_34  [key=2, style=dotted];
m1_1658 -> m1_1659  [key=0, style=solid];
m1_1659 -> m1_34  [key=2, style=dotted];
m1_1659 -> m1_1660  [key=0, style=solid];
m1_1660 -> m1_34  [key=2, style=dotted];
m1_1660 -> m1_1661  [key=0, style=solid];
m1_1654 -> m1_1656  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_1654 -> m1_1655  [key=0, style=solid];
m1_1654 -> m1_65  [key=2, style=dotted];
m1_1655 -> m1_1656  [key=0, style=solid];
m1_1655 -> m1_67  [key=2, style=dotted];
m1_1650 -> m1_1654  [key=1, style=dashed, color=darkseagreen4, label=f];
m1_1650 -> m1_1651  [key=0, style=solid];
m1_1650 -> m1_1662  [key=2, style=dotted];
m1_1650 -> m1_1652  [key=1, style=dashed, color=darkseagreen4, label=f];
m1_1650 -> m1_1653  [key=1, style=dashed, color=darkseagreen4, label=f];
m1_1653 -> m1_1654  [key=0, style=solid];
m1_1653 -> m1_1663  [key=2, style=dotted];
m1_1653 -> m1_1627  [key=2, style=dotted];
m1_1651 -> m1_1652  [key=0, style=solid];
m1_1651 -> m1_1663  [key=2, style=dotted];
m1_1651 -> m1_1627  [key=2, style=dotted];
m1_1652 -> m1_1653  [key=0, style=solid];
m1_1652 -> m1_1663  [key=2, style=dotted];
m1_1652 -> m1_1627  [key=2, style=dotted];
m1_1661 -> m1_1649  [key=0, style=bold, color=blue];
m1_1928 -> m1_1929  [key=0, style=solid];
m1_1928 -> m1_1930  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m1_1928 -> m1_1931  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m1_1928 -> m1_1932  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m1_1928 -> m1_1933  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m1_1928 -> m1_1935  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m1_1928 -> m1_1936  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m1_1928 -> m1_1937  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m1_1928 -> m1_1938  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m1_1928 -> m1_1939  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m1_1928 -> m1_1940  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m1_1928 -> m1_1941  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m1_1928 -> m1_1942  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m1_1928 -> m1_1943  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m1_1928 -> m1_1944  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m1_1928 -> m1_1945  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m1_1928 -> m1_1946  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m1_1928 -> m1_1934  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m1_1929 -> m1_1930  [key=0, style=solid];
m1_1929 -> m1_424  [key=2, style=dotted];
m1_1930 -> m1_1931  [key=0, style=solid];
m1_1930 -> m1_425  [key=2, style=dotted];
m1_1931 -> m1_1932  [key=0, style=solid];
m1_1931 -> m1_424  [key=2, style=dotted];
m1_1932 -> m1_1933  [key=0, style=solid];
m1_1932 -> m1_424  [key=2, style=dotted];
m1_1933 -> m1_1934  [key=0, style=solid];
m1_1933 -> m1_424  [key=2, style=dotted];
m1_1935 -> m1_1936  [key=0, style=solid];
m1_1935 -> m1_1948  [key=2, style=dotted];
m1_1936 -> m1_1937  [key=0, style=solid];
m1_1936 -> m1_1949  [key=2, style=dotted];
m1_1937 -> m1_1938  [key=0, style=solid];
m1_1937 -> m1_1950  [key=2, style=dotted];
m1_1938 -> m1_1939  [key=0, style=solid];
m1_1938 -> m1_1951  [key=2, style=dotted];
m1_1939 -> m1_1940  [key=0, style=solid];
m1_1939 -> m1_1952  [key=2, style=dotted];
m1_1940 -> m1_1941  [key=0, style=solid];
m1_1940 -> m1_1953  [key=2, style=dotted];
m1_1941 -> m1_1942  [key=0, style=solid];
m1_1941 -> m1_1954  [key=2, style=dotted];
m1_1942 -> m1_1943  [key=0, style=solid];
m1_1942 -> m1_1955  [key=2, style=dotted];
m1_1943 -> m1_1944  [key=0, style=solid];
m1_1943 -> m1_1956  [key=2, style=dotted];
m1_1944 -> m1_1945  [key=0, style=solid];
m1_1944 -> m1_1957  [key=2, style=dotted];
m1_1945 -> m1_1946  [key=0, style=solid];
m1_1945 -> m1_1958  [key=2, style=dotted];
m1_1946 -> m1_1947  [key=0, style=solid];
m1_1946 -> m1_1959  [key=2, style=dotted];
m1_1934 -> m1_1935  [key=0, style=solid];
m1_1934 -> m1_424  [key=2, style=dotted];
m1_1947 -> m1_1928  [key=0, style=bold, color=blue];
m1_2658 -> m1_2659  [key=0, style=solid];
m1_2659 -> m1_120  [key=2, style=dotted];
m1_2659 -> m1_2660  [key=0, style=solid];
m1_2660 -> m1_2658  [key=0, style=bold, color=blue];
m1_1149 -> m1_1150  [key=0, style=solid];
m1_1154 -> m1_12  [key=2, style=dotted];
m1_1154 -> m1_1155  [key=0, style=solid];
m1_1160 -> m1_12  [key=2, style=dotted];
m1_1160 -> m1_1161  [key=0, style=solid];
m1_1153 -> m1_34  [key=2, style=dotted];
m1_1153 -> m1_1154  [key=0, style=solid];
m1_1155 -> m1_34  [key=2, style=dotted];
m1_1155 -> m1_1156  [key=0, style=solid];
m1_1159 -> m1_34  [key=2, style=dotted];
m1_1159 -> m1_1160  [key=0, style=solid];
m1_1161 -> m1_34  [key=2, style=dotted];
m1_1161 -> m1_1162  [key=0, style=solid];
m1_1152 -> m1_1154  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_1152 -> m1_1153  [key=0, style=solid];
m1_1152 -> m1_47  [key=2, style=dotted];
m1_1158 -> m1_1160  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_1158 -> m1_1159  [key=0, style=solid];
m1_1158 -> m1_47  [key=2, style=dotted];
m1_1150 -> m1_1153  [key=1, style=dashed, color=darkseagreen4, label=boolRef];
m1_1150 -> m1_1151  [key=0, style=solid];
m1_1156 -> m1_1159  [key=1, style=dashed, color=darkseagreen4, label=jsonSerializerTestRef];
m1_1156 -> m1_1157  [key=0, style=solid];
m1_1151 -> m1_1152  [key=0, style=solid];
m1_1151 -> m1_1163  [key=2, style=dotted];
m1_1157 -> m1_1158  [key=0, style=solid];
m1_1157 -> m1_1163  [key=2, style=dotted];
m1_1162 -> m1_1149  [key=0, style=bold, color=blue];
m1_3617 -> m1_3618  [key=0, style=solid];
m1_3618 -> m1_3583  [key=2, style=dotted];
m1_3618 -> m1_3619  [key=0, style=solid];
m1_3619 -> m1_3617  [key=0, style=bold, color=blue];
m1_3378 -> m1_3379  [key=0, style=solid];
m1_3385 -> m1_34  [key=2, style=dotted];
m1_3385 -> m1_3386  [key=0, style=solid];
m1_3386 -> m1_34  [key=2, style=dotted];
m1_3386 -> m1_3387  [key=0, style=solid];
m1_3381 -> m1_3385  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m1_3381 -> m1_3386  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m1_3381 -> m1_3382  [key=0, style=solid];
m1_3381 -> m1_2710  [key=2, style=dotted];
m1_3381 -> m1_3383  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m1_3381 -> m1_3384  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m1_3384 -> m1_3385  [key=0, style=solid];
m1_3384 -> m1_89  [key=2, style=dotted];
m1_3387 -> m1_3388  [key=0, style=solid];
m1_3387 -> m1_2714  [key=2, style=dotted];
m1_3379 -> m1_123  [key=2, style=dotted];
m1_3379 -> m1_831  [key=2, style=dotted];
m1_3379 -> m1_839  [key=2, style=dotted];
m1_3379 -> m1_120  [key=2, style=dotted];
m1_3379 -> m1_3380  [key=0, style=solid];
m1_3379 -> m1_3383  [key=1, style=dashed, color=darkseagreen4, label=dates];
m1_3380 -> m1_3381  [key=0, style=solid];
m1_3380 -> m1_3387  [key=1, style=dashed, color=darkseagreen4, label=sw];
m1_3380 -> m1_2709  [key=2, style=dotted];
m1_3382 -> m1_558  [key=2, style=dotted];
m1_3382 -> m1_95  [key=2, style=dotted];
m1_3382 -> m1_273  [key=2, style=dotted];
m1_3382 -> m1_3383  [key=0, style=solid];
m1_3383 -> m1_3384  [key=0, style=solid];
m1_3383 -> m1_2746  [key=2, style=dotted];
m1_3388 -> m1_67  [key=2, style=dotted];
m1_3388 -> m1_3389  [key=0, style=solid];
m1_3389 -> m1_3378  [key=0, style=bold, color=blue];
m1_1518 -> m1_1519  [key=0, style=solid];
m1_1520 -> m1_8  [key=2, style=dotted];
m1_1520 -> m1_1521  [key=0, style=solid];
m1_1520 -> m1_1522  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_1519 -> m1_1520  [key=0, style=solid];
m1_1519 -> m1_1523  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_1519 -> m1_1512  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m1_1521 -> m1_1518  [key=0, style=bold, color=blue];
m1_120 -> m1_121  [key=0, style=solid];
m1_120 -> m1_155  [key=2, style=dotted];
m1_155 -> m1_34  [key=2, style=dotted];
m1_155 -> m1_156  [key=0, style=solid];
m1_2584 -> m1_2585  [key=0, style=solid];
m1_2590 -> m1_12  [key=2, style=dotted];
m1_2590 -> m1_2591  [key=0, style=solid];
m1_2590 -> m1_2592  [key=1, style=dashed, color=darkseagreen4, label=c2];
m1_2590 -> m1_2593  [key=1, style=dashed, color=darkseagreen4, label=c2];
m1_2590 -> m1_2594  [key=1, style=dashed, color=darkseagreen4, label=c2];
m1_2591 -> m1_34  [key=2, style=dotted];
m1_2591 -> m1_2592  [key=0, style=solid];
m1_2592 -> m1_34  [key=2, style=dotted];
m1_2592 -> m1_2593  [key=0, style=solid];
m1_2593 -> m1_34  [key=2, style=dotted];
m1_2593 -> m1_2594  [key=0, style=solid];
m1_2594 -> m1_34  [key=2, style=dotted];
m1_2594 -> m1_2595  [key=0, style=solid];
m1_2588 -> m1_2590  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_2588 -> m1_2589  [key=0, style=solid];
m1_2588 -> m1_65  [key=2, style=dotted];
m1_2589 -> m1_2590  [key=0, style=solid];
m1_2589 -> m1_67  [key=2, style=dotted];
m1_2585 -> m1_2591  [key=1, style=dashed, color=darkseagreen4, label=c1];
m1_2585 -> m1_2592  [key=1, style=dashed, color=darkseagreen4, label=c1];
m1_2585 -> m1_2588  [key=1, style=dashed, color=darkseagreen4, label=c1];
m1_2585 -> m1_2586  [key=0, style=solid];
m1_2585 -> m1_2580  [key=2, style=dotted];
m1_2585 -> m1_2587  [key=1, style=dashed, color=darkseagreen4, label=c1];
m1_2587 -> m1_2588  [key=0, style=solid];
m1_2587 -> m1_2596  [key=2, style=dotted];
m1_2586 -> m1_2587  [key=0, style=solid];
m1_2586 -> m1_2596  [key=2, style=dotted];
m1_2595 -> m1_2584  [key=0, style=bold, color=blue];
m1_2022 -> m1_2023  [key=0, style=solid];
m1_2023 -> m1_12  [key=2, style=dotted];
m1_2023 -> m1_2024  [key=0, style=solid];
m1_2023 -> m1_2025  [key=1, style=dashed, color=darkseagreen4, label=myA];
m1_2023 -> m1_2026  [key=1, style=dashed, color=darkseagreen4, label=myA];
m1_2023 -> m1_2027  [key=1, style=dashed, color=darkseagreen4, label=myA];
m1_2023 -> m1_2028  [key=1, style=dashed, color=darkseagreen4, label=myA];
m1_2023 -> m1_2029  [key=1, style=dashed, color=darkseagreen4, label=myA];
m1_2023 -> m1_2030  [key=1, style=dashed, color=darkseagreen4, label=myA];
m1_2023 -> m1_2031  [key=1, style=dashed, color=darkseagreen4, label=myA];
m1_2032 -> m1_12  [key=2, style=dotted];
m1_2032 -> m1_2033  [key=0, style=solid];
m1_2032 -> m1_2034  [key=1, style=dashed, color=darkseagreen4, label=myB];
m1_2032 -> m1_2035  [key=1, style=dashed, color=darkseagreen4, label=myB];
m1_2032 -> m1_2036  [key=1, style=dashed, color=darkseagreen4, label=myB];
m1_2032 -> m1_2037  [key=1, style=dashed, color=darkseagreen4, label=myB];
m1_2032 -> m1_2038  [key=1, style=dashed, color=darkseagreen4, label=myB];
m1_2032 -> m1_2039  [key=1, style=dashed, color=darkseagreen4, label=myB];
m1_2032 -> m1_2040  [key=1, style=dashed, color=darkseagreen4, label=myB];
m1_2032 -> m1_2041  [key=1, style=dashed, color=darkseagreen4, label=myB];
m1_2032 -> m1_2042  [key=1, style=dashed, color=darkseagreen4, label=myB];
m1_2032 -> m1_2043  [key=1, style=dashed, color=darkseagreen4, label=myB];
m1_2032 -> m1_2044  [key=1, style=dashed, color=darkseagreen4, label=myB];
m1_2032 -> m1_2045  [key=1, style=dashed, color=darkseagreen4, label=myB];
m1_2032 -> m1_2046  [key=1, style=dashed, color=darkseagreen4, label=myB];
m1_2032 -> m1_2047  [key=1, style=dashed, color=darkseagreen4, label=myB];
m1_2032 -> m1_2048  [key=1, style=dashed, color=darkseagreen4, label=myB];
m1_2032 -> m1_2049  [key=1, style=dashed, color=darkseagreen4, label=myB];
m1_2032 -> m1_2050  [key=1, style=dashed, color=darkseagreen4, label=myB];
m1_2024 -> m1_34  [key=2, style=dotted];
m1_2024 -> m1_2025  [key=0, style=solid];
m1_2024 -> m1_2052  [key=2, style=dotted];
m1_2024 -> m1_2053  [key=2, style=dotted];
m1_2025 -> m1_34  [key=2, style=dotted];
m1_2025 -> m1_2026  [key=0, style=solid];
m1_2025 -> m1_2052  [key=2, style=dotted];
m1_2025 -> m1_2053  [key=2, style=dotted];
m1_2026 -> m1_34  [key=2, style=dotted];
m1_2026 -> m1_2027  [key=0, style=solid];
m1_2026 -> m1_2054  [key=2, style=dotted];
m1_2026 -> m1_2053  [key=2, style=dotted];
m1_2027 -> m1_34  [key=2, style=dotted];
m1_2027 -> m1_2028  [key=0, style=solid];
m1_2027 -> m1_2054  [key=2, style=dotted];
m1_2027 -> m1_2053  [key=2, style=dotted];
m1_2028 -> m1_34  [key=2, style=dotted];
m1_2028 -> m1_2029  [key=0, style=solid];
m1_2028 -> m1_2054  [key=2, style=dotted];
m1_2028 -> m1_2053  [key=2, style=dotted];
m1_2029 -> m1_34  [key=2, style=dotted];
m1_2029 -> m1_2030  [key=0, style=solid];
m1_2029 -> m1_2054  [key=2, style=dotted];
m1_2029 -> m1_2053  [key=2, style=dotted];
m1_2030 -> m1_34  [key=2, style=dotted];
m1_2030 -> m1_2031  [key=0, style=solid];
m1_2030 -> m1_2054  [key=2, style=dotted];
m1_2030 -> m1_2053  [key=2, style=dotted];
m1_2031 -> m1_34  [key=2, style=dotted];
m1_2031 -> m1_2032  [key=0, style=solid];
m1_2031 -> m1_2054  [key=2, style=dotted];
m1_2031 -> m1_2053  [key=2, style=dotted];
m1_2033 -> m1_34  [key=2, style=dotted];
m1_2033 -> m1_2034  [key=0, style=solid];
m1_2033 -> m1_2052  [key=2, style=dotted];
m1_2033 -> m1_2053  [key=2, style=dotted];
m1_2034 -> m1_34  [key=2, style=dotted];
m1_2034 -> m1_2035  [key=0, style=solid];
m1_2034 -> m1_2052  [key=2, style=dotted];
m1_2034 -> m1_2053  [key=2, style=dotted];
m1_2035 -> m1_34  [key=2, style=dotted];
m1_2035 -> m1_2036  [key=0, style=solid];
m1_2035 -> m1_2054  [key=2, style=dotted];
m1_2035 -> m1_2053  [key=2, style=dotted];
m1_2036 -> m1_34  [key=2, style=dotted];
m1_2036 -> m1_2037  [key=0, style=solid];
m1_2036 -> m1_2054  [key=2, style=dotted];
m1_2036 -> m1_2053  [key=2, style=dotted];
m1_2037 -> m1_34  [key=2, style=dotted];
m1_2037 -> m1_2038  [key=0, style=solid];
m1_2037 -> m1_2054  [key=2, style=dotted];
m1_2037 -> m1_2053  [key=2, style=dotted];
m1_2038 -> m1_34  [key=2, style=dotted];
m1_2038 -> m1_2039  [key=0, style=solid];
m1_2038 -> m1_2054  [key=2, style=dotted];
m1_2038 -> m1_2053  [key=2, style=dotted];
m1_2039 -> m1_34  [key=2, style=dotted];
m1_2039 -> m1_2040  [key=0, style=solid];
m1_2039 -> m1_2054  [key=2, style=dotted];
m1_2039 -> m1_2053  [key=2, style=dotted];
m1_2040 -> m1_34  [key=2, style=dotted];
m1_2040 -> m1_2041  [key=0, style=solid];
m1_2040 -> m1_2054  [key=2, style=dotted];
m1_2040 -> m1_2053  [key=2, style=dotted];
m1_2041 -> m1_34  [key=2, style=dotted];
m1_2041 -> m1_2042  [key=0, style=solid];
m1_2042 -> m1_34  [key=2, style=dotted];
m1_2042 -> m1_2043  [key=0, style=solid];
m1_2043 -> m1_34  [key=2, style=dotted];
m1_2043 -> m1_2044  [key=0, style=solid];
m1_2044 -> m1_34  [key=2, style=dotted];
m1_2044 -> m1_2045  [key=0, style=solid];
m1_2045 -> m1_34  [key=2, style=dotted];
m1_2045 -> m1_2046  [key=0, style=solid];
m1_2045 -> m1_2054  [key=2, style=dotted];
m1_2045 -> m1_2053  [key=2, style=dotted];
m1_2046 -> m1_34  [key=2, style=dotted];
m1_2046 -> m1_2047  [key=0, style=solid];
m1_2046 -> m1_2054  [key=2, style=dotted];
m1_2046 -> m1_2053  [key=2, style=dotted];
m1_2047 -> m1_34  [key=2, style=dotted];
m1_2047 -> m1_2048  [key=0, style=solid];
m1_2048 -> m1_34  [key=2, style=dotted];
m1_2048 -> m1_2049  [key=0, style=solid];
m1_2048 -> m1_2054  [key=2, style=dotted];
m1_2048 -> m1_2053  [key=2, style=dotted];
m1_2049 -> m1_34  [key=2, style=dotted];
m1_2049 -> m1_2050  [key=0, style=solid];
m1_2049 -> m1_2054  [key=2, style=dotted];
m1_2049 -> m1_2053  [key=2, style=dotted];
m1_2050 -> m1_34  [key=2, style=dotted];
m1_2050 -> m1_2051  [key=0, style=solid];
m1_2050 -> m1_2054  [key=2, style=dotted];
m1_2050 -> m1_2053  [key=2, style=dotted];
m1_2051 -> m1_2022  [key=0, style=bold, color=blue];
m1_464 -> m1_465  [key=0, style=solid];
m1_467 -> m1_203  [key=2, style=dotted];
m1_467 -> m1_468  [key=0, style=solid];
m1_467 -> m1_470  [key=2, style=dotted];
m1_466 -> m1_469  [key=2, style=dotted];
m1_466 -> m1_467  [key=0, style=solid];
m1_465 -> m1_199  [key=2, style=dotted];
m1_465 -> m1_467  [key=1, style=dashed, color=darkseagreen4, label=o];
m1_465 -> m1_466  [key=0, style=solid];
m1_468 -> m1_464  [key=0, style=bold, color=blue];
m1_163 -> m1_183  [key=0, style=solid];
m1_163 -> m1_34  [key=2, style=dotted];
m1_163 -> m1_164  [key=0, style=solid];
m1_183 -> m1_184  [key=0, style=solid];
m1_183 -> m1_34  [key=2, style=dotted];
m1_184 -> m1_163  [key=0, style=bold, color=blue];
m1_184 -> m1_34  [key=2, style=dotted];
m1_184 -> m1_185  [key=0, style=solid];
m1_184 -> m1_200  [key=2, style=dotted];
m1_65 -> m1_66  [key=0, style=solid];
m1_65 -> m1_68  [key=0, style=solid];
m1_65 -> m1_70  [key=0, style=solid];
m1_3605 -> m1_3606  [key=0, style=solid];
m1_3606 -> m1_3607  [key=0, style=solid];
m1_3607 -> m1_3605  [key=0, style=bold, color=blue];
m1_1270 -> m1_1271  [key=0, style=solid];
m1_1272 -> m1_12  [key=2, style=dotted];
m1_1272 -> m1_1273  [key=0, style=solid];
m1_1272 -> m1_1274  [key=1, style=dashed, color=darkseagreen4, label=o];
m1_1272 -> m1_1275  [key=1, style=dashed, color=darkseagreen4, label=o];
m1_1272 -> m1_1276  [key=1, style=dashed, color=darkseagreen4, label=o];
m1_1272 -> m1_1277  [key=1, style=dashed, color=darkseagreen4, label=o];
m1_1274 -> m1_34  [key=2, style=dotted];
m1_1274 -> m1_1275  [key=0, style=solid];
m1_1275 -> m1_34  [key=2, style=dotted];
m1_1275 -> m1_1276  [key=0, style=solid];
m1_1276 -> m1_34  [key=2, style=dotted];
m1_1276 -> m1_1277  [key=0, style=solid];
m1_1277 -> m1_34  [key=2, style=dotted];
m1_1277 -> m1_1278  [key=0, style=solid];
m1_1271 -> m1_1272  [key=0, style=solid];
m1_1271 -> m1_1271  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m1_1273 -> m1_1274  [key=0, style=solid];
m1_1273 -> m1_520  [key=2, style=dotted];
m1_1278 -> m1_1270  [key=0, style=bold, color=blue];
m1_909 -> m1_910  [key=0, style=solid];
m1_914 -> m1_34  [key=2, style=dotted];
m1_914 -> m1_915  [key=0, style=solid];
m1_915 -> m1_34  [key=2, style=dotted];
m1_915 -> m1_916  [key=0, style=solid];
m1_913 -> m1_914  [key=0, style=solid];
m1_913 -> m1_915  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m1_913 -> m1_118  [key=2, style=dotted];
m1_913 -> m1_566  [key=2, style=dotted];
m1_910 -> m1_900  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m1_910 -> m1_913  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_910 -> m1_911  [key=0, style=solid];
m1_911 -> m1_913  [key=1, style=dashed, color=darkseagreen4, label=s];
m1_911 -> m1_119  [key=2, style=dotted];
m1_911 -> m1_912  [key=0, style=solid];
m1_912 -> m1_913  [key=0, style=solid];
m1_916 -> m1_909  [key=0, style=bold, color=blue];
m1_1320 -> m1_1321  [key=0, style=solid];
m1_1326 -> m1_65  [key=2, style=dotted];
m1_1326 -> m1_1327  [key=0, style=solid];
m1_1327 -> m1_67  [key=2, style=dotted];
m1_1327 -> m1_1328  [key=0, style=solid];
m1_1329 -> m1_67  [key=2, style=dotted];
m1_1329 -> m1_1330  [key=0, style=solid];
m1_1328 -> m1_95  [key=2, style=dotted];
m1_1328 -> m1_962  [key=2, style=dotted];
m1_1328 -> m1_1329  [key=0, style=solid];
m1_1321 -> m1_1331  [key=2, style=dotted];
m1_1321 -> m1_1326  [key=1, style=dashed, color=darkseagreen4, label=o];
m1_1321 -> m1_1328  [key=1, style=dashed, color=darkseagreen4, label=o];
m1_1321 -> m1_1322  [key=0, style=solid];
m1_1321 -> m1_1323  [key=1, style=dashed, color=darkseagreen4, label=o];
m1_1321 -> m1_1324  [key=1, style=dashed, color=darkseagreen4, label=o];
m1_1321 -> m1_1325  [key=1, style=dashed, color=darkseagreen4, label=o];
m1_1325 -> m1_1326  [key=0, style=solid];
m1_1322 -> m1_1323  [key=0, style=solid];
m1_1323 -> m1_1324  [key=0, style=solid];
m1_1324 -> m1_1325  [key=0, style=solid];
m1_1330 -> m1_1320  [key=0, style=bold, color=blue];
m1_3258 -> m1_3259  [key=0, style=solid];
m1_3259 -> m1_12  [key=2, style=dotted];
m1_3259 -> m1_3260  [key=0, style=solid];
m1_3259 -> m1_3261  [key=1, style=dashed, color=darkseagreen4, label=uris];
m1_3262 -> m1_12  [key=2, style=dotted];
m1_3262 -> m1_3263  [key=0, style=solid];
m1_3267 -> m1_12  [key=2, style=dotted];
m1_3267 -> m1_3268  [key=0, style=solid];
m1_3267 -> m1_3269  [key=1, style=dashed, color=darkseagreen4, label=uri];
m1_3260 -> m1_34  [key=2, style=dotted];
m1_3260 -> m1_3261  [key=0, style=solid];
m1_3261 -> m1_34  [key=2, style=dotted];
m1_3261 -> m1_3262  [key=0, style=solid];
m1_3261 -> m1_1440  [key=2, style=dotted];
m1_3266 -> m1_34  [key=2, style=dotted];
m1_3266 -> m1_3267  [key=0, style=solid];
m1_3269 -> m1_34  [key=2, style=dotted];
m1_3269 -> m1_3270  [key=0, style=solid];
m1_3269 -> m1_3271  [key=2, style=dotted];
m1_3263 -> m1_3264  [key=0, style=solid];
m1_3263 -> m1_520  [key=2, style=dotted];
m1_3268 -> m1_3269  [key=0, style=solid];
m1_3268 -> m1_520  [key=2, style=dotted];
m1_3264 -> m1_3266  [key=1, style=dashed, color=darkseagreen4, label=i1];
m1_3264 -> m1_3265  [key=0, style=solid];
m1_3264 -> m1_3271  [key=2, style=dotted];
m1_3265 -> m1_3266  [key=0, style=solid];
m1_3265 -> m1_1440  [key=2, style=dotted];
m1_3270 -> m1_3258  [key=0, style=bold, color=blue];
m1_854 -> m1_855  [key=0, style=solid];
m1_857 -> m1_34  [key=2, style=dotted];
m1_857 -> m1_858  [key=0, style=solid];
m1_859 -> m1_34  [key=2, style=dotted];
m1_859 -> m1_860  [key=0, style=solid];
m1_860 -> m1_34  [key=2, style=dotted];
m1_860 -> m1_861  [key=0, style=solid];
m1_861 -> m1_34  [key=2, style=dotted];
m1_861 -> m1_862  [key=0, style=solid];
m1_862 -> m1_34  [key=2, style=dotted];
m1_862 -> m1_863  [key=0, style=solid];
m1_863 -> m1_34  [key=2, style=dotted];
m1_863 -> m1_864  [key=0, style=solid];
m1_864 -> m1_34  [key=2, style=dotted];
m1_864 -> m1_865  [key=0, style=solid];
m1_865 -> m1_34  [key=2, style=dotted];
m1_865 -> m1_866  [key=0, style=solid];
m1_856 -> m1_857  [key=0, style=solid];
m1_856 -> m1_47  [key=2, style=dotted];
m1_856 -> m1_858  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_858 -> m1_859  [key=0, style=solid];
m1_858 -> m1_860  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m1_858 -> m1_861  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m1_858 -> m1_862  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m1_858 -> m1_863  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m1_858 -> m1_864  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m1_858 -> m1_865  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m1_858 -> m1_858  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m1_858 -> m1_867  [key=2, style=dotted];
m1_855 -> m1_856  [key=0, style=solid];
m1_855 -> m1_858  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m1_855 -> m1_682  [key=2, style=dotted];
m1_866 -> m1_854  [key=0, style=bold, color=blue];
m1_2195 -> m1_2196  [key=0, style=solid];
m1_2197 -> m1_12  [key=2, style=dotted];
m1_2197 -> m1_2198  [key=0, style=solid];
m1_2197 -> m1_2199  [key=1, style=dashed, color=darkseagreen4, label=cc];
m1_2197 -> m1_2200  [key=1, style=dashed, color=darkseagreen4, label=cc];
m1_2198 -> m1_34  [key=2, style=dotted];
m1_2198 -> m1_2199  [key=0, style=solid];
m1_2199 -> m1_34  [key=2, style=dotted];
m1_2199 -> m1_2200  [key=0, style=solid];
m1_2200 -> m1_34  [key=2, style=dotted];
m1_2200 -> m1_2201  [key=0, style=solid];
m1_2196 -> m1_2197  [key=0, style=solid];
m1_2196 -> m1_2196  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m1_2201 -> m1_2195  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid, color=red];
m1_0 -> m1_2  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchema"];
m1_0 -> m1_3  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_0 -> m1_4  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchema"];
m1_1 -> m1_2  [key=0, style=solid, color=red];
m1_1 -> m1_8  [key=2, style=dotted, color=green];
m1_1 -> m1_9  [key=1, style=dashed, color=green, label="lambda expression"];
m1_1 -> m1_6  [key=2, style=dotted, color=red];
m1_2 -> m1_3  [key=0, style=solid, color=green];
m1_2 -> m1_8  [key=2, style=dotted, color=green];
m1_2 -> m1_13  [key=1, style=dashed, color=green, label="lambda expression"];
m1_2 -> m1_6  [key=2, style=dotted];
m1_3 -> m1_4  [key=0, style=solid, color=green];
m1_3 -> m1_8  [key=2, style=dotted, color=green];
m1_3 -> m1_16  [key=1, style=dashed, color=green, label="lambda expression"];
m1_4 -> m1_5  [key=0, style=solid, color=green];
m1_4 -> m1_8  [key=2, style=dotted, color=green];
m1_4 -> m1_19  [key=1, style=dashed, color=green, label="lambda expression"];
m1_5 -> m1_8  [key=2, style=dotted];
m1_5 -> m1_6  [key=0, style=solid];
m1_5 -> m1_22  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_5 -> m1_0  [key=0, style=bold, color=blue];
m1_6 -> m1_8  [key=2, style=dotted];
m1_6 -> m1_7  [key=0, style=solid];
m1_6 -> m1_25  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_2661 -> m1_2662  [key=0, style=solid];
m1_2667 -> m1_12  [key=2, style=dotted];
m1_2667 -> m1_2668  [key=0, style=solid];
m1_2670 -> m1_12  [key=2, style=dotted];
m1_2670 -> m1_2671  [key=0, style=solid];
m1_2668 -> m1_34  [key=2, style=dotted];
m1_2668 -> m1_2669  [key=0, style=solid];
m1_2668 -> m1_2674  [key=2, style=dotted];
m1_2671 -> m1_34  [key=2, style=dotted];
m1_2671 -> m1_2672  [key=0, style=solid];
m1_2671 -> m1_2674  [key=2, style=dotted];
m1_2666 -> m1_2667  [key=0, style=solid];
m1_2666 -> m1_47  [key=2, style=dotted];
m1_2669 -> m1_2670  [key=0, style=solid];
m1_2669 -> m1_65  [key=2, style=dotted];
m1_2662 -> m1_2666  [key=1, style=dashed, color=darkseagreen4, label=classWithException];
m1_2662 -> m1_2669  [key=1, style=dashed, color=darkseagreen4, label=classWithException];
m1_2662 -> m1_2663  [key=0, style=solid];
m1_2662 -> m1_2658  [key=2, style=dotted];
m1_2662 -> m1_2665  [key=1, style=dashed, color=darkseagreen4, label=classWithException];
m1_2663 -> m1_2666  [key=0, style=solid];
m1_2663 -> m1_2673  [key=2, style=dotted];
m1_2665 -> m1_2666  [key=0, style=solid];
m1_2665 -> m1_64  [key=2, style=dotted];
m1_2664 -> m1_2665  [key=0, style=solid];
m1_2672 -> m1_2661  [key=0, style=bold, color=blue];
m1_2652 -> m1_2653  [key=0, style=solid];
m1_2654 -> m1_65  [key=2, style=dotted];
m1_2654 -> m1_2655  [key=0, style=solid];
m1_2655 -> m1_67  [key=2, style=dotted];
m1_2655 -> m1_2656  [key=0, style=solid];
m1_2653 -> m1_2654  [key=0, style=solid];
m1_2653 -> m1_2657  [key=2, style=dotted];
m1_2656 -> m1_2652  [key=0, style=bold, color=blue];
m1_148 -> m1_141  [key=0, style=bold, color=blue];
m1_2094 -> m1_2095  [key=0, style=solid];
m1_2102 -> m1_12  [key=2, style=dotted];
m1_2102 -> m1_2103  [key=0, style=solid];
m1_2103 -> m1_34  [key=2, style=dotted];
m1_2103 -> m1_2104  [key=0, style=solid];
m1_2099 -> m1_2102  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_2099 -> m1_2100  [key=0, style=solid];
m1_2099 -> m1_65  [key=2, style=dotted];
m1_2099 -> m1_2101  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_2101 -> m1_2102  [key=0, style=solid];
m1_2101 -> m1_67  [key=2, style=dotted];
m1_2095 -> m1_2103  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m1_2095 -> m1_2099  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m1_2095 -> m1_2096  [key=0, style=solid];
m1_2095 -> m1_2105  [key=2, style=dotted];
m1_2095 -> m1_2098  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m1_2098 -> m1_2099  [key=0, style=solid];
m1_2100 -> m1_2101  [key=0, style=solid];
m1_2100 -> m1_2100  [key=3, color=darkorchid, style=bold, label="Local variable string expected"];
m1_2096 -> m1_2098  [key=1, style=dashed, color=darkseagreen4, label=document];
m1_2096 -> m1_2097  [key=0, style=solid];
m1_2096 -> m1_2106  [key=2, style=dotted];
m1_2097 -> m1_2098  [key=0, style=solid];
m1_2097 -> m1_2107  [key=2, style=dotted];
m1_2104 -> m1_2094  [key=0, style=bold, color=blue];
m1_1854 -> m1_1855  [key=0, style=solid];
m1_1855 -> m1_1856  [key=0, style=solid];
m1_1855 -> m1_1857  [key=2, style=dotted];
m1_1856 -> m1_1854  [key=0, style=bold, color=blue];
m1_3186 -> m1_3180  [key=3, color=darkorchid, style=bold, label="Parameter variable T obj"];
m1_3186 -> m1_3187  [key=0, style=solid];
m1_3186 -> m1_3191  [key=3, color=darkorchid, style=bold, label="method methodReturn T SerializeAndDeserialize"];
m1_3187 -> m1_3190  [key=2, style=dotted];
m1_3187 -> m1_3188  [key=0, style=solid];
m1_3188 -> m1_3189  [key=0, style=solid];
m1_3188 -> m1_3191  [key=2, style=dotted];
m1_3189 -> m1_3186  [key=0, style=bold, color=blue];
m1_2377 -> m1_2378  [key=0, style=solid];
m1_2381 -> m1_12  [key=2, style=dotted];
m1_2381 -> m1_2382  [key=0, style=solid];
m1_2381 -> m1_2383  [key=1, style=dashed, color=darkseagreen4, label=obj];
m1_2381 -> m1_2384  [key=1, style=dashed, color=darkseagreen4, label=obj];
m1_2382 -> m1_34  [key=2, style=dotted];
m1_2382 -> m1_2383  [key=0, style=solid];
m1_2383 -> m1_34  [key=2, style=dotted];
m1_2383 -> m1_2384  [key=0, style=solid];
m1_2384 -> m1_34  [key=2, style=dotted];
m1_2384 -> m1_2385  [key=0, style=solid];
m1_2380 -> m1_2381  [key=0, style=solid];
m1_2380 -> m1_47  [key=2, style=dotted];
m1_2378 -> m1_2380  [key=1, style=dashed, color=darkseagreen4, label=obj];
m1_2378 -> m1_2379  [key=0, style=solid];
m1_2378 -> m1_2386  [key=2, style=dotted];
m1_2379 -> m1_2380  [key=0, style=solid];
m1_2379 -> m1_2387  [key=2, style=dotted];
m1_2385 -> m1_2377  [key=0, style=bold, color=blue];
m1_1384 -> m1_1385  [key=0, style=solid];
m1_1389 -> m1_12  [key=2, style=dotted];
m1_1389 -> m1_1390  [key=0, style=solid];
m1_1390 -> m1_34  [key=2, style=dotted];
m1_1390 -> m1_1391  [key=0, style=solid];
m1_1390 -> m1_1381  [key=2, style=dotted];
m1_1387 -> m1_1389  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_1387 -> m1_1388  [key=0, style=solid];
m1_1387 -> m1_65  [key=2, style=dotted];
m1_1388 -> m1_1389  [key=0, style=solid];
m1_1388 -> m1_67  [key=2, style=dotted];
m1_1385 -> m1_1387  [key=1, style=dashed, color=darkseagreen4, label=c];
m1_1385 -> m1_1386  [key=0, style=solid];
m1_1385 -> m1_1375  [key=2, style=dotted];
m1_1386 -> m1_1387  [key=0, style=solid];
m1_1391 -> m1_1384  [key=0, style=bold, color=blue];
m1_2939 -> m1_2940  [key=0, style=solid];
m1_2940 -> m1_8  [key=2, style=dotted];
m1_2940 -> m1_2941  [key=0, style=solid];
m1_2940 -> m1_2942  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_2941 -> m1_2939  [key=0, style=bold, color=blue];
m1_2626 -> m1_2627  [key=0, style=solid];
m1_2626 -> m1_2628  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_2626 -> m1_2629  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_2627 -> m1_2628  [key=0, style=solid];
m1_2628 -> m1_2629  [key=0, style=solid];
m1_2629 -> m1_2630  [key=0, style=solid];
m1_2630 -> m1_2626  [key=0, style=bold, color=blue];
m1_1779 -> m1_1780  [key=0, style=solid];
m1_1783 -> m1_34  [key=2, style=dotted];
m1_1783 -> m1_1784  [key=0, style=solid];
m1_1781 -> m1_1783  [key=1, style=dashed, color=darkseagreen4, label=cISO];
m1_1781 -> m1_1782  [key=0, style=solid];
m1_1781 -> m1_95  [key=2, style=dotted];
m1_1781 -> m1_878  [key=2, style=dotted];
m1_1781 -> m1_96  [key=2, style=dotted];
m1_1782 -> m1_1783  [key=0, style=solid];
m1_1782 -> m1_95  [key=2, style=dotted];
m1_1782 -> m1_96  [key=2, style=dotted];
m1_1780 -> m1_1781  [key=0, style=solid];
m1_1780 -> m1_1782  [key=1, style=dashed, color=darkseagreen4, label=jsonIsoText];
m1_1780 -> m1_1780  [key=3, color=darkorchid, style=bold, label="Local variable string jsonIsoText"];
m1_1784 -> m1_1779  [key=0, style=bold, color=blue];
m1_3352 -> m1_3353  [key=0, style=solid];
m1_3357 -> m1_34  [key=2, style=dotted];
m1_3357 -> m1_3357  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffset];
m1_3357 -> m1_3358  [key=0, style=solid];
m1_3357 -> m1_839  [key=2, style=dotted];
m1_3358 -> m1_34  [key=2, style=dotted];
m1_3358 -> m1_3358  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffset];
m1_3358 -> m1_3359  [key=0, style=solid];
m1_3358 -> m1_3361  [key=2, style=dotted];
m1_3356 -> m1_3357  [key=0, style=solid];
m1_3355 -> m1_3356  [key=0, style=solid];
m1_3355 -> m1_3360  [key=2, style=dotted];
m1_3354 -> m1_95  [key=2, style=dotted];
m1_3354 -> m1_3355  [key=0, style=solid];
m1_3353 -> m1_3355  [key=1, style=dashed, color=darkseagreen4, label=content];
m1_3353 -> m1_3354  [key=0, style=solid];
m1_3353 -> m1_3353  [key=3, color=darkorchid, style=bold, label="Local variable string content"];
m1_3359 -> m1_3352  [key=0, style=bold, color=blue];
m1_1010 -> m1_1011  [key=0, style=solid];
m1_1014 -> m1_12  [key=2, style=dotted];
m1_1014 -> m1_1015  [key=0, style=solid];
m1_1013 -> m1_34  [key=2, style=dotted];
m1_1013 -> m1_1014  [key=0, style=solid];
m1_1015 -> m1_34  [key=2, style=dotted];
m1_1015 -> m1_1016  [key=0, style=solid];
m1_1012 -> m1_1014  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_1012 -> m1_1013  [key=0, style=solid];
m1_1012 -> m1_47  [key=2, style=dotted];
m1_1011 -> m1_1012  [key=0, style=solid];
m1_1011 -> m1_1017  [key=2, style=dotted];
m1_1016 -> m1_1010  [key=0, style=bold, color=blue];
m1_1332 -> m1_1333  [key=0, style=solid];
m1_1334 -> m1_12  [key=2, style=dotted];
m1_1334 -> m1_1335  [key=0, style=solid];
m1_1334 -> m1_1336  [key=1, style=dashed, color=darkseagreen4, label=o];
m1_1334 -> m1_1337  [key=1, style=dashed, color=darkseagreen4, label=o];
m1_1334 -> m1_1338  [key=1, style=dashed, color=darkseagreen4, label=o];
m1_1335 -> m1_34  [key=2, style=dotted];
m1_1335 -> m1_1336  [key=0, style=solid];
m1_1336 -> m1_34  [key=2, style=dotted];
m1_1336 -> m1_1337  [key=0, style=solid];
m1_1337 -> m1_34  [key=2, style=dotted];
m1_1337 -> m1_1338  [key=0, style=solid];
m1_1338 -> m1_34  [key=2, style=dotted];
m1_1338 -> m1_1339  [key=0, style=solid];
m1_1333 -> m1_1334  [key=0, style=solid];
m1_1333 -> m1_2451  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m1_1339 -> m1_1332  [key=0, style=bold, color=blue];
m1_203 -> m1_204  [key=0, style=solid];
m1_3190 -> m1_3186  [key=3, color=darkorchid, style=bold, label="Parameter variable T obj"];
m1_3190 -> m1_3192  [key=0, style=solid];
m1_3190 -> m1_3195  [key=1, style=dashed, color=darkseagreen4, label=T];
m1_3193 -> m1_119  [key=2, style=dotted];
m1_3193 -> m1_3194  [key=0, style=solid];
m1_3193 -> m1_3195  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m1_3196 -> m1_2714  [key=2, style=dotted];
m1_3196 -> m1_3197  [key=0, style=solid];
m1_3194 -> m1_1600  [key=2, style=dotted];
m1_3194 -> m1_3195  [key=0, style=solid];
m1_3192 -> m1_3193  [key=0, style=solid];
m1_3192 -> m1_2709  [key=2, style=dotted];
m1_3192 -> m1_3196  [key=1, style=dashed, color=darkseagreen4, label=stringWriter];
m1_3192 -> m1_3195  [key=1, style=dashed, color=darkseagreen4, label=stringWriter];
m1_3195 -> m1_3196  [key=0, style=solid];
m1_3195 -> m1_561  [key=2, style=dotted];
m1_3197 -> m1_3190  [key=0, style=bold, color=blue];
m1_2880 -> m1_2881  [key=0, style=solid];
m1_2884 -> m1_12  [key=2, style=dotted];
m1_2884 -> m1_2885  [key=0, style=solid];
m1_2884 -> m1_2886  [key=1, style=dashed, color=darkseagreen4, label=actual];
m1_2884 -> m1_2887  [key=1, style=dashed, color=darkseagreen4, label=actual];
m1_2885 -> m1_34  [key=2, style=dotted];
m1_2885 -> m1_2886  [key=0, style=solid];
m1_2885 -> m1_976  [key=2, style=dotted];
m1_2886 -> m1_34  [key=2, style=dotted];
m1_2886 -> m1_2887  [key=0, style=solid];
m1_2886 -> m1_976  [key=2, style=dotted];
m1_2882 -> m1_2884  [key=1, style=dashed, color=darkseagreen4, label=jsonString];
m1_2882 -> m1_2883  [key=0, style=solid];
m1_2882 -> m1_65  [key=2, style=dotted];
m1_2883 -> m1_2884  [key=0, style=solid];
m1_2883 -> m1_67  [key=2, style=dotted];
m1_2887 -> m1_2888  [key=0, style=solid];
m1_2881 -> m1_2882  [key=0, style=solid];
m1_2881 -> m1_976  [key=2, style=dotted];
m1_2881 -> m1_831  [key=2, style=dotted];
m1_2881 -> m1_2890  [key=2, style=dotted];
m1_2888 -> m1_2889  [key=0, style=solid];
m1_2888 -> m1_177  [key=2, style=dotted];
m1_2888 -> m1_2749  [key=2, style=dotted];
m1_2889 -> m1_2880  [key=0, style=bold, color=blue];
m1_141 -> m1_142  [key=0, style=solid];
m1_141 -> m1_13  [key=2, style=dotted];
m1_144 -> m1_12  [key=2, style=dotted];
m1_144 -> m1_145  [key=0, style=solid];
m1_144 -> m1_146  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m1_144 -> m1_147  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m1_144 -> m1_185  [key=0, style=solid];
m1_144 -> m1_187  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaType?"];
m1_145 -> m1_34  [key=2, style=dotted];
m1_145 -> m1_146  [key=0, style=solid];
m1_146 -> m1_34  [key=2, style=dotted];
m1_146 -> m1_147  [key=0, style=solid];
m1_147 -> m1_34  [key=2, style=dotted];
m1_147 -> m1_148  [key=0, style=solid];
m1_143 -> m1_144  [key=0, style=solid];
m1_143 -> m1_47  [key=2, style=dotted];
m1_142 -> m1_145  [key=1, style=dashed, color=darkseagreen4, label=input];
m1_142 -> m1_146  [key=1, style=dashed, color=darkseagreen4, label=input];
m1_142 -> m1_147  [key=1, style=dashed, color=darkseagreen4, label=input];
m1_142 -> m1_143  [key=0, style=solid];
m1_142 -> m1_149  [key=2, style=dotted];
m1_142 -> m1_40  [key=0, style=bold, color=blue];
m1_3225 -> m1_3226  [key=0, style=solid];
m1_3234 -> m1_8  [key=2, style=dotted];
m1_3234 -> m1_3235  [key=0, style=solid];
m1_3234 -> m1_3236  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_3231 -> m1_34  [key=2, style=dotted];
m1_3231 -> m1_3232  [key=0, style=solid];
m1_3226 -> m1_3234  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_3226 -> m1_3226  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m1_3226 -> m1_3227  [key=0, style=solid];
m1_3226 -> m1_3229  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_3226 -> m1_3237  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_3233 -> m1_3234  [key=0, style=solid];
m1_3233 -> m1_558  [key=2, style=dotted];
m1_3233 -> m1_3237  [key=1, style=dashed, color=darkseagreen4, label=s];
m1_3229 -> m1_3231  [key=1, style=dashed, color=darkseagreen4, label=o];
m1_3229 -> m1_3230  [key=0, style=solid];
m1_3229 -> m1_117  [key=2, style=dotted];
m1_3229 -> m1_118  [key=2, style=dotted];
m1_3229 -> m1_2297  [key=2, style=dotted];
m1_3230 -> m1_3231  [key=0, style=solid];
m1_3230 -> m1_520  [key=2, style=dotted];
m1_3232 -> m1_3233  [key=0, style=solid];
m1_3227 -> m1_3233  [key=1, style=dashed, color=darkseagreen4, label=settings];
m1_3227 -> m1_3232  [key=1, style=dashed, color=darkseagreen4, label=settings];
m1_3227 -> m1_3228  [key=0, style=solid];
m1_3227 -> m1_95  [key=2, style=dotted];
m1_3228 -> m1_3229  [key=0, style=solid];
m1_3228 -> m1_558  [key=2, style=dotted];
m1_3235 -> m1_3225  [key=0, style=bold, color=blue];
m1_2012 -> m1_2013  [key=0, style=solid];
m1_2014 -> m1_65  [key=2, style=dotted];
m1_2014 -> m1_2015  [key=0, style=solid];
m1_2017 -> m1_65  [key=2, style=dotted];
m1_2017 -> m1_2018  [key=0, style=solid];
m1_2015 -> m1_67  [key=2, style=dotted];
m1_2015 -> m1_2016  [key=0, style=solid];
m1_2018 -> m1_67  [key=2, style=dotted];
m1_2018 -> m1_2019  [key=0, style=solid];
m1_2013 -> m1_2014  [key=0, style=solid];
m1_2013 -> m1_2020  [key=2, style=dotted];
m1_2016 -> m1_2017  [key=0, style=solid];
m1_2016 -> m1_2021  [key=2, style=dotted];
m1_2019 -> m1_2012  [key=0, style=bold, color=blue];
m1_3599 -> m1_3600  [key=0, style=solid];
m1_3600 -> m1_3583  [key=2, style=dotted];
m1_3600 -> m1_3601  [key=0, style=solid];
m1_3601 -> m1_3599  [key=0, style=bold, color=blue];
m1_161 -> m1_162  [key=0, style=solid];
m1_161 -> m1_47  [key=2, style=dotted];
m1_2430 -> m1_2419  [key=3, color=darkorchid, style=bold, label="Parameter variable string serStr"];
m1_2430 -> m1_2431  [key=0, style=solid];
m1_2431 -> m1_95  [key=2, style=dotted];
m1_2431 -> m1_96  [key=2, style=dotted];
m1_2431 -> m1_2432  [key=0, style=solid];
m1_2432 -> m1_2430  [key=0, style=bold, color=blue];
m1_2951 -> m1_2952  [key=0, style=solid];
m1_2952 -> m1_8  [key=2, style=dotted];
m1_2952 -> m1_2953  [key=0, style=solid];
m1_2952 -> m1_2954  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_2953 -> m1_2951  [key=0, style=bold, color=blue];
m1_1225 -> m1_1226  [key=0, style=solid];
m1_1227 -> m1_12  [key=2, style=dotted];
m1_1227 -> m1_1228  [key=0, style=solid];
m1_1226 -> m1_1227  [key=0, style=solid];
m1_1226 -> m1_1226  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m1_1228 -> m1_1225  [key=0, style=bold, color=blue];
m1_1715 -> m1_1716  [key=0, style=solid];
m1_1716 -> m1_12  [key=2, style=dotted];
m1_1716 -> m1_1717  [key=0, style=solid];
m1_1716 -> m1_1718  [key=1, style=dashed, color=darkseagreen4, label=d];
m1_1716 -> m1_1719  [key=1, style=dashed, color=darkseagreen4, label=d];
m1_1716 -> m1_1720  [key=1, style=dashed, color=darkseagreen4, label=d];
m1_1716 -> m1_1721  [key=1, style=dashed, color=darkseagreen4, label=d];
m1_1716 -> m1_1722  [key=1, style=dashed, color=darkseagreen4, label=d];
m1_1716 -> m1_1723  [key=1, style=dashed, color=darkseagreen4, label=d];
m1_1716 -> m1_1724  [key=1, style=dashed, color=darkseagreen4, label=d];
m1_1716 -> m1_1725  [key=1, style=dashed, color=darkseagreen4, label=d];
m1_1719 -> m1_34  [key=2, style=dotted];
m1_1719 -> m1_1720  [key=0, style=solid];
m1_1719 -> m1_122  [key=2, style=dotted];
m1_1720 -> m1_34  [key=2, style=dotted];
m1_1720 -> m1_1721  [key=0, style=solid];
m1_1720 -> m1_122  [key=2, style=dotted];
m1_1721 -> m1_34  [key=2, style=dotted];
m1_1721 -> m1_1722  [key=0, style=solid];
m1_1722 -> m1_34  [key=2, style=dotted];
m1_1722 -> m1_1723  [key=0, style=solid];
m1_1723 -> m1_34  [key=2, style=dotted];
m1_1723 -> m1_1724  [key=0, style=solid];
m1_1724 -> m1_34  [key=2, style=dotted];
m1_1724 -> m1_1725  [key=0, style=solid];
m1_1725 -> m1_34  [key=2, style=dotted];
m1_1725 -> m1_1726  [key=0, style=solid];
m1_1717 -> m1_1718  [key=0, style=solid];
m1_1717 -> m1_520  [key=2, style=dotted];
m1_1718 -> m1_1719  [key=0, style=solid];
m1_1718 -> m1_520  [key=2, style=dotted];
m1_1726 -> m1_1715  [key=0, style=bold, color=blue];
m1_1546 -> m1_1547  [key=0, style=solid];
m1_1548 -> m1_8  [key=2, style=dotted];
m1_1548 -> m1_1549  [key=0, style=solid];
m1_1548 -> m1_1550  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_1547 -> m1_1548  [key=0, style=solid];
m1_1547 -> m1_1551  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_1547 -> m1_1512  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m1_1549 -> m1_1546  [key=0, style=bold, color=blue];
m1_178 -> m1_179  [key=0, style=solid];
m1_178 -> m1_160  [key=2, style=dotted];
m1_181 -> m1_34  [key=2, style=dotted];
m1_181 -> m1_182  [key=0, style=solid];
m1_182 -> m1_34  [key=2, style=dotted];
m1_182 -> m1_183  [key=0, style=solid];
m1_182 -> m1_162  [key=0, style=bold, color=blue];
m1_185 -> m1_34  [key=2, style=dotted];
m1_185 -> m1_186  [key=0, style=solid];
m1_185 -> m1_187  [key=0, style=solid];
m1_186 -> m1_34  [key=2, style=dotted];
m1_186 -> m1_187  [key=0, style=solid];
m1_186 -> m1_188  [key=0, style=solid];
m1_187 -> m1_34  [key=2, style=dotted];
m1_187 -> m1_188  [key=0, style=solid];
m1_191 -> m1_34  [key=2, style=dotted];
m1_191 -> m1_192  [key=0, style=solid];
m1_191 -> m1_198  [key=1, style=dashed, color=darkseagreen4, label=schemaType];
m1_191 -> m1_200  [key=1, style=dashed, color=darkseagreen4, label=schemaType];
m1_191 -> m1_202  [key=1, style=dashed, color=darkseagreen4, label=schemaType];
m1_191 -> m1_204  [key=1, style=dashed, color=darkseagreen4, label=schemaType];
m1_191 -> m1_213  [key=1, style=dashed, color=darkseagreen4, label=schemaType];
m1_191 -> m1_217  [key=1, style=dashed, color=darkseagreen4, label=schemaType];
m1_191 -> m1_219  [key=1, style=dashed, color=darkseagreen4, label=schemaType];
m1_191 -> m1_221  [key=1, style=dashed, color=darkseagreen4, label=schemaType];
m1_195 -> m1_34  [key=2, style=dotted];
m1_195 -> m1_196  [key=0, style=solid];
m1_195 -> m1_199  [key=0, style=solid];
m1_195 -> m1_201  [key=0, style=solid];
m1_195 -> m1_203  [key=0, style=solid];
m1_195 -> m1_205  [key=0, style=solid];
m1_195 -> m1_214  [key=0, style=solid];
m1_195 -> m1_218  [key=0, style=solid];
m1_195 -> m1_220  [key=0, style=solid];
m1_195 -> m1_222  [key=0, style=solid];
m1_196 -> m1_34  [key=2, style=dotted];
m1_196 -> m1_197  [key=0, style=solid];
m1_180 -> m1_181  [key=0, style=solid];
m1_180 -> m1_182  [key=1, style=dashed, color=darkseagreen4, label=o];
m1_180 -> m1_183  [key=1, style=dashed, color=darkseagreen4, label=o];
m1_180 -> m1_184  [key=1, style=dashed, color=darkseagreen4, label=o];
m1_180 -> m1_185  [key=1, style=dashed, color=darkseagreen4, label=o];
m1_180 -> m1_186  [key=1, style=dashed, color=darkseagreen4, label=o];
m1_180 -> m1_187  [key=1, style=dashed, color=darkseagreen4, label=o];
m1_180 -> m1_199  [key=2, style=dotted];
m1_180 -> m1_188  [key=1, style=dashed, color=darkseagreen4, label=o];
m1_188 -> m1_189  [key=0, style=solid];
m1_188 -> m1_201  [key=2, style=dotted];
m1_188 -> m1_202  [key=2, style=dotted];
m1_188 -> m1_203  [key=2, style=dotted];
m1_188 -> m1_144  [key=0, style=bold, color=blue];
m1_190 -> m1_191  [key=0, style=solid];
m1_190 -> m1_199  [key=2, style=dotted];
m1_190 -> m1_192  [key=1, style=dashed, color=darkseagreen4, label=o];
m1_190 -> m1_194  [key=0, style=solid];
m1_190 -> m1_164  [key=2, style=dotted];
m1_192 -> m1_193  [key=0, style=solid];
m1_192 -> m1_201  [key=2, style=dotted];
m1_192 -> m1_202  [key=2, style=dotted];
m1_192 -> m1_203  [key=2, style=dotted];
m1_192 -> m1_194  [key=0, style=solid];
m1_192 -> m1_224  [key=2, style=dotted];
m1_194 -> m1_195  [key=0, style=solid];
m1_194 -> m1_196  [key=1, style=dashed, color=darkseagreen4, label=o];
m1_194 -> m1_199  [key=2, style=dotted];
m1_194 -> m1_197  [key=1, style=dashed, color=darkseagreen4, label=o];
m1_194 -> m1_226  [key=2, style=dotted];
m1_194 -> m1_222  [key=1, style=dashed, color=darkseagreen4, label=typeCode];
m1_197 -> m1_198  [key=0, style=solid];
m1_197 -> m1_201  [key=2, style=dotted];
m1_197 -> m1_202  [key=2, style=dotted];
m1_197 -> m1_203  [key=2, style=dotted];
m1_179 -> m1_180  [key=0, style=solid];
m1_179 -> m1_188  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_179 -> m1_179  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m1_179 -> m1_173  [key=0, style=solid];
m1_179 -> m1_161  [key=2, style=dotted];
m1_189 -> m1_190  [key=0, style=solid];
m1_189 -> m1_192  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_189 -> m1_198  [key=1, style=dashed, color=darkseagreen4, label=schemaType];
m1_189 -> m1_200  [key=1, style=dashed, color=darkseagreen4, label=schemaType];
m1_189 -> m1_202  [key=1, style=dashed, color=darkseagreen4, label=schemaType];
m1_189 -> m1_204  [key=1, style=dashed, color=darkseagreen4, label=schemaType];
m1_189 -> m1_213  [key=1, style=dashed, color=darkseagreen4, label=schemaType];
m1_189 -> m1_217  [key=1, style=dashed, color=darkseagreen4, label=schemaType];
m1_189 -> m1_219  [key=1, style=dashed, color=darkseagreen4, label=schemaType];
m1_189 -> m1_221  [key=1, style=dashed, color=darkseagreen4, label=schemaType];
m1_193 -> m1_194  [key=0, style=solid];
m1_193 -> m1_197  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_193 -> m1_225  [key=2, style=dotted];
m1_193 -> m1_193  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_193 -> m1_222  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_198 -> m1_178  [key=0, style=bold, color=blue];
m1_198 -> m1_223  [key=0, style=solid];
m1_667 -> m1_668  [key=0, style=solid];
m1_675 -> m1_34  [key=2, style=dotted];
m1_675 -> m1_676  [key=0, style=solid];
m1_676 -> m1_34  [key=2, style=dotted];
m1_676 -> m1_677  [key=0, style=solid];
m1_676 -> m1_683  [key=2, style=dotted];
m1_677 -> m1_34  [key=2, style=dotted];
m1_677 -> m1_678  [key=0, style=solid];
m1_678 -> m1_34  [key=2, style=dotted];
m1_678 -> m1_679  [key=0, style=solid];
m1_679 -> m1_34  [key=2, style=dotted];
m1_679 -> m1_680  [key=0, style=solid];
m1_680 -> m1_34  [key=2, style=dotted];
m1_680 -> m1_681  [key=0, style=solid];
m1_674 -> m1_675  [key=0, style=solid];
m1_674 -> m1_676  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m1_674 -> m1_677  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m1_674 -> m1_678  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m1_674 -> m1_679  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m1_674 -> m1_680  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m1_674 -> m1_666  [key=2, style=dotted];
m1_673 -> m1_47  [key=2, style=dotted];
m1_673 -> m1_674  [key=0, style=solid];
m1_670 -> m1_683  [key=2, style=dotted];
m1_670 -> m1_671  [key=0, style=solid];
m1_668 -> m1_673  [key=1, style=dashed, color=darkseagreen4, label=product];
m1_668 -> m1_670  [key=1, style=dashed, color=darkseagreen4, label=product];
m1_668 -> m1_669  [key=0, style=solid];
m1_668 -> m1_682  [key=2, style=dotted];
m1_668 -> m1_671  [key=1, style=dashed, color=darkseagreen4, label=product];
m1_668 -> m1_672  [key=1, style=dashed, color=darkseagreen4, label=product];
m1_672 -> m1_673  [key=0, style=solid];
m1_669 -> m1_670  [key=0, style=solid];
m1_671 -> m1_672  [key=0, style=solid];
m1_681 -> m1_667  [key=0, style=bold, color=blue];
m1_3572 -> m1_3579  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_3572 -> m1_3573  [key=0, style=solid];
m1_3572 -> m1_3575  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_3572 -> m1_3577  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_3580 -> m1_556  [key=2, style=dotted];
m1_3580 -> m1_3582  [key=0, style=solid];
m1_3579 -> m1_3580  [key=0, style=solid];
m1_3579 -> m1_3581  [key=0, style=solid];
m1_3574 -> m1_3582  [key=0, style=solid];
m1_3576 -> m1_3582  [key=0, style=solid];
m1_3578 -> m1_3582  [key=0, style=solid];
m1_3577 -> m1_3579  [key=0, style=solid];
m1_3577 -> m1_3578  [key=0, style=solid];
m1_3581 -> m1_3582  [key=0, style=solid];
m1_3581 -> m1_3583  [key=2, style=dotted];
m1_3573 -> m1_3574  [key=0, style=solid];
m1_3573 -> m1_3575  [key=0, style=solid];
m1_3575 -> m1_3576  [key=0, style=solid];
m1_3575 -> m1_3577  [key=0, style=solid];
m1_3582 -> m1_3572  [key=0, style=bold, color=blue];
m1_2321 -> m1_2322  [key=0, style=solid];
m1_2330 -> m1_12  [key=2, style=dotted];
m1_2330 -> m1_2331  [key=0, style=solid];
m1_2330 -> m1_2332  [key=1, style=dashed, color=darkseagreen4, label=newExpando];
m1_2330 -> m1_2333  [key=1, style=dashed, color=darkseagreen4, label=newExpando];
m1_2330 -> m1_2334  [key=1, style=dashed, color=darkseagreen4, label=newExpando];
m1_2330 -> m1_2335  [key=1, style=dashed, color=darkseagreen4, label=newExpando];
m1_2330 -> m1_2336  [key=1, style=dashed, color=darkseagreen4, label=newExpando];
m1_2332 -> m1_34  [key=2, style=dotted];
m1_2332 -> m1_2333  [key=0, style=solid];
m1_2334 -> m1_34  [key=2, style=dotted];
m1_2334 -> m1_2335  [key=0, style=solid];
m1_2338 -> m1_34  [key=2, style=dotted];
m1_2338 -> m1_2339  [key=0, style=solid];
m1_2340 -> m1_34  [key=2, style=dotted];
m1_2340 -> m1_2341  [key=0, style=solid];
m1_2328 -> m1_2330  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_2328 -> m1_2329  [key=0, style=solid];
m1_2328 -> m1_2343  [key=2, style=dotted];
m1_2329 -> m1_2330  [key=0, style=solid];
m1_2329 -> m1_67  [key=2, style=dotted];
m1_2331 -> m1_2332  [key=0, style=solid];
m1_2331 -> m1_469  [key=2, style=dotted];
m1_2333 -> m1_2334  [key=0, style=solid];
m1_2333 -> m1_469  [key=2, style=dotted];
m1_2335 -> m1_2336  [key=0, style=solid];
m1_2335 -> m1_469  [key=2, style=dotted];
m1_2336 -> m1_2338  [key=1, style=dashed, color=darkseagreen4, label=o];
m1_2336 -> m1_2340  [key=1, style=dashed, color=darkseagreen4, label=o];
m1_2336 -> m1_2337  [key=0, style=solid];
m1_2336 -> m1_2339  [key=1, style=dashed, color=darkseagreen4, label=o];
m1_2322 -> m1_2332  [key=1, style=dashed, color=darkseagreen4, label=expando];
m1_2322 -> m1_2334  [key=1, style=dashed, color=darkseagreen4, label=expando];
m1_2322 -> m1_2338  [key=1, style=dashed, color=darkseagreen4, label=expando];
m1_2322 -> m1_2340  [key=1, style=dashed, color=darkseagreen4, label=expando];
m1_2322 -> m1_2328  [key=1, style=dashed, color=darkseagreen4, label=expando];
m1_2322 -> m1_2323  [key=0, style=solid];
m1_2322 -> m1_2342  [key=2, style=dotted];
m1_2322 -> m1_2324  [key=1, style=dashed, color=darkseagreen4, label=expando];
m1_2322 -> m1_2325  [key=1, style=dashed, color=darkseagreen4, label=expando];
m1_2322 -> m1_2326  [key=1, style=dashed, color=darkseagreen4, label=expando];
m1_2322 -> m1_2327  [key=1, style=dashed, color=darkseagreen4, label=expando];
m1_2337 -> m1_2338  [key=0, style=solid];
m1_2337 -> m1_469  [key=2, style=dotted];
m1_2339 -> m1_2340  [key=0, style=solid];
m1_2339 -> m1_469  [key=2, style=dotted];
m1_2327 -> m1_2328  [key=0, style=solid];
m1_2327 -> m1_831  [key=2, style=dotted];
m1_2323 -> m1_2324  [key=0, style=solid];
m1_2324 -> m1_2325  [key=0, style=solid];
m1_2325 -> m1_2342  [key=2, style=dotted];
m1_2325 -> m1_2326  [key=0, style=solid];
m1_2326 -> m1_2327  [key=0, style=solid];
m1_2341 -> m1_2321  [key=0, style=bold, color=blue];
m1_413 -> m1_414  [key=0, style=solid];
m1_414 -> m1_415  [key=0, style=solid];
m1_415 -> m1_413  [key=0, style=bold, color=blue];
m1_3587 -> m1_3588  [key=0, style=solid];
m1_3588 -> m1_3583  [key=2, style=dotted];
m1_3588 -> m1_3589  [key=0, style=solid];
m1_3589 -> m1_3587  [key=0, style=bold, color=blue];
m1_1589 -> m1_1590  [key=0, style=solid];
m1_1591 -> m1_12  [key=2, style=dotted];
m1_1591 -> m1_1592  [key=0, style=solid];
m1_1592 -> m1_34  [key=2, style=dotted];
m1_1592 -> m1_1593  [key=0, style=solid];
m1_1590 -> m1_1591  [key=0, style=solid];
m1_1590 -> m1_1590  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m1_1593 -> m1_1589  [key=0, style=bold, color=blue];
m1_3246 -> m1_3247  [key=0, style=solid];
m1_3247 -> m1_8  [key=2, style=dotted];
m1_3247 -> m1_3247  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m1_3247 -> m1_3248  [key=0, style=solid];
m1_3247 -> m1_3249  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_3248 -> m1_3246  [key=0, style=bold, color=blue];
m1_3698 -> m1_3699  [key=0, style=solid];
m1_3705 -> m1_34  [key=2, style=dotted];
m1_3705 -> m1_3706  [key=0, style=solid];
m1_3705 -> m1_1413  [key=2, style=dotted];
m1_3699 -> m1_3705  [key=1, style=dashed, color=darkseagreen4, label=dt];
m1_3699 -> m1_683  [key=2, style=dotted];
m1_3699 -> m1_3700  [key=0, style=solid];
m1_3699 -> m1_3702  [key=1, style=dashed, color=darkseagreen4, label=dt];
m1_3704 -> m1_3705  [key=0, style=solid];
m1_3704 -> m1_96  [key=2, style=dotted];
m1_3700 -> m1_3652  [key=3, color=darkorchid, style=bold, label="Local variable string dateFormatString"];
m1_3700 -> m1_3701  [key=0, style=solid];
m1_3702 -> m1_3704  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_3702 -> m1_463  [key=2, style=dotted];
m1_3702 -> m1_554  [key=2, style=dotted];
m1_3702 -> m1_3703  [key=0, style=solid];
m1_3701 -> m1_3704  [key=1, style=dashed, color=darkseagreen4, label=settings];
m1_3701 -> m1_95  [key=2, style=dotted];
m1_3701 -> m1_3702  [key=0, style=solid];
m1_3703 -> m1_3704  [key=0, style=solid];
m1_3703 -> m1_67  [key=2, style=dotted];
m1_3706 -> m1_3698  [key=0, style=bold, color=blue];
m1_1637 -> m1_1638  [key=0, style=solid];
m1_1642 -> m1_12  [key=2, style=dotted];
m1_1642 -> m1_1643  [key=0, style=solid];
m1_1643 -> m1_34  [key=2, style=dotted];
m1_1643 -> m1_1643  [key=1, style=dashed, color=darkseagreen4, label=structTest];
m1_1643 -> m1_1644  [key=0, style=solid];
m1_1643 -> m1_1645  [key=1, style=dashed, color=darkseagreen4, label=structTest];
m1_1644 -> m1_34  [key=2, style=dotted];
m1_1644 -> m1_1645  [key=0, style=solid];
m1_1645 -> m1_34  [key=2, style=dotted];
m1_1645 -> m1_1645  [key=1, style=dashed, color=darkseagreen4, label=structTest];
m1_1645 -> m1_1646  [key=0, style=solid];
m1_1646 -> m1_34  [key=2, style=dotted];
m1_1646 -> m1_1647  [key=0, style=solid];
m1_1639 -> m1_1642  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_1639 -> m1_1640  [key=0, style=solid];
m1_1639 -> m1_65  [key=2, style=dotted];
m1_1639 -> m1_1641  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_1641 -> m1_1642  [key=0, style=solid];
m1_1641 -> m1_67  [key=2, style=dotted];
m1_1638 -> m1_1643  [key=1, style=dashed, color=darkseagreen4, label=structTest];
m1_1638 -> m1_1639  [key=0, style=solid];
m1_1638 -> m1_1648  [key=2, style=dotted];
m1_1640 -> m1_1641  [key=0, style=solid];
m1_1640 -> m1_66  [key=2, style=dotted];
m1_1647 -> m1_1637  [key=0, style=bold, color=blue];
m1_45 -> m1_46  [key=0, style=solid];
m1_2858 -> m1_2859  [key=0, style=solid];
m1_2859 -> m1_8  [key=2, style=dotted];
m1_2859 -> m1_2859  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m1_2859 -> m1_2860  [key=0, style=solid];
m1_2859 -> m1_2861  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_2860 -> m1_2858  [key=0, style=bold, color=blue];
m1_3716 -> m1_3717  [key=0, style=solid];
m1_3723 -> m1_34  [key=2, style=dotted];
m1_3723 -> m1_3724  [key=0, style=solid];
m1_3723 -> m1_1413  [key=2, style=dotted];
m1_3717 -> m1_3723  [key=1, style=dashed, color=darkseagreen4, label=dt];
m1_3717 -> m1_123  [key=2, style=dotted];
m1_3717 -> m1_3718  [key=0, style=solid];
m1_3717 -> m1_3720  [key=1, style=dashed, color=darkseagreen4, label=dt];
m1_3722 -> m1_3723  [key=0, style=solid];
m1_3722 -> m1_96  [key=2, style=dotted];
m1_3718 -> m1_3709  [key=3, color=darkorchid, style=bold, label="Local variable string dateFormatString"];
m1_3718 -> m1_3719  [key=0, style=solid];
m1_3720 -> m1_3722  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_3720 -> m1_463  [key=2, style=dotted];
m1_3720 -> m1_554  [key=2, style=dotted];
m1_3720 -> m1_3721  [key=0, style=solid];
m1_3719 -> m1_3722  [key=1, style=dashed, color=darkseagreen4, label=settings];
m1_3719 -> m1_95  [key=2, style=dotted];
m1_3719 -> m1_3720  [key=0, style=solid];
m1_3721 -> m1_3722  [key=0, style=solid];
m1_3721 -> m1_67  [key=2, style=dotted];
m1_3724 -> m1_3716  [key=0, style=bold, color=blue];
m1_813 -> m1_814  [key=0, style=solid];
m1_815 -> m1_8  [key=2, style=dotted];
m1_815 -> m1_816  [key=0, style=solid];
m1_815 -> m1_817  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_814 -> m1_815  [key=0, style=solid];
m1_814 -> m1_818  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_814 -> m1_814  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m1_816 -> m1_813  [key=0, style=bold, color=blue];
m1_1301 -> m1_1302  [key=0, style=solid];
m1_1306 -> m1_12  [key=2, style=dotted];
m1_1306 -> m1_1307  [key=0, style=solid];
m1_1305 -> m1_34  [key=2, style=dotted];
m1_1305 -> m1_1306  [key=0, style=solid];
m1_1308 -> m1_34  [key=2, style=dotted];
m1_1308 -> m1_1309  [key=0, style=solid];
m1_1304 -> m1_1306  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_1304 -> m1_1305  [key=0, style=solid];
m1_1304 -> m1_47  [key=2, style=dotted];
m1_1307 -> m1_1308  [key=0, style=solid];
m1_1307 -> m1_47  [key=2, style=dotted];
m1_1302 -> m1_1304  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_1302 -> m1_1303  [key=0, style=solid];
m1_1302 -> m1_1310  [key=2, style=dotted];
m1_1303 -> m1_1304  [key=0, style=solid];
m1_1309 -> m1_1301  [key=0, style=bold, color=blue];
m1_3166 -> m1_3167  [key=0, style=solid];
m1_3170 -> m1_12  [key=2, style=dotted];
m1_3170 -> m1_3171  [key=0, style=solid];
m1_3170 -> m1_3172  [key=1, style=dashed, color=darkseagreen4, label=dic2];
m1_3170 -> m1_3173  [key=1, style=dashed, color=darkseagreen4, label=dic2];
m1_3171 -> m1_34  [key=2, style=dotted];
m1_3171 -> m1_3172  [key=0, style=solid];
m1_3172 -> m1_34  [key=2, style=dotted];
m1_3172 -> m1_3173  [key=0, style=solid];
m1_3172 -> m1_831  [key=2, style=dotted];
m1_3173 -> m1_34  [key=2, style=dotted];
m1_3173 -> m1_3174  [key=0, style=solid];
m1_3173 -> m1_831  [key=2, style=dotted];
m1_3168 -> m1_3170  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_3168 -> m1_3169  [key=0, style=solid];
m1_3168 -> m1_95  [key=2, style=dotted];
m1_3168 -> m1_962  [key=2, style=dotted];
m1_3169 -> m1_3170  [key=0, style=solid];
m1_3169 -> m1_67  [key=2, style=dotted];
m1_3167 -> m1_3168  [key=0, style=solid];
m1_3167 -> m1_831  [key=2, style=dotted];
m1_3167 -> m1_554  [key=2, style=dotted];
m1_3174 -> m1_3166  [key=0, style=bold, color=blue];
m1_506 -> m1_507  [key=0, style=solid];
m1_510 -> m1_34  [key=2, style=dotted];
m1_510 -> m1_511  [key=0, style=solid];
m1_508 -> m1_510  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_508 -> m1_47  [key=2, style=dotted];
m1_508 -> m1_509  [key=0, style=solid];
m1_509 -> m1_510  [key=0, style=solid];
m1_509 -> m1_509  [key=3, color=darkorchid, style=bold, label="Local variable string expectedJson"];
m1_507 -> m1_508  [key=0, style=solid];
m1_507 -> m1_512  [key=2, style=dotted];
m1_507 -> m1_513  [key=2, style=dotted];
m1_511 -> m1_506  [key=0, style=bold, color=blue];
m1_27 -> m1_25  [key=0, style=bold, color=blue];
m1_13 -> m1_14  [key=0, style=solid, color=green];
m1_14 -> m1_15  [key=0, style=solid, color=green];
m1_14 -> m1_20  [key=1, style=dashed, color=red, label=popped];
m1_14 -> m1_12  [key=2, style=dotted, color=green];
m1_15 -> m1_16  [key=0, style=solid, color=red];
m1_15 -> m1_22  [key=2, style=dotted];
m1_15 -> m1_13  [key=0, style=bold, color=blue];
m1_20 -> m1_21  [key=0, style=solid, color=green];
m1_20 -> m1_12  [key=2, style=dotted, color=green];
m1_16 -> m1_17  [key=0, style=solid, color=green];
m1_16 -> m1_23  [key=2, style=dotted, color=red];
m1_16 -> m1_18  [key=1, style=dashed, color=red, label=newValue];
m1_17 -> m1_18  [key=0, style=solid, color=green];
m1_17 -> m1_19  [key=0, style=solid, color=red];
m1_17 -> m1_12  [key=2, style=dotted, color=green];
m1_18 -> m1_20  [key=0, style=solid, color=red];
m1_18 -> m1_16  [key=0, style=bold, color=blue];
m1_19 -> m1_20  [key=0, style=solid, color=green];
m1_21 -> m1_13  [key=0, style=bold, color=blue];
m1_21 -> m1_19  [key=0, style=bold, color=blue];
m1_2675 -> m1_2676  [key=0, style=solid];
m1_2679 -> m1_12  [key=2, style=dotted];
m1_2679 -> m1_2680  [key=0, style=solid];
m1_2679 -> m1_2681  [key=1, style=dashed, color=darkseagreen4, label=c2];
m1_2679 -> m1_2682  [key=1, style=dashed, color=darkseagreen4, label=c2];
m1_2679 -> m1_2683  [key=1, style=dashed, color=darkseagreen4, label=c2];
m1_2679 -> m1_2684  [key=1, style=dashed, color=darkseagreen4, label=c2];
m1_2680 -> m1_34  [key=2, style=dotted];
m1_2680 -> m1_2681  [key=0, style=solid];
m1_2681 -> m1_34  [key=2, style=dotted];
m1_2681 -> m1_2682  [key=0, style=solid];
m1_2682 -> m1_34  [key=2, style=dotted];
m1_2682 -> m1_2683  [key=0, style=solid];
m1_2683 -> m1_34  [key=2, style=dotted];
m1_2683 -> m1_2684  [key=0, style=solid];
m1_2684 -> m1_34  [key=2, style=dotted];
m1_2684 -> m1_2685  [key=0, style=solid];
m1_2677 -> m1_2679  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_2677 -> m1_2678  [key=0, style=solid];
m1_2677 -> m1_65  [key=2, style=dotted];
m1_2678 -> m1_2679  [key=0, style=solid];
m1_2678 -> m1_67  [key=2, style=dotted];
m1_2676 -> m1_2680  [key=1, style=dashed, color=darkseagreen4, label=c1];
m1_2676 -> m1_2681  [key=1, style=dashed, color=darkseagreen4, label=c1];
m1_2676 -> m1_2682  [key=1, style=dashed, color=darkseagreen4, label=c1];
m1_2676 -> m1_2683  [key=1, style=dashed, color=darkseagreen4, label=c1];
m1_2676 -> m1_2684  [key=1, style=dashed, color=darkseagreen4, label=c1];
m1_2676 -> m1_2677  [key=0, style=solid];
m1_2676 -> m1_2686  [key=2, style=dotted];
m1_2685 -> m1_2675  [key=0, style=bold, color=blue];
m1_3528 -> m1_3529  [key=0, style=solid];
m1_3531 -> m1_34  [key=2, style=dotted];
m1_3531 -> m1_3532  [key=0, style=solid];
m1_3534 -> m1_34  [key=2, style=dotted];
m1_3534 -> m1_3535  [key=0, style=solid];
m1_3535 -> m1_34  [key=2, style=dotted];
m1_3535 -> m1_3536  [key=0, style=solid];
m1_3530 -> m1_3531  [key=0, style=solid];
m1_3530 -> m1_95  [key=2, style=dotted];
m1_3530 -> m1_275  [key=2, style=dotted];
m1_3530 -> m1_96  [key=2, style=dotted];
m1_3530 -> m1_3532  [key=1, style=dashed, color=darkseagreen4, label=people];
m1_3530 -> m1_3533  [key=1, style=dashed, color=darkseagreen4, label=people];
m1_3532 -> m1_3534  [key=1, style=dashed, color=darkseagreen4, label=john];
m1_3532 -> m1_3535  [key=1, style=dashed, color=darkseagreen4, label=john];
m1_3532 -> m1_3533  [key=0, style=solid];
m1_3533 -> m1_3534  [key=0, style=solid];
m1_3533 -> m1_3535  [key=1, style=dashed, color=darkseagreen4, label=jane];
m1_3529 -> m1_3530  [key=0, style=solid];
m1_3529 -> m1_3517  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m1_3536 -> m1_3528  [key=0, style=bold, color=blue];
m1_1525 -> m1_1526  [key=0, style=solid];
m1_1527 -> m1_8  [key=2, style=dotted];
m1_1527 -> m1_1528  [key=0, style=solid];
m1_1527 -> m1_1529  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_1526 -> m1_1527  [key=0, style=solid];
m1_1526 -> m1_1530  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_1526 -> m1_1512  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m1_1528 -> m1_1525  [key=0, style=bold, color=blue];
m1_3322 -> m1_3323  [key=0, style=solid];
m1_3324 -> m1_12  [key=2, style=dotted];
m1_3324 -> m1_3325  [key=0, style=solid];
m1_3324 -> m1_3326  [key=1, style=dashed, color=darkseagreen4, label=l];
m1_3325 -> m1_34  [key=2, style=dotted];
m1_3325 -> m1_3326  [key=0, style=solid];
m1_3326 -> m1_34  [key=2, style=dotted];
m1_3326 -> m1_3327  [key=0, style=solid];
m1_3323 -> m1_3324  [key=0, style=solid];
m1_3323 -> m1_3323  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m1_3327 -> m1_3322  [key=0, style=bold, color=blue];
m1_3811 -> m1_2962  [key=3, color=darkorchid, style=bold, label="method methodReturn object ReadJson"];
m1_3811 -> m1_3812  [key=0, style=solid];
m1_3812 -> m1_3813  [key=0, style=solid];
m1_3812 -> m1_2297  [key=2, style=dotted];
m1_3812 -> m1_3815  [key=1, style=dashed, color=darkseagreen4, label=messageJObject];
m1_3812 -> m1_3818  [key=1, style=dashed, color=darkseagreen4, label=messageJObject];
m1_3814 -> m1_3821  [key=0, style=solid];
m1_3819 -> m1_3821  [key=0, style=solid];
m1_3819 -> m1_3826  [key=2, style=dotted];
m1_3820 -> m1_3821  [key=0, style=solid];
m1_3820 -> m1_3827  [key=2, style=dotted];
m1_3813 -> m1_3814  [key=0, style=solid];
m1_3813 -> m1_3815  [key=0, style=solid];
m1_3815 -> m1_3819  [key=1, style=dashed, color=darkseagreen4, label=address];
m1_3815 -> m1_3820  [key=1, style=dashed, color=darkseagreen4, label=address];
m1_3815 -> m1_3816  [key=0, style=solid];
m1_3815 -> m1_3822  [key=2, style=dotted];
m1_3815 -> m1_3823  [key=2, style=dotted];
m1_3818 -> m1_3819  [key=0, style=solid];
m1_3818 -> m1_3820  [key=0, style=solid];
m1_3818 -> m1_3818  [key=1, style=dashed, color=darkseagreen4, label=displayNameToken];
m1_3818 -> m1_3824  [key=2, style=dotted];
m1_3818 -> m1_3823  [key=2, style=dotted];
m1_3818 -> m1_3825  [key=2, style=dotted];
m1_3816 -> m1_3818  [key=1, style=dashed, color=darkseagreen4, label=displayNameToken];
m1_3816 -> m1_3817  [key=0, style=solid];
m1_3817 -> m1_3818  [key=0, style=solid];
m1_3821 -> m1_3811  [key=0, style=bold, color=blue];
m1_1567 -> m1_1568  [key=0, style=solid];
m1_1569 -> m1_12  [key=2, style=dotted];
m1_1569 -> m1_1570  [key=0, style=solid];
m1_1568 -> m1_1569  [key=0, style=solid];
m1_1568 -> m1_2451  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m1_1570 -> m1_1571  [key=0, style=solid];
m1_1570 -> m1_1573  [key=0, style=solid];
m1_1570 -> m1_1187  [key=2, style=dotted];
m1_1571 -> m1_1572  [key=0, style=solid];
m1_1572 -> m1_1573  [key=0, style=solid];
m1_1572 -> m1_203  [key=2, style=dotted];
m1_1572 -> m1_1188  [key=2, style=dotted];
m1_1573 -> m1_1567  [key=0, style=bold, color=blue];
m1_277 -> m1_278  [key=0, style=solid];
m1_281 -> m1_34  [key=2, style=dotted];
m1_281 -> m1_282  [key=0, style=solid];
m1_283 -> m1_34  [key=2, style=dotted];
m1_283 -> m1_284  [key=0, style=solid];
m1_285 -> m1_34  [key=2, style=dotted];
m1_285 -> m1_286  [key=0, style=solid];
m1_287 -> m1_34  [key=2, style=dotted];
m1_287 -> m1_288  [key=0, style=solid];
m1_287 -> m1_270  [key=2, style=dotted];
m1_290 -> m1_34  [key=2, style=dotted];
m1_290 -> m1_291  [key=0, style=solid];
m1_292 -> m1_34  [key=2, style=dotted];
m1_292 -> m1_293  [key=0, style=solid];
m1_294 -> m1_34  [key=2, style=dotted];
m1_294 -> m1_295  [key=0, style=solid];
m1_294 -> m1_274  [key=2, style=dotted];
m1_296 -> m1_34  [key=2, style=dotted];
m1_296 -> m1_297  [key=0, style=solid];
m1_298 -> m1_34  [key=2, style=dotted];
m1_298 -> m1_299  [key=0, style=solid];
m1_300 -> m1_34  [key=2, style=dotted];
m1_300 -> m1_301  [key=0, style=solid];
m1_302 -> m1_34  [key=2, style=dotted];
m1_302 -> m1_303  [key=0, style=solid];
m1_304 -> m1_34  [key=2, style=dotted];
m1_304 -> m1_305  [key=0, style=solid];
m1_306 -> m1_34  [key=2, style=dotted];
m1_306 -> m1_307  [key=0, style=solid];
m1_308 -> m1_34  [key=2, style=dotted];
m1_308 -> m1_309  [key=0, style=solid];
m1_310 -> m1_34  [key=2, style=dotted];
m1_310 -> m1_311  [key=0, style=solid];
m1_312 -> m1_34  [key=2, style=dotted];
m1_312 -> m1_313  [key=0, style=solid];
m1_314 -> m1_34  [key=2, style=dotted];
m1_314 -> m1_315  [key=0, style=solid];
m1_316 -> m1_34  [key=2, style=dotted];
m1_316 -> m1_317  [key=0, style=solid];
m1_318 -> m1_34  [key=2, style=dotted];
m1_318 -> m1_319  [key=0, style=solid];
m1_320 -> m1_34  [key=2, style=dotted];
m1_320 -> m1_321  [key=0, style=solid];
m1_322 -> m1_34  [key=2, style=dotted];
m1_322 -> m1_323  [key=0, style=solid];
m1_325 -> m1_34  [key=2, style=dotted];
m1_325 -> m1_326  [key=0, style=solid];
m1_327 -> m1_34  [key=2, style=dotted];
m1_327 -> m1_328  [key=0, style=solid];
m1_330 -> m1_34  [key=2, style=dotted];
m1_330 -> m1_331  [key=0, style=solid];
m1_332 -> m1_34  [key=2, style=dotted];
m1_332 -> m1_333  [key=0, style=solid];
m1_334 -> m1_34  [key=2, style=dotted];
m1_334 -> m1_335  [key=0, style=solid];
m1_291 -> m1_35  [key=2, style=dotted];
m1_291 -> m1_292  [key=0, style=solid];
m1_291 -> m1_64  [key=2, style=dotted];
m1_278 -> m1_281  [key=1, style=dashed, color=darkseagreen4, label=settings];
m1_278 -> m1_283  [key=1, style=dashed, color=darkseagreen4, label=settings];
m1_278 -> m1_285  [key=1, style=dashed, color=darkseagreen4, label=settings];
m1_278 -> m1_287  [key=1, style=dashed, color=darkseagreen4, label=settings];
m1_278 -> m1_290  [key=1, style=dashed, color=darkseagreen4, label=settings];
m1_278 -> m1_292  [key=1, style=dashed, color=darkseagreen4, label=settings];
m1_278 -> m1_294  [key=1, style=dashed, color=darkseagreen4, label=settings];
m1_278 -> m1_296  [key=1, style=dashed, color=darkseagreen4, label=settings];
m1_278 -> m1_298  [key=1, style=dashed, color=darkseagreen4, label=settings];
m1_278 -> m1_300  [key=1, style=dashed, color=darkseagreen4, label=settings];
m1_278 -> m1_302  [key=1, style=dashed, color=darkseagreen4, label=settings];
m1_278 -> m1_304  [key=1, style=dashed, color=darkseagreen4, label=settings];
m1_278 -> m1_306  [key=1, style=dashed, color=darkseagreen4, label=settings];
m1_278 -> m1_308  [key=1, style=dashed, color=darkseagreen4, label=settings];
m1_278 -> m1_310  [key=1, style=dashed, color=darkseagreen4, label=settings];
m1_278 -> m1_312  [key=1, style=dashed, color=darkseagreen4, label=settings];
m1_278 -> m1_314  [key=1, style=dashed, color=darkseagreen4, label=settings];
m1_278 -> m1_316  [key=1, style=dashed, color=darkseagreen4, label=settings];
m1_278 -> m1_318  [key=1, style=dashed, color=darkseagreen4, label=settings];
m1_278 -> m1_320  [key=1, style=dashed, color=darkseagreen4, label=settings];
m1_278 -> m1_322  [key=1, style=dashed, color=darkseagreen4, label=settings];
m1_278 -> m1_325  [key=1, style=dashed, color=darkseagreen4, label=settings];
m1_278 -> m1_327  [key=1, style=dashed, color=darkseagreen4, label=settings];
m1_278 -> m1_330  [key=1, style=dashed, color=darkseagreen4, label=settings];
m1_278 -> m1_332  [key=1, style=dashed, color=darkseagreen4, label=settings];
m1_278 -> m1_334  [key=1, style=dashed, color=darkseagreen4, label=settings];
m1_278 -> m1_291  [key=1, style=dashed, color=darkseagreen4, label=settings];
m1_278 -> m1_279  [key=0, style=solid];
m1_278 -> m1_95  [key=2, style=dotted];
m1_278 -> m1_280  [key=1, style=dashed, color=darkseagreen4, label=settings];
m1_278 -> m1_282  [key=1, style=dashed, color=darkseagreen4, label=settings];
m1_278 -> m1_284  [key=1, style=dashed, color=darkseagreen4, label=settings];
m1_278 -> m1_286  [key=1, style=dashed, color=darkseagreen4, label=settings];
m1_278 -> m1_289  [key=1, style=dashed, color=darkseagreen4, label=settings];
m1_278 -> m1_293  [key=1, style=dashed, color=darkseagreen4, label=settings];
m1_278 -> m1_295  [key=1, style=dashed, color=darkseagreen4, label=settings];
m1_278 -> m1_297  [key=1, style=dashed, color=darkseagreen4, label=settings];
m1_278 -> m1_299  [key=1, style=dashed, color=darkseagreen4, label=settings];
m1_278 -> m1_301  [key=1, style=dashed, color=darkseagreen4, label=settings];
m1_278 -> m1_303  [key=1, style=dashed, color=darkseagreen4, label=settings];
m1_278 -> m1_305  [key=1, style=dashed, color=darkseagreen4, label=settings];
m1_278 -> m1_307  [key=1, style=dashed, color=darkseagreen4, label=settings];
m1_278 -> m1_309  [key=1, style=dashed, color=darkseagreen4, label=settings];
m1_278 -> m1_311  [key=1, style=dashed, color=darkseagreen4, label=settings];
m1_278 -> m1_313  [key=1, style=dashed, color=darkseagreen4, label=settings];
m1_278 -> m1_315  [key=1, style=dashed, color=darkseagreen4, label=settings];
m1_278 -> m1_317  [key=1, style=dashed, color=darkseagreen4, label=settings];
m1_278 -> m1_319  [key=1, style=dashed, color=darkseagreen4, label=settings];
m1_278 -> m1_321  [key=1, style=dashed, color=darkseagreen4, label=settings];
m1_278 -> m1_324  [key=1, style=dashed, color=darkseagreen4, label=settings];
m1_278 -> m1_326  [key=1, style=dashed, color=darkseagreen4, label=settings];
m1_278 -> m1_329  [key=1, style=dashed, color=darkseagreen4, label=settings];
m1_278 -> m1_331  [key=1, style=dashed, color=darkseagreen4, label=settings];
m1_278 -> m1_333  [key=1, style=dashed, color=darkseagreen4, label=settings];
m1_279 -> m1_281  [key=1, style=dashed, color=darkseagreen4, label=customBinder];
m1_279 -> m1_280  [key=0, style=solid];
m1_279 -> m1_269  [key=2, style=dotted];
m1_280 -> m1_281  [key=0, style=solid];
m1_282 -> m1_283  [key=0, style=solid];
m1_284 -> m1_285  [key=0, style=solid];
m1_286 -> m1_287  [key=0, style=solid];
m1_286 -> m1_270  [key=2, style=dotted];
m1_288 -> m1_290  [key=1, style=dashed, color=darkseagreen4, label=resolver];
m1_288 -> m1_289  [key=0, style=solid];
m1_288 -> m1_271  [key=2, style=dotted];
m1_289 -> m1_290  [key=0, style=solid];
m1_293 -> m1_294  [key=0, style=solid];
m1_293 -> m1_273  [key=2, style=dotted];
m1_295 -> m1_296  [key=0, style=solid];
m1_297 -> m1_298  [key=0, style=solid];
m1_299 -> m1_300  [key=0, style=solid];
m1_301 -> m1_302  [key=0, style=solid];
m1_303 -> m1_304  [key=0, style=solid];
m1_305 -> m1_306  [key=0, style=solid];
m1_307 -> m1_308  [key=0, style=solid];
m1_309 -> m1_310  [key=0, style=solid];
m1_311 -> m1_312  [key=0, style=solid];
m1_313 -> m1_314  [key=0, style=solid];
m1_315 -> m1_316  [key=0, style=solid];
m1_317 -> m1_318  [key=0, style=solid];
m1_319 -> m1_320  [key=0, style=solid];
m1_321 -> m1_322  [key=0, style=solid];
m1_323 -> m1_325  [key=1, style=dashed, color=darkseagreen4, label=referenceResolver];
m1_323 -> m1_324  [key=0, style=solid];
m1_323 -> m1_275  [key=2, style=dotted];
m1_324 -> m1_325  [key=0, style=solid];
m1_326 -> m1_327  [key=0, style=solid];
m1_328 -> m1_330  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m1_328 -> m1_329  [key=0, style=solid];
m1_328 -> m1_276  [key=2, style=dotted];
m1_329 -> m1_330  [key=0, style=solid];
m1_331 -> m1_332  [key=0, style=solid];
m1_333 -> m1_334  [key=0, style=solid];
m1_335 -> m1_277  [key=0, style=bold, color=blue];
m1_555 -> m1_568  [key=0, style=solid];
m1_555 -> m1_569  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_568 -> m1_569  [key=0, style=solid];
m1_569 -> m1_570  [key=0, style=solid];
m1_570 -> m1_555  [key=0, style=bold, color=blue];
m1_2398 -> m1_2399  [key=0, style=solid];
m1_2403 -> m1_34  [key=2, style=dotted];
m1_2403 -> m1_2404  [key=0, style=solid];
m1_2404 -> m1_34  [key=2, style=dotted];
m1_2404 -> m1_2405  [key=0, style=solid];
m1_2402 -> m1_2403  [key=0, style=solid];
m1_2402 -> m1_2404  [key=1, style=dashed, color=darkseagreen4, label=meh];
m1_2402 -> m1_96  [key=2, style=dotted];
m1_2400 -> m1_2402  [key=1, style=dashed, color=darkseagreen4, label=settings];
m1_2400 -> m1_95  [key=2, style=dotted];
m1_2400 -> m1_2401  [key=0, style=solid];
m1_2401 -> m1_2402  [key=0, style=solid];
m1_2401 -> m1_962  [key=2, style=dotted];
m1_2399 -> m1_2400  [key=0, style=solid];
m1_2399 -> m1_2401  [key=1, style=dashed, color=darkseagreen4, label=derived];
m1_2399 -> m1_2390  [key=2, style=dotted];
m1_2405 -> m1_2398  [key=0, style=bold, color=blue];
m1_1553 -> m1_1554  [key=0, style=solid];
m1_1555 -> m1_8  [key=2, style=dotted];
m1_1555 -> m1_1556  [key=0, style=solid];
m1_1555 -> m1_1557  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_1554 -> m1_1555  [key=0, style=solid];
m1_1554 -> m1_1558  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_1554 -> m1_1554  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m1_1556 -> m1_1553  [key=0, style=bold, color=blue];
m1_150 -> m1_151  [key=0, style=solid];
m1_153 -> m1_12  [key=2, style=dotted];
m1_153 -> m1_154  [key=0, style=solid];
m1_153 -> m1_155  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m1_153 -> m1_156  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m1_154 -> m1_34  [key=2, style=dotted];
m1_154 -> m1_155  [key=0, style=solid];
m1_156 -> m1_34  [key=2, style=dotted];
m1_156 -> m1_157  [key=0, style=solid];
m1_156 -> m1_189  [key=0, style=solid];
m1_156 -> m1_190  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_156 -> m1_192  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_156 -> m1_193  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_156 -> m1_194  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_156 -> m1_222  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_151 -> m1_154  [key=1, style=dashed, color=darkseagreen4, label=input];
m1_151 -> m1_155  [key=1, style=dashed, color=darkseagreen4, label=input];
m1_151 -> m1_156  [key=1, style=dashed, color=darkseagreen4, label=input];
m1_151 -> m1_152  [key=0, style=solid];
m1_151 -> m1_158  [key=2, style=dotted];
m1_151 -> m1_168  [key=0, style=solid];
m1_151 -> m1_169  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaType"];
m1_151 -> m1_170  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaType"];
m1_157 -> m1_150  [key=0, style=bold, color=blue];
m1_3500 -> m1_3501  [key=0, style=solid];
m1_3500 -> m1_3503  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_3502 -> m1_1831  [key=2, style=dotted];
m1_3502 -> m1_3504  [key=0, style=solid];
m1_3501 -> m1_3502  [key=0, style=solid];
m1_3501 -> m1_3503  [key=0, style=solid];
m1_3503 -> m1_3504  [key=0, style=solid];
m1_3504 -> m1_3500  [key=0, style=bold, color=blue];
m1_3593 -> m1_3594  [key=0, style=solid];
m1_3594 -> m1_3583  [key=2, style=dotted];
m1_3594 -> m1_3595  [key=0, style=solid];
m1_3595 -> m1_3593  [key=0, style=bold, color=blue];
m1_3296 -> m1_3297  [key=0, style=solid];
m1_3297 -> m1_3298  [key=0, style=solid];
m1_3298 -> m1_3296  [key=0, style=bold, color=blue];
m1_2580 -> m1_2581  [key=0, style=solid];
m1_2582 -> m1_554  [key=2, style=dotted];
m1_2582 -> m1_2583  [key=0, style=solid];
m1_2581 -> m1_2582  [key=0, style=solid];
m1_2583 -> m1_2580  [key=0, style=bold, color=blue];
m1_2365 -> m1_2366  [key=0, style=solid];
m1_2371 -> m1_34  [key=2, style=dotted];
m1_2371 -> m1_2372  [key=0, style=solid];
m1_2370 -> m1_2371  [key=0, style=solid];
m1_2370 -> m1_2297  [key=2, style=dotted];
m1_2367 -> m1_2370  [key=1, style=dashed, color=darkseagreen4, label=reader];
m1_2367 -> m1_117  [key=2, style=dotted];
m1_2367 -> m1_118  [key=2, style=dotted];
m1_2367 -> m1_2368  [key=0, style=solid];
m1_2369 -> m1_2370  [key=0, style=solid];
m1_2369 -> m1_119  [key=2, style=dotted];
m1_2366 -> m1_2367  [key=0, style=solid];
m1_2366 -> m1_2366  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m1_2368 -> m1_2369  [key=0, style=solid];
m1_2372 -> m1_2365  [key=0, style=bold, color=blue];
m1_2631 -> m1_2632  [key=0, style=solid];
m1_2632 -> m1_2633  [key=0, style=solid];
m1_2633 -> m1_2631  [key=0, style=bold, color=blue];
m1_984 -> m1_985  [key=0, style=solid];
m1_988 -> m1_12  [key=2, style=dotted];
m1_988 -> m1_989  [key=0, style=solid];
m1_989 -> m1_34  [key=2, style=dotted];
m1_989 -> m1_990  [key=0, style=solid];
m1_986 -> m1_988  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_986 -> m1_987  [key=0, style=solid];
m1_986 -> m1_992  [key=2, style=dotted];
m1_986 -> m1_65  [key=2, style=dotted];
m1_987 -> m1_988  [key=0, style=solid];
m1_987 -> m1_67  [key=2, style=dotted];
m1_985 -> m1_989  [key=1, style=dashed, color=darkseagreen4, label=ts];
m1_985 -> m1_986  [key=0, style=solid];
m1_985 -> m1_991  [key=2, style=dotted];
m1_990 -> m1_984  [key=0, style=bold, color=blue];
m1_3328 -> m1_3329  [key=0, style=solid];
m1_3331 -> m1_34  [key=2, style=dotted];
m1_3331 -> m1_3332  [key=0, style=solid];
m1_3335 -> m1_34  [key=2, style=dotted];
m1_3335 -> m1_3336  [key=0, style=solid];
m1_3332 -> m1_2962  [key=3, color=darkorchid, style=bold, label="Local variable Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<int> obj"];
m1_3332 -> m1_3333  [key=0, style=solid];
m1_3330 -> m1_3339  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_3330 -> m1_3331  [key=0, style=solid];
m1_3330 -> m1_47  [key=2, style=dotted];
m1_3330 -> m1_3333  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_3334 -> m1_3335  [key=0, style=solid];
m1_3334 -> m1_3337  [key=2, style=dotted];
m1_3333 -> m1_3334  [key=0, style=solid];
m1_3333 -> m1_3333  [key=3, color=darkorchid, style=bold, label="Local variable System.Action doStuff"];
m1_3329 -> m1_3330  [key=0, style=solid];
m1_3329 -> m1_3296  [key=2, style=dotted];
m1_3336 -> m1_3328  [key=0, style=bold, color=blue];
m1_1896 -> m1_1897  [key=0, style=solid];
m1_1896 -> m1_1898  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m1_1896 -> m1_1899  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m1_1896 -> m1_1900  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m1_1896 -> m1_1901  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m1_1896 -> m1_1902  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m1_1896 -> m1_1903  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m1_1896 -> m1_1904  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m1_1896 -> m1_1905  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m1_1896 -> m1_1906  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m1_1896 -> m1_1907  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m1_1896 -> m1_1908  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m1_1896 -> m1_1909  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m1_1896 -> m1_1910  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m1_1896 -> m1_1911  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m1_1896 -> m1_1912  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m1_1896 -> m1_1913  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m1_1896 -> m1_1914  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m1_1897 -> m1_1898  [key=0, style=solid];
m1_1897 -> m1_438  [key=2, style=dotted];
m1_1898 -> m1_1899  [key=0, style=solid];
m1_1898 -> m1_439  [key=2, style=dotted];
m1_1899 -> m1_1900  [key=0, style=solid];
m1_1899 -> m1_440  [key=2, style=dotted];
m1_1900 -> m1_1901  [key=0, style=solid];
m1_1900 -> m1_440  [key=2, style=dotted];
m1_1901 -> m1_1902  [key=0, style=solid];
m1_1901 -> m1_440  [key=2, style=dotted];
m1_1902 -> m1_1903  [key=0, style=solid];
m1_1902 -> m1_440  [key=2, style=dotted];
m1_1903 -> m1_1904  [key=0, style=solid];
m1_1903 -> m1_1916  [key=2, style=dotted];
m1_1904 -> m1_1905  [key=0, style=solid];
m1_1904 -> m1_1917  [key=2, style=dotted];
m1_1905 -> m1_1906  [key=0, style=solid];
m1_1905 -> m1_1918  [key=2, style=dotted];
m1_1906 -> m1_1907  [key=0, style=solid];
m1_1906 -> m1_1919  [key=2, style=dotted];
m1_1907 -> m1_1908  [key=0, style=solid];
m1_1907 -> m1_1920  [key=2, style=dotted];
m1_1908 -> m1_1909  [key=0, style=solid];
m1_1908 -> m1_1921  [key=2, style=dotted];
m1_1909 -> m1_1910  [key=0, style=solid];
m1_1909 -> m1_1922  [key=2, style=dotted];
m1_1910 -> m1_1911  [key=0, style=solid];
m1_1910 -> m1_1923  [key=2, style=dotted];
m1_1911 -> m1_1912  [key=0, style=solid];
m1_1911 -> m1_1924  [key=2, style=dotted];
m1_1912 -> m1_1913  [key=0, style=solid];
m1_1912 -> m1_1925  [key=2, style=dotted];
m1_1913 -> m1_1914  [key=0, style=solid];
m1_1913 -> m1_1926  [key=2, style=dotted];
m1_1914 -> m1_1915  [key=0, style=solid];
m1_1914 -> m1_1927  [key=2, style=dotted];
m1_1915 -> m1_1896  [key=0, style=bold, color=blue];
m1_397 -> m1_398  [key=0, style=solid];
m1_401 -> m1_12  [key=2, style=dotted];
m1_401 -> m1_402  [key=0, style=solid];
m1_402 -> m1_34  [key=2, style=dotted];
m1_402 -> m1_402  [key=1, style=dashed, color=darkseagreen4, label=ratio];
m1_402 -> m1_403  [key=0, style=solid];
m1_400 -> m1_34  [key=2, style=dotted];
m1_400 -> m1_401  [key=0, style=solid];
m1_403 -> m1_34  [key=2, style=dotted];
m1_403 -> m1_403  [key=1, style=dashed, color=darkseagreen4, label=ratio];
m1_403 -> m1_404  [key=0, style=solid];
m1_399 -> m1_401  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_399 -> m1_400  [key=0, style=solid];
m1_399 -> m1_47  [key=2, style=dotted];
m1_398 -> m1_402  [key=1, style=dashed, color=darkseagreen4, label=ratio];
m1_398 -> m1_399  [key=0, style=solid];
m1_398 -> m1_405  [key=2, style=dotted];
m1_404 -> m1_397  [key=0, style=bold, color=blue];
m1_2891 -> m1_2892  [key=0, style=solid];
m1_2894 -> m1_34  [key=2, style=dotted];
m1_2894 -> m1_2895  [key=0, style=solid];
m1_2895 -> m1_34  [key=2, style=dotted];
m1_2895 -> m1_2896  [key=0, style=solid];
m1_2893 -> m1_2894  [key=0, style=solid];
m1_2893 -> m1_2895  [key=1, style=dashed, color=darkseagreen4, label=dict];
m1_2893 -> m1_117  [key=2, style=dotted];
m1_2893 -> m1_118  [key=2, style=dotted];
m1_2893 -> m1_2297  [key=2, style=dotted];
m1_2892 -> m1_2893  [key=0, style=solid];
m1_2892 -> m1_558  [key=2, style=dotted];
m1_2892 -> m1_95  [key=2, style=dotted];
m1_2896 -> m1_2891  [key=0, style=bold, color=blue];
m1_3175 -> m1_3176  [key=0, style=solid];
m1_3177 -> m1_34  [key=2, style=dotted];
m1_3177 -> m1_3178  [key=0, style=solid];
m1_3176 -> m1_3177  [key=0, style=solid];
m1_3176 -> m1_119  [key=2, style=dotted];
m1_3176 -> m1_117  [key=2, style=dotted];
m1_3176 -> m1_118  [key=2, style=dotted];
m1_3176 -> m1_2748  [key=2, style=dotted];
m1_3178 -> m1_3175  [key=0, style=bold, color=blue];
m1_3286 -> m1_3287  [key=0, style=solid];
m1_3287 -> m1_12  [key=2, style=dotted];
m1_3287 -> m1_3288  [key=0, style=solid];
m1_3288 -> m1_34  [key=2, style=dotted];
m1_3288 -> m1_3288  [key=1, style=dashed, color=darkseagreen4, label=result];
m1_3288 -> m1_3289  [key=0, style=solid];
m1_3289 -> m1_34  [key=2, style=dotted];
m1_3289 -> m1_3289  [key=1, style=dashed, color=darkseagreen4, label=result];
m1_3289 -> m1_3290  [key=0, style=solid];
m1_3290 -> m1_3286  [key=0, style=bold, color=blue];
m1_1823 -> m1_1824  [key=0, style=solid];
m1_1824 -> m1_1823  [key=0, style=bold, color=blue];
m1_684 -> m1_685  [key=0, style=solid];
m1_687 -> m1_34  [key=2, style=dotted];
m1_687 -> m1_688  [key=0, style=solid];
m1_688 -> m1_34  [key=2, style=dotted];
m1_688 -> m1_689  [key=0, style=solid];
m1_688 -> m1_691  [key=2, style=dotted];
m1_689 -> m1_34  [key=2, style=dotted];
m1_689 -> m1_690  [key=0, style=solid];
m1_686 -> m1_687  [key=0, style=solid];
m1_686 -> m1_688  [key=1, style=dashed, color=darkseagreen4, label=p];
m1_686 -> m1_689  [key=1, style=dashed, color=darkseagreen4, label=p];
m1_686 -> m1_666  [key=2, style=dotted];
m1_685 -> m1_686  [key=0, style=solid];
m1_685 -> m1_685  [key=3, color=darkorchid, style=bold, label="Local variable string value"];
m1_690 -> m1_684  [key=0, style=bold, color=blue];
m1_1240 -> m1_1241  [key=0, style=solid];
m1_1241 -> m1_831  [key=2, style=dotted];
m1_1241 -> m1_1242  [key=0, style=solid];
m1_1241 -> m1_1244  [key=2, style=dotted];
m1_1242 -> m1_1243  [key=0, style=solid];
m1_1243 -> m1_1240  [key=0, style=bold, color=blue];
m1_225 -> m1_34  [key=2, style=dotted];
m1_225 -> m1_226  [key=0, style=solid];
m1_32 -> m1_33  [key=0, style=solid, color=green];
m1_32 -> m1_34  [key=2, style=dotted, color=green];
m1_33 -> m1_34  [key=0, style=solid];
m1_33 -> m1_27  [key=2, style=dotted];
m1_33 -> m1_28  [key=2, style=dotted];
m1_34 -> m1_32  [key=0, style=bold, color=blue];
m1_1294 -> m1_1295  [key=0, style=solid];
m1_1296 -> m1_12  [key=2, style=dotted];
m1_1296 -> m1_1297  [key=0, style=solid];
m1_1295 -> m1_1296  [key=0, style=solid];
m1_1295 -> m1_1283  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m1_1297 -> m1_1298  [key=0, style=solid];
m1_1297 -> m1_1300  [key=0, style=solid];
m1_1297 -> m1_1187  [key=2, style=dotted];
m1_1298 -> m1_1299  [key=0, style=solid];
m1_1299 -> m1_1300  [key=0, style=solid];
m1_1299 -> m1_203  [key=2, style=dotted];
m1_1299 -> m1_1188  [key=2, style=dotted];
m1_1300 -> m1_1294  [key=0, style=bold, color=blue];
m1_2746 -> m1_446  [key=3, color=darkorchid, style=bold, label="Field variable Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject _parent"];
m1_1197 -> m1_1198  [key=0, style=solid];
m1_1199 -> m1_12  [key=2, style=dotted];
m1_1199 -> m1_1200  [key=0, style=solid];
m1_1198 -> m1_1199  [key=0, style=solid];
m1_1198 -> m1_1198  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m1_1200 -> m1_1201  [key=0, style=solid];
m1_1200 -> m1_1203  [key=0, style=solid];
m1_1200 -> m1_1187  [key=2, style=dotted];
m1_1201 -> m1_1202  [key=0, style=solid];
m1_1202 -> m1_1203  [key=0, style=solid];
m1_1202 -> m1_203  [key=2, style=dotted];
m1_1202 -> m1_1188  [key=2, style=dotted];
m1_1203 -> m1_1197  [key=0, style=bold, color=blue];
m1_167 -> m1_165  [key=0, style=bold, color=blue];
m1_1189 -> m1_1190  [key=0, style=solid];
m1_1190 -> m1_8  [key=2, style=dotted];
m1_1190 -> m1_1191  [key=0, style=solid];
m1_1190 -> m1_1192  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_1191 -> m1_1189  [key=0, style=bold, color=blue];
m1_29 -> m1_30  [key=0, style=solid, color=green];
m1_29 -> m1_12  [key=2, style=dotted, color=green];
m1_30 -> m1_31  [key=0, style=solid, color=green];
m1_30 -> m1_28  [key=2, style=dotted];
m1_30 -> m1_34  [key=2, style=dotted, color=green];
m1_31 -> m1_29  [key=0, style=bold, color=blue];
m1_31 -> m1_32  [key=0, style=solid, color=green];
m1_31 -> m1_35  [key=2, style=dotted, color=green];
m1_31 -> m1_36  [key=2, style=dotted, color=green];
m1_2409 -> m1_2410  [key=0, style=solid];
m1_2410 -> m1_424  [key=2, style=dotted];
m1_2410 -> m1_2411  [key=0, style=solid];
m1_2411 -> m1_2409  [key=0, style=bold, color=blue];
m1_3623 -> m1_3624  [key=0, style=solid];
m1_3624 -> m1_3583  [key=2, style=dotted];
m1_3624 -> m1_3625  [key=0, style=solid];
m1_3625 -> m1_3623  [key=0, style=bold, color=blue];
m1_66 -> m1_67  [key=0, style=solid];
m1_3005 -> m1_3006  [key=0, style=solid];
m1_3010 -> m1_12  [key=2, style=dotted];
m1_3010 -> m1_3011  [key=0, style=solid];
m1_3011 -> m1_34  [key=2, style=dotted];
m1_3011 -> m1_3012  [key=0, style=solid];
m1_3009 -> m1_3010  [key=0, style=solid];
m1_3009 -> m1_47  [key=2, style=dotted];
m1_3006 -> m1_3011  [key=1, style=dashed, color=darkseagreen4, label=person];
m1_3006 -> m1_3009  [key=1, style=dashed, color=darkseagreen4, label=person];
m1_3006 -> m1_3007  [key=0, style=solid];
m1_3006 -> m1_3013  [key=2, style=dotted];
m1_3006 -> m1_3008  [key=1, style=dashed, color=darkseagreen4, label=person];
m1_3008 -> m1_3009  [key=0, style=solid];
m1_3007 -> m1_3008  [key=0, style=solid];
m1_3012 -> m1_3005  [key=0, style=bold, color=blue];
m1_162 -> m1_172  [key=0, style=solid];
m1_162 -> m1_173  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonObjectContract"];
m1_162 -> m1_180  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_162 -> m1_12  [key=2, style=dotted];
m1_162 -> m1_163  [key=0, style=solid];
m1_162 -> m1_164  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m1_162 -> m1_165  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m1_172 -> m1_173  [key=0, style=solid];
m1_172 -> m1_158  [key=2, style=dotted];
m1_172 -> m1_34  [key=2, style=dotted];
m1_173 -> m1_174  [key=0, style=solid];
m1_173 -> m1_180  [key=0, style=solid];
m1_173 -> m1_175  [key=1, style=dashed, color=darkseagreen4, label=property];
m1_173 -> m1_176  [key=1, style=dashed, color=darkseagreen4, label=property];
m1_173 -> m1_177  [key=1, style=dashed, color=darkseagreen4, label=property];
m1_173 -> m1_178  [key=1, style=dashed, color=darkseagreen4, label=property];
m1_173 -> m1_179  [key=1, style=dashed, color=darkseagreen4, label=property];
m1_173 -> m1_34  [key=2, style=dotted];
m1_174 -> m1_175  [key=0, style=solid];
m1_174 -> m1_173  [key=0, style=solid];
m1_174 -> m1_34  [key=2, style=dotted];
m1_175 -> m1_176  [key=0, style=solid];
m1_175 -> m1_168  [key=0, style=bold, color=blue];
m1_177 -> m1_178  [key=0, style=solid];
m1_177 -> m1_179  [key=0, style=solid];
m1_41 -> m1_42  [key=0, style=solid, color=green];
m1_41 -> m1_34  [key=2, style=dotted, color=green];
m1_42 -> m1_43  [key=0, style=solid, color=green];
m1_42 -> m1_47  [key=2, style=dotted];
m1_42 -> m1_44  [key=1, style=dashed, color=darkseagreen4, label=containerAttribute];
m1_42 -> m1_12  [key=2, style=dotted, color=green];
m1_43 -> m1_44  [key=0, style=solid, color=green];
m1_43 -> m1_45  [key=0, style=solid];
m1_43 -> m1_48  [key=2, style=dotted];
m1_43 -> m1_34  [key=2, style=dotted, color=green];
m1_44 -> m1_46  [key=0, style=solid];
m1_44 -> m1_37  [key=0, style=bold, color=blue];
m1_46 -> m1_41  [key=0, style=bold, color=blue];
m1_1414 -> m1_1415  [key=0, style=solid];
m1_1417 -> m1_34  [key=2, style=dotted];
m1_1417 -> m1_1418  [key=0, style=solid];
m1_1418 -> m1_34  [key=2, style=dotted];
m1_1418 -> m1_1419  [key=0, style=solid];
m1_1418 -> m1_831  [key=2, style=dotted];
m1_1419 -> m1_34  [key=2, style=dotted];
m1_1419 -> m1_1420  [key=0, style=solid];
m1_1420 -> m1_34  [key=2, style=dotted];
m1_1420 -> m1_1421  [key=0, style=solid];
m1_1421 -> m1_34  [key=2, style=dotted];
m1_1421 -> m1_1422  [key=0, style=solid];
m1_1422 -> m1_34  [key=2, style=dotted];
m1_1422 -> m1_1423  [key=0, style=solid];
m1_1416 -> m1_1417  [key=0, style=solid];
m1_1416 -> m1_1418  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m1_1416 -> m1_1419  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m1_1416 -> m1_1420  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m1_1416 -> m1_1421  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m1_1416 -> m1_1422  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m1_1416 -> m1_666  [key=2, style=dotted];
m1_1415 -> m1_1416  [key=0, style=solid];
m1_1415 -> m1_1415  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m1_1423 -> m1_1414  [key=0, style=bold, color=blue];
m1_657 -> m1_658  [key=0, style=solid];
m1_661 -> m1_34  [key=2, style=dotted];
m1_661 -> m1_662  [key=0, style=solid];
m1_662 -> m1_34  [key=2, style=dotted];
m1_662 -> m1_663  [key=0, style=solid];
m1_658 -> m1_661  [key=1, style=dashed, color=darkseagreen4, label=store];
m1_658 -> m1_662  [key=1, style=dashed, color=darkseagreen4, label=store];
m1_658 -> m1_659  [key=0, style=solid];
m1_658 -> m1_665  [key=2, style=dotted];
m1_660 -> m1_661  [key=0, style=solid];
m1_660 -> m1_662  [key=1, style=dashed, color=darkseagreen4, label=deserializedStore];
m1_660 -> m1_666  [key=2, style=dotted];
m1_663 -> m1_664  [key=0, style=solid];
m1_663 -> m1_66  [key=2, style=dotted];
m1_659 -> m1_47  [key=2, style=dotted];
m1_659 -> m1_660  [key=0, style=solid];
m1_659 -> m1_663  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m1_664 -> m1_657  [key=0, style=bold, color=blue];
m1_3203 -> m1_3204  [key=0, style=solid];
m1_3205 -> m1_65  [key=2, style=dotted];
m1_3205 -> m1_3206  [key=0, style=solid];
m1_3206 -> m1_67  [key=2, style=dotted];
m1_3206 -> m1_3207  [key=0, style=solid];
m1_3204 -> m1_120  [key=2, style=dotted];
m1_3204 -> m1_3205  [key=0, style=solid];
m1_3204 -> m1_3208  [key=2, style=dotted];
m1_3204 -> m1_3209  [key=2, style=dotted];
m1_3207 -> m1_3203  [key=0, style=bold, color=blue];
m1_2459 -> m1_2460  [key=0, style=solid];
m1_2460 -> m1_12  [key=2, style=dotted];
m1_2460 -> m1_2461  [key=0, style=solid];
m1_2460 -> m1_2462  [key=1, style=dashed, color=darkseagreen4, label=c];
m1_2460 -> m1_2463  [key=1, style=dashed, color=darkseagreen4, label=c];
m1_2461 -> m1_34  [key=2, style=dotted];
m1_2461 -> m1_2462  [key=0, style=solid];
m1_2462 -> m1_34  [key=2, style=dotted];
m1_2462 -> m1_2463  [key=0, style=solid];
m1_2463 -> m1_34  [key=2, style=dotted];
m1_2463 -> m1_2464  [key=0, style=solid];
m1_2464 -> m1_2459  [key=0, style=bold, color=blue];
m1_917 -> m1_918  [key=0, style=solid];
m1_924 -> m1_12  [key=2, style=dotted];
m1_924 -> m1_925  [key=0, style=solid];
m1_924 -> m1_926  [key=1, style=dashed, color=darkseagreen4, label=wibbleOut];
m1_924 -> m1_927  [key=1, style=dashed, color=darkseagreen4, label=wibbleOut];
m1_924 -> m1_928  [key=1, style=dashed, color=darkseagreen4, label=wibbleOut];
m1_924 -> m1_929  [key=1, style=dashed, color=darkseagreen4, label=wibbleOut];
m1_924 -> m1_930  [key=1, style=dashed, color=darkseagreen4, label=wibbleOut];
m1_924 -> m1_931  [key=1, style=dashed, color=darkseagreen4, label=wibbleOut];
m1_925 -> m1_34  [key=2, style=dotted];
m1_925 -> m1_926  [key=0, style=solid];
m1_926 -> m1_34  [key=2, style=dotted];
m1_926 -> m1_927  [key=0, style=solid];
m1_927 -> m1_34  [key=2, style=dotted];
m1_927 -> m1_928  [key=0, style=solid];
m1_928 -> m1_34  [key=2, style=dotted];
m1_928 -> m1_929  [key=0, style=solid];
m1_929 -> m1_34  [key=2, style=dotted];
m1_929 -> m1_930  [key=0, style=solid];
m1_930 -> m1_34  [key=2, style=dotted];
m1_930 -> m1_931  [key=0, style=solid];
m1_931 -> m1_34  [key=2, style=dotted];
m1_931 -> m1_932  [key=0, style=solid];
m1_923 -> m1_924  [key=0, style=solid];
m1_923 -> m1_47  [key=2, style=dotted];
m1_918 -> m1_923  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m1_918 -> m1_919  [key=0, style=solid];
m1_918 -> m1_933  [key=2, style=dotted];
m1_918 -> m1_920  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m1_918 -> m1_921  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m1_918 -> m1_922  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m1_922 -> m1_923  [key=0, style=solid];
m1_922 -> m1_64  [key=2, style=dotted];
m1_920 -> m1_64  [key=2, style=dotted];
m1_920 -> m1_921  [key=0, style=solid];
m1_921 -> m1_64  [key=2, style=dotted];
m1_921 -> m1_922  [key=0, style=solid];
m1_919 -> m1_920  [key=0, style=solid];
m1_932 -> m1_917  [key=0, style=bold, color=blue];
m1_1980 -> m1_1981  [key=0, style=solid];
m1_1992 -> m1_12  [key=2, style=dotted];
m1_1992 -> m1_1993  [key=0, style=solid];
m1_1992 -> m1_1994  [key=1, style=dashed, color=darkseagreen4, label=o2];
m1_1992 -> m1_1995  [key=1, style=dashed, color=darkseagreen4, label=o2];
m1_1992 -> m1_1996  [key=1, style=dashed, color=darkseagreen4, label=o2];
m1_1992 -> m1_1997  [key=1, style=dashed, color=darkseagreen4, label=o2];
m1_1992 -> m1_1998  [key=1, style=dashed, color=darkseagreen4, label=o2];
m1_1995 -> m1_34  [key=2, style=dotted];
m1_1995 -> m1_1996  [key=0, style=solid];
m1_1993 -> m1_34  [key=2, style=dotted];
m1_1993 -> m1_1994  [key=0, style=solid];
m1_1994 -> m1_34  [key=2, style=dotted];
m1_1994 -> m1_1995  [key=0, style=solid];
m1_1996 -> m1_34  [key=2, style=dotted];
m1_1996 -> m1_1997  [key=0, style=solid];
m1_1997 -> m1_34  [key=2, style=dotted];
m1_1997 -> m1_1998  [key=0, style=solid];
m1_1998 -> m1_34  [key=2, style=dotted];
m1_1998 -> m1_1999  [key=0, style=solid];
m1_1991 -> m1_1992  [key=0, style=solid];
m1_1991 -> m1_67  [key=2, style=dotted];
m1_1990 -> m1_1992  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_1990 -> m1_1991  [key=0, style=solid];
m1_1990 -> m1_95  [key=2, style=dotted];
m1_1990 -> m1_962  [key=2, style=dotted];
m1_1986 -> m1_1995  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffset];
m1_1986 -> m1_123  [key=2, style=dotted];
m1_1986 -> m1_1987  [key=0, style=solid];
m1_1986 -> m1_839  [key=2, style=dotted];
m1_1986 -> m1_1989  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffset];
m1_1988 -> m1_1991  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffsetText];
m1_1988 -> m1_1989  [key=0, style=solid];
m1_1989 -> m1_1990  [key=0, style=solid];
m1_1989 -> m1_1889  [key=2, style=dotted];
m1_1982 -> m1_831  [key=2, style=dotted];
m1_1982 -> m1_1983  [key=0, style=solid];
m1_1985 -> m1_1986  [key=0, style=solid];
m1_1987 -> m1_1988  [key=0, style=solid];
m1_1981 -> m1_1989  [key=1, style=dashed, color=darkseagreen4, label=person];
m1_1981 -> m1_1982  [key=0, style=solid];
m1_1981 -> m1_1985  [key=1, style=dashed, color=darkseagreen4, label=person];
m1_1981 -> m1_1244  [key=2, style=dotted];
m1_1981 -> m1_1983  [key=1, style=dashed, color=darkseagreen4, label=person];
m1_1981 -> m1_1984  [key=1, style=dashed, color=darkseagreen4, label=person];
m1_1983 -> m1_1984  [key=0, style=solid];
m1_1984 -> m1_1985  [key=0, style=solid];
m1_1999 -> m1_1980  [key=0, style=bold, color=blue];
m1_3362 -> m1_3363  [key=0, style=solid];
m1_3365 -> m1_67  [key=2, style=dotted];
m1_3365 -> m1_3366  [key=0, style=solid];
m1_3364 -> m1_95  [key=2, style=dotted];
m1_3364 -> m1_962  [key=2, style=dotted];
m1_3364 -> m1_3365  [key=0, style=solid];
m1_3363 -> m1_3364  [key=0, style=solid];
m1_3363 -> m1_3367  [key=2, style=dotted];
m1_3366 -> m1_3362  [key=0, style=bold, color=blue];
m1_2872 -> m1_2873  [key=0, style=solid];
m1_2874 -> m1_12  [key=2, style=dotted];
m1_2874 -> m1_2875  [key=0, style=solid];
m1_2877 -> m1_12  [key=2, style=dotted];
m1_2877 -> m1_2878  [key=0, style=solid];
m1_2875 -> m1_34  [key=2, style=dotted];
m1_2875 -> m1_2876  [key=0, style=solid];
m1_2878 -> m1_34  [key=2, style=dotted];
m1_2878 -> m1_2879  [key=0, style=solid];
m1_2878 -> m1_976  [key=2, style=dotted];
m1_2873 -> m1_2874  [key=0, style=solid];
m1_2873 -> m1_2873  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m1_2876 -> m1_2877  [key=0, style=solid];
m1_2879 -> m1_2872  [key=0, style=bold, color=blue];
m1_1065 -> m1_1066  [key=0, style=solid];
m1_1071 -> m1_34  [key=2, style=dotted];
m1_1071 -> m1_1072  [key=0, style=solid];
m1_1072 -> m1_34  [key=2, style=dotted];
m1_1072 -> m1_1073  [key=0, style=solid];
m1_1069 -> m1_34  [key=2, style=dotted];
m1_1069 -> m1_1070  [key=0, style=solid];
m1_1070 -> m1_36  [key=2, style=dotted];
m1_1070 -> m1_1071  [key=0, style=solid];
m1_1070 -> m1_1072  [key=1, style=dashed, color=darkseagreen4, label=m2];
m1_1070 -> m1_1074  [key=2, style=dotted];
m1_1066 -> m1_1071  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m1_1066 -> m1_1072  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m1_1066 -> m1_1067  [key=0, style=solid];
m1_1066 -> m1_1036  [key=2, style=dotted];
m1_1068 -> m1_1069  [key=0, style=solid];
m1_1068 -> m1_1070  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_1068 -> m1_1074  [key=2, style=dotted];
m1_1068 -> m1_1026  [key=2, style=dotted];
m1_1067 -> m1_1068  [key=0, style=solid];
m1_1067 -> m1_1037  [key=2, style=dotted];
m1_1073 -> m1_1065  [key=0, style=bold, color=blue];
m1_1454 -> m1_1455  [key=0, style=solid];
m1_1456 -> m1_12  [key=2, style=dotted];
m1_1456 -> m1_1457  [key=0, style=solid];
m1_1456 -> m1_1458  [key=1, style=dashed, color=darkseagreen4, label=content];
m1_1456 -> m1_1459  [key=1, style=dashed, color=darkseagreen4, label=content];
m1_1456 -> m1_1460  [key=1, style=dashed, color=darkseagreen4, label=content];
m1_1457 -> m1_34  [key=2, style=dotted];
m1_1457 -> m1_1458  [key=0, style=solid];
m1_1458 -> m1_34  [key=2, style=dotted];
m1_1458 -> m1_1459  [key=0, style=solid];
m1_1459 -> m1_34  [key=2, style=dotted];
m1_1459 -> m1_1460  [key=0, style=solid];
m1_1460 -> m1_34  [key=2, style=dotted];
m1_1460 -> m1_1461  [key=0, style=solid];
m1_1455 -> m1_1456  [key=0, style=solid];
m1_1455 -> m1_1451  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m1_1461 -> m1_1454  [key=0, style=bold, color=blue];
m1_1730 -> m1_1731  [key=0, style=solid];
m1_166 -> m1_167  [key=0, style=solid];
m1_166 -> m1_159  [key=0, style=bold, color=blue];
m1_165 -> m1_166  [key=0, style=solid];
m1_165 -> m1_34  [key=2, style=dotted];
m1_26 -> m1_12  [key=2, style=dotted];
m1_26 -> m1_27  [key=0, style=solid];
m1_26 -> m1_24  [key=0, style=bold, color=blue];
m1_818 -> m1_12  [key=2, style=dotted];
m1_818 -> m1_819  [key=0, style=solid];
m1_1489 -> m1_12  [key=2, style=dotted];
m1_1489 -> m1_1490  [key=0, style=solid];
m1_1516 -> m1_12  [key=2, style=dotted];
m1_1516 -> m1_1517  [key=0, style=solid];
m1_1523 -> m1_12  [key=2, style=dotted];
m1_1523 -> m1_1524  [key=0, style=solid];
m1_1530 -> m1_12  [key=2, style=dotted];
m1_1530 -> m1_1531  [key=0, style=solid];
m1_1537 -> m1_12  [key=2, style=dotted];
m1_1537 -> m1_1538  [key=0, style=solid];
m1_1544 -> m1_12  [key=2, style=dotted];
m1_1544 -> m1_1545  [key=0, style=solid];
m1_1551 -> m1_12  [key=2, style=dotted];
m1_1551 -> m1_1552  [key=0, style=solid];
m1_1558 -> m1_12  [key=2, style=dotted];
m1_1558 -> m1_1559  [key=0, style=solid];
m1_1565 -> m1_12  [key=2, style=dotted];
m1_1565 -> m1_1566  [key=0, style=solid];
m1_2159 -> m1_12  [key=2, style=dotted];
m1_2159 -> m1_2160  [key=0, style=solid];
m1_2173 -> m1_12  [key=2, style=dotted];
m1_2173 -> m1_2174  [key=0, style=solid];
m1_2275 -> m1_12  [key=2, style=dotted];
m1_2275 -> m1_2276  [key=0, style=solid];
m1_2828 -> m1_12  [key=2, style=dotted];
m1_2828 -> m1_2829  [key=0, style=solid];
m1_2842 -> m1_12  [key=2, style=dotted];
m1_2842 -> m1_2843  [key=0, style=solid];
m1_2863 -> m1_12  [key=2, style=dotted];
m1_2863 -> m1_2864  [key=0, style=solid];
m1_2870 -> m1_12  [key=2, style=dotted];
m1_2870 -> m1_2871  [key=0, style=solid];
m1_2943 -> m1_12  [key=2, style=dotted];
m1_2943 -> m1_2944  [key=0, style=solid];
m1_2949 -> m1_12  [key=2, style=dotted];
m1_2949 -> m1_2950  [key=0, style=solid];
m1_2955 -> m1_12  [key=2, style=dotted];
m1_2955 -> m1_2956  [key=0, style=solid];
m1_2965 -> m1_12  [key=2, style=dotted];
m1_2965 -> m1_2966  [key=0, style=solid];
m1_3339 -> m1_12  [key=2, style=dotted];
m1_3339 -> m1_3340  [key=0, style=solid];
m1_3339 -> m1_3335  [key=1, style=dashed, color=darkseagreen4, label=obj];
m1_3414 -> m1_12  [key=2, style=dotted];
m1_3414 -> m1_3415  [key=0, style=solid];
m1_3422 -> m1_12  [key=2, style=dotted];
m1_3422 -> m1_3423  [key=0, style=solid];
m1_3431 -> m1_12  [key=2, style=dotted];
m1_3431 -> m1_3432  [key=0, style=solid];
m1_3641 -> m1_12  [key=2, style=dotted];
m1_3641 -> m1_3642  [key=0, style=solid];
m1_3783 -> m1_12  [key=2, style=dotted];
m1_3783 -> m1_3784  [key=0, style=solid];
m1_3803 -> m1_36  [key=2, style=dotted];
m1_3803 -> m1_3804  [key=0, style=solid];
m1_3803 -> m1_3805  [key=2, style=dotted];
m1_3803 -> m1_3806  [key=2, style=dotted];
m1_3803 -> m1_3807  [key=2, style=dotted];
m1_25 -> m1_26  [key=0, style=solid];
m1_25 -> m1_27  [key=2, style=dotted];
m1_25 -> m1_28  [key=2, style=dotted];
m1_785 -> m1_786  [key=0, style=solid];
m1_817 -> m1_818  [key=0, style=solid];
m1_1097 -> m1_1098  [key=0, style=solid];
m1_1192 -> m1_1193  [key=0, style=solid];
m1_1237 -> m1_1238  [key=0, style=solid];
m1_1344 -> m1_1345  [key=0, style=solid];
m1_1488 -> m1_1489  [key=0, style=solid];
m1_1515 -> m1_1516  [key=0, style=solid];
m1_1522 -> m1_1523  [key=0, style=solid];
m1_1529 -> m1_1530  [key=0, style=solid];
m1_1536 -> m1_1537  [key=0, style=solid];
m1_1543 -> m1_1544  [key=0, style=solid];
m1_1550 -> m1_1551  [key=0, style=solid];
m1_1557 -> m1_1558  [key=0, style=solid];
m1_1564 -> m1_1565  [key=0, style=solid];
m1_1578 -> m1_1579  [key=0, style=solid];
m1_1586 -> m1_1587  [key=0, style=solid];
m1_1597 -> m1_1598  [key=0, style=solid];
m1_1604 -> m1_1605  [key=0, style=solid];
m1_1610 -> m1_1611  [key=0, style=solid];
m1_1616 -> m1_1617  [key=0, style=solid];
m1_1766 -> m1_1767  [key=0, style=solid];
m1_2158 -> m1_2159  [key=0, style=solid];
m1_2164 -> m1_2165  [key=0, style=solid];
m1_2274 -> m1_2275  [key=0, style=solid];
m1_2491 -> m1_2492  [key=0, style=solid];
m1_2827 -> m1_2828  [key=0, style=solid];
m1_2841 -> m1_2842  [key=0, style=solid];
m1_2861 -> m1_2862  [key=0, style=solid];
m1_2868 -> m1_2869  [key=0, style=solid];
m1_2942 -> m1_2943  [key=0, style=solid];
m1_2948 -> m1_2949  [key=0, style=solid];
m1_2954 -> m1_2955  [key=0, style=solid];
m1_2964 -> m1_2965  [key=0, style=solid];
m1_2970 -> m1_2971  [key=0, style=solid];
m1_3236 -> m1_3237  [key=0, style=solid];
m1_3249 -> m1_3250  [key=0, style=solid];
m1_3413 -> m1_3414  [key=0, style=solid];
m1_3421 -> m1_3422  [key=0, style=solid];
m1_3430 -> m1_3431  [key=0, style=solid];
m1_3639 -> m1_3640  [key=0, style=solid];
m1_3775 -> m1_3776  [key=0, style=solid];
m1_3782 -> m1_3783  [key=0, style=solid];
m1_3802 -> m1_3803  [key=0, style=solid];
m1_24 -> m1_22  [key=0, style=bold, color=blue];
m1_24 -> m1_25  [key=0, style=solid];
m1_819 -> m1_817  [key=0, style=bold, color=blue];
m1_1490 -> m1_1488  [key=0, style=bold, color=blue];
m1_1517 -> m1_1515  [key=0, style=bold, color=blue];
m1_1524 -> m1_1522  [key=0, style=bold, color=blue];
m1_1531 -> m1_1529  [key=0, style=bold, color=blue];
m1_1538 -> m1_1536  [key=0, style=bold, color=blue];
m1_1545 -> m1_1543  [key=0, style=bold, color=blue];
m1_1552 -> m1_1550  [key=0, style=bold, color=blue];
m1_1559 -> m1_1557  [key=0, style=bold, color=blue];
m1_1566 -> m1_1564  [key=0, style=bold, color=blue];
m1_2160 -> m1_2158  [key=0, style=bold, color=blue];
m1_2172 -> m1_2173  [key=0, style=solid];
m1_2172 -> m1_65  [key=2, style=dotted];
m1_2174 -> m1_2164  [key=0, style=bold, color=blue];
m1_2276 -> m1_2274  [key=0, style=bold, color=blue];
m1_2829 -> m1_2827  [key=0, style=bold, color=blue];
m1_2843 -> m1_2841  [key=0, style=bold, color=blue];
m1_2862 -> m1_2863  [key=0, style=solid];
m1_2864 -> m1_2861  [key=0, style=bold, color=blue];
m1_2869 -> m1_2870  [key=0, style=solid];
m1_2871 -> m1_2868  [key=0, style=bold, color=blue];
m1_2944 -> m1_2942  [key=0, style=bold, color=blue];
m1_2950 -> m1_2948  [key=0, style=bold, color=blue];
m1_2956 -> m1_2954  [key=0, style=bold, color=blue];
m1_2966 -> m1_2964  [key=0, style=bold, color=blue];
m1_3338 -> m1_3339  [key=0, style=solid];
m1_3340 -> m1_3338  [key=0, style=bold, color=blue];
m1_3415 -> m1_3413  [key=0, style=bold, color=blue];
m1_3423 -> m1_3421  [key=0, style=bold, color=blue];
m1_3432 -> m1_3430  [key=0, style=bold, color=blue];
m1_3640 -> m1_3641  [key=0, style=solid];
m1_3642 -> m1_3639  [key=0, style=bold, color=blue];
m1_3784 -> m1_3782  [key=0, style=bold, color=blue];
m1_3804 -> m1_3802  [key=0, style=bold, color=blue];
m1_786 -> m1_47  [key=2, style=dotted];
m1_786 -> m1_787  [key=0, style=solid];
m1_786 -> m1_788  [key=2, style=dotted];
m1_1099 -> m1_47  [key=2, style=dotted];
m1_1099 -> m1_1100  [key=0, style=solid];
m1_1194 -> m1_47  [key=2, style=dotted];
m1_1194 -> m1_1195  [key=0, style=solid];
m1_3776 -> m1_47  [key=2, style=dotted];
m1_3776 -> m1_3777  [key=0, style=solid];
m1_3776 -> m1_3778  [key=2, style=dotted];
m1_787 -> m1_785  [key=0, style=bold, color=blue];
m1_1100 -> m1_1097  [key=0, style=bold, color=blue];
m1_1098 -> m1_1099  [key=0, style=solid];
m1_1098 -> m1_1101  [key=2, style=dotted];
m1_1196 -> m1_1192  [key=0, style=bold, color=blue];
m1_1193 -> m1_831  [key=2, style=dotted];
m1_1193 -> m1_1194  [key=0, style=solid];
m1_1193 -> m1_1172  [key=2, style=dotted];
m1_1238 -> m1_1239  [key=0, style=solid];
m1_1238 -> m1_666  [key=2, style=dotted];
m1_1239 -> m1_1237  [key=0, style=bold, color=blue];
m1_1348 -> m1_1344  [key=0, style=bold, color=blue];
m1_1345 -> m1_1346  [key=0, style=solid];
m1_1345 -> m1_1331  [key=2, style=dotted];
m1_1345 -> m1_1347  [key=1, style=dashed, color=darkseagreen4, label=o];
m1_1579 -> m1_1580  [key=0, style=solid];
m1_1579 -> m1_1244  [key=2, style=dotted];
m1_1579 -> m1_1581  [key=2, style=dotted];
m1_1580 -> m1_1578  [key=0, style=bold, color=blue];
m1_1587 -> m1_1588  [key=0, style=solid];
m1_1587 -> m1_120  [key=2, style=dotted];
m1_1587 -> m1_1581  [key=2, style=dotted];
m1_1588 -> m1_1586  [key=0, style=bold, color=blue];
m1_1599 -> m1_1597  [key=0, style=bold, color=blue];
m1_1598 -> m1_1599  [key=0, style=solid];
m1_1598 -> m1_559  [key=2, style=dotted];
m1_1598 -> m1_95  [key=2, style=dotted];
m1_1598 -> m1_1600  [key=2, style=dotted];
m1_1598 -> m1_463  [key=2, style=dotted];
m1_1606 -> m1_1604  [key=0, style=bold, color=blue];
m1_1605 -> m1_1606  [key=0, style=solid];
m1_1605 -> m1_95  [key=2, style=dotted];
m1_1605 -> m1_1600  [key=2, style=dotted];
m1_1605 -> m1_96  [key=2, style=dotted];
m1_1612 -> m1_1610  [key=0, style=bold, color=blue];
m1_1611 -> m1_1612  [key=0, style=solid];
m1_1611 -> m1_95  [key=2, style=dotted];
m1_1611 -> m1_1600  [key=2, style=dotted];
m1_1611 -> m1_96  [key=2, style=dotted];
m1_1618 -> m1_1616  [key=0, style=bold, color=blue];
m1_1617 -> m1_1618  [key=0, style=solid];
m1_1617 -> m1_95  [key=2, style=dotted];
m1_1617 -> m1_1600  [key=2, style=dotted];
m1_1617 -> m1_96  [key=2, style=dotted];
m1_1767 -> m1_1768  [key=0, style=solid];
m1_1767 -> m1_95  [key=2, style=dotted];
m1_1767 -> m1_96  [key=2, style=dotted];
m1_1768 -> m1_1766  [key=0, style=bold, color=blue];
m1_2165 -> m1_2166  [key=0, style=solid];
m1_2165 -> m1_554  [key=2, style=dotted];
m1_2165 -> m1_2167  [key=1, style=dashed, color=darkseagreen4, label=reference];
m1_2165 -> m1_2171  [key=1, style=dashed, color=darkseagreen4, label=reference];
m1_2493 -> m1_2491  [key=0, style=bold, color=blue];
m1_2492 -> m1_2493  [key=0, style=solid];
m1_2492 -> m1_666  [key=2, style=dotted];
m1_2972 -> m1_2970  [key=0, style=bold, color=blue];
m1_2971 -> m1_2972  [key=0, style=solid];
m1_2971 -> m1_199  [key=2, style=dotted];
m1_3237 -> m1_3238  [key=0, style=solid];
m1_3237 -> m1_117  [key=2, style=dotted];
m1_3237 -> m1_118  [key=2, style=dotted];
m1_3237 -> m1_2297  [key=2, style=dotted];
m1_3238 -> m1_3236  [key=0, style=bold, color=blue];
m1_3257 -> m1_3249  [key=0, style=bold, color=blue];
m1_3250 -> m1_3251  [key=0, style=solid];
m1_3250 -> m1_3253  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_3777 -> m1_3775  [key=0, style=bold, color=blue];
m1_2171 -> m1_2172  [key=0, style=solid];
m1_2171 -> m1_557  [key=2, style=dotted];
m1_2168 -> m1_2172  [key=1, style=dashed, color=darkseagreen4, label=child];
m1_2168 -> m1_2171  [key=1, style=dashed, color=darkseagreen4, label=child];
m1_2168 -> m1_2169  [key=0, style=solid];
m1_2168 -> m1_554  [key=2, style=dotted];
m1_2168 -> m1_2170  [key=1, style=dashed, color=darkseagreen4, label=child];
m1_98 -> m1_99  [key=0, style=solid];
m1_98 -> m1_100  [key=0, style=solid];
m1_651 -> m1_652  [key=0, style=solid];
m1_654 -> m1_655  [key=0, style=solid];
m1_3092 -> m1_64  [key=2, style=dotted];
m1_3092 -> m1_3093  [key=0, style=solid];
m1_3107 -> m1_64  [key=2, style=dotted];
m1_3107 -> m1_3108  [key=0, style=solid];
m1_3122 -> m1_64  [key=2, style=dotted];
m1_3122 -> m1_3123  [key=0, style=solid];
m1_1195 -> m1_1196  [key=0, style=solid];
m1_1195 -> m1_66  [key=2, style=dotted];
m1_1347 -> m1_1348  [key=0, style=solid];
m1_1347 -> m1_95  [key=2, style=dotted];
m1_1347 -> m1_962  [key=2, style=dotted];
m1_1346 -> m1_1347  [key=0, style=solid];
m1_2166 -> m1_557  [key=2, style=dotted];
m1_2166 -> m1_2167  [key=0, style=solid];
m1_2167 -> m1_2168  [key=0, style=solid];
m1_2167 -> m1_557  [key=2, style=dotted];
m1_3256 -> m1_3257  [key=0, style=solid];
m1_3256 -> m1_2259  [key=2, style=dotted];
m1_3251 -> m1_119  [key=2, style=dotted];
m1_3251 -> m1_3256  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m1_3251 -> m1_3252  [key=0, style=solid];
m1_3253 -> m1_117  [key=2, style=dotted];
m1_3253 -> m1_118  [key=2, style=dotted];
m1_3253 -> m1_3256  [key=1, style=dashed, color=darkseagreen4, label=reader];
m1_3253 -> m1_3254  [key=0, style=solid];
m1_3253 -> m1_3255  [key=1, style=dashed, color=darkseagreen4, label=reader];
m1_2170 -> m1_2171  [key=0, style=solid];
m1_2170 -> m1_557  [key=2, style=dotted];
m1_2169 -> m1_557  [key=2, style=dotted];
m1_2169 -> m1_2170  [key=0, style=solid];
m1_97 -> m1_98  [key=0, style=solid];
m1_97 -> m1_49  [key=2, style=dotted];
m1_99 -> m1_97  [key=0, style=bold, color=blue];
m1_99 -> m1_141  [key=0, style=solid];
m1_653 -> m1_651  [key=0, style=bold, color=blue];
m1_652 -> m1_653  [key=0, style=solid];
m1_656 -> m1_654  [key=0, style=bold, color=blue];
m1_655 -> m1_656  [key=0, style=solid];
m1_3254 -> m1_3058  [key=2, style=dotted];
m1_3254 -> m1_3255  [key=0, style=solid];
m1_3255 -> m1_3058  [key=2, style=dotted];
m1_3255 -> m1_3256  [key=0, style=solid];
m1_3093 -> m1_3094  [key=0, style=solid];
m1_3091 -> m1_3092  [key=0, style=solid];
m1_3091 -> m1_3093  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m1_3108 -> m1_3109  [key=0, style=solid];
m1_3106 -> m1_3107  [key=0, style=solid];
m1_3106 -> m1_3108  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m1_3123 -> m1_3124  [key=0, style=solid];
m1_3121 -> m1_3122  [key=0, style=solid];
m1_3121 -> m1_3123  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m1_3252 -> m1_3253  [key=0, style=solid];
m1_3094 -> m1_3091  [key=0, style=bold, color=blue];
m1_3109 -> m1_3106  [key=0, style=bold, color=blue];
m1_3124 -> m1_3121  [key=0, style=bold, color=blue];
m1_1731 -> m1_1732  [key=0, style=solid];
m1_1732 -> m1_1730  [key=0, style=bold, color=blue];
m1_122 -> m1_123  [key=0, style=solid];
m1_122 -> m1_159  [key=2, style=dotted];
m1_3302 -> m1_3303  [key=0, style=solid];
m1_3308 -> m1_34  [key=2, style=dotted];
m1_3308 -> m1_3309  [key=0, style=solid];
m1_3307 -> m1_3308  [key=0, style=solid];
m1_3307 -> m1_95  [key=2, style=dotted];
m1_3307 -> m1_463  [key=2, style=dotted];
m1_3305 -> m1_47  [key=2, style=dotted];
m1_3305 -> m1_3306  [key=0, style=solid];
m1_3304 -> m1_3307  [key=1, style=dashed, color=darkseagreen4, label=d];
m1_3304 -> m1_3305  [key=0, style=solid];
m1_3304 -> m1_120  [key=2, style=dotted];
m1_3304 -> m1_3306  [key=1, style=dashed, color=darkseagreen4, label=d];
m1_3306 -> m1_3307  [key=0, style=solid];
m1_3306 -> m1_463  [key=2, style=dotted];
m1_3306 -> m1_95  [key=2, style=dotted];
m1_3303 -> m1_3304  [key=0, style=solid];
m1_3309 -> m1_3302  [key=0, style=bold, color=blue];
m1_3643 -> m1_3644  [key=0, style=solid];
m1_3647 -> m1_12  [key=2, style=dotted];
m1_3647 -> m1_3648  [key=0, style=solid];
m1_3648 -> m1_34  [key=2, style=dotted];
m1_3648 -> m1_3649  [key=0, style=solid];
m1_3646 -> m1_3647  [key=0, style=solid];
m1_3646 -> m1_47  [key=2, style=dotted];
m1_3644 -> m1_3648  [key=1, style=dashed, color=darkseagreen4, label=originalUri];
m1_3644 -> m1_3644  [key=3, color=darkorchid, style=bold, label="Local variable string originalUri"];
m1_3644 -> m1_3645  [key=0, style=solid];
m1_3645 -> m1_3646  [key=0, style=solid];
m1_3645 -> m1_1440  [key=2, style=dotted];
m1_3649 -> m1_3643  [key=0, style=bold, color=blue];
m1_3418 -> m1_3419  [key=0, style=solid];
m1_3419 -> m1_8  [key=2, style=dotted];
m1_3419 -> m1_3420  [key=0, style=solid];
m1_3419 -> m1_3421  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_3420 -> m1_3418  [key=0, style=bold, color=blue];
m1_1075 -> m1_1076  [key=0, style=solid];
m1_1078 -> m1_65  [key=2, style=dotted];
m1_1078 -> m1_1079  [key=0, style=solid];
m1_1079 -> m1_66  [key=2, style=dotted];
m1_1079 -> m1_1080  [key=0, style=solid];
m1_1077 -> m1_1078  [key=0, style=solid];
m1_1077 -> m1_1037  [key=2, style=dotted];
m1_1076 -> m1_1077  [key=0, style=solid];
m1_1076 -> m1_1081  [key=2, style=dotted];
m1_1076 -> m1_1082  [key=2, style=dotted];
m1_1080 -> m1_1075  [key=0, style=bold, color=blue];
m1_1607 -> m1_1608  [key=0, style=solid];
m1_1608 -> m1_8  [key=2, style=dotted];
m1_1608 -> m1_1609  [key=0, style=solid];
m1_1608 -> m1_1610  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_1609 -> m1_1607  [key=0, style=bold, color=blue];
m1_90 -> m1_91  [key=0, style=solid];
m1_90 -> m1_142  [key=0, style=solid];
m1_93 -> m1_34  [key=2, style=dotted];
m1_93 -> m1_94  [key=0, style=solid];
m1_92 -> m1_93  [key=0, style=solid];
m1_92 -> m1_95  [key=2, style=dotted];
m1_92 -> m1_96  [key=2, style=dotted];
m1_92 -> m1_98  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m1_92 -> m1_94  [key=0, style=solid];
m1_91 -> m1_92  [key=0, style=solid];
m1_91 -> m1_91  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m1_91 -> m1_0  [key=2, style=dotted];
m1_91 -> m1_150  [key=2, style=dotted];
m1_91 -> m1_7  [key=2, style=dotted];
m1_94 -> m1_90  [key=0, style=bold, color=blue];
m1_94 -> m1_95  [key=0, style=solid];
m1_94 -> m1_96  [key=0, style=solid];
m1_100 -> m1_101  [key=0, style=solid];
m1_100 -> m1_108  [key=0, style=solid];
m1_101 -> m1_12  [key=2, style=dotted];
m1_101 -> m1_102  [key=0, style=solid];
m1_101 -> m1_103  [key=1, style=dashed, color=darkseagreen4, label=s];
m1_101 -> m1_104  [key=1, style=dashed, color=darkseagreen4, label=s];
m1_101 -> m1_151  [key=2, style=dotted];
m1_102 -> m1_34  [key=2, style=dotted];
m1_102 -> m1_103  [key=0, style=solid];
m1_103 -> m1_34  [key=2, style=dotted];
m1_103 -> m1_104  [key=0, style=solid];
m1_104 -> m1_34  [key=2, style=dotted];
m1_104 -> m1_105  [key=0, style=solid];
m1_104 -> m1_152  [key=2, style=dotted];
m1_104 -> m1_106  [key=1, style=dashed, color=darkseagreen4, label=keyType];
m1_104 -> m1_107  [key=1, style=dashed, color=darkseagreen4, label=valueType];
m1_105 -> m1_100  [key=0, style=bold, color=blue];
m1_105 -> m1_106  [key=0, style=solid];
m1_105 -> m1_141  [key=0, style=solid];
m1_1685 -> m1_1686  [key=0, style=solid];
m1_1691 -> m1_12  [key=2, style=dotted];
m1_1691 -> m1_1692  [key=0, style=solid];
m1_1691 -> m1_493  [key=2, style=dotted];
m1_1693 -> m1_34  [key=2, style=dotted];
m1_1693 -> m1_1694  [key=0, style=solid];
m1_1694 -> m1_34  [key=2, style=dotted];
m1_1694 -> m1_1695  [key=0, style=solid];
m1_1695 -> m1_34  [key=2, style=dotted];
m1_1695 -> m1_1696  [key=0, style=solid];
m1_1690 -> m1_1691  [key=0, style=solid];
m1_1690 -> m1_1693  [key=0, style=solid];
m1_1692 -> m1_1690  [key=0, style=solid];
m1_1692 -> m1_64  [key=2, style=dotted];
m1_1689 -> m1_1693  [key=1, style=dashed, color=darkseagreen4, label=searchResults];
m1_1689 -> m1_1694  [key=1, style=dashed, color=darkseagreen4, label=searchResults];
m1_1689 -> m1_1695  [key=1, style=dashed, color=darkseagreen4, label=searchResults];
m1_1689 -> m1_1690  [key=0, style=solid];
m1_1689 -> m1_1692  [key=1, style=dashed, color=darkseagreen4, label=searchResults];
m1_1689 -> m1_120  [key=2, style=dotted];
m1_1688 -> m1_1690  [key=1, style=dashed, color=darkseagreen4, label=results];
m1_1688 -> m1_770  [key=2, style=dotted];
m1_1688 -> m1_1689  [key=0, style=solid];
m1_1688 -> m1_177  [key=2, style=dotted];
m1_1687 -> m1_201  [key=2, style=dotted];
m1_1687 -> m1_1688  [key=0, style=solid];
m1_1686 -> m1_1687  [key=0, style=solid];
m1_1686 -> m1_1686  [key=3, color=darkorchid, style=bold, label="Local variable string googleSearchText"];
m1_1696 -> m1_1685  [key=0, style=bold, color=blue];
m1_2004 -> m1_2005  [key=0, style=solid];
m1_2005 -> m1_12  [key=2, style=dotted];
m1_2005 -> m1_2006  [key=0, style=solid];
m1_2005 -> m1_2007  [key=1, style=dashed, color=darkseagreen4, label=kvPairs];
m1_2005 -> m1_2008  [key=1, style=dashed, color=darkseagreen4, label=kvPairs];
m1_2005 -> m1_2009  [key=1, style=dashed, color=darkseagreen4, label=kvPairs];
m1_2005 -> m1_2010  [key=1, style=dashed, color=darkseagreen4, label=kvPairs];
m1_2006 -> m1_34  [key=2, style=dotted];
m1_2006 -> m1_2007  [key=0, style=solid];
m1_2007 -> m1_34  [key=2, style=dotted];
m1_2007 -> m1_2008  [key=0, style=solid];
m1_2008 -> m1_34  [key=2, style=dotted];
m1_2008 -> m1_2009  [key=0, style=solid];
m1_2009 -> m1_34  [key=2, style=dotted];
m1_2009 -> m1_2010  [key=0, style=solid];
m1_2010 -> m1_34  [key=2, style=dotted];
m1_2010 -> m1_2011  [key=0, style=solid];
m1_2011 -> m1_2004  [key=0, style=bold, color=blue];
m1_3282 -> m1_3283  [key=0, style=solid];
m1_3283 -> m1_12  [key=2, style=dotted];
m1_3283 -> m1_3284  [key=0, style=solid];
m1_3284 -> m1_34  [key=2, style=dotted];
m1_3284 -> m1_3285  [key=0, style=solid];
m1_3285 -> m1_3282  [key=0, style=bold, color=blue];
m1_1229 -> m1_1230  [key=0, style=solid];
m1_1233 -> m1_8  [key=2, style=dotted];
m1_1233 -> m1_1234  [key=0, style=solid];
m1_1233 -> m1_1237  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_1232 -> m1_1233  [key=0, style=solid];
m1_1232 -> m1_47  [key=2, style=dotted];
m1_1232 -> m1_1238  [key=1, style=dashed, color=darkseagreen4, label=strFromTest];
m1_1230 -> m1_1232  [key=1, style=dashed, color=darkseagreen4, label=testClass];
m1_1230 -> m1_1231  [key=0, style=solid];
m1_1230 -> m1_1235  [key=2, style=dotted];
m1_1231 -> m1_1232  [key=0, style=solid];
m1_1231 -> m1_1236  [key=2, style=dotted];
m1_1234 -> m1_1229  [key=0, style=bold, color=blue];
m1_536 -> m1_537  [key=0, style=solid];
m1_543 -> m1_558  [key=2, style=dotted];
m1_543 -> m1_544  [key=0, style=solid];
m1_543 -> m1_546  [key=1, style=dashed, color=darkseagreen4, label=jsonSerializer];
m1_543 -> m1_550  [key=1, style=dashed, color=darkseagreen4, label=jsonSerializer];
m1_542 -> m1_95  [key=2, style=dotted];
m1_542 -> m1_543  [key=0, style=solid];
m1_552 -> m1_66  [key=2, style=dotted];
m1_552 -> m1_553  [key=0, style=solid];
m1_537 -> m1_554  [key=2, style=dotted];
m1_537 -> m1_538  [key=0, style=solid];
m1_537 -> m1_540  [key=1, style=dashed, color=darkseagreen4, label=dictStore];
m1_537 -> m1_546  [key=1, style=dashed, color=darkseagreen4, label=dictStore];
m1_550 -> m1_566  [key=2, style=dotted];
m1_550 -> m1_565  [key=2, style=dotted];
m1_550 -> m1_551  [key=0, style=solid];
m1_544 -> m1_559  [key=2, style=dotted];
m1_544 -> m1_550  [key=1, style=dashed, color=darkseagreen4, label=ms];
m1_544 -> m1_545  [key=0, style=solid];
m1_544 -> m1_548  [key=1, style=dashed, color=darkseagreen4, label=ms];
m1_540 -> m1_557  [key=2, style=dotted];
m1_540 -> m1_541  [key=0, style=solid];
m1_540 -> m1_555  [key=2, style=dotted];
m1_540 -> m1_556  [key=2, style=dotted];
m1_546 -> m1_547  [key=0, style=solid];
m1_546 -> m1_561  [key=2, style=dotted];
m1_539 -> m1_542  [key=0, style=solid];
m1_539 -> m1_540  [key=0, style=solid];
m1_549 -> m1_552  [key=1, style=dashed, color=darkseagreen4, label=stopWatch];
m1_549 -> m1_550  [key=0, style=solid];
m1_549 -> m1_564  [key=2, style=dotted];
m1_549 -> m1_551  [key=1, style=dashed, color=darkseagreen4, label=stopWatch];
m1_551 -> m1_552  [key=0, style=solid];
m1_551 -> m1_567  [key=2, style=dotted];
m1_538 -> m1_540  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_538 -> m1_539  [key=0, style=solid];
m1_538 -> m1_538  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m1_538 -> m1_541  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_545 -> m1_546  [key=0, style=solid];
m1_545 -> m1_560  [key=2, style=dotted];
m1_545 -> m1_547  [key=1, style=dashed, color=darkseagreen4, label=streamWriter];
m1_548 -> m1_549  [key=0, style=solid];
m1_548 -> m1_563  [key=2, style=dotted];
m1_541 -> m1_539  [key=0, style=solid];
m1_541 -> m1_541  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_547 -> m1_548  [key=0, style=solid];
m1_547 -> m1_562  [key=2, style=dotted];
m1_553 -> m1_536  [key=0, style=bold, color=blue];
m1_3602 -> m1_3603  [key=0, style=solid];
m1_3603 -> m1_3604  [key=0, style=solid];
m1_3604 -> m1_3602  [key=0, style=bold, color=blue];
m1_1799 -> m1_1802  [key=0, style=solid];
m1_1802 -> m1_1803  [key=0, style=solid];
m1_1803 -> m1_1799  [key=0, style=bold, color=blue];
m1_2961 -> m1_2962  [key=0, style=solid];
m1_2962 -> m1_8  [key=2, style=dotted];
m1_2962 -> m1_2963  [key=0, style=solid];
m1_2962 -> m1_2964  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_2963 -> m1_2961  [key=0, style=bold, color=blue];
m1_1671 -> m1_1672  [key=0, style=solid];
m1_1676 -> m1_67  [key=2, style=dotted];
m1_1676 -> m1_1677  [key=0, style=solid];
m1_1675 -> m1_65  [key=2, style=dotted];
m1_1675 -> m1_1676  [key=0, style=solid];
m1_1672 -> m1_554  [key=2, style=dotted];
m1_1672 -> m1_1675  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m1_1672 -> m1_1673  [key=0, style=solid];
m1_1672 -> m1_1674  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m1_1673 -> m1_1244  [key=2, style=dotted];
m1_1673 -> m1_557  [key=2, style=dotted];
m1_1673 -> m1_1674  [key=0, style=solid];
m1_1674 -> m1_1244  [key=2, style=dotted];
m1_1674 -> m1_557  [key=2, style=dotted];
m1_1674 -> m1_1675  [key=0, style=solid];
m1_1677 -> m1_1671  [key=0, style=bold, color=blue];
m1_204 -> m1_205  [key=0, style=solid];
m1_204 -> m1_223  [key=0, style=solid];
m1_205 -> m1_12  [key=2, style=dotted];
m1_205 -> m1_206  [key=0, style=solid];
m1_207 -> m1_12  [key=2, style=dotted];
m1_207 -> m1_208  [key=0, style=solid];
m1_206 -> m1_34  [key=2, style=dotted];
m1_206 -> m1_207  [key=0, style=solid];
m1_208 -> m1_34  [key=2, style=dotted];
m1_208 -> m1_209  [key=0, style=solid];
m1_209 -> m1_204  [key=0, style=bold, color=blue];
m1_209 -> m1_210  [key=0, style=solid];
m1_978 -> m1_979  [key=0, style=solid];
m1_981 -> m1_12  [key=2, style=dotted];
m1_981 -> m1_982  [key=0, style=solid];
m1_980 -> m1_34  [key=2, style=dotted];
m1_980 -> m1_981  [key=0, style=solid];
m1_982 -> m1_34  [key=2, style=dotted];
m1_982 -> m1_983  [key=0, style=solid];
m1_979 -> m1_981  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_979 -> m1_980  [key=0, style=solid];
m1_979 -> m1_47  [key=2, style=dotted];
m1_983 -> m1_978  [key=0, style=bold, color=blue];
m1_2923 -> m1_2924  [key=0, style=solid];
m1_2924 -> m1_12  [key=2, style=dotted];
m1_2924 -> m1_2925  [key=0, style=solid];
m1_2926 -> m1_12  [key=2, style=dotted];
m1_2926 -> m1_2927  [key=0, style=solid];
m1_2928 -> m1_12  [key=2, style=dotted];
m1_2928 -> m1_2929  [key=0, style=solid];
m1_2930 -> m1_12  [key=2, style=dotted];
m1_2930 -> m1_2931  [key=0, style=solid];
m1_2932 -> m1_12  [key=2, style=dotted];
m1_2932 -> m1_2933  [key=0, style=solid];
m1_2934 -> m1_12  [key=2, style=dotted];
m1_2934 -> m1_2935  [key=0, style=solid];
m1_2936 -> m1_12  [key=2, style=dotted];
m1_2936 -> m1_2937  [key=0, style=solid];
m1_2925 -> m1_2926  [key=0, style=solid];
m1_2925 -> m1_89  [key=2, style=dotted];
m1_2927 -> m1_2928  [key=0, style=solid];
m1_2927 -> m1_89  [key=2, style=dotted];
m1_2929 -> m1_2930  [key=0, style=solid];
m1_2929 -> m1_89  [key=2, style=dotted];
m1_2931 -> m1_2932  [key=0, style=solid];
m1_2931 -> m1_89  [key=2, style=dotted];
m1_2933 -> m1_2934  [key=0, style=solid];
m1_2933 -> m1_89  [key=2, style=dotted];
m1_2935 -> m1_2936  [key=0, style=solid];
m1_2935 -> m1_89  [key=2, style=dotted];
m1_2937 -> m1_2938  [key=0, style=solid];
m1_2937 -> m1_89  [key=2, style=dotted];
m1_2938 -> m1_2923  [key=0, style=bold, color=blue];
m1_3465 -> m1_3466  [key=0, style=solid];
m1_3467 -> m1_12  [key=2, style=dotted];
m1_3467 -> m1_3468  [key=0, style=solid];
m1_3467 -> m1_3469  [key=1, style=dashed, color=darkseagreen4, label=c2];
m1_3467 -> m1_3470  [key=1, style=dashed, color=darkseagreen4, label=c2];
m1_3467 -> m1_3471  [key=1, style=dashed, color=darkseagreen4, label=c2];
m1_3467 -> m1_3472  [key=1, style=dashed, color=darkseagreen4, label=c2];
m1_3466 -> m1_3467  [key=0, style=solid];
m1_3466 -> m1_3466  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m1_3468 -> m1_3469  [key=0, style=solid];
m1_3468 -> m1_89  [key=2, style=dotted];
m1_3469 -> m1_3470  [key=0, style=solid];
m1_3469 -> m1_89  [key=2, style=dotted];
m1_3470 -> m1_3471  [key=0, style=solid];
m1_3470 -> m1_89  [key=2, style=dotted];
m1_3471 -> m1_3472  [key=0, style=solid];
m1_3471 -> m1_89  [key=2, style=dotted];
m1_3472 -> m1_3473  [key=0, style=solid];
m1_3472 -> m1_89  [key=2, style=dotted];
m1_3473 -> m1_3465  [key=0, style=bold, color=blue];
m1_2844 -> m1_2845  [key=0, style=solid];
m1_2847 -> m1_34  [key=2, style=dotted];
m1_2847 -> m1_2848  [key=0, style=solid];
m1_2846 -> m1_2847  [key=0, style=solid];
m1_2846 -> m1_47  [key=2, style=dotted];
m1_2845 -> m1_2846  [key=0, style=solid];
m1_2845 -> m1_2850  [key=2, style=dotted];
m1_2845 -> m1_2849  [key=2, style=dotted];
m1_2848 -> m1_2844  [key=0, style=bold, color=blue];
m1_945 -> m1_946  [key=0, style=solid];
m1_951 -> m1_34  [key=2, style=dotted];
m1_951 -> m1_952  [key=0, style=solid];
m1_950 -> m1_951  [key=0, style=solid];
m1_950 -> m1_47  [key=2, style=dotted];
m1_946 -> m1_950  [key=1, style=dashed, color=darkseagreen4, label=s];
m1_946 -> m1_947  [key=0, style=solid];
m1_946 -> m1_953  [key=2, style=dotted];
m1_946 -> m1_948  [key=1, style=dashed, color=darkseagreen4, label=s];
m1_946 -> m1_949  [key=1, style=dashed, color=darkseagreen4, label=s];
m1_949 -> m1_950  [key=0, style=solid];
m1_949 -> m1_954  [key=2, style=dotted];
m1_947 -> m1_948  [key=0, style=solid];
m1_947 -> m1_954  [key=2, style=dotted];
m1_948 -> m1_949  [key=0, style=solid];
m1_948 -> m1_954  [key=2, style=dotted];
m1_952 -> m1_945  [key=0, style=bold, color=blue];
m1_820 -> m1_821  [key=0, style=solid];
m1_829 -> m1_34  [key=2, style=dotted];
m1_829 -> m1_830  [key=0, style=solid];
m1_828 -> m1_829  [key=0, style=solid];
m1_828 -> m1_95  [key=2, style=dotted];
m1_828 -> m1_463  [key=2, style=dotted];
m1_827 -> m1_829  [key=1, style=dashed, color=darkseagreen4, label=expected];
m1_827 -> m1_828  [key=0, style=solid];
m1_827 -> m1_832  [key=2, style=dotted];
m1_821 -> m1_828  [key=1, style=dashed, color=darkseagreen4, label=testDates];
m1_821 -> m1_831  [key=2, style=dotted];
m1_821 -> m1_120  [key=2, style=dotted];
m1_821 -> m1_822  [key=0, style=solid];
m1_821 -> m1_824  [key=1, style=dashed, color=darkseagreen4, label=testDates];
m1_826 -> m1_827  [key=0, style=solid];
m1_826 -> m1_565  [key=2, style=dotted];
m1_822 -> m1_826  [key=1, style=dashed, color=darkseagreen4, label=ms];
m1_822 -> m1_559  [key=2, style=dotted];
m1_822 -> m1_823  [key=0, style=solid];
m1_822 -> m1_824  [key=1, style=dashed, color=darkseagreen4, label=ms];
m1_822 -> m1_825  [key=1, style=dashed, color=darkseagreen4, label=ms];
m1_824 -> m1_825  [key=0, style=solid];
m1_824 -> m1_645  [key=2, style=dotted];
m1_825 -> m1_826  [key=0, style=solid];
m1_825 -> m1_563  [key=2, style=dotted];
m1_823 -> m1_644  [key=2, style=dotted];
m1_823 -> m1_824  [key=0, style=solid];
m1_830 -> m1_820  [key=0, style=bold, color=blue];
m1_1381 -> m1_1382  [key=0, style=solid];
m1_1382 -> m1_1383  [key=0, style=solid];
m1_1383 -> m1_1381  [key=0, style=bold, color=blue];
m1_2729 -> m1_2730  [key=0, style=solid];
m1_2742 -> m1_34  [key=2, style=dotted];
m1_2742 -> m1_2743  [key=0, style=solid];
m1_2741 -> m1_2742  [key=0, style=solid];
m1_2741 -> m1_2748  [key=2, style=dotted];
m1_2741 -> m1_2743  [key=1, style=dashed, color=darkseagreen4, label=newObject];
m1_2743 -> m1_2744  [key=0, style=solid];
m1_2743 -> m1_2749  [key=2, style=dotted];
m1_2731 -> m1_2741  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m1_2731 -> m1_119  [key=2, style=dotted];
m1_2731 -> m1_2732  [key=0, style=solid];
m1_2731 -> m1_2736  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m1_2740 -> m1_2741  [key=0, style=solid];
m1_2740 -> m1_117  [key=2, style=dotted];
m1_2740 -> m1_565  [key=2, style=dotted];
m1_2739 -> m1_797  [key=2, style=dotted];
m1_2739 -> m1_2740  [key=0, style=solid];
m1_2736 -> m1_2746  [key=2, style=dotted];
m1_2736 -> m1_2737  [key=0, style=solid];
m1_2730 -> m1_2731  [key=0, style=solid];
m1_2730 -> m1_2736  [key=1, style=dashed, color=darkseagreen4, label=test];
m1_2730 -> m1_2745  [key=2, style=dotted];
m1_2732 -> m1_2733  [key=0, style=solid];
m1_2735 -> m1_2710  [key=2, style=dotted];
m1_2735 -> m1_2736  [key=0, style=solid];
m1_2735 -> m1_560  [key=2, style=dotted];
m1_2735 -> m1_2737  [key=1, style=dashed, color=darkseagreen4, label=bsonWriter];
m1_2734 -> m1_559  [key=2, style=dotted];
m1_2734 -> m1_2735  [key=0, style=solid];
m1_2734 -> m1_2738  [key=1, style=dashed, color=darkseagreen4, label=bsonStream];
m1_2738 -> m1_2739  [key=0, style=solid];
m1_2738 -> m1_646  [key=2, style=dotted];
m1_2737 -> m1_2738  [key=0, style=solid];
m1_2737 -> m1_2747  [key=2, style=dotted];
m1_2733 -> m1_2734  [key=0, style=solid];
m1_2744 -> m1_2729  [key=0, style=bold, color=blue];
m1_1842 -> m1_1843  [key=0, style=solid];
m1_1843 -> m1_1845  [key=2, style=dotted];
m1_1843 -> m1_1844  [key=0, style=solid];
m1_1844 -> m1_1842  [key=0, style=bold, color=blue];
m1_741 -> m1_742  [key=0, style=solid];
m1_743 -> m1_12  [key=2, style=dotted];
m1_743 -> m1_744  [key=0, style=solid];
m1_744 -> m1_34  [key=2, style=dotted];
m1_744 -> m1_745  [key=0, style=solid];
m1_742 -> m1_743  [key=0, style=solid];
m1_742 -> m1_47  [key=2, style=dotted];
m1_742 -> m1_746  [key=2, style=dotted];
m1_745 -> m1_741  [key=0, style=bold, color=blue];
m1_3079 -> m1_3080  [key=0, style=solid];
m1_3085 -> m1_34  [key=2, style=dotted];
m1_3085 -> m1_3086  [key=0, style=solid];
m1_3080 -> m1_2451  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m1_3080 -> m1_3081  [key=0, style=solid];
m1_3080 -> m1_3083  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_3081 -> m1_3085  [key=1, style=dashed, color=darkseagreen4, label=errors];
m1_3081 -> m1_3082  [key=0, style=solid];
m1_3081 -> m1_120  [key=2, style=dotted];
m1_3081 -> m1_3092  [key=1, style=dashed, color=darkseagreen4, label=errors];
m1_3081 -> m1_3086  [key=1, style=dashed, color=darkseagreen4, label=errors];
m1_3081 -> m1_3087  [key=1, style=dashed, color=darkseagreen4, label=errors];
m1_3081 -> m1_3088  [key=1, style=dashed, color=darkseagreen4, label=errors];
m1_3081 -> m1_3089  [key=1, style=dashed, color=darkseagreen4, label=errors];
m1_3084 -> m1_3085  [key=0, style=solid];
m1_3084 -> m1_520  [key=2, style=dotted];
m1_3086 -> m1_3087  [key=0, style=solid];
m1_3086 -> m1_1188  [key=2, style=dotted];
m1_3086 -> m1_203  [key=2, style=dotted];
m1_3083 -> m1_3084  [key=0, style=solid];
m1_3083 -> m1_95  [key=2, style=dotted];
m1_3083 -> m1_96  [key=2, style=dotted];
m1_3082 -> m1_3083  [key=0, style=solid];
m1_3082 -> m1_3082  [key=3, color=darkorchid, style=bold, label="Local variable System.EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs> error"];
m1_3082 -> m1_3092  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m1_3082 -> m1_3093  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m1_3087 -> m1_203  [key=2, style=dotted];
m1_3087 -> m1_3088  [key=0, style=solid];
m1_3087 -> m1_1188  [key=2, style=dotted];
m1_3088 -> m1_203  [key=2, style=dotted];
m1_3088 -> m1_3089  [key=0, style=solid];
m1_3088 -> m1_1188  [key=2, style=dotted];
m1_3089 -> m1_203  [key=2, style=dotted];
m1_3089 -> m1_3090  [key=0, style=solid];
m1_3089 -> m1_1188  [key=2, style=dotted];
m1_3090 -> m1_3079  [key=0, style=bold, color=blue];
m1_2767 -> m1_2768  [key=0, style=solid];
m1_2775 -> m1_34  [key=2, style=dotted];
m1_2775 -> m1_2776  [key=0, style=solid];
m1_2776 -> m1_34  [key=2, style=dotted];
m1_2776 -> m1_2777  [key=0, style=solid];
m1_2777 -> m1_34  [key=2, style=dotted];
m1_2777 -> m1_2778  [key=0, style=solid];
m1_2774 -> m1_2775  [key=0, style=solid];
m1_2774 -> m1_95  [key=2, style=dotted];
m1_2774 -> m1_96  [key=2, style=dotted];
m1_2768 -> m1_2774  [key=1, style=dashed, color=darkseagreen4, label=contractResolver];
m1_2768 -> m1_2769  [key=0, style=solid];
m1_2768 -> m1_2779  [key=2, style=dotted];
m1_2768 -> m1_2772  [key=1, style=dashed, color=darkseagreen4, label=contractResolver];
m1_2773 -> m1_2774  [key=0, style=solid];
m1_2773 -> m1_67  [key=2, style=dotted];
m1_2772 -> m1_95  [key=2, style=dotted];
m1_2772 -> m1_962  [key=2, style=dotted];
m1_2772 -> m1_2773  [key=0, style=solid];
m1_2769 -> m1_2772  [key=1, style=dashed, color=darkseagreen4, label=c];
m1_2769 -> m1_2770  [key=0, style=solid];
m1_2769 -> m1_2766  [key=2, style=dotted];
m1_2771 -> m1_2772  [key=0, style=solid];
m1_2770 -> m1_2771  [key=0, style=solid];
m1_2778 -> m1_2767  [key=0, style=bold, color=blue];
m1_222 -> m1_223  [key=0, style=solid];
m1_222 -> m1_146  [key=2, style=dotted];
m1_222 -> m1_147  [key=2, style=dotted];
m1_200 -> m1_223  [key=0, style=solid];
m1_202 -> m1_223  [key=0, style=solid];
m1_213 -> m1_223  [key=0, style=solid];
m1_213 -> m1_214  [key=0, style=solid];
m1_217 -> m1_223  [key=0, style=solid];
m1_217 -> m1_218  [key=0, style=solid];
m1_219 -> m1_223  [key=0, style=solid];
m1_219 -> m1_220  [key=0, style=solid];
m1_219 -> m1_270  [key=2, style=dotted];
m1_221 -> m1_223  [key=0, style=solid];
m1_221 -> m1_222  [key=0, style=solid];
m1_221 -> m1_271  [key=2, style=dotted];
m1_199 -> m1_200  [key=0, style=solid];
m1_214 -> m1_215  [key=0, style=solid];
m1_214 -> m1_34  [key=2, style=dotted];
m1_218 -> m1_219  [key=0, style=solid];
m1_218 -> m1_34  [key=2, style=dotted];
m1_220 -> m1_221  [key=0, style=solid];
m1_220 -> m1_34  [key=2, style=dotted];
m1_220 -> m1_270  [key=2, style=dotted];
m1_210 -> m1_211  [key=0, style=solid];
m1_211 -> m1_212  [key=0, style=solid];
m1_211 -> m1_214  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m1_211 -> m1_216  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m1_211 -> m1_218  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m1_211 -> m1_220  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m1_211 -> m1_223  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m1_211 -> m1_225  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m1_211 -> m1_227  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m1_211 -> m1_229  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m1_211 -> m1_231  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m1_211 -> m1_233  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m1_211 -> m1_235  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m1_211 -> m1_237  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m1_211 -> m1_239  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m1_211 -> m1_241  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m1_211 -> m1_243  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m1_211 -> m1_245  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m1_211 -> m1_247  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m1_211 -> m1_249  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m1_211 -> m1_251  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m1_211 -> m1_253  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m1_211 -> m1_255  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m1_211 -> m1_258  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m1_211 -> m1_260  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m1_211 -> m1_263  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m1_211 -> m1_265  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m1_211 -> m1_267  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m1_211 -> m1_224  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m1_211 -> m1_119  [key=2, style=dotted];
m1_211 -> m1_213  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m1_211 -> m1_215  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m1_211 -> m1_217  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m1_211 -> m1_219  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m1_211 -> m1_222  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m1_211 -> m1_226  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m1_211 -> m1_228  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m1_211 -> m1_230  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m1_211 -> m1_232  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m1_211 -> m1_234  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m1_211 -> m1_236  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m1_211 -> m1_238  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m1_211 -> m1_240  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m1_211 -> m1_242  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m1_211 -> m1_244  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m1_211 -> m1_246  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m1_211 -> m1_248  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m1_211 -> m1_250  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m1_211 -> m1_252  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m1_211 -> m1_254  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m1_211 -> m1_257  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m1_211 -> m1_259  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m1_211 -> m1_262  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m1_211 -> m1_264  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m1_211 -> m1_266  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m1_212 -> m1_213  [key=0, style=solid];
m1_212 -> m1_214  [key=1, style=dashed, color=darkseagreen4, label=customBinder];
m1_212 -> m1_269  [key=2, style=dotted];
m1_215 -> m1_216  [key=0, style=solid];
m1_216 -> m1_217  [key=0, style=solid];
m1_216 -> m1_34  [key=2, style=dotted];
m1_223 -> m1_156  [key=0, style=bold, color=blue];
m1_223 -> m1_34  [key=2, style=dotted];
m1_223 -> m1_224  [key=0, style=solid];
m1_1047 -> m1_1048  [key=0, style=solid];
m1_1051 -> m1_34  [key=2, style=dotted];
m1_1051 -> m1_1052  [key=0, style=solid];
m1_1053 -> m1_34  [key=2, style=dotted];
m1_1053 -> m1_1054  [key=0, style=solid];
m1_1053 -> m1_683  [key=2, style=dotted];
m1_1054 -> m1_34  [key=2, style=dotted];
m1_1054 -> m1_1055  [key=0, style=solid];
m1_1054 -> m1_683  [key=2, style=dotted];
m1_1050 -> m1_1051  [key=0, style=solid];
m1_1050 -> m1_95  [key=2, style=dotted];
m1_1050 -> m1_463  [key=2, style=dotted];
m1_1050 -> m1_1052  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_1052 -> m1_1053  [key=0, style=solid];
m1_1052 -> m1_1054  [key=1, style=dashed, color=darkseagreen4, label=m2];
m1_1052 -> m1_95  [key=2, style=dotted];
m1_1052 -> m1_96  [key=2, style=dotted];
m1_1049 -> m1_1050  [key=0, style=solid];
m1_1049 -> m1_1037  [key=2, style=dotted];
m1_1048 -> m1_1036  [key=2, style=dotted];
m1_1048 -> m1_1049  [key=0, style=solid];
m1_1055 -> m1_1047  [key=0, style=bold, color=blue];
m1_3446 -> m1_3447  [key=0, style=solid];
m1_3448 -> m1_12  [key=2, style=dotted];
m1_3448 -> m1_3449  [key=0, style=solid];
m1_3448 -> m1_3450  [key=1, style=dashed, color=darkseagreen4, label=floats];
m1_3448 -> m1_3451  [key=1, style=dashed, color=darkseagreen4, label=floats];
m1_3452 -> m1_12  [key=2, style=dotted];
m1_3452 -> m1_3453  [key=0, style=solid];
m1_3452 -> m1_3454  [key=1, style=dashed, color=darkseagreen4, label=doubles];
m1_3452 -> m1_3455  [key=1, style=dashed, color=darkseagreen4, label=doubles];
m1_3449 -> m1_34  [key=2, style=dotted];
m1_3449 -> m1_3450  [key=0, style=solid];
m1_3450 -> m1_34  [key=2, style=dotted];
m1_3450 -> m1_3451  [key=0, style=solid];
m1_3451 -> m1_34  [key=2, style=dotted];
m1_3451 -> m1_3452  [key=0, style=solid];
m1_3453 -> m1_34  [key=2, style=dotted];
m1_3453 -> m1_3454  [key=0, style=solid];
m1_3454 -> m1_34  [key=2, style=dotted];
m1_3454 -> m1_3455  [key=0, style=solid];
m1_3455 -> m1_34  [key=2, style=dotted];
m1_3455 -> m1_3456  [key=0, style=solid];
m1_3447 -> m1_3448  [key=0, style=solid];
m1_3447 -> m1_3452  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_3447 -> m1_3447  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m1_3456 -> m1_3446  [key=0, style=bold, color=blue];
m1_1868 -> m1_1869  [key=0, style=solid];
m1_1869 -> m1_1870  [key=0, style=solid];
m1_1869 -> m1_1871  [key=2, style=dotted];
m1_1870 -> m1_1868  [key=0, style=bold, color=blue];
m1_2475 -> m1_2476  [key=0, style=solid];
m1_2477 -> m1_65  [key=2, style=dotted];
m1_2477 -> m1_2478  [key=0, style=solid];
m1_2478 -> m1_67  [key=2, style=dotted];
m1_2478 -> m1_2479  [key=0, style=solid];
m1_2476 -> m1_2477  [key=0, style=solid];
m1_2476 -> m1_2480  [key=2, style=dotted];
m1_2479 -> m1_2475  [key=0, style=bold, color=blue];
m1_1532 -> m1_1533  [key=0, style=solid];
m1_1534 -> m1_8  [key=2, style=dotted];
m1_1534 -> m1_1535  [key=0, style=solid];
m1_1534 -> m1_1536  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_1533 -> m1_1534  [key=0, style=solid];
m1_1533 -> m1_1537  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_1533 -> m1_1512  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m1_1535 -> m1_1532  [key=0, style=bold, color=blue];
m1_2993 -> m1_2994  [key=0, style=solid];
m1_2999 -> m1_12  [key=2, style=dotted];
m1_2999 -> m1_3000  [key=0, style=solid];
m1_2999 -> m1_3001  [key=1, style=dashed, color=darkseagreen4, label=c2];
m1_2999 -> m1_3002  [key=1, style=dashed, color=darkseagreen4, label=c2];
m1_2999 -> m1_3003  [key=1, style=dashed, color=darkseagreen4, label=c2];
m1_2995 -> m1_34  [key=2, style=dotted];
m1_2995 -> m1_2996  [key=0, style=solid];
m1_2995 -> m1_2990  [key=2, style=dotted];
m1_2995 -> m1_2991  [key=2, style=dotted];
m1_2996 -> m1_34  [key=2, style=dotted];
m1_2996 -> m1_2997  [key=0, style=solid];
m1_2996 -> m1_2992  [key=2, style=dotted];
m1_2997 -> m1_34  [key=2, style=dotted];
m1_2997 -> m1_2998  [key=0, style=solid];
m1_2998 -> m1_34  [key=2, style=dotted];
m1_2998 -> m1_2999  [key=0, style=solid];
m1_3000 -> m1_34  [key=2, style=dotted];
m1_3000 -> m1_3001  [key=0, style=solid];
m1_3001 -> m1_34  [key=2, style=dotted];
m1_3001 -> m1_3002  [key=0, style=solid];
m1_3002 -> m1_34  [key=2, style=dotted];
m1_3002 -> m1_3003  [key=0, style=solid];
m1_3003 -> m1_34  [key=2, style=dotted];
m1_3003 -> m1_3004  [key=0, style=solid];
m1_2994 -> m1_2995  [key=0, style=solid];
m1_2994 -> m1_2996  [key=1, style=dashed, color=darkseagreen4, label=c];
m1_2994 -> m1_2997  [key=1, style=dashed, color=darkseagreen4, label=c];
m1_2994 -> m1_2998  [key=1, style=dashed, color=darkseagreen4, label=c];
m1_2994 -> m1_95  [key=2, style=dotted];
m1_2994 -> m1_96  [key=2, style=dotted];
m1_3004 -> m1_2993  [key=0, style=bold, color=blue];
m1_58 -> m1_59  [key=0, style=solid];
m1_58 -> m1_67  [key=2, style=dotted];
m1_106 -> m1_107  [key=0, style=solid];
m1_106 -> m1_141  [key=0, style=solid];
m1_106 -> m1_153  [key=2, style=dotted];
m1_108 -> m1_34  [key=2, style=dotted];
m1_108 -> m1_109  [key=0, style=solid];
m1_108 -> m1_117  [key=0, style=solid];
m1_115 -> m1_34  [key=2, style=dotted];
m1_115 -> m1_116  [key=0, style=solid];
m1_115 -> m1_155  [key=2, style=dotted];
m1_113 -> m1_34  [key=2, style=dotted];
m1_113 -> m1_114  [key=0, style=solid];
m1_113 -> m1_122  [key=2, style=dotted];
m1_113 -> m1_154  [key=2, style=dotted];
m1_113 -> m1_116  [key=1, style=dashed, color=darkseagreen4, label=collectionItemType];
m1_114 -> m1_34  [key=2, style=dotted];
m1_114 -> m1_115  [key=0, style=solid];
m1_114 -> m1_123  [key=2, style=dotted];
m1_114 -> m1_141  [key=0, style=solid];
m1_107 -> m1_108  [key=0, style=solid];
m1_107 -> m1_115  [key=1, style=dashed, color=darkseagreen4, label=reader];
m1_107 -> m1_117  [key=2, style=dotted];
m1_107 -> m1_118  [key=2, style=dotted];
m1_107 -> m1_112  [key=1, style=dashed, color=darkseagreen4, label=reader];
m1_107 -> m1_141  [key=0, style=solid];
m1_107 -> m1_40  [key=2, style=dotted];
m1_109 -> m1_110  [key=0, style=solid];
m1_109 -> m1_119  [key=2, style=dotted];
m1_109 -> m1_112  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m1_109 -> m1_151  [key=2, style=dotted];
m1_112 -> m1_113  [key=0, style=solid];
m1_112 -> m1_121  [key=2, style=dotted];
m1_112 -> m1_116  [key=1, style=dashed, color=darkseagreen4, label=allowNullItem];
m1_111 -> m1_113  [key=1, style=dashed, color=darkseagreen4, label=l];
m1_111 -> m1_114  [key=1, style=dashed, color=darkseagreen4, label=l];
m1_111 -> m1_112  [key=0, style=solid];
m1_111 -> m1_120  [key=2, style=dotted];
m1_111 -> m1_47  [key=2, style=dotted];
m1_110 -> m1_111  [key=0, style=solid];
m1_110 -> m1_59  [key=2, style=dotted];
m1_116 -> m1_106  [key=0, style=bold, color=blue];
m1_116 -> m1_141  [key=0, style=solid];
m1_116 -> m1_40  [key=2, style=dotted];
m1_116 -> m1_12  [key=2, style=dotted];
m1_3772 -> m1_3773  [key=0, style=solid];
m1_3773 -> m1_8  [key=2, style=dotted];
m1_3773 -> m1_3774  [key=0, style=solid];
m1_3773 -> m1_3775  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_3774 -> m1_3772  [key=0, style=bold, color=blue];
m1_89 -> m1_90  [key=0, style=solid];
m1_89 -> m1_91  [key=0, style=solid];
m1_1027 -> m1_1028  [key=0, style=solid];
m1_1032 -> m1_12  [key=2, style=dotted];
m1_1032 -> m1_1033  [key=0, style=solid];
m1_1032 -> m1_1034  [key=1, style=dashed, color=darkseagreen4, label=m2];
m1_1033 -> m1_34  [key=2, style=dotted];
m1_1033 -> m1_1034  [key=0, style=solid];
m1_1034 -> m1_34  [key=2, style=dotted];
m1_1034 -> m1_1035  [key=0, style=solid];
m1_1031 -> m1_34  [key=2, style=dotted];
m1_1031 -> m1_1032  [key=0, style=solid];
m1_1030 -> m1_1032  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_1030 -> m1_1031  [key=0, style=solid];
m1_1030 -> m1_47  [key=2, style=dotted];
m1_1028 -> m1_1033  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m1_1028 -> m1_1034  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m1_1028 -> m1_1029  [key=0, style=solid];
m1_1028 -> m1_1036  [key=2, style=dotted];
m1_1029 -> m1_1030  [key=0, style=solid];
m1_1029 -> m1_1037  [key=2, style=dotted];
m1_1035 -> m1_1027  [key=0, style=bold, color=blue];
m1_3626 -> m1_3627  [key=0, style=solid];
m1_3627 -> m1_3583  [key=2, style=dotted];
m1_3627 -> m1_3628  [key=0, style=solid];
m1_3628 -> m1_3626  [key=0, style=bold, color=blue];
m1_1846 -> m1_1847  [key=0, style=solid];
m1_1847 -> m1_1848  [key=0, style=solid];
m1_1847 -> m1_1849  [key=2, style=dotted];
m1_1848 -> m1_1846  [key=0, style=bold, color=blue];
m1_1511 -> m1_1512  [key=0, style=solid];
m1_1513 -> m1_8  [key=2, style=dotted];
m1_1513 -> m1_1514  [key=0, style=solid];
m1_1513 -> m1_1515  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_1512 -> m1_1513  [key=0, style=solid];
m1_1512 -> m1_1516  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_1512 -> m1_1512  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m1_1514 -> m1_1511  [key=0, style=bold, color=blue];
m1_3095 -> m1_3096  [key=0, style=solid];
m1_3101 -> m1_34  [key=2, style=dotted];
m1_3101 -> m1_3102  [key=0, style=solid];
m1_3097 -> m1_3101  [key=1, style=dashed, color=darkseagreen4, label=errors];
m1_3097 -> m1_3098  [key=0, style=solid];
m1_3097 -> m1_120  [key=2, style=dotted];
m1_3097 -> m1_3107  [key=1, style=dashed, color=darkseagreen4, label=errors];
m1_3097 -> m1_3102  [key=1, style=dashed, color=darkseagreen4, label=errors];
m1_3097 -> m1_3103  [key=1, style=dashed, color=darkseagreen4, label=errors];
m1_3097 -> m1_3104  [key=1, style=dashed, color=darkseagreen4, label=errors];
m1_3100 -> m1_3101  [key=0, style=solid];
m1_3100 -> m1_520  [key=2, style=dotted];
m1_3102 -> m1_3103  [key=0, style=solid];
m1_3102 -> m1_1188  [key=2, style=dotted];
m1_3102 -> m1_203  [key=2, style=dotted];
m1_3096 -> m1_3097  [key=0, style=solid];
m1_3096 -> m1_3096  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m1_3096 -> m1_3099  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_3098 -> m1_3098  [key=3, color=darkorchid, style=bold, label="Local variable System.EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs> error"];
m1_3098 -> m1_3099  [key=0, style=solid];
m1_3098 -> m1_3107  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m1_3098 -> m1_3108  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m1_3103 -> m1_203  [key=2, style=dotted];
m1_3103 -> m1_1188  [key=2, style=dotted];
m1_3103 -> m1_3104  [key=0, style=solid];
m1_3104 -> m1_203  [key=2, style=dotted];
m1_3104 -> m1_1188  [key=2, style=dotted];
m1_3104 -> m1_3105  [key=0, style=solid];
m1_3099 -> m1_3100  [key=0, style=solid];
m1_3099 -> m1_95  [key=2, style=dotted];
m1_3099 -> m1_96  [key=2, style=dotted];
m1_3105 -> m1_3095  [key=0, style=bold, color=blue];
m1_124 -> m1_125  [key=0, style=solid];
m1_124 -> m1_160  [key=2, style=dotted];
m1_124 -> m1_126  [key=1, style=dashed, color=darkseagreen4, label=value];
m1_126 -> m1_12  [key=2, style=dotted];
m1_126 -> m1_127  [key=0, style=solid];
m1_126 -> m1_123  [key=0, style=solid];
m1_126 -> m1_161  [key=2, style=dotted];
m1_125 -> m1_34  [key=2, style=dotted];
m1_125 -> m1_126  [key=0, style=solid];
m1_125 -> m1_129  [key=2, style=dotted];
m1_125 -> m1_47  [key=2, style=dotted];
m1_125 -> m1_12  [key=2, style=dotted];
m1_127 -> m1_34  [key=2, style=dotted];
m1_127 -> m1_128  [key=0, style=solid];
m1_127 -> m1_131  [key=0, style=solid];
m1_128 -> m1_124  [key=0, style=bold, color=blue];
m1_128 -> m1_129  [key=0, style=solid];
m1_128 -> m1_151  [key=2, style=dotted];
m1_3179 -> m1_3180  [key=0, style=solid];
m1_3182 -> m1_34  [key=2, style=dotted];
m1_3182 -> m1_3183  [key=0, style=solid];
m1_3183 -> m1_34  [key=2, style=dotted];
m1_3183 -> m1_3184  [key=0, style=solid];
m1_3180 -> m1_3182  [key=1, style=dashed, color=darkseagreen4, label=testObj];
m1_3180 -> m1_3181  [key=0, style=solid];
m1_3180 -> m1_3185  [key=2, style=dotted];
m1_3181 -> m1_3182  [key=0, style=solid];
m1_3181 -> m1_3183  [key=1, style=dashed, color=darkseagreen4, label=objDeserialized];
m1_3181 -> m1_3186  [key=2, style=dotted];
m1_3184 -> m1_3179  [key=0, style=bold, color=blue];
m1_1711 -> m1_1712  [key=0, style=solid];
m1_1712 -> m1_554  [key=2, style=dotted];
m1_1712 -> m1_1713  [key=0, style=solid];
m1_1713 -> m1_120  [key=2, style=dotted];
m1_1713 -> m1_1714  [key=0, style=solid];
m1_1714 -> m1_1711  [key=0, style=bold, color=blue];
m1_2465 -> m1_2466  [key=0, style=solid];
m1_2469 -> m1_12  [key=2, style=dotted];
m1_2469 -> m1_2470  [key=0, style=solid];
m1_2469 -> m1_2471  [key=1, style=dashed, color=darkseagreen4, label=c2];
m1_2469 -> m1_2472  [key=1, style=dashed, color=darkseagreen4, label=c2];
m1_2470 -> m1_34  [key=2, style=dotted];
m1_2470 -> m1_2471  [key=0, style=solid];
m1_2470 -> m1_1413  [key=2, style=dotted];
m1_2471 -> m1_34  [key=2, style=dotted];
m1_2471 -> m1_2472  [key=0, style=solid];
m1_2471 -> m1_1413  [key=2, style=dotted];
m1_2472 -> m1_34  [key=2, style=dotted];
m1_2472 -> m1_2473  [key=0, style=solid];
m1_2472 -> m1_1413  [key=2, style=dotted];
m1_2467 -> m1_2469  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_2467 -> m1_2468  [key=0, style=solid];
m1_2467 -> m1_65  [key=2, style=dotted];
m1_2468 -> m1_2469  [key=0, style=solid];
m1_2468 -> m1_67  [key=2, style=dotted];
m1_2466 -> m1_2467  [key=0, style=solid];
m1_2466 -> m1_2474  [key=2, style=dotted];
m1_2466 -> m1_120  [key=2, style=dotted];
m1_2473 -> m1_2465  [key=0, style=bold, color=blue];
m1_2851 -> m1_2852  [key=0, style=solid];
m1_2853 -> m1_12  [key=2, style=dotted];
m1_2853 -> m1_2854  [key=0, style=solid];
m1_2853 -> m1_2855  [key=1, style=dashed, color=darkseagreen4, label=w];
m1_2853 -> m1_2856  [key=1, style=dashed, color=darkseagreen4, label=w];
m1_2854 -> m1_34  [key=2, style=dotted];
m1_2854 -> m1_2855  [key=0, style=solid];
m1_2854 -> m1_2850  [key=2, style=dotted];
m1_2855 -> m1_34  [key=2, style=dotted];
m1_2855 -> m1_2856  [key=0, style=solid];
m1_2855 -> m1_2850  [key=2, style=dotted];
m1_2856 -> m1_34  [key=2, style=dotted];
m1_2856 -> m1_2857  [key=0, style=solid];
m1_2852 -> m1_2853  [key=0, style=solid];
m1_2852 -> m1_2852  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m1_2857 -> m1_2851  [key=0, style=bold, color=blue];
m1_1038 -> m1_1039  [key=0, style=solid];
m1_1043 -> m1_12  [key=2, style=dotted];
m1_1043 -> m1_1044  [key=0, style=solid];
m1_1043 -> m1_1045  [key=1, style=dashed, color=darkseagreen4, label=m2];
m1_1044 -> m1_34  [key=2, style=dotted];
m1_1044 -> m1_1045  [key=0, style=solid];
m1_1045 -> m1_34  [key=2, style=dotted];
m1_1045 -> m1_1046  [key=0, style=solid];
m1_1042 -> m1_34  [key=2, style=dotted];
m1_1042 -> m1_1043  [key=0, style=solid];
m1_1041 -> m1_1043  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_1041 -> m1_1042  [key=0, style=solid];
m1_1041 -> m1_95  [key=2, style=dotted];
m1_1041 -> m1_463  [key=2, style=dotted];
m1_1039 -> m1_1044  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m1_1039 -> m1_1045  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m1_1039 -> m1_1040  [key=0, style=solid];
m1_1039 -> m1_1036  [key=2, style=dotted];
m1_1040 -> m1_1041  [key=0, style=solid];
m1_1040 -> m1_1037  [key=2, style=dotted];
m1_1046 -> m1_1038  [key=0, style=bold, color=blue];
m1_2916 -> m1_2917  [key=0, style=solid];
m1_2921 -> m1_34  [key=2, style=dotted];
m1_2921 -> m1_2922  [key=0, style=solid];
m1_2918 -> m1_2921  [key=1, style=dashed, color=darkseagreen4, label=dict];
m1_2918 -> m1_2919  [key=0, style=solid];
m1_2918 -> m1_117  [key=2, style=dotted];
m1_2918 -> m1_118  [key=2, style=dotted];
m1_2918 -> m1_2297  [key=2, style=dotted];
m1_2920 -> m1_2921  [key=0, style=solid];
m1_2920 -> m1_2297  [key=2, style=dotted];
m1_2917 -> m1_2918  [key=0, style=solid];
m1_2917 -> m1_2920  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m1_2917 -> m1_558  [key=2, style=dotted];
m1_2917 -> m1_95  [key=2, style=dotted];
m1_2919 -> m1_2920  [key=0, style=solid];
m1_2919 -> m1_117  [key=2, style=dotted];
m1_2919 -> m1_118  [key=2, style=dotted];
m1_2922 -> m1_2916  [key=0, style=bold, color=blue];
m1_596 -> m1_634  [key=1, style=dashed, color=darkseagreen4, label=object];
m1_596 -> m1_629  [key=1, style=dashed, color=darkseagreen4, label=object];
m1_596 -> m1_636  [key=1, style=dashed, color=darkseagreen4, label=object];
m1_596 -> m1_628  [key=0, style=solid];
m1_596 -> m1_630  [key=1, style=dashed, color=darkseagreen4, label=object];
m1_596 -> m1_587  [key=3, color=darkorchid, style=bold, label="Parameter variable object o"];
m1_596 -> m1_609  [key=3, color=darkorchid, style=bold, label="Parameter variable object o"];
m1_596 -> m1_619  [key=3, color=darkorchid, style=bold, label="Parameter variable object o"];
m1_639 -> m1_34  [key=2, style=dotted];
m1_639 -> m1_640  [key=0, style=solid];
m1_633 -> m1_639  [key=1, style=dashed, color=darkseagreen4, label=dataContractJson];
m1_633 -> m1_633  [key=1, style=dashed, color=darkseagreen4, label=dataContractJson];
m1_633 -> m1_634  [key=0, style=solid];
m1_633 -> m1_648  [key=2, style=dotted];
m1_633 -> m1_649  [key=2, style=dotted];
m1_633 -> m1_650  [key=2, style=dotted];
m1_633 -> m1_651  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_633 -> m1_637  [key=1, style=dashed, color=darkseagreen4, label=dataContractJson];
m1_633 -> m1_640  [key=1, style=dashed, color=darkseagreen4, label=dataContractJson];
m1_635 -> m1_639  [key=1, style=dashed, color=darkseagreen4, label=jsonNetJson];
m1_635 -> m1_635  [key=1, style=dashed, color=darkseagreen4, label=jsonNetJson];
m1_635 -> m1_636  [key=0, style=solid];
m1_635 -> m1_648  [key=2, style=dotted];
m1_635 -> m1_649  [key=2, style=dotted];
m1_635 -> m1_650  [key=2, style=dotted];
m1_635 -> m1_654  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_635 -> m1_638  [key=1, style=dashed, color=darkseagreen4, label=jsonNetJson];
m1_635 -> m1_641  [key=1, style=dashed, color=darkseagreen4, label=jsonNetJson];
m1_635 -> m1_642  [key=1, style=dashed, color=darkseagreen4, label=jsonNetJson];
m1_638 -> m1_639  [key=0, style=solid];
m1_638 -> m1_66  [key=2, style=dotted];
m1_640 -> m1_641  [key=0, style=solid];
m1_640 -> m1_642  [key=0, style=solid];
m1_634 -> m1_47  [key=2, style=dotted];
m1_634 -> m1_635  [key=0, style=solid];
m1_634 -> m1_201  [key=2, style=dotted];
m1_642 -> m1_493  [key=2, style=dotted];
m1_642 -> m1_643  [key=0, style=solid];
m1_629 -> m1_122  [key=2, style=dotted];
m1_629 -> m1_630  [key=0, style=solid];
m1_629 -> m1_644  [key=2, style=dotted];
m1_636 -> m1_122  [key=2, style=dotted];
m1_636 -> m1_66  [key=2, style=dotted];
m1_636 -> m1_637  [key=0, style=solid];
m1_632 -> m1_633  [key=0, style=solid];
m1_632 -> m1_201  [key=2, style=dotted];
m1_632 -> m1_647  [key=2, style=dotted];
m1_637 -> m1_638  [key=0, style=solid];
m1_637 -> m1_66  [key=2, style=dotted];
m1_641 -> m1_640  [key=0, style=solid];
m1_641 -> m1_203  [key=2, style=dotted];
m1_641 -> m1_202  [key=2, style=dotted];
m1_641 -> m1_641  [key=1, style=dashed, color=darkseagreen4, label=property];
m1_628 -> m1_629  [key=0, style=solid];
m1_628 -> m1_559  [key=2, style=dotted];
m1_628 -> m1_630  [key=1, style=dashed, color=darkseagreen4, label=ms];
m1_628 -> m1_631  [key=1, style=dashed, color=darkseagreen4, label=ms];
m1_630 -> m1_631  [key=0, style=solid];
m1_630 -> m1_645  [key=2, style=dotted];
m1_631 -> m1_632  [key=0, style=solid];
m1_631 -> m1_646  [key=2, style=dotted];
m1_643 -> m1_596  [key=0, style=bold, color=blue];
m1_3707 -> m1_3708  [key=0, style=solid];
m1_3714 -> m1_34  [key=2, style=dotted];
m1_3714 -> m1_3715  [key=0, style=solid];
m1_3714 -> m1_1413  [key=2, style=dotted];
m1_3708 -> m1_3714  [key=1, style=dashed, color=darkseagreen4, label=dt];
m1_3708 -> m1_123  [key=2, style=dotted];
m1_3708 -> m1_3709  [key=0, style=solid];
m1_3708 -> m1_3711  [key=1, style=dashed, color=darkseagreen4, label=dt];
m1_3713 -> m1_3714  [key=0, style=solid];
m1_3713 -> m1_96  [key=2, style=dotted];
m1_3709 -> m1_3709  [key=3, color=darkorchid, style=bold, label="Local variable string dateFormatString"];
m1_3709 -> m1_3710  [key=0, style=solid];
m1_3711 -> m1_3713  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_3711 -> m1_463  [key=2, style=dotted];
m1_3711 -> m1_554  [key=2, style=dotted];
m1_3711 -> m1_3712  [key=0, style=solid];
m1_3710 -> m1_3713  [key=1, style=dashed, color=darkseagreen4, label=settings];
m1_3710 -> m1_95  [key=2, style=dotted];
m1_3710 -> m1_3711  [key=0, style=solid];
m1_3712 -> m1_3713  [key=0, style=solid];
m1_3712 -> m1_67  [key=2, style=dotted];
m1_3715 -> m1_3707  [key=0, style=bold, color=blue];
m1_3110 -> m1_3111  [key=0, style=solid];
m1_3115 -> m1_34  [key=2, style=dotted];
m1_3115 -> m1_3116  [key=0, style=solid];
m1_3116 -> m1_34  [key=2, style=dotted];
m1_3116 -> m1_3117  [key=0, style=solid];
m1_3117 -> m1_34  [key=2, style=dotted];
m1_3117 -> m1_3118  [key=0, style=solid];
m1_3118 -> m1_34  [key=2, style=dotted];
m1_3118 -> m1_3119  [key=0, style=solid];
m1_3111 -> m1_3115  [key=1, style=dashed, color=darkseagreen4, label=errors];
m1_3111 -> m1_3116  [key=1, style=dashed, color=darkseagreen4, label=errors];
m1_3111 -> m1_3117  [key=1, style=dashed, color=darkseagreen4, label=errors];
m1_3111 -> m1_3118  [key=1, style=dashed, color=darkseagreen4, label=errors];
m1_3111 -> m1_3112  [key=0, style=solid];
m1_3111 -> m1_120  [key=2, style=dotted];
m1_3111 -> m1_3122  [key=1, style=dashed, color=darkseagreen4, label=errors];
m1_3114 -> m1_3115  [key=0, style=solid];
m1_3114 -> m1_67  [key=2, style=dotted];
m1_3112 -> m1_3112  [key=3, color=darkorchid, style=bold, label="Local variable System.EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs> error"];
m1_3112 -> m1_3113  [key=0, style=solid];
m1_3112 -> m1_3122  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m1_3112 -> m1_3123  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m1_3113 -> m1_3114  [key=0, style=solid];
m1_3113 -> m1_463  [key=2, style=dotted];
m1_3113 -> m1_95  [key=2, style=dotted];
m1_3113 -> m1_3120  [key=2, style=dotted];
m1_3119 -> m1_3110  [key=0, style=bold, color=blue];
m1_889 -> m1_890  [key=0, style=solid];
m1_891 -> m1_12  [key=2, style=dotted];
m1_891 -> m1_892  [key=0, style=solid];
m1_891 -> m1_893  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m1_891 -> m1_894  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m1_891 -> m1_895  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m1_891 -> m1_896  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m1_891 -> m1_897  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m1_892 -> m1_34  [key=2, style=dotted];
m1_892 -> m1_893  [key=0, style=solid];
m1_893 -> m1_34  [key=2, style=dotted];
m1_893 -> m1_894  [key=0, style=solid];
m1_894 -> m1_34  [key=2, style=dotted];
m1_894 -> m1_895  [key=0, style=solid];
m1_895 -> m1_34  [key=2, style=dotted];
m1_895 -> m1_896  [key=0, style=solid];
m1_896 -> m1_34  [key=2, style=dotted];
m1_896 -> m1_897  [key=0, style=solid];
m1_897 -> m1_34  [key=2, style=dotted];
m1_897 -> m1_898  [key=0, style=solid];
m1_890 -> m1_891  [key=0, style=solid];
m1_890 -> m1_890  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m1_898 -> m1_889  [key=0, style=bold, color=blue];
m1_48 -> m1_49  [key=0, style=solid];
m1_49 -> m1_51  [key=2, style=dotted];
m1_49 -> m1_50  [key=0, style=solid];
m1_49 -> m1_53  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_50 -> m1_48  [key=0, style=bold, color=blue];
m1_50 -> m1_51  [key=0, style=solid];
m1_50 -> m1_47  [key=2, style=dotted];
m1_50 -> m1_52  [key=1, style=dashed, color=darkseagreen4, label=containerAttribute];
m1_129 -> m1_130  [key=0, style=solid];
m1_129 -> m1_59  [key=2, style=dotted];
m1_95 -> m1_96  [key=0, style=solid];
m1_845 -> m1_846  [key=0, style=solid];
m1_851 -> m1_12  [key=2, style=dotted];
m1_851 -> m1_852  [key=0, style=solid];
m1_852 -> m1_34  [key=2, style=dotted];
m1_852 -> m1_853  [key=0, style=solid];
m1_850 -> m1_34  [key=2, style=dotted];
m1_850 -> m1_851  [key=0, style=solid];
m1_849 -> m1_851  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_849 -> m1_850  [key=0, style=solid];
m1_849 -> m1_47  [key=2, style=dotted];
m1_846 -> m1_852  [key=1, style=dashed, color=darkseagreen4, label=values];
m1_846 -> m1_849  [key=1, style=dashed, color=darkseagreen4, label=values];
m1_846 -> m1_847  [key=0, style=solid];
m1_846 -> m1_554  [key=2, style=dotted];
m1_846 -> m1_848  [key=1, style=dashed, color=darkseagreen4, label=values];
m1_848 -> m1_849  [key=0, style=solid];
m1_848 -> m1_557  [key=2, style=dotted];
m1_847 -> m1_848  [key=0, style=solid];
m1_847 -> m1_557  [key=2, style=dotted];
m1_853 -> m1_845  [key=0, style=bold, color=blue];
m1_3537 -> m1_3538  [key=0, style=solid];
m1_3541 -> m1_34  [key=2, style=dotted];
m1_3541 -> m1_3542  [key=0, style=solid];
m1_3543 -> m1_34  [key=2, style=dotted];
m1_3543 -> m1_3544  [key=0, style=solid];
m1_3543 -> m1_3560  [key=2, style=dotted];
m1_3549 -> m1_34  [key=2, style=dotted];
m1_3549 -> m1_3550  [key=0, style=solid];
m1_3549 -> m1_3527  [key=2, style=dotted];
m1_3549 -> m1_3560  [key=2, style=dotted];
m1_3555 -> m1_34  [key=2, style=dotted];
m1_3555 -> m1_3556  [key=0, style=solid];
m1_3555 -> m1_3527  [key=2, style=dotted];
m1_3555 -> m1_3560  [key=2, style=dotted];
m1_3540 -> m1_3541  [key=0, style=solid];
m1_3540 -> m1_962  [key=2, style=dotted];
m1_3540 -> m1_3542  [key=1, style=dashed, color=darkseagreen4, label=text1];
m1_3542 -> m1_3543  [key=0, style=solid];
m1_3542 -> m1_96  [key=2, style=dotted];
m1_3544 -> m1_3545  [key=0, style=solid];
m1_3544 -> m1_554  [key=2, style=dotted];
m1_3544 -> m1_3546  [key=1, style=dashed, color=darkseagreen4, label=dict2];
m1_3548 -> m1_3549  [key=0, style=solid];
m1_3548 -> m1_96  [key=2, style=dotted];
m1_3550 -> m1_3551  [key=0, style=solid];
m1_3550 -> m1_554  [key=2, style=dotted];
m1_3550 -> m1_3552  [key=1, style=dashed, color=darkseagreen4, label=dict3];
m1_3554 -> m1_3555  [key=0, style=solid];
m1_3554 -> m1_96  [key=2, style=dotted];
m1_3538 -> m1_3540  [key=1, style=dashed, color=darkseagreen4, label=consoleWriter];
m1_3538 -> m1_3539  [key=0, style=solid];
m1_3538 -> m1_3557  [key=2, style=dotted];
m1_3538 -> m1_3545  [key=1, style=dashed, color=darkseagreen4, label=consoleWriter];
m1_3538 -> m1_3551  [key=1, style=dashed, color=darkseagreen4, label=consoleWriter];
m1_3539 -> m1_3540  [key=0, style=solid];
m1_3539 -> m1_3542  [key=1, style=dashed, color=darkseagreen4, label=options];
m1_3539 -> m1_3548  [key=1, style=dashed, color=darkseagreen4, label=options];
m1_3539 -> m1_3554  [key=1, style=dashed, color=darkseagreen4, label=options];
m1_3539 -> m1_95  [key=2, style=dotted];
m1_3539 -> m1_3558  [key=2, style=dotted];
m1_3539 -> m1_3559  [key=2, style=dotted];
m1_3539 -> m1_3546  [key=1, style=dashed, color=darkseagreen4, label=options];
m1_3539 -> m1_3552  [key=1, style=dashed, color=darkseagreen4, label=options];
m1_3545 -> m1_3546  [key=0, style=solid];
m1_3545 -> m1_557  [key=2, style=dotted];
m1_3546 -> m1_3548  [key=1, style=dashed, color=darkseagreen4, label=text2];
m1_3546 -> m1_962  [key=2, style=dotted];
m1_3546 -> m1_3547  [key=0, style=solid];
m1_3547 -> m1_3548  [key=0, style=solid];
m1_3547 -> m1_67  [key=2, style=dotted];
m1_3551 -> m1_3552  [key=0, style=solid];
m1_3551 -> m1_557  [key=2, style=dotted];
m1_3552 -> m1_3554  [key=1, style=dashed, color=darkseagreen4, label=text3];
m1_3552 -> m1_962  [key=2, style=dotted];
m1_3552 -> m1_3553  [key=0, style=solid];
m1_3553 -> m1_3554  [key=0, style=solid];
m1_3553 -> m1_67  [key=2, style=dotted];
m1_3556 -> m1_3537  [key=0, style=bold, color=blue];
m1_1697 -> m1_1698  [key=0, style=solid];
m1_1707 -> m1_12  [key=2, style=dotted];
m1_1707 -> m1_1708  [key=0, style=solid];
m1_1708 -> m1_34  [key=2, style=dotted];
m1_1708 -> m1_1709  [key=0, style=solid];
m1_1705 -> m1_1707  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_1705 -> m1_1706  [key=0, style=solid];
m1_1705 -> m1_65  [key=2, style=dotted];
m1_1706 -> m1_1707  [key=0, style=solid];
m1_1706 -> m1_67  [key=2, style=dotted];
m1_1699 -> m1_1708  [key=1, style=dashed, color=darkseagreen4, label=wagePerson];
m1_1699 -> m1_1700  [key=0, style=solid];
m1_1699 -> m1_1701  [key=1, style=dashed, color=darkseagreen4, label=wagePerson];
m1_1699 -> m1_1702  [key=1, style=dashed, color=darkseagreen4, label=wagePerson];
m1_1699 -> m1_1703  [key=1, style=dashed, color=darkseagreen4, label=wagePerson];
m1_1699 -> m1_1704  [key=1, style=dashed, color=darkseagreen4, label=wagePerson];
m1_1698 -> m1_1705  [key=1, style=dashed, color=darkseagreen4, label=personPropertyClass];
m1_1698 -> m1_1699  [key=0, style=solid];
m1_1698 -> m1_1710  [key=2, style=dotted];
m1_1704 -> m1_1705  [key=0, style=solid];
m1_1700 -> m1_831  [key=2, style=dotted];
m1_1700 -> m1_1701  [key=0, style=solid];
m1_1703 -> m1_831  [key=2, style=dotted];
m1_1703 -> m1_1704  [key=0, style=solid];
m1_1701 -> m1_1702  [key=0, style=solid];
m1_1702 -> m1_1703  [key=0, style=solid];
m1_1709 -> m1_1697  [key=0, style=bold, color=blue];
m1_1094 -> m1_1095  [key=0, style=solid];
m1_1095 -> m1_8  [key=2, style=dotted];
m1_1095 -> m1_1096  [key=0, style=solid];
m1_1095 -> m1_1097  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_1096 -> m1_1094  [key=0, style=bold, color=blue];
m1_1762 -> m1_1763  [key=0, style=solid];
m1_1764 -> m1_8  [key=2, style=dotted];
m1_1764 -> m1_1765  [key=0, style=solid];
m1_1764 -> m1_1766  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_1763 -> m1_1764  [key=0, style=solid];
m1_1763 -> m1_1763  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m1_1763 -> m1_1767  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_1765 -> m1_1762  [key=0, style=bold, color=blue];
m1_761 -> m1_762  [key=0, style=solid];
m1_764 -> m1_34  [key=2, style=dotted];
m1_764 -> m1_765  [key=0, style=solid];
m1_764 -> m1_769  [key=2, style=dotted];
m1_764 -> m1_200  [key=2, style=dotted];
m1_767 -> m1_34  [key=2, style=dotted];
m1_767 -> m1_768  [key=0, style=solid];
m1_767 -> m1_770  [key=2, style=dotted];
m1_767 -> m1_200  [key=2, style=dotted];
m1_763 -> m1_764  [key=0, style=solid];
m1_763 -> m1_199  [key=2, style=dotted];
m1_763 -> m1_765  [key=1, style=dashed, color=darkseagreen4, label=o];
m1_765 -> m1_766  [key=0, style=solid];
m1_766 -> m1_767  [key=0, style=solid];
m1_762 -> m1_763  [key=0, style=solid];
m1_762 -> m1_762  [key=3, color=darkorchid, style=bold, label="Local variable string jsonText"];
m1_768 -> m1_761  [key=0, style=bold, color=blue];
m1_168 -> m1_169  [key=0, style=solid];
m1_168 -> m1_170  [key=0, style=solid];
m1_171 -> m1_12  [key=2, style=dotted];
m1_171 -> m1_172  [key=0, style=solid];
m1_171 -> m1_173  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m1_171 -> m1_174  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m1_171 -> m1_151  [key=0, style=bold, color=blue];
m1_170 -> m1_171  [key=0, style=solid];
m1_170 -> m1_47  [key=2, style=dotted];
m1_169 -> m1_172  [key=1, style=dashed, color=darkseagreen4, label=input];
m1_169 -> m1_173  [key=1, style=dashed, color=darkseagreen4, label=input];
m1_169 -> m1_174  [key=1, style=dashed, color=darkseagreen4, label=input];
m1_169 -> m1_170  [key=0, style=solid];
m1_169 -> m1_149  [key=2, style=dotted];
m1_169 -> m1_176  [key=2, style=dotted];
m1_169 -> m1_177  [key=2, style=dotted];
m1_169 -> m1_171  [key=0, style=solid];
m1_2449 -> m1_3860  [key=0, style=solid];
m1_3860 -> m1_3861  [key=0, style=solid];
m1_3861 -> m1_2449  [key=0, style=bold, color=blue];
m1_3310 -> m1_3311  [key=0, style=solid];
m1_3312 -> m1_12  [key=2, style=dotted];
m1_3312 -> m1_3313  [key=0, style=solid];
m1_3314 -> m1_34  [key=2, style=dotted];
m1_3314 -> m1_3315  [key=0, style=solid];
m1_3314 -> m1_2092  [key=2, style=dotted];
m1_3311 -> m1_3312  [key=0, style=solid];
m1_3311 -> m1_3311  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m1_3313 -> m1_3314  [key=0, style=solid];
m1_3315 -> m1_3310  [key=0, style=bold, color=blue];
m1_1311 -> m1_1312  [key=0, style=solid];
m1_1315 -> m1_34  [key=2, style=dotted];
m1_1315 -> m1_1316  [key=0, style=solid];
m1_1318 -> m1_34  [key=2, style=dotted];
m1_1318 -> m1_1319  [key=0, style=solid];
m1_1314 -> m1_1315  [key=0, style=solid];
m1_1314 -> m1_95  [key=2, style=dotted];
m1_1314 -> m1_463  [key=2, style=dotted];
m1_1314 -> m1_1316  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_1316 -> m1_1317  [key=0, style=solid];
m1_1316 -> m1_95  [key=2, style=dotted];
m1_1316 -> m1_96  [key=2, style=dotted];
m1_1317 -> m1_1318  [key=0, style=solid];
m1_1317 -> m1_95  [key=2, style=dotted];
m1_1317 -> m1_463  [key=2, style=dotted];
m1_1312 -> m1_1314  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_1312 -> m1_1313  [key=0, style=solid];
m1_1312 -> m1_1310  [key=2, style=dotted];
m1_1313 -> m1_1314  [key=0, style=solid];
m1_1319 -> m1_1311  [key=0, style=bold, color=blue];
m1_2973 -> m1_2974  [key=0, style=solid];
m1_2976 -> m1_34  [key=2, style=dotted];
m1_2976 -> m1_2977  [key=0, style=solid];
m1_2975 -> m1_36  [key=2, style=dotted];
m1_2975 -> m1_2976  [key=0, style=solid];
m1_2975 -> m1_878  [key=2, style=dotted];
m1_2974 -> m1_2975  [key=0, style=solid];
m1_2974 -> m1_2974  [key=3, color=darkorchid, style=bold, label="Local variable string jsonIsoText"];
m1_2977 -> m1_2973  [key=0, style=bold, color=blue];
m1_227 -> m1_34  [key=2, style=dotted];
m1_227 -> m1_228  [key=0, style=solid];
m1_227 -> m1_274  [key=2, style=dotted];
m1_227 -> m1_3  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaGenerator.TypeSchema"];
m1_227 -> m1_4  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaGenerator.TypeSchema"];
m1_229 -> m1_34  [key=2, style=dotted];
m1_229 -> m1_230  [key=0, style=solid];
m1_229 -> m1_166  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_231 -> m1_34  [key=2, style=dotted];
m1_231 -> m1_232  [key=0, style=solid];
m1_233 -> m1_34  [key=2, style=dotted];
m1_233 -> m1_234  [key=0, style=solid];
m1_235 -> m1_34  [key=2, style=dotted];
m1_235 -> m1_236  [key=0, style=solid];
m1_237 -> m1_34  [key=2, style=dotted];
m1_237 -> m1_238  [key=0, style=solid];
m1_239 -> m1_34  [key=2, style=dotted];
m1_239 -> m1_240  [key=0, style=solid];
m1_241 -> m1_34  [key=2, style=dotted];
m1_241 -> m1_242  [key=0, style=solid];
m1_243 -> m1_34  [key=2, style=dotted];
m1_243 -> m1_244  [key=0, style=solid];
m1_245 -> m1_34  [key=2, style=dotted];
m1_245 -> m1_246  [key=0, style=solid];
m1_247 -> m1_34  [key=2, style=dotted];
m1_247 -> m1_248  [key=0, style=solid];
m1_249 -> m1_34  [key=2, style=dotted];
m1_249 -> m1_250  [key=0, style=solid];
m1_251 -> m1_34  [key=2, style=dotted];
m1_251 -> m1_252  [key=0, style=solid];
m1_253 -> m1_34  [key=2, style=dotted];
m1_253 -> m1_254  [key=0, style=solid];
m1_255 -> m1_34  [key=2, style=dotted];
m1_255 -> m1_256  [key=0, style=solid];
m1_258 -> m1_34  [key=2, style=dotted];
m1_258 -> m1_259  [key=0, style=solid];
m1_260 -> m1_34  [key=2, style=dotted];
m1_260 -> m1_261  [key=0, style=solid];
m1_263 -> m1_34  [key=2, style=dotted];
m1_263 -> m1_264  [key=0, style=solid];
m1_265 -> m1_34  [key=2, style=dotted];
m1_265 -> m1_266  [key=0, style=solid];
m1_267 -> m1_34  [key=2, style=dotted];
m1_267 -> m1_268  [key=0, style=solid];
m1_224 -> m1_35  [key=2, style=dotted];
m1_224 -> m1_225  [key=0, style=solid];
m1_224 -> m1_272  [key=2, style=dotted];
m1_226 -> m1_227  [key=0, style=solid];
m1_226 -> m1_273  [key=2, style=dotted];
m1_228 -> m1_229  [key=0, style=solid];
m1_228 -> m1_8  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaGenerator"];
m1_228 -> m1_9  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaGenerator"];
m1_228 -> m1_10  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaGenerator"];
m1_228 -> m1_14  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaGenerator"];
m1_228 -> m1_15  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaGenerator"];
m1_228 -> m1_16  [key=1, style=dashed, color=red, label="Newtonsoft.Json.Schema.JsonSchemaGenerator"];
m1_228 -> m1_18  [key=1, style=dashed, color=red, label="Newtonsoft.Json.Schema.JsonSchemaGenerator"];
m1_228 -> m1_19  [key=1, style=dashed, color=red, label="Newtonsoft.Json.Schema.JsonSchemaGenerator"];
m1_228 -> m1_25  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaGenerator"];
m1_228 -> m1_30  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaGenerator"];
m1_228 -> m1_33  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaGenerator"];
m1_228 -> m1_37  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaGenerator"];
m1_228 -> m1_38  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaGenerator"];
m1_228 -> m1_65  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaGenerator"];
m1_228 -> m1_73  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaGenerator"];
m1_228 -> m1_74  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaGenerator"];
m1_228 -> m1_76  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaGenerator"];
m1_228 -> m1_83  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaGenerator"];
m1_228 -> m1_85  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaGenerator"];
m1_228 -> m1_91  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaGenerator"];
m1_228 -> m1_93  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaGenerator"];
m1_228 -> m1_95  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaGenerator"];
m1_228 -> m1_96  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaGenerator"];
m1_228 -> m1_97  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaGenerator"];
m1_228 -> m1_99  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaGenerator"];
m1_228 -> m1_101  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaGenerator"];
m1_228 -> m1_107  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaGenerator"];
m1_228 -> m1_109  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaGenerator"];
m1_228 -> m1_110  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaGenerator"];
m1_228 -> m1_115  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaGenerator"];
m1_228 -> m1_116  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaGenerator"];
m1_228 -> m1_118  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaGenerator"];
m1_228 -> m1_119  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaGenerator"];
m1_228 -> m1_120  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaGenerator"];
m1_228 -> m1_121  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaGenerator"];
m1_228 -> m1_125  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaGenerator"];
m1_228 -> m1_126  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaGenerator"];
m1_228 -> m1_128  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaGenerator"];
m1_228 -> m1_129  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaGenerator"];
m1_228 -> m1_130  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaGenerator"];
m1_228 -> m1_132  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaGenerator"];
m1_228 -> m1_133  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaGenerator"];
m1_228 -> m1_134  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaGenerator"];
m1_228 -> m1_136  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaGenerator"];
m1_228 -> m1_137  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaGenerator"];
m1_228 -> m1_139  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaGenerator"];
m1_228 -> m1_141  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaGenerator"];
m1_228 -> m1_172  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaGenerator"];
m1_228 -> m1_176  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaGenerator"];
m1_228 -> m1_179  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaGenerator"];
m1_228 -> m1_181  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaGenerator"];
m1_228 -> m1_183  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaGenerator"];
m1_230 -> m1_231  [key=0, style=solid];
m1_232 -> m1_233  [key=0, style=solid];
m1_234 -> m1_235  [key=0, style=solid];
m1_236 -> m1_237  [key=0, style=solid];
m1_238 -> m1_239  [key=0, style=solid];
m1_240 -> m1_241  [key=0, style=solid];
m1_242 -> m1_243  [key=0, style=solid];
m1_244 -> m1_245  [key=0, style=solid];
m1_246 -> m1_247  [key=0, style=solid];
m1_248 -> m1_249  [key=0, style=solid];
m1_250 -> m1_251  [key=0, style=solid];
m1_252 -> m1_253  [key=0, style=solid];
m1_254 -> m1_255  [key=0, style=solid];
m1_256 -> m1_258  [key=1, style=dashed, color=darkseagreen4, label=referenceResolver];
m1_256 -> m1_257  [key=0, style=solid];
m1_256 -> m1_275  [key=2, style=dotted];
m1_257 -> m1_258  [key=0, style=solid];
m1_259 -> m1_260  [key=0, style=solid];
m1_261 -> m1_263  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m1_261 -> m1_262  [key=0, style=solid];
m1_261 -> m1_276  [key=2, style=dotted];
m1_262 -> m1_263  [key=0, style=solid];
m1_264 -> m1_265  [key=0, style=solid];
m1_266 -> m1_267  [key=0, style=solid];
m1_268 -> m1_210  [key=0, style=bold, color=blue];
m1_2433 -> m1_2434  [key=0, style=solid];
m1_2436 -> m1_12  [key=2, style=dotted];
m1_2436 -> m1_2437  [key=0, style=solid];
m1_2436 -> m1_2438  [key=1, style=dashed, color=darkseagreen4, label=deserializedResponse];
m1_2437 -> m1_34  [key=2, style=dotted];
m1_2437 -> m1_2438  [key=0, style=solid];
m1_2435 -> m1_2436  [key=0, style=solid];
m1_2435 -> m1_65  [key=2, style=dotted];
m1_2438 -> m1_2439  [key=0, style=solid];
m1_2438 -> m1_2442  [key=2, style=dotted];
m1_2438 -> m1_203  [key=2, style=dotted];
m1_2434 -> m1_2435  [key=0, style=solid];
m1_2434 -> m1_2438  [key=1, style=dashed, color=darkseagreen4, label=response];
m1_2434 -> m1_2440  [key=2, style=dotted];
m1_2434 -> m1_2441  [key=2, style=dotted];
m1_2434 -> m1_1447  [key=2, style=dotted];
m1_2439 -> m1_2433  [key=0, style=bold, color=blue];
m1_2406 -> m1_2407  [key=0, style=solid];
m1_2407 -> m1_438  [key=2, style=dotted];
m1_2407 -> m1_2408  [key=0, style=solid];
m1_2407 -> m1_3928  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable"];
m1_2408 -> m1_2406  [key=0, style=bold, color=blue];
m1_1678 -> m1_1679  [key=0, style=solid];
m1_1680 -> m1_12  [key=2, style=dotted];
m1_1680 -> m1_1681  [key=0, style=solid];
m1_1679 -> m1_1680  [key=0, style=solid];
m1_1679 -> m1_1676  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m1_1681 -> m1_1682  [key=0, style=solid];
m1_1681 -> m1_1684  [key=0, style=solid];
m1_1681 -> m1_1187  [key=2, style=dotted];
m1_1682 -> m1_1683  [key=0, style=solid];
m1_1683 -> m1_1684  [key=0, style=solid];
m1_1683 -> m1_203  [key=2, style=dotted];
m1_1683 -> m1_1188  [key=2, style=dotted];
m1_1684 -> m1_1678  [key=0, style=bold, color=blue];
m1_3373 -> m1_3374  [key=0, style=solid];
m1_3374 -> m1_123  [key=2, style=dotted];
m1_3374 -> m1_831  [key=2, style=dotted];
m1_3374 -> m1_839  [key=2, style=dotted];
m1_3374 -> m1_120  [key=2, style=dotted];
m1_3374 -> m1_3375  [key=0, style=solid];
m1_3376 -> m1_67  [key=2, style=dotted];
m1_3376 -> m1_3377  [key=0, style=solid];
m1_3375 -> m1_95  [key=2, style=dotted];
m1_3375 -> m1_962  [key=2, style=dotted];
m1_3375 -> m1_3376  [key=0, style=solid];
m1_3377 -> m1_3373  [key=0, style=bold, color=blue];
m1_2454 -> m1_2455  [key=0, style=solid];
m1_2455 -> m1_12  [key=2, style=dotted];
m1_2455 -> m1_2456  [key=0, style=solid];
m1_2455 -> m1_2457  [key=1, style=dashed, color=darkseagreen4, label=c];
m1_2456 -> m1_34  [key=2, style=dotted];
m1_2456 -> m1_2457  [key=0, style=solid];
m1_2457 -> m1_34  [key=2, style=dotted];
m1_2457 -> m1_2458  [key=0, style=solid];
m1_2458 -> m1_2454  [key=0, style=bold, color=blue];
m1_3596 -> m1_3597  [key=0, style=solid];
m1_3597 -> m1_3583  [key=2, style=dotted];
m1_3597 -> m1_3598  [key=0, style=solid];
m1_3598 -> m1_3596  [key=0, style=bold, color=blue];
m1_3779 -> m1_3780  [key=0, style=solid];
m1_3780 -> m1_8  [key=2, style=dotted];
m1_3780 -> m1_3781  [key=0, style=solid];
m1_3780 -> m1_3782  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_3781 -> m1_3779  [key=0, style=bold, color=blue];
m1_789 -> m1_790  [key=0, style=solid];
m1_793 -> m1_12  [key=2, style=dotted];
m1_793 -> m1_794  [key=0, style=solid];
m1_793 -> m1_795  [key=1, style=dashed, color=darkseagreen4, label=jsonNetResult];
m1_795 -> m1_34  [key=2, style=dotted];
m1_795 -> m1_796  [key=0, style=solid];
m1_794 -> m1_34  [key=2, style=dotted];
m1_794 -> m1_795  [key=0, style=solid];
m1_790 -> m1_793  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_790 -> m1_790  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m1_790 -> m1_791  [key=0, style=solid];
m1_790 -> m1_792  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_792 -> m1_793  [key=0, style=solid];
m1_792 -> m1_795  [key=1, style=dashed, color=darkseagreen4, label=dataContractResult];
m1_792 -> m1_797  [key=2, style=dotted];
m1_792 -> m1_798  [key=2, style=dotted];
m1_792 -> m1_799  [key=2, style=dotted];
m1_791 -> m1_792  [key=0, style=solid];
m1_791 -> m1_644  [key=2, style=dotted];
m1_796 -> m1_789  [key=0, style=bold, color=blue];
m1_3569 -> m1_979  [key=3, color=darkorchid, style=bold, label="method methodReturn System.TypeCode System.IConvertible.GetTypeCode"];
m1_3569 -> m1_3570  [key=0, style=solid];
m1_3570 -> m1_3571  [key=0, style=solid];
m1_3571 -> m1_3569  [key=0, style=bold, color=blue];
m1_2558 -> m1_2559  [key=0, style=solid];
m1_2559 -> m1_831  [key=2, style=dotted];
m1_2559 -> m1_2560  [key=0, style=solid];
m1_2559 -> m1_2563  [key=2, style=dotted];
m1_2560 -> m1_65  [key=2, style=dotted];
m1_2560 -> m1_2561  [key=0, style=solid];
m1_2561 -> m1_67  [key=2, style=dotted];
m1_2561 -> m1_2562  [key=0, style=solid];
m1_2562 -> m1_2558  [key=0, style=bold, color=blue];
m1_2754 -> m1_2755  [key=0, style=solid];
m1_2762 -> m1_34  [key=2, style=dotted];
m1_2762 -> m1_2763  [key=0, style=solid];
m1_2763 -> m1_34  [key=2, style=dotted];
m1_2763 -> m1_2764  [key=0, style=solid];
m1_2764 -> m1_34  [key=2, style=dotted];
m1_2764 -> m1_2765  [key=0, style=solid];
m1_2761 -> m1_2762  [key=0, style=solid];
m1_2761 -> m1_95  [key=2, style=dotted];
m1_2761 -> m1_96  [key=2, style=dotted];
m1_2755 -> m1_2761  [key=1, style=dashed, color=darkseagreen4, label=contractResolver];
m1_2755 -> m1_2756  [key=0, style=solid];
m1_2755 -> m1_1600  [key=2, style=dotted];
m1_2755 -> m1_2759  [key=1, style=dashed, color=darkseagreen4, label=contractResolver];
m1_2760 -> m1_2761  [key=0, style=solid];
m1_2760 -> m1_67  [key=2, style=dotted];
m1_2759 -> m1_95  [key=2, style=dotted];
m1_2759 -> m1_962  [key=2, style=dotted];
m1_2759 -> m1_2760  [key=0, style=solid];
m1_2756 -> m1_2759  [key=1, style=dashed, color=darkseagreen4, label=c];
m1_2756 -> m1_2757  [key=0, style=solid];
m1_2756 -> m1_2766  [key=2, style=dotted];
m1_2758 -> m1_2759  [key=0, style=solid];
m1_2757 -> m1_2758  [key=0, style=solid];
m1_2765 -> m1_2754  [key=0, style=bold, color=blue];
m1_117 -> m1_118  [key=0, style=solid];
m1_117 -> m1_127  [key=0, style=solid];
m1_59 -> m1_60  [key=0, style=solid];
m1_59 -> m1_63  [key=1, style=dashed, color=darkseagreen4, label=bool];
m1_59 -> m1_67  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_59 -> m1_69  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_59 -> m1_12  [key=2, style=dotted];
m1_59 -> m1_61  [key=1, style=dashed, color=darkseagreen4, label=c2];
m1_60 -> m1_61  [key=0, style=solid];
m1_60 -> m1_47  [key=2, style=dotted];
m1_60 -> m1_62  [key=1, style=dashed, color=darkseagreen4, label=containerAttribute];
m1_60 -> m1_34  [key=2, style=dotted];
m1_69 -> m1_71  [key=0, style=solid];
m1_69 -> m1_73  [key=1, style=dashed, color=darkseagreen4, label=c];
m1_69 -> m1_70  [key=0, style=solid];
m1_69 -> m1_80  [key=2, style=dotted];
m1_69 -> m1_72  [key=1, style=dashed, color=darkseagreen4, label=c];
m1_61 -> m1_62  [key=0, style=solid];
m1_61 -> m1_63  [key=0, style=solid];
m1_61 -> m1_48  [key=2, style=dotted];
m1_61 -> m1_34  [key=2, style=dotted];
m1_62 -> m1_71  [key=0, style=solid];
m1_62 -> m1_52  [key=0, style=bold, color=blue];
m1_64 -> m1_71  [key=0, style=solid];
m1_68 -> m1_69  [key=0, style=solid];
m1_70 -> m1_71  [key=0, style=solid];
m1_71 -> m1_59  [key=0, style=bold, color=blue];
m1_71 -> m1_64  [key=2, style=dotted];
m1_71 -> m1_72  [key=0, style=solid];
m1_71 -> m1_63  [key=2, style=dotted];
m1_160 -> m1_163  [key=1, style=dashed, color=darkseagreen4, label=input];
m1_160 -> m1_164  [key=1, style=dashed, color=darkseagreen4, label=input];
m1_160 -> m1_165  [key=1, style=dashed, color=darkseagreen4, label=input];
m1_160 -> m1_161  [key=0, style=solid];
m1_160 -> m1_167  [key=2, style=dotted];
m1_580 -> m1_581  [key=0, style=solid];
m1_583 -> m1_34  [key=2, style=dotted];
m1_583 -> m1_584  [key=0, style=solid];
m1_582 -> m1_583  [key=0, style=solid];
m1_582 -> m1_47  [key=2, style=dotted];
m1_581 -> m1_582  [key=0, style=solid];
m1_581 -> m1_585  [key=2, style=dotted];
m1_584 -> m1_580  [key=0, style=bold, color=blue];
m1_692 -> m1_693  [key=0, style=solid];
m1_704 -> m1_34  [key=2, style=dotted];
m1_704 -> m1_705  [key=0, style=solid];
m1_693 -> m1_704  [key=1, style=dashed, color=darkseagreen4, label=dateValue];
m1_693 -> m1_683  [key=2, style=dotted];
m1_693 -> m1_694  [key=0, style=solid];
m1_693 -> m1_695  [key=1, style=dashed, color=darkseagreen4, label=dateValue];
m1_703 -> m1_704  [key=0, style=solid];
m1_696 -> m1_47  [key=2, style=dotted];
m1_696 -> m1_697  [key=0, style=solid];
m1_696 -> m1_702  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m1_694 -> m1_696  [key=1, style=dashed, color=darkseagreen4, label=testDictionary];
m1_694 -> m1_554  [key=2, style=dotted];
m1_694 -> m1_695  [key=0, style=solid];
m1_694 -> m1_699  [key=1, style=dashed, color=darkseagreen4, label=testDictionary];
m1_695 -> m1_696  [key=0, style=solid];
m1_702 -> m1_703  [key=0, style=solid];
m1_702 -> m1_666  [key=2, style=dotted];
m1_697 -> m1_698  [key=0, style=solid];
m1_697 -> m1_559  [key=2, style=dotted];
m1_697 -> m1_699  [key=1, style=dashed, color=darkseagreen4, label=ms];
m1_697 -> m1_700  [key=1, style=dashed, color=darkseagreen4, label=ms];
m1_699 -> m1_700  [key=0, style=solid];
m1_699 -> m1_645  [key=2, style=dotted];
m1_701 -> m1_702  [key=0, style=solid];
m1_701 -> m1_647  [key=2, style=dotted];
m1_698 -> m1_644  [key=2, style=dotted];
m1_698 -> m1_699  [key=0, style=solid];
m1_700 -> m1_701  [key=0, style=solid];
m1_700 -> m1_646  [key=2, style=dotted];
m1_705 -> m1_692  [key=0, style=bold, color=blue];
m1_1876 -> m1_1877  [key=0, style=solid];
m1_1877 -> m1_1878  [key=0, style=solid];
m1_1877 -> m1_1879  [key=2, style=dotted];
m1_1878 -> m1_1876  [key=0, style=bold, color=blue];
m1_3746 -> m1_3747  [key=0, style=solid];
m1_3752 -> m1_34  [key=2, style=dotted];
m1_3752 -> m1_3753  [key=0, style=solid];
m1_3753 -> m1_34  [key=2, style=dotted];
m1_3753 -> m1_3754  [key=0, style=solid];
m1_3751 -> m1_3752  [key=0, style=solid];
m1_3751 -> m1_3753  [key=1, style=dashed, color=darkseagreen4, label=clonedObject];
m1_3751 -> m1_96  [key=2, style=dotted];
m1_3748 -> m1_3751  [key=1, style=dashed, color=darkseagreen4, label=serializerSettings];
m1_3748 -> m1_95  [key=2, style=dotted];
m1_3748 -> m1_3749  [key=0, style=solid];
m1_3749 -> m1_3751  [key=1, style=dashed, color=darkseagreen4, label=jsonCopy];
m1_3749 -> m1_463  [key=2, style=dotted];
m1_3749 -> m1_3750  [key=0, style=solid];
m1_3750 -> m1_3751  [key=0, style=solid];
m1_3750 -> m1_3078  [key=2, style=dotted];
m1_3747 -> m1_3748  [key=0, style=solid];
m1_3747 -> m1_3749  [key=1, style=dashed, color=darkseagreen4, label=original];
m1_3747 -> m1_3750  [key=1, style=dashed, color=darkseagreen4, label=original];
m1_3747 -> m1_3755  [key=2, style=dotted];
m1_3754 -> m1_3746  [key=0, style=bold, color=blue];
m1_1399 -> m1_1400  [key=0, style=solid];
m1_1402 -> m1_34  [key=2, style=dotted];
m1_1402 -> m1_1403  [key=0, style=solid];
m1_1403 -> m1_34  [key=2, style=dotted];
m1_1403 -> m1_1404  [key=0, style=solid];
m1_1404 -> m1_34  [key=2, style=dotted];
m1_1404 -> m1_1405  [key=0, style=solid];
m1_1405 -> m1_34  [key=2, style=dotted];
m1_1405 -> m1_1406  [key=0, style=solid];
m1_1406 -> m1_34  [key=2, style=dotted];
m1_1406 -> m1_1407  [key=0, style=solid];
m1_1407 -> m1_34  [key=2, style=dotted];
m1_1407 -> m1_1408  [key=0, style=solid];
m1_1407 -> m1_1413  [key=2, style=dotted];
m1_1408 -> m1_34  [key=2, style=dotted];
m1_1408 -> m1_1409  [key=0, style=solid];
m1_1408 -> m1_1413  [key=2, style=dotted];
m1_1409 -> m1_34  [key=2, style=dotted];
m1_1409 -> m1_1410  [key=0, style=solid];
m1_1410 -> m1_34  [key=2, style=dotted];
m1_1410 -> m1_1411  [key=0, style=solid];
m1_1401 -> m1_1402  [key=0, style=solid];
m1_1401 -> m1_1403  [key=1, style=dashed, color=darkseagreen4, label=c];
m1_1401 -> m1_1404  [key=1, style=dashed, color=darkseagreen4, label=c];
m1_1401 -> m1_1405  [key=1, style=dashed, color=darkseagreen4, label=c];
m1_1401 -> m1_1406  [key=1, style=dashed, color=darkseagreen4, label=c];
m1_1401 -> m1_1407  [key=1, style=dashed, color=darkseagreen4, label=c];
m1_1401 -> m1_1408  [key=1, style=dashed, color=darkseagreen4, label=c];
m1_1401 -> m1_1409  [key=1, style=dashed, color=darkseagreen4, label=c];
m1_1401 -> m1_1410  [key=1, style=dashed, color=darkseagreen4, label=c];
m1_1401 -> m1_95  [key=2, style=dotted];
m1_1401 -> m1_96  [key=2, style=dotted];
m1_1401 -> m1_1411  [key=1, style=dashed, color=darkseagreen4, label=c];
m1_1411 -> m1_1412  [key=0, style=solid];
m1_1411 -> m1_520  [key=2, style=dotted];
m1_1400 -> m1_1401  [key=0, style=solid];
m1_1400 -> m1_1400  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m1_1412 -> m1_1399  [key=0, style=bold, color=blue];
m1_40 -> m1_72  [key=0, style=solid];
m1_40 -> m1_73  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_40 -> m1_74  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_40 -> m1_78  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Required"];
m1_40 -> m1_80  [key=1, style=dashed, color=darkseagreen4, label=bool];
m1_40 -> m1_83  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_40 -> m1_166  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_40 -> m1_84  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_40 -> m1_85  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_40 -> m1_91  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_40 -> m1_94  [key=1, style=dashed, color=darkseagreen4, label=bool];
m1_40 -> m1_96  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_40 -> m1_97  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_40 -> m1_101  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Required"];
m1_40 -> m1_104  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_40 -> m1_109  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Required"];
m1_40 -> m1_110  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_40 -> m1_111  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_40 -> m1_113  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_40 -> m1_118  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_40 -> m1_119  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_40 -> m1_122  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_40 -> m1_128  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Required"];
m1_40 -> m1_129  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_40 -> m1_130  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_40 -> m1_132  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Required"];
m1_40 -> m1_133  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_40 -> m1_134  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_40 -> m1_136  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Required"];
m1_40 -> m1_41  [key=0, style=solid, color=green];
m1_40 -> m1_47  [key=2, style=dotted];
m1_72 -> m1_73  [key=0, style=solid];
m1_72 -> m1_6  [key=2, style=dotted];
m1_73 -> m1_74  [key=0, style=solid];
m1_73 -> m1_59  [key=2, style=dotted];
m1_73 -> m1_75  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_73 -> m1_76  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_73 -> m1_65  [key=2, style=dotted];
m1_74 -> m1_75  [key=0, style=solid];
m1_74 -> m1_59  [key=2, style=dotted];
m1_74 -> m1_92  [key=1, style=dashed, color=darkseagreen4, label=explicitId];
m1_74 -> m1_93  [key=1, style=dashed, color=darkseagreen4, label=explicitId];
m1_74 -> m1_66  [key=2, style=dotted];
m1_78 -> m1_79  [key=0, style=solid];
m1_78 -> m1_80  [key=0, style=solid];
m1_78 -> m1_144  [key=2, style=dotted];
m1_78 -> m1_34  [key=2, style=dotted];
m1_80 -> m1_81  [key=0, style=solid];
m1_80 -> m1_82  [key=0, style=solid];
m1_96 -> m1_97  [key=0, style=solid];
m1_96 -> m1_41  [key=2, style=dotted];
m1_118 -> m1_119  [key=0, style=solid];
m1_118 -> m1_156  [key=2, style=dotted];
m1_119 -> m1_120  [key=0, style=solid];
m1_119 -> m1_141  [key=0, style=solid];
m1_119 -> m1_157  [key=2, style=dotted];
m1_130 -> m1_141  [key=0, style=solid];
m1_130 -> m1_162  [key=2, style=dotted];
m1_130 -> m1_131  [key=0, style=solid];
m1_132 -> m1_133  [key=0, style=solid];
m1_132 -> m1_151  [key=2, style=dotted];
m1_132 -> m1_12  [key=2, style=dotted];
m1_133 -> m1_134  [key=0, style=solid];
m1_133 -> m1_59  [key=2, style=dotted];
m1_133 -> m1_34  [key=2, style=dotted];
m1_134 -> m1_141  [key=0, style=solid];
m1_134 -> m1_163  [key=2, style=dotted];
m1_134 -> m1_130  [key=0, style=bold, color=blue];
m1_136 -> m1_137  [key=0, style=solid];
m1_136 -> m1_164  [key=2, style=dotted];
m1_136 -> m1_151  [key=2, style=dotted];
m1_75 -> m1_76  [key=0, style=solid];
m1_75 -> m1_83  [key=0, style=solid];
m1_75 -> m1_48  [key=2, style=dotted];
m1_75 -> m1_67  [key=2, style=dotted];
m1_76 -> m1_77  [key=0, style=solid];
m1_76 -> m1_143  [key=2, style=dotted];
m1_76 -> m1_78  [key=1, style=dashed, color=darkseagreen4, label=c2];
m1_76 -> m1_79  [key=1, style=dashed, color=darkseagreen4, label=resolvedSchema];
m1_76 -> m1_80  [key=1, style=dashed, color=darkseagreen4, label=resolvedSchema];
m1_76 -> m1_81  [key=1, style=dashed, color=darkseagreen4, label=resolvedSchema];
m1_76 -> m1_82  [key=1, style=dashed, color=darkseagreen4, label=resolvedSchema];
m1_76 -> m1_12  [key=2, style=dotted];
m1_77 -> m1_78  [key=0, style=solid];
m1_77 -> m1_83  [key=0, style=solid];
m1_77 -> m1_34  [key=2, style=dotted];
m1_79 -> m1_80  [key=0, style=solid];
m1_79 -> m1_68  [key=0, style=bold, color=blue];
m1_131 -> m1_132  [key=0, style=solid];
m1_131 -> m1_135  [key=0, style=solid];
m1_131 -> m1_34  [key=2, style=dotted];
m1_131 -> m1_47  [key=2, style=dotted];
m1_135 -> m1_136  [key=0, style=solid];
m1_135 -> m1_138  [key=0, style=solid];
m1_138 -> m1_139  [key=0, style=solid];
m1_138 -> m1_140  [key=0, style=solid];
m1_140 -> m1_142  [key=0, style=solid];
m1_140 -> m1_146  [key=2, style=dotted];
m1_140 -> m1_147  [key=2, style=dotted];
m1_123 -> m1_124  [key=0, style=solid];
m1_123 -> m1_141  [key=0, style=solid];
m1_123 -> m1_126  [key=1, style=dashed, color=darkseagreen4, label=enumValue];
m1_137 -> m1_141  [key=0, style=solid];
m1_139 -> m1_141  [key=0, style=solid];
m1_1114 -> m1_1115  [key=0, style=solid];
m1_1118 -> m1_34  [key=2, style=dotted];
m1_1118 -> m1_1119  [key=0, style=solid];
m1_1117 -> m1_1118  [key=0, style=solid];
m1_1117 -> m1_47  [key=2, style=dotted];
m1_1115 -> m1_1117  [key=1, style=dashed, color=darkseagreen4, label=personRaw];
m1_1115 -> m1_1116  [key=0, style=solid];
m1_1115 -> m1_1120  [key=2, style=dotted];
m1_1115 -> m1_1121  [key=2, style=dotted];
m1_1116 -> m1_1117  [key=0, style=solid];
m1_1119 -> m1_1114  [key=0, style=bold, color=blue];
m1_618 -> m1_619  [key=0, style=solid];
m1_625 -> m1_67  [key=2, style=dotted];
m1_625 -> m1_626  [key=0, style=solid];
m1_624 -> m1_596  [key=2, style=dotted];
m1_624 -> m1_625  [key=0, style=solid];
m1_619 -> m1_624  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m1_619 -> m1_620  [key=0, style=solid];
m1_619 -> m1_627  [key=2, style=dotted];
m1_619 -> m1_621  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m1_619 -> m1_622  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m1_619 -> m1_623  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m1_623 -> m1_624  [key=0, style=solid];
m1_620 -> m1_621  [key=0, style=solid];
m1_621 -> m1_622  [key=0, style=solid];
m1_622 -> m1_623  [key=0, style=solid];
m1_626 -> m1_618  [key=0, style=bold, color=blue];
m1_1850 -> m1_1851  [key=0, style=solid];
m1_1851 -> m1_1852  [key=0, style=solid];
m1_1851 -> m1_1853  [key=2, style=dotted];
m1_1852 -> m1_1850  [key=0, style=bold, color=blue];
m1_3215 -> m1_3216  [key=0, style=solid];
m1_3217 -> m1_65  [key=2, style=dotted];
m1_3217 -> m1_3218  [key=0, style=solid];
m1_3220 -> m1_65  [key=2, style=dotted];
m1_3220 -> m1_3221  [key=0, style=solid];
m1_3218 -> m1_67  [key=2, style=dotted];
m1_3218 -> m1_3219  [key=0, style=solid];
m1_3221 -> m1_67  [key=2, style=dotted];
m1_3221 -> m1_3222  [key=0, style=solid];
m1_3216 -> m1_3217  [key=0, style=solid];
m1_3216 -> m1_3223  [key=2, style=dotted];
m1_3219 -> m1_3220  [key=0, style=solid];
m1_3219 -> m1_3224  [key=2, style=dotted];
m1_3222 -> m1_3215  [key=0, style=bold, color=blue];
m1_3848 -> m1_2962  [key=3, color=darkorchid, style=bold, label="method methodReturn object ReadJson"];
m1_3848 -> m1_3849  [key=0, style=solid];
m1_3849 -> m1_3850  [key=0, style=solid];
m1_3849 -> m1_2297  [key=2, style=dotted];
m1_3849 -> m1_3852  [key=1, style=dashed, color=darkseagreen4, label=encodingName];
m1_3852 -> m1_3853  [key=0, style=solid];
m1_3852 -> m1_3854  [key=2, style=dotted];
m1_3851 -> m1_3853  [key=0, style=solid];
m1_3850 -> m1_3852  [key=0, style=solid];
m1_3850 -> m1_3851  [key=0, style=solid];
m1_3853 -> m1_3848  [key=0, style=bold, color=blue];
m1_608 -> m1_609  [key=0, style=solid];
m1_615 -> m1_67  [key=2, style=dotted];
m1_615 -> m1_616  [key=0, style=solid];
m1_614 -> m1_596  [key=2, style=dotted];
m1_614 -> m1_615  [key=0, style=solid];
m1_609 -> m1_614  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m1_609 -> m1_610  [key=0, style=solid];
m1_609 -> m1_617  [key=2, style=dotted];
m1_609 -> m1_611  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m1_609 -> m1_612  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m1_609 -> m1_613  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m1_613 -> m1_614  [key=0, style=solid];
m1_610 -> m1_611  [key=0, style=solid];
m1_611 -> m1_612  [key=0, style=solid];
m1_612 -> m1_613  [key=0, style=solid];
m1_616 -> m1_608  [key=0, style=bold, color=blue];
m1_2298 -> m1_2299  [key=0, style=solid];
m1_2299 -> m1_12  [key=2, style=dotted];
m1_2299 -> m1_2300  [key=0, style=solid];
m1_2300 -> m1_34  [key=2, style=dotted];
m1_2300 -> m1_2301  [key=0, style=solid];
m1_2300 -> m1_2296  [key=2, style=dotted];
m1_2300 -> m1_683  [key=2, style=dotted];
m1_2300 -> m1_839  [key=2, style=dotted];
m1_2301 -> m1_2298  [key=0, style=bold, color=blue];
m1_2504 -> m1_2505  [key=0, style=solid];
m1_2506 -> m1_12  [key=2, style=dotted];
m1_2506 -> m1_2507  [key=0, style=solid];
m1_2506 -> m1_2508  [key=1, style=dashed, color=darkseagreen4, label=commentTestClass];
m1_2506 -> m1_2509  [key=1, style=dashed, color=darkseagreen4, label=commentTestClass];
m1_2507 -> m1_34  [key=2, style=dotted];
m1_2507 -> m1_2508  [key=0, style=solid];
m1_2508 -> m1_34  [key=2, style=dotted];
m1_2508 -> m1_2509  [key=0, style=solid];
m1_2509 -> m1_34  [key=2, style=dotted];
m1_2509 -> m1_2510  [key=0, style=solid];
m1_2505 -> m1_2506  [key=0, style=solid];
m1_2505 -> m1_2505  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m1_2510 -> m1_2504  [key=0, style=bold, color=blue];
m1_1479 -> m1_1480  [key=0, style=solid];
m1_1481 -> m1_12  [key=2, style=dotted];
m1_1481 -> m1_1482  [key=0, style=solid];
m1_1482 -> m1_34  [key=2, style=dotted];
m1_1482 -> m1_1483  [key=0, style=solid];
m1_1480 -> m1_1481  [key=0, style=solid];
m1_1480 -> m1_1480  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m1_1483 -> m1_1479  [key=0, style=bold, color=blue];
m1_2945 -> m1_2946  [key=0, style=solid];
m1_2946 -> m1_8  [key=2, style=dotted];
m1_2946 -> m1_2947  [key=0, style=solid];
m1_2946 -> m1_2948  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_2947 -> m1_2945  [key=0, style=bold, color=blue];
m1_833 -> m1_834  [key=0, style=solid];
m1_836 -> m1_34  [key=2, style=dotted];
m1_836 -> m1_837  [key=0, style=solid];
m1_835 -> m1_836  [key=0, style=solid];
m1_835 -> m1_47  [key=2, style=dotted];
m1_834 -> m1_123  [key=2, style=dotted];
m1_834 -> m1_835  [key=0, style=solid];
m1_834 -> m1_831  [key=2, style=dotted];
m1_834 -> m1_839  [key=2, style=dotted];
m1_834 -> m1_120  [key=2, style=dotted];
m1_834 -> m1_838  [key=2, style=dotted];
m1_837 -> m1_833  [key=0, style=bold, color=blue];
m1_3191 -> m1_3198  [key=0, style=solid];
m1_3191 -> m1_3187  [key=3, color=darkorchid, style=bold, label="Parameter variable string json"];
m1_3198 -> m1_117  [key=2, style=dotted];
m1_3198 -> m1_118  [key=2, style=dotted];
m1_3198 -> m1_3199  [key=0, style=solid];
m1_3198 -> m1_3201  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m1_3199 -> m1_119  [key=2, style=dotted];
m1_3199 -> m1_3200  [key=0, style=solid];
m1_3199 -> m1_3201  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m1_3201 -> m1_2259  [key=2, style=dotted];
m1_3201 -> m1_3202  [key=0, style=solid];
m1_3200 -> m1_1600  [key=2, style=dotted];
m1_3200 -> m1_3201  [key=0, style=solid];
m1_3202 -> m1_3191  [key=0, style=bold, color=blue];
m1_2897 -> m1_2898  [key=0, style=solid];
m1_2900 -> m1_12  [key=2, style=dotted];
m1_2900 -> m1_2901  [key=0, style=solid];
m1_2904 -> m1_12  [key=2, style=dotted];
m1_2904 -> m1_2905  [key=0, style=solid];
m1_2899 -> m1_34  [key=2, style=dotted];
m1_2899 -> m1_2900  [key=0, style=solid];
m1_2901 -> m1_34  [key=2, style=dotted];
m1_2901 -> m1_2902  [key=0, style=solid];
m1_2903 -> m1_34  [key=2, style=dotted];
m1_2903 -> m1_2904  [key=0, style=solid];
m1_2905 -> m1_34  [key=2, style=dotted];
m1_2905 -> m1_2906  [key=0, style=solid];
m1_2898 -> m1_2900  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_2898 -> m1_2899  [key=0, style=solid];
m1_2898 -> m1_47  [key=2, style=dotted];
m1_2898 -> m1_2907  [key=2, style=dotted];
m1_2902 -> m1_2904  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_2902 -> m1_2903  [key=0, style=solid];
m1_2902 -> m1_47  [key=2, style=dotted];
m1_2902 -> m1_2907  [key=2, style=dotted];
m1_2906 -> m1_2897  [key=0, style=bold, color=blue];
m1_840 -> m1_841  [key=0, style=solid];
m1_843 -> m1_34  [key=2, style=dotted];
m1_843 -> m1_844  [key=0, style=solid];
m1_842 -> m1_843  [key=0, style=solid];
m1_842 -> m1_95  [key=2, style=dotted];
m1_842 -> m1_463  [key=2, style=dotted];
m1_841 -> m1_123  [key=2, style=dotted];
m1_841 -> m1_842  [key=0, style=solid];
m1_841 -> m1_831  [key=2, style=dotted];
m1_841 -> m1_839  [key=2, style=dotted];
m1_841 -> m1_120  [key=2, style=dotted];
m1_841 -> m1_838  [key=2, style=dotted];
m1_844 -> m1_840  [key=0, style=bold, color=blue];
m1_3561 -> m1_3562  [key=0, style=solid];
m1_3566 -> m1_12  [key=2, style=dotted];
m1_3566 -> m1_3567  [key=0, style=solid];
m1_3564 -> m1_3566  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_3564 -> m1_47  [key=2, style=dotted];
m1_3564 -> m1_3565  [key=0, style=solid];
m1_3565 -> m1_3566  [key=0, style=solid];
m1_3565 -> m1_66  [key=2, style=dotted];
m1_3562 -> m1_3564  [key=1, style=dashed, color=darkseagreen4, label=product];
m1_3562 -> m1_3563  [key=0, style=solid];
m1_3562 -> m1_3568  [key=2, style=dotted];
m1_3563 -> m1_3564  [key=0, style=solid];
m1_3563 -> m1_554  [key=2, style=dotted];
m1_3567 -> m1_3561  [key=0, style=bold, color=blue];
m1_955 -> m1_956  [key=0, style=solid];
m1_958 -> m1_463  [key=2, style=dotted];
m1_958 -> m1_959  [key=0, style=solid];
m1_958 -> m1_960  [key=1, style=dashed, color=darkseagreen4, label=indented];
m1_957 -> m1_95  [key=2, style=dotted];
m1_957 -> m1_958  [key=0, style=solid];
m1_957 -> m1_959  [key=1, style=dashed, color=darkseagreen4, label=settings];
m1_959 -> m1_962  [key=2, style=dotted];
m1_959 -> m1_960  [key=0, style=solid];
m1_956 -> m1_958  [key=1, style=dashed, color=darkseagreen4, label=obj];
m1_956 -> m1_957  [key=0, style=solid];
m1_956 -> m1_959  [key=1, style=dashed, color=darkseagreen4, label=obj];
m1_960 -> m1_961  [key=0, style=solid];
m1_960 -> m1_963  [key=2, style=dotted];
m1_961 -> m1_955  [key=0, style=bold, color=blue];
m1_164 -> m1_34  [key=2, style=dotted];
m1_164 -> m1_165  [key=0, style=solid];
m1_3490 -> m1_3491  [key=0, style=solid];
m1_3492 -> m1_67  [key=2, style=dotted];
m1_3492 -> m1_3493  [key=0, style=solid];
m1_3491 -> m1_95  [key=2, style=dotted];
m1_3491 -> m1_962  [key=2, style=dotted];
m1_3491 -> m1_1600  [key=2, style=dotted];
m1_3491 -> m1_3492  [key=0, style=solid];
m1_3491 -> m1_3494  [key=2, style=dotted];
m1_3493 -> m1_3490  [key=0, style=bold, color=blue];
m1_2865 -> m1_2866  [key=0, style=solid];
m1_2866 -> m1_8  [key=2, style=dotted];
m1_2866 -> m1_2866  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m1_2866 -> m1_2867  [key=0, style=solid];
m1_2866 -> m1_2868  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_2867 -> m1_2865  [key=0, style=bold, color=blue];
m1_2488 -> m1_2489  [key=0, style=solid];
m1_2489 -> m1_8  [key=2, style=dotted];
m1_2489 -> m1_2490  [key=0, style=solid];
m1_2489 -> m1_2491  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_2490 -> m1_2488  [key=0, style=bold, color=blue];
m1_1880 -> m1_1881  [key=0, style=solid];
m1_1885 -> m1_12  [key=2, style=dotted];
m1_1885 -> m1_1886  [key=0, style=solid];
m1_1885 -> m1_1887  [key=1, style=dashed, color=darkseagreen4, label=newModelStateDictionary];
m1_1884 -> m1_34  [key=2, style=dotted];
m1_1884 -> m1_1885  [key=0, style=solid];
m1_1886 -> m1_34  [key=2, style=dotted];
m1_1886 -> m1_1887  [key=0, style=solid];
m1_1887 -> m1_34  [key=2, style=dotted];
m1_1887 -> m1_1888  [key=0, style=solid];
m1_1883 -> m1_1885  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_1883 -> m1_1884  [key=0, style=solid];
m1_1883 -> m1_47  [key=2, style=dotted];
m1_1881 -> m1_1883  [key=1, style=dashed, color=darkseagreen4, label=modelStateDictionary];
m1_1881 -> m1_1882  [key=0, style=solid];
m1_1881 -> m1_1823  [key=2, style=dotted];
m1_1882 -> m1_1883  [key=0, style=solid];
m1_1882 -> m1_1835  [key=2, style=dotted];
m1_1888 -> m1_1880  [key=0, style=bold, color=blue];
m1_3755 -> m1_3756  [key=0, style=solid];
m1_3756 -> m1_3757  [key=0, style=solid];
m1_3757 -> m1_3755  [key=0, style=bold, color=blue];
m1_2535 -> m1_2536  [key=0, style=solid];
m1_2541 -> m1_66  [key=2, style=dotted];
m1_2541 -> m1_2542  [key=0, style=solid];
m1_2538 -> m1_559  [key=2, style=dotted];
m1_2538 -> m1_2539  [key=0, style=solid];
m1_2538 -> m1_2540  [key=1, style=dashed, color=darkseagreen4, label=ms];
m1_2540 -> m1_2541  [key=0, style=solid];
m1_2540 -> m1_647  [key=2, style=dotted];
m1_2540 -> m1_646  [key=2, style=dotted];
m1_2540 -> m1_2544  [key=2, style=dotted];
m1_2537 -> m1_2538  [key=0, style=solid];
m1_2537 -> m1_2543  [key=2, style=dotted];
m1_2537 -> m1_2539  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m1_2539 -> m1_2540  [key=0, style=solid];
m1_2539 -> m1_645  [key=2, style=dotted];
m1_2536 -> m1_2537  [key=0, style=solid];
m1_2536 -> m1_2539  [key=1, style=dashed, color=darkseagreen4, label=cc];
m1_2536 -> m1_2534  [key=2, style=dotted];
m1_2542 -> m1_2535  [key=0, style=bold, color=blue];
m1_2545 -> m1_2546  [key=0, style=solid];
m1_2548 -> m1_34  [key=2, style=dotted];
m1_2548 -> m1_2549  [key=0, style=solid];
m1_2547 -> m1_2548  [key=0, style=solid];
m1_2547 -> m1_47  [key=2, style=dotted];
m1_2546 -> m1_2547  [key=0, style=solid];
m1_2546 -> m1_2550  [key=2, style=dotted];
m1_2549 -> m1_2545  [key=0, style=bold, color=blue];
m1_3798 -> m1_3799  [key=0, style=solid];
m1_3800 -> m1_8  [key=2, style=dotted];
m1_3800 -> m1_3801  [key=0, style=solid];
m1_3800 -> m1_3802  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_3799 -> m1_3800  [key=0, style=solid];
m1_3799 -> m1_3803  [key=1, style=dashed, color=darkseagreen4, label=JsonMessage];
m1_3799 -> m1_3799  [key=3, color=darkorchid, style=bold, label="Local variable string JsonMessage"];
m1_3801 -> m1_3798  [key=0, style=bold, color=blue];
m1_3669 -> m1_3670  [key=0, style=solid];
m1_3677 -> m1_34  [key=2, style=dotted];
m1_3677 -> m1_3678  [key=0, style=solid];
m1_3682 -> m1_34  [key=2, style=dotted];
m1_3682 -> m1_3683  [key=0, style=solid];
m1_3675 -> m1_34  [key=2, style=dotted];
m1_3675 -> m1_3676  [key=0, style=solid];
m1_3680 -> m1_34  [key=2, style=dotted];
m1_3680 -> m1_3681  [key=0, style=solid];
m1_3681 -> m1_34  [key=2, style=dotted];
m1_3681 -> m1_3682  [key=0, style=solid];
m1_3681 -> m1_122  [key=2, style=dotted];
m1_3685 -> m1_34  [key=2, style=dotted];
m1_3685 -> m1_3686  [key=0, style=solid];
m1_3686 -> m1_34  [key=2, style=dotted];
m1_3686 -> m1_3687  [key=0, style=solid];
m1_3686 -> m1_122  [key=2, style=dotted];
m1_3687 -> m1_34  [key=2, style=dotted];
m1_3687 -> m1_3688  [key=0, style=solid];
m1_3671 -> m1_3677  [key=1, style=dashed, color=darkseagreen4, label=dt];
m1_3671 -> m1_3682  [key=1, style=dashed, color=darkseagreen4, label=dt];
m1_3671 -> m1_683  [key=2, style=dotted];
m1_3671 -> m1_3672  [key=0, style=solid];
m1_3671 -> m1_3674  [key=1, style=dashed, color=darkseagreen4, label=dt];
m1_3676 -> m1_3677  [key=0, style=solid];
m1_3676 -> m1_96  [key=2, style=dotted];
m1_3678 -> m1_3679  [key=0, style=solid];
m1_3678 -> m1_117  [key=2, style=dotted];
m1_3678 -> m1_118  [key=2, style=dotted];
m1_3679 -> m1_3682  [key=1, style=dashed, color=darkseagreen4, label=v];
m1_3679 -> m1_3680  [key=0, style=solid];
m1_3679 -> m1_3681  [key=1, style=dashed, color=darkseagreen4, label=v];
m1_3679 -> m1_3077  [key=2, style=dotted];
m1_3683 -> m1_3684  [key=0, style=solid];
m1_3683 -> m1_117  [key=2, style=dotted];
m1_3683 -> m1_118  [key=2, style=dotted];
m1_3674 -> m1_3675  [key=0, style=solid];
m1_3674 -> m1_3676  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_3674 -> m1_3678  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_3674 -> m1_463  [key=2, style=dotted];
m1_3684 -> m1_3685  [key=0, style=solid];
m1_3684 -> m1_3686  [key=1, style=dashed, color=darkseagreen4, label=v];
m1_3684 -> m1_3687  [key=1, style=dashed, color=darkseagreen4, label=v];
m1_3684 -> m1_3077  [key=2, style=dotted];
m1_3670 -> m1_3671  [key=0, style=solid];
m1_3670 -> m1_3678  [key=1, style=dashed, color=darkseagreen4, label=culture];
m1_3670 -> m1_3683  [key=1, style=dashed, color=darkseagreen4, label=culture];
m1_3670 -> m1_273  [key=2, style=dotted];
m1_3670 -> m1_3673  [key=1, style=dashed, color=darkseagreen4, label=culture];
m1_3672 -> m1_3678  [key=1, style=dashed, color=darkseagreen4, label=dateFormatString];
m1_3672 -> m1_3683  [key=1, style=dashed, color=darkseagreen4, label=dateFormatString];
m1_3672 -> m1_3652  [key=3, color=darkorchid, style=bold, label="Local variable string dateFormatString"];
m1_3672 -> m1_3673  [key=0, style=solid];
m1_3673 -> m1_3676  [key=1, style=dashed, color=darkseagreen4, label=settings];
m1_3673 -> m1_3674  [key=0, style=solid];
m1_3673 -> m1_95  [key=2, style=dotted];
m1_3688 -> m1_3669  [key=0, style=bold, color=blue];
m1_1619 -> m1_1620  [key=0, style=solid];
m1_1625 -> m1_34  [key=2, style=dotted];
m1_1625 -> m1_1626  [key=0, style=solid];
m1_1624 -> m1_1625  [key=0, style=solid];
m1_1624 -> m1_47  [key=2, style=dotted];
m1_1620 -> m1_1624  [key=1, style=dashed, color=darkseagreen4, label=strings];
m1_1620 -> m1_120  [key=2, style=dotted];
m1_1620 -> m1_1621  [key=0, style=solid];
m1_1620 -> m1_1622  [key=1, style=dashed, color=darkseagreen4, label=strings];
m1_1620 -> m1_1623  [key=1, style=dashed, color=darkseagreen4, label=strings];
m1_1623 -> m1_1624  [key=0, style=solid];
m1_1623 -> m1_1627  [key=2, style=dotted];
m1_1621 -> m1_1627  [key=2, style=dotted];
m1_1621 -> m1_1622  [key=0, style=solid];
m1_1622 -> m1_1623  [key=0, style=solid];
m1_1622 -> m1_1627  [key=2, style=dotted];
m1_1626 -> m1_1619  [key=0, style=bold, color=blue];
m1_1628 -> m1_1629  [key=0, style=solid];
m1_1632 -> m1_12  [key=2, style=dotted];
m1_1632 -> m1_1633  [key=0, style=solid];
m1_1632 -> m1_1634  [key=1, style=dashed, color=darkseagreen4, label=c2];
m1_1633 -> m1_34  [key=2, style=dotted];
m1_1633 -> m1_1634  [key=0, style=solid];
m1_1634 -> m1_34  [key=2, style=dotted];
m1_1634 -> m1_1635  [key=0, style=solid];
m1_1630 -> m1_1632  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_1630 -> m1_1631  [key=0, style=solid];
m1_1630 -> m1_65  [key=2, style=dotted];
m1_1631 -> m1_1632  [key=0, style=solid];
m1_1631 -> m1_67  [key=2, style=dotted];
m1_1629 -> m1_1630  [key=0, style=solid];
m1_1629 -> m1_1636  [key=2, style=dotted];
m1_1635 -> m1_1628  [key=0, style=bold, color=blue];
m1_2908 -> m1_2909  [key=0, style=solid];
m1_2911 -> m1_12  [key=2, style=dotted];
m1_2911 -> m1_2912  [key=0, style=solid];
m1_2910 -> m1_34  [key=2, style=dotted];
m1_2910 -> m1_2911  [key=0, style=solid];
m1_2912 -> m1_34  [key=2, style=dotted];
m1_2912 -> m1_2913  [key=0, style=solid];
m1_2912 -> m1_2915  [key=2, style=dotted];
m1_2909 -> m1_2910  [key=0, style=solid];
m1_2909 -> m1_47  [key=2, style=dotted];
m1_2909 -> m1_2914  [key=2, style=dotted];
m1_2909 -> m1_2915  [key=2, style=dotted];
m1_2913 -> m1_2908  [key=0, style=bold, color=blue];
m1_3125 -> m1_3126  [key=0, style=solid];
m1_3127 -> m1_12  [key=2, style=dotted];
m1_3127 -> m1_3128  [key=0, style=solid];
m1_3127 -> m1_3129  [key=1, style=dashed, color=darkseagreen4, label=c2];
m1_3127 -> m1_3130  [key=1, style=dashed, color=darkseagreen4, label=c2];
m1_3127 -> m1_3131  [key=1, style=dashed, color=darkseagreen4, label=c2];
m1_3129 -> m1_34  [key=2, style=dotted];
m1_3129 -> m1_3130  [key=0, style=solid];
m1_3130 -> m1_34  [key=2, style=dotted];
m1_3130 -> m1_3131  [key=0, style=solid];
m1_3131 -> m1_34  [key=2, style=dotted];
m1_3131 -> m1_3132  [key=0, style=solid];
m1_3126 -> m1_3127  [key=0, style=solid];
m1_3126 -> m1_3133  [key=2, style=dotted];
m1_3128 -> m1_3129  [key=0, style=solid];
m1_3128 -> m1_520  [key=2, style=dotted];
m1_3132 -> m1_3125  [key=0, style=bold, color=blue];
m1_2978 -> m1_2979  [key=0, style=solid];
m1_2980 -> m1_34  [key=2, style=dotted];
m1_2980 -> m1_2981  [key=0, style=solid];
m1_2980 -> m1_2990  [key=2, style=dotted];
m1_2980 -> m1_2991  [key=2, style=dotted];
m1_2981 -> m1_34  [key=2, style=dotted];
m1_2981 -> m1_2982  [key=0, style=solid];
m1_2981 -> m1_2992  [key=2, style=dotted];
m1_2982 -> m1_34  [key=2, style=dotted];
m1_2982 -> m1_2983  [key=0, style=solid];
m1_2983 -> m1_34  [key=2, style=dotted];
m1_2983 -> m1_2984  [key=0, style=solid];
m1_2985 -> m1_34  [key=2, style=dotted];
m1_2985 -> m1_2986  [key=0, style=solid];
m1_2985 -> m1_2990  [key=2, style=dotted];
m1_2985 -> m1_2991  [key=2, style=dotted];
m1_2986 -> m1_34  [key=2, style=dotted];
m1_2986 -> m1_2987  [key=0, style=solid];
m1_2986 -> m1_2992  [key=2, style=dotted];
m1_2987 -> m1_34  [key=2, style=dotted];
m1_2987 -> m1_2988  [key=0, style=solid];
m1_2988 -> m1_34  [key=2, style=dotted];
m1_2988 -> m1_2989  [key=0, style=solid];
m1_2979 -> m1_2980  [key=0, style=solid];
m1_2979 -> m1_2981  [key=1, style=dashed, color=darkseagreen4, label=c];
m1_2979 -> m1_2982  [key=1, style=dashed, color=darkseagreen4, label=c];
m1_2979 -> m1_2983  [key=1, style=dashed, color=darkseagreen4, label=c];
m1_2979 -> m1_95  [key=2, style=dotted];
m1_2979 -> m1_96  [key=2, style=dotted];
m1_2984 -> m1_2985  [key=0, style=solid];
m1_2984 -> m1_2986  [key=1, style=dashed, color=darkseagreen4, label=c2];
m1_2984 -> m1_2987  [key=1, style=dashed, color=darkseagreen4, label=c2];
m1_2984 -> m1_2988  [key=1, style=dashed, color=darkseagreen4, label=c2];
m1_2984 -> m1_95  [key=2, style=dotted];
m1_2984 -> m1_96  [key=2, style=dotted];
m1_2989 -> m1_2978  [key=0, style=bold, color=blue];
m1_993 -> m1_994  [key=0, style=solid];
m1_996 -> m1_12  [key=2, style=dotted];
m1_996 -> m1_997  [key=0, style=solid];
m1_996 -> m1_998  [key=1, style=dashed, color=darkseagreen4, label=c];
m1_995 -> m1_34  [key=2, style=dotted];
m1_995 -> m1_996  [key=0, style=solid];
m1_997 -> m1_34  [key=2, style=dotted];
m1_997 -> m1_998  [key=0, style=solid];
m1_998 -> m1_34  [key=2, style=dotted];
m1_998 -> m1_999  [key=0, style=solid];
m1_994 -> m1_995  [key=0, style=solid];
m1_994 -> m1_47  [key=2, style=dotted];
m1_994 -> m1_1000  [key=2, style=dotted];
m1_999 -> m1_993  [key=0, style=bold, color=blue];
m1_2618 -> m1_2619  [key=0, style=solid];
m1_2619 -> m1_65  [key=2, style=dotted];
m1_2619 -> m1_2620  [key=0, style=solid];
m1_2619 -> m1_2624  [key=2, style=dotted];
m1_2621 -> m1_65  [key=2, style=dotted];
m1_2621 -> m1_2622  [key=0, style=solid];
m1_2621 -> m1_2625  [key=2, style=dotted];
m1_2620 -> m1_67  [key=2, style=dotted];
m1_2620 -> m1_2621  [key=0, style=solid];
m1_2622 -> m1_67  [key=2, style=dotted];
m1_2622 -> m1_2623  [key=0, style=solid];
m1_2623 -> m1_2618  [key=0, style=bold, color=blue];
m1_1574 -> m1_1575  [key=0, style=solid];
m1_1576 -> m1_8  [key=2, style=dotted];
m1_1576 -> m1_1577  [key=0, style=solid];
m1_1576 -> m1_1578  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_1575 -> m1_1576  [key=0, style=solid];
m1_1575 -> m1_1512  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m1_1575 -> m1_1579  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_1577 -> m1_1574  [key=0, style=bold, color=blue];
m1_3157 -> m1_3158  [key=0, style=solid];
m1_3161 -> m1_12  [key=2, style=dotted];
m1_3161 -> m1_3162  [key=0, style=solid];
m1_3161 -> m1_3163  [key=1, style=dashed, color=darkseagreen4, label=dic2];
m1_3161 -> m1_3164  [key=1, style=dashed, color=darkseagreen4, label=dic2];
m1_3162 -> m1_34  [key=2, style=dotted];
m1_3162 -> m1_3163  [key=0, style=solid];
m1_3163 -> m1_34  [key=2, style=dotted];
m1_3163 -> m1_3164  [key=0, style=solid];
m1_3163 -> m1_831  [key=2, style=dotted];
m1_3164 -> m1_34  [key=2, style=dotted];
m1_3164 -> m1_3165  [key=0, style=solid];
m1_3164 -> m1_831  [key=2, style=dotted];
m1_3159 -> m1_3161  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_3159 -> m1_3160  [key=0, style=solid];
m1_3159 -> m1_65  [key=2, style=dotted];
m1_3160 -> m1_3161  [key=0, style=solid];
m1_3160 -> m1_67  [key=2, style=dotted];
m1_3158 -> m1_3159  [key=0, style=solid];
m1_3158 -> m1_831  [key=2, style=dotted];
m1_3158 -> m1_554  [key=2, style=dotted];
m1_3165 -> m1_3157  [key=0, style=bold, color=blue];
m1_1469 -> m1_1470  [key=0, style=solid];
m1_1471 -> m1_12  [key=2, style=dotted];
m1_1471 -> m1_1472  [key=0, style=solid];
m1_1471 -> m1_1473  [key=1, style=dashed, color=darkseagreen4, label=values];
m1_1471 -> m1_1474  [key=1, style=dashed, color=darkseagreen4, label=values];
m1_1471 -> m1_1475  [key=1, style=dashed, color=darkseagreen4, label=values];
m1_1471 -> m1_1476  [key=1, style=dashed, color=darkseagreen4, label=values];
m1_1474 -> m1_34  [key=2, style=dotted];
m1_1474 -> m1_1475  [key=0, style=solid];
m1_1475 -> m1_34  [key=2, style=dotted];
m1_1475 -> m1_1476  [key=0, style=solid];
m1_1476 -> m1_34  [key=2, style=dotted];
m1_1476 -> m1_1477  [key=0, style=solid];
m1_1470 -> m1_1471  [key=0, style=solid];
m1_1470 -> m1_1470  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m1_1472 -> m1_1473  [key=0, style=solid];
m1_1472 -> m1_1478  [key=2, style=dotted];
m1_1473 -> m1_1474  [key=0, style=solid];
m1_1473 -> m1_66  [key=2, style=dotted];
m1_1477 -> m1_1469  [key=0, style=bold, color=blue];
m1_1733 -> m1_1734  [key=0, style=solid];
m1_1734 -> m1_65  [key=2, style=dotted];
m1_1734 -> m1_1735  [key=0, style=solid];
m1_1735 -> m1_1733  [key=0, style=bold, color=blue];
m1_53 -> m1_54  [key=0, style=solid];
m1_53 -> m1_58  [key=2, style=dotted];
m1_53 -> m1_55  [key=1, style=dashed, color=darkseagreen4, label=c];
m1_53 -> m1_56  [key=1, style=dashed, color=darkseagreen4, label=c];
m1_53 -> m1_48  [key=2, style=dotted];
m1_52 -> m1_57  [key=0, style=solid];
m1_52 -> m1_53  [key=0, style=solid];
m1_54 -> m1_55  [key=0, style=solid];
m1_54 -> m1_56  [key=0, style=solid];
m1_55 -> m1_57  [key=0, style=solid];
m1_55 -> m1_56  [key=0, style=solid];
m1_55 -> m1_64  [key=2, style=dotted];
m1_55 -> m1_63  [key=2, style=dotted];
m1_56 -> m1_57  [key=0, style=solid];
m1_56 -> m1_59  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_56 -> m1_65  [key=2, style=dotted];
m1_56 -> m1_58  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_57 -> m1_49  [key=0, style=bold, color=blue];
m1_57 -> m1_58  [key=0, style=solid];
m1_57 -> m1_66  [key=2, style=dotted];
m1_3650 -> m1_3651  [key=0, style=solid];
m1_3657 -> m1_34  [key=2, style=dotted];
m1_3657 -> m1_3658  [key=0, style=solid];
m1_3662 -> m1_34  [key=2, style=dotted];
m1_3662 -> m1_3663  [key=0, style=solid];
m1_3655 -> m1_34  [key=2, style=dotted];
m1_3655 -> m1_3656  [key=0, style=solid];
m1_3660 -> m1_34  [key=2, style=dotted];
m1_3660 -> m1_3661  [key=0, style=solid];
m1_3661 -> m1_34  [key=2, style=dotted];
m1_3661 -> m1_3662  [key=0, style=solid];
m1_3661 -> m1_122  [key=2, style=dotted];
m1_3665 -> m1_34  [key=2, style=dotted];
m1_3665 -> m1_3666  [key=0, style=solid];
m1_3666 -> m1_34  [key=2, style=dotted];
m1_3666 -> m1_3667  [key=0, style=solid];
m1_3666 -> m1_122  [key=2, style=dotted];
m1_3667 -> m1_34  [key=2, style=dotted];
m1_3667 -> m1_3668  [key=0, style=solid];
m1_3651 -> m1_3657  [key=1, style=dashed, color=darkseagreen4, label=dt];
m1_3651 -> m1_3662  [key=1, style=dashed, color=darkseagreen4, label=dt];
m1_3651 -> m1_683  [key=2, style=dotted];
m1_3651 -> m1_3652  [key=0, style=solid];
m1_3651 -> m1_3654  [key=1, style=dashed, color=darkseagreen4, label=dt];
m1_3656 -> m1_3657  [key=0, style=solid];
m1_3656 -> m1_96  [key=2, style=dotted];
m1_3658 -> m1_3659  [key=0, style=solid];
m1_3658 -> m1_117  [key=2, style=dotted];
m1_3658 -> m1_118  [key=2, style=dotted];
m1_3659 -> m1_3662  [key=1, style=dashed, color=darkseagreen4, label=v];
m1_3659 -> m1_3660  [key=0, style=solid];
m1_3659 -> m1_3661  [key=1, style=dashed, color=darkseagreen4, label=v];
m1_3659 -> m1_3077  [key=2, style=dotted];
m1_3663 -> m1_3664  [key=0, style=solid];
m1_3663 -> m1_117  [key=2, style=dotted];
m1_3663 -> m1_118  [key=2, style=dotted];
m1_3654 -> m1_3655  [key=0, style=solid];
m1_3654 -> m1_3656  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_3654 -> m1_3658  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_3654 -> m1_463  [key=2, style=dotted];
m1_3664 -> m1_3665  [key=0, style=solid];
m1_3664 -> m1_3666  [key=1, style=dashed, color=darkseagreen4, label=v];
m1_3664 -> m1_3667  [key=1, style=dashed, color=darkseagreen4, label=v];
m1_3664 -> m1_3077  [key=2, style=dotted];
m1_3652 -> m1_3658  [key=1, style=dashed, color=darkseagreen4, label=dateFormatString];
m1_3652 -> m1_3663  [key=1, style=dashed, color=darkseagreen4, label=dateFormatString];
m1_3652 -> m1_3652  [key=3, color=darkorchid, style=bold, label="Local variable string dateFormatString"];
m1_3652 -> m1_3653  [key=0, style=solid];
m1_3653 -> m1_3656  [key=1, style=dashed, color=darkseagreen4, label=settings];
m1_3653 -> m1_3654  [key=0, style=solid];
m1_3653 -> m1_95  [key=2, style=dotted];
m1_3668 -> m1_3650  [key=0, style=bold, color=blue];
m1_2360 -> m1_2361  [key=0, style=solid];
m1_2362 -> m1_12  [key=2, style=dotted];
m1_2362 -> m1_2363  [key=0, style=solid];
m1_2363 -> m1_34  [key=2, style=dotted];
m1_2363 -> m1_2364  [key=0, style=solid];
m1_2361 -> m1_2362  [key=0, style=solid];
m1_2361 -> m1_2361  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m1_2364 -> m1_2360  [key=0, style=bold, color=blue];
m1_1500 -> m1_1501  [key=0, style=solid];
m1_1502 -> m1_12  [key=2, style=dotted];
m1_1502 -> m1_1503  [key=0, style=solid];
m1_1501 -> m1_1502  [key=0, style=solid];
m1_1501 -> m1_1501  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m1_1503 -> m1_1500  [key=0, style=bold, color=blue];
m1_1018 -> m1_1019  [key=0, style=solid];
m1_1021 -> m1_34  [key=2, style=dotted];
m1_1021 -> m1_1022  [key=0, style=solid];
m1_1023 -> m1_34  [key=2, style=dotted];
m1_1023 -> m1_1024  [key=0, style=solid];
m1_1022 -> m1_36  [key=2, style=dotted];
m1_1022 -> m1_1023  [key=0, style=solid];
m1_1022 -> m1_1025  [key=2, style=dotted];
m1_1020 -> m1_1021  [key=0, style=solid];
m1_1020 -> m1_1022  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_1020 -> m1_1025  [key=2, style=dotted];
m1_1020 -> m1_1026  [key=2, style=dotted];
m1_1019 -> m1_1020  [key=0, style=solid];
m1_1019 -> m1_1017  [key=2, style=dotted];
m1_1024 -> m1_1018  [key=0, style=bold, color=blue];
m1_3341 -> m1_3342  [key=0, style=solid];
m1_3344 -> m1_34  [key=2, style=dotted];
m1_3344 -> m1_3345  [key=0, style=solid];
m1_3346 -> m1_34  [key=2, style=dotted];
m1_3346 -> m1_3347  [key=0, style=solid];
m1_3343 -> m1_3344  [key=0, style=solid];
m1_3343 -> m1_95  [key=2, style=dotted];
m1_3343 -> m1_3349  [key=2, style=dotted];
m1_3343 -> m1_463  [key=2, style=dotted];
m1_3343 -> m1_3345  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_3345 -> m1_3346  [key=0, style=solid];
m1_3345 -> m1_95  [key=2, style=dotted];
m1_3345 -> m1_3349  [key=2, style=dotted];
m1_3345 -> m1_96  [key=2, style=dotted];
m1_3342 -> m1_3343  [key=0, style=solid];
m1_3342 -> m1_3348  [key=2, style=dotted];
m1_3347 -> m1_3341  [key=0, style=bold, color=blue];
m1_1130 -> m1_1131  [key=0, style=solid];
m1_1134 -> m1_12  [key=2, style=dotted];
m1_1134 -> m1_1135  [key=0, style=solid];
m1_1134 -> m1_1136  [key=1, style=dashed, color=darkseagreen4, label=userNullablleDeserialized];
m1_1134 -> m1_1137  [key=1, style=dashed, color=darkseagreen4, label=userNullablleDeserialized];
m1_1134 -> m1_1138  [key=1, style=dashed, color=darkseagreen4, label=userNullablleDeserialized];
m1_1134 -> m1_1139  [key=1, style=dashed, color=darkseagreen4, label=userNullablleDeserialized];
m1_1134 -> m1_1140  [key=1, style=dashed, color=darkseagreen4, label=userNullablleDeserialized];
m1_1134 -> m1_1141  [key=1, style=dashed, color=darkseagreen4, label=userNullablleDeserialized];
m1_1133 -> m1_34  [key=2, style=dotted];
m1_1133 -> m1_1134  [key=0, style=solid];
m1_1135 -> m1_34  [key=2, style=dotted];
m1_1135 -> m1_1136  [key=0, style=solid];
m1_1135 -> m1_976  [key=2, style=dotted];
m1_1136 -> m1_34  [key=2, style=dotted];
m1_1136 -> m1_1137  [key=0, style=solid];
m1_1137 -> m1_34  [key=2, style=dotted];
m1_1137 -> m1_1138  [key=0, style=solid];
m1_1138 -> m1_34  [key=2, style=dotted];
m1_1138 -> m1_1139  [key=0, style=solid];
m1_1139 -> m1_34  [key=2, style=dotted];
m1_1139 -> m1_1140  [key=0, style=solid];
m1_1140 -> m1_34  [key=2, style=dotted];
m1_1140 -> m1_1141  [key=0, style=solid];
m1_1141 -> m1_34  [key=2, style=dotted];
m1_1141 -> m1_1142  [key=0, style=solid];
m1_1132 -> m1_1134  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_1132 -> m1_1133  [key=0, style=solid];
m1_1132 -> m1_47  [key=2, style=dotted];
m1_1131 -> m1_1132  [key=0, style=solid];
m1_1131 -> m1_976  [key=2, style=dotted];
m1_1131 -> m1_1143  [key=2, style=dotted];
m1_1142 -> m1_1130  [key=0, style=bold, color=blue];
m1_1613 -> m1_1614  [key=0, style=solid];
m1_1614 -> m1_8  [key=2, style=dotted];
m1_1614 -> m1_1615  [key=0, style=solid];
m1_1614 -> m1_1616  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_1615 -> m1_1613  [key=0, style=bold, color=blue];
m1_2637 -> m1_2638  [key=0, style=solid];
m1_2641 -> m1_12  [key=2, style=dotted];
m1_2641 -> m1_2642  [key=0, style=solid];
m1_2642 -> m1_34  [key=2, style=dotted];
m1_2642 -> m1_2643  [key=0, style=solid];
m1_2642 -> m1_2634  [key=2, style=dotted];
m1_2639 -> m1_2641  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_2639 -> m1_2640  [key=0, style=solid];
m1_2639 -> m1_65  [key=2, style=dotted];
m1_2640 -> m1_2641  [key=0, style=solid];
m1_2640 -> m1_67  [key=2, style=dotted];
m1_2638 -> m1_2639  [key=0, style=solid];
m1_2638 -> m1_2626  [key=2, style=dotted];
m1_2643 -> m1_2637  [key=0, style=bold, color=blue];
m1_3399 -> m1_3400  [key=0, style=solid];
m1_3404 -> m1_34  [key=2, style=dotted];
m1_3404 -> m1_3405  [key=0, style=solid];
m1_3401 -> m1_3404  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m1_3401 -> m1_3402  [key=0, style=solid];
m1_3401 -> m1_2710  [key=2, style=dotted];
m1_3401 -> m1_3403  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m1_3403 -> m1_3404  [key=0, style=solid];
m1_3403 -> m1_2746  [key=2, style=dotted];
m1_3405 -> m1_3406  [key=0, style=solid];
m1_3405 -> m1_2714  [key=2, style=dotted];
m1_3400 -> m1_3401  [key=0, style=solid];
m1_3400 -> m1_3405  [key=1, style=dashed, color=darkseagreen4, label=sw];
m1_3400 -> m1_2709  [key=2, style=dotted];
m1_3402 -> m1_3403  [key=0, style=solid];
m1_3402 -> m1_558  [key=2, style=dotted];
m1_3402 -> m1_95  [key=2, style=dotted];
m1_3406 -> m1_67  [key=2, style=dotted];
m1_3406 -> m1_3407  [key=0, style=solid];
m1_3407 -> m1_3399  [key=0, style=bold, color=blue];
m1_1560 -> m1_1561  [key=0, style=solid];
m1_1562 -> m1_8  [key=2, style=dotted];
m1_1562 -> m1_1563  [key=0, style=solid];
m1_1562 -> m1_1564  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_1561 -> m1_1562  [key=0, style=solid];
m1_1561 -> m1_1565  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_1561 -> m1_1561  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m1_1563 -> m1_1560  [key=0, style=bold, color=blue];
m1_471 -> m1_472  [key=0, style=solid];
m1_474 -> m1_12  [key=2, style=dotted];
m1_474 -> m1_475  [key=0, style=solid];
m1_474 -> m1_476  [key=1, style=dashed, color=darkseagreen4, label=r2];
m1_475 -> m1_34  [key=2, style=dotted];
m1_475 -> m1_476  [key=0, style=solid];
m1_475 -> m1_479  [key=2, style=dotted];
m1_476 -> m1_34  [key=2, style=dotted];
m1_476 -> m1_477  [key=0, style=solid];
m1_473 -> m1_474  [key=0, style=solid];
m1_473 -> m1_65  [key=2, style=dotted];
m1_472 -> m1_473  [key=0, style=solid];
m1_472 -> m1_478  [key=2, style=dotted];
m1_477 -> m1_471  [key=0, style=bold, color=blue];
m1_1360 -> m1_1361  [key=0, style=solid];
m1_1367 -> m1_12  [key=2, style=dotted];
m1_1367 -> m1_1368  [key=0, style=solid];
m1_1367 -> m1_1369  [key=1, style=dashed, color=darkseagreen4, label=newOptInClass];
m1_1367 -> m1_1370  [key=1, style=dashed, color=darkseagreen4, label=newOptInClass];
m1_1368 -> m1_34  [key=2, style=dotted];
m1_1368 -> m1_1369  [key=0, style=solid];
m1_1369 -> m1_34  [key=2, style=dotted];
m1_1369 -> m1_1370  [key=0, style=solid];
m1_1370 -> m1_34  [key=2, style=dotted];
m1_1370 -> m1_1371  [key=0, style=solid];
m1_1366 -> m1_1367  [key=0, style=solid];
m1_1366 -> m1_67  [key=2, style=dotted];
m1_1365 -> m1_1366  [key=0, style=solid];
m1_1365 -> m1_65  [key=2, style=dotted];
m1_1361 -> m1_1365  [key=1, style=dashed, color=darkseagreen4, label=optInClass];
m1_1361 -> m1_1362  [key=0, style=solid];
m1_1361 -> m1_1372  [key=2, style=dotted];
m1_1361 -> m1_1363  [key=1, style=dashed, color=darkseagreen4, label=optInClass];
m1_1361 -> m1_1364  [key=1, style=dashed, color=darkseagreen4, label=optInClass];
m1_1364 -> m1_1365  [key=0, style=solid];
m1_1362 -> m1_1363  [key=0, style=solid];
m1_1363 -> m1_1364  [key=0, style=solid];
m1_1371 -> m1_1360  [key=0, style=bold, color=blue];
m1_1245 -> m1_1246  [key=0, style=solid];
m1_1247 -> m1_47  [key=2, style=dotted];
m1_1247 -> m1_1248  [key=0, style=solid];
m1_1247 -> m1_1250  [key=1, style=dashed, color=darkseagreen4, label=defaultJson];
m1_1246 -> m1_831  [key=2, style=dotted];
m1_1246 -> m1_1247  [key=0, style=solid];
m1_1246 -> m1_1254  [key=2, style=dotted];
m1_1246 -> m1_1248  [key=1, style=dashed, color=darkseagreen4, label=entry];
m1_1246 -> m1_1249  [key=1, style=dashed, color=darkseagreen4, label=entry];
m1_1249 -> m1_1074  [key=2, style=dotted];
m1_1249 -> m1_1026  [key=2, style=dotted];
m1_1249 -> m1_1250  [key=0, style=solid];
m1_1249 -> m1_1252  [key=1, style=dashed, color=darkseagreen4, label=javascriptJson];
m1_1248 -> m1_878  [key=2, style=dotted];
m1_1248 -> m1_1026  [key=2, style=dotted];
m1_1248 -> m1_1249  [key=0, style=solid];
m1_1248 -> m1_1251  [key=1, style=dashed, color=darkseagreen4, label=isoJson];
m1_1250 -> m1_66  [key=2, style=dotted];
m1_1250 -> m1_1251  [key=0, style=solid];
m1_1251 -> m1_66  [key=2, style=dotted];
m1_1251 -> m1_1252  [key=0, style=solid];
m1_1252 -> m1_66  [key=2, style=dotted];
m1_1252 -> m1_1253  [key=0, style=solid];
m1_1253 -> m1_1245  [key=0, style=bold, color=blue];
m1_706 -> m1_707  [key=0, style=solid];
m1_714 -> m1_34  [key=2, style=dotted];
m1_714 -> m1_715  [key=0, style=solid];
m1_715 -> m1_34  [key=2, style=dotted];
m1_715 -> m1_716  [key=0, style=solid];
m1_717 -> m1_34  [key=2, style=dotted];
m1_717 -> m1_718  [key=0, style=solid];
m1_713 -> m1_714  [key=0, style=solid];
m1_713 -> m1_720  [key=2, style=dotted];
m1_712 -> m1_714  [key=1, style=dashed, color=darkseagreen4, label=executorObject2];
m1_712 -> m1_715  [key=1, style=dashed, color=darkseagreen4, label=executorObject2];
m1_712 -> m1_717  [key=1, style=dashed, color=darkseagreen4, label=executorObject2];
m1_712 -> m1_713  [key=0, style=solid];
m1_712 -> m1_666  [key=2, style=dotted];
m1_712 -> m1_716  [key=1, style=dashed, color=darkseagreen4, label=executorObject2];
m1_716 -> m1_717  [key=0, style=solid];
m1_716 -> m1_721  [key=2, style=dotted];
m1_711 -> m1_47  [key=2, style=dotted];
m1_711 -> m1_712  [key=0, style=solid];
m1_707 -> m1_713  [key=1, style=dashed, color=darkseagreen4, label=executorObject];
m1_707 -> m1_711  [key=1, style=dashed, color=darkseagreen4, label=executorObject];
m1_707 -> m1_708  [key=0, style=solid];
m1_707 -> m1_719  [key=2, style=dotted];
m1_707 -> m1_709  [key=1, style=dashed, color=darkseagreen4, label=executorObject];
m1_707 -> m1_710  [key=1, style=dashed, color=darkseagreen4, label=executorObject];
m1_710 -> m1_711  [key=0, style=solid];
m1_708 -> m1_709  [key=0, style=solid];
m1_709 -> m1_710  [key=0, style=solid];
m1_718 -> m1_706  [key=0, style=bold, color=blue];
m1_501 -> m1_502  [key=0, style=solid];
m1_503 -> m1_12  [key=2, style=dotted];
m1_503 -> m1_504  [key=0, style=solid];
m1_504 -> m1_34  [key=2, style=dotted];
m1_504 -> m1_505  [key=0, style=solid];
m1_502 -> m1_503  [key=0, style=solid];
m1_502 -> m1_497  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m1_505 -> m1_501  [key=0, style=bold, color=blue];
m1_3030 -> m1_3033  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m1_3030 -> m1_3031  [key=0, style=solid];
m1_3033 -> m1_2093  [key=2, style=dotted];
m1_3033 -> m1_3034  [key=0, style=solid];
m1_3033 -> m1_3035  [key=2, style=dotted];
m1_3033 -> m1_3036  [key=2, style=dotted];
m1_3033 -> m1_3037  [key=2, style=dotted];
m1_3032 -> m1_3033  [key=0, style=solid];
m1_3031 -> m1_3032  [key=0, style=solid];
m1_3034 -> m1_3030  [key=0, style=bold, color=blue];
m1_3620 -> m1_3621  [key=0, style=solid];
m1_3621 -> m1_3583  [key=2, style=dotted];
m1_3621 -> m1_3622  [key=0, style=solid];
m1_3622 -> m1_3620  [key=0, style=bold, color=blue];
m1_2277 -> m1_2278  [key=0, style=solid];
m1_2281 -> m1_12  [key=2, style=dotted];
m1_2281 -> m1_2282  [key=0, style=solid];
m1_2282 -> m1_34  [key=2, style=dotted];
m1_2282 -> m1_2282  [key=1, style=dashed, color=darkseagreen4, label=newStruct];
m1_2282 -> m1_2283  [key=0, style=solid];
m1_2279 -> m1_2281  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_2279 -> m1_2280  [key=0, style=solid];
m1_2279 -> m1_65  [key=2, style=dotted];
m1_2280 -> m1_2281  [key=0, style=solid];
m1_2280 -> m1_67  [key=2, style=dotted];
m1_2278 -> m1_2279  [key=0, style=solid];
m1_2278 -> m1_2284  [key=2, style=dotted];
m1_2283 -> m1_2277  [key=0, style=bold, color=blue];
m1_1282 -> m1_1283  [key=0, style=solid];
m1_1285 -> m1_34  [key=2, style=dotted];
m1_1285 -> m1_1286  [key=0, style=solid];
m1_1286 -> m1_34  [key=2, style=dotted];
m1_1286 -> m1_1287  [key=0, style=solid];
m1_1288 -> m1_34  [key=2, style=dotted];
m1_1288 -> m1_1289  [key=0, style=solid];
m1_1289 -> m1_34  [key=2, style=dotted];
m1_1289 -> m1_1290  [key=0, style=solid];
m1_1284 -> m1_1285  [key=0, style=solid];
m1_1284 -> m1_1286  [key=1, style=dashed, color=darkseagreen4, label=c];
m1_1284 -> m1_95  [key=2, style=dotted];
m1_1284 -> m1_96  [key=2, style=dotted];
m1_1287 -> m1_1288  [key=0, style=solid];
m1_1287 -> m1_1289  [key=1, style=dashed, color=darkseagreen4, label=c];
m1_1287 -> m1_95  [key=2, style=dotted];
m1_1287 -> m1_96  [key=2, style=dotted];
m1_1283 -> m1_1284  [key=0, style=solid];
m1_1283 -> m1_1287  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_1283 -> m1_1283  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m1_1290 -> m1_1282  [key=0, style=bold, color=blue];
m1_2494 -> m1_2495  [key=0, style=solid];
m1_2496 -> m1_89  [key=2, style=dotted];
m1_2496 -> m1_2497  [key=0, style=solid];
m1_2495 -> m1_666  [key=2, style=dotted];
m1_2495 -> m1_2496  [key=0, style=solid];
m1_2497 -> m1_2494  [key=0, style=bold, color=blue];
m1_3210 -> m1_3211  [key=0, style=solid];
m1_3212 -> m1_34  [key=2, style=dotted];
m1_3212 -> m1_3213  [key=0, style=solid];
m1_3211 -> m1_3212  [key=0, style=solid];
m1_3211 -> m1_3214  [key=2, style=dotted];
m1_3211 -> m1_65  [key=2, style=dotted];
m1_3213 -> m1_3210  [key=0, style=bold, color=blue];
m1_3410 -> m1_3411  [key=0, style=solid];
m1_3411 -> m1_8  [key=2, style=dotted];
m1_3411 -> m1_3412  [key=0, style=solid];
m1_3411 -> m1_3413  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_3412 -> m1_3410  [key=0, style=bold, color=blue];
m1_2798 -> m1_2799  [key=0, style=solid];
m1_2801 -> m1_12  [key=2, style=dotted];
m1_2801 -> m1_2802  [key=0, style=solid];
m1_2801 -> m1_2803  [key=1, style=dashed, color=darkseagreen4, label=d2];
m1_2802 -> m1_34  [key=2, style=dotted];
m1_2802 -> m1_2803  [key=0, style=solid];
m1_2803 -> m1_34  [key=2, style=dotted];
m1_2803 -> m1_2804  [key=0, style=solid];
m1_2800 -> m1_2801  [key=0, style=solid];
m1_2800 -> m1_47  [key=2, style=dotted];
m1_2799 -> m1_2802  [key=1, style=dashed, color=darkseagreen4, label=d1];
m1_2799 -> m1_2803  [key=1, style=dashed, color=darkseagreen4, label=d1];
m1_2799 -> m1_2800  [key=0, style=solid];
m1_2799 -> m1_120  [key=2, style=dotted];
m1_2804 -> m1_2798  [key=0, style=bold, color=blue];
m1_3316 -> m1_3317  [key=0, style=solid];
m1_3318 -> m1_12  [key=2, style=dotted];
m1_3318 -> m1_3319  [key=0, style=solid];
m1_3320 -> m1_34  [key=2, style=dotted];
m1_3320 -> m1_3321  [key=0, style=solid];
m1_3317 -> m1_3318  [key=0, style=solid];
m1_3317 -> m1_3317  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m1_3319 -> m1_3320  [key=0, style=solid];
m1_3321 -> m1_3316  [key=0, style=bold, color=blue];
m1_494 -> m1_495  [key=0, style=solid];
m1_498 -> m1_34  [key=2, style=dotted];
m1_498 -> m1_499  [key=0, style=solid];
m1_496 -> m1_498  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_496 -> m1_47  [key=2, style=dotted];
m1_496 -> m1_497  [key=0, style=solid];
m1_497 -> m1_498  [key=0, style=solid];
m1_497 -> m1_497  [key=3, color=darkorchid, style=bold, label="Local variable string expectedJson"];
m1_495 -> m1_496  [key=0, style=solid];
m1_495 -> m1_500  [key=2, style=dotted];
m1_499 -> m1_494  [key=0, style=bold, color=blue];
m1_2302 -> m1_2303  [key=0, style=solid];
m1_2304 -> m1_34  [key=2, style=dotted];
m1_2304 -> m1_2305  [key=0, style=solid];
m1_2309 -> m1_34  [key=2, style=dotted];
m1_2309 -> m1_2310  [key=0, style=solid];
m1_2309 -> m1_839  [key=2, style=dotted];
m1_2310 -> m1_34  [key=2, style=dotted];
m1_2310 -> m1_2311  [key=0, style=solid];
m1_2310 -> m1_683  [key=2, style=dotted];
m1_2303 -> m1_2304  [key=0, style=solid];
m1_2303 -> m1_683  [key=2, style=dotted];
m1_2303 -> m1_839  [key=2, style=dotted];
m1_2303 -> m1_2296  [key=2, style=dotted];
m1_2303 -> m1_2295  [key=2, style=dotted];
m1_2303 -> m1_95  [key=2, style=dotted];
m1_2303 -> m1_962  [key=2, style=dotted];
m1_2303 -> m1_2305  [key=1, style=dashed, color=darkseagreen4, label=serializeObject];
m1_2305 -> m1_2306  [key=0, style=solid];
m1_2305 -> m1_117  [key=2, style=dotted];
m1_2305 -> m1_118  [key=2, style=dotted];
m1_2305 -> m1_2308  [key=1, style=dashed, color=darkseagreen4, label=reader];
m1_2308 -> m1_2309  [key=0, style=solid];
m1_2308 -> m1_2310  [key=1, style=dashed, color=darkseagreen4, label=deserializeObject];
m1_2308 -> m1_2297  [key=2, style=dotted];
m1_2306 -> m1_2308  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m1_2306 -> m1_119  [key=2, style=dotted];
m1_2306 -> m1_2307  [key=0, style=solid];
m1_2307 -> m1_2308  [key=0, style=solid];
m1_2311 -> m1_2302  [key=0, style=bold, color=blue];
m1_1122 -> m1_1123  [key=0, style=solid];
m1_1124 -> m1_12  [key=2, style=dotted];
m1_1124 -> m1_1125  [key=0, style=solid];
m1_1124 -> m1_1126  [key=1, style=dashed, color=darkseagreen4, label=personRaw];
m1_1124 -> m1_1127  [key=1, style=dashed, color=darkseagreen4, label=personRaw];
m1_1125 -> m1_34  [key=2, style=dotted];
m1_1125 -> m1_1126  [key=0, style=solid];
m1_1126 -> m1_34  [key=2, style=dotted];
m1_1126 -> m1_1127  [key=0, style=solid];
m1_1126 -> m1_1129  [key=2, style=dotted];
m1_1127 -> m1_34  [key=2, style=dotted];
m1_1127 -> m1_1128  [key=0, style=solid];
m1_1123 -> m1_1124  [key=0, style=solid];
m1_1123 -> m1_1123  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m1_1128 -> m1_1122  [key=0, style=bold, color=blue];
m1_2020 -> m1_2057  [key=0, style=solid];
m1_2020 -> m1_2058  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_2020 -> m1_2059  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_2020 -> m1_2060  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_2020 -> m1_2061  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_2020 -> m1_2062  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_2020 -> m1_2063  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_2020 -> m1_2064  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_2057 -> m1_2058  [key=0, style=solid];
m1_2058 -> m1_2059  [key=0, style=solid];
m1_2059 -> m1_2060  [key=0, style=solid];
m1_2060 -> m1_2061  [key=0, style=solid];
m1_2061 -> m1_2062  [key=0, style=solid];
m1_2062 -> m1_2063  [key=0, style=solid];
m1_2063 -> m1_2064  [key=0, style=solid];
m1_2064 -> m1_2065  [key=0, style=solid];
m1_2065 -> m1_2020  [key=0, style=bold, color=blue];
m1_427 -> m1_428  [key=0, style=solid];
m1_428 -> m1_429  [key=0, style=solid];
m1_428 -> m1_430  [key=0, style=solid];
m1_430 -> m1_431  [key=0, style=solid];
m1_430 -> m1_438  [key=2, style=dotted];
m1_431 -> m1_432  [key=0, style=solid];
m1_431 -> m1_439  [key=2, style=dotted];
m1_432 -> m1_433  [key=0, style=solid];
m1_432 -> m1_440  [key=2, style=dotted];
m1_433 -> m1_434  [key=0, style=solid];
m1_433 -> m1_440  [key=2, style=dotted];
m1_434 -> m1_435  [key=0, style=solid];
m1_434 -> m1_440  [key=2, style=dotted];
m1_435 -> m1_436  [key=0, style=solid];
m1_435 -> m1_440  [key=2, style=dotted];
m1_436 -> m1_437  [key=0, style=solid];
m1_429 -> m1_437  [key=0, style=solid];
m1_437 -> m1_427  [key=0, style=bold, color=blue];
m1_2224 -> m1_2225  [key=0, style=solid];
m1_2225 -> m1_65  [key=2, style=dotted];
m1_2225 -> m1_2226  [key=0, style=solid];
m1_2226 -> m1_67  [key=2, style=dotted];
m1_2226 -> m1_2227  [key=0, style=solid];
m1_2227 -> m1_2224  [key=0, style=bold, color=blue];
m1_1001 -> m1_1002  [key=0, style=solid];
m1_1004 -> m1_12  [key=2, style=dotted];
m1_1004 -> m1_1005  [key=0, style=solid];
m1_1004 -> m1_1006  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m1_1004 -> m1_1007  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m1_1005 -> m1_34  [key=2, style=dotted];
m1_1005 -> m1_1006  [key=0, style=solid];
m1_1006 -> m1_34  [key=2, style=dotted];
m1_1006 -> m1_1007  [key=0, style=solid];
m1_1007 -> m1_34  [key=2, style=dotted];
m1_1007 -> m1_1008  [key=0, style=solid];
m1_1003 -> m1_1004  [key=0, style=solid];
m1_1003 -> m1_47  [key=2, style=dotted];
m1_1002 -> m1_1003  [key=0, style=solid];
m1_1002 -> m1_1009  [key=2, style=dotted];
m1_1008 -> m1_1001  [key=0, style=bold, color=blue];
m1_2260 -> m1_2261  [key=0, style=solid];
m1_2270 -> m1_8  [key=2, style=dotted];
m1_2270 -> m1_2271  [key=0, style=solid];
m1_2270 -> m1_2274  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_2265 -> m1_12  [key=2, style=dotted];
m1_2265 -> m1_2266  [key=0, style=solid];
m1_2265 -> m1_2267  [key=1, style=dashed, color=darkseagreen4, label=d];
m1_2265 -> m1_2268  [key=1, style=dashed, color=darkseagreen4, label=d];
m1_2265 -> m1_2269  [key=1, style=dashed, color=darkseagreen4, label=d];
m1_2266 -> m1_34  [key=2, style=dotted];
m1_2266 -> m1_2267  [key=0, style=solid];
m1_2267 -> m1_34  [key=2, style=dotted];
m1_2267 -> m1_2268  [key=0, style=solid];
m1_2268 -> m1_34  [key=2, style=dotted];
m1_2268 -> m1_2269  [key=0, style=solid];
m1_2269 -> m1_34  [key=2, style=dotted];
m1_2269 -> m1_2271  [key=0, style=solid];
m1_2261 -> m1_2270  [key=1, style=dashed, color=darkseagreen4, label=classRef];
m1_2261 -> m1_2262  [key=0, style=solid];
m1_2263 -> m1_2270  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_2263 -> m1_2265  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_2263 -> m1_2275  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_2263 -> m1_2264  [key=0, style=solid];
m1_2263 -> m1_65  [key=2, style=dotted];
m1_2264 -> m1_2270  [key=0, style=solid];
m1_2264 -> m1_2265  [key=0, style=solid];
m1_2262 -> m1_2263  [key=0, style=solid];
m1_2262 -> m1_2264  [key=1, style=dashed, color=darkseagreen4, label=s1];
m1_2262 -> m1_2272  [key=2, style=dotted];
m1_2262 -> m1_2273  [key=2, style=dotted];
m1_2271 -> m1_2260  [key=0, style=bold, color=blue];
m1_1785 -> m1_1786  [key=0, style=solid];
m1_1792 -> m1_12  [key=2, style=dotted];
m1_1792 -> m1_1793  [key=0, style=solid];
m1_1792 -> m1_1794  [key=1, style=dashed, color=darkseagreen4, label=newC1];
m1_1792 -> m1_1795  [key=1, style=dashed, color=darkseagreen4, label=newC1];
m1_1792 -> m1_1796  [key=1, style=dashed, color=darkseagreen4, label=newC1];
m1_1793 -> m1_34  [key=2, style=dotted];
m1_1793 -> m1_1794  [key=0, style=solid];
m1_1794 -> m1_34  [key=2, style=dotted];
m1_1794 -> m1_1795  [key=0, style=solid];
m1_1795 -> m1_34  [key=2, style=dotted];
m1_1795 -> m1_1796  [key=0, style=solid];
m1_1796 -> m1_34  [key=2, style=dotted];
m1_1796 -> m1_1797  [key=0, style=solid];
m1_1791 -> m1_1792  [key=0, style=solid];
m1_1791 -> m1_67  [key=2, style=dotted];
m1_1790 -> m1_1791  [key=0, style=solid];
m1_1790 -> m1_463  [key=2, style=dotted];
m1_1790 -> m1_95  [key=2, style=dotted];
m1_1786 -> m1_1790  [key=1, style=dashed, color=darkseagreen4, label=c1];
m1_1786 -> m1_1787  [key=0, style=solid];
m1_1786 -> m1_1798  [key=2, style=dotted];
m1_1786 -> m1_1788  [key=1, style=dashed, color=darkseagreen4, label=c1];
m1_1786 -> m1_1789  [key=1, style=dashed, color=darkseagreen4, label=c1];
m1_1789 -> m1_1790  [key=0, style=solid];
m1_1787 -> m1_1789  [key=1, style=dashed, color=darkseagreen4, label=c2];
m1_1787 -> m1_1788  [key=0, style=solid];
m1_1787 -> m1_1799  [key=2, style=dotted];
m1_1788 -> m1_1789  [key=0, style=solid];
m1_1797 -> m1_1785  [key=0, style=bold, color=blue];
m1_969 -> m1_970  [key=0, style=solid];
m1_973 -> m1_12  [key=2, style=dotted];
m1_973 -> m1_974  [key=0, style=solid];
m1_974 -> m1_34  [key=2, style=dotted];
m1_974 -> m1_975  [key=0, style=solid];
m1_972 -> m1_34  [key=2, style=dotted];
m1_972 -> m1_973  [key=0, style=solid];
m1_971 -> m1_973  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_971 -> m1_972  [key=0, style=solid];
m1_971 -> m1_47  [key=2, style=dotted];
m1_971 -> m1_977  [key=2, style=dotted];
m1_970 -> m1_974  [key=1, style=dashed, color=darkseagreen4, label=guid];
m1_970 -> m1_971  [key=0, style=solid];
m1_970 -> m1_976  [key=2, style=dotted];
m1_975 -> m1_969  [key=0, style=bold, color=blue];
m1_2390 -> m1_2391  [key=0, style=solid];
m1_2391 -> m1_2392  [key=0, style=solid];
m1_2392 -> m1_2390  [key=0, style=bold, color=blue];
m1_2967 -> m1_2968  [key=0, style=solid];
m1_2968 -> m1_8  [key=2, style=dotted];
m1_2968 -> m1_2969  [key=0, style=solid];
m1_2968 -> m1_2970  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_2969 -> m1_2967  [key=0, style=bold, color=blue];
m1_880 -> m1_881  [key=0, style=solid];
m1_882 -> m1_34  [key=2, style=dotted];
m1_882 -> m1_883  [key=0, style=solid];
m1_881 -> m1_882  [key=0, style=solid];
m1_881 -> m1_47  [key=2, style=dotted];
m1_881 -> m1_884  [key=2, style=dotted];
m1_883 -> m1_880  [key=0, style=bold, color=blue];
m1_2211 -> m1_2212  [key=0, style=solid];
m1_2212 -> m1_2214  [key=2, style=dotted];
m1_2212 -> m1_2213  [key=0, style=solid];
m1_2213 -> m1_2211  [key=0, style=bold, color=blue];
m1_2529 -> m1_2530  [key=0, style=solid];
m1_2531 -> m1_65  [key=2, style=dotted];
m1_2531 -> m1_2532  [key=0, style=solid];
m1_2532 -> m1_66  [key=2, style=dotted];
m1_2532 -> m1_2533  [key=0, style=solid];
m1_2530 -> m1_2531  [key=0, style=solid];
m1_2530 -> m1_2534  [key=2, style=dotted];
m1_2533 -> m1_2529  [key=0, style=bold, color=blue];
m1_2248 -> m1_2249  [key=0, style=solid];
m1_2255 -> m1_34  [key=2, style=dotted];
m1_2255 -> m1_2256  [key=0, style=solid];
m1_2256 -> m1_34  [key=2, style=dotted];
m1_2256 -> m1_2257  [key=0, style=solid];
m1_2257 -> m1_34  [key=2, style=dotted];
m1_2257 -> m1_2258  [key=0, style=solid];
m1_2254 -> m1_2255  [key=0, style=solid];
m1_2254 -> m1_2256  [key=1, style=dashed, color=darkseagreen4, label=z];
m1_2254 -> m1_2257  [key=1, style=dashed, color=darkseagreen4, label=z];
m1_2254 -> m1_2259  [key=2, style=dotted];
m1_2249 -> m1_2254  [key=1, style=dashed, color=darkseagreen4, label=serializer1];
m1_2249 -> m1_119  [key=2, style=dotted];
m1_2249 -> m1_2250  [key=0, style=solid];
m1_2249 -> m1_2251  [key=1, style=dashed, color=darkseagreen4, label=serializer1];
m1_2253 -> m1_2254  [key=0, style=solid];
m1_2253 -> m1_117  [key=2, style=dotted];
m1_2253 -> m1_118  [key=2, style=dotted];
m1_2250 -> m1_272  [key=2, style=dotted];
m1_2250 -> m1_878  [key=2, style=dotted];
m1_2250 -> m1_2251  [key=0, style=solid];
m1_2251 -> m1_2252  [key=0, style=solid];
m1_2252 -> m1_2253  [key=0, style=solid];
m1_2252 -> m1_2252  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m1_2258 -> m1_2248  [key=0, style=bold, color=blue];
m1_934 -> m1_935  [key=0, style=solid];
m1_939 -> m1_12  [key=2, style=dotted];
m1_939 -> m1_940  [key=0, style=solid];
m1_939 -> m1_941  [key=1, style=dashed, color=darkseagreen4, label=c];
m1_939 -> m1_942  [key=1, style=dashed, color=darkseagreen4, label=c];
m1_940 -> m1_34  [key=2, style=dotted];
m1_940 -> m1_941  [key=0, style=solid];
m1_941 -> m1_34  [key=2, style=dotted];
m1_941 -> m1_942  [key=0, style=solid];
m1_942 -> m1_34  [key=2, style=dotted];
m1_942 -> m1_943  [key=0, style=solid];
m1_936 -> m1_2962  [key=3, color=darkorchid, style=bold, label="Local variable string expected"];
m1_936 -> m1_937  [key=0, style=solid];
m1_935 -> m1_939  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_935 -> m1_936  [key=0, style=solid];
m1_935 -> m1_944  [key=2, style=dotted];
m1_935 -> m1_65  [key=2, style=dotted];
m1_935 -> m1_938  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_938 -> m1_939  [key=0, style=solid];
m1_938 -> m1_67  [key=2, style=dotted];
m1_937 -> m1_938  [key=0, style=solid];
m1_943 -> m1_934  [key=0, style=bold, color=blue];
m1_1424 -> m1_1425  [key=0, style=solid];
m1_1427 -> m1_12  [key=2, style=dotted];
m1_1427 -> m1_1428  [key=0, style=solid];
m1_1427 -> m1_493  [key=2, style=dotted];
m1_1427 -> m1_1429  [key=1, style=dashed, color=darkseagreen4, label=s];
m1_1427 -> m1_1430  [key=1, style=dashed, color=darkseagreen4, label=s];
m1_1427 -> m1_1431  [key=1, style=dashed, color=darkseagreen4, label=s];
m1_1429 -> m1_34  [key=2, style=dotted];
m1_1429 -> m1_1430  [key=0, style=solid];
m1_1430 -> m1_34  [key=2, style=dotted];
m1_1430 -> m1_1431  [key=0, style=solid];
m1_1431 -> m1_34  [key=2, style=dotted];
m1_1431 -> m1_1432  [key=0, style=solid];
m1_1426 -> m1_1427  [key=0, style=solid];
m1_1426 -> m1_201  [key=2, style=dotted];
m1_1428 -> m1_1429  [key=0, style=solid];
m1_1428 -> m1_520  [key=2, style=dotted];
m1_1425 -> m1_1426  [key=0, style=solid];
m1_1425 -> m1_1425  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m1_1432 -> m1_1424  [key=0, style=bold, color=blue];
m1_2780 -> m1_2781  [key=0, style=solid];
m1_2786 -> m1_12  [key=2, style=dotted];
m1_2786 -> m1_2787  [key=0, style=solid];
m1_2786 -> m1_2788  [key=1, style=dashed, color=darkseagreen4, label=c];
m1_2787 -> m1_34  [key=2, style=dotted];
m1_2787 -> m1_2788  [key=0, style=solid];
m1_2788 -> m1_34  [key=2, style=dotted];
m1_2788 -> m1_2789  [key=0, style=solid];
m1_2785 -> m1_2786  [key=0, style=solid];
m1_2785 -> m1_2785  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m1_2784 -> m1_2785  [key=0, style=solid];
m1_2782 -> m1_2784  [key=1, style=dashed, color=darkseagreen4, label=testCulture];
m1_2782 -> m1_2783  [key=0, style=solid];
m1_2782 -> m1_2790  [key=2, style=dotted];
m1_2783 -> m1_2784  [key=0, style=solid];
m1_2781 -> m1_2782  [key=0, style=solid];
m1_2789 -> m1_2780  [key=0, style=bold, color=blue];
m1_1255 -> m1_1256  [key=0, style=solid];
m1_1262 -> m1_12  [key=2, style=dotted];
m1_1262 -> m1_1263  [key=0, style=solid];
m1_1262 -> m1_1264  [key=1, style=dashed, color=darkseagreen4, label=deserializedObject];
m1_1262 -> m1_1265  [key=1, style=dashed, color=darkseagreen4, label=deserializedObject];
m1_1262 -> m1_1266  [key=1, style=dashed, color=darkseagreen4, label=deserializedObject];
m1_1264 -> m1_34  [key=2, style=dotted];
m1_1264 -> m1_1265  [key=0, style=solid];
m1_1264 -> m1_1269  [key=2, style=dotted];
m1_1265 -> m1_34  [key=2, style=dotted];
m1_1265 -> m1_1266  [key=0, style=solid];
m1_1265 -> m1_1269  [key=2, style=dotted];
m1_1266 -> m1_34  [key=2, style=dotted];
m1_1266 -> m1_1267  [key=0, style=solid];
m1_1266 -> m1_1269  [key=2, style=dotted];
m1_1261 -> m1_34  [key=2, style=dotted];
m1_1261 -> m1_1262  [key=0, style=solid];
m1_1260 -> m1_1262  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_1260 -> m1_1261  [key=0, style=solid];
m1_1260 -> m1_65  [key=2, style=dotted];
m1_1263 -> m1_1264  [key=0, style=solid];
m1_1263 -> m1_520  [key=2, style=dotted];
m1_1256 -> m1_1264  [key=1, style=dashed, color=darkseagreen4, label=o];
m1_1256 -> m1_1265  [key=1, style=dashed, color=darkseagreen4, label=o];
m1_1256 -> m1_1266  [key=1, style=dashed, color=darkseagreen4, label=o];
m1_1256 -> m1_1260  [key=1, style=dashed, color=darkseagreen4, label=o];
m1_1256 -> m1_1257  [key=0, style=solid];
m1_1256 -> m1_1268  [key=2, style=dotted];
m1_1256 -> m1_1258  [key=1, style=dashed, color=darkseagreen4, label=o];
m1_1256 -> m1_1259  [key=1, style=dashed, color=darkseagreen4, label=o];
m1_1259 -> m1_1260  [key=0, style=solid];
m1_1259 -> m1_120  [key=2, style=dotted];
m1_1257 -> m1_554  [key=2, style=dotted];
m1_1257 -> m1_1258  [key=0, style=solid];
m1_1258 -> m1_1259  [key=0, style=solid];
m1_1258 -> m1_120  [key=2, style=dotted];
m1_1267 -> m1_1255  [key=0, style=bold, color=blue];
m1_2715 -> m1_2716  [key=0, style=solid];
m1_2719 -> m1_12  [key=2, style=dotted];
m1_2719 -> m1_2720  [key=0, style=solid];
m1_2720 -> m1_34  [key=2, style=dotted];
m1_2720 -> m1_2721  [key=0, style=solid];
m1_2718 -> m1_2719  [key=0, style=solid];
m1_2718 -> m1_47  [key=2, style=dotted];
m1_2717 -> m1_2720  [key=1, style=dashed, color=darkseagreen4, label=uri];
m1_2717 -> m1_2718  [key=0, style=solid];
m1_2717 -> m1_1440  [key=2, style=dotted];
m1_2716 -> m1_2717  [key=0, style=solid];
m1_2716 -> m1_2716  [key=3, color=darkorchid, style=bold, label="Local variable string input"];
m1_2721 -> m1_2715  [key=0, style=bold, color=blue];
m1_3608 -> m1_3609  [key=0, style=solid];
m1_3609 -> m1_3610  [key=0, style=solid];
m1_3610 -> m1_3608  [key=0, style=bold, color=blue];
m1_1349 -> m1_1350  [key=0, style=solid];
m1_1351 -> m1_12  [key=2, style=dotted];
m1_1351 -> m1_1352  [key=0, style=solid];
m1_1353 -> m1_12  [key=2, style=dotted];
m1_1353 -> m1_1354  [key=0, style=solid];
m1_1353 -> m1_1355  [key=1, style=dashed, color=darkseagreen4, label=n];
m1_1353 -> m1_1356  [key=1, style=dashed, color=darkseagreen4, label=n];
m1_1353 -> m1_1357  [key=1, style=dashed, color=darkseagreen4, label=n];
m1_1353 -> m1_1358  [key=1, style=dashed, color=darkseagreen4, label=n];
m1_1352 -> m1_34  [key=2, style=dotted];
m1_1352 -> m1_1353  [key=0, style=solid];
m1_1354 -> m1_34  [key=2, style=dotted];
m1_1354 -> m1_1355  [key=0, style=solid];
m1_1354 -> m1_976  [key=2, style=dotted];
m1_1355 -> m1_34  [key=2, style=dotted];
m1_1355 -> m1_1356  [key=0, style=solid];
m1_1355 -> m1_976  [key=2, style=dotted];
m1_1356 -> m1_34  [key=2, style=dotted];
m1_1356 -> m1_1357  [key=0, style=solid];
m1_1357 -> m1_34  [key=2, style=dotted];
m1_1357 -> m1_1358  [key=0, style=solid];
m1_1358 -> m1_34  [key=2, style=dotted];
m1_1358 -> m1_1359  [key=0, style=solid];
m1_1350 -> m1_1351  [key=0, style=solid];
m1_1350 -> m1_1353  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_1350 -> m1_1350  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m1_1359 -> m1_1349  [key=0, style=bold, color=blue];
m1_3519 -> m1_3520  [key=0, style=solid];
m1_3522 -> m1_12  [key=2, style=dotted];
m1_3522 -> m1_3523  [key=0, style=solid];
m1_3522 -> m1_3524  [key=1, style=dashed, color=darkseagreen4, label=d];
m1_3521 -> m1_34  [key=2, style=dotted];
m1_3521 -> m1_3522  [key=0, style=solid];
m1_3523 -> m1_34  [key=2, style=dotted];
m1_3523 -> m1_3524  [key=0, style=solid];
m1_3523 -> m1_3526  [key=2, style=dotted];
m1_3523 -> m1_3527  [key=2, style=dotted];
m1_3524 -> m1_34  [key=2, style=dotted];
m1_3524 -> m1_3525  [key=0, style=solid];
m1_3524 -> m1_3526  [key=2, style=dotted];
m1_3524 -> m1_3527  [key=2, style=dotted];
m1_3520 -> m1_3522  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_3520 -> m1_3521  [key=0, style=solid];
m1_3520 -> m1_47  [key=2, style=dotted];
m1_3520 -> m1_554  [key=2, style=dotted];
m1_3520 -> m1_3526  [key=2, style=dotted];
m1_3525 -> m1_3519  [key=0, style=bold, color=blue];
m1_2412 -> m1_2413  [key=0, style=solid];
m1_2421 -> m1_34  [key=2, style=dotted];
m1_2421 -> m1_2422  [key=0, style=solid];
m1_2422 -> m1_34  [key=2, style=dotted];
m1_2422 -> m1_2423  [key=0, style=solid];
m1_2425 -> m1_34  [key=2, style=dotted];
m1_2425 -> m1_2426  [key=0, style=solid];
m1_2426 -> m1_34  [key=2, style=dotted];
m1_2426 -> m1_2427  [key=0, style=solid];
m1_2420 -> m1_2421  [key=0, style=solid];
m1_2420 -> m1_2422  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m1_2420 -> m1_2430  [key=2, style=dotted];
m1_2423 -> m1_47  [key=2, style=dotted];
m1_2423 -> m1_2424  [key=0, style=solid];
m1_2424 -> m1_2425  [key=0, style=solid];
m1_2424 -> m1_2426  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m1_2424 -> m1_2430  [key=2, style=dotted];
m1_2419 -> m1_47  [key=2, style=dotted];
m1_2419 -> m1_2420  [key=0, style=solid];
m1_2416 -> m1_2423  [key=1, style=dashed, color=darkseagreen4, label=barWithNull];
m1_2416 -> m1_2417  [key=0, style=solid];
m1_2416 -> m1_2428  [key=2, style=dotted];
m1_2416 -> m1_2418  [key=1, style=dashed, color=darkseagreen4, label=barWithNull];
m1_2413 -> m1_2419  [key=1, style=dashed, color=darkseagreen4, label=nullableStructPropertyClass];
m1_2413 -> m1_2414  [key=0, style=solid];
m1_2413 -> m1_2428  [key=2, style=dotted];
m1_2413 -> m1_2415  [key=1, style=dashed, color=darkseagreen4, label=nullableStructPropertyClass];
m1_2418 -> m1_2419  [key=0, style=solid];
m1_2415 -> m1_2416  [key=0, style=solid];
m1_2415 -> m1_2429  [key=2, style=dotted];
m1_2417 -> m1_2418  [key=0, style=solid];
m1_2417 -> m1_2429  [key=2, style=dotted];
m1_2414 -> m1_2415  [key=0, style=solid];
m1_2414 -> m1_2429  [key=2, style=dotted];
m1_2427 -> m1_2412  [key=0, style=bold, color=blue];
m1_1144 -> m1_1145  [key=0, style=solid];
m1_1146 -> m1_12  [key=2, style=dotted];
m1_1146 -> m1_1147  [key=0, style=solid];
m1_1147 -> m1_34  [key=2, style=dotted];
m1_1147 -> m1_1148  [key=0, style=solid];
m1_1145 -> m1_1146  [key=0, style=solid];
m1_1145 -> m1_1145  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m1_1148 -> m1_1144  [key=0, style=bold, color=blue];
m1_3785 -> m1_3786  [key=0, style=solid];
m1_3787 -> m1_12  [key=2, style=dotted];
m1_3787 -> m1_3788  [key=0, style=solid];
m1_3787 -> m1_3789  [key=1, style=dashed, color=darkseagreen4, label=d];
m1_3788 -> m1_34  [key=2, style=dotted];
m1_3788 -> m1_3789  [key=0, style=solid];
m1_3789 -> m1_34  [key=2, style=dotted];
m1_3789 -> m1_3790  [key=0, style=solid];
m1_3786 -> m1_3787  [key=0, style=solid];
m1_3786 -> m1_3786  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m1_3790 -> m1_3785  [key=0, style=bold, color=blue];
m1_2443 -> m1_2444  [key=0, style=solid];
m1_2447 -> m1_34  [key=2, style=dotted];
m1_2447 -> m1_2448  [key=0, style=solid];
m1_2446 -> m1_2447  [key=0, style=solid];
m1_2446 -> m1_95  [key=2, style=dotted];
m1_2446 -> m1_96  [key=2, style=dotted];
m1_2445 -> m1_47  [key=2, style=dotted];
m1_2445 -> m1_2446  [key=0, style=solid];
m1_2444 -> m1_2445  [key=0, style=solid];
m1_2444 -> m1_2449  [key=2, style=dotted];
m1_2448 -> m1_2443  [key=0, style=bold, color=blue];
m1_2108 -> m1_2109  [key=0, style=solid];
m1_2111 -> m1_34  [key=2, style=dotted];
m1_2111 -> m1_2112  [key=0, style=solid];
m1_2110 -> m1_2111  [key=0, style=solid];
m1_2110 -> m1_2116  [key=2, style=dotted];
m1_2110 -> m1_2117  [key=2, style=dotted];
m1_2110 -> m1_1026  [key=2, style=dotted];
m1_2109 -> m1_2110  [key=0, style=solid];
m1_2109 -> m1_2113  [key=2, style=dotted];
m1_2109 -> m1_2114  [key=2, style=dotted];
m1_2109 -> m1_2115  [key=2, style=dotted];
m1_2112 -> m1_2108  [key=0, style=bold, color=blue];
m1_2699 -> m1_2700  [key=0, style=solid];
m1_2707 -> m1_34  [key=2, style=dotted];
m1_2707 -> m1_2708  [key=0, style=solid];
m1_2706 -> m1_2707  [key=0, style=solid];
m1_2706 -> m1_2714  [key=2, style=dotted];
m1_2702 -> m1_2706  [key=1, style=dashed, color=darkseagreen4, label=sw];
m1_2702 -> m1_2703  [key=0, style=solid];
m1_2702 -> m1_2709  [key=2, style=dotted];
m1_2705 -> m1_2706  [key=0, style=solid];
m1_2705 -> m1_2713  [key=2, style=dotted];
m1_2701 -> m1_2702  [key=0, style=solid];
m1_2701 -> m1_491  [key=2, style=dotted];
m1_2701 -> m1_2704  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_2703 -> m1_2705  [key=1, style=dashed, color=darkseagreen4, label=jw];
m1_2703 -> m1_2710  [key=2, style=dotted];
m1_2703 -> m1_2704  [key=0, style=solid];
m1_2704 -> m1_2705  [key=0, style=solid];
m1_2704 -> m1_2711  [key=2, style=dotted];
m1_2704 -> m1_2712  [key=2, style=dotted];
m1_2700 -> m1_2701  [key=0, style=solid];
m1_2708 -> m1_2699  [key=0, style=bold, color=blue];
m1_1858 -> m1_1861  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m1_1858 -> m1_1859  [key=0, style=solid];
m1_1862 -> m1_1862  [key=1, style=dashed, color=darkseagreen4, label=entry];
m1_1862 -> m1_1861  [key=0, style=solid];
m1_1861 -> m1_1862  [key=0, style=solid];
m1_1861 -> m1_1863  [key=0, style=solid];
m1_1859 -> m1_1861  [key=0, style=solid];
m1_1859 -> m1_1860  [key=0, style=solid];
m1_1860 -> m1_1863  [key=0, style=solid];
m1_1863 -> m1_1858  [key=0, style=bold, color=blue];
m1_2316 -> m1_2317  [key=0, style=solid];
m1_2317 -> m1_65  [key=2, style=dotted];
m1_2317 -> m1_2318  [key=0, style=solid];
m1_2317 -> m1_2320  [key=2, style=dotted];
m1_2318 -> m1_67  [key=2, style=dotted];
m1_2318 -> m1_2319  [key=0, style=solid];
m1_2319 -> m1_2316  [key=0, style=bold, color=blue];
m1_899 -> m1_900  [key=0, style=solid];
m1_901 -> m1_12  [key=2, style=dotted];
m1_901 -> m1_902  [key=0, style=solid];
m1_901 -> m1_903  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m1_901 -> m1_904  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m1_901 -> m1_905  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m1_901 -> m1_906  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m1_901 -> m1_907  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m1_902 -> m1_34  [key=2, style=dotted];
m1_902 -> m1_903  [key=0, style=solid];
m1_903 -> m1_34  [key=2, style=dotted];
m1_903 -> m1_904  [key=0, style=solid];
m1_904 -> m1_34  [key=2, style=dotted];
m1_904 -> m1_905  [key=0, style=solid];
m1_905 -> m1_34  [key=2, style=dotted];
m1_905 -> m1_906  [key=0, style=solid];
m1_906 -> m1_34  [key=2, style=dotted];
m1_906 -> m1_907  [key=0, style=solid];
m1_907 -> m1_34  [key=2, style=dotted];
m1_907 -> m1_908  [key=0, style=solid];
m1_900 -> m1_901  [key=0, style=solid];
m1_900 -> m1_900  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m1_908 -> m1_899  [key=0, style=bold, color=blue];
m1_747 -> m1_748  [key=0, style=solid];
m1_750 -> m1_12  [key=2, style=dotted];
m1_750 -> m1_751  [key=0, style=solid];
m1_750 -> m1_752  [key=1, style=dashed, color=darkseagreen4, label=c];
m1_749 -> m1_34  [key=2, style=dotted];
m1_749 -> m1_750  [key=0, style=solid];
m1_751 -> m1_34  [key=2, style=dotted];
m1_751 -> m1_752  [key=0, style=solid];
m1_752 -> m1_34  [key=2, style=dotted];
m1_752 -> m1_753  [key=0, style=solid];
m1_748 -> m1_749  [key=0, style=solid];
m1_748 -> m1_47  [key=2, style=dotted];
m1_748 -> m1_754  [key=2, style=dotted];
m1_753 -> m1_747  [key=0, style=bold, color=blue];
m1_2228 -> m1_2229  [key=0, style=solid];
m1_2230 -> m1_34  [key=2, style=dotted];
m1_2230 -> m1_2231  [key=0, style=solid];
m1_2231 -> m1_34  [key=2, style=dotted];
m1_2231 -> m1_2232  [key=0, style=solid];
m1_2232 -> m1_34  [key=2, style=dotted];
m1_2232 -> m1_2233  [key=0, style=solid];
m1_2233 -> m1_34  [key=2, style=dotted];
m1_2233 -> m1_2234  [key=0, style=solid];
m1_2229 -> m1_2230  [key=0, style=solid];
m1_2229 -> m1_2231  [key=1, style=dashed, color=darkseagreen4, label=d];
m1_2229 -> m1_2232  [key=1, style=dashed, color=darkseagreen4, label=d];
m1_2229 -> m1_2233  [key=1, style=dashed, color=darkseagreen4, label=d];
m1_2229 -> m1_666  [key=2, style=dotted];
m1_2234 -> m1_2228  [key=0, style=bold, color=blue];
m1_528 -> m1_529  [key=0, style=solid];
m1_530 -> m1_12  [key=2, style=dotted];
m1_530 -> m1_531  [key=0, style=solid];
m1_530 -> m1_532  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m1_530 -> m1_533  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m1_530 -> m1_534  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m1_532 -> m1_34  [key=2, style=dotted];
m1_532 -> m1_533  [key=0, style=solid];
m1_534 -> m1_34  [key=2, style=dotted];
m1_534 -> m1_535  [key=0, style=solid];
m1_529 -> m1_530  [key=0, style=solid];
m1_529 -> m1_524  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m1_531 -> m1_532  [key=0, style=solid];
m1_531 -> m1_520  [key=2, style=dotted];
m1_533 -> m1_534  [key=0, style=solid];
m1_533 -> m1_520  [key=2, style=dotted];
m1_535 -> m1_528  [key=0, style=bold, color=blue];
m1_800 -> m1_801  [key=0, style=solid];
m1_806 -> m1_12  [key=2, style=dotted];
m1_806 -> m1_807  [key=0, style=solid];
m1_806 -> m1_808  [key=1, style=dashed, color=darkseagreen4, label=jsonNetResult];
m1_806 -> m1_809  [key=1, style=dashed, color=darkseagreen4, label=jsonNetResult];
m1_809 -> m1_34  [key=2, style=dotted];
m1_809 -> m1_810  [key=0, style=solid];
m1_808 -> m1_34  [key=2, style=dotted];
m1_808 -> m1_809  [key=0, style=solid];
m1_807 -> m1_34  [key=2, style=dotted];
m1_807 -> m1_808  [key=0, style=solid];
m1_801 -> m1_806  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_801 -> m1_801  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m1_801 -> m1_802  [key=0, style=solid];
m1_801 -> m1_803  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_801 -> m1_805  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_805 -> m1_806  [key=0, style=solid];
m1_805 -> m1_808  [key=1, style=dashed, color=darkseagreen4, label=dataContractResult];
m1_805 -> m1_797  [key=2, style=dotted];
m1_805 -> m1_798  [key=2, style=dotted];
m1_805 -> m1_799  [key=2, style=dotted];
m1_803 -> m1_809  [key=1, style=dashed, color=darkseagreen4, label=javaScriptSerializerResult];
m1_803 -> m1_804  [key=0, style=solid];
m1_803 -> m1_812  [key=2, style=dotted];
m1_802 -> m1_803  [key=0, style=solid];
m1_802 -> m1_811  [key=2, style=dotted];
m1_804 -> m1_805  [key=0, style=solid];
m1_804 -> m1_644  [key=2, style=dotted];
m1_810 -> m1_800  [key=0, style=bold, color=blue];
m1_3614 -> m1_3615  [key=0, style=solid];
m1_3615 -> m1_3583  [key=2, style=dotted];
m1_3615 -> m1_3616  [key=0, style=solid];
m1_3616 -> m1_3614  [key=0, style=bold, color=blue];
m1_782 -> m1_783  [key=0, style=solid];
m1_783 -> m1_8  [key=2, style=dotted];
m1_783 -> m1_784  [key=0, style=solid];
m1_783 -> m1_785  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_784 -> m1_782  [key=0, style=bold, color=blue];
m1_3038 -> m1_3039  [key=0, style=solid];
m1_3039 -> m1_727  [key=2, style=dotted];
m1_3039 -> m1_3040  [key=0, style=solid];
m1_3039 -> m1_3041  [key=2, style=dotted];
m1_3040 -> m1_3038  [key=0, style=bold, color=blue];
m1_597 -> m1_598  [key=0, style=solid];
m1_603 -> m1_65  [key=2, style=dotted];
m1_603 -> m1_604  [key=0, style=solid];
m1_603 -> m1_605  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_605 -> m1_67  [key=2, style=dotted];
m1_605 -> m1_606  [key=0, style=solid];
m1_604 -> m1_66  [key=2, style=dotted];
m1_604 -> m1_605  [key=0, style=solid];
m1_598 -> m1_603  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m1_598 -> m1_599  [key=0, style=solid];
m1_598 -> m1_607  [key=2, style=dotted];
m1_598 -> m1_600  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m1_598 -> m1_601  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m1_598 -> m1_602  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m1_602 -> m1_603  [key=0, style=solid];
m1_599 -> m1_600  [key=0, style=solid];
m1_600 -> m1_601  [key=0, style=solid];
m1_601 -> m1_602  [key=0, style=solid];
m1_606 -> m1_597  [key=0, style=bold, color=blue];
m1_3725 -> m1_3726  [key=0, style=solid];
m1_3732 -> m1_34  [key=2, style=dotted];
m1_3732 -> m1_3733  [key=0, style=solid];
m1_3737 -> m1_34  [key=2, style=dotted];
m1_3737 -> m1_3738  [key=0, style=solid];
m1_3730 -> m1_34  [key=2, style=dotted];
m1_3730 -> m1_3731  [key=0, style=solid];
m1_3735 -> m1_34  [key=2, style=dotted];
m1_3735 -> m1_3736  [key=0, style=solid];
m1_3736 -> m1_34  [key=2, style=dotted];
m1_3736 -> m1_3737  [key=0, style=solid];
m1_3736 -> m1_122  [key=2, style=dotted];
m1_3726 -> m1_3732  [key=1, style=dashed, color=darkseagreen4, label=dt];
m1_3726 -> m1_3737  [key=1, style=dashed, color=darkseagreen4, label=dt];
m1_3726 -> m1_683  [key=2, style=dotted];
m1_3726 -> m1_3727  [key=0, style=solid];
m1_3726 -> m1_838  [key=2, style=dotted];
m1_3726 -> m1_3729  [key=1, style=dashed, color=darkseagreen4, label=dt];
m1_3731 -> m1_3732  [key=0, style=solid];
m1_3731 -> m1_96  [key=2, style=dotted];
m1_3733 -> m1_3734  [key=0, style=solid];
m1_3733 -> m1_117  [key=2, style=dotted];
m1_3733 -> m1_118  [key=2, style=dotted];
m1_3734 -> m1_3737  [key=1, style=dashed, color=darkseagreen4, label=v];
m1_3734 -> m1_3735  [key=0, style=solid];
m1_3734 -> m1_3736  [key=1, style=dashed, color=darkseagreen4, label=v];
m1_3734 -> m1_3077  [key=2, style=dotted];
m1_3729 -> m1_3730  [key=0, style=solid];
m1_3729 -> m1_3731  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_3729 -> m1_3733  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_3729 -> m1_463  [key=2, style=dotted];
m1_3727 -> m1_3733  [key=1, style=dashed, color=darkseagreen4, label=dateFormatString];
m1_3727 -> m1_3652  [key=3, color=darkorchid, style=bold, label="Local variable string dateFormatString"];
m1_3727 -> m1_3728  [key=0, style=solid];
m1_3728 -> m1_3731  [key=1, style=dashed, color=darkseagreen4, label=settings];
m1_3728 -> m1_3729  [key=0, style=solid];
m1_3728 -> m1_95  [key=2, style=dotted];
m1_3738 -> m1_3725  [key=0, style=bold, color=blue];
m1_3433 -> m1_3434  [key=0, style=solid];
m1_3433 -> m1_3435  [key=1, style=dashed, color=darkseagreen4, label=TSecond];
m1_3434 -> m1_3435  [key=0, style=solid];
m1_3435 -> m1_3436  [key=0, style=solid];
m1_3436 -> m1_3433  [key=0, style=bold, color=blue];
m1_3834 -> m1_3836  [key=3, color=darkorchid, style=bold, label="method methodReturn object ReadJson"];
m1_3834 -> m1_3835  [key=0, style=solid];
m1_3836 -> m1_797  [key=2, style=dotted];
m1_3836 -> m1_3837  [key=0, style=solid];
m1_3836 -> m1_3839  [key=2, style=dotted];
m1_3836 -> m1_3840  [key=2, style=dotted];
m1_3835 -> m1_2297  [key=2, style=dotted];
m1_3835 -> m1_3836  [key=0, style=solid];
m1_3837 -> m1_3838  [key=0, style=solid];
m1_3838 -> m1_3834  [key=0, style=bold, color=blue];
m1_2687 -> m1_2688  [key=0, style=solid];
m1_2691 -> m1_12  [key=2, style=dotted];
m1_2691 -> m1_2692  [key=0, style=solid];
m1_2691 -> m1_2693  [key=1, style=dashed, color=darkseagreen4, label=c2];
m1_2691 -> m1_2694  [key=1, style=dashed, color=darkseagreen4, label=c2];
m1_2691 -> m1_2695  [key=1, style=dashed, color=darkseagreen4, label=c2];
m1_2691 -> m1_2696  [key=1, style=dashed, color=darkseagreen4, label=c2];
m1_2692 -> m1_34  [key=2, style=dotted];
m1_2692 -> m1_2693  [key=0, style=solid];
m1_2693 -> m1_34  [key=2, style=dotted];
m1_2693 -> m1_2694  [key=0, style=solid];
m1_2694 -> m1_34  [key=2, style=dotted];
m1_2694 -> m1_2695  [key=0, style=solid];
m1_2695 -> m1_34  [key=2, style=dotted];
m1_2695 -> m1_2696  [key=0, style=solid];
m1_2696 -> m1_34  [key=2, style=dotted];
m1_2696 -> m1_2697  [key=0, style=solid];
m1_2689 -> m1_2691  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_2689 -> m1_2690  [key=0, style=solid];
m1_2689 -> m1_65  [key=2, style=dotted];
m1_2690 -> m1_2691  [key=0, style=solid];
m1_2690 -> m1_67  [key=2, style=dotted];
m1_2688 -> m1_2692  [key=1, style=dashed, color=darkseagreen4, label=c1];
m1_2688 -> m1_2693  [key=1, style=dashed, color=darkseagreen4, label=c1];
m1_2688 -> m1_2694  [key=1, style=dashed, color=darkseagreen4, label=c1];
m1_2688 -> m1_2695  [key=1, style=dashed, color=darkseagreen4, label=c1];
m1_2688 -> m1_2696  [key=1, style=dashed, color=darkseagreen4, label=c1];
m1_2688 -> m1_2689  [key=0, style=solid];
m1_2688 -> m1_976  [key=2, style=dotted];
m1_2688 -> m1_839  [key=2, style=dotted];
m1_2688 -> m1_2686  [key=2, style=dotted];
m1_2688 -> m1_2698  [key=2, style=dotted];
m1_2688 -> m1_1440  [key=2, style=dotted];
m1_2697 -> m1_2687  [key=0, style=bold, color=blue];
m1_2568 -> m1_2569  [key=0, style=solid];
m1_2574 -> m1_12  [key=2, style=dotted];
m1_2574 -> m1_2575  [key=0, style=solid];
m1_2574 -> m1_2576  [key=1, style=dashed, color=darkseagreen4, label=c2];
m1_2574 -> m1_2577  [key=1, style=dashed, color=darkseagreen4, label=c2];
m1_2574 -> m1_2578  [key=1, style=dashed, color=darkseagreen4, label=c2];
m1_2575 -> m1_34  [key=2, style=dotted];
m1_2575 -> m1_2576  [key=0, style=solid];
m1_2576 -> m1_34  [key=2, style=dotted];
m1_2576 -> m1_2577  [key=0, style=solid];
m1_2577 -> m1_34  [key=2, style=dotted];
m1_2577 -> m1_2578  [key=0, style=solid];
m1_2578 -> m1_34  [key=2, style=dotted];
m1_2578 -> m1_2579  [key=0, style=solid];
m1_2572 -> m1_2574  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_2572 -> m1_2573  [key=0, style=solid];
m1_2572 -> m1_65  [key=2, style=dotted];
m1_2573 -> m1_2574  [key=0, style=solid];
m1_2573 -> m1_67  [key=2, style=dotted];
m1_2569 -> m1_2575  [key=1, style=dashed, color=darkseagreen4, label=c1];
m1_2569 -> m1_2576  [key=1, style=dashed, color=darkseagreen4, label=c1];
m1_2569 -> m1_2572  [key=1, style=dashed, color=darkseagreen4, label=c1];
m1_2569 -> m1_2570  [key=0, style=solid];
m1_2569 -> m1_2564  [key=2, style=dotted];
m1_2569 -> m1_2571  [key=1, style=dashed, color=darkseagreen4, label=c1];
m1_2571 -> m1_2572  [key=0, style=solid];
m1_2571 -> m1_64  [key=2, style=dotted];
m1_2570 -> m1_64  [key=2, style=dotted];
m1_2570 -> m1_2571  [key=0, style=solid];
m1_2579 -> m1_2568  [key=0, style=bold, color=blue];
m1_1491 -> m1_1492  [key=0, style=solid];
m1_1493 -> m1_12  [key=2, style=dotted];
m1_1493 -> m1_1494  [key=0, style=solid];
m1_1495 -> m1_34  [key=2, style=dotted];
m1_1495 -> m1_1496  [key=0, style=solid];
m1_1496 -> m1_34  [key=2, style=dotted];
m1_1496 -> m1_1497  [key=0, style=solid];
m1_1497 -> m1_34  [key=2, style=dotted];
m1_1497 -> m1_1498  [key=0, style=solid];
m1_1492 -> m1_1493  [key=0, style=solid];
m1_1492 -> m1_1492  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m1_1494 -> m1_1495  [key=0, style=solid];
m1_1494 -> m1_1496  [key=1, style=dashed, color=darkseagreen4, label=a];
m1_1494 -> m1_1497  [key=1, style=dashed, color=darkseagreen4, label=a];
m1_1494 -> m1_1499  [key=2, style=dotted];
m1_1498 -> m1_1491  [key=0, style=bold, color=blue];
m1_1392 -> m1_1393  [key=0, style=solid];
m1_1395 -> m1_34  [key=2, style=dotted];
m1_1395 -> m1_1396  [key=0, style=solid];
m1_1396 -> m1_34  [key=2, style=dotted];
m1_1396 -> m1_1397  [key=0, style=solid];
m1_1397 -> m1_34  [key=2, style=dotted];
m1_1397 -> m1_1398  [key=0, style=solid];
m1_1394 -> m1_1395  [key=0, style=solid];
m1_1394 -> m1_1396  [key=1, style=dashed, color=darkseagreen4, label=c];
m1_1394 -> m1_1397  [key=1, style=dashed, color=darkseagreen4, label=c];
m1_1394 -> m1_95  [key=2, style=dotted];
m1_1394 -> m1_96  [key=2, style=dotted];
m1_1393 -> m1_1394  [key=0, style=solid];
m1_1393 -> m1_1393  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m1_1398 -> m1_1392  [key=0, style=bold, color=blue];
m1_3510 -> m1_3511  [key=0, style=solid];
m1_3511 -> m1_976  [key=2, style=dotted];
m1_3511 -> m1_3512  [key=0, style=solid];
m1_3511 -> m1_462  [key=2, style=dotted];
m1_3511 -> m1_3513  [key=1, style=dashed, color=darkseagreen4, label=john];
m1_3511 -> m1_3514  [key=1, style=dashed, color=darkseagreen4, label=john];
m1_3511 -> m1_3515  [key=1, style=dashed, color=darkseagreen4, label=john];
m1_3512 -> m1_976  [key=2, style=dotted];
m1_3512 -> m1_3513  [key=0, style=solid];
m1_3512 -> m1_462  [key=2, style=dotted];
m1_3512 -> m1_3514  [key=1, style=dashed, color=darkseagreen4, label=jane];
m1_3512 -> m1_3515  [key=1, style=dashed, color=darkseagreen4, label=jane];
m1_3517 -> m1_67  [key=2, style=dotted];
m1_3517 -> m1_3518  [key=0, style=solid];
m1_3516 -> m1_463  [key=2, style=dotted];
m1_3516 -> m1_95  [key=2, style=dotted];
m1_3516 -> m1_275  [key=2, style=dotted];
m1_3516 -> m1_3517  [key=0, style=solid];
m1_3515 -> m1_120  [key=2, style=dotted];
m1_3515 -> m1_3516  [key=0, style=solid];
m1_3513 -> m1_3514  [key=0, style=solid];
m1_3514 -> m1_3515  [key=0, style=solid];
m1_3518 -> m1_3510  [key=0, style=bold, color=blue];
m1_1804 -> m1_1805  [key=0, style=solid];
m1_1806 -> m1_12  [key=2, style=dotted];
m1_1806 -> m1_1807  [key=0, style=solid];
m1_1807 -> m1_34  [key=2, style=dotted];
m1_1807 -> m1_1808  [key=0, style=solid];
m1_1805 -> m1_1806  [key=0, style=solid];
m1_1805 -> m1_1805  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m1_1808 -> m1_1804  [key=0, style=bold, color=blue];
m1_1582 -> m1_1583  [key=0, style=solid];
m1_1584 -> m1_8  [key=2, style=dotted];
m1_1584 -> m1_1585  [key=0, style=solid];
m1_1584 -> m1_1586  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_1583 -> m1_1584  [key=0, style=solid];
m1_1583 -> m1_2451  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m1_1583 -> m1_1587  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_1585 -> m1_1582  [key=0, style=bold, color=blue];
m1_3791 -> m1_3792  [key=0, style=solid];
m1_3794 -> m1_12  [key=2, style=dotted];
m1_3794 -> m1_3795  [key=0, style=solid];
m1_3795 -> m1_34  [key=2, style=dotted];
m1_3795 -> m1_3796  [key=0, style=solid];
m1_3793 -> m1_3794  [key=0, style=solid];
m1_3793 -> m1_47  [key=2, style=dotted];
m1_3792 -> m1_3793  [key=0, style=solid];
m1_3792 -> m1_3797  [key=2, style=dotted];
m1_3796 -> m1_3791  [key=0, style=bold, color=blue];
m1_3584 -> m1_3585  [key=0, style=solid];
m1_3585 -> m1_3583  [key=2, style=dotted];
m1_3585 -> m1_3586  [key=0, style=solid];
m1_3586 -> m1_3584  [key=0, style=bold, color=blue];
m1_1809 -> m1_1810  [key=0, style=solid];
m1_1812 -> m1_976  [key=2, style=dotted];
m1_1812 -> m1_1813  [key=0, style=solid];
m1_1810 -> m1_1812  [key=1, style=dashed, color=darkseagreen4, label=c];
m1_1810 -> m1_1811  [key=0, style=solid];
m1_1810 -> m1_1820  [key=2, style=dotted];
m1_1810 -> m1_1813  [key=1, style=dashed, color=darkseagreen4, label=c];
m1_1810 -> m1_1816  [key=1, style=dashed, color=darkseagreen4, label=c];
m1_1811 -> m1_1812  [key=0, style=solid];
m1_1811 -> m1_1821  [key=2, style=dotted];
m1_1813 -> m1_1814  [key=0, style=solid];
m1_1813 -> m1_1822  [key=2, style=dotted];
m1_1814 -> m1_559  [key=2, style=dotted];
m1_1814 -> m1_1815  [key=0, style=solid];
m1_1814 -> m1_1816  [key=1, style=dashed, color=darkseagreen4, label=ms];
m1_1814 -> m1_1817  [key=1, style=dashed, color=darkseagreen4, label=ms];
m1_1815 -> m1_644  [key=2, style=dotted];
m1_1815 -> m1_1816  [key=0, style=solid];
m1_1818 -> m1_647  [key=2, style=dotted];
m1_1818 -> m1_1819  [key=0, style=solid];
m1_1816 -> m1_645  [key=2, style=dotted];
m1_1816 -> m1_1817  [key=0, style=solid];
m1_1817 -> m1_646  [key=2, style=dotted];
m1_1817 -> m1_1818  [key=0, style=solid];
m1_1819 -> m1_1809  [key=0, style=bold, color=blue];
m1_3483 -> m1_3484  [key=0, style=solid];
m1_3488 -> m1_34  [key=2, style=dotted];
m1_3488 -> m1_3489  [key=0, style=solid];
m1_3487 -> m1_3488  [key=0, style=solid];
m1_3487 -> m1_2297  [key=2, style=dotted];
m1_3484 -> m1_3487  [key=1, style=dashed, color=darkseagreen4, label=reader];
m1_3484 -> m1_117  [key=2, style=dotted];
m1_3484 -> m1_118  [key=2, style=dotted];
m1_3484 -> m1_3485  [key=0, style=solid];
m1_3486 -> m1_3487  [key=0, style=solid];
m1_3486 -> m1_558  [key=2, style=dotted];
m1_3485 -> m1_95  [key=2, style=dotted];
m1_3485 -> m1_3486  [key=0, style=solid];
m1_3489 -> m1_3483  [key=0, style=bold, color=blue];
m1_722 -> m1_723  [key=0, style=solid];
m1_725 -> m1_34  [key=2, style=dotted];
m1_725 -> m1_726  [key=0, style=solid];
m1_725 -> m1_727  [key=2, style=dotted];
m1_724 -> m1_725  [key=0, style=solid];
m1_724 -> m1_666  [key=2, style=dotted];
m1_723 -> m1_724  [key=0, style=solid];
m1_723 -> m1_685  [key=3, color=darkorchid, style=bold, label="Local variable string value"];
m1_726 -> m1_722  [key=0, style=bold, color=blue];
m1_1664 -> m1_1665  [key=0, style=solid];
m1_1666 -> m1_976  [key=2, style=dotted];
m1_1666 -> m1_1667  [key=0, style=solid];
m1_1666 -> m1_557  [key=2, style=dotted];
m1_1667 -> m1_976  [key=2, style=dotted];
m1_1667 -> m1_1668  [key=0, style=solid];
m1_1667 -> m1_557  [key=2, style=dotted];
m1_1668 -> m1_65  [key=2, style=dotted];
m1_1668 -> m1_1669  [key=0, style=solid];
m1_1669 -> m1_67  [key=2, style=dotted];
m1_1669 -> m1_1670  [key=0, style=solid];
m1_1665 -> m1_554  [key=2, style=dotted];
m1_1665 -> m1_1666  [key=0, style=solid];
m1_1665 -> m1_1667  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m1_1665 -> m1_1668  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m1_1670 -> m1_1664  [key=0, style=bold, color=blue];
m1_2348 -> m1_2349  [key=0, style=solid];
m1_2349 -> m1_12  [key=2, style=dotted];
m1_2349 -> m1_2350  [key=0, style=solid];
m1_2350 -> m1_34  [key=2, style=dotted];
m1_2350 -> m1_2351  [key=0, style=solid];
m1_2351 -> m1_2348  [key=0, style=bold, color=blue];
m1_3689 -> m1_3690  [key=0, style=solid];
m1_3696 -> m1_34  [key=2, style=dotted];
m1_3696 -> m1_3697  [key=0, style=solid];
m1_3696 -> m1_1413  [key=2, style=dotted];
m1_3690 -> m1_3696  [key=1, style=dashed, color=darkseagreen4, label=dt];
m1_3690 -> m1_683  [key=2, style=dotted];
m1_3690 -> m1_3691  [key=0, style=solid];
m1_3690 -> m1_3693  [key=1, style=dashed, color=darkseagreen4, label=dt];
m1_3695 -> m1_3696  [key=0, style=solid];
m1_3695 -> m1_96  [key=2, style=dotted];
m1_3691 -> m1_3652  [key=3, color=darkorchid, style=bold, label="Local variable string dateFormatString"];
m1_3691 -> m1_3692  [key=0, style=solid];
m1_3693 -> m1_3695  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_3693 -> m1_463  [key=2, style=dotted];
m1_3693 -> m1_554  [key=2, style=dotted];
m1_3693 -> m1_3694  [key=0, style=solid];
m1_3692 -> m1_3695  [key=1, style=dashed, color=darkseagreen4, label=settings];
m1_3692 -> m1_95  [key=2, style=dotted];
m1_3692 -> m1_3693  [key=0, style=solid];
m1_3694 -> m1_3695  [key=0, style=solid];
m1_3694 -> m1_67  [key=2, style=dotted];
m1_3697 -> m1_3689  [key=0, style=bold, color=blue];
m1_159 -> m1_160  [key=0, style=solid];
m1_2235 -> m1_2236  [key=0, style=solid];
m1_2238 -> m1_12  [key=2, style=dotted];
m1_2238 -> m1_2239  [key=0, style=solid];
m1_2238 -> m1_2240  [key=1, style=dashed, color=darkseagreen4, label=d];
m1_2238 -> m1_2241  [key=1, style=dashed, color=darkseagreen4, label=d];
m1_2238 -> m1_2242  [key=1, style=dashed, color=darkseagreen4, label=d];
m1_2239 -> m1_34  [key=2, style=dotted];
m1_2239 -> m1_2240  [key=0, style=solid];
m1_2236 -> m1_2238  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m1_2236 -> m1_2237  [key=0, style=solid];
m1_2236 -> m1_51  [key=2, style=dotted];
m1_2236 -> m1_65  [key=2, style=dotted];
m1_2237 -> m1_2238  [key=0, style=solid];
m1_2237 -> m1_67  [key=2, style=dotted];
m1_2240 -> m1_2241  [key=0, style=solid];
m1_2240 -> m1_2244  [key=2, style=dotted];
m1_2240 -> m1_203  [key=2, style=dotted];
m1_2241 -> m1_2242  [key=0, style=solid];
m1_2241 -> m1_2244  [key=2, style=dotted];
m1_2241 -> m1_203  [key=2, style=dotted];
m1_2242 -> m1_2243  [key=0, style=solid];
m1_2242 -> m1_2244  [key=2, style=dotted];
m1_2242 -> m1_203  [key=2, style=dotted];
m1_2243 -> m1_2235  [key=0, style=bold, color=blue];
m1_1433 -> m1_1434  [key=0, style=solid];
m1_1437 -> m1_12  [key=2, style=dotted];
m1_1437 -> m1_1438  [key=0, style=solid];
m1_1436 -> m1_34  [key=2, style=dotted];
m1_1436 -> m1_1437  [key=0, style=solid];
m1_1436 -> m1_1441  [key=2, style=dotted];
m1_1438 -> m1_34  [key=2, style=dotted];
m1_1438 -> m1_1439  [key=0, style=solid];
m1_1435 -> m1_1437  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_1435 -> m1_1436  [key=0, style=solid];
m1_1435 -> m1_47  [key=2, style=dotted];
m1_1434 -> m1_1436  [key=1, style=dashed, color=darkseagreen4, label=uri];
m1_1434 -> m1_1438  [key=1, style=dashed, color=darkseagreen4, label=uri];
m1_1434 -> m1_1435  [key=0, style=solid];
m1_1434 -> m1_1440  [key=2, style=dotted];
m1_1439 -> m1_1433  [key=0, style=bold, color=blue];
m1_2147 -> m1_2148  [key=0, style=solid];
m1_2156 -> m1_8  [key=2, style=dotted];
m1_2156 -> m1_2157  [key=0, style=solid];
m1_2156 -> m1_2158  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_2155 -> m1_2156  [key=0, style=solid];
m1_2155 -> m1_2159  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_2155 -> m1_65  [key=2, style=dotted];
m1_2154 -> m1_2155  [key=0, style=solid];
m1_2154 -> m1_557  [key=2, style=dotted];
m1_2151 -> m1_2155  [key=1, style=dashed, color=darkseagreen4, label=child];
m1_2151 -> m1_2154  [key=1, style=dashed, color=darkseagreen4, label=child];
m1_2151 -> m1_2152  [key=0, style=solid];
m1_2151 -> m1_554  [key=2, style=dotted];
m1_2151 -> m1_2153  [key=1, style=dashed, color=darkseagreen4, label=child];
m1_2148 -> m1_2154  [key=1, style=dashed, color=darkseagreen4, label=reference];
m1_2148 -> m1_554  [key=2, style=dotted];
m1_2148 -> m1_2149  [key=0, style=solid];
m1_2148 -> m1_2150  [key=1, style=dashed, color=darkseagreen4, label=reference];
m1_2153 -> m1_2154  [key=0, style=solid];
m1_2153 -> m1_557  [key=2, style=dotted];
m1_2150 -> m1_2151  [key=0, style=solid];
m1_2150 -> m1_557  [key=2, style=dotted];
m1_2152 -> m1_2153  [key=0, style=solid];
m1_2152 -> m1_557  [key=2, style=dotted];
m1_2149 -> m1_557  [key=2, style=dotted];
m1_2149 -> m1_2150  [key=0, style=solid];
m1_2157 -> m1_2147  [key=0, style=bold, color=blue];
m1_3134 -> m1_3135  [key=0, style=solid];
m1_3137 -> m1_34  [key=2, style=dotted];
m1_3137 -> m1_3138  [key=0, style=solid];
m1_3136 -> m1_3137  [key=0, style=solid];
m1_3136 -> m1_47  [key=2, style=dotted];
m1_3135 -> m1_3136  [key=0, style=solid];
m1_3135 -> m1_3133  [key=2, style=dotted];
m1_3138 -> m1_3134  [key=0, style=bold, color=blue];
m1_2823 -> m1_2824  [key=0, style=solid];
m1_2825 -> m1_8  [key=2, style=dotted];
m1_2825 -> m1_2826  [key=0, style=solid];
m1_2825 -> m1_2827  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_2824 -> m1_2825  [key=0, style=solid];
m1_2824 -> m1_2828  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_2824 -> m1_2824  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m1_2826 -> m1_2823  [key=0, style=bold, color=blue];
m1_3590 -> m1_3591  [key=0, style=solid];
m1_3591 -> m1_3583  [key=2, style=dotted];
m1_3591 -> m1_3592  [key=0, style=solid];
m1_3592 -> m1_3590  [key=0, style=bold, color=blue];
m1_3474 -> m1_3475  [key=0, style=solid];
m1_3477 -> m1_12  [key=2, style=dotted];
m1_3477 -> m1_3478  [key=0, style=solid];
m1_3477 -> m1_3480  [key=1, style=dashed, color=darkseagreen4, label=s2];
m1_3478 -> m1_34  [key=2, style=dotted];
m1_3478 -> m1_3479  [key=0, style=solid];
m1_3476 -> m1_3477  [key=0, style=solid];
m1_3476 -> m1_47  [key=2, style=dotted];
m1_3480 -> m1_3479  [key=0, style=solid];
m1_3480 -> m1_1845  [key=2, style=dotted];
m1_3480 -> m1_203  [key=2, style=dotted];
m1_3475 -> m1_3478  [key=1, style=dashed, color=darkseagreen4, label=s1];
m1_3475 -> m1_3476  [key=0, style=solid];
m1_3475 -> m1_3482  [key=2, style=dotted];
m1_3475 -> m1_3479  [key=1, style=dashed, color=darkseagreen4, label=s1];
m1_3479 -> m1_3480  [key=0, style=solid];
m1_3479 -> m1_3481  [key=0, style=solid];
m1_3481 -> m1_3474  [key=0, style=bold, color=blue];
m1_755 -> m1_756  [key=0, style=solid];
m1_757 -> m1_199  [key=2, style=dotted];
m1_757 -> m1_758  [key=0, style=solid];
m1_756 -> m1_757  [key=0, style=solid];
m1_756 -> m1_756  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m1_758 -> m1_758  [key=3, color=darkorchid, style=bold, label="Local variable string s"];
m1_758 -> m1_759  [key=0, style=solid];
m1_759 -> m1_759  [key=1, style=dashed, color=darkseagreen4, label=s];
m1_759 -> m1_760  [key=0, style=solid];
m1_760 -> m1_755  [key=0, style=bold, color=blue];
m1_3611 -> m1_3612  [key=0, style=solid];
m1_3612 -> m1_3583  [key=2, style=dotted];
m1_3612 -> m1_3613  [key=0, style=solid];
m1_3613 -> m1_3611  [key=0, style=bold, color=blue];
m1_1748 -> m1_1749  [key=0, style=solid];
m1_1749 -> m1_12  [key=2, style=dotted];
m1_1749 -> m1_1750  [key=0, style=solid];
m1_1751 -> m1_12  [key=2, style=dotted];
m1_1751 -> m1_1752  [key=0, style=solid];
m1_1750 -> m1_34  [key=2, style=dotted];
m1_1750 -> m1_1751  [key=0, style=solid];
m1_1750 -> m1_1129  [key=2, style=dotted];
m1_1752 -> m1_34  [key=2, style=dotted];
m1_1752 -> m1_1753  [key=0, style=solid];
m1_1752 -> m1_1129  [key=2, style=dotted];
m1_1753 -> m1_1748  [key=0, style=bold, color=blue];
m1_3457 -> m1_3458  [key=0, style=solid];
m1_3463 -> m1_34  [key=2, style=dotted];
m1_3463 -> m1_3464  [key=0, style=solid];
m1_3459 -> m1_3463  [key=1, style=dashed, color=darkseagreen4, label=expected];
m1_3459 -> m1_3460  [key=0, style=solid];
m1_3459 -> m1_65  [key=2, style=dotted];
m1_3459 -> m1_3462  [key=1, style=dashed, color=darkseagreen4, label=expected];
m1_3461 -> m1_3463  [key=1, style=dashed, color=darkseagreen4, label=actual];
m1_3461 -> m1_3462  [key=0, style=solid];
m1_3461 -> m1_95  [key=2, style=dotted];
m1_3461 -> m1_962  [key=2, style=dotted];
m1_3462 -> m1_3463  [key=0, style=solid];
m1_3462 -> m1_66  [key=2, style=dotted];
m1_3458 -> m1_123  [key=2, style=dotted];
m1_3458 -> m1_831  [key=2, style=dotted];
m1_3458 -> m1_839  [key=2, style=dotted];
m1_3458 -> m1_3459  [key=0, style=solid];
m1_3458 -> m1_3461  [key=1, style=dashed, color=darkseagreen4, label=dates];
m1_3458 -> m1_554  [key=2, style=dotted];
m1_3460 -> m1_3461  [key=0, style=solid];
m1_3460 -> m1_66  [key=2, style=dotted];
m1_3464 -> m1_3457  [key=0, style=bold, color=blue];
m1_3148 -> m1_3149  [key=0, style=solid];
m1_3152 -> m1_12  [key=2, style=dotted];
m1_3152 -> m1_3153  [key=0, style=solid];
m1_3152 -> m1_3154  [key=1, style=dashed, color=darkseagreen4, label=dic2];
m1_3152 -> m1_3155  [key=1, style=dashed, color=darkseagreen4, label=dic2];
m1_3153 -> m1_34  [key=2, style=dotted];
m1_3153 -> m1_3154  [key=0, style=solid];
m1_3154 -> m1_34  [key=2, style=dotted];
m1_3154 -> m1_3155  [key=0, style=solid];
m1_3154 -> m1_123  [key=2, style=dotted];
m1_3155 -> m1_34  [key=2, style=dotted];
m1_3155 -> m1_3156  [key=0, style=solid];
m1_3155 -> m1_123  [key=2, style=dotted];
m1_3150 -> m1_3152  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_3150 -> m1_3151  [key=0, style=solid];
m1_3150 -> m1_95  [key=2, style=dotted];
m1_3150 -> m1_962  [key=2, style=dotted];
m1_3151 -> m1_3152  [key=0, style=solid];
m1_3151 -> m1_67  [key=2, style=dotted];
m1_3149 -> m1_3150  [key=0, style=solid];
m1_3149 -> m1_123  [key=2, style=dotted];
m1_3149 -> m1_554  [key=2, style=dotted];
m1_3156 -> m1_3148  [key=0, style=bold, color=blue];
m1_3045 -> m1_3046  [key=0, style=solid];
m1_3054 -> m1_34  [key=2, style=dotted];
m1_3054 -> m1_3055  [key=0, style=solid];
m1_3055 -> m1_34  [key=2, style=dotted];
m1_3055 -> m1_3056  [key=0, style=solid];
m1_3056 -> m1_34  [key=2, style=dotted];
m1_3056 -> m1_3057  [key=0, style=solid];
m1_3046 -> m1_3054  [key=1, style=dashed, color=darkseagreen4, label=values];
m1_3046 -> m1_3055  [key=1, style=dashed, color=darkseagreen4, label=values];
m1_3046 -> m1_3056  [key=1, style=dashed, color=darkseagreen4, label=values];
m1_3046 -> m1_3047  [key=0, style=solid];
m1_3046 -> m1_120  [key=2, style=dotted];
m1_3046 -> m1_3053  [key=1, style=dashed, color=darkseagreen4, label=values];
m1_3050 -> m1_3054  [key=0, style=solid];
m1_3050 -> m1_3051  [key=0, style=solid];
m1_3050 -> m1_3058  [key=2, style=dotted];
m1_3049 -> m1_3054  [key=0, style=solid];
m1_3049 -> m1_3050  [key=0, style=solid];
m1_3047 -> m1_3050  [key=1, style=dashed, color=darkseagreen4, label=reader];
m1_3047 -> m1_117  [key=2, style=dotted];
m1_3047 -> m1_118  [key=2, style=dotted];
m1_3047 -> m1_3048  [key=0, style=solid];
m1_3047 -> m1_3052  [key=1, style=dashed, color=darkseagreen4, label=reader];
m1_3053 -> m1_3049  [key=0, style=solid];
m1_3053 -> m1_64  [key=2, style=dotted];
m1_3051 -> m1_119  [key=2, style=dotted];
m1_3051 -> m1_3052  [key=0, style=solid];
m1_3048 -> m1_3049  [key=0, style=solid];
m1_3052 -> m1_2297  [key=2, style=dotted];
m1_3052 -> m1_3053  [key=0, style=solid];
m1_3057 -> m1_3045  [key=0, style=bold, color=blue];
m1_734 -> m1_735  [key=0, style=solid];
m1_736 -> m1_12  [key=2, style=dotted];
m1_736 -> m1_737  [key=0, style=solid];
m1_736 -> m1_738  [key=1, style=dashed, color=darkseagreen4, label=c];
m1_737 -> m1_34  [key=2, style=dotted];
m1_737 -> m1_738  [key=0, style=solid];
m1_738 -> m1_34  [key=2, style=dotted];
m1_738 -> m1_739  [key=0, style=solid];
m1_735 -> m1_736  [key=0, style=solid];
m1_735 -> m1_47  [key=2, style=dotted];
m1_735 -> m1_740  [key=2, style=dotted];
m1_739 -> m1_734  [key=0, style=bold, color=blue];
m1_2518 -> m1_2519  [key=0, style=solid];
m1_2520 -> m1_12  [key=2, style=dotted];
m1_2520 -> m1_2521  [key=0, style=solid];
m1_2520 -> m1_2522  [key=1, style=dashed, color=darkseagreen4, label=withoutParameterisedConstructor];
m1_2521 -> m1_12  [key=2, style=dotted];
m1_2521 -> m1_2522  [key=0, style=solid];
m1_2522 -> m1_34  [key=2, style=dotted];
m1_2522 -> m1_2523  [key=0, style=solid];
m1_2519 -> m1_2520  [key=0, style=solid];
m1_2519 -> m1_2521  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_2519 -> m1_2519  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m1_2523 -> m1_2518  [key=0, style=bold, color=blue];
m1_868 -> m1_869  [key=0, style=solid];
m1_876 -> m1_34  [key=2, style=dotted];
m1_876 -> m1_877  [key=0, style=solid];
m1_874 -> m1_34  [key=2, style=dotted];
m1_874 -> m1_875  [key=0, style=solid];
m1_869 -> m1_876  [key=1, style=dashed, color=darkseagreen4, label=d];
m1_869 -> m1_683  [key=2, style=dotted];
m1_869 -> m1_870  [key=0, style=solid];
m1_875 -> m1_876  [key=0, style=solid];
m1_875 -> m1_875  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m1_875 -> m1_879  [key=2, style=dotted];
m1_873 -> m1_874  [key=0, style=solid];
m1_873 -> m1_875  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_873 -> m1_463  [key=2, style=dotted];
m1_870 -> m1_875  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m1_870 -> m1_873  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m1_870 -> m1_871  [key=0, style=solid];
m1_871 -> m1_875  [key=1, style=dashed, color=darkseagreen4, label=settings];
m1_871 -> m1_873  [key=1, style=dashed, color=darkseagreen4, label=settings];
m1_871 -> m1_95  [key=2, style=dotted];
m1_871 -> m1_872  [key=0, style=solid];
m1_872 -> m1_873  [key=0, style=solid];
m1_872 -> m1_64  [key=2, style=dotted];
m1_872 -> m1_878  [key=2, style=dotted];
m1_877 -> m1_868  [key=0, style=bold, color=blue];
m1_3239 -> m1_3240  [key=0, style=solid];
m1_3241 -> m1_12  [key=2, style=dotted];
m1_3241 -> m1_3242  [key=0, style=solid];
m1_3241 -> m1_3243  [key=1, style=dashed, color=darkseagreen4, label=exception];
m1_3241 -> m1_3244  [key=1, style=dashed, color=darkseagreen4, label=exception];
m1_3244 -> m1_34  [key=2, style=dotted];
m1_3244 -> m1_3245  [key=0, style=solid];
m1_3240 -> m1_3241  [key=0, style=solid];
m1_3240 -> m1_3240  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m1_3242 -> m1_3243  [key=0, style=solid];
m1_3242 -> m1_520  [key=2, style=dotted];
m1_3243 -> m1_3244  [key=0, style=solid];
m1_3243 -> m1_469  [key=2, style=dotted];
m1_3245 -> m1_3239  [key=0, style=bold, color=blue];
m1_1736 -> m1_1737  [key=0, style=solid];
m1_1743 -> m1_12  [key=2, style=dotted];
m1_1743 -> m1_1744  [key=0, style=solid];
m1_1744 -> m1_34  [key=2, style=dotted];
m1_1744 -> m1_1745  [key=0, style=solid];
m1_1741 -> m1_1743  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_1741 -> m1_1742  [key=0, style=solid];
m1_1741 -> m1_1733  [key=2, style=dotted];
m1_1742 -> m1_1743  [key=0, style=solid];
m1_1742 -> m1_67  [key=2, style=dotted];
m1_1737 -> m1_1741  [key=1, style=dashed, color=darkseagreen4, label=g];
m1_1737 -> m1_1738  [key=0, style=solid];
m1_1737 -> m1_1746  [key=2, style=dotted];
m1_1737 -> m1_1739  [key=1, style=dashed, color=darkseagreen4, label=g];
m1_1737 -> m1_1740  [key=1, style=dashed, color=darkseagreen4, label=g];
m1_1740 -> m1_1741  [key=0, style=solid];
m1_1738 -> m1_1739  [key=0, style=solid];
m1_1738 -> m1_1747  [key=2, style=dotted];
m1_1738 -> m1_1727  [key=2, style=dotted];
m1_1739 -> m1_1740  [key=0, style=solid];
m1_1739 -> m1_1747  [key=2, style=dotted];
m1_1739 -> m1_1727  [key=2, style=dotted];
m1_1745 -> m1_1736  [key=0, style=bold, color=blue];
m1_416 -> m1_417  [key=0, style=solid];
m1_416 -> m1_418  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m1_416 -> m1_419  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m1_416 -> m1_420  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m1_416 -> m1_421  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m1_416 -> m1_422  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m1_417 -> m1_418  [key=0, style=solid];
m1_417 -> m1_424  [key=2, style=dotted];
m1_418 -> m1_419  [key=0, style=solid];
m1_418 -> m1_425  [key=2, style=dotted];
m1_419 -> m1_420  [key=0, style=solid];
m1_419 -> m1_426  [key=2, style=dotted];
m1_420 -> m1_421  [key=0, style=solid];
m1_420 -> m1_426  [key=2, style=dotted];
m1_421 -> m1_422  [key=0, style=solid];
m1_421 -> m1_426  [key=2, style=dotted];
m1_422 -> m1_423  [key=0, style=solid];
m1_422 -> m1_426  [key=2, style=dotted];
m1_423 -> m1_416  [key=0, style=bold, color=blue];
m1_1102 -> m1_1103  [key=0, style=solid];
m1_1104 -> m1_34  [key=2, style=dotted];
m1_1104 -> m1_1105  [key=0, style=solid];
m1_1103 -> m1_1104  [key=0, style=solid];
m1_1103 -> m1_47  [key=2, style=dotted];
m1_1103 -> m1_1106  [key=2, style=dotted];
m1_1105 -> m1_1102  [key=0, style=bold, color=blue];
m1_1594 -> m1_1595  [key=0, style=solid];
m1_1595 -> m1_8  [key=2, style=dotted];
m1_1595 -> m1_1596  [key=0, style=solid];
m1_1595 -> m1_1597  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_1596 -> m1_1594  [key=0, style=bold, color=blue];
m1_3495 -> m1_3496  [key=0, style=solid];
m1_3496 -> m1_2092  [key=2, style=dotted];
m1_3496 -> m1_3497  [key=0, style=solid];
m1_3497 -> m1_65  [key=2, style=dotted];
m1_3497 -> m1_3498  [key=0, style=solid];
m1_3498 -> m1_67  [key=2, style=dotted];
m1_3498 -> m1_3499  [key=0, style=solid];
m1_3499 -> m1_3495  [key=0, style=bold, color=blue];
m1_771 -> m1_772  [key=0, style=solid];
m1_777 -> m1_12  [key=2, style=dotted];
m1_777 -> m1_778  [key=0, style=solid];
m1_777 -> m1_779  [key=1, style=dashed, color=darkseagreen4, label=test2];
m1_778 -> m1_34  [key=2, style=dotted];
m1_778 -> m1_779  [key=0, style=solid];
m1_779 -> m1_34  [key=2, style=dotted];
m1_779 -> m1_780  [key=0, style=solid];
m1_776 -> m1_34  [key=2, style=dotted];
m1_776 -> m1_777  [key=0, style=solid];
m1_775 -> m1_777  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m1_775 -> m1_776  [key=0, style=solid];
m1_775 -> m1_47  [key=2, style=dotted];
m1_772 -> m1_778  [key=1, style=dashed, color=darkseagreen4, label=test];
m1_772 -> m1_779  [key=1, style=dashed, color=darkseagreen4, label=test];
m1_772 -> m1_775  [key=1, style=dashed, color=darkseagreen4, label=test];
m1_772 -> m1_773  [key=0, style=solid];
m1_772 -> m1_781  [key=2, style=dotted];
m1_772 -> m1_774  [key=1, style=dashed, color=darkseagreen4, label=test];
m1_774 -> m1_775  [key=0, style=solid];
m1_773 -> m1_774  [key=0, style=solid];
m1_780 -> m1_771  [key=0, style=bold, color=blue];
m1_2957 -> m1_2958  [key=0, style=solid];
m1_2958 -> m1_12  [key=2, style=dotted];
m1_2958 -> m1_2959  [key=0, style=solid];
m1_2959 -> m1_2960  [key=0, style=solid];
m1_2959 -> m1_89  [key=2, style=dotted];
m1_2960 -> m1_2957  [key=0, style=bold, color=blue];
m1_2551 -> m1_2552  [key=0, style=solid];
m1_2555 -> m1_34  [key=2, style=dotted];
m1_2555 -> m1_2556  [key=0, style=solid];
m1_2553 -> m1_2555  [key=1, style=dashed, color=darkseagreen4, label=result];
m1_2553 -> m1_47  [key=2, style=dotted];
m1_2553 -> m1_2554  [key=0, style=solid];
m1_2554 -> m1_2555  [key=0, style=solid];
m1_2554 -> m1_66  [key=2, style=dotted];
m1_2552 -> m1_2553  [key=0, style=solid];
m1_2552 -> m1_2557  [key=2, style=dotted];
m1_2556 -> m1_2551  [key=0, style=bold, color=blue];
m1_2837 -> m1_2838  [key=0, style=solid];
m1_2839 -> m1_8  [key=2, style=dotted];
m1_2839 -> m1_2840  [key=0, style=solid];
m1_2839 -> m1_2841  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_2838 -> m1_2839  [key=0, style=solid];
m1_2838 -> m1_2842  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_2838 -> m1_2833  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m1_2840 -> m1_2837  [key=0, style=bold, color=blue];
m1_2644 -> m1_2645  [key=0, style=solid];
m1_2645 -> m1_12  [key=2, style=dotted];
m1_2645 -> m1_2646  [key=0, style=solid];
m1_2645 -> m1_2647  [key=1, style=dashed, color=darkseagreen4, label=r];
m1_2645 -> m1_2648  [key=1, style=dashed, color=darkseagreen4, label=r];
m1_2645 -> m1_2649  [key=1, style=dashed, color=darkseagreen4, label=r];
m1_2645 -> m1_2650  [key=1, style=dashed, color=darkseagreen4, label=r];
m1_2646 -> m1_34  [key=2, style=dotted];
m1_2646 -> m1_2647  [key=0, style=solid];
m1_2646 -> m1_122  [key=2, style=dotted];
m1_2647 -> m1_34  [key=2, style=dotted];
m1_2647 -> m1_2648  [key=0, style=solid];
m1_2647 -> m1_200  [key=2, style=dotted];
m1_2648 -> m1_2649  [key=0, style=solid];
m1_2648 -> m1_1413  [key=2, style=dotted];
m1_2648 -> m1_520  [key=2, style=dotted];
m1_2649 -> m1_2650  [key=0, style=solid];
m1_2649 -> m1_1413  [key=2, style=dotted];
m1_2649 -> m1_520  [key=2, style=dotted];
m1_2650 -> m1_2651  [key=0, style=solid];
m1_2650 -> m1_1413  [key=2, style=dotted];
m1_2650 -> m1_89  [key=2, style=dotted];
m1_2651 -> m1_2644  [key=0, style=bold, color=blue];
m1_3893 -> m1_818  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_3898 -> m1_1489  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_3899 -> m1_1516  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_3900 -> m1_1523  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_3901 -> m1_1530  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_3902 -> m1_1537  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_3903 -> m1_1544  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_3904 -> m1_1551  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_3905 -> m1_1558  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_3906 -> m1_1565  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_3920 -> m1_2159  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_3924 -> m1_2275  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_3936 -> m1_2828  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_3937 -> m1_2842  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_3945 -> m1_3339  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_3947 -> m1_3431  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_3952 -> m1_3803  [key=1, style=dashed, color=darkseagreen4, label=JsonMessage];
m1_3892 -> m1_3181  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest"];
m1_3892 -> m1_592  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest"];
m1_3892 -> m1_614  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest"];
m1_3892 -> m1_624  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest"];
m1_3892 -> m1_3187  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest"];
m1_3892 -> m1_3188  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest"];
m1_3894 -> m1_1238  [key=1, style=dashed, color=darkseagreen4, label=strFromTest];
m1_3907 -> m1_1579  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_3908 -> m1_1587  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_3911 -> m1_1767  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_3941 -> m1_3237  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_3942 -> m1_3237  [key=1, style=dashed, color=darkseagreen4, label=s];
m1_3897 -> m1_1382  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers"];
m1_3897 -> m1_1376  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers"];
m1_3897 -> m1_1377  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers"];
m1_3897 -> m1_1378  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers"];
m1_3897 -> m1_1379  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers"];
m1_3934 -> m1_2635  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes"];
m1_3934 -> m1_2627  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes"];
m1_3934 -> m1_2628  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes"];
m1_3934 -> m1_2629  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes"];
m1_3934 -> m1_2632  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes"];
m1_3938 -> m1_3092  [key=1, style=dashed, color=darkseagreen4, label=errors];
m1_3939 -> m1_3107  [key=1, style=dashed, color=darkseagreen4, label=errors];
m1_3940 -> m1_3122  [key=1, style=dashed, color=darkseagreen4, label=errors];
m1_3915 -> m1_1833  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m1_3915 -> m1_1843  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m1_3915 -> m1_1829  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m1_3915 -> m1_1836  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m1_3915 -> m1_1839  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m1_3915 -> m1_1847  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m1_3915 -> m1_1851  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m1_3915 -> m1_1855  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m1_3915 -> m1_1862  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m1_3915 -> m1_1865  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m1_3915 -> m1_1869  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m1_3915 -> m1_1873  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m1_3915 -> m1_1877  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m1_3910 -> m1_1734  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>"];
m1_3910 -> m1_1728  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>"];
m1_3910 -> m1_1731  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>"];
m1_3888 -> m1_49  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItem"];
m1_3909 -> m1_1712  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass"];
m1_3909 -> m1_1713  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass"];
m1_3933 -> m1_2582  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty"];
m1_3933 -> m1_2581  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty"];
m1_3932 -> m1_2566  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty"];
m1_3932 -> m1_2565  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty"];
m1_3935 -> m1_2659  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException"];
m1_3890 -> m1_407  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m1_3890 -> m1_408  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m1_3890 -> m1_409  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m1_3890 -> m1_410  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m1_3890 -> m1_411  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m1_3890 -> m1_414  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m1_3890 -> m1_417  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m1_3890 -> m1_418  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m1_3890 -> m1_419  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m1_3890 -> m1_420  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m1_3890 -> m1_421  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m1_3890 -> m1_422  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m1_3890 -> m1_428  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m1_3890 -> m1_430  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m1_3890 -> m1_431  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m1_3890 -> m1_432  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m1_3890 -> m1_433  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m1_3890 -> m1_434  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m1_3890 -> m1_435  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m1_3890 -> m1_436  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m1_3916 -> m1_1894  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m1_3916 -> m1_1890  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m1_3916 -> m1_1891  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m1_3916 -> m1_1892  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m1_3916 -> m1_1893  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m1_3916 -> m1_1897  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m1_3916 -> m1_1898  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m1_3916 -> m1_1899  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m1_3916 -> m1_1900  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m1_3916 -> m1_1901  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m1_3916 -> m1_1902  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m1_3916 -> m1_1903  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m1_3916 -> m1_1904  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m1_3916 -> m1_1905  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m1_3916 -> m1_1906  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m1_3916 -> m1_1907  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m1_3916 -> m1_1908  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m1_3916 -> m1_1909  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m1_3916 -> m1_1910  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m1_3916 -> m1_1911  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m1_3916 -> m1_1912  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m1_3916 -> m1_1913  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m1_3916 -> m1_1914  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m1_3916 -> m1_1929  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m1_3916 -> m1_1930  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m1_3916 -> m1_1931  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m1_3916 -> m1_1932  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m1_3916 -> m1_1933  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m1_3916 -> m1_1935  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m1_3916 -> m1_1936  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m1_3916 -> m1_1937  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m1_3916 -> m1_1938  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m1_3916 -> m1_1939  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m1_3916 -> m1_1940  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m1_3916 -> m1_1941  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m1_3916 -> m1_1942  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m1_3916 -> m1_1943  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m1_3916 -> m1_1944  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m1_3916 -> m1_1945  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m1_3916 -> m1_1946  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m1_3946 -> m1_3350  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver"];
m1_3912 -> m1_1771  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor"];
m1_3943 -> m1_3297  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>"];
m1_3953 -> m1_3860  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.DecimalTest"];
m1_3913 -> m1_1800  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1"];
m1_3926 -> m1_2391  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived"];
m1_3950 -> m1_3756  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedConstructorType"];
m1_3891 -> m1_568  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast"];
m1_3891 -> m1_569  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast"];
m1_3891 -> m1_572  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast"];
m1_3949 -> m1_3580  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId"];
m1_3949 -> m1_3574  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId"];
m1_3949 -> m1_3576  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId"];
m1_3949 -> m1_3578  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId"];
m1_3949 -> m1_3603  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId"];
m1_3949 -> m1_3606  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId"];
m1_3949 -> m1_3609  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId"];
m1_3918 -> m1_2057  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m1_3918 -> m1_2058  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m1_3918 -> m1_2059  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m1_3918 -> m1_2060  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m1_3918 -> m1_2061  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m1_3918 -> m1_2062  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m1_3918 -> m1_2063  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m1_3918 -> m1_2064  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m1_3919 -> m1_2068  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m1_3919 -> m1_2069  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m1_3919 -> m1_2070  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m1_3919 -> m1_2071  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m1_3919 -> m1_2072  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m1_3919 -> m1_2073  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m1_3919 -> m1_2074  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m1_3919 -> m1_2075  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m1_3919 -> m1_2076  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m1_3919 -> m1_2077  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m1_3914 -> m1_1802  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2"];
m1_3929 -> m1_2410  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable"];
m1_3948 -> m1_3503  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor"];
m2_14 -> m2_15  [key=0, style=solid, color=red];
m2_14 -> m2_19  [key=2, style=dotted, color=red];
m2_14 -> m2_16  [key=1, style=dashed, color=red, label=contract];
m2_14 -> m2_17  [key=1, style=dashed, color=red, label=contract];
m2_362 -> m2_363  [key=0, style=solid];
m2_364 -> m2_32  [key=2, style=dotted];
m2_364 -> m2_365  [key=0, style=solid];
m2_364 -> m2_367  [key=1, style=dashed, color=darkseagreen4, label=contract];
m2_368 -> m2_33  [key=2, style=dotted];
m2_368 -> m2_369  [key=0, style=solid];
m2_363 -> m2_31  [key=2, style=dotted];
m2_363 -> m2_364  [key=0, style=solid];
m2_365 -> m2_366  [key=0, style=solid];
m2_367 -> m2_368  [key=0, style=solid];
m2_366 -> m2_367  [key=0, style=solid];
m2_366 -> m2_370  [key=2, style=dotted];
m2_369 -> m2_362  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_2  [key=0, style=solid];
m2_2 -> m2_0  [key=0, style=bold, color=blue];
m2_10 -> m2_11  [key=0, style=solid];
m2_71 -> m2_72  [key=0, style=solid];
m2_71 -> m2_47  [key=2, style=dotted];
m2_62 -> m2_63  [key=0, style=solid];
m2_62 -> m2_46  [key=2, style=dotted];
m2_327 -> m2_328  [key=0, style=solid];
m2_329 -> m2_32  [key=2, style=dotted];
m2_329 -> m2_330  [key=0, style=solid];
m2_329 -> m2_331  [key=1, style=dashed, color=darkseagreen4, label=contract];
m2_328 -> m2_31  [key=2, style=dotted];
m2_328 -> m2_329  [key=0, style=solid];
m2_333 -> m2_71  [key=2, style=dotted];
m2_333 -> m2_334  [key=0, style=solid];
m2_333 -> m2_343  [key=2, style=dotted];
m2_334 -> m2_71  [key=2, style=dotted];
m2_334 -> m2_335  [key=0, style=solid];
m2_334 -> m2_343  [key=2, style=dotted];
m2_336 -> m2_71  [key=2, style=dotted];
m2_336 -> m2_337  [key=0, style=solid];
m2_336 -> m2_343  [key=2, style=dotted];
m2_337 -> m2_71  [key=2, style=dotted];
m2_337 -> m2_338  [key=0, style=solid];
m2_337 -> m2_343  [key=2, style=dotted];
m2_330 -> m2_331  [key=0, style=solid];
m2_330 -> m2_339  [key=2, style=dotted];
m2_330 -> m2_340  [key=2, style=dotted];
m2_330 -> m2_332  [key=1, style=dashed, color=darkseagreen4, label=myClass];
m2_330 -> m2_335  [key=1, style=dashed, color=darkseagreen4, label=myClass];
m2_331 -> m2_332  [key=0, style=solid];
m2_331 -> m2_335  [key=1, style=dashed, color=darkseagreen4, label=getter];
m2_332 -> m2_333  [key=0, style=solid];
m2_332 -> m2_334  [key=1, style=dashed, color=darkseagreen4, label=dictionaryData];
m2_332 -> m2_341  [key=2, style=dotted];
m2_332 -> m2_342  [key=2, style=dotted];
m2_332 -> m2_344  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_332 -> m2_347  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_335 -> m2_336  [key=0, style=solid];
m2_335 -> m2_337  [key=1, style=dashed, color=darkseagreen4, label=extensionData];
m2_335 -> m2_341  [key=2, style=dotted];
m2_338 -> m2_327  [key=0, style=bold, color=blue];
m2_31 -> m2_32  [key=0, style=solid];
m2_31 -> m2_43  [key=2, style=dotted];
m2_254 -> m2_255  [key=0, style=solid];
m2_256 -> m2_32  [key=2, style=dotted];
m2_256 -> m2_257  [key=0, style=solid];
m2_256 -> m2_258  [key=1, style=dashed, color=darkseagreen4, label=contract];
m2_256 -> m2_259  [key=1, style=dashed, color=darkseagreen4, label=contract];
m2_256 -> m2_260  [key=1, style=dashed, color=darkseagreen4, label=contract];
m2_256 -> m2_261  [key=1, style=dashed, color=darkseagreen4, label=contract];
m2_256 -> m2_262  [key=1, style=dashed, color=darkseagreen4, label=contract];
m2_259 -> m2_33  [key=2, style=dotted];
m2_259 -> m2_260  [key=0, style=solid];
m2_260 -> m2_33  [key=2, style=dotted];
m2_260 -> m2_261  [key=0, style=solid];
m2_255 -> m2_31  [key=2, style=dotted];
m2_255 -> m2_256  [key=0, style=solid];
m2_258 -> m2_72  [key=2, style=dotted];
m2_258 -> m2_259  [key=0, style=solid];
m2_257 -> m2_94  [key=2, style=dotted];
m2_257 -> m2_258  [key=0, style=solid];
m2_262 -> m2_94  [key=2, style=dotted];
m2_262 -> m2_263  [key=0, style=solid];
m2_261 -> m2_262  [key=0, style=solid];
m2_263 -> m2_254  [key=0, style=bold, color=blue];
m2_44 -> m2_45  [key=0, style=solid, color=green];
m2_45 -> m2_46  [key=0, style=solid, color=green];
m2_45 -> m2_61  [key=2, style=dotted, color=green];
m2_45 -> m2_47  [key=1, style=dashed, color=green, label=p];
m2_45 -> m2_48  [key=1, style=dashed, color=green, label=p];
m2_45 -> m2_49  [key=1, style=dashed, color=green, label=p];
m2_45 -> m2_50  [key=1, style=dashed, color=green, label=p];
m2_45 -> m2_51  [key=1, style=dashed, color=green, label=p];
m2_45 -> m2_52  [key=1, style=dashed, color=green, label=p];
m2_45 -> m2_53  [key=1, style=dashed, color=green, label=p];
m2_45 -> m2_54  [key=1, style=dashed, color=green, label=p];
m2_45 -> m2_55  [key=1, style=dashed, color=green, label=p];
m2_45 -> m2_56  [key=1, style=dashed, color=green, label=p];
m2_45 -> m2_57  [key=1, style=dashed, color=green, label=p];
m2_45 -> m2_58  [key=1, style=dashed, color=green, label=p];
m2_45 -> m2_59  [key=1, style=dashed, color=green, label=p];
m2_46 -> m2_47  [key=0, style=solid, color=green];
m2_46 -> m2_62  [key=2, style=dotted, color=green];
m2_46 -> m2_33  [key=2, style=dotted, color=green];
m2_47 -> m2_33  [key=2, style=dotted];
m2_47 -> m2_48  [key=0, style=solid];
m2_48 -> m2_49  [key=0, style=solid];
m2_49 -> m2_33  [key=2, style=dotted];
m2_49 -> m2_50  [key=0, style=solid];
m2_49 -> m2_62  [key=2, style=dotted];
m2_50 -> m2_33  [key=2, style=dotted];
m2_50 -> m2_51  [key=0, style=solid];
m2_50 -> m2_50  [key=1, style=dashed, color=darkseagreen4, label=count];
m2_50 -> m2_52  [key=1, style=dashed, color=darkseagreen4, label=count];
m2_51 -> m2_52  [key=0, style=solid];
m2_51 -> m2_0  [key=2, style=dotted];
m2_51 -> m2_48  [key=2, style=dotted];
m2_52 -> m2_33  [key=2, style=dotted];
m2_52 -> m2_53  [key=0, style=solid];
m2_52 -> m2_63  [key=2, style=dotted];
m2_52 -> m2_62  [key=2, style=dotted];
m2_52 -> m2_49  [key=0, style=bold, color=blue];
m2_53 -> m2_33  [key=2, style=dotted];
m2_53 -> m2_54  [key=0, style=solid];
m2_54 -> m2_55  [key=0, style=solid, color=green];
m2_54 -> m2_56  [key=1, style=dashed, color=darkseagreen4, label=count];
m2_54 -> m2_26  [key=3, color=darkorchid, style=bold, label="Local variable int count"];
m2_55 -> m2_56  [key=0, style=solid, color=green];
m2_55 -> m2_62  [key=2, style=dotted, color=green];
m2_55 -> m2_33  [key=2, style=dotted, color=green];
m2_55 -> m2_40  [key=2, style=dotted];
m2_55 -> m2_57  [key=1, style=dashed, color=darkseagreen4, label=builder];
m2_55 -> m2_58  [key=1, style=dashed, color=darkseagreen4, label=builder];
m2_55 -> m2_59  [key=1, style=dashed, color=darkseagreen4, label=builder];
m2_56 -> m2_57  [key=0, style=solid, color=green];
m2_56 -> m2_33  [key=2, style=dotted];
m2_56 -> m2_42  [key=2, style=dotted];
m2_56 -> m2_41  [key=2, style=dotted];
m2_56 -> m2_56  [key=1, style=dashed, color=darkseagreen4, label=count];
m2_56 -> m2_76  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_56 -> m2_77  [key=1, style=dashed, color=darkseagreen4, label=count];
m2_56 -> m2_58  [key=1, style=dashed, color=darkseagreen4, label=count];
m2_57 -> m2_58  [key=0, style=solid, color=green];
m2_57 -> m2_41  [key=2, style=dotted];
m2_58 -> m2_59  [key=0, style=solid, color=green];
m2_58 -> m2_62  [key=2, style=dotted, color=green];
m2_58 -> m2_33  [key=2, style=dotted, color=green];
m2_58 -> m2_42  [key=2, style=dotted];
m2_58 -> m2_41  [key=2, style=dotted];
m2_58 -> m2_58  [key=1, style=dashed, color=darkseagreen4, label=count];
m2_58 -> m2_81  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_58 -> m2_82  [key=1, style=dashed, color=darkseagreen4, label=count];
m2_58 -> m2_66  [key=1, style=dashed, color=darkseagreen4, label=count];
m2_59 -> m2_60  [key=0, style=solid, color=green];
m2_59 -> m2_33  [key=2, style=dotted, color=green];
m2_59 -> m2_43  [key=2, style=dotted];
m2_60 -> m2_44  [key=0, style=bold, color=blue];
m2_60 -> m2_61  [key=0, style=solid];
m2_60 -> m2_10  [key=2, style=dotted];
m2_200 -> m2_201  [key=0, style=solid];
m2_201 -> m2_61  [key=2, style=dotted];
m2_201 -> m2_202  [key=0, style=solid];
m2_203 -> m2_61  [key=2, style=dotted];
m2_203 -> m2_204  [key=0, style=solid];
m2_205 -> m2_61  [key=2, style=dotted];
m2_205 -> m2_206  [key=0, style=solid];
m2_207 -> m2_61  [key=2, style=dotted];
m2_207 -> m2_208  [key=0, style=solid];
m2_209 -> m2_61  [key=2, style=dotted];
m2_209 -> m2_210  [key=0, style=solid];
m2_211 -> m2_61  [key=2, style=dotted];
m2_211 -> m2_212  [key=0, style=solid];
m2_213 -> m2_61  [key=2, style=dotted];
m2_213 -> m2_214  [key=0, style=solid];
m2_215 -> m2_61  [key=2, style=dotted];
m2_215 -> m2_216  [key=0, style=solid];
m2_217 -> m2_61  [key=2, style=dotted];
m2_217 -> m2_218  [key=0, style=solid];
m2_219 -> m2_61  [key=2, style=dotted];
m2_219 -> m2_220  [key=0, style=solid];
m2_221 -> m2_61  [key=2, style=dotted];
m2_221 -> m2_222  [key=0, style=solid];
m2_223 -> m2_61  [key=2, style=dotted];
m2_223 -> m2_224  [key=0, style=solid];
m2_225 -> m2_61  [key=2, style=dotted];
m2_225 -> m2_226  [key=0, style=solid];
m2_227 -> m2_61  [key=2, style=dotted];
m2_227 -> m2_228  [key=0, style=solid];
m2_229 -> m2_61  [key=2, style=dotted];
m2_229 -> m2_230  [key=0, style=solid];
m2_231 -> m2_61  [key=2, style=dotted];
m2_231 -> m2_232  [key=0, style=solid];
m2_233 -> m2_61  [key=2, style=dotted];
m2_233 -> m2_234  [key=0, style=solid];
m2_235 -> m2_61  [key=2, style=dotted];
m2_235 -> m2_236  [key=0, style=solid];
m2_237 -> m2_61  [key=2, style=dotted];
m2_237 -> m2_238  [key=0, style=solid];
m2_202 -> m2_71  [key=2, style=dotted];
m2_202 -> m2_203  [key=0, style=solid];
m2_204 -> m2_71  [key=2, style=dotted];
m2_204 -> m2_205  [key=0, style=solid];
m2_206 -> m2_71  [key=2, style=dotted];
m2_206 -> m2_207  [key=0, style=solid];
m2_208 -> m2_71  [key=2, style=dotted];
m2_208 -> m2_209  [key=0, style=solid];
m2_210 -> m2_71  [key=2, style=dotted];
m2_210 -> m2_211  [key=0, style=solid];
m2_212 -> m2_71  [key=2, style=dotted];
m2_212 -> m2_213  [key=0, style=solid];
m2_214 -> m2_71  [key=2, style=dotted];
m2_214 -> m2_215  [key=0, style=solid];
m2_216 -> m2_71  [key=2, style=dotted];
m2_216 -> m2_217  [key=0, style=solid];
m2_218 -> m2_71  [key=2, style=dotted];
m2_218 -> m2_219  [key=0, style=solid];
m2_220 -> m2_93  [key=2, style=dotted];
m2_220 -> m2_221  [key=0, style=solid];
m2_222 -> m2_93  [key=2, style=dotted];
m2_222 -> m2_223  [key=0, style=solid];
m2_224 -> m2_93  [key=2, style=dotted];
m2_224 -> m2_225  [key=0, style=solid];
m2_226 -> m2_93  [key=2, style=dotted];
m2_226 -> m2_227  [key=0, style=solid];
m2_228 -> m2_93  [key=2, style=dotted];
m2_228 -> m2_229  [key=0, style=solid];
m2_230 -> m2_93  [key=2, style=dotted];
m2_230 -> m2_231  [key=0, style=solid];
m2_232 -> m2_93  [key=2, style=dotted];
m2_232 -> m2_233  [key=0, style=solid];
m2_234 -> m2_93  [key=2, style=dotted];
m2_234 -> m2_235  [key=0, style=solid];
m2_236 -> m2_93  [key=2, style=dotted];
m2_236 -> m2_237  [key=0, style=solid];
m2_238 -> m2_93  [key=2, style=dotted];
m2_238 -> m2_239  [key=0, style=solid];
m2_239 -> m2_200  [key=0, style=bold, color=blue];
m2_26 -> m2_27  [key=0, style=solid];
m2_26 -> m2_30  [key=1, style=dashed, color=darkseagreen4, label=count];
m2_26 -> m2_26  [key=3, color=darkorchid, style=bold, label="Local variable int count"];
m2_28 -> m2_32  [key=2, style=dotted];
m2_28 -> m2_29  [key=0, style=solid];
m2_28 -> m2_41  [key=2, style=dotted];
m2_29 -> m2_33  [key=2, style=dotted];
m2_29 -> m2_30  [key=0, style=solid];
m2_29 -> m2_41  [key=2, style=dotted];
m2_27 -> m2_31  [key=2, style=dotted];
m2_27 -> m2_28  [key=0, style=solid];
m2_27 -> m2_40  [key=2, style=dotted];
m2_27 -> m2_29  [key=1, style=dashed, color=darkseagreen4, label=builder];
m2_27 -> m2_30  [key=1, style=dashed, color=darkseagreen4, label=builder];
m2_30 -> m2_26  [key=0, style=bold, color=blue];
m2_30 -> m2_31  [key=0, style=solid];
m2_30 -> m2_42  [key=2, style=dotted];
m2_30 -> m2_41  [key=2, style=dotted];
m2_30 -> m2_30  [key=1, style=dashed, color=darkseagreen4, label=count];
m2_30 -> m2_49  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_30 -> m2_50  [key=1, style=dashed, color=darkseagreen4, label=count];
m2_30 -> m2_36  [key=1, style=dashed, color=darkseagreen4, label=count];
m2_9 -> m2_7  [key=0, style=bold, color=blue];
m2_158 -> m2_159  [key=0, style=solid];
m2_160 -> m2_32  [key=2, style=dotted];
m2_160 -> m2_161  [key=0, style=solid];
m2_160 -> m2_162  [key=1, style=dashed, color=darkseagreen4, label=contract];
m2_160 -> m2_163  [key=1, style=dashed, color=darkseagreen4, label=contract];
m2_160 -> m2_165  [key=1, style=dashed, color=darkseagreen4, label=contract];
m2_167 -> m2_33  [key=2, style=dotted];
m2_167 -> m2_168  [key=0, style=solid];
m2_168 -> m2_33  [key=2, style=dotted];
m2_168 -> m2_169  [key=0, style=solid];
m2_169 -> m2_33  [key=2, style=dotted];
m2_169 -> m2_170  [key=0, style=solid];
m2_159 -> m2_31  [key=2, style=dotted];
m2_159 -> m2_160  [key=0, style=solid];
m2_159 -> m2_164  [key=1, style=dashed, color=darkseagreen4, label=resolver];
m2_159 -> m2_172  [key=1, style=dashed, color=darkseagreen4, label=resolver];
m2_159 -> m2_166  [key=1, style=dashed, color=darkseagreen4, label=resolver];
m2_164 -> m2_95  [key=2, style=dotted];
m2_164 -> m2_165  [key=0, style=solid];
m2_164 -> m2_171  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_166 -> m2_96  [key=2, style=dotted];
m2_166 -> m2_97  [key=2, style=dotted];
m2_166 -> m2_167  [key=0, style=solid];
m2_166 -> m2_168  [key=1, style=dashed, color=darkseagreen4, label=d];
m2_166 -> m2_169  [key=1, style=dashed, color=darkseagreen4, label=d];
m2_161 -> m2_93  [key=2, style=dotted];
m2_161 -> m2_162  [key=0, style=solid];
m2_163 -> m2_93  [key=2, style=dotted];
m2_163 -> m2_164  [key=0, style=solid];
m2_162 -> m2_94  [key=2, style=dotted];
m2_162 -> m2_163  [key=0, style=solid];
m2_165 -> m2_166  [key=0, style=solid];
m2_170 -> m2_158  [key=0, style=bold, color=blue];
m2_66 -> m2_67  [key=0, style=solid, color=green];
m2_66 -> m2_47  [key=2, style=dotted];
m2_66 -> m2_32  [key=2, style=dotted, color=green];
m2_66 -> m2_68  [key=1, style=dashed, color=green, label=contract];
m2_66 -> m2_69  [key=1, style=dashed, color=green, label=contract];
m2_61 -> m2_62  [key=0, style=solid];
m2_61 -> m2_44  [key=2, style=dotted];
m2_61 -> m2_45  [key=2, style=dotted];
m2_61 -> m2_63  [key=1, style=dashed, color=darkseagreen4, label=o];
m2_61 -> m2_64  [key=1, style=dashed, color=darkseagreen4, label=o];
m2_61 -> m2_65  [key=1, style=dashed, color=darkseagreen4, label=o];
m2_61 -> m2_67  [key=1, style=dashed, color=darkseagreen4, label=o];
m2_61 -> m2_68  [key=1, style=dashed, color=darkseagreen4, label=o];
m2_61 -> m2_69  [key=1, style=dashed, color=darkseagreen4, label=o];
m2_61 -> m2_70  [key=1, style=dashed, color=darkseagreen4, label=o];
m2_61 -> m2_71  [key=1, style=dashed, color=darkseagreen4, label=o];
m2_61 -> m2_72  [key=1, style=dashed, color=darkseagreen4, label=o];
m2_61 -> m2_73  [key=1, style=dashed, color=darkseagreen4, label=o];
m2_63 -> m2_64  [key=0, style=solid];
m2_63 -> m2_46  [key=2, style=dotted];
m2_64 -> m2_65  [key=0, style=solid, color=green];
m2_64 -> m2_46  [key=2, style=dotted];
m2_65 -> m2_66  [key=0, style=solid, color=green];
m2_65 -> m2_75  [key=2, style=dotted];
m2_65 -> m2_47  [key=2, style=dotted];
m2_65 -> m2_31  [key=2, style=dotted, color=green];
m2_67 -> m2_68  [key=0, style=solid, color=green];
m2_67 -> m2_48  [key=2, style=dotted];
m2_67 -> m2_47  [key=2, style=dotted];
m2_67 -> m2_71  [key=2, style=dotted, color=green];
m2_68 -> m2_69  [key=0, style=solid, color=green];
m2_68 -> m2_47  [key=2, style=dotted];
m2_68 -> m2_33  [key=2, style=dotted, color=green];
m2_69 -> m2_70  [key=0, style=solid, color=green];
m2_69 -> m2_47  [key=2, style=dotted];
m2_69 -> m2_72  [key=2, style=dotted, color=green];
m2_70 -> m2_71  [key=0, style=solid];
m2_70 -> m2_47  [key=2, style=dotted];
m2_70 -> m2_64  [key=0, style=bold, color=blue];
m2_72 -> m2_73  [key=0, style=solid];
m2_72 -> m2_47  [key=2, style=dotted];
m2_73 -> m2_74  [key=0, style=solid, color=green];
m2_73 -> m2_47  [key=2, style=dotted];
m2_74 -> m2_53  [key=0, style=bold, color=blue];
m2_74 -> m2_75  [key=0, style=solid, color=green];
m2_74 -> m2_31  [key=2, style=dotted, color=green];
m2_82 -> m2_83  [key=0, style=solid, color=green];
m2_82 -> m2_82  [key=1, style=dashed, color=darkseagreen4, label=count];
m2_82 -> m2_84  [key=1, style=dashed, color=darkseagreen4, label=count];
m2_83 -> m2_84  [key=0, style=solid, color=green];
m2_83 -> m2_31  [key=2, style=dotted, color=green];
m2_83 -> m2_88  [key=1, style=dashed, color=green, label=resolver];
m2_83 -> m2_99  [key=1, style=dashed, color=green, label=resolver];
m2_83 -> m2_90  [key=1, style=dashed, color=green, label=resolver];
m2_83 -> m2_0  [key=2, style=dotted];
m2_83 -> m2_48  [key=2, style=dotted];
m2_84 -> m2_85  [key=0, style=solid, color=green];
m2_84 -> m2_32  [key=2, style=dotted, color=green];
m2_84 -> m2_86  [key=1, style=dashed, color=green, label=contract];
m2_84 -> m2_87  [key=1, style=dashed, color=green, label=contract];
m2_84 -> m2_89  [key=1, style=dashed, color=green, label=contract];
m2_84 -> m2_81  [key=0, style=bold, color=blue];
m2_88 -> m2_89  [key=0, style=solid, color=green];
m2_88 -> m2_95  [key=2, style=dotted, color=green];
m2_88 -> m2_98  [key=1, style=dashed, color=green, label="lambda expression"];
m2_88 -> m2_11  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.AutofacContractResolver"];
m2_88 -> m2_14  [key=1, style=dashed, color=red, label="Newtonsoft.Json.Tests.Serialization.AutofacContractResolver"];
m2_88 -> m2_15  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.AutofacContractResolver"];
m2_88 -> m2_16  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.AutofacContractResolver"];
m2_88 -> m2_22  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.AutofacContractResolver"];
m2_90 -> m2_91  [key=0, style=solid];
m2_90 -> m2_96  [key=2, style=dotted];
m2_90 -> m2_97  [key=2, style=dotted];
m2_90 -> m2_50  [key=1, style=dashed, color=darkseagreen4, label=count];
m2_85 -> m2_86  [key=0, style=solid, color=green];
m2_85 -> m2_93  [key=2, style=dotted, color=green];
m2_85 -> m2_1  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.LogManager"];
m2_86 -> m2_87  [key=0, style=solid, color=green];
m2_86 -> m2_94  [key=2, style=dotted, color=green];
m2_86 -> m2_4  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.TaskController"];
m2_86 -> m2_5  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.TaskController"];
m2_87 -> m2_88  [key=0, style=solid, color=green];
m2_87 -> m2_94  [key=2, style=dotted, color=green];
m2_87 -> m2_8  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.HasSettableProperty"];
m2_89 -> m2_90  [key=0, style=solid, color=green];
m2_89 -> m2_22  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m2_91 -> m2_33  [key=2, style=dotted];
m2_91 -> m2_92  [key=0, style=solid];
m2_91 -> m2_77  [key=1, style=dashed, color=darkseagreen4, label=count];
m2_91 -> m2_82  [key=1, style=dashed, color=darkseagreen4, label=count];
m2_92 -> m2_82  [key=0, style=bold, color=blue];
m2_192 -> m2_193  [key=0, style=solid];
m2_194 -> m2_33  [key=2, style=dotted];
m2_194 -> m2_195  [key=0, style=solid];
m2_198 -> m2_33  [key=2, style=dotted];
m2_198 -> m2_199  [key=0, style=solid];
m2_193 -> m2_96  [key=2, style=dotted];
m2_193 -> m2_194  [key=0, style=solid];
m2_193 -> m2_186  [key=2, style=dotted];
m2_193 -> m2_187  [key=2, style=dotted];
m2_193 -> m2_188  [key=2, style=dotted];
m2_193 -> m2_195  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_195 -> m2_198  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_195 -> m2_196  [key=0, style=solid];
m2_195 -> m2_189  [key=2, style=dotted];
m2_195 -> m2_190  [key=2, style=dotted];
m2_195 -> m2_197  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_197 -> m2_198  [key=0, style=solid];
m2_197 -> m2_191  [key=2, style=dotted];
m2_196 -> m2_197  [key=0, style=solid];
m2_196 -> m2_191  [key=2, style=dotted];
m2_199 -> m2_192  [key=0, style=bold, color=blue];
m2_32 -> m2_33  [key=0, style=solid];
m2_32 -> m2_10  [key=2, style=dotted];
m2_125 -> m2_126  [key=0, style=solid];
m2_127 -> m2_32  [key=2, style=dotted];
m2_127 -> m2_128  [key=0, style=solid];
m2_127 -> m2_129  [key=1, style=dashed, color=darkseagreen4, label=contract];
m2_127 -> m2_130  [key=1, style=dashed, color=darkseagreen4, label=contract];
m2_132 -> m2_33  [key=2, style=dotted];
m2_132 -> m2_133  [key=0, style=solid];
m2_132 -> m2_81  [key=2, style=dotted];
m2_133 -> m2_33  [key=2, style=dotted];
m2_133 -> m2_134  [key=0, style=solid];
m2_134 -> m2_33  [key=2, style=dotted];
m2_134 -> m2_135  [key=0, style=solid];
m2_135 -> m2_33  [key=2, style=dotted];
m2_135 -> m2_136  [key=0, style=solid];
m2_136 -> m2_33  [key=2, style=dotted];
m2_136 -> m2_137  [key=0, style=solid];
m2_126 -> m2_31  [key=2, style=dotted];
m2_126 -> m2_127  [key=0, style=solid];
m2_126 -> m2_131  [key=1, style=dashed, color=darkseagreen4, label=resolver];
m2_128 -> m2_71  [key=2, style=dotted];
m2_128 -> m2_129  [key=0, style=solid];
m2_129 -> m2_72  [key=2, style=dotted];
m2_129 -> m2_130  [key=0, style=solid];
m2_131 -> m2_96  [key=2, style=dotted];
m2_131 -> m2_97  [key=2, style=dotted];
m2_131 -> m2_132  [key=0, style=solid];
m2_131 -> m2_133  [key=1, style=dashed, color=darkseagreen4, label=l];
m2_131 -> m2_134  [key=1, style=dashed, color=darkseagreen4, label=l];
m2_131 -> m2_135  [key=1, style=dashed, color=darkseagreen4, label=l];
m2_131 -> m2_136  [key=1, style=dashed, color=darkseagreen4, label=l];
m2_130 -> m2_131  [key=0, style=solid];
m2_137 -> m2_125  [key=0, style=bold, color=blue];
m2_7 -> m2_8  [key=0, style=solid];
m2_7 -> m2_3  [key=0, style=bold, color=blue];
m2_8 -> m2_9  [key=0, style=solid];
m2_350 -> m2_77  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ShouldSerializeProp1"];
m2_350 -> m2_351  [key=0, style=solid];
m2_351 -> m2_352  [key=0, style=solid];
m2_352 -> m2_350  [key=0, style=bold, color=blue];
m2_15 -> m2_16  [key=0, style=solid];
m2_15 -> m2_17  [key=0, style=solid, color=red];
m2_15 -> m2_20  [key=2, style=dotted];
m2_34 -> m2_35  [key=0, style=solid];
m2_34 -> m2_46  [key=2, style=dotted];
m2_36 -> m2_37  [key=0, style=solid, color=green];
m2_36 -> m2_32  [key=2, style=dotted, color=green];
m2_36 -> m2_47  [key=2, style=dotted];
m2_35 -> m2_36  [key=0, style=solid, color=green];
m2_35 -> m2_31  [key=2, style=dotted];
m2_35 -> m2_46  [key=2, style=dotted];
m2_37 -> m2_38  [key=0, style=solid, color=green];
m2_37 -> m2_33  [key=2, style=dotted, color=green];
m2_37 -> m2_48  [key=2, style=dotted];
m2_37 -> m2_47  [key=2, style=dotted];
m2_38 -> m2_34  [key=0, style=bold, color=blue];
m2_38 -> m2_39  [key=0, style=solid];
m2_38 -> m2_47  [key=2, style=dotted];
m2_291 -> m2_292  [key=0, style=solid];
m2_295 -> m2_33  [key=2, style=dotted];
m2_295 -> m2_296  [key=0, style=solid];
m2_296 -> m2_33  [key=2, style=dotted];
m2_296 -> m2_297  [key=0, style=solid];
m2_297 -> m2_33  [key=2, style=dotted];
m2_297 -> m2_298  [key=0, style=solid];
m2_297 -> m2_300  [key=2, style=dotted];
m2_293 -> m2_96  [key=2, style=dotted];
m2_293 -> m2_294  [key=0, style=solid];
m2_293 -> m2_301  [key=2, style=dotted];
m2_293 -> m2_302  [key=2, style=dotted];
m2_294 -> m2_295  [key=0, style=solid];
m2_294 -> m2_296  [key=1, style=dashed, color=darkseagreen4, label=o];
m2_294 -> m2_297  [key=1, style=dashed, color=darkseagreen4, label=o];
m2_294 -> m2_303  [key=2, style=dotted];
m2_292 -> m2_293  [key=0, style=solid];
m2_292 -> m2_300  [key=2, style=dotted];
m2_292 -> m2_299  [key=2, style=dotted];
m2_298 -> m2_291  [key=0, style=bold, color=blue];
m2_41 -> m2_42  [key=0, style=solid, color=green];
m2_41 -> m2_32  [key=2, style=dotted, color=green];
m2_245 -> m2_246  [key=0, style=solid];
m2_247 -> m2_32  [key=2, style=dotted];
m2_247 -> m2_248  [key=0, style=solid];
m2_246 -> m2_31  [key=2, style=dotted];
m2_246 -> m2_247  [key=0, style=solid];
m2_248 -> m2_93  [key=2, style=dotted];
m2_248 -> m2_249  [key=0, style=solid];
m2_248 -> m2_250  [key=2, style=dotted];
m2_248 -> m2_251  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_249 -> m2_245  [key=0, style=bold, color=blue];
m2_3 -> m2_4  [key=0, style=solid];
m2_3 -> m2_5  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.ILogger"];
m2_4 -> m2_5  [key=0, style=solid];
m2_4 -> m2_8  [key=2, style=dotted];
m2_5 -> m2_5  [key=1, style=dashed, color=darkseagreen4, label=properties];
m2_5 -> m2_6  [key=0, style=solid];
m2_5 -> m2_9  [key=2, style=dotted];
m2_5 -> m2_10  [key=2, style=dotted];
m2_5 -> m2_11  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_6 -> m2_7  [key=0, style=solid];
m2_6 -> m2_3  [key=0, style=bold, color=blue];
m2_40 -> m2_41  [key=0, style=solid, color=green];
m2_40 -> m2_31  [key=2, style=dotted, color=green];
m2_105 -> m2_106  [key=0, style=solid];
m2_107 -> m2_32  [key=2, style=dotted];
m2_107 -> m2_108  [key=0, style=solid];
m2_107 -> m2_109  [key=1, style=dashed, color=darkseagreen4, label=contract];
m2_107 -> m2_110  [key=1, style=dashed, color=darkseagreen4, label=contract];
m2_107 -> m2_112  [key=1, style=dashed, color=darkseagreen4, label=contract];
m2_114 -> m2_33  [key=2, style=dotted];
m2_114 -> m2_115  [key=0, style=solid];
m2_115 -> m2_33  [key=2, style=dotted];
m2_115 -> m2_116  [key=0, style=solid];
m2_116 -> m2_33  [key=2, style=dotted];
m2_116 -> m2_117  [key=0, style=solid];
m2_106 -> m2_31  [key=2, style=dotted];
m2_106 -> m2_107  [key=0, style=solid];
m2_106 -> m2_111  [key=1, style=dashed, color=darkseagreen4, label=resolver];
m2_106 -> m2_119  [key=1, style=dashed, color=darkseagreen4, label=resolver];
m2_106 -> m2_113  [key=1, style=dashed, color=darkseagreen4, label=resolver];
m2_111 -> m2_95  [key=2, style=dotted];
m2_111 -> m2_112  [key=0, style=solid];
m2_111 -> m2_118  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_113 -> m2_96  [key=2, style=dotted];
m2_113 -> m2_97  [key=2, style=dotted];
m2_113 -> m2_114  [key=0, style=solid];
m2_113 -> m2_115  [key=1, style=dashed, color=darkseagreen4, label=l];
m2_113 -> m2_116  [key=1, style=dashed, color=darkseagreen4, label=l];
m2_108 -> m2_93  [key=2, style=dotted];
m2_108 -> m2_109  [key=0, style=solid];
m2_110 -> m2_93  [key=2, style=dotted];
m2_110 -> m2_111  [key=0, style=solid];
m2_109 -> m2_94  [key=2, style=dotted];
m2_109 -> m2_110  [key=0, style=solid];
m2_112 -> m2_113  [key=0, style=solid];
m2_117 -> m2_105  [key=0, style=bold, color=blue];
m2_33 -> m2_34  [key=0, style=solid];
m2_33 -> m2_44  [key=2, style=dotted];
m2_33 -> m2_45  [key=2, style=dotted];
m2_33 -> m2_35  [key=1, style=dashed, color=darkseagreen4, label=controller];
m2_33 -> m2_37  [key=1, style=dashed, color=darkseagreen4, label=controller];
m2_33 -> m2_38  [key=1, style=dashed, color=darkseagreen4, label=controller];
m2_142 -> m2_143  [key=0, style=solid];
m2_144 -> m2_32  [key=2, style=dotted];
m2_144 -> m2_145  [key=0, style=solid];
m2_144 -> m2_146  [key=1, style=dashed, color=darkseagreen4, label=contract];
m2_144 -> m2_147  [key=1, style=dashed, color=darkseagreen4, label=contract];
m2_149 -> m2_33  [key=2, style=dotted];
m2_149 -> m2_150  [key=0, style=solid];
m2_149 -> m2_81  [key=2, style=dotted];
m2_150 -> m2_33  [key=2, style=dotted];
m2_150 -> m2_151  [key=0, style=solid];
m2_151 -> m2_33  [key=2, style=dotted];
m2_151 -> m2_152  [key=0, style=solid];
m2_152 -> m2_33  [key=2, style=dotted];
m2_152 -> m2_153  [key=0, style=solid];
m2_143 -> m2_31  [key=2, style=dotted];
m2_143 -> m2_144  [key=0, style=solid];
m2_143 -> m2_148  [key=1, style=dashed, color=darkseagreen4, label=resolver];
m2_145 -> m2_71  [key=2, style=dotted];
m2_145 -> m2_146  [key=0, style=solid];
m2_146 -> m2_72  [key=2, style=dotted];
m2_146 -> m2_147  [key=0, style=solid];
m2_148 -> m2_96  [key=2, style=dotted];
m2_148 -> m2_97  [key=2, style=dotted];
m2_148 -> m2_149  [key=0, style=solid];
m2_148 -> m2_150  [key=1, style=dashed, color=darkseagreen4, label=d];
m2_148 -> m2_151  [key=1, style=dashed, color=darkseagreen4, label=d];
m2_148 -> m2_152  [key=1, style=dashed, color=darkseagreen4, label=d];
m2_147 -> m2_148  [key=0, style=solid];
m2_153 -> m2_142  [key=0, style=bold, color=blue];
m2_75 -> m2_32  [key=2, style=dotted];
m2_75 -> m2_76  [key=0, style=solid];
m2_353 -> m2_354  [key=0, style=solid];
m2_356 -> m2_32  [key=2, style=dotted];
m2_356 -> m2_357  [key=0, style=solid];
m2_356 -> m2_359  [key=1, style=dashed, color=darkseagreen4, label=contract];
m2_358 -> m2_33  [key=2, style=dotted];
m2_358 -> m2_359  [key=0, style=solid];
m2_360 -> m2_33  [key=2, style=dotted];
m2_360 -> m2_361  [key=0, style=solid];
m2_354 -> m2_31  [key=2, style=dotted];
m2_354 -> m2_356  [key=1, style=dashed, color=darkseagreen4, label=resolver];
m2_354 -> m2_355  [key=0, style=solid];
m2_355 -> m2_356  [key=0, style=solid];
m2_357 -> m2_358  [key=0, style=solid];
m2_359 -> m2_360  [key=0, style=solid];
m2_361 -> m2_353  [key=0, style=bold, color=blue];
m2_240 -> m2_241  [key=0, style=solid];
m2_242 -> m2_32  [key=2, style=dotted];
m2_242 -> m2_243  [key=0, style=solid];
m2_243 -> m2_33  [key=2, style=dotted];
m2_243 -> m2_244  [key=0, style=solid];
m2_241 -> m2_31  [key=2, style=dotted];
m2_241 -> m2_242  [key=0, style=solid];
m2_244 -> m2_240  [key=0, style=bold, color=blue];
m2_11 -> m2_12  [key=0, style=solid];
m2_22 -> m2_23  [key=0, style=solid];
m2_22 -> m2_24  [key=2, style=dotted];
m2_21 -> m2_22  [key=0, style=solid];
m2_23 -> m2_21  [key=0, style=bold, color=blue];
m2_76 -> m2_77  [key=0, style=solid];
m2_76 -> m2_78  [key=1, style=dashed, color=darkseagreen4, label=property];
m2_77 -> m2_78  [key=0, style=solid];
m2_77 -> m2_77  [key=1, style=dashed, color=darkseagreen4, label=count];
m2_77 -> m2_79  [key=1, style=dashed, color=darkseagreen4, label=count];
m2_77 -> m2_33  [key=2, style=dotted];
m2_77 -> m2_80  [key=2, style=dotted];
m2_81 -> m2_82  [key=0, style=solid];
m2_78 -> m2_79  [key=0, style=solid];
m2_78 -> m2_80  [key=2, style=dotted];
m2_78 -> m2_33  [key=2, style=dotted];
m2_78 -> m2_81  [key=2, style=dotted];
m2_79 -> m2_76  [key=0, style=bold, color=blue];
m2_79 -> m2_73  [key=0, style=bold, color=blue];
m2_99 -> m2_100  [key=0, style=solid, color=green];
m2_99 -> m2_96  [key=2, style=dotted, color=green];
m2_99 -> m2_97  [key=2, style=dotted, color=green];
m2_98 -> m2_99  [key=0, style=solid, color=green];
m2_100 -> m2_98  [key=0, style=bold, color=blue];
m2_102 -> m2_103  [key=0, style=solid, color=green];
m2_102 -> m2_104  [key=2, style=dotted, color=green];
m2_101 -> m2_102  [key=0, style=solid, color=green];
m2_103 -> m2_101  [key=0, style=bold, color=blue];
m2_119 -> m2_96  [key=2, style=dotted];
m2_119 -> m2_97  [key=2, style=dotted];
m2_119 -> m2_120  [key=0, style=solid];
m2_172 -> m2_96  [key=2, style=dotted];
m2_172 -> m2_97  [key=2, style=dotted];
m2_172 -> m2_173  [key=0, style=solid];
m2_287 -> m2_284  [key=1, style=dashed, color=darkseagreen4, label=ensureCustomCreatorCalled];
m2_287 -> m2_288  [key=0, style=solid];
m2_287 -> m2_289  [key=1, style=dashed, color=darkseagreen4, label=ensureCustomCreatorCalled];
m2_118 -> m2_119  [key=0, style=solid];
m2_171 -> m2_172  [key=0, style=solid];
m2_120 -> m2_118  [key=0, style=bold, color=blue];
m2_173 -> m2_171  [key=0, style=bold, color=blue];
m2_251 -> m2_252  [key=0, style=solid];
m2_288 -> m2_289  [key=0, style=solid];
m2_288 -> m2_290  [key=2, style=dotted];
m2_286 -> m2_287  [key=0, style=solid];
m2_286 -> m2_288  [key=1, style=dashed, color=darkseagreen4, label="?"];
m2_289 -> m2_286  [key=0, style=bold, color=blue];
m2_344 -> m2_345  [key=0, style=solid];
m2_347 -> m2_348  [key=0, style=solid];
m2_253 -> m2_251  [key=0, style=bold, color=blue];
m2_252 -> m2_253  [key=0, style=solid];
m2_346 -> m2_344  [key=0, style=bold, color=blue];
m2_345 -> m2_346  [key=0, style=solid];
m2_345 -> m2_345  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<object, object>"];
m2_349 -> m2_347  [key=0, style=bold, color=blue];
m2_348 -> m2_349  [key=0, style=solid];
m2_348 -> m2_348  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<object, object>"];
m2_12 -> m2_13  [key=0, style=solid];
m2_12 -> m2_14  [key=2, style=dotted];
m2_12 -> m2_15  [key=2, style=dotted];
m2_12 -> m2_10  [key=0, style=bold, color=blue];
m2_13 -> m2_11  [key=0, style=bold, color=blue];
m2_13 -> m2_14  [key=0, style=solid, color=red];
m2_13 -> m2_15  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m2_13 -> m2_16  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m2_13 -> m2_22  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m2_304 -> m2_305  [key=0, style=solid];
m2_306 -> m2_96  [key=2, style=dotted];
m2_306 -> m2_307  [key=0, style=solid];
m2_306 -> m2_0  [key=2, style=dotted];
m2_306 -> m2_302  [key=2, style=dotted];
m2_306 -> m2_308  [key=1, style=dashed, color=darkseagreen4, label=startingWithA];
m2_307 -> m2_96  [key=2, style=dotted];
m2_307 -> m2_308  [key=0, style=solid];
m2_307 -> m2_0  [key=2, style=dotted];
m2_307 -> m2_302  [key=2, style=dotted];
m2_307 -> m2_309  [key=1, style=dashed, color=darkseagreen4, label=startingWithB];
m2_305 -> m2_306  [key=0, style=solid];
m2_305 -> m2_307  [key=1, style=dashed, color=darkseagreen4, label=book];
m2_305 -> m2_311  [key=2, style=dotted];
m2_308 -> m2_309  [key=0, style=solid];
m2_308 -> m2_312  [key=2, style=dotted];
m2_309 -> m2_310  [key=0, style=solid];
m2_309 -> m2_312  [key=2, style=dotted];
m2_310 -> m2_304  [key=0, style=bold, color=blue];
m2_42 -> m2_43  [key=0, style=solid, color=green];
m2_42 -> m2_33  [key=2, style=dotted, color=green];
m2_43 -> m2_39  [key=0, style=bold, color=blue];
m2_313 -> m2_314  [key=0, style=solid];
m2_322 -> m2_33  [key=2, style=dotted];
m2_322 -> m2_323  [key=0, style=solid];
m2_323 -> m2_33  [key=2, style=dotted];
m2_323 -> m2_324  [key=0, style=solid];
m2_315 -> m2_31  [key=2, style=dotted];
m2_315 -> m2_316  [key=0, style=solid];
m2_318 -> m2_31  [key=2, style=dotted];
m2_318 -> m2_319  [key=0, style=solid];
m2_316 -> m2_96  [key=2, style=dotted];
m2_316 -> m2_317  [key=0, style=solid];
m2_316 -> m2_302  [key=2, style=dotted];
m2_319 -> m2_96  [key=2, style=dotted];
m2_319 -> m2_320  [key=0, style=solid];
m2_319 -> m2_302  [key=2, style=dotted];
m2_319 -> m2_321  [key=1, style=dashed, color=darkseagreen4, label=includeCompilerGeneratedJson];
m2_320 -> m2_322  [key=1, style=dashed, color=darkseagreen4, label=o];
m2_320 -> m2_323  [key=1, style=dashed, color=darkseagreen4, label=o];
m2_320 -> m2_321  [key=0, style=solid];
m2_320 -> m2_303  [key=2, style=dotted];
m2_321 -> m2_322  [key=0, style=solid];
m2_321 -> m2_326  [key=2, style=dotted];
m2_314 -> m2_315  [key=0, style=solid];
m2_314 -> m2_316  [key=1, style=dashed, color=darkseagreen4, label=structTest];
m2_314 -> m2_319  [key=1, style=dashed, color=darkseagreen4, label=structTest];
m2_314 -> m2_325  [key=2, style=dotted];
m2_317 -> m2_318  [key=0, style=solid];
m2_317 -> m2_312  [key=2, style=dotted];
m2_324 -> m2_313  [key=0, style=bold, color=blue];
m2_178 -> m2_179  [key=0, style=solid];
m2_180 -> m2_33  [key=2, style=dotted];
m2_180 -> m2_181  [key=0, style=solid];
m2_184 -> m2_33  [key=2, style=dotted];
m2_184 -> m2_185  [key=0, style=solid];
m2_179 -> m2_96  [key=2, style=dotted];
m2_179 -> m2_180  [key=0, style=solid];
m2_179 -> m2_186  [key=2, style=dotted];
m2_179 -> m2_187  [key=2, style=dotted];
m2_179 -> m2_188  [key=2, style=dotted];
m2_179 -> m2_181  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_181 -> m2_184  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_181 -> m2_182  [key=0, style=solid];
m2_181 -> m2_189  [key=2, style=dotted];
m2_181 -> m2_190  [key=2, style=dotted];
m2_181 -> m2_183  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_183 -> m2_184  [key=0, style=solid];
m2_183 -> m2_191  [key=2, style=dotted];
m2_182 -> m2_183  [key=0, style=solid];
m2_182 -> m2_191  [key=2, style=dotted];
m2_185 -> m2_178  [key=0, style=bold, color=blue];
m2_395 -> m2_396  [key=0, style=solid];
m2_397 -> m2_32  [key=2, style=dotted];
m2_397 -> m2_398  [key=0, style=solid];
m2_397 -> m2_401  [key=1, style=dashed, color=darkseagreen4, label=contract];
m2_397 -> m2_404  [key=1, style=dashed, color=darkseagreen4, label=contract];
m2_397 -> m2_407  [key=1, style=dashed, color=darkseagreen4, label=contract];
m2_397 -> m2_410  [key=1, style=dashed, color=darkseagreen4, label=contract];
m2_405 -> m2_33  [key=2, style=dotted];
m2_405 -> m2_406  [key=0, style=solid];
m2_406 -> m2_33  [key=2, style=dotted];
m2_406 -> m2_407  [key=0, style=solid];
m2_408 -> m2_33  [key=2, style=dotted];
m2_408 -> m2_409  [key=0, style=solid];
m2_409 -> m2_33  [key=2, style=dotted];
m2_409 -> m2_410  [key=0, style=solid];
m2_411 -> m2_33  [key=2, style=dotted];
m2_411 -> m2_412  [key=0, style=solid];
m2_412 -> m2_33  [key=2, style=dotted];
m2_412 -> m2_413  [key=0, style=solid];
m2_396 -> m2_31  [key=2, style=dotted];
m2_396 -> m2_397  [key=0, style=solid];
m2_398 -> m2_399  [key=0, style=solid];
m2_398 -> m2_400  [key=1, style=dashed, color=darkseagreen4, label=property1];
m2_401 -> m2_402  [key=0, style=solid];
m2_401 -> m2_403  [key=1, style=dashed, color=darkseagreen4, label=property2];
m2_404 -> m2_405  [key=0, style=solid];
m2_404 -> m2_406  [key=1, style=dashed, color=darkseagreen4, label=property3];
m2_407 -> m2_408  [key=0, style=solid];
m2_407 -> m2_409  [key=1, style=dashed, color=darkseagreen4, label=property4];
m2_410 -> m2_411  [key=0, style=solid];
m2_410 -> m2_412  [key=1, style=dashed, color=darkseagreen4, label=property5];
m2_399 -> m2_400  [key=0, style=solid];
m2_399 -> m2_370  [key=2, style=dotted];
m2_400 -> m2_401  [key=0, style=solid];
m2_400 -> m2_370  [key=2, style=dotted];
m2_402 -> m2_403  [key=0, style=solid];
m2_402 -> m2_370  [key=2, style=dotted];
m2_403 -> m2_404  [key=0, style=solid];
m2_403 -> m2_370  [key=2, style=dotted];
m2_413 -> m2_395  [key=0, style=bold, color=blue];
m2_39 -> m2_40  [key=0, style=solid, color=green];
m2_39 -> m2_25  [key=0, style=bold, color=blue];
m2_375 -> m2_376  [key=0, style=solid];
m2_378 -> m2_32  [key=2, style=dotted];
m2_378 -> m2_379  [key=0, style=solid];
m2_378 -> m2_382  [key=1, style=dashed, color=darkseagreen4, label=contract];
m2_378 -> m2_385  [key=1, style=dashed, color=darkseagreen4, label=contract];
m2_378 -> m2_388  [key=1, style=dashed, color=darkseagreen4, label=contract];
m2_378 -> m2_391  [key=1, style=dashed, color=darkseagreen4, label=contract];
m2_380 -> m2_33  [key=2, style=dotted];
m2_380 -> m2_381  [key=0, style=solid];
m2_381 -> m2_33  [key=2, style=dotted];
m2_381 -> m2_382  [key=0, style=solid];
m2_383 -> m2_33  [key=2, style=dotted];
m2_383 -> m2_384  [key=0, style=solid];
m2_384 -> m2_33  [key=2, style=dotted];
m2_384 -> m2_385  [key=0, style=solid];
m2_386 -> m2_33  [key=2, style=dotted];
m2_386 -> m2_387  [key=0, style=solid];
m2_387 -> m2_33  [key=2, style=dotted];
m2_387 -> m2_388  [key=0, style=solid];
m2_389 -> m2_33  [key=2, style=dotted];
m2_389 -> m2_390  [key=0, style=solid];
m2_390 -> m2_33  [key=2, style=dotted];
m2_390 -> m2_391  [key=0, style=solid];
m2_392 -> m2_33  [key=2, style=dotted];
m2_392 -> m2_393  [key=0, style=solid];
m2_393 -> m2_33  [key=2, style=dotted];
m2_393 -> m2_394  [key=0, style=solid];
m2_376 -> m2_31  [key=2, style=dotted];
m2_376 -> m2_378  [key=1, style=dashed, color=darkseagreen4, label=resolver];
m2_376 -> m2_377  [key=0, style=solid];
m2_377 -> m2_378  [key=0, style=solid];
m2_379 -> m2_380  [key=0, style=solid];
m2_379 -> m2_381  [key=1, style=dashed, color=darkseagreen4, label=property1];
m2_382 -> m2_383  [key=0, style=solid];
m2_382 -> m2_384  [key=1, style=dashed, color=darkseagreen4, label=property2];
m2_385 -> m2_386  [key=0, style=solid];
m2_385 -> m2_387  [key=1, style=dashed, color=darkseagreen4, label=property3];
m2_388 -> m2_389  [key=0, style=solid];
m2_388 -> m2_390  [key=1, style=dashed, color=darkseagreen4, label=property4];
m2_391 -> m2_392  [key=0, style=solid];
m2_391 -> m2_393  [key=1, style=dashed, color=darkseagreen4, label=property5];
m2_394 -> m2_375  [key=0, style=bold, color=blue];
m2_275 -> m2_276  [key=0, style=solid];
m2_277 -> m2_32  [key=2, style=dotted];
m2_277 -> m2_278  [key=0, style=solid];
m2_277 -> m2_279  [key=1, style=dashed, color=darkseagreen4, label=contract];
m2_277 -> m2_280  [key=1, style=dashed, color=darkseagreen4, label=contract];
m2_282 -> m2_33  [key=2, style=dotted];
m2_282 -> m2_283  [key=0, style=solid];
m2_283 -> m2_33  [key=2, style=dotted];
m2_283 -> m2_284  [key=0, style=solid];
m2_276 -> m2_31  [key=2, style=dotted];
m2_276 -> m2_277  [key=0, style=solid];
m2_276 -> m2_281  [key=1, style=dashed, color=darkseagreen4, label=resolver];
m2_284 -> m2_71  [key=2, style=dotted];
m2_284 -> m2_285  [key=0, style=solid];
m2_280 -> m2_72  [key=2, style=dotted];
m2_280 -> m2_281  [key=0, style=solid];
m2_281 -> m2_96  [key=2, style=dotted];
m2_281 -> m2_97  [key=2, style=dotted];
m2_281 -> m2_282  [key=0, style=solid];
m2_281 -> m2_283  [key=1, style=dashed, color=darkseagreen4, label=o];
m2_278 -> m2_77  [key=3, color=darkorchid, style=bold, label="Local variable bool ensureCustomCreatorCalled"];
m2_278 -> m2_279  [key=0, style=solid];
m2_279 -> m2_280  [key=0, style=solid];
m2_279 -> m2_288  [key=1, style=dashed, color=darkseagreen4, label="?"];
m2_285 -> m2_275  [key=0, style=bold, color=blue];
m2_264 -> m2_265  [key=0, style=solid];
m2_266 -> m2_32  [key=2, style=dotted];
m2_266 -> m2_267  [key=0, style=solid];
m2_266 -> m2_268  [key=1, style=dashed, color=darkseagreen4, label=contract];
m2_266 -> m2_269  [key=1, style=dashed, color=darkseagreen4, label=contract];
m2_266 -> m2_270  [key=1, style=dashed, color=darkseagreen4, label=contract];
m2_266 -> m2_271  [key=1, style=dashed, color=darkseagreen4, label=contract];
m2_266 -> m2_272  [key=1, style=dashed, color=darkseagreen4, label=contract];
m2_266 -> m2_273  [key=1, style=dashed, color=darkseagreen4, label=contract];
m2_269 -> m2_33  [key=2, style=dotted];
m2_269 -> m2_270  [key=0, style=solid];
m2_270 -> m2_33  [key=2, style=dotted];
m2_270 -> m2_271  [key=0, style=solid];
m2_271 -> m2_33  [key=2, style=dotted];
m2_271 -> m2_272  [key=0, style=solid];
m2_265 -> m2_31  [key=2, style=dotted];
m2_265 -> m2_266  [key=0, style=solid];
m2_268 -> m2_72  [key=2, style=dotted];
m2_268 -> m2_269  [key=0, style=solid];
m2_267 -> m2_94  [key=2, style=dotted];
m2_267 -> m2_268  [key=0, style=solid];
m2_273 -> m2_94  [key=2, style=dotted];
m2_273 -> m2_274  [key=0, style=solid];
m2_272 -> m2_273  [key=0, style=solid];
m2_274 -> m2_264  [key=0, style=bold, color=blue];
m2_25 -> m2_26  [key=0, style=solid];
m2_16 -> m2_17  [key=0, style=solid, color=red];
m2_17 -> m2_18  [key=0, style=solid, color=red];
m2_18 -> m2_13  [key=0, style=bold, color=blue];
m2_417 -> m2_99  [key=1, style=dashed, color=green, label=resolver];
m2_418 -> m2_119  [key=1, style=dashed, color=darkseagreen4, label=resolver];
m2_419 -> m2_172  [key=1, style=dashed, color=darkseagreen4, label=resolver];
m2_414 -> m2_1  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.DynamicContractResolver"];
m2_414 -> m2_4  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.DynamicContractResolver"];
m2_414 -> m2_5  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.DynamicContractResolver"];
m2_414 -> m2_12  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.DynamicContractResolver"];
m3_213 -> m3_214  [key=0, style=solid];
m3_213 -> m3_215  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>[]"];
m3_213 -> m3_216  [key=1, style=dashed, color=darkseagreen4, label=int];
m3_213 -> m3_217  [key=1, style=dashed, color=darkseagreen4, label=int];
m3_213 -> m3_218  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>[]"];
m3_213 -> m3_220  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>[]"];
m3_213 -> m3_224  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>[]"];
m3_214 -> m3_215  [key=0, style=solid];
m3_214 -> m3_216  [key=0, style=solid];
m3_215 -> m3_226  [key=0, style=solid];
m3_215 -> m3_227  [key=2, style=dotted];
m3_215 -> m3_39  [key=2, style=dotted];
m3_216 -> m3_217  [key=0, style=solid];
m3_216 -> m3_218  [key=0, style=solid];
m3_217 -> m3_226  [key=0, style=solid];
m3_217 -> m3_228  [key=2, style=dotted];
m3_217 -> m3_39  [key=2, style=dotted];
m3_218 -> m3_219  [key=0, style=solid];
m3_218 -> m3_220  [key=0, style=solid];
m3_220 -> m3_221  [key=0, style=solid];
m3_220 -> m3_222  [key=0, style=solid];
m3_224 -> m3_225  [key=0, style=solid];
m3_224 -> m3_229  [key=2, style=dotted];
m3_219 -> m3_226  [key=0, style=solid];
m3_219 -> m3_41  [key=2, style=dotted];
m3_221 -> m3_226  [key=0, style=solid];
m3_221 -> m3_41  [key=2, style=dotted];
m3_222 -> m3_223  [key=0, style=solid];
m3_222 -> m3_224  [key=1, style=dashed, color=darkseagreen4, label=index];
m3_222 -> m3_225  [key=1, style=dashed, color=darkseagreen4, label=index];
m3_223 -> m3_224  [key=0, style=solid];
m3_223 -> m3_226  [key=0, style=solid];
m3_225 -> m3_223  [key=0, style=solid];
m3_225 -> m3_225  [key=1, style=dashed, color=darkseagreen4, label=index];
m3_226 -> m3_213  [key=0, style=bold, color=blue];
m3_203 -> m3_204  [key=0, style=solid];
m3_204 -> m3_205  [key=0, style=solid];
m3_204 -> m3_206  [key=2, style=dotted];
m3_205 -> m3_203  [key=0, style=bold, color=blue];
m3_48 -> m3_49  [key=0, style=solid];
m3_26 -> m3_26  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_26 -> m3_27  [key=0, style=solid];
m3_121 -> m3_122  [key=0, style=solid];
m3_122 -> m3_123  [key=0, style=solid];
m3_122 -> m3_124  [key=2, style=dotted];
m3_123 -> m3_121  [key=0, style=bold, color=blue];
m3_136 -> m3_137  [key=0, style=solid];
m3_137 -> m3_138  [key=0, style=solid];
m3_137 -> m3_142  [key=2, style=dotted];
m3_137 -> m3_139  [key=1, style=dashed, color=darkseagreen4, label=token];
m3_137 -> m3_140  [key=1, style=dashed, color=darkseagreen4, label=token];
m3_138 -> m3_139  [key=0, style=solid];
m3_138 -> m3_140  [key=0, style=solid];
m3_139 -> m3_141  [key=0, style=solid];
m3_139 -> m3_41  [key=2, style=dotted];
m3_139 -> m3_118  [key=2, style=dotted];
m3_140 -> m3_141  [key=0, style=solid];
m3_141 -> m3_136  [key=0, style=bold, color=blue];
m3_45 -> m3_46  [key=0, style=solid];
m3_4 -> m3_5  [key=0, style=solid];
m3_4 -> m3_6  [key=1, style=dashed, color=green, label=contract];
m3_4 -> m3_7  [key=1, style=dashed, color=green, label=contract];
m3_4 -> m3_9  [key=2, style=dotted];
m3_5 -> m3_4  [key=0, style=bold, color=blue];
m3_5 -> m3_6  [key=0, style=solid, color=green];
m3_5 -> m3_7  [key=0, style=solid, color=green];
m3_5 -> m3_10  [key=2, style=dotted];
m3_77 -> m3_78  [key=0, style=solid];
m3_78 -> m3_77  [key=0, style=bold, color=blue];
m3_6 -> m3_7  [key=0, style=solid, color=green];
m3_7 -> m3_8  [key=0, style=solid, color=green];
m3_7 -> m3_9  [key=2, style=dotted];
m3_8 -> m3_6  [key=0, style=bold, color=blue];
m3_8 -> m3_3  [key=0, style=bold, color=blue];
m3_38 -> m3_27  [key=0, style=bold, color=blue];
m3_63 -> m3_174  [key=0, style=solid];
m3_174 -> m3_175  [key=0, style=solid];
m3_174 -> m3_176  [key=2, style=dotted];
m3_174 -> m3_9  [key=2, style=dotted];
m3_175 -> m3_63  [key=0, style=bold, color=blue];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_0  [key=0, style=bold, color=blue];
m3_1 -> m3_2  [key=0, style=solid];
m3_99 -> m3_100  [key=0, style=solid];
m3_100 -> m3_101  [key=0, style=solid];
m3_100 -> m3_102  [key=2, style=dotted];
m3_101 -> m3_99  [key=0, style=bold, color=blue];
m3_102 -> m3_103  [key=0, style=solid];
m3_102 -> m3_104  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m3_102 -> m3_105  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m3_102 -> m3_106  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m3_102 -> m3_107  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m3_102 -> m3_108  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m3_102 -> m3_109  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m3_102 -> m3_111  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m3_102 -> m3_112  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m3_103 -> m3_104  [key=0, style=solid];
m3_103 -> m3_39  [key=2, style=dotted];
m3_103 -> m3_40  [key=2, style=dotted];
m3_104 -> m3_105  [key=0, style=solid];
m3_104 -> m3_107  [key=0, style=solid];
m3_105 -> m3_106  [key=0, style=solid];
m3_105 -> m3_107  [key=0, style=solid];
m3_105 -> m3_115  [key=2, style=dotted];
m3_106 -> m3_114  [key=0, style=solid];
m3_106 -> m3_116  [key=2, style=dotted];
m3_107 -> m3_108  [key=0, style=solid];
m3_107 -> m3_117  [key=2, style=dotted];
m3_108 -> m3_109  [key=0, style=solid];
m3_108 -> m3_110  [key=0, style=solid];
m3_109 -> m3_114  [key=0, style=solid];
m3_109 -> m3_118  [key=2, style=dotted];
m3_109 -> m3_116  [key=2, style=dotted];
m3_111 -> m3_112  [key=0, style=solid];
m3_111 -> m3_119  [key=2, style=dotted];
m3_112 -> m3_113  [key=0, style=solid];
m3_112 -> m3_120  [key=2, style=dotted];
m3_110 -> m3_111  [key=0, style=solid];
m3_110 -> m3_0  [key=2, style=dotted];
m3_110 -> m3_112  [key=1, style=dashed, color=darkseagreen4, label=o];
m3_110 -> m3_113  [key=1, style=dashed, color=darkseagreen4, label=o];
m3_113 -> m3_114  [key=0, style=solid];
m3_114 -> m3_102  [key=0, style=bold, color=blue];
m3_177 -> m3_178  [key=0, style=solid];
m3_177 -> m3_179  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_178 -> m3_179  [key=0, style=solid];
m3_178 -> m3_39  [key=2, style=dotted];
m3_178 -> m3_40  [key=2, style=dotted];
m3_179 -> m3_180  [key=0, style=solid];
m3_179 -> m3_181  [key=2, style=dotted];
m3_180 -> m3_177  [key=0, style=bold, color=blue];
m3_19 -> m3_20  [key=0, style=solid];
m3_19 -> m3_17  [key=0, style=bold, color=blue];
m3_25 -> m3_0  [key=2, style=dotted];
m3_25 -> m3_26  [key=0, style=solid];
m3_25 -> m3_27  [key=1, style=dashed, color=darkseagreen4, label=contractResolver];
m3_25 -> m3_21  [key=0, style=bold, color=blue];
m3_24 -> m3_25  [key=0, style=solid];
m3_24 -> m3_37  [key=2, style=dotted];
m3_24 -> m3_26  [key=2, style=dotted];
m3_27 -> m3_28  [key=0, style=solid];
m3_27 -> m3_38  [key=2, style=dotted];
m3_27 -> m3_39  [key=2, style=dotted];
m3_27 -> m3_29  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m3_27 -> m3_30  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m3_27 -> m3_31  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m3_27 -> m3_32  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m3_27 -> m3_33  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m3_20 -> m3_24  [key=1, style=dashed, color=darkseagreen4, label=builder];
m3_20 -> m3_21  [key=0, style=solid];
m3_20 -> m3_34  [key=2, style=dotted];
m3_20 -> m3_22  [key=1, style=dashed, color=darkseagreen4, label=builder];
m3_20 -> m3_23  [key=1, style=dashed, color=darkseagreen4, label=builder];
m3_23 -> m3_24  [key=0, style=solid];
m3_23 -> m3_36  [key=2, style=dotted];
m3_23 -> m3_35  [key=2, style=dotted];
m3_23 -> m3_45  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_23 -> m3_25  [key=0, style=solid];
m3_28 -> m3_29  [key=0, style=solid];
m3_28 -> m3_40  [key=2, style=dotted];
m3_28 -> m3_41  [key=2, style=dotted];
m3_28 -> m3_39  [key=2, style=dotted];
m3_29 -> m3_30  [key=0, style=solid];
m3_29 -> m3_42  [key=2, style=dotted];
m3_29 -> m3_31  [key=0, style=solid];
m3_30 -> m3_31  [key=0, style=solid];
m3_30 -> m3_42  [key=2, style=dotted];
m3_30 -> m3_38  [key=0, style=solid];
m3_30 -> m3_41  [key=2, style=dotted];
m3_30 -> m3_43  [key=2, style=dotted];
m3_31 -> m3_32  [key=0, style=solid];
m3_31 -> m3_43  [key=2, style=dotted];
m3_31 -> m3_44  [key=2, style=dotted];
m3_31 -> m3_34  [key=1, style=dashed, color=darkseagreen4, label=newProperty];
m3_31 -> m3_36  [key=1, style=dashed, color=darkseagreen4, label=newProperty];
m3_31 -> m3_37  [key=1, style=dashed, color=darkseagreen4, label=newProperty];
m3_32 -> m3_33  [key=0, style=solid];
m3_32 -> m3_44  [key=2, style=dotted];
m3_32 -> m3_36  [key=0, style=solid];
m3_21 -> m3_22  [key=0, style=solid];
m3_21 -> m3_35  [key=2, style=dotted];
m3_21 -> m3_24  [key=1, style=dashed, color=darkseagreen4, label=int];
m3_22 -> m3_23  [key=0, style=solid];
m3_22 -> m3_35  [key=2, style=dotted];
m3_22 -> m3_24  [key=0, style=solid];
m3_33 -> m3_19  [key=0, style=bold, color=blue];
m3_33 -> m3_34  [key=0, style=solid];
m3_182 -> m3_183  [key=0, style=solid];
m3_183 -> m3_184  [key=0, style=solid];
m3_183 -> m3_62  [key=2, style=dotted];
m3_183 -> m3_186  [key=1, style=dashed, color=darkseagreen4, label=property];
m3_184 -> m3_185  [key=0, style=solid];
m3_184 -> m3_186  [key=0, style=solid];
m3_186 -> m3_187  [key=0, style=solid];
m3_186 -> m3_189  [key=2, style=dotted];
m3_185 -> m3_188  [key=0, style=solid];
m3_187 -> m3_188  [key=0, style=solid];
m3_188 -> m3_182  [key=0, style=bold, color=blue];
m3_15 -> m3_16  [key=0, style=solid, color=green];
m3_15 -> m3_17  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Tests.Serialization.ILogger"];
m3_15 -> m3_14  [key=0, style=solid];
m3_16 -> m3_17  [key=0, style=solid, color=green];
m3_17 -> m3_18  [key=0, style=solid, color=green];
m3_18 -> m3_15  [key=0, style=bold, color=blue];
m3_18 -> m3_19  [key=0, style=solid];
m3_18 -> m3_20  [key=2, style=dotted];
m3_64 -> m3_66  [key=0, style=solid];
m3_64 -> m3_68  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m3_66 -> m3_67  [key=0, style=solid];
m3_66 -> m3_68  [key=0, style=solid];
m3_68 -> m3_69  [key=0, style=solid];
m3_68 -> m3_70  [key=0, style=solid];
m3_67 -> m3_71  [key=0, style=solid];
m3_69 -> m3_70  [key=0, style=solid];
m3_70 -> m3_71  [key=0, style=solid];
m3_72 -> m3_71  [key=0, style=solid];
m3_71 -> m3_64  [key=0, style=bold, color=blue];
m3_170 -> m3_171  [key=0, style=solid];
m3_171 -> m3_172  [key=0, style=solid];
m3_171 -> m3_157  [key=2, style=dotted];
m3_171 -> m3_173  [key=1, style=dashed, color=darkseagreen4, label="out Newtonsoft.Json.Linq.JToken"];
m3_172 -> m3_173  [key=0, style=solid];
m3_173 -> m3_170  [key=0, style=bold, color=blue];
m3_46 -> m3_47  [key=0, style=solid];
m3_46 -> m3_43  [key=2, style=dotted];
m3_46 -> m3_48  [key=2, style=dotted];
m3_47 -> m3_48  [key=0, style=solid];
m3_47 -> m3_49  [key=0, style=solid];
m3_47 -> m3_45  [key=0, style=bold, color=blue];
m3_49 -> m3_61  [key=0, style=solid];
m3_49 -> m3_6  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeWithDependencyInjection.AutofacContractResolver"];
m3_49 -> m3_12  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeWithDependencyInjection.AutofacContractResolver"];
m3_49 -> m3_1  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeWithDependencyInjection.AutofacContractResolver"];
m3_49 -> m3_4  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeWithDependencyInjection.AutofacContractResolver"];
m3_49 -> m3_5  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeWithDependencyInjection.AutofacContractResolver"];
m3_50 -> m3_51  [key=0, style=solid];
m3_50 -> m3_61  [key=0, style=solid];
m3_50 -> m3_12  [key=1, style=dashed, color=green, label="System.Type"];
m3_51 -> m3_52  [key=0, style=solid];
m3_51 -> m3_62  [key=2, style=dotted];
m3_51 -> m3_51  [key=1, style=dashed, color=darkseagreen4, label=contentItem];
m3_51 -> m3_53  [key=1, style=dashed, color=darkseagreen4, label=contentItem];
m3_51 -> m3_54  [key=1, style=dashed, color=darkseagreen4, label=contentItem];
m3_51 -> m3_55  [key=1, style=dashed, color=darkseagreen4, label=existingProperty];
m3_51 -> m3_59  [key=1, style=dashed, color=darkseagreen4, label=existingProperty];
m3_51 -> m3_16  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeWithDependencyInjection.TaskController"];
m3_51 -> m3_17  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeWithDependencyInjection.TaskController"];
m3_52 -> m3_53  [key=0, style=solid];
m3_52 -> m3_54  [key=0, style=solid];
m3_53 -> m3_50  [key=0, style=solid];
m3_53 -> m3_63  [key=2, style=dotted];
m3_53 -> m3_53  [key=1, style=dashed, color=darkseagreen4, label=contentItem];
m3_54 -> m3_55  [key=0, style=solid];
m3_54 -> m3_50  [key=0, style=solid];
m3_54 -> m3_54  [key=1, style=dashed, color=darkseagreen4, label=contentItem];
m3_54 -> m3_57  [key=1, style=dashed, color=darkseagreen4, label=contentItem];
m3_55 -> m3_56  [key=0, style=solid];
m3_55 -> m3_57  [key=0, style=solid];
m3_59 -> m3_60  [key=0, style=solid];
m3_59 -> m3_59  [key=1, style=dashed, color=darkseagreen4, label=contentItem];
m3_57 -> m3_58  [key=0, style=solid];
m3_57 -> m3_57  [key=1, style=dashed, color=darkseagreen4, label=contentItem];
m3_56 -> m3_57  [key=0, style=solid];
m3_58 -> m3_59  [key=0, style=solid];
m3_58 -> m3_60  [key=0, style=solid];
m3_58 -> m3_64  [key=2, style=dotted];
m3_58 -> m3_58  [key=1, style=dashed, color=darkseagreen4, label=contentItem];
m3_60 -> m3_50  [key=0, style=solid];
m3_60 -> m3_65  [key=2, style=dotted];
m3_60 -> m3_60  [key=1, style=dashed, color=darkseagreen4, label=contentItem];
m3_61 -> m3_46  [key=0, style=bold, color=blue];
m3_2 -> m3_3  [key=0, style=solid];
m3_2 -> m3_0  [key=0, style=bold, color=blue];
m3_3 -> m3_2  [key=0, style=bold, color=blue];
m3_3 -> m3_6  [key=1, style=dashed, color=green, label="System.Type"];
m3_3 -> m3_12  [key=1, style=dashed, color=green, label="System.Type"];
m3_3 -> m3_4  [key=0, style=solid];
m3_3 -> m3_5  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m3_35 -> m3_38  [key=0, style=solid];
m3_82 -> m3_83  [key=0, style=solid];
m3_83 -> m3_84  [key=0, style=solid];
m3_83 -> m3_85  [key=2, style=dotted];
m3_84 -> m3_82  [key=0, style=bold, color=blue];
m3_157 -> m3_158  [key=0, style=solid];
m3_157 -> m3_160  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_157 -> m3_163  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparison"];
m3_157 -> m3_165  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_158 -> m3_159  [key=0, style=solid];
m3_158 -> m3_160  [key=0, style=solid];
m3_160 -> m3_161  [key=0, style=solid];
m3_160 -> m3_62  [key=2, style=dotted];
m3_160 -> m3_162  [key=1, style=dashed, color=darkseagreen4, label=property];
m3_163 -> m3_164  [key=0, style=solid];
m3_163 -> m3_167  [key=0, style=solid];
m3_165 -> m3_166  [key=0, style=solid];
m3_165 -> m3_164  [key=0, style=solid];
m3_165 -> m3_169  [key=2, style=dotted];
m3_159 -> m3_168  [key=0, style=solid];
m3_161 -> m3_162  [key=0, style=solid];
m3_161 -> m3_163  [key=0, style=solid];
m3_162 -> m3_168  [key=0, style=solid];
m3_164 -> m3_165  [key=0, style=solid];
m3_164 -> m3_167  [key=0, style=solid];
m3_164 -> m3_166  [key=1, style=dashed, color=darkseagreen4, label=p];
m3_167 -> m3_168  [key=0, style=solid];
m3_166 -> m3_168  [key=0, style=solid];
m3_168 -> m3_157  [key=0, style=bold, color=blue];
m3_34 -> m3_35  [key=0, style=solid];
m3_34 -> m3_36  [key=0, style=solid];
m3_132 -> m3_133  [key=0, style=solid];
m3_133 -> m3_134  [key=0, style=solid];
m3_133 -> m3_135  [key=2, style=dotted];
m3_133 -> m3_136  [key=2, style=dotted];
m3_134 -> m3_132  [key=0, style=bold, color=blue];
m3_207 -> m3_208  [key=0, style=solid];
m3_208 -> m3_209  [key=0, style=solid];
m3_208 -> m3_62  [key=2, style=dotted];
m3_208 -> m3_208  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>"];
m3_208 -> m3_211  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>"];
m3_209 -> m3_210  [key=0, style=solid];
m3_209 -> m3_211  [key=0, style=solid];
m3_211 -> m3_212  [key=0, style=solid];
m3_211 -> m3_211  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>"];
m3_210 -> m3_212  [key=0, style=solid];
m3_212 -> m3_207  [key=0, style=bold, color=blue];
m3_198 -> m3_199  [key=0, style=solid];
m3_199 -> m3_198  [key=0, style=bold, color=blue];
m3_79 -> m3_80  [key=0, style=solid];
m3_80 -> m3_81  [key=0, style=solid];
m3_80 -> m3_2  [key=2, style=dotted];
m3_81 -> m3_79  [key=0, style=bold, color=blue];
m3_124 -> m3_125  [key=0, style=solid];
m3_124 -> m3_126  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JsonLoadSettings"];
m3_125 -> m3_126  [key=0, style=solid];
m3_125 -> m3_130  [key=2, style=dotted];
m3_125 -> m3_131  [key=2, style=dotted];
m3_125 -> m3_127  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_127  [key=0, style=solid];
m3_126 -> m3_102  [key=2, style=dotted];
m3_126 -> m3_128  [key=1, style=dashed, color=darkseagreen4, label=o];
m3_127 -> m3_127  [key=0, style=solid];
m3_127 -> m3_128  [key=0, style=solid];
m3_127 -> m3_115  [key=2, style=dotted];
m3_128 -> m3_129  [key=0, style=solid];
m3_129 -> m3_124  [key=0, style=bold, color=blue];
m3_190 -> m3_191  [key=0, style=solid];
m3_191 -> m3_192  [key=0, style=solid];
m3_191 -> m3_62  [key=2, style=dotted];
m3_191 -> m3_195  [key=1, style=dashed, color=darkseagreen4, label=property];
m3_192 -> m3_193  [key=0, style=solid];
m3_192 -> m3_195  [key=0, style=solid];
m3_195 -> m3_196  [key=0, style=solid];
m3_195 -> m3_197  [key=1, style=dashed, color=darkseagreen4, label="out Newtonsoft.Json.Linq.JToken"];
m3_193 -> m3_194  [key=0, style=solid];
m3_194 -> m3_197  [key=0, style=solid];
m3_196 -> m3_197  [key=0, style=solid];
m3_197 -> m3_190  [key=0, style=bold, color=blue];
m3_154 -> m3_155  [key=0, style=solid];
m3_155 -> m3_156  [key=0, style=solid];
m3_155 -> m3_157  [key=2, style=dotted];
m3_156 -> m3_154  [key=0, style=bold, color=blue];
m3_96 -> m3_97  [key=0, style=solid];
m3_97 -> m3_98  [key=0, style=solid];
m3_98 -> m3_96  [key=0, style=bold, color=blue];
m3_12 -> m3_13  [key=0, style=solid, color=green];
m3_12 -> m3_14  [key=2, style=dotted, color=green];
m3_11 -> m3_12  [key=0, style=solid, color=green];
m3_11 -> m3_13  [key=0, style=solid];
m3_13 -> m3_11  [key=0, style=bold, color=blue];
m3_13 -> m3_14  [key=0, style=solid];
m3_36 -> m3_37  [key=0, style=solid];
m3_36 -> m3_38  [key=0, style=solid];
m3_36 -> m3_44  [key=2, style=dotted];
m3_37 -> m3_38  [key=0, style=solid];
m3_37 -> m3_41  [key=2, style=dotted];
m3_37 -> m3_42  [key=2, style=dotted];
m3_37 -> m3_45  [key=2, style=dotted];
m3_10 -> m3_11  [key=0, style=solid];
m3_14 -> m3_10  [key=0, style=bold, color=blue];
m3_238 -> m3_239  [key=0, style=solid];
m3_239 -> m3_240  [key=0, style=solid];
m3_239 -> m3_241  [key=2, style=dotted];
m3_240 -> m3_238  [key=0, style=bold, color=blue];
m3_62 -> m3_86  [key=0, style=solid];
m3_62 -> m3_88  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_86 -> m3_87  [key=0, style=solid];
m3_86 -> m3_88  [key=0, style=solid];
m3_88 -> m3_89  [key=0, style=solid];
m3_88 -> m3_44  [key=2, style=dotted];
m3_87 -> m3_90  [key=0, style=solid];
m3_89 -> m3_90  [key=0, style=solid];
m3_90 -> m3_62  [key=0, style=bold, color=blue];
m3_242 -> m3_243  [key=0, style=solid];
m3_242 -> m3_244  [key=0, style=bold, color=crimson];
m3_243 -> m3_244  [key=0, style=solid];
m3_243 -> m3_245  [key=0, style=solid];
m3_244 -> m3_243  [key=0, style=solid];
m3_244 -> m3_229  [key=2, style=dotted];
m3_245 -> m3_242  [key=0, style=bold, color=blue];
m3_246 -> m3_247  [key=0, style=solid];
m3_247 -> m3_248  [key=0, style=solid];
m3_247 -> m3_249  [key=2, style=dotted];
m3_247 -> m3_250  [key=2, style=dotted];
m3_248 -> m3_246  [key=0, style=bold, color=blue];
m3_200 -> m3_201  [key=0, style=solid];
m3_201 -> m3_202  [key=0, style=solid];
m3_201 -> m3_176  [key=2, style=dotted];
m3_201 -> m3_9  [key=2, style=dotted];
m3_201 -> m3_201  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>"];
m3_202 -> m3_200  [key=0, style=bold, color=blue];
m3_73 -> m3_74  [key=0, style=solid];
m3_74 -> m3_75  [key=0, style=solid];
m3_74 -> m3_76  [key=2, style=dotted];
m3_75 -> m3_73  [key=0, style=bold, color=blue];
m3_143 -> m3_144  [key=0, style=solid];
m3_143 -> m3_147  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m3_143 -> m3_149  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m3_144 -> m3_145  [key=0, style=solid];
m3_144 -> m3_151  [key=2, style=dotted];
m3_147 -> m3_148  [key=0, style=solid];
m3_147 -> m3_152  [key=2, style=dotted];
m3_149 -> m3_150  [key=0, style=solid];
m3_149 -> m3_153  [key=2, style=dotted];
m3_145 -> m3_146  [key=0, style=solid];
m3_145 -> m3_147  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_145 -> m3_148  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_146 -> m3_147  [key=0, style=solid];
m3_146 -> m3_149  [key=0, style=solid];
m3_148 -> m3_146  [key=0, style=solid];
m3_148 -> m3_148  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_150 -> m3_143  [key=0, style=bold, color=blue];
m3_230 -> m3_231  [key=0, style=solid];
m3_230 -> m3_233  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>"];
m3_231 -> m3_232  [key=0, style=solid];
m3_231 -> m3_233  [key=0, style=solid];
m3_231 -> m3_236  [key=2, style=dotted];
m3_233 -> m3_234  [key=0, style=solid];
m3_233 -> m3_237  [key=2, style=dotted];
m3_233 -> m3_233  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>"];
m3_232 -> m3_235  [key=0, style=solid];
m3_234 -> m3_235  [key=0, style=solid];
m3_235 -> m3_230  [key=0, style=bold, color=blue];
m3_91 -> m3_92  [key=0, style=solid];
m3_92 -> m3_93  [key=0, style=solid];
m3_92 -> m3_94  [key=2, style=dotted];
m3_92 -> m3_82  [key=2, style=dotted];
m3_92 -> m3_95  [key=2, style=dotted];
m3_92 -> m3_96  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_93 -> m3_91  [key=0, style=bold, color=blue];
m3_251 -> m3_7  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JObject"];
m3_251 -> m3_18  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JObject"];
m3_251 -> m3_24  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JObject"];
m3_251 -> m3_30  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JObject"];
m3_251 -> m3_36  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JObject"];
m3_251 -> m3_37  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JObject"];
m3_251 -> m3_74  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JObject"];
m3_251 -> m3_80  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JObject"];
m3_251 -> m3_83  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JObject"];
m3_251 -> m3_88  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JObject"];
m3_251 -> m3_92  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JObject"];
m3_251 -> m3_146  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JObject"];
m3_251 -> m3_147  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JObject"];
m3_251 -> m3_155  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JObject"];
m3_251 -> m3_160  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JObject"];
m3_251 -> m3_164  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JObject"];
m3_251 -> m3_171  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JObject"];
m3_251 -> m3_174  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JObject"];
m3_251 -> m3_179  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JObject"];
m3_251 -> m3_183  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JObject"];
m3_251 -> m3_191  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JObject"];
m3_251 -> m3_201  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JObject"];
m3_251 -> m3_204  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JObject"];
m3_251 -> m3_208  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JObject"];
m3_251 -> m3_220  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JObject"];
m3_251 -> m3_223  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JObject"];
m3_251 -> m3_231  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JObject"];
m3_251 -> m3_233  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JObject"];
m3_251 -> m3_239  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JObject"];
m3_251 -> m3_243  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JObject"];
m3_251 -> m3_247  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JObject"];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_2  [key=0, style=solid];
m4_1 -> m4_1  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_2 -> m4_3  [key=0, style=solid];
m4_2 -> m4_8  [key=2, style=dotted];
m4_2 -> m4_9  [key=2, style=dotted];
m4_2 -> m4_4  [key=1, style=dashed, color=darkseagreen4, label=reader];
m4_2 -> m4_5  [key=1, style=dashed, color=darkseagreen4, label=reader];
m4_2 -> m4_6  [key=1, style=dashed, color=darkseagreen4, label=reader];
m4_3 -> m4_4  [key=0, style=solid];
m4_3 -> m4_7  [key=0, style=solid];
m4_3 -> m4_10  [key=2, style=dotted];
m4_4 -> m4_5  [key=0, style=solid];
m4_4 -> m4_6  [key=0, style=solid];
m4_5 -> m4_3  [key=0, style=solid];
m4_5 -> m4_11  [key=2, style=dotted];
m4_6 -> m4_3  [key=0, style=solid];
m4_6 -> m4_12  [key=2, style=dotted];
m4_7 -> m4_0  [key=0, style=bold, color=blue];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_2  [key=0, style=solid];
m5_1 -> m5_21  [key=2, style=dotted];
m5_1 -> m5_18  [key=1, style=dashed, color=darkseagreen4, label=sb];
m5_1 -> m5_19  [key=1, style=dashed, color=darkseagreen4, label=sb];
m5_2 -> m5_3  [key=0, style=solid];
m5_2 -> m5_22  [key=2, style=dotted];
m5_18 -> m5_19  [key=0, style=solid];
m5_18 -> m5_31  [key=2, style=dotted];
m5_18 -> m5_32  [key=2, style=dotted];
m5_19 -> m5_20  [key=0, style=solid];
m5_19 -> m5_31  [key=2, style=dotted];
m5_19 -> m5_33  [key=2, style=dotted];
m5_3 -> m5_4  [key=0, style=solid];
m5_3 -> m5_23  [key=2, style=dotted];
m5_3 -> m5_5  [key=1, style=dashed, color=darkseagreen4, label=writer];
m5_3 -> m5_6  [key=1, style=dashed, color=darkseagreen4, label=writer];
m5_3 -> m5_7  [key=1, style=dashed, color=darkseagreen4, label=writer];
m5_3 -> m5_8  [key=1, style=dashed, color=darkseagreen4, label=writer];
m5_3 -> m5_9  [key=1, style=dashed, color=darkseagreen4, label=writer];
m5_3 -> m5_10  [key=1, style=dashed, color=darkseagreen4, label=writer];
m5_3 -> m5_11  [key=1, style=dashed, color=darkseagreen4, label=writer];
m5_3 -> m5_12  [key=1, style=dashed, color=darkseagreen4, label=writer];
m5_3 -> m5_13  [key=1, style=dashed, color=darkseagreen4, label=writer];
m5_3 -> m5_14  [key=1, style=dashed, color=darkseagreen4, label=writer];
m5_3 -> m5_15  [key=1, style=dashed, color=darkseagreen4, label=writer];
m5_3 -> m5_16  [key=1, style=dashed, color=darkseagreen4, label=writer];
m5_3 -> m5_17  [key=1, style=dashed, color=darkseagreen4, label=writer];
m5_4 -> m5_5  [key=0, style=solid];
m5_5 -> m5_6  [key=0, style=solid];
m5_5 -> m5_24  [key=2, style=dotted];
m5_6 -> m5_7  [key=0, style=solid];
m5_6 -> m5_25  [key=2, style=dotted];
m5_7 -> m5_8  [key=0, style=solid];
m5_7 -> m5_26  [key=2, style=dotted];
m5_8 -> m5_9  [key=0, style=solid];
m5_8 -> m5_25  [key=2, style=dotted];
m5_9 -> m5_10  [key=0, style=solid];
m5_9 -> m5_26  [key=2, style=dotted];
m5_10 -> m5_11  [key=0, style=solid];
m5_10 -> m5_25  [key=2, style=dotted];
m5_11 -> m5_12  [key=0, style=solid];
m5_11 -> m5_27  [key=2, style=dotted];
m5_12 -> m5_13  [key=0, style=solid];
m5_12 -> m5_26  [key=2, style=dotted];
m5_13 -> m5_14  [key=0, style=solid];
m5_13 -> m5_28  [key=2, style=dotted];
m5_14 -> m5_15  [key=0, style=solid];
m5_14 -> m5_26  [key=2, style=dotted];
m5_15 -> m5_16  [key=0, style=solid];
m5_15 -> m5_26  [key=2, style=dotted];
m5_16 -> m5_17  [key=0, style=solid];
m5_16 -> m5_29  [key=2, style=dotted];
m5_17 -> m5_18  [key=0, style=solid];
m5_17 -> m5_30  [key=2, style=dotted];
m5_20 -> m5_0  [key=0, style=bold, color=blue];
m6_1276 -> m6_21  [key=3, color=darkorchid, style=bold, label="method methodReturn bool HasLineInfo"];
m6_1276 -> m6_1277  [key=0, style=solid];
m6_1277 -> m6_1278  [key=0, style=solid];
m6_1278 -> m6_1276  [key=0, style=bold, color=blue];
m6_138 -> m6_21  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Read"];
m6_138 -> m6_31  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Read"];
m6_138 -> m6_139  [key=0, style=solid];
m6_138 -> m6_170  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Read"];
m6_138 -> m6_171  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Read"];
m6_139 -> m6_140  [key=0, style=solid];
m6_139 -> m6_169  [key=2, style=dotted];
m6_141 -> m6_142  [key=0, style=solid];
m6_141 -> m6_149  [key=0, style=solid];
m6_141 -> m6_152  [key=0, style=solid];
m6_141 -> m6_155  [key=0, style=solid];
m6_141 -> m6_167  [key=0, style=solid];
m6_148 -> m6_168  [key=0, style=solid];
m6_148 -> m6_170  [key=2, style=dotted];
m6_151 -> m6_168  [key=0, style=solid];
m6_151 -> m6_171  [key=2, style=dotted];
m6_153 -> m6_154  [key=0, style=solid];
m6_153 -> m6_140  [key=0, style=solid];
m6_153 -> m6_172  [key=2, style=dotted];
m6_156 -> m6_157  [key=0, style=solid];
m6_156 -> m6_165  [key=0, style=solid];
m6_156 -> m6_120  [key=2, style=dotted];
m6_157 -> m6_158  [key=0, style=solid];
m6_157 -> m6_173  [key=2, style=dotted];
m6_158 -> m6_159  [key=0, style=solid];
m6_158 -> m6_161  [key=0, style=solid];
m6_159 -> m6_160  [key=0, style=solid];
m6_159 -> m6_174  [key=2, style=dotted];
m6_161 -> m6_162  [key=0, style=solid];
m6_161 -> m6_164  [key=0, style=solid];
m6_162 -> m6_163  [key=0, style=solid];
m6_162 -> m6_175  [key=2, style=dotted];
m6_164 -> m6_168  [key=0, style=solid];
m6_164 -> m6_176  [key=2, style=dotted];
m6_164 -> m6_177  [key=2, style=dotted];
m6_165 -> m6_166  [key=0, style=solid];
m6_165 -> m6_174  [key=2, style=dotted];
m6_167 -> m6_168  [key=0, style=solid];
m6_167 -> m6_176  [key=2, style=dotted];
m6_167 -> m6_177  [key=2, style=dotted];
m6_140 -> m6_141  [key=0, style=solid];
m6_140 -> m6_168  [key=0, style=solid];
m6_142 -> m6_143  [key=0, style=solid];
m6_149 -> m6_150  [key=0, style=solid];
m6_152 -> m6_153  [key=0, style=solid];
m6_155 -> m6_156  [key=0, style=solid];
m6_147 -> m6_148  [key=0, style=solid];
m6_150 -> m6_151  [key=0, style=solid];
m6_154 -> m6_168  [key=0, style=solid];
m6_160 -> m6_168  [key=0, style=solid];
m6_163 -> m6_168  [key=0, style=solid];
m6_166 -> m6_168  [key=0, style=solid];
m6_143 -> m6_144  [key=0, style=solid];
m6_146 -> m6_147  [key=0, style=solid];
m6_144 -> m6_145  [key=0, style=solid];
m6_145 -> m6_146  [key=0, style=solid];
m6_168 -> m6_138  [key=0, style=bold, color=blue];
m6_932 -> m6_963  [key=0, style=solid];
m6_963 -> m6_964  [key=0, style=solid];
m6_963 -> m6_997  [key=0, style=solid];
m6_963 -> m6_366  [key=2, style=dotted];
m6_964 -> m6_965  [key=0, style=solid];
m6_964 -> m6_173  [key=2, style=dotted];
m6_965 -> m6_966  [key=0, style=solid];
m6_965 -> m6_989  [key=1, style=dashed, color=darkseagreen4, label=initialPosition];
m6_968 -> m6_969  [key=0, style=solid];
m6_968 -> m6_975  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m6_968 -> m6_977  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m6_968 -> m6_980  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m6_968 -> m6_983  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m6_968 -> m6_986  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m6_968 -> m6_988  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m6_970 -> m6_971  [key=0, style=solid];
m6_970 -> m6_973  [key=0, style=solid];
m6_971 -> m6_972  [key=0, style=solid];
m6_971 -> m6_967  [key=0, style=solid];
m6_971 -> m6_83  [key=2, style=dotted];
m6_972 -> m6_998  [key=0, style=solid];
m6_972 -> m6_177  [key=2, style=dotted];
m6_973 -> m6_974  [key=0, style=solid];
m6_973 -> m6_989  [key=1, style=dashed, color=darkseagreen4, label=endPosition];
m6_974 -> m6_989  [key=0, style=solid];
m6_976 -> m6_967  [key=0, style=solid];
m6_978 -> m6_979  [key=0, style=solid];
m6_978 -> m6_989  [key=1, style=dashed, color=darkseagreen4, label=endPosition];
m6_979 -> m6_989  [key=0, style=solid];
m6_979 -> m6_261  [key=2, style=dotted];
m6_981 -> m6_982  [key=0, style=solid];
m6_981 -> m6_989  [key=1, style=dashed, color=darkseagreen4, label=endPosition];
m6_982 -> m6_989  [key=0, style=solid];
m6_982 -> m6_262  [key=2, style=dotted];
m6_984 -> m6_985  [key=0, style=solid];
m6_984 -> m6_989  [key=1, style=dashed, color=darkseagreen4, label=endPosition];
m6_985 -> m6_989  [key=0, style=solid];
m6_987 -> m6_989  [key=0, style=solid];
m6_988 -> m6_998  [key=0, style=solid];
m6_988 -> m6_176  [key=2, style=dotted];
m6_988 -> m6_177  [key=2, style=dotted];
m6_989 -> m6_990  [key=0, style=solid];
m6_989 -> m6_669  [key=2, style=dotted];
m6_990 -> m6_991  [key=0, style=solid];
m6_990 -> m6_61  [key=2, style=dotted];
m6_990 -> m6_996  [key=1, style=dashed, color=darkseagreen4, label=constructorName];
m6_991 -> m6_992  [key=0, style=solid];
m6_991 -> m6_173  [key=2, style=dotted];
m6_992 -> m6_993  [key=0, style=solid];
m6_992 -> m6_994  [key=0, style=solid];
m6_993 -> m6_998  [key=0, style=solid];
m6_993 -> m6_176  [key=2, style=dotted];
m6_993 -> m6_177  [key=2, style=dotted];
m6_994 -> m6_995  [key=0, style=solid];
m6_995 -> m6_996  [key=0, style=solid];
m6_995 -> m6_730  [key=2, style=dotted];
m6_996 -> m6_998  [key=0, style=solid];
m6_996 -> m6_367  [key=2, style=dotted];
m6_997 -> m6_998  [key=0, style=solid];
m6_997 -> m6_177  [key=2, style=dotted];
m6_966 -> m6_989  [key=1, style=dashed, color=darkseagreen4, label=endPosition];
m6_966 -> m6_967  [key=0, style=solid];
m6_967 -> m6_968  [key=0, style=solid];
m6_967 -> m6_989  [key=0, style=solid];
m6_969 -> m6_970  [key=0, style=solid];
m6_969 -> m6_975  [key=0, style=solid];
m6_975 -> m6_976  [key=0, style=solid];
m6_975 -> m6_977  [key=0, style=solid];
m6_975 -> m6_833  [key=2, style=dotted];
m6_977 -> m6_978  [key=0, style=solid];
m6_977 -> m6_980  [key=0, style=solid];
m6_980 -> m6_981  [key=0, style=solid];
m6_980 -> m6_983  [key=0, style=solid];
m6_983 -> m6_984  [key=0, style=solid];
m6_983 -> m6_986  [key=0, style=solid];
m6_983 -> m6_263  [key=2, style=dotted];
m6_986 -> m6_987  [key=0, style=solid];
m6_986 -> m6_988  [key=0, style=solid];
m6_998 -> m6_932  [key=0, style=bold, color=blue];
m6_556 -> m6_1213  [key=0, style=solid];
m6_1213 -> m6_1214  [key=0, style=solid];
m6_1213 -> m6_1215  [key=0, style=solid];
m6_1213 -> m6_366  [key=2, style=dotted];
m6_1214 -> m6_1216  [key=0, style=solid];
m6_1214 -> m6_174  [key=2, style=dotted];
m6_1215 -> m6_1216  [key=0, style=solid];
m6_1215 -> m6_177  [key=2, style=dotted];
m6_1216 -> m6_556  [key=0, style=bold, color=blue];
m6_83 -> m6_21  [key=3, color=darkorchid, style=bold, label="Parameter variable bool append"];
m6_83 -> m6_31  [key=3, color=darkorchid, style=bold, label="Parameter variable bool append"];
m6_83 -> m6_84  [key=0, style=solid];
m6_83 -> m6_86  [key=3, color=darkorchid, style=bold, label="method methodReturn int ReadData"];
m6_84 -> m6_85  [key=0, style=solid];
m6_84 -> m6_86  [key=2, style=dotted];
m6_85 -> m6_83  [key=0, style=bold, color=blue];
m6_364 -> m6_205  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.ReadType readType"];
m6_364 -> m6_1225  [key=0, style=solid];
m6_364 -> m6_1230  [key=3, color=darkorchid, style=bold, label="method methodReturn object ParseNumberNegativeInfinity"];
m6_364 -> m6_181  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.ReadType readType"];
m6_364 -> m6_185  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.ReadType readType"];
m6_364 -> m6_1226  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.ReadType"];
m6_1225 -> m6_1226  [key=0, style=solid];
m6_1225 -> m6_1236  [key=0, style=solid];
m6_1225 -> m6_366  [key=2, style=dotted];
m6_1229 -> m6_1230  [key=0, style=solid];
m6_1229 -> m6_1235  [key=0, style=solid];
m6_1230 -> m6_1231  [key=0, style=solid];
m6_1230 -> m6_367  [key=2, style=dotted];
m6_1233 -> m6_1234  [key=0, style=solid];
m6_1233 -> m6_367  [key=2, style=dotted];
m6_1235 -> m6_1237  [key=0, style=solid];
m6_1235 -> m6_177  [key=2, style=dotted];
m6_1236 -> m6_1237  [key=0, style=solid];
m6_1236 -> m6_177  [key=2, style=dotted];
m6_1226 -> m6_1227  [key=0, style=solid];
m6_1226 -> m6_1232  [key=0, style=solid];
m6_1228 -> m6_1229  [key=0, style=solid];
m6_1231 -> m6_1237  [key=0, style=solid];
m6_1232 -> m6_1233  [key=0, style=solid];
m6_1234 -> m6_1237  [key=0, style=solid];
m6_1227 -> m6_1228  [key=0, style=solid];
m6_1237 -> m6_364  [key=0, style=bold, color=blue];
m6_186 -> m6_187  [key=0, style=solid];
m6_186 -> m6_185  [key=3, color=darkorchid, style=bold, label="method methodReturn string ReadAsString"];
m6_187 -> m6_188  [key=0, style=solid];
m6_187 -> m6_185  [key=2, style=dotted];
m6_188 -> m6_186  [key=0, style=bold, color=blue];
m6_17 -> m6_18  [key=0, style=solid];
m6_17 -> m6_20  [key=1, style=dashed, color=darkseagreen4, label=char];
m6_17 -> m6_35  [key=1, style=dashed, color=darkseagreen4, label=char];
m6_17 -> m6_56  [key=1, style=dashed, color=darkseagreen4, label=char];
m6_17 -> m6_201  [key=3, color=darkorchid, style=bold, label="Parameter variable char quote"];
m6_17 -> m6_205  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.ReadType readType"];
m6_17 -> m6_275  [key=3, color=darkorchid, style=bold, label="Parameter variable char quote"];
m6_17 -> m6_383  [key=3, color=darkorchid, style=bold, label="Parameter variable char quote"];
m6_17 -> m6_467  [key=3, color=darkorchid, style=bold, label="Parameter variable char quote"];
m6_17 -> m6_852  [key=3, color=darkorchid, style=bold, label="Parameter variable char quote"];
m6_17 -> m6_22  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.ReadType"];
m6_17 -> m6_41  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.ReadType"];
m6_17 -> m6_43  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.ReadType"];
m6_17 -> m6_69  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.ReadType readType"];
m6_17 -> m6_185  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.ReadType readType"];
m6_17 -> m6_181  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.ReadType readType"];
m6_18 -> m6_19  [key=0, style=solid];
m6_19 -> m6_20  [key=0, style=solid];
m6_19 -> m6_58  [key=2, style=dotted];
m6_20 -> m6_21  [key=0, style=solid];
m6_20 -> m6_59  [key=2, style=dotted];
m6_21 -> m6_22  [key=0, style=solid];
m6_21 -> m6_60  [key=2, style=dotted];
m6_26 -> m6_27  [key=0, style=solid];
m6_26 -> m6_28  [key=0, style=solid];
m6_28 -> m6_29  [key=0, style=solid];
m6_28 -> m6_30  [key=0, style=solid];
m6_28 -> m6_61  [key=2, style=dotted];
m6_28 -> m6_62  [key=2, style=dotted];
m6_30 -> m6_31  [key=0, style=solid];
m6_30 -> m6_64  [key=2, style=dotted];
m6_31 -> m6_57  [key=0, style=solid];
m6_31 -> m6_65  [key=2, style=dotted];
m6_33 -> m6_34  [key=0, style=solid];
m6_33 -> m6_61  [key=2, style=dotted];
m6_34 -> m6_35  [key=0, style=solid];
m6_34 -> m6_65  [key=2, style=dotted];
m6_35 -> m6_57  [key=0, style=solid];
m6_39 -> m6_40  [key=0, style=solid];
m6_39 -> m6_55  [key=0, style=solid];
m6_45 -> m6_46  [key=0, style=solid];
m6_48 -> m6_49  [key=0, style=solid];
m6_48 -> m6_55  [key=0, style=solid];
m6_48 -> m6_66  [key=2, style=dotted];
m6_49 -> m6_50  [key=0, style=solid];
m6_49 -> m6_65  [key=2, style=dotted];
m6_52 -> m6_53  [key=0, style=solid];
m6_52 -> m6_55  [key=0, style=solid];
m6_52 -> m6_67  [key=2, style=dotted];
m6_53 -> m6_54  [key=0, style=solid];
m6_53 -> m6_65  [key=2, style=dotted];
m6_55 -> m6_56  [key=0, style=solid];
m6_55 -> m6_61  [key=2, style=dotted];
m6_55 -> m6_65  [key=2, style=dotted];
m6_56 -> m6_57  [key=0, style=solid];
m6_22 -> m6_39  [key=0, style=solid];
m6_22 -> m6_23  [key=0, style=solid];
m6_22 -> m6_32  [key=0, style=solid];
m6_22 -> m6_36  [key=0, style=solid];
m6_25 -> m6_26  [key=0, style=solid];
m6_27 -> m6_31  [key=0, style=solid];
m6_29 -> m6_31  [key=0, style=solid];
m6_29 -> m6_29  [key=1, style=dashed, color=darkseagreen4, label=g];
m6_29 -> m6_63  [key=2, style=dotted];
m6_32 -> m6_33  [key=0, style=solid];
m6_40 -> m6_41  [key=0, style=solid];
m6_43 -> m6_45  [key=0, style=solid];
m6_43 -> m6_44  [key=0, style=solid];
m6_46 -> m6_47  [key=0, style=solid];
m6_46 -> m6_51  [key=0, style=solid];
m6_47 -> m6_48  [key=0, style=solid];
m6_50 -> m6_57  [key=0, style=solid];
m6_51 -> m6_52  [key=0, style=solid];
m6_54 -> m6_57  [key=0, style=solid];
m6_41 -> m6_43  [key=0, style=solid];
m6_41 -> m6_42  [key=0, style=solid];
m6_23 -> m6_24  [key=0, style=solid];
m6_36 -> m6_37  [key=0, style=solid];
m6_24 -> m6_25  [key=0, style=solid];
m6_38 -> m6_57  [key=0, style=solid];
m6_44 -> m6_46  [key=0, style=solid];
m6_42 -> m6_46  [key=0, style=solid];
m6_37 -> m6_38  [key=0, style=solid];
m6_57 -> m6_17  [key=0, style=bold, color=blue];
m6_181 -> m6_205  [key=3, color=darkorchid, style=bold, label="method methodReturn object ReadNumberValue"];
m6_181 -> m6_299  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.ReadType readType"];
m6_181 -> m6_457  [key=0, style=solid];
m6_181 -> m6_475  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.ReadType"];
m6_181 -> m6_488  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.ReadType"];
m6_181 -> m6_490  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.ReadType"];
m6_181 -> m6_493  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.ReadType"];
m6_181 -> m6_494  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.ReadType"];
m6_181 -> m6_507  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.ReadType"];
m6_181 -> m6_544  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.ReadType readType"];
m6_181 -> m6_677  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.ReadType readType"];
m6_181 -> m6_476  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.ReadType"];
m6_181 -> m6_483  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.ReadType"];
m6_181 -> m6_369  [key=3, color=darkorchid, style=bold, label="method methodReturn object ReadNumberValue"];
m6_181 -> m6_368  [key=3, color=darkorchid, style=bold, label="method methodReturn object ReadNumberValue"];
m6_181 -> m6_364  [key=3, color=darkorchid, style=bold, label="method methodReturn object ReadNumberValue"];
m6_457 -> m6_458  [key=0, style=solid];
m6_457 -> m6_169  [key=2, style=dotted];
m6_458 -> m6_459  [key=0, style=solid];
m6_458 -> m6_529  [key=0, style=solid];
m6_458 -> m6_532  [key=0, style=solid];
m6_467 -> m6_468  [key=0, style=solid];
m6_467 -> m6_475  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m6_467 -> m6_518  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m6_467 -> m6_527  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m6_467 -> m6_528  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m6_470 -> m6_471  [key=0, style=solid];
m6_470 -> m6_466  [key=0, style=solid];
m6_470 -> m6_254  [key=2, style=dotted];
m6_471 -> m6_472  [key=0, style=solid];
m6_471 -> m6_65  [key=2, style=dotted];
m6_475 -> m6_476  [key=0, style=solid];
m6_475 -> m6_17  [key=2, style=dotted];
m6_478 -> m6_533  [key=0, style=solid];
m6_478 -> m6_61  [key=2, style=dotted];
m6_478 -> m6_534  [key=2, style=dotted];
m6_480 -> m6_533  [key=0, style=solid];
m6_480 -> m6_61  [key=2, style=dotted];
m6_480 -> m6_535  [key=2, style=dotted];
m6_482 -> m6_533  [key=0, style=solid];
m6_482 -> m6_61  [key=2, style=dotted];
m6_482 -> m6_536  [key=2, style=dotted];
m6_485 -> m6_486  [key=0, style=solid];
m6_485 -> m6_258  [key=2, style=dotted];
m6_488 -> m6_533  [key=0, style=solid];
m6_488 -> m6_369  [key=2, style=dotted];
m6_490 -> m6_533  [key=0, style=solid];
m6_490 -> m6_368  [key=2, style=dotted];
m6_492 -> m6_493  [key=0, style=solid];
m6_492 -> m6_494  [key=0, style=solid];
m6_492 -> m6_120  [key=2, style=dotted];
m6_493 -> m6_533  [key=0, style=solid];
m6_493 -> m6_364  [key=2, style=dotted];
m6_494 -> m6_495  [key=0, style=solid];
m6_494 -> m6_365  [key=2, style=dotted];
m6_495 -> m6_533  [key=0, style=solid];
m6_507 -> m6_508  [key=0, style=solid];
m6_507 -> m6_365  [key=2, style=dotted];
m6_508 -> m6_533  [key=0, style=solid];
m6_510 -> m6_466  [key=0, style=solid];
m6_510 -> m6_175  [key=2, style=dotted];
m6_512 -> m6_466  [key=0, style=solid];
m6_512 -> m6_259  [key=2, style=dotted];
m6_514 -> m6_515  [key=0, style=solid];
m6_515 -> m6_516  [key=0, style=solid];
m6_515 -> m6_518  [key=0, style=solid];
m6_516 -> m6_517  [key=0, style=solid];
m6_516 -> m6_174  [key=2, style=dotted];
m6_518 -> m6_533  [key=0, style=solid];
m6_518 -> m6_260  [key=2, style=dotted];
m6_520 -> m6_466  [key=0, style=solid];
m6_520 -> m6_261  [key=2, style=dotted];
m6_522 -> m6_466  [key=0, style=solid];
m6_522 -> m6_262  [key=2, style=dotted];
m6_525 -> m6_466  [key=0, style=solid];
m6_526 -> m6_527  [key=0, style=solid];
m6_528 -> m6_533  [key=0, style=solid];
m6_528 -> m6_260  [key=2, style=dotted];
m6_530 -> m6_531  [key=0, style=solid];
m6_530 -> m6_264  [key=2, style=dotted];
m6_532 -> m6_533  [key=0, style=solid];
m6_532 -> m6_176  [key=2, style=dotted];
m6_532 -> m6_177  [key=2, style=dotted];
m6_459 -> m6_460  [key=0, style=solid];
m6_529 -> m6_530  [key=0, style=solid];
m6_466 -> m6_467  [key=0, style=solid];
m6_466 -> m6_529  [key=0, style=solid];
m6_468 -> m6_526  [key=0, style=solid];
m6_468 -> m6_469  [key=0, style=solid];
m6_468 -> m6_473  [key=0, style=solid];
m6_468 -> m6_484  [key=0, style=solid];
m6_468 -> m6_487  [key=0, style=solid];
m6_468 -> m6_489  [key=0, style=solid];
m6_468 -> m6_491  [key=0, style=solid];
m6_468 -> m6_496  [key=0, style=solid];
m6_468 -> m6_509  [key=0, style=solid];
m6_468 -> m6_511  [key=0, style=solid];
m6_468 -> m6_513  [key=0, style=solid];
m6_468 -> m6_519  [key=0, style=solid];
m6_468 -> m6_521  [key=0, style=solid];
m6_468 -> m6_523  [key=0, style=solid];
m6_527 -> m6_528  [key=0, style=solid];
m6_527 -> m6_466  [key=0, style=solid];
m6_527 -> m6_263  [key=2, style=dotted];
m6_469 -> m6_470  [key=0, style=solid];
m6_472 -> m6_533  [key=0, style=solid];
m6_474 -> m6_475  [key=0, style=solid];
m6_476 -> m6_477  [key=0, style=solid];
m6_476 -> m6_479  [key=0, style=solid];
m6_476 -> m6_481  [key=0, style=solid];
m6_476 -> m6_483  [key=0, style=solid];
m6_477 -> m6_478  [key=0, style=solid];
m6_479 -> m6_480  [key=0, style=solid];
m6_481 -> m6_482  [key=0, style=solid];
m6_484 -> m6_485  [key=0, style=solid];
m6_486 -> m6_533  [key=0, style=solid];
m6_487 -> m6_488  [key=0, style=solid];
m6_489 -> m6_490  [key=0, style=solid];
m6_491 -> m6_492  [key=0, style=solid];
m6_506 -> m6_507  [key=0, style=solid];
m6_509 -> m6_510  [key=0, style=solid];
m6_511 -> m6_512  [key=0, style=solid];
m6_513 -> m6_514  [key=0, style=solid];
m6_517 -> m6_533  [key=0, style=solid];
m6_519 -> m6_520  [key=0, style=solid];
m6_521 -> m6_522  [key=0, style=solid];
m6_524 -> m6_525  [key=0, style=solid];
m6_531 -> m6_533  [key=0, style=solid];
m6_483 -> m6_533  [key=0, style=solid];
m6_483 -> m6_363  [key=2, style=dotted];
m6_483 -> m6_7  [key=2, style=dotted];
m6_460 -> m6_461  [key=0, style=solid];
m6_465 -> m6_466  [key=0, style=solid];
m6_473 -> m6_474  [key=0, style=solid];
m6_496 -> m6_497  [key=0, style=solid];
m6_523 -> m6_524  [key=0, style=solid];
m6_505 -> m6_506  [key=0, style=solid];
m6_461 -> m6_462  [key=0, style=solid];
m6_464 -> m6_465  [key=0, style=solid];
m6_497 -> m6_498  [key=0, style=solid];
m6_504 -> m6_505  [key=0, style=solid];
m6_462 -> m6_463  [key=0, style=solid];
m6_463 -> m6_464  [key=0, style=solid];
m6_498 -> m6_499  [key=0, style=solid];
m6_503 -> m6_504  [key=0, style=solid];
m6_499 -> m6_500  [key=0, style=solid];
m6_502 -> m6_503  [key=0, style=solid];
m6_500 -> m6_501  [key=0, style=solid];
m6_501 -> m6_502  [key=0, style=solid];
m6_533 -> m6_181  [key=0, style=bold, color=blue];
m6_829 -> m6_834  [key=0, style=solid];
m6_834 -> m6_835  [key=0, style=solid];
m6_834 -> m6_841  [key=1, style=dashed, color=darkseagreen4, label=initialPosition];
m6_834 -> m6_847  [key=1, style=dashed, color=darkseagreen4, label=initialPosition];
m6_836 -> m6_837  [key=0, style=solid];
m6_836 -> m6_843  [key=0, style=solid];
m6_838 -> m6_839  [key=0, style=solid];
m6_838 -> m6_841  [key=0, style=solid];
m6_839 -> m6_840  [key=0, style=solid];
m6_839 -> m6_835  [key=0, style=solid];
m6_839 -> m6_83  [key=2, style=dotted];
m6_840 -> m6_850  [key=0, style=solid];
m6_840 -> m6_177  [key=2, style=dotted];
m6_841 -> m6_842  [key=0, style=solid];
m6_841 -> m6_669  [key=2, style=dotted];
m6_843 -> m6_844  [key=0, style=solid];
m6_843 -> m6_846  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m6_843 -> m6_849  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m6_844 -> m6_845  [key=0, style=solid];
m6_844 -> m6_846  [key=0, style=solid];
m6_844 -> m6_828  [key=2, style=dotted];
m6_845 -> m6_835  [key=0, style=solid];
m6_847 -> m6_848  [key=0, style=solid];
m6_847 -> m6_669  [key=2, style=dotted];
m6_849 -> m6_850  [key=0, style=solid];
m6_849 -> m6_176  [key=2, style=dotted];
m6_849 -> m6_177  [key=2, style=dotted];
m6_835 -> m6_836  [key=0, style=solid];
m6_835 -> m6_850  [key=0, style=solid];
m6_837 -> m6_838  [key=0, style=solid];
m6_842 -> m6_850  [key=0, style=solid];
m6_846 -> m6_847  [key=0, style=solid];
m6_846 -> m6_849  [key=0, style=solid];
m6_846 -> m6_263  [key=2, style=dotted];
m6_848 -> m6_850  [key=0, style=solid];
m6_850 -> m6_829  [key=0, style=bold, color=blue];
m6_1264 -> m6_1265  [key=0, style=solid];
m6_1265 -> m6_1266  [key=0, style=solid];
m6_1265 -> m6_1273  [key=2, style=dotted];
m6_1266 -> m6_1267  [key=0, style=solid];
m6_1266 -> m6_1269  [key=0, style=solid];
m6_1267 -> m6_1268  [key=0, style=solid];
m6_1267 -> m6_118  [key=2, style=dotted];
m6_1268 -> m6_1269  [key=0, style=solid];
m6_1269 -> m6_1270  [key=0, style=solid];
m6_1269 -> m6_1271  [key=0, style=solid];
m6_1270 -> m6_1271  [key=0, style=solid];
m6_1270 -> m6_1274  [key=2, style=dotted];
m6_1271 -> m6_1272  [key=0, style=solid];
m6_1271 -> m6_1275  [key=2, style=dotted];
m6_1272 -> m6_1264  [key=0, style=bold, color=blue];
m6_543 -> m6_544  [key=0, style=solid];
m6_543 -> m6_181  [key=3, color=darkorchid, style=bold, label="method methodReturn double? ReadAsDouble"];
m6_544 -> m6_545  [key=0, style=solid];
m6_544 -> m6_181  [key=2, style=dotted];
m6_545 -> m6_543  [key=0, style=bold, color=blue];
m6_800 -> m6_21  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ParseProperty"];
m6_800 -> m6_801  [key=0, style=solid];
m6_801 -> m6_802  [key=0, style=solid];
m6_801 -> m6_803  [key=1, style=dashed, color=darkseagreen4, label=firstChar];
m6_801 -> m6_805  [key=1, style=dashed, color=darkseagreen4, label=firstChar];
m6_801 -> m6_808  [key=1, style=dashed, color=darkseagreen4, label=firstChar];
m6_804 -> m6_805  [key=0, style=solid];
m6_806 -> m6_807  [key=0, style=solid];
m6_806 -> m6_58  [key=2, style=dotted];
m6_807 -> m6_813  [key=0, style=solid];
m6_807 -> m6_59  [key=2, style=dotted];
m6_808 -> m6_809  [key=0, style=solid];
m6_808 -> m6_812  [key=0, style=solid];
m6_808 -> m6_828  [key=2, style=dotted];
m6_810 -> m6_811  [key=0, style=solid];
m6_810 -> m6_58  [key=2, style=dotted];
m6_811 -> m6_813  [key=0, style=solid];
m6_811 -> m6_829  [key=2, style=dotted];
m6_812 -> m6_827  [key=0, style=solid];
m6_812 -> m6_176  [key=2, style=dotted];
m6_812 -> m6_177  [key=2, style=dotted];
m6_814 -> m6_815  [key=0, style=solid];
m6_814 -> m6_818  [key=0, style=solid];
m6_815 -> m6_816  [key=0, style=solid];
m6_815 -> m6_830  [key=2, style=dotted];
m6_815 -> m6_823  [key=1, style=dashed, color=darkseagreen4, label=propertyName];
m6_817 -> m6_819  [key=0, style=solid];
m6_817 -> m6_61  [key=2, style=dotted];
m6_817 -> m6_823  [key=1, style=dashed, color=darkseagreen4, label=propertyName];
m6_818 -> m6_819  [key=0, style=solid];
m6_818 -> m6_61  [key=2, style=dotted];
m6_818 -> m6_823  [key=1, style=dashed, color=darkseagreen4, label=propertyName];
m6_819 -> m6_820  [key=0, style=solid];
m6_819 -> m6_173  [key=2, style=dotted];
m6_820 -> m6_821  [key=0, style=solid];
m6_820 -> m6_822  [key=0, style=solid];
m6_821 -> m6_827  [key=0, style=solid];
m6_821 -> m6_176  [key=2, style=dotted];
m6_821 -> m6_177  [key=2, style=dotted];
m6_822 -> m6_823  [key=0, style=solid];
m6_823 -> m6_824  [key=0, style=solid];
m6_823 -> m6_367  [key=2, style=dotted];
m6_824 -> m6_825  [key=0, style=solid];
m6_825 -> m6_826  [key=0, style=solid];
m6_825 -> m6_730  [key=2, style=dotted];
m6_802 -> m6_801  [key=3, color=darkorchid, style=bold, label="Local variable char quoteChar"];
m6_802 -> m6_824  [key=1, style=dashed, color=darkseagreen4, label=quoteChar];
m6_802 -> m6_803  [key=0, style=solid];
m6_803 -> m6_804  [key=0, style=solid];
m6_803 -> m6_808  [key=0, style=solid];
m6_805 -> m6_806  [key=0, style=solid];
m6_805 -> m6_807  [key=1, style=dashed, color=darkseagreen4, label=quoteChar];
m6_805 -> m6_824  [key=1, style=dashed, color=darkseagreen4, label=quoteChar];
m6_813 -> m6_814  [key=0, style=solid];
m6_809 -> m6_810  [key=0, style=solid];
m6_809 -> m6_824  [key=1, style=dashed, color=darkseagreen4, label=quoteChar];
m6_816 -> m6_817  [key=0, style=solid];
m6_816 -> m6_819  [key=0, style=solid];
m6_826 -> m6_827  [key=0, style=solid];
m6_827 -> m6_800  [key=0, style=bold, color=blue];
m6_189 -> m6_190  [key=0, style=solid];
m6_189 -> m6_205  [key=3, color=darkorchid, style=bold, label="method methodReturn byte[] ReadAsBytes"];
m6_189 -> m6_210  [key=3, color=darkorchid, style=bold, label="method methodReturn byte[] ReadAsBytes"];
m6_190 -> m6_191  [key=0, style=solid];
m6_190 -> m6_169  [key=2, style=dotted];
m6_192 -> m6_193  [key=0, style=solid];
m6_192 -> m6_249  [key=0, style=solid];
m6_192 -> m6_252  [key=0, style=solid];
m6_201 -> m6_202  [key=0, style=solid];
m6_201 -> m6_209  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m6_201 -> m6_238  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m6_201 -> m6_247  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m6_201 -> m6_248  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m6_204 -> m6_205  [key=0, style=solid];
m6_204 -> m6_200  [key=0, style=solid];
m6_204 -> m6_254  [key=2, style=dotted];
m6_205 -> m6_206  [key=0, style=solid];
m6_205 -> m6_65  [key=2, style=dotted];
m6_209 -> m6_210  [key=0, style=solid];
m6_209 -> m6_17  [key=2, style=dotted];
m6_210 -> m6_211  [key=0, style=solid];
m6_210 -> m6_215  [key=1, style=dashed, color=darkseagreen4, label=data];
m6_210 -> m6_216  [key=1, style=dashed, color=darkseagreen4, label=data];
m6_212 -> m6_213  [key=0, style=solid];
m6_212 -> m6_255  [key=2, style=dotted];
m6_213 -> m6_214  [key=0, style=solid];
m6_213 -> m6_215  [key=0, style=solid];
m6_214 -> m6_253  [key=0, style=solid];
m6_214 -> m6_176  [key=2, style=dotted];
m6_214 -> m6_177  [key=2, style=dotted];
m6_215 -> m6_216  [key=0, style=solid];
m6_215 -> m6_65  [key=2, style=dotted];
m6_218 -> m6_219  [key=0, style=solid];
m6_219 -> m6_220  [key=0, style=solid];
m6_219 -> m6_174  [key=2, style=dotted];
m6_220 -> m6_221  [key=0, style=solid];
m6_220 -> m6_256  [key=2, style=dotted];
m6_223 -> m6_224  [key=0, style=solid];
m6_224 -> m6_225  [key=0, style=solid];
m6_224 -> m6_174  [key=2, style=dotted];
m6_225 -> m6_253  [key=0, style=solid];
m6_225 -> m6_257  [key=2, style=dotted];
m6_227 -> m6_228  [key=0, style=solid];
m6_227 -> m6_258  [key=2, style=dotted];
m6_230 -> m6_200  [key=0, style=solid];
m6_230 -> m6_175  [key=2, style=dotted];
m6_232 -> m6_200  [key=0, style=solid];
m6_232 -> m6_259  [key=2, style=dotted];
m6_234 -> m6_235  [key=0, style=solid];
m6_235 -> m6_236  [key=0, style=solid];
m6_235 -> m6_238  [key=0, style=solid];
m6_236 -> m6_237  [key=0, style=solid];
m6_236 -> m6_174  [key=2, style=dotted];
m6_238 -> m6_253  [key=0, style=solid];
m6_238 -> m6_260  [key=2, style=dotted];
m6_240 -> m6_200  [key=0, style=solid];
m6_240 -> m6_261  [key=2, style=dotted];
m6_242 -> m6_200  [key=0, style=solid];
m6_242 -> m6_262  [key=2, style=dotted];
m6_245 -> m6_200  [key=0, style=solid];
m6_246 -> m6_247  [key=0, style=solid];
m6_248 -> m6_253  [key=0, style=solid];
m6_248 -> m6_260  [key=2, style=dotted];
m6_250 -> m6_251  [key=0, style=solid];
m6_250 -> m6_264  [key=2, style=dotted];
m6_252 -> m6_253  [key=0, style=solid];
m6_252 -> m6_176  [key=2, style=dotted];
m6_252 -> m6_177  [key=2, style=dotted];
m6_191 -> m6_31  [key=3, color=darkorchid, style=bold, label="Local variable bool isWrapped"];
m6_191 -> m6_192  [key=0, style=solid];
m6_191 -> m6_211  [key=1, style=dashed, color=darkseagreen4, label=isWrapped];
m6_193 -> m6_194  [key=0, style=solid];
m6_249 -> m6_250  [key=0, style=solid];
m6_200 -> m6_201  [key=0, style=solid];
m6_200 -> m6_249  [key=0, style=solid];
m6_202 -> m6_246  [key=0, style=solid];
m6_202 -> m6_203  [key=0, style=solid];
m6_202 -> m6_207  [key=0, style=solid];
m6_202 -> m6_217  [key=0, style=solid];
m6_202 -> m6_222  [key=0, style=solid];
m6_202 -> m6_226  [key=0, style=solid];
m6_202 -> m6_229  [key=0, style=solid];
m6_202 -> m6_231  [key=0, style=solid];
m6_202 -> m6_233  [key=0, style=solid];
m6_202 -> m6_239  [key=0, style=solid];
m6_202 -> m6_241  [key=0, style=solid];
m6_202 -> m6_243  [key=0, style=solid];
m6_247 -> m6_248  [key=0, style=solid];
m6_247 -> m6_200  [key=0, style=solid];
m6_247 -> m6_263  [key=2, style=dotted];
m6_203 -> m6_204  [key=0, style=solid];
m6_206 -> m6_253  [key=0, style=solid];
m6_208 -> m6_209  [key=0, style=solid];
m6_211 -> m6_212  [key=0, style=solid];
m6_211 -> m6_216  [key=0, style=solid];
m6_216 -> m6_253  [key=0, style=solid];
m6_217 -> m6_218  [key=0, style=solid];
m6_221 -> m6_200  [key=0, style=solid];
m6_222 -> m6_223  [key=0, style=solid];
m6_226 -> m6_227  [key=0, style=solid];
m6_228 -> m6_253  [key=0, style=solid];
m6_229 -> m6_230  [key=0, style=solid];
m6_231 -> m6_232  [key=0, style=solid];
m6_233 -> m6_234  [key=0, style=solid];
m6_237 -> m6_253  [key=0, style=solid];
m6_239 -> m6_240  [key=0, style=solid];
m6_241 -> m6_242  [key=0, style=solid];
m6_244 -> m6_245  [key=0, style=solid];
m6_251 -> m6_253  [key=0, style=solid];
m6_194 -> m6_195  [key=0, style=solid];
m6_199 -> m6_200  [key=0, style=solid];
m6_207 -> m6_208  [key=0, style=solid];
m6_243 -> m6_244  [key=0, style=solid];
m6_195 -> m6_196  [key=0, style=solid];
m6_198 -> m6_199  [key=0, style=solid];
m6_196 -> m6_197  [key=0, style=solid];
m6_197 -> m6_198  [key=0, style=solid];
m6_253 -> m6_189  [key=0, style=bold, color=blue];
m6_668 -> m6_580  [key=3, color=darkorchid, style=bold, label="Parameter variable int lastWritePosition"];
m6_668 -> m6_672  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_668 -> m6_673  [key=1, style=dashed, color=darkseagreen4, label=char];
m6_668 -> m6_671  [key=0, style=solid];
m6_668 -> m6_624  [key=3, color=darkorchid, style=bold, label="Parameter variable char writeChar"];
m6_668 -> m6_597  [key=3, color=darkorchid, style=bold, label="Parameter variable char writeChar"];
m6_668 -> m6_594  [key=3, color=darkorchid, style=bold, label="Parameter variable int writeToPosition"];
m6_672 -> m6_673  [key=0, style=solid];
m6_672 -> m6_670  [key=2, style=dotted];
m6_673 -> m6_674  [key=0, style=solid];
m6_673 -> m6_675  [key=2, style=dotted];
m6_671 -> m6_672  [key=0, style=solid];
m6_671 -> m6_673  [key=0, style=solid];
m6_674 -> m6_668  [key=0, style=bold, color=blue];
m6_828 -> m6_801  [key=3, color=darkorchid, style=bold, label="Parameter variable char value"];
m6_828 -> m6_843  [key=3, color=darkorchid, style=bold, label="Parameter variable char value"];
m6_828 -> m6_831  [key=0, style=solid];
m6_831 -> m6_832  [key=0, style=solid];
m6_831 -> m6_833  [key=2, style=dotted];
m6_832 -> m6_828  [key=0, style=bold, color=blue];
m6_169 -> m6_574  [key=0, style=solid];
m6_574 -> m6_575  [key=0, style=solid];
m6_574 -> m6_577  [key=0, style=solid];
m6_575 -> m6_576  [key=0, style=solid];
m6_575 -> m6_117  [key=2, style=dotted];
m6_576 -> m6_577  [key=0, style=solid];
m6_577 -> m6_169  [key=0, style=bold, color=blue];
m6_185 -> m6_183  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.ReadType readType"];
m6_185 -> m6_187  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.ReadType readType"];
m6_185 -> m6_205  [key=3, color=darkorchid, style=bold, label="method methodReturn object ReadStringValue"];
m6_185 -> m6_265  [key=0, style=solid];
m6_185 -> m6_283  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.ReadType"];
m6_185 -> m6_300  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.ReadType"];
m6_185 -> m6_301  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.ReadType"];
m6_185 -> m6_330  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.ReadType"];
m6_185 -> m6_332  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.ReadType"];
m6_185 -> m6_538  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.ReadType readType"];
m6_185 -> m6_284  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.ReadType"];
m6_185 -> m6_297  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.ReadType"];
m6_185 -> m6_314  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.ReadType"];
m6_185 -> m6_321  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.ReadType"];
m6_185 -> m6_364  [key=3, color=darkorchid, style=bold, label="method methodReturn object ReadStringValue"];
m6_185 -> m6_324  [key=3, color=darkorchid, style=bold, label="method methodReturn object ReadStringValue"];
m6_185 -> m6_368  [key=3, color=darkorchid, style=bold, label="method methodReturn object ReadStringValue"];
m6_185 -> m6_369  [key=3, color=darkorchid, style=bold, label="method methodReturn object ReadStringValue"];
m6_265 -> m6_266  [key=0, style=solid];
m6_265 -> m6_169  [key=2, style=dotted];
m6_266 -> m6_267  [key=0, style=solid];
m6_266 -> m6_356  [key=0, style=solid];
m6_266 -> m6_359  [key=0, style=solid];
m6_275 -> m6_276  [key=0, style=solid];
m6_275 -> m6_283  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m6_275 -> m6_316  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m6_275 -> m6_323  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m6_275 -> m6_324  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m6_275 -> m6_345  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m6_275 -> m6_354  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m6_275 -> m6_355  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m6_278 -> m6_279  [key=0, style=solid];
m6_278 -> m6_274  [key=0, style=solid];
m6_278 -> m6_254  [key=2, style=dotted];
m6_279 -> m6_280  [key=0, style=solid];
m6_279 -> m6_65  [key=2, style=dotted];
m6_283 -> m6_284  [key=0, style=solid];
m6_283 -> m6_17  [key=2, style=dotted];
m6_286 -> m6_360  [key=0, style=solid];
m6_288 -> m6_360  [key=0, style=solid];
m6_290 -> m6_291  [key=0, style=solid];
m6_290 -> m6_292  [key=0, style=solid];
m6_291 -> m6_360  [key=0, style=solid];
m6_292 -> m6_360  [key=0, style=solid];
m6_292 -> m6_361  [key=2, style=dotted];
m6_294 -> m6_295  [key=0, style=solid];
m6_294 -> m6_296  [key=0, style=solid];
m6_295 -> m6_360  [key=0, style=solid];
m6_296 -> m6_360  [key=0, style=solid];
m6_296 -> m6_362  [key=2, style=dotted];
m6_299 -> m6_300  [key=0, style=solid];
m6_299 -> m6_301  [key=0, style=solid];
m6_299 -> m6_120  [key=2, style=dotted];
m6_300 -> m6_360  [key=0, style=solid];
m6_300 -> m6_364  [key=2, style=dotted];
m6_301 -> m6_302  [key=0, style=solid];
m6_301 -> m6_365  [key=2, style=dotted];
m6_302 -> m6_360  [key=0, style=solid];
m6_315 -> m6_316  [key=0, style=solid];
m6_316 -> m6_360  [key=0, style=solid];
m6_316 -> m6_260  [key=2, style=dotted];
m6_317 -> m6_318  [key=0, style=solid];
m6_317 -> m6_365  [key=2, style=dotted];
m6_318 -> m6_360  [key=0, style=solid];
m6_322 -> m6_323  [key=0, style=solid];
m6_323 -> m6_360  [key=0, style=solid];
m6_323 -> m6_260  [key=2, style=dotted];
m6_325 -> m6_326  [key=0, style=solid];
m6_325 -> m6_327  [key=0, style=solid];
m6_325 -> m6_366  [key=2, style=dotted];
m6_326 -> m6_360  [key=0, style=solid];
m6_326 -> m6_260  [key=2, style=dotted];
m6_327 -> m6_328  [key=0, style=solid];
m6_327 -> m6_367  [key=2, style=dotted];
m6_330 -> m6_360  [key=0, style=solid];
m6_330 -> m6_368  [key=2, style=dotted];
m6_332 -> m6_360  [key=0, style=solid];
m6_332 -> m6_369  [key=2, style=dotted];
m6_334 -> m6_335  [key=0, style=solid];
m6_334 -> m6_258  [key=2, style=dotted];
m6_337 -> m6_274  [key=0, style=solid];
m6_337 -> m6_175  [key=2, style=dotted];
m6_339 -> m6_274  [key=0, style=solid];
m6_339 -> m6_259  [key=2, style=dotted];
m6_341 -> m6_342  [key=0, style=solid];
m6_342 -> m6_343  [key=0, style=solid];
m6_342 -> m6_345  [key=0, style=solid];
m6_343 -> m6_344  [key=0, style=solid];
m6_343 -> m6_174  [key=2, style=dotted];
m6_345 -> m6_360  [key=0, style=solid];
m6_345 -> m6_260  [key=2, style=dotted];
m6_347 -> m6_274  [key=0, style=solid];
m6_347 -> m6_261  [key=2, style=dotted];
m6_349 -> m6_274  [key=0, style=solid];
m6_349 -> m6_262  [key=2, style=dotted];
m6_352 -> m6_274  [key=0, style=solid];
m6_353 -> m6_354  [key=0, style=solid];
m6_355 -> m6_360  [key=0, style=solid];
m6_355 -> m6_260  [key=2, style=dotted];
m6_357 -> m6_358  [key=0, style=solid];
m6_357 -> m6_264  [key=2, style=dotted];
m6_359 -> m6_360  [key=0, style=solid];
m6_359 -> m6_176  [key=2, style=dotted];
m6_359 -> m6_177  [key=2, style=dotted];
m6_267 -> m6_268  [key=0, style=solid];
m6_356 -> m6_357  [key=0, style=solid];
m6_274 -> m6_275  [key=0, style=solid];
m6_274 -> m6_356  [key=0, style=solid];
m6_276 -> m6_353  [key=0, style=solid];
m6_276 -> m6_277  [key=0, style=solid];
m6_276 -> m6_281  [key=0, style=solid];
m6_276 -> m6_298  [key=0, style=solid];
m6_276 -> m6_303  [key=0, style=solid];
m6_276 -> m6_319  [key=0, style=solid];
m6_276 -> m6_329  [key=0, style=solid];
m6_276 -> m6_331  [key=0, style=solid];
m6_276 -> m6_333  [key=0, style=solid];
m6_276 -> m6_336  [key=0, style=solid];
m6_276 -> m6_338  [key=0, style=solid];
m6_276 -> m6_340  [key=0, style=solid];
m6_276 -> m6_346  [key=0, style=solid];
m6_276 -> m6_348  [key=0, style=solid];
m6_276 -> m6_350  [key=0, style=solid];
m6_324 -> m6_325  [key=0, style=solid];
m6_324 -> m6_327  [key=1, style=dashed, color=darkseagreen4, label=expected];
m6_324 -> m6_328  [key=1, style=dashed, color=darkseagreen4, label=expected];
m6_354 -> m6_355  [key=0, style=solid];
m6_354 -> m6_274  [key=0, style=solid];
m6_354 -> m6_263  [key=2, style=dotted];
m6_277 -> m6_278  [key=0, style=solid];
m6_280 -> m6_360  [key=0, style=solid];
m6_282 -> m6_283  [key=0, style=solid];
m6_284 -> m6_285  [key=0, style=solid];
m6_284 -> m6_287  [key=0, style=solid];
m6_284 -> m6_289  [key=0, style=solid];
m6_284 -> m6_293  [key=0, style=solid];
m6_284 -> m6_297  [key=0, style=solid];
m6_285 -> m6_286  [key=0, style=solid];
m6_287 -> m6_288  [key=0, style=solid];
m6_289 -> m6_290  [key=0, style=solid];
m6_293 -> m6_294  [key=0, style=solid];
m6_298 -> m6_299  [key=0, style=solid];
m6_314 -> m6_315  [key=0, style=solid];
m6_314 -> m6_317  [key=0, style=solid];
m6_321 -> m6_322  [key=0, style=solid];
m6_321 -> m6_324  [key=0, style=solid];
m6_328 -> m6_360  [key=0, style=solid];
m6_329 -> m6_330  [key=0, style=solid];
m6_331 -> m6_332  [key=0, style=solid];
m6_333 -> m6_334  [key=0, style=solid];
m6_335 -> m6_360  [key=0, style=solid];
m6_336 -> m6_337  [key=0, style=solid];
m6_338 -> m6_339  [key=0, style=solid];
m6_340 -> m6_341  [key=0, style=solid];
m6_344 -> m6_360  [key=0, style=solid];
m6_346 -> m6_347  [key=0, style=solid];
m6_348 -> m6_349  [key=0, style=solid];
m6_351 -> m6_352  [key=0, style=solid];
m6_358 -> m6_360  [key=0, style=solid];
m6_297 -> m6_360  [key=0, style=solid];
m6_297 -> m6_363  [key=2, style=dotted];
m6_297 -> m6_7  [key=2, style=dotted];
m6_268 -> m6_269  [key=0, style=solid];
m6_273 -> m6_274  [key=0, style=solid];
m6_281 -> m6_282  [key=0, style=solid];
m6_303 -> m6_304  [key=0, style=solid];
m6_319 -> m6_320  [key=0, style=solid];
m6_350 -> m6_351  [key=0, style=solid];
m6_313 -> m6_314  [key=0, style=solid];
m6_320 -> m6_321  [key=0, style=solid];
m6_269 -> m6_270  [key=0, style=solid];
m6_272 -> m6_273  [key=0, style=solid];
m6_304 -> m6_305  [key=0, style=solid];
m6_312 -> m6_313  [key=0, style=solid];
m6_270 -> m6_271  [key=0, style=solid];
m6_271 -> m6_272  [key=0, style=solid];
m6_305 -> m6_306  [key=0, style=solid];
m6_311 -> m6_312  [key=0, style=solid];
m6_306 -> m6_307  [key=0, style=solid];
m6_310 -> m6_311  [key=0, style=solid];
m6_307 -> m6_308  [key=0, style=solid];
m6_309 -> m6_310  [key=0, style=solid];
m6_308 -> m6_309  [key=0, style=solid];
m6_360 -> m6_185  [key=0, style=bold, color=blue];
m6_931 -> m6_1221  [key=0, style=solid];
m6_1221 -> m6_1222  [key=0, style=solid];
m6_1221 -> m6_1223  [key=0, style=solid];
m6_1221 -> m6_366  [key=2, style=dotted];
m6_1222 -> m6_1224  [key=0, style=solid];
m6_1222 -> m6_367  [key=2, style=dotted];
m6_1223 -> m6_1224  [key=0, style=solid];
m6_1223 -> m6_177  [key=2, style=dotted];
m6_1224 -> m6_931  [key=0, style=bold, color=blue];
m6_372 -> m6_205  [key=3, color=darkorchid, style=bold, label="method methodReturn bool? ReadAsBoolean"];
m6_372 -> m6_373  [key=0, style=solid];
m6_372 -> m6_409  [key=3, color=darkorchid, style=bold, label="method methodReturn bool? ReadAsBoolean"];
m6_372 -> m6_417  [key=3, color=darkorchid, style=bold, label="method methodReturn bool? ReadAsBoolean"];
m6_373 -> m6_374  [key=0, style=solid];
m6_373 -> m6_169  [key=2, style=dotted];
m6_374 -> m6_375  [key=0, style=solid];
m6_374 -> m6_443  [key=0, style=solid];
m6_374 -> m6_446  [key=0, style=solid];
m6_383 -> m6_384  [key=0, style=solid];
m6_383 -> m6_391  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m6_383 -> m6_417  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m6_383 -> m6_432  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m6_383 -> m6_441  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m6_383 -> m6_442  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m6_386 -> m6_387  [key=0, style=solid];
m6_386 -> m6_382  [key=0, style=solid];
m6_386 -> m6_254  [key=2, style=dotted];
m6_387 -> m6_388  [key=0, style=solid];
m6_387 -> m6_65  [key=2, style=dotted];
m6_391 -> m6_392  [key=0, style=solid];
m6_391 -> m6_17  [key=2, style=dotted];
m6_392 -> m6_447  [key=0, style=solid];
m6_392 -> m6_61  [key=2, style=dotted];
m6_392 -> m6_448  [key=2, style=dotted];
m6_394 -> m6_395  [key=0, style=solid];
m6_394 -> m6_258  [key=2, style=dotted];
m6_408 -> m6_409  [key=0, style=solid];
m6_408 -> m6_365  [key=2, style=dotted];
m6_410 -> m6_411  [key=0, style=solid];
m6_410 -> m6_412  [key=0, style=solid];
m6_411 -> m6_413  [key=0, style=solid];
m6_411 -> m6_414  [key=1, style=dashed, color=darkseagreen4, label=b];
m6_412 -> m6_413  [key=0, style=solid];
m6_412 -> m6_449  [key=2, style=dotted];
m6_412 -> m6_414  [key=1, style=dashed, color=darkseagreen4, label=b];
m6_413 -> m6_414  [key=0, style=solid];
m6_413 -> m6_65  [key=2, style=dotted];
m6_419 -> m6_420  [key=0, style=solid];
m6_419 -> m6_421  [key=0, style=solid];
m6_419 -> m6_366  [key=2, style=dotted];
m6_420 -> m6_447  [key=0, style=solid];
m6_420 -> m6_260  [key=2, style=dotted];
m6_421 -> m6_422  [key=0, style=solid];
m6_421 -> m6_367  [key=2, style=dotted];
m6_424 -> m6_382  [key=0, style=solid];
m6_424 -> m6_175  [key=2, style=dotted];
m6_426 -> m6_382  [key=0, style=solid];
m6_426 -> m6_259  [key=2, style=dotted];
m6_428 -> m6_429  [key=0, style=solid];
m6_429 -> m6_430  [key=0, style=solid];
m6_429 -> m6_432  [key=0, style=solid];
m6_430 -> m6_431  [key=0, style=solid];
m6_430 -> m6_174  [key=2, style=dotted];
m6_432 -> m6_447  [key=0, style=solid];
m6_432 -> m6_260  [key=2, style=dotted];
m6_434 -> m6_382  [key=0, style=solid];
m6_434 -> m6_261  [key=2, style=dotted];
m6_436 -> m6_382  [key=0, style=solid];
m6_436 -> m6_262  [key=2, style=dotted];
m6_439 -> m6_382  [key=0, style=solid];
m6_440 -> m6_441  [key=0, style=solid];
m6_442 -> m6_447  [key=0, style=solid];
m6_442 -> m6_260  [key=2, style=dotted];
m6_444 -> m6_445  [key=0, style=solid];
m6_444 -> m6_264  [key=2, style=dotted];
m6_446 -> m6_447  [key=0, style=solid];
m6_446 -> m6_176  [key=2, style=dotted];
m6_446 -> m6_177  [key=2, style=dotted];
m6_375 -> m6_376  [key=0, style=solid];
m6_443 -> m6_444  [key=0, style=solid];
m6_382 -> m6_383  [key=0, style=solid];
m6_382 -> m6_443  [key=0, style=solid];
m6_384 -> m6_440  [key=0, style=solid];
m6_384 -> m6_385  [key=0, style=solid];
m6_384 -> m6_389  [key=0, style=solid];
m6_384 -> m6_393  [key=0, style=solid];
m6_384 -> m6_396  [key=0, style=solid];
m6_384 -> m6_415  [key=0, style=solid];
m6_384 -> m6_423  [key=0, style=solid];
m6_384 -> m6_425  [key=0, style=solid];
m6_384 -> m6_427  [key=0, style=solid];
m6_384 -> m6_433  [key=0, style=solid];
m6_384 -> m6_435  [key=0, style=solid];
m6_384 -> m6_437  [key=0, style=solid];
m6_417 -> m6_421  [key=1, style=dashed, color=darkseagreen4, label=isTrue];
m6_417 -> m6_418  [key=0, style=solid];
m6_417 -> m6_422  [key=1, style=dashed, color=darkseagreen4, label=isTrue];
m6_441 -> m6_442  [key=0, style=solid];
m6_441 -> m6_382  [key=0, style=solid];
m6_441 -> m6_263  [key=2, style=dotted];
m6_385 -> m6_386  [key=0, style=solid];
m6_388 -> m6_447  [key=0, style=solid];
m6_390 -> m6_391  [key=0, style=solid];
m6_393 -> m6_394  [key=0, style=solid];
m6_395 -> m6_447  [key=0, style=solid];
m6_407 -> m6_408  [key=0, style=solid];
m6_409 -> m6_410  [key=0, style=solid];
m6_414 -> m6_447  [key=0, style=solid];
m6_418 -> m6_419  [key=0, style=solid];
m6_422 -> m6_447  [key=0, style=solid];
m6_423 -> m6_424  [key=0, style=solid];
m6_425 -> m6_426  [key=0, style=solid];
m6_427 -> m6_428  [key=0, style=solid];
m6_431 -> m6_447  [key=0, style=solid];
m6_433 -> m6_434  [key=0, style=solid];
m6_435 -> m6_436  [key=0, style=solid];
m6_438 -> m6_439  [key=0, style=solid];
m6_445 -> m6_447  [key=0, style=solid];
m6_376 -> m6_377  [key=0, style=solid];
m6_381 -> m6_382  [key=0, style=solid];
m6_389 -> m6_390  [key=0, style=solid];
m6_396 -> m6_397  [key=0, style=solid];
m6_415 -> m6_416  [key=0, style=solid];
m6_437 -> m6_438  [key=0, style=solid];
m6_416 -> m6_417  [key=0, style=solid];
m6_406 -> m6_407  [key=0, style=solid];
m6_377 -> m6_378  [key=0, style=solid];
m6_380 -> m6_381  [key=0, style=solid];
m6_397 -> m6_398  [key=0, style=solid];
m6_405 -> m6_406  [key=0, style=solid];
m6_378 -> m6_379  [key=0, style=solid];
m6_379 -> m6_380  [key=0, style=solid];
m6_398 -> m6_399  [key=0, style=solid];
m6_404 -> m6_405  [key=0, style=solid];
m6_399 -> m6_400  [key=0, style=solid];
m6_403 -> m6_404  [key=0, style=solid];
m6_400 -> m6_401  [key=0, style=solid];
m6_402 -> m6_403  [key=0, style=solid];
m6_401 -> m6_402  [key=0, style=solid];
m6_447 -> m6_372  [key=0, style=bold, color=blue];
m6_686 -> m6_687  [key=0, style=solid];
m6_687 -> m6_688  [key=0, style=solid];
m6_687 -> m6_689  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m6_687 -> m6_691  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m6_687 -> m6_692  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m6_687 -> m6_723  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m6_689 -> m6_690  [key=0, style=solid];
m6_689 -> m6_696  [key=0, style=solid];
m6_689 -> m6_724  [key=0, style=solid];
m6_691 -> m6_692  [key=0, style=solid];
m6_692 -> m6_693  [key=0, style=solid];
m6_692 -> m6_695  [key=0, style=solid];
m6_693 -> m6_694  [key=0, style=solid];
m6_693 -> m6_688  [key=0, style=solid];
m6_693 -> m6_83  [key=2, style=dotted];
m6_724 -> m6_725  [key=0, style=solid];
m6_725 -> m6_726  [key=0, style=solid];
m6_725 -> m6_728  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m6_728 -> m6_729  [key=0, style=solid];
m6_728 -> m6_176  [key=2, style=dotted];
m6_728 -> m6_177  [key=2, style=dotted];
m6_688 -> m6_689  [key=0, style=solid];
m6_688 -> m6_729  [key=0, style=solid];
m6_723 -> m6_724  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m6_723 -> m6_688  [key=0, style=solid];
m6_723 -> m6_723  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m6_690 -> m6_691  [key=0, style=solid];
m6_696 -> m6_697  [key=0, style=solid];
m6_695 -> m6_729  [key=0, style=solid];
m6_694 -> m6_729  [key=0, style=solid];
m6_726 -> m6_728  [key=0, style=solid];
m6_726 -> m6_727  [key=0, style=solid];
m6_726 -> m6_263  [key=2, style=dotted];
m6_722 -> m6_723  [key=0, style=solid];
m6_697 -> m6_698  [key=0, style=solid];
m6_727 -> m6_729  [key=0, style=solid];
m6_721 -> m6_722  [key=0, style=solid];
m6_698 -> m6_699  [key=0, style=solid];
m6_720 -> m6_721  [key=0, style=solid];
m6_699 -> m6_700  [key=0, style=solid];
m6_719 -> m6_720  [key=0, style=solid];
m6_700 -> m6_701  [key=0, style=solid];
m6_718 -> m6_719  [key=0, style=solid];
m6_701 -> m6_702  [key=0, style=solid];
m6_717 -> m6_718  [key=0, style=solid];
m6_702 -> m6_703  [key=0, style=solid];
m6_716 -> m6_717  [key=0, style=solid];
m6_703 -> m6_704  [key=0, style=solid];
m6_715 -> m6_716  [key=0, style=solid];
m6_704 -> m6_705  [key=0, style=solid];
m6_714 -> m6_715  [key=0, style=solid];
m6_705 -> m6_706  [key=0, style=solid];
m6_713 -> m6_714  [key=0, style=solid];
m6_706 -> m6_707  [key=0, style=solid];
m6_712 -> m6_713  [key=0, style=solid];
m6_707 -> m6_708  [key=0, style=solid];
m6_711 -> m6_712  [key=0, style=solid];
m6_708 -> m6_709  [key=0, style=solid];
m6_710 -> m6_711  [key=0, style=solid];
m6_709 -> m6_710  [key=0, style=solid];
m6_729 -> m6_686  [key=0, style=bold, color=blue];
m6_258 -> m6_546  [key=0, style=solid];
m6_546 -> m6_547  [key=0, style=solid];
m6_546 -> m6_553  [key=0, style=solid];
m6_546 -> m6_120  [key=2, style=dotted];
m6_547 -> m6_548  [key=0, style=solid];
m6_549 -> m6_550  [key=0, style=solid];
m6_549 -> m6_556  [key=2, style=dotted];
m6_551 -> m6_552  [key=0, style=solid];
m6_552 -> m6_555  [key=0, style=solid];
m6_552 -> m6_260  [key=2, style=dotted];
m6_553 -> m6_554  [key=0, style=solid];
m6_554 -> m6_555  [key=0, style=solid];
m6_554 -> m6_557  [key=2, style=dotted];
m6_548 -> m6_549  [key=0, style=solid];
m6_548 -> m6_551  [key=0, style=solid];
m6_550 -> m6_555  [key=0, style=solid];
m6_555 -> m6_258  [key=0, style=bold, color=blue];
m6_933 -> m6_1217  [key=0, style=solid];
m6_1217 -> m6_1218  [key=0, style=solid];
m6_1217 -> m6_1219  [key=0, style=solid];
m6_1217 -> m6_366  [key=2, style=dotted];
m6_1218 -> m6_1220  [key=0, style=solid];
m6_1218 -> m6_174  [key=2, style=dotted];
m6_1219 -> m6_1220  [key=0, style=solid];
m6_1219 -> m6_177  [key=2, style=dotted];
m6_1220 -> m6_933  [key=0, style=bold, color=blue];
m6_1166 -> m6_21  [key=3, color=darkorchid, style=bold, label="method methodReturn bool MatchValue"];
m6_1166 -> m6_31  [key=3, color=darkorchid, style=bold, label="method methodReturn bool MatchValue"];
m6_1166 -> m6_1167  [key=0, style=solid];
m6_1166 -> m6_1172  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_1166 -> m6_1176  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_1166 -> m6_366  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
m6_1166 -> m6_1171  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_1167 -> m6_1168  [key=0, style=solid];
m6_1167 -> m6_1170  [key=0, style=solid];
m6_1167 -> m6_120  [key=2, style=dotted];
m6_1168 -> m6_1169  [key=0, style=solid];
m6_1169 -> m6_1178  [key=0, style=solid];
m6_1169 -> m6_557  [key=2, style=dotted];
m6_1172 -> m6_1173  [key=0, style=solid];
m6_1172 -> m6_1175  [key=0, style=solid];
m6_1173 -> m6_1174  [key=0, style=solid];
m6_1176 -> m6_1177  [key=0, style=solid];
m6_1171 -> m6_205  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m6_1171 -> m6_1172  [key=0, style=solid];
m6_1171 -> m6_1176  [key=0, style=solid];
m6_1170 -> m6_1172  [key=1, style=dashed, color=darkseagreen4, label=i];
m6_1170 -> m6_1173  [key=1, style=dashed, color=darkseagreen4, label=i];
m6_1170 -> m6_1171  [key=0, style=solid];
m6_1170 -> m6_1175  [key=1, style=dashed, color=darkseagreen4, label=i];
m6_1175 -> m6_1171  [key=0, style=solid];
m6_1175 -> m6_1175  [key=1, style=dashed, color=darkseagreen4, label=i];
m6_1174 -> m6_1178  [key=0, style=solid];
m6_1177 -> m6_1178  [key=0, style=solid];
m6_1178 -> m6_1166  [key=0, style=bold, color=blue];
m6_537 -> m6_538  [key=0, style=solid];
m6_537 -> m6_185  [key=3, color=darkorchid, style=bold, label="method methodReturn System.DateTimeOffset? ReadAsDateTimeOffset"];
m6_538 -> m6_539  [key=0, style=solid];
m6_538 -> m6_185  [key=2, style=dotted];
m6_539 -> m6_537  [key=0, style=bold, color=blue];
m6_540 -> m6_541  [key=0, style=solid];
m6_540 -> m6_181  [key=3, color=darkorchid, style=bold, label="method methodReturn decimal? ReadAsDecimal"];
m6_541 -> m6_542  [key=0, style=solid];
m6_541 -> m6_181  [key=2, style=dotted];
m6_542 -> m6_540  [key=0, style=bold, color=blue];
m6_368 -> m6_205  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.ReadType readType"];
m6_368 -> m6_1238  [key=0, style=solid];
m6_368 -> m6_1243  [key=3, color=darkorchid, style=bold, label="method methodReturn object ParseNumberPositiveInfinity"];
m6_368 -> m6_181  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.ReadType readType"];
m6_368 -> m6_185  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.ReadType readType"];
m6_368 -> m6_1239  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.ReadType"];
m6_1238 -> m6_1239  [key=0, style=solid];
m6_1238 -> m6_1249  [key=0, style=solid];
m6_1238 -> m6_366  [key=2, style=dotted];
m6_1242 -> m6_1243  [key=0, style=solid];
m6_1242 -> m6_1248  [key=0, style=solid];
m6_1243 -> m6_1244  [key=0, style=solid];
m6_1243 -> m6_367  [key=2, style=dotted];
m6_1246 -> m6_1247  [key=0, style=solid];
m6_1246 -> m6_367  [key=2, style=dotted];
m6_1248 -> m6_1250  [key=0, style=solid];
m6_1248 -> m6_177  [key=2, style=dotted];
m6_1249 -> m6_1250  [key=0, style=solid];
m6_1249 -> m6_177  [key=2, style=dotted];
m6_1239 -> m6_1240  [key=0, style=solid];
m6_1239 -> m6_1245  [key=0, style=solid];
m6_1241 -> m6_1242  [key=0, style=solid];
m6_1244 -> m6_1250  [key=0, style=solid];
m6_1245 -> m6_1246  [key=0, style=solid];
m6_1247 -> m6_1250  [key=0, style=solid];
m6_1240 -> m6_1241  [key=0, style=solid];
m6_1250 -> m6_368  [key=0, style=bold, color=blue];
m6_366 -> m6_21  [key=3, color=darkorchid, style=bold, label="method methodReturn bool MatchValueWithTrailingSeparator"];
m6_366 -> m6_31  [key=3, color=darkorchid, style=bold, label="method methodReturn bool MatchValueWithTrailingSeparator"];
m6_366 -> m6_963  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
m6_366 -> m6_1179  [key=0, style=solid];
m6_366 -> m6_324  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
m6_366 -> m6_418  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
m6_1179 -> m6_1180  [key=0, style=solid];
m6_1179 -> m6_1166  [key=2, style=dotted];
m6_1182 -> m6_1183  [key=0, style=solid];
m6_1182 -> m6_1184  [key=0, style=solid];
m6_1182 -> m6_120  [key=2, style=dotted];
m6_1184 -> m6_1185  [key=0, style=solid];
m6_1184 -> m6_1186  [key=2, style=dotted];
m6_1180 -> m6_1182  [key=0, style=solid];
m6_1180 -> m6_1181  [key=0, style=solid];
m6_1183 -> m6_1185  [key=0, style=solid];
m6_1181 -> m6_1185  [key=0, style=solid];
m6_1185 -> m6_366  [key=0, style=bold, color=blue];
m6_262 -> m6_935  [key=0, style=solid];
m6_935 -> m6_936  [key=0, style=solid];
m6_936 -> m6_937  [key=0, style=solid];
m6_936 -> m6_13  [key=2, style=dotted];
m6_937 -> m6_262  [key=0, style=bold, color=blue];
m6_369 -> m6_205  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.ReadType readType"];
m6_369 -> m6_1251  [key=0, style=solid];
m6_369 -> m6_1256  [key=3, color=darkorchid, style=bold, label="method methodReturn object ParseNumberNaN"];
m6_369 -> m6_181  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.ReadType readType"];
m6_369 -> m6_185  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.ReadType readType"];
m6_369 -> m6_1252  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.ReadType"];
m6_1251 -> m6_1252  [key=0, style=solid];
m6_1251 -> m6_1262  [key=0, style=solid];
m6_1251 -> m6_366  [key=2, style=dotted];
m6_1255 -> m6_1256  [key=0, style=solid];
m6_1255 -> m6_1261  [key=0, style=solid];
m6_1256 -> m6_1257  [key=0, style=solid];
m6_1256 -> m6_367  [key=2, style=dotted];
m6_1259 -> m6_1260  [key=0, style=solid];
m6_1259 -> m6_367  [key=2, style=dotted];
m6_1261 -> m6_1263  [key=0, style=solid];
m6_1261 -> m6_177  [key=2, style=dotted];
m6_1262 -> m6_1263  [key=0, style=solid];
m6_1262 -> m6_177  [key=2, style=dotted];
m6_1252 -> m6_1253  [key=0, style=solid];
m6_1252 -> m6_1258  [key=0, style=solid];
m6_1254 -> m6_1255  [key=0, style=solid];
m6_1257 -> m6_1263  [key=0, style=solid];
m6_1258 -> m6_1259  [key=0, style=solid];
m6_1260 -> m6_1263  [key=0, style=solid];
m6_1253 -> m6_1254  [key=0, style=solid];
m6_1263 -> m6_369  [key=0, style=bold, color=blue];
m6_0 -> m6_3  [key=1, style=dashed, color=darkseagreen4, label="System.IO.TextReader"];
m6_0 -> m6_1  [key=0, style=solid];
m6_0 -> m6_2  [key=1, style=dashed, color=darkseagreen4, label="System.IO.TextReader"];
m6_3 -> m6_4  [key=0, style=solid];
m6_4 -> m6_5  [key=0, style=solid];
m6_1 -> m6_3  [key=0, style=solid];
m6_1 -> m6_2  [key=0, style=solid];
m6_2 -> m6_5  [key=0, style=solid];
m6_2 -> m6_6  [key=2, style=dotted];
m6_2 -> m6_7  [key=2, style=dotted];
m6_5 -> m6_0  [key=0, style=bold, color=blue];
m6_1161 -> m6_1130  [key=3, color=darkorchid, style=bold, label="Parameter variable int initialPosition"];
m6_1161 -> m6_1163  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_1161 -> m6_175  [key=3, color=darkorchid, style=bold, label="Parameter variable bool setToken"];
m6_1161 -> m6_1162  [key=0, style=solid];
m6_1163 -> m6_1164  [key=0, style=solid];
m6_1163 -> m6_1165  [key=2, style=dotted];
m6_1163 -> m6_367  [key=2, style=dotted];
m6_1162 -> m6_1163  [key=0, style=solid];
m6_1162 -> m6_1164  [key=0, style=solid];
m6_1164 -> m6_1161  [key=0, style=bold, color=blue];
m6_1186 -> m6_21  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsSeparator"];
m6_1186 -> m6_31  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsSeparator"];
m6_1186 -> m6_1187  [key=0, style=solid];
m6_1186 -> m6_1205  [key=1, style=dashed, color=darkseagreen4, label=char];
m6_1193 -> m6_1194  [key=0, style=solid];
m6_1193 -> m6_1195  [key=0, style=solid];
m6_1193 -> m6_120  [key=2, style=dotted];
m6_1195 -> m6_1196  [key=0, style=solid];
m6_1198 -> m6_1199  [key=0, style=solid];
m6_1198 -> m6_1207  [key=0, style=solid];
m6_1192 -> m6_1193  [key=0, style=solid];
m6_1194 -> m6_1208  [key=0, style=solid];
m6_1196 -> m6_1208  [key=0, style=solid];
m6_1197 -> m6_1198  [key=0, style=solid];
m6_1199 -> m6_1208  [key=0, style=solid];
m6_1207 -> m6_1208  [key=0, style=solid];
m6_1187 -> m6_1192  [key=0, style=solid];
m6_1187 -> m6_1197  [key=0, style=solid];
m6_1187 -> m6_1188  [key=0, style=solid];
m6_1187 -> m6_1200  [key=0, style=solid];
m6_1187 -> m6_1205  [key=0, style=solid];
m6_1205 -> m6_1207  [key=0, style=solid];
m6_1205 -> m6_1206  [key=0, style=solid];
m6_1205 -> m6_263  [key=2, style=dotted];
m6_1191 -> m6_1208  [key=0, style=solid];
m6_1204 -> m6_1208  [key=0, style=solid];
m6_1206 -> m6_1208  [key=0, style=solid];
m6_1188 -> m6_1189  [key=0, style=solid];
m6_1200 -> m6_1201  [key=0, style=solid];
m6_1190 -> m6_1191  [key=0, style=solid];
m6_1203 -> m6_1204  [key=0, style=solid];
m6_1189 -> m6_1190  [key=0, style=solid];
m6_1201 -> m6_1202  [key=0, style=solid];
m6_1202 -> m6_1203  [key=0, style=solid];
m6_1208 -> m6_1186  [key=0, style=bold, color=blue];
m6_13 -> m6_14  [key=0, style=solid];
m6_13 -> m6_15  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_14 -> m6_15  [key=0, style=solid];
m6_15 -> m6_16  [key=0, style=solid];
m6_16 -> m6_13  [key=0, style=bold, color=blue];
m6_261 -> m6_21  [key=3, color=darkorchid, style=bold, label="Parameter variable bool append"];
m6_261 -> m6_31  [key=3, color=darkorchid, style=bold, label="Parameter variable bool append"];
m6_261 -> m6_938  [key=0, style=solid];
m6_261 -> m6_939  [key=1, style=dashed, color=darkseagreen4, label=bool];
m6_938 -> m6_939  [key=0, style=solid];
m6_939 -> m6_940  [key=0, style=solid];
m6_939 -> m6_941  [key=0, style=solid];
m6_939 -> m6_120  [key=2, style=dotted];
m6_940 -> m6_941  [key=0, style=solid];
m6_941 -> m6_942  [key=0, style=solid];
m6_941 -> m6_13  [key=2, style=dotted];
m6_942 -> m6_261  [key=0, style=bold, color=blue];
m6_125 -> m6_21  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ReadChars"];
m6_125 -> m6_31  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ReadChars"];
m6_125 -> m6_126  [key=0, style=solid];
m6_125 -> m6_128  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_125 -> m6_130  [key=1, style=dashed, color=darkseagreen4, label=bool];
m6_125 -> m6_120  [key=3, color=darkorchid, style=bold, label="Parameter variable bool append"];
m6_126 -> m6_127  [key=0, style=solid];
m6_126 -> m6_128  [key=0, style=solid];
m6_128 -> m6_129  [key=0, style=solid];
m6_128 -> m6_130  [key=1, style=dashed, color=darkseagreen4, label=charsRequired];
m6_128 -> m6_133  [key=1, style=dashed, color=darkseagreen4, label=charsRequired];
m6_128 -> m6_134  [key=1, style=dashed, color=darkseagreen4, label=charsRequired];
m6_130 -> m6_131  [key=0, style=solid];
m6_130 -> m6_86  [key=2, style=dotted];
m6_130 -> m6_132  [key=1, style=dashed, color=darkseagreen4, label=charsRead];
m6_127 -> m6_137  [key=0, style=solid];
m6_129 -> m6_130  [key=0, style=solid];
m6_129 -> m6_205  [key=3, color=darkorchid, style=bold, label="Local variable int totalCharsRead"];
m6_129 -> m6_132  [key=1, style=dashed, color=darkseagreen4, label=totalCharsRead];
m6_133 -> m6_129  [key=0, style=solid];
m6_133 -> m6_134  [key=0, style=solid];
m6_134 -> m6_135  [key=0, style=solid];
m6_134 -> m6_136  [key=0, style=solid];
m6_131 -> m6_134  [key=0, style=solid];
m6_131 -> m6_132  [key=0, style=solid];
m6_132 -> m6_133  [key=0, style=solid];
m6_132 -> m6_134  [key=1, style=dashed, color=darkseagreen4, label=totalCharsRead];
m6_132 -> m6_132  [key=1, style=dashed, color=darkseagreen4, label=totalCharsRead];
m6_135 -> m6_137  [key=0, style=solid];
m6_136 -> m6_137  [key=0, style=solid];
m6_137 -> m6_125  [key=0, style=bold, color=blue];
m6_930 -> m6_1209  [key=0, style=solid];
m6_1209 -> m6_1210  [key=0, style=solid];
m6_1209 -> m6_1211  [key=0, style=solid];
m6_1209 -> m6_366  [key=2, style=dotted];
m6_1210 -> m6_1212  [key=0, style=solid];
m6_1210 -> m6_367  [key=2, style=dotted];
m6_1211 -> m6_1212  [key=0, style=solid];
m6_1211 -> m6_177  [key=2, style=dotted];
m6_1212 -> m6_930  [key=0, style=bold, color=blue];
m6_8 -> m6_9  [key=0, style=solid];
m6_9 -> m6_10  [key=0, style=solid];
m6_9 -> m6_11  [key=0, style=solid];
m6_10 -> m6_11  [key=0, style=solid];
m6_10 -> m6_12  [key=2, style=dotted];
m6_11 -> m6_8  [key=0, style=bold, color=blue];
m6_68 -> m6_75  [key=3, color=darkorchid, style=bold, label="Parameter variable int count"];
m6_68 -> m6_92  [key=3, color=darkorchid, style=bold, label="Parameter variable char[] dst"];
m6_68 -> m6_96  [key=3, color=darkorchid, style=bold, label="Parameter variable int count"];
m6_68 -> m6_98  [key=3, color=darkorchid, style=bold, label="Parameter variable char[] dst"];
m6_68 -> m6_205  [key=3, color=darkorchid, style=bold, label="Parameter variable int dstOffset"];
m6_68 -> m6_69  [key=0, style=solid];
m6_68 -> m6_70  [key=1, style=dashed, color=darkseagreen4, label="char[]"];
m6_69 -> m6_69  [key=3, color=darkorchid, style=bold, label="Local variable int charByteCount"];
m6_69 -> m6_70  [key=0, style=solid];
m6_70 -> m6_71  [key=0, style=solid];
m6_70 -> m6_72  [key=2, style=dotted];
m6_71 -> m6_68  [key=0, style=bold, color=blue];
m6_58 -> m6_73  [key=0, style=solid];
m6_73 -> m6_74  [key=0, style=solid];
m6_74 -> m6_75  [key=0, style=solid];
m6_74 -> m6_82  [key=0, style=solid];
m6_75 -> m6_76  [key=0, style=solid];
m6_75 -> m6_77  [key=1, style=dashed, color=darkseagreen4, label=count];
m6_75 -> m6_80  [key=1, style=dashed, color=darkseagreen4, label=count];
m6_77 -> m6_78  [key=0, style=solid];
m6_77 -> m6_68  [key=2, style=dotted];
m6_78 -> m6_79  [key=0, style=solid];
m6_79 -> m6_80  [key=0, style=solid];
m6_80 -> m6_81  [key=0, style=solid];
m6_81 -> m6_82  [key=0, style=solid];
m6_76 -> m6_77  [key=0, style=solid];
m6_76 -> m6_78  [key=0, style=solid];
m6_82 -> m6_58  [key=0, style=bold, color=blue];
m6_260 -> m6_201  [key=3, color=darkorchid, style=bold, label="Parameter variable char c"];
m6_260 -> m6_275  [key=3, color=darkorchid, style=bold, label="Parameter variable char c"];
m6_260 -> m6_370  [key=0, style=solid];
m6_260 -> m6_383  [key=3, color=darkorchid, style=bold, label="Parameter variable char c"];
m6_260 -> m6_453  [key=3, color=darkorchid, style=bold, label="Parameter variable char c"];
m6_260 -> m6_467  [key=3, color=darkorchid, style=bold, label="Parameter variable char c"];
m6_260 -> m6_852  [key=3, color=darkorchid, style=bold, label="Parameter variable char c"];
m6_370 -> m6_371  [key=0, style=solid];
m6_370 -> m6_176  [key=2, style=dotted];
m6_370 -> m6_177  [key=2, style=dotted];
m6_371 -> m6_260  [key=0, style=bold, color=blue];
m6_730 -> m6_731  [key=0, style=solid];
m6_731 -> m6_732  [key=0, style=solid];
m6_732 -> m6_733  [key=0, style=solid];
m6_732 -> m6_734  [key=2, style=dotted];
m6_733 -> m6_730  [key=0, style=bold, color=blue];
m6_264 -> m6_558  [key=0, style=solid];
m6_558 -> m6_559  [key=0, style=solid];
m6_558 -> m6_565  [key=0, style=solid];
m6_558 -> m6_120  [key=2, style=dotted];
m6_559 -> m6_560  [key=0, style=solid];
m6_559 -> m6_173  [key=2, style=dotted];
m6_560 -> m6_561  [key=0, style=solid];
m6_560 -> m6_562  [key=0, style=solid];
m6_562 -> m6_563  [key=0, style=solid];
m6_562 -> m6_564  [key=0, style=solid];
m6_563 -> m6_565  [key=0, style=solid];
m6_563 -> m6_175  [key=2, style=dotted];
m6_564 -> m6_566  [key=0, style=solid];
m6_564 -> m6_176  [key=2, style=dotted];
m6_564 -> m6_177  [key=2, style=dotted];
m6_565 -> m6_566  [key=0, style=solid];
m6_565 -> m6_174  [key=2, style=dotted];
m6_561 -> m6_566  [key=0, style=solid];
m6_566 -> m6_264  [key=0, style=bold, color=blue];
m6_175 -> m6_21  [key=3, color=darkorchid, style=bold, label="Parameter variable bool setToken"];
m6_175 -> m6_31  [key=3, color=darkorchid, style=bold, label="Parameter variable bool setToken"];
m6_175 -> m6_1120  [key=0, style=solid];
m6_175 -> m6_1138  [key=1, style=dashed, color=darkseagreen4, label=bool];
m6_175 -> m6_1146  [key=1, style=dashed, color=darkseagreen4, label=bool];
m6_175 -> m6_1151  [key=1, style=dashed, color=darkseagreen4, label=bool];
m6_175 -> m6_1156  [key=1, style=dashed, color=darkseagreen4, label=bool];
m6_1120 -> m6_1121  [key=0, style=solid];
m6_1121 -> m6_1122  [key=0, style=solid];
m6_1121 -> m6_1123  [key=0, style=solid];
m6_1121 -> m6_120  [key=2, style=dotted];
m6_1122 -> m6_1160  [key=0, style=solid];
m6_1122 -> m6_177  [key=2, style=dotted];
m6_1124 -> m6_1125  [key=0, style=solid];
m6_1124 -> m6_1126  [key=0, style=solid];
m6_1126 -> m6_1127  [key=0, style=solid];
m6_1126 -> m6_1128  [key=0, style=solid];
m6_1128 -> m6_1160  [key=0, style=solid];
m6_1128 -> m6_176  [key=2, style=dotted];
m6_1128 -> m6_177  [key=2, style=dotted];
m6_1129 -> m6_1130  [key=0, style=solid];
m6_1130 -> m6_1131  [key=0, style=solid];
m6_1130 -> m6_1138  [key=1, style=dashed, color=darkseagreen4, label=initialPosition];
m6_1130 -> m6_1146  [key=1, style=dashed, color=darkseagreen4, label=initialPosition];
m6_1130 -> m6_1151  [key=1, style=dashed, color=darkseagreen4, label=initialPosition];
m6_1130 -> m6_1156  [key=1, style=dashed, color=darkseagreen4, label=initialPosition];
m6_1132 -> m6_1133  [key=0, style=solid];
m6_1132 -> m6_1141  [key=0, style=solid];
m6_1132 -> m6_1149  [key=0, style=solid];
m6_1132 -> m6_1154  [key=0, style=solid];
m6_1132 -> m6_1159  [key=0, style=solid];
m6_1134 -> m6_1135  [key=0, style=solid];
m6_1134 -> m6_1140  [key=0, style=solid];
m6_1135 -> m6_1136  [key=0, style=solid];
m6_1135 -> m6_1131  [key=0, style=solid];
m6_1135 -> m6_83  [key=2, style=dotted];
m6_1137 -> m6_1160  [key=0, style=solid];
m6_1137 -> m6_177  [key=2, style=dotted];
m6_1138 -> m6_1139  [key=0, style=solid];
m6_1138 -> m6_1161  [key=2, style=dotted];
m6_1140 -> m6_1131  [key=0, style=solid];
m6_1142 -> m6_1143  [key=0, style=solid];
m6_1144 -> m6_1145  [key=0, style=solid];
m6_1144 -> m6_1131  [key=0, style=solid];
m6_1144 -> m6_120  [key=2, style=dotted];
m6_1145 -> m6_1146  [key=0, style=solid];
m6_1145 -> m6_1131  [key=0, style=solid];
m6_1146 -> m6_1147  [key=0, style=solid];
m6_1146 -> m6_1161  [key=2, style=dotted];
m6_1147 -> m6_1148  [key=0, style=solid];
m6_1151 -> m6_1152  [key=0, style=solid];
m6_1151 -> m6_1161  [key=2, style=dotted];
m6_1153 -> m6_1131  [key=0, style=solid];
m6_1153 -> m6_261  [key=2, style=dotted];
m6_1156 -> m6_1157  [key=0, style=solid];
m6_1156 -> m6_1161  [key=2, style=dotted];
m6_1158 -> m6_1131  [key=0, style=solid];
m6_1158 -> m6_262  [key=2, style=dotted];
m6_1159 -> m6_1131  [key=0, style=solid];
m6_1123 -> m6_1124  [key=0, style=solid];
m6_1123 -> m6_1136  [key=1, style=dashed, color=darkseagreen4, label=singlelineComment];
m6_1123 -> m6_1143  [key=1, style=dashed, color=darkseagreen4, label=singlelineComment];
m6_1123 -> m6_1150  [key=1, style=dashed, color=darkseagreen4, label=singlelineComment];
m6_1123 -> m6_1155  [key=1, style=dashed, color=darkseagreen4, label=singlelineComment];
m6_1125 -> m6_1129  [key=0, style=solid];
m6_1125 -> m6_1136  [key=1, style=dashed, color=darkseagreen4, label=singlelineComment];
m6_1125 -> m6_1143  [key=1, style=dashed, color=darkseagreen4, label=singlelineComment];
m6_1125 -> m6_1150  [key=1, style=dashed, color=darkseagreen4, label=singlelineComment];
m6_1125 -> m6_1155  [key=1, style=dashed, color=darkseagreen4, label=singlelineComment];
m6_1127 -> m6_1129  [key=0, style=solid];
m6_1127 -> m6_1136  [key=1, style=dashed, color=darkseagreen4, label=singlelineComment];
m6_1127 -> m6_1143  [key=1, style=dashed, color=darkseagreen4, label=singlelineComment];
m6_1127 -> m6_1150  [key=1, style=dashed, color=darkseagreen4, label=singlelineComment];
m6_1127 -> m6_1155  [key=1, style=dashed, color=darkseagreen4, label=singlelineComment];
m6_1131 -> m6_1132  [key=0, style=solid];
m6_1131 -> m6_1160  [key=0, style=solid];
m6_1133 -> m6_1134  [key=0, style=solid];
m6_1141 -> m6_1142  [key=0, style=solid];
m6_1149 -> m6_1150  [key=0, style=solid];
m6_1154 -> m6_1155  [key=0, style=solid];
m6_1136 -> m6_1137  [key=0, style=solid];
m6_1136 -> m6_1138  [key=0, style=solid];
m6_1139 -> m6_1160  [key=0, style=solid];
m6_1143 -> m6_1144  [key=0, style=solid];
m6_1143 -> m6_1131  [key=0, style=solid];
m6_1148 -> m6_1160  [key=0, style=solid];
m6_1150 -> m6_1151  [key=0, style=solid];
m6_1150 -> m6_1153  [key=0, style=solid];
m6_1152 -> m6_1160  [key=0, style=solid];
m6_1155 -> m6_1156  [key=0, style=solid];
m6_1155 -> m6_1158  [key=0, style=solid];
m6_1157 -> m6_1160  [key=0, style=solid];
m6_1160 -> m6_175  [key=0, style=bold, color=blue];
m6_59 -> m6_578  [key=0, style=solid];
m6_59 -> m6_589  [key=1, style=dashed, color=darkseagreen4, label=char];
m6_59 -> m6_593  [key=1, style=dashed, color=darkseagreen4, label=char];
m6_59 -> m6_653  [key=1, style=dashed, color=darkseagreen4, label=char];
m6_59 -> m6_17  [key=3, color=darkorchid, style=bold, label="Parameter variable char quote"];
m6_59 -> m6_802  [key=3, color=darkorchid, style=bold, label="Parameter variable char quote"];
m6_578 -> m6_579  [key=0, style=solid];
m6_578 -> m6_583  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m6_579 -> m6_580  [key=0, style=solid];
m6_579 -> m6_655  [key=1, style=dashed, color=darkseagreen4, label=initialPosition];
m6_579 -> m6_656  [key=1, style=dashed, color=darkseagreen4, label=initialPosition];
m6_580 -> m6_578  [key=3, color=darkorchid, style=bold, label="Local variable int lastWritePosition"];
m6_580 -> m6_581  [key=0, style=solid];
m6_580 -> m6_633  [key=1, style=dashed, color=darkseagreen4, label=lastWritePosition];
m6_580 -> m6_641  [key=1, style=dashed, color=darkseagreen4, label=lastWritePosition];
m6_581 -> m6_582  [key=0, style=solid];
m6_583 -> m6_583  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m6_583 -> m6_584  [key=0, style=solid];
m6_583 -> m6_590  [key=0, style=solid];
m6_583 -> m6_643  [key=0, style=solid];
m6_583 -> m6_647  [key=0, style=solid];
m6_583 -> m6_651  [key=0, style=solid];
m6_583 -> m6_585  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m6_583 -> m6_586  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m6_583 -> m6_591  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m6_583 -> m6_594  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m6_583 -> m6_595  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m6_583 -> m6_596  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m6_585 -> m6_586  [key=0, style=solid];
m6_585 -> m6_582  [key=0, style=solid];
m6_587 -> m6_588  [key=0, style=solid];
m6_587 -> m6_582  [key=0, style=solid];
m6_587 -> m6_83  [key=2, style=dotted];
m6_588 -> m6_589  [key=0, style=solid];
m6_589 -> m6_664  [key=0, style=solid];
m6_589 -> m6_176  [key=2, style=dotted];
m6_589 -> m6_177  [key=2, style=dotted];
m6_591 -> m6_592  [key=0, style=solid];
m6_592 -> m6_593  [key=0, style=solid];
m6_592 -> m6_594  [key=0, style=solid];
m6_592 -> m6_120  [key=2, style=dotted];
m6_593 -> m6_664  [key=0, style=solid];
m6_593 -> m6_176  [key=2, style=dotted];
m6_593 -> m6_177  [key=2, style=dotted];
m6_595 -> m6_596  [key=0, style=solid];
m6_595 -> m6_598  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m6_595 -> m6_614  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m6_595 -> m6_639  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m6_616 -> m6_617  [key=0, style=solid];
m6_617 -> m6_618  [key=0, style=solid];
m6_617 -> m6_665  [key=2, style=dotted];
m6_617 -> m6_620  [key=1, style=dashed, color=darkseagreen4, label=writeChar];
m6_617 -> m6_624  [key=1, style=dashed, color=darkseagreen4, label=writeChar];
m6_617 -> m6_641  [key=1, style=dashed, color=darkseagreen4, label=writeChar];
m6_623 -> m6_624  [key=0, style=solid];
m6_623 -> m6_635  [key=0, style=solid];
m6_623 -> m6_120  [key=2, style=dotted];
m6_625 -> m6_626  [key=0, style=solid];
m6_626 -> m6_627  [key=0, style=solid];
m6_626 -> m6_665  [key=2, style=dotted];
m6_626 -> m6_628  [key=1, style=dashed, color=darkseagreen4, label=writeChar];
m6_626 -> m6_641  [key=1, style=dashed, color=darkseagreen4, label=writeChar];
m6_632 -> m6_633  [key=0, style=solid];
m6_632 -> m6_8  [key=2, style=dotted];
m6_633 -> m6_634  [key=0, style=solid];
m6_633 -> m6_668  [key=2, style=dotted];
m6_634 -> m6_636  [key=0, style=solid];
m6_634 -> m6_641  [key=1, style=dashed, color=darkseagreen4, label=lastWritePosition];
m6_637 -> m6_640  [key=0, style=solid];
m6_637 -> m6_638  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m6_637 -> m6_642  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m6_637 -> m6_644  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m6_638 -> m6_639  [key=0, style=solid];
m6_639 -> m6_664  [key=0, style=solid];
m6_639 -> m6_176  [key=2, style=dotted];
m6_639 -> m6_177  [key=2, style=dotted];
m6_640 -> m6_641  [key=0, style=solid];
m6_640 -> m6_8  [key=2, style=dotted];
m6_641 -> m6_642  [key=0, style=solid];
m6_641 -> m6_668  [key=2, style=dotted];
m6_644 -> m6_645  [key=0, style=solid];
m6_645 -> m6_646  [key=0, style=solid];
m6_645 -> m6_261  [key=2, style=dotted];
m6_646 -> m6_582  [key=0, style=solid];
m6_646 -> m6_648  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m6_648 -> m6_649  [key=0, style=solid];
m6_649 -> m6_650  [key=0, style=solid];
m6_649 -> m6_262  [key=2, style=dotted];
m6_650 -> m6_582  [key=0, style=solid];
m6_650 -> m6_653  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m6_650 -> m6_654  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m6_653 -> m6_654  [key=0, style=solid];
m6_653 -> m6_582  [key=0, style=solid];
m6_656 -> m6_661  [key=0, style=solid];
m6_656 -> m6_669  [key=2, style=dotted];
m6_657 -> m6_658  [key=0, style=solid];
m6_657 -> m6_8  [key=2, style=dotted];
m6_659 -> m6_660  [key=0, style=solid];
m6_659 -> m6_670  [key=2, style=dotted];
m6_660 -> m6_661  [key=0, style=solid];
m6_660 -> m6_669  [key=2, style=dotted];
m6_662 -> m6_663  [key=0, style=solid];
m6_655 -> m6_656  [key=0, style=solid];
m6_655 -> m6_657  [key=0, style=solid];
m6_582 -> m6_583  [key=0, style=solid];
m6_582 -> m6_664  [key=0, style=solid];
m6_584 -> m6_585  [key=0, style=solid];
m6_590 -> m6_591  [key=0, style=solid];
m6_643 -> m6_644  [key=0, style=solid];
m6_647 -> m6_648  [key=0, style=solid];
m6_651 -> m6_652  [key=0, style=solid];
m6_586 -> m6_587  [key=0, style=solid];
m6_586 -> m6_588  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m6_586 -> m6_591  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m6_586 -> m6_595  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m6_586 -> m6_586  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m6_586 -> m6_594  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m6_586 -> m6_596  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m6_594 -> m6_595  [key=0, style=solid];
m6_594 -> m6_633  [key=1, style=dashed, color=darkseagreen4, label=escapeStartPos];
m6_594 -> m6_641  [key=1, style=dashed, color=darkseagreen4, label=escapeStartPos];
m6_596 -> m6_616  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m6_596 -> m6_596  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m6_596 -> m6_597  [key=0, style=solid];
m6_597 -> m6_595  [key=3, color=darkorchid, style=bold, label="Local variable char writeChar"];
m6_597 -> m6_598  [key=0, style=solid];
m6_597 -> m6_665  [key=3, color=darkorchid, style=bold, label="Local variable char writeChar"];
m6_598 -> m6_638  [key=0, style=solid];
m6_598 -> m6_599  [key=0, style=solid];
m6_598 -> m6_601  [key=0, style=solid];
m6_598 -> m6_603  [key=0, style=solid];
m6_598 -> m6_605  [key=0, style=solid];
m6_598 -> m6_607  [key=0, style=solid];
m6_598 -> m6_609  [key=0, style=solid];
m6_598 -> m6_611  [key=0, style=solid];
m6_598 -> m6_615  [key=0, style=solid];
m6_614 -> m6_640  [key=0, style=solid];
m6_615 -> m6_616  [key=0, style=solid];
m6_618 -> m6_619  [key=0, style=solid];
m6_618 -> m6_620  [key=0, style=solid];
m6_618 -> m6_666  [key=2, style=dotted];
m6_620 -> m6_637  [key=0, style=solid];
m6_620 -> m6_621  [key=0, style=solid];
m6_620 -> m6_667  [key=2, style=dotted];
m6_624 -> m6_625  [key=0, style=solid];
m6_624 -> m6_633  [key=1, style=dashed, color=darkseagreen4, label=highSurrogate];
m6_624 -> m6_597  [key=3, color=darkorchid, style=bold, label="Local variable char highSurrogate"];
m6_622 -> m6_623  [key=0, style=solid];
m6_622 -> m6_636  [key=1, style=dashed, color=darkseagreen4, label=anotherHighSurrogate];
m6_635 -> m6_641  [key=1, style=dashed, color=darkseagreen4, label=writeChar];
m6_635 -> m6_636  [key=0, style=solid];
m6_627 -> m6_632  [key=0, style=solid];
m6_627 -> m6_628  [key=0, style=solid];
m6_627 -> m6_666  [key=2, style=dotted];
m6_628 -> m6_629  [key=0, style=solid];
m6_628 -> m6_631  [key=0, style=solid];
m6_628 -> m6_667  [key=2, style=dotted];
m6_631 -> m6_632  [key=0, style=solid];
m6_631 -> m6_633  [key=1, style=dashed, color=darkseagreen4, label=highSurrogate];
m6_630 -> m6_632  [key=0, style=solid];
m6_630 -> m6_636  [key=1, style=dashed, color=darkseagreen4, label=anotherHighSurrogate];
m6_629 -> m6_633  [key=1, style=dashed, color=darkseagreen4, label=highSurrogate];
m6_629 -> m6_630  [key=0, style=solid];
m6_636 -> m6_637  [key=0, style=solid];
m6_636 -> m6_621  [key=0, style=solid];
m6_619 -> m6_637  [key=0, style=solid];
m6_619 -> m6_641  [key=1, style=dashed, color=darkseagreen4, label=writeChar];
m6_642 -> m6_659  [key=1, style=dashed, color=darkseagreen4, label=lastWritePosition];
m6_642 -> m6_655  [key=1, style=dashed, color=darkseagreen4, label=lastWritePosition];
m6_642 -> m6_582  [key=0, style=solid];
m6_642 -> m6_658  [key=1, style=dashed, color=darkseagreen4, label=lastWritePosition];
m6_600 -> m6_640  [key=0, style=solid];
m6_602 -> m6_640  [key=0, style=solid];
m6_604 -> m6_640  [key=0, style=solid];
m6_606 -> m6_640  [key=0, style=solid];
m6_608 -> m6_640  [key=0, style=solid];
m6_610 -> m6_640  [key=0, style=solid];
m6_654 -> m6_656  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m6_654 -> m6_659  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m6_654 -> m6_655  [key=0, style=solid];
m6_654 -> m6_654  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m6_654 -> m6_658  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m6_654 -> m6_661  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m6_652 -> m6_653  [key=0, style=solid];
m6_661 -> m6_662  [key=0, style=solid];
m6_661 -> m6_661  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m6_658 -> m6_659  [key=0, style=solid];
m6_658 -> m6_660  [key=0, style=solid];
m6_663 -> m6_664  [key=0, style=solid];
m6_599 -> m6_600  [key=0, style=solid];
m6_601 -> m6_602  [key=0, style=solid];
m6_603 -> m6_604  [key=0, style=solid];
m6_605 -> m6_606  [key=0, style=solid];
m6_607 -> m6_608  [key=0, style=solid];
m6_609 -> m6_610  [key=0, style=solid];
m6_611 -> m6_612  [key=0, style=solid];
m6_613 -> m6_614  [key=0, style=solid];
m6_621 -> m6_622  [key=0, style=solid];
m6_612 -> m6_613  [key=0, style=solid];
m6_664 -> m6_59  [key=0, style=bold, color=blue];
m6_172 -> m6_21  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ParsePostValue"];
m6_172 -> m6_31  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ParsePostValue"];
m6_172 -> m6_735  [key=0, style=solid];
m6_736 -> m6_737  [key=0, style=solid];
m6_736 -> m6_770  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m6_736 -> m6_772  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m6_739 -> m6_740  [key=0, style=solid];
m6_739 -> m6_743  [key=0, style=solid];
m6_740 -> m6_741  [key=0, style=solid];
m6_740 -> m6_735  [key=0, style=solid];
m6_740 -> m6_83  [key=2, style=dotted];
m6_741 -> m6_742  [key=0, style=solid];
m6_743 -> m6_735  [key=0, style=solid];
m6_745 -> m6_746  [key=0, style=solid];
m6_746 -> m6_747  [key=0, style=solid];
m6_746 -> m6_174  [key=2, style=dotted];
m6_749 -> m6_750  [key=0, style=solid];
m6_750 -> m6_751  [key=0, style=solid];
m6_750 -> m6_174  [key=2, style=dotted];
m6_753 -> m6_754  [key=0, style=solid];
m6_754 -> m6_755  [key=0, style=solid];
m6_754 -> m6_174  [key=2, style=dotted];
m6_757 -> m6_758  [key=0, style=solid];
m6_757 -> m6_175  [key=2, style=dotted];
m6_760 -> m6_761  [key=0, style=solid];
m6_761 -> m6_762  [key=0, style=solid];
m6_761 -> m6_456  [key=2, style=dotted];
m6_765 -> m6_735  [key=0, style=solid];
m6_767 -> m6_735  [key=0, style=solid];
m6_767 -> m6_261  [key=2, style=dotted];
m6_769 -> m6_735  [key=0, style=solid];
m6_769 -> m6_262  [key=2, style=dotted];
m6_771 -> m6_735  [key=0, style=solid];
m6_772 -> m6_773  [key=0, style=solid];
m6_772 -> m6_176  [key=2, style=dotted];
m6_772 -> m6_177  [key=2, style=dotted];
m6_735 -> m6_736  [key=0, style=solid];
m6_735 -> m6_773  [key=0, style=solid];
m6_737 -> m6_738  [key=0, style=solid];
m6_737 -> m6_744  [key=0, style=solid];
m6_737 -> m6_748  [key=0, style=solid];
m6_737 -> m6_752  [key=0, style=solid];
m6_737 -> m6_756  [key=0, style=solid];
m6_737 -> m6_759  [key=0, style=solid];
m6_737 -> m6_763  [key=0, style=solid];
m6_737 -> m6_766  [key=0, style=solid];
m6_737 -> m6_768  [key=0, style=solid];
m6_737 -> m6_770  [key=0, style=solid];
m6_770 -> m6_771  [key=0, style=solid];
m6_770 -> m6_772  [key=0, style=solid];
m6_770 -> m6_263  [key=2, style=dotted];
m6_738 -> m6_739  [key=0, style=solid];
m6_742 -> m6_773  [key=0, style=solid];
m6_744 -> m6_745  [key=0, style=solid];
m6_747 -> m6_773  [key=0, style=solid];
m6_748 -> m6_749  [key=0, style=solid];
m6_751 -> m6_773  [key=0, style=solid];
m6_752 -> m6_753  [key=0, style=solid];
m6_755 -> m6_773  [key=0, style=solid];
m6_756 -> m6_757  [key=0, style=solid];
m6_758 -> m6_773  [key=0, style=solid];
m6_759 -> m6_760  [key=0, style=solid];
m6_762 -> m6_773  [key=0, style=solid];
m6_764 -> m6_765  [key=0, style=solid];
m6_766 -> m6_767  [key=0, style=solid];
m6_768 -> m6_769  [key=0, style=solid];
m6_763 -> m6_764  [key=0, style=solid];
m6_773 -> m6_172  [key=0, style=bold, color=blue];
m6_254 -> m6_21  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ReadNullChar"];
m6_254 -> m6_31  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ReadNullChar"];
m6_254 -> m6_567  [key=0, style=solid];
m6_567 -> m6_568  [key=0, style=solid];
m6_567 -> m6_571  [key=0, style=solid];
m6_568 -> m6_569  [key=0, style=solid];
m6_568 -> m6_572  [key=0, style=solid];
m6_568 -> m6_83  [key=2, style=dotted];
m6_569 -> m6_570  [key=0, style=solid];
m6_571 -> m6_572  [key=0, style=solid];
m6_572 -> m6_573  [key=0, style=solid];
m6_570 -> m6_573  [key=0, style=solid];
m6_573 -> m6_254  [key=0, style=bold, color=blue];
m6_61 -> m6_0  [key=3, color=darkorchid, style=bold, label="Field variable System.IO.TextReader _reader"];
m6_1116 -> m6_1117  [key=0, style=solid];
m6_1116 -> m6_1084  [key=3, color=darkorchid, style=bold, label="Parameter variable string number"];
m6_1117 -> m6_1118  [key=0, style=solid];
m6_1117 -> m6_1119  [key=2, style=dotted];
m6_1118 -> m6_1116  [key=0, style=bold, color=blue];
m6_173 -> m6_31  [key=3, color=darkorchid, style=bold, label="Parameter variable bool oneOrMore"];
m6_173 -> m6_943  [key=0, style=solid];
m6_173 -> m6_961  [key=1, style=dashed, color=darkseagreen4, label=bool];
m6_946 -> m6_947  [key=0, style=solid];
m6_946 -> m6_957  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m6_949 -> m6_950  [key=0, style=solid];
m6_949 -> m6_952  [key=0, style=solid];
m6_950 -> m6_951  [key=0, style=solid];
m6_950 -> m6_945  [key=0, style=solid];
m6_950 -> m6_83  [key=2, style=dotted];
m6_952 -> m6_945  [key=0, style=solid];
m6_954 -> m6_945  [key=0, style=solid];
m6_954 -> m6_261  [key=2, style=dotted];
m6_956 -> m6_945  [key=0, style=solid];
m6_956 -> m6_262  [key=2, style=dotted];
m6_959 -> m6_945  [key=0, style=solid];
m6_943 -> m6_31  [key=3, color=darkorchid, style=bold, label="Local variable bool finished"];
m6_943 -> m6_944  [key=0, style=solid];
m6_943 -> m6_945  [key=1, style=dashed, color=darkseagreen4, label=finished];
m6_944 -> m6_31  [key=3, color=darkorchid, style=bold, label="Local variable bool ateWhitespace"];
m6_944 -> m6_945  [key=0, style=solid];
m6_944 -> m6_961  [key=1, style=dashed, color=darkseagreen4, label=ateWhitespace];
m6_945 -> m6_946  [key=0, style=solid];
m6_945 -> m6_961  [key=0, style=solid];
m6_947 -> m6_948  [key=0, style=solid];
m6_947 -> m6_953  [key=0, style=solid];
m6_947 -> m6_955  [key=0, style=solid];
m6_947 -> m6_957  [key=0, style=solid];
m6_957 -> m6_958  [key=0, style=solid];
m6_957 -> m6_960  [key=0, style=solid];
m6_957 -> m6_263  [key=2, style=dotted];
m6_948 -> m6_949  [key=0, style=solid];
m6_951 -> m6_945  [key=0, style=solid];
m6_953 -> m6_954  [key=0, style=solid];
m6_955 -> m6_956  [key=0, style=solid];
m6_958 -> m6_959  [key=0, style=solid];
m6_958 -> m6_961  [key=1, style=dashed, color=darkseagreen4, label=ateWhitespace];
m6_961 -> m6_962  [key=0, style=solid];
m6_960 -> m6_945  [key=0, style=solid];
m6_962 -> m6_173  [key=0, style=bold, color=blue];
m6_120 -> m6_21  [key=3, color=darkorchid, style=bold, label="Parameter variable bool append"];
m6_120 -> m6_31  [key=3, color=darkorchid, style=bold, label="Parameter variable bool append"];
m6_120 -> m6_121  [key=0, style=solid];
m6_120 -> m6_122  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_120 -> m6_205  [key=3, color=darkorchid, style=bold, label="Parameter variable int relativePosition"];
m6_120 -> m6_299  [key=3, color=darkorchid, style=bold, label="Parameter variable int relativePosition"];
m6_120 -> m6_677  [key=3, color=darkorchid, style=bold, label="Parameter variable int relativePosition"];
m6_120 -> m6_125  [key=3, color=darkorchid, style=bold, label="method methodReturn bool EnsureChars"];
m6_120 -> m6_69  [key=3, color=darkorchid, style=bold, label="Parameter variable int relativePosition"];
m6_120 -> m6_261  [key=3, color=darkorchid, style=bold, label="Parameter variable bool append"];
m6_121 -> m6_122  [key=0, style=solid];
m6_121 -> m6_123  [key=0, style=solid];
m6_122 -> m6_124  [key=0, style=solid];
m6_122 -> m6_125  [key=2, style=dotted];
m6_123 -> m6_124  [key=0, style=solid];
m6_124 -> m6_120  [key=0, style=bold, color=blue];
m6_182 -> m6_183  [key=0, style=solid];
m6_182 -> m6_185  [key=3, color=darkorchid, style=bold, label="method methodReturn System.DateTime? ReadAsDateTime"];
m6_183 -> m6_184  [key=0, style=solid];
m6_183 -> m6_185  [key=2, style=dotted];
m6_184 -> m6_182  [key=0, style=bold, color=blue];
m6_86 -> m6_87  [key=0, style=solid];
m6_86 -> m6_89  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_86 -> m6_91  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_86 -> m6_97  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_86 -> m6_98  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_86 -> m6_109  [key=3, color=darkorchid, style=bold, label="method methodReturn int ReadData"];
m6_86 -> m6_205  [key=3, color=darkorchid, style=bold, label="method methodReturn int ReadData"];
m6_86 -> m6_83  [key=3, color=darkorchid, style=bold, label="Parameter variable bool append"];
m6_86 -> m6_125  [key=3, color=darkorchid, style=bold, label="Parameter variable bool append"];
m6_86 -> m6_90  [key=1, style=dashed, color=darkseagreen4, label=bool];
m6_87 -> m6_88  [key=0, style=solid];
m6_87 -> m6_89  [key=0, style=solid];
m6_89 -> m6_90  [key=0, style=solid];
m6_89 -> m6_108  [key=0, style=solid];
m6_91 -> m6_92  [key=0, style=solid];
m6_91 -> m6_116  [key=2, style=dotted];
m6_92 -> m6_93  [key=0, style=solid];
m6_92 -> m6_117  [key=2, style=dotted];
m6_92 -> m6_95  [key=1, style=dashed, color=darkseagreen4, label=dst];
m6_93 -> m6_94  [key=0, style=solid];
m6_93 -> m6_68  [key=2, style=dotted];
m6_94 -> m6_95  [key=0, style=solid];
m6_94 -> m6_118  [key=2, style=dotted];
m6_95 -> m6_108  [key=0, style=solid];
m6_96 -> m6_97  [key=0, style=solid];
m6_96 -> m6_98  [key=1, style=dashed, color=darkseagreen4, label=remainingCharCount];
m6_96 -> m6_99  [key=1, style=dashed, color=darkseagreen4, label=remainingCharCount];
m6_96 -> m6_100  [key=1, style=dashed, color=darkseagreen4, label=remainingCharCount];
m6_96 -> m6_103  [key=1, style=dashed, color=darkseagreen4, label=remainingCharCount];
m6_96 -> m6_104  [key=1, style=dashed, color=darkseagreen4, label=remainingCharCount];
m6_96 -> m6_107  [key=1, style=dashed, color=darkseagreen4, label=remainingCharCount];
m6_97 -> m6_98  [key=0, style=solid];
m6_97 -> m6_103  [key=0, style=solid];
m6_98 -> m6_99  [key=0, style=solid];
m6_98 -> m6_117  [key=2, style=dotted];
m6_98 -> m6_100  [key=1, style=dashed, color=darkseagreen4, label=dst];
m6_98 -> m6_102  [key=1, style=dashed, color=darkseagreen4, label=dst];
m6_100 -> m6_101  [key=0, style=solid];
m6_100 -> m6_68  [key=2, style=dotted];
m6_101 -> m6_102  [key=0, style=solid];
m6_101 -> m6_118  [key=2, style=dotted];
m6_102 -> m6_105  [key=0, style=solid];
m6_104 -> m6_105  [key=0, style=solid];
m6_104 -> m6_68  [key=2, style=dotted];
m6_105 -> m6_106  [key=0, style=solid];
m6_106 -> m6_107  [key=0, style=solid];
m6_107 -> m6_108  [key=0, style=solid];
m6_108 -> m6_109  [key=0, style=solid];
m6_109 -> m6_110  [key=0, style=solid];
m6_109 -> m6_119  [key=2, style=dotted];
m6_109 -> m6_111  [key=1, style=dashed, color=darkseagreen4, label=charsRead];
m6_109 -> m6_114  [key=1, style=dashed, color=darkseagreen4, label=charsRead];
m6_110 -> m6_111  [key=0, style=solid];
m6_112 -> m6_113  [key=0, style=solid];
m6_113 -> m6_114  [key=0, style=solid];
m6_88 -> m6_115  [key=0, style=solid];
m6_90 -> m6_91  [key=0, style=solid];
m6_90 -> m6_96  [key=0, style=solid];
m6_99 -> m6_100  [key=0, style=solid];
m6_99 -> m6_101  [key=0, style=solid];
m6_103 -> m6_104  [key=0, style=solid];
m6_103 -> m6_105  [key=0, style=solid];
m6_111 -> m6_112  [key=0, style=solid];
m6_111 -> m6_113  [key=0, style=solid];
m6_114 -> m6_115  [key=0, style=solid];
m6_115 -> m6_86  [key=0, style=bold, color=blue];
m6_259 -> m6_450  [key=0, style=solid];
m6_450 -> m6_451  [key=0, style=solid];
m6_451 -> m6_452  [key=0, style=solid];
m6_451 -> m6_454  [key=0, style=solid];
m6_452 -> m6_453  [key=0, style=solid];
m6_452 -> m6_174  [key=2, style=dotted];
m6_453 -> m6_455  [key=0, style=solid];
m6_453 -> m6_260  [key=2, style=dotted];
m6_454 -> m6_455  [key=0, style=solid];
m6_454 -> m6_456  [key=2, style=dotted];
m6_455 -> m6_259  [key=0, style=bold, color=blue];
m6_665 -> m6_676  [key=0, style=solid];
m6_677 -> m6_678  [key=0, style=solid];
m6_677 -> m6_681  [key=0, style=solid];
m6_677 -> m6_120  [key=2, style=dotted];
m6_678 -> m6_679  [key=0, style=solid];
m6_678 -> m6_684  [key=2, style=dotted];
m6_678 -> m6_685  [key=2, style=dotted];
m6_680 -> m6_682  [key=0, style=solid];
m6_681 -> m6_683  [key=0, style=solid];
m6_681 -> m6_177  [key=2, style=dotted];
m6_676 -> m6_677  [key=0, style=solid];
m6_676 -> m6_678  [key=3, color=darkorchid, style=bold, label="Local variable char writeChar"];
m6_676 -> m6_682  [key=1, style=dashed, color=darkseagreen4, label=writeChar];
m6_679 -> m6_680  [key=0, style=solid];
m6_679 -> m6_682  [key=1, style=dashed, color=darkseagreen4, label=writeChar];
m6_682 -> m6_683  [key=0, style=solid];
m6_683 -> m6_665  [key=0, style=bold, color=blue];
m6_170 -> m6_21  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ParseValue"];
m6_170 -> m6_31  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ParseValue"];
m6_170 -> m6_851  [key=0, style=solid];
m6_852 -> m6_853  [key=0, style=solid];
m6_852 -> m6_861  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m6_852 -> m6_923  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m6_852 -> m6_925  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m6_852 -> m6_928  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m6_855 -> m6_856  [key=0, style=solid];
m6_855 -> m6_858  [key=0, style=solid];
m6_856 -> m6_857  [key=0, style=solid];
m6_856 -> m6_851  [key=0, style=solid];
m6_856 -> m6_83  [key=2, style=dotted];
m6_858 -> m6_851  [key=0, style=solid];
m6_861 -> m6_862  [key=0, style=solid];
m6_861 -> m6_17  [key=2, style=dotted];
m6_864 -> m6_865  [key=0, style=solid];
m6_864 -> m6_930  [key=2, style=dotted];
m6_867 -> m6_868  [key=0, style=solid];
m6_867 -> m6_931  [key=2, style=dotted];
m6_870 -> m6_871  [key=0, style=solid];
m6_870 -> m6_877  [key=0, style=solid];
m6_870 -> m6_120  [key=2, style=dotted];
m6_871 -> m6_872  [key=0, style=solid];
m6_871 -> m6_874  [key=1, style=dashed, color=darkseagreen4, label=next];
m6_873 -> m6_879  [key=0, style=solid];
m6_873 -> m6_556  [key=2, style=dotted];
m6_875 -> m6_879  [key=0, style=solid];
m6_875 -> m6_932  [key=2, style=dotted];
m6_876 -> m6_929  [key=0, style=solid];
m6_876 -> m6_260  [key=2, style=dotted];
m6_877 -> m6_878  [key=0, style=solid];
m6_878 -> m6_929  [key=0, style=solid];
m6_878 -> m6_557  [key=2, style=dotted];
m6_881 -> m6_882  [key=0, style=solid];
m6_881 -> m6_369  [key=2, style=dotted];
m6_884 -> m6_885  [key=0, style=solid];
m6_884 -> m6_368  [key=2, style=dotted];
m6_887 -> m6_888  [key=0, style=solid];
m6_887 -> m6_889  [key=0, style=solid];
m6_887 -> m6_120  [key=2, style=dotted];
m6_888 -> m6_890  [key=0, style=solid];
m6_888 -> m6_364  [key=2, style=dotted];
m6_889 -> m6_890  [key=0, style=solid];
m6_889 -> m6_365  [key=2, style=dotted];
m6_892 -> m6_893  [key=0, style=solid];
m6_892 -> m6_175  [key=2, style=dotted];
m6_895 -> m6_896  [key=0, style=solid];
m6_895 -> m6_933  [key=2, style=dotted];
m6_898 -> m6_899  [key=0, style=solid];
m6_899 -> m6_900  [key=0, style=solid];
m6_899 -> m6_174  [key=2, style=dotted];
m6_902 -> m6_903  [key=0, style=solid];
m6_903 -> m6_904  [key=0, style=solid];
m6_903 -> m6_174  [key=2, style=dotted];
m6_906 -> m6_907  [key=0, style=solid];
m6_907 -> m6_908  [key=0, style=solid];
m6_907 -> m6_174  [key=2, style=dotted];
m6_910 -> m6_911  [key=0, style=solid];
m6_910 -> m6_174  [key=2, style=dotted];
m6_913 -> m6_914  [key=0, style=solid];
m6_914 -> m6_915  [key=0, style=solid];
m6_914 -> m6_174  [key=2, style=dotted];
m6_917 -> m6_851  [key=0, style=solid];
m6_917 -> m6_261  [key=2, style=dotted];
m6_919 -> m6_851  [key=0, style=solid];
m6_919 -> m6_262  [key=2, style=dotted];
m6_922 -> m6_851  [key=0, style=solid];
m6_924 -> m6_851  [key=0, style=solid];
m6_926 -> m6_927  [key=0, style=solid];
m6_926 -> m6_365  [key=2, style=dotted];
m6_928 -> m6_929  [key=0, style=solid];
m6_928 -> m6_260  [key=2, style=dotted];
m6_851 -> m6_852  [key=0, style=solid];
m6_851 -> m6_929  [key=0, style=solid];
m6_853 -> m6_854  [key=0, style=solid];
m6_853 -> m6_859  [key=0, style=solid];
m6_853 -> m6_863  [key=0, style=solid];
m6_853 -> m6_866  [key=0, style=solid];
m6_853 -> m6_869  [key=0, style=solid];
m6_853 -> m6_880  [key=0, style=solid];
m6_853 -> m6_883  [key=0, style=solid];
m6_853 -> m6_886  [key=0, style=solid];
m6_853 -> m6_891  [key=0, style=solid];
m6_853 -> m6_894  [key=0, style=solid];
m6_853 -> m6_897  [key=0, style=solid];
m6_853 -> m6_901  [key=0, style=solid];
m6_853 -> m6_905  [key=0, style=solid];
m6_853 -> m6_909  [key=0, style=solid];
m6_853 -> m6_912  [key=0, style=solid];
m6_853 -> m6_916  [key=0, style=solid];
m6_853 -> m6_918  [key=0, style=solid];
m6_853 -> m6_920  [key=0, style=solid];
m6_853 -> m6_923  [key=0, style=solid];
m6_923 -> m6_924  [key=0, style=solid];
m6_923 -> m6_925  [key=0, style=solid];
m6_923 -> m6_263  [key=2, style=dotted];
m6_925 -> m6_926  [key=0, style=solid];
m6_925 -> m6_928  [key=0, style=solid];
m6_925 -> m6_934  [key=2, style=dotted];
m6_854 -> m6_855  [key=0, style=solid];
m6_857 -> m6_929  [key=0, style=solid];
m6_860 -> m6_861  [key=0, style=solid];
m6_862 -> m6_929  [key=0, style=solid];
m6_863 -> m6_864  [key=0, style=solid];
m6_865 -> m6_929  [key=0, style=solid];
m6_866 -> m6_867  [key=0, style=solid];
m6_868 -> m6_929  [key=0, style=solid];
m6_869 -> m6_870  [key=0, style=solid];
m6_872 -> m6_873  [key=0, style=solid];
m6_872 -> m6_874  [key=0, style=solid];
m6_874 -> m6_875  [key=0, style=solid];
m6_874 -> m6_876  [key=0, style=solid];
m6_879 -> m6_929  [key=0, style=solid];
m6_880 -> m6_881  [key=0, style=solid];
m6_882 -> m6_929  [key=0, style=solid];
m6_883 -> m6_884  [key=0, style=solid];
m6_885 -> m6_929  [key=0, style=solid];
m6_886 -> m6_887  [key=0, style=solid];
m6_890 -> m6_929  [key=0, style=solid];
m6_891 -> m6_892  [key=0, style=solid];
m6_893 -> m6_929  [key=0, style=solid];
m6_894 -> m6_895  [key=0, style=solid];
m6_896 -> m6_929  [key=0, style=solid];
m6_897 -> m6_898  [key=0, style=solid];
m6_900 -> m6_929  [key=0, style=solid];
m6_901 -> m6_902  [key=0, style=solid];
m6_904 -> m6_929  [key=0, style=solid];
m6_905 -> m6_906  [key=0, style=solid];
m6_908 -> m6_929  [key=0, style=solid];
m6_909 -> m6_910  [key=0, style=solid];
m6_911 -> m6_929  [key=0, style=solid];
m6_912 -> m6_913  [key=0, style=solid];
m6_915 -> m6_929  [key=0, style=solid];
m6_916 -> m6_917  [key=0, style=solid];
m6_918 -> m6_919  [key=0, style=solid];
m6_921 -> m6_922  [key=0, style=solid];
m6_927 -> m6_929  [key=0, style=solid];
m6_859 -> m6_860  [key=0, style=solid];
m6_920 -> m6_921  [key=0, style=solid];
m6_929 -> m6_170  [key=0, style=bold, color=blue];
m6_365 -> m6_187  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.ReadType readType"];
m6_365 -> m6_205  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.ReadType readType"];
m6_365 -> m6_999  [key=0, style=solid];
m6_365 -> m6_1009  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.ReadType"];
m6_365 -> m6_1054  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.ReadType"];
m6_365 -> m6_181  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.ReadType readType"];
m6_365 -> m6_185  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.ReadType readType"];
m6_365 -> m6_1022  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.ReadType"];
m6_365 -> m6_1039  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.ReadType"];
m6_1063 -> m6_1064  [key=0, style=solid, color=green];
m6_1005 -> m6_1063  [key=3, color=green, style=bold, label="Local variable object numberValue"];
m6_1005 -> m6_1006  [key=0, style=solid];
m6_1005 -> m6_1102  [key=1, style=dashed, color=darkseagreen4, label=numberValue];
m6_1005 -> m6_1010  [key=3, color=darkorchid, style=bold, label="Local variable object numberValue"];
m6_1005 -> m6_1027  [key=3, color=darkorchid, style=bold, label="Local variable object numberValue"];
m6_1005 -> m6_1031  [key=3, color=darkorchid, style=bold, label="Local variable object numberValue"];
m6_1005 -> m6_1049  [key=3, color=darkorchid, style=bold, label="Local variable object numberValue"];
m6_1005 -> m6_1078  [key=3, color=darkorchid, style=bold, label="Local variable object numberValue"];
m6_1005 -> m6_1116  [key=3, color=darkorchid, style=bold, label="Local variable object numberValue"];
m6_1005 -> m6_1091  [key=3, color=darkorchid, style=bold, label="Local variable object numberValue"];
m6_1005 -> m6_1095  [key=3, color=darkorchid, style=bold, label="Local variable object numberValue"];
m6_1057 -> m6_1063  [key=0, style=solid, color=green];
m6_1057 -> m6_1058  [key=0, style=solid];
m6_1064 -> m6_1065  [key=0, style=solid, color=green];
m6_1064 -> m6_1114  [key=2, style=dotted, color=green];
m6_1064 -> m6_1066  [key=1, style=dashed, color=green, label=value];
m6_1065 -> m6_1066  [key=0, style=solid];
m6_1065 -> m6_1067  [key=0, style=solid];
m6_1066 -> m6_1068  [key=0, style=solid];
m6_1066 -> m6_1102  [key=1, style=dashed, color=darkseagreen4, label=numberValue];
m6_1097 -> m6_1098  [key=0, style=solid, color=green];
m6_1097 -> m6_1099  [key=0, style=solid, color=green];
m6_1096 -> m6_1097  [key=0, style=solid, color=green];
m6_1096 -> m6_1114  [key=2, style=dotted];
m6_1096 -> m6_1098  [key=1, style=dashed, color=darkseagreen4, label=d];
m6_1098 -> m6_1100  [key=0, style=solid];
m6_1098 -> m6_1102  [key=1, style=dashed, color=darkseagreen4, label=numberValue];
m6_1099 -> m6_1103  [key=0, style=solid];
m6_1099 -> m6_176  [key=2, style=dotted];
m6_1099 -> m6_177  [key=2, style=dotted];
m6_1004 -> m6_1005  [key=0, style=solid];
m6_1004 -> m6_669  [key=2, style=dotted];
m6_1006 -> m6_1007  [key=0, style=solid];
m6_1102 -> m6_1103  [key=0, style=solid];
m6_1102 -> m6_65  [key=2, style=dotted];
m6_1010 -> m6_1011  [key=0, style=solid];
m6_1010 -> m6_61  [key=2, style=dotted];
m6_1010 -> m6_1012  [key=1, style=dashed, color=darkseagreen4, label=number];
m6_1010 -> m6_1013  [key=1, style=dashed, color=darkseagreen4, label=number];
m6_1010 -> m6_1014  [key=1, style=dashed, color=darkseagreen4, label=number];
m6_1010 -> m6_1016  [key=1, style=dashed, color=darkseagreen4, label=number];
m6_1010 -> m6_1018  [key=1, style=dashed, color=darkseagreen4, label=number];
m6_1010 -> m6_1021  [key=1, style=dashed, color=darkseagreen4, label=number];
m6_1027 -> m6_1028  [key=0, style=solid];
m6_1027 -> m6_1105  [key=2, style=dotted];
m6_1027 -> m6_1109  [key=2, style=dotted];
m6_1031 -> m6_1032  [key=0, style=solid];
m6_1049 -> m6_1050  [key=0, style=solid];
m6_1078 -> m6_1079  [key=0, style=solid];
m6_1091 -> m6_1092  [key=0, style=solid];
m6_1095 -> m6_1096  [key=0, style=solid];
m6_1008 -> m6_1057  [key=1, style=dashed, color=darkseagreen4, label=nonBase10];
m6_1008 -> m6_1009  [key=0, style=solid];
m6_1008 -> m6_1011  [key=1, style=dashed, color=darkseagreen4, label=nonBase10];
m6_1008 -> m6_1025  [key=1, style=dashed, color=darkseagreen4, label=nonBase10];
m6_1008 -> m6_1042  [key=1, style=dashed, color=darkseagreen4, label=nonBase10];
m6_1008 -> m6_1072  [key=1, style=dashed, color=darkseagreen4, label=nonBase10];
m6_1055 -> m6_1057  [key=0, style=solid];
m6_1055 -> m6_1056  [key=0, style=solid];
m6_1058 -> m6_1059  [key=0, style=solid];
m6_1058 -> m6_61  [key=2, style=dotted];
m6_1058 -> m6_1062  [key=1, style=dashed, color=darkseagreen4, label=number];
m6_999 -> m6_1000  [key=0, style=solid];
m6_999 -> m6_58  [key=2, style=dotted];
m6_1000 -> m6_1008  [key=1, style=dashed, color=darkseagreen4, label=firstChar];
m6_1000 -> m6_1001  [key=0, style=solid];
m6_1000 -> m6_1007  [key=1, style=dashed, color=darkseagreen4, label=firstChar];
m6_1000 -> m6_1024  [key=1, style=dashed, color=darkseagreen4, label=firstChar];
m6_1000 -> m6_1041  [key=1, style=dashed, color=darkseagreen4, label=firstChar];
m6_1000 -> m6_1056  [key=1, style=dashed, color=darkseagreen4, label=firstChar];
m6_1000 -> m6_1070  [key=1, style=dashed, color=darkseagreen4, label=firstChar];
m6_1001 -> m6_1004  [key=1, style=dashed, color=darkseagreen4, label=initialPosition];
m6_1001 -> m6_1002  [key=0, style=solid];
m6_1002 -> m6_1003  [key=0, style=solid];
m6_1002 -> m6_686  [key=2, style=dotted];
m6_1003 -> m6_1004  [key=0, style=solid];
m6_1003 -> m6_60  [key=2, style=dotted];
m6_1007 -> m6_1008  [key=0, style=solid];
m6_1007 -> m6_1055  [key=1, style=dashed, color=darkseagreen4, label=singleDigit];
m6_1007 -> m6_1104  [key=2, style=dotted];
m6_1007 -> m6_1023  [key=1, style=dashed, color=darkseagreen4, label=singleDigit];
m6_1007 -> m6_1040  [key=1, style=dashed, color=darkseagreen4, label=singleDigit];
m6_1007 -> m6_1069  [key=1, style=dashed, color=darkseagreen4, label=singleDigit];
m6_1016 -> m6_1103  [key=0, style=solid];
m6_1016 -> m6_176  [key=2, style=dotted];
m6_1016 -> m6_1107  [key=2, style=dotted];
m6_1019 -> m6_1103  [key=0, style=solid];
m6_1019 -> m6_61  [key=2, style=dotted];
m6_1019 -> m6_176  [key=2, style=dotted];
m6_1019 -> m6_177  [key=2, style=dotted];
m6_1026 -> m6_1027  [key=0, style=solid];
m6_1026 -> m6_61  [key=2, style=dotted];
m6_1026 -> m6_1030  [key=1, style=dashed, color=darkseagreen4, label=number];
m6_1030 -> m6_1103  [key=0, style=solid];
m6_1030 -> m6_176  [key=2, style=dotted];
m6_1030 -> m6_1107  [key=2, style=dotted];
m6_1032 -> m6_1033  [key=0, style=solid];
m6_1032 -> m6_1110  [key=2, style=dotted];
m6_1032 -> m6_1034  [key=1, style=dashed, color=darkseagreen4, label=value];
m6_1032 -> m6_1035  [key=1, style=dashed, color=darkseagreen4, label=parseResult];
m6_1036 -> m6_1103  [key=0, style=solid];
m6_1036 -> m6_61  [key=2, style=dotted];
m6_1036 -> m6_176  [key=2, style=dotted];
m6_1036 -> m6_177  [key=2, style=dotted];
m6_1037 -> m6_1103  [key=0, style=solid];
m6_1037 -> m6_61  [key=2, style=dotted];
m6_1037 -> m6_176  [key=2, style=dotted];
m6_1037 -> m6_177  [key=2, style=dotted];
m6_1043 -> m6_1044  [key=0, style=solid];
m6_1043 -> m6_61  [key=2, style=dotted];
m6_1043 -> m6_1047  [key=1, style=dashed, color=darkseagreen4, label=number];
m6_1047 -> m6_1103  [key=0, style=solid];
m6_1047 -> m6_176  [key=2, style=dotted];
m6_1047 -> m6_1107  [key=2, style=dotted];
m6_1048 -> m6_1049  [key=0, style=solid];
m6_1048 -> m6_61  [key=2, style=dotted];
m6_1048 -> m6_1050  [key=1, style=dashed, color=darkseagreen4, label=number];
m6_1052 -> m6_1103  [key=0, style=solid];
m6_1052 -> m6_61  [key=2, style=dotted];
m6_1052 -> m6_176  [key=2, style=dotted];
m6_1052 -> m6_177  [key=2, style=dotted];
m6_1062 -> m6_1103  [key=0, style=solid];
m6_1062 -> m6_176  [key=2, style=dotted];
m6_1062 -> m6_1107  [key=2, style=dotted];
m6_1067 -> m6_1103  [key=0, style=solid];
m6_1067 -> m6_61  [key=2, style=dotted];
m6_1067 -> m6_176  [key=2, style=dotted];
m6_1067 -> m6_177  [key=2, style=dotted];
m6_1073 -> m6_1074  [key=0, style=solid];
m6_1073 -> m6_61  [key=2, style=dotted];
m6_1073 -> m6_1076  [key=1, style=dashed, color=darkseagreen4, label=number];
m6_1076 -> m6_1103  [key=0, style=solid];
m6_1076 -> m6_176  [key=2, style=dotted];
m6_1076 -> m6_1107  [key=2, style=dotted];
m6_1079 -> m6_1080  [key=0, style=solid];
m6_1079 -> m6_1115  [key=2, style=dotted];
m6_1079 -> m6_1081  [key=1, style=dashed, color=darkseagreen4, label=value];
m6_1079 -> m6_1083  [key=1, style=dashed, color=darkseagreen4, label=parseResult];
m6_1084 -> m6_1085  [key=0, style=solid];
m6_1084 -> m6_61  [key=2, style=dotted];
m6_1084 -> m6_1087  [key=1, style=dashed, color=darkseagreen4, label=number];
m6_1086 -> m6_1103  [key=0, style=solid];
m6_1086 -> m6_61  [key=2, style=dotted];
m6_1086 -> m6_176  [key=2, style=dotted];
m6_1086 -> m6_177  [key=2, style=dotted];
m6_1089 -> m6_1099  [key=1, style=dashed, color=darkseagreen4, label=number];
m6_1089 -> m6_1090  [key=0, style=solid];
m6_1089 -> m6_61  [key=2, style=dotted];
m6_1089 -> m6_1092  [key=1, style=dashed, color=darkseagreen4, label=number];
m6_1089 -> m6_1094  [key=1, style=dashed, color=darkseagreen4, label=number];
m6_1090 -> m6_1091  [key=0, style=solid];
m6_1090 -> m6_1095  [key=0, style=solid];
m6_1094 -> m6_1103  [key=0, style=solid];
m6_1094 -> m6_176  [key=2, style=dotted];
m6_1094 -> m6_177  [key=2, style=dotted];
m6_1101 -> m6_1102  [key=0, style=solid];
m6_1101 -> m6_730  [key=2, style=dotted];
m6_1068 -> m6_1102  [key=1, style=dashed, color=darkseagreen4, label=numberType];
m6_1068 -> m6_1101  [key=0, style=solid];
m6_1100 -> m6_1102  [key=1, style=dashed, color=darkseagreen4, label=numberType];
m6_1100 -> m6_1101  [key=0, style=solid];
m6_1024 -> m6_1102  [key=1, style=dashed, color=darkseagreen4, label=numberValue];
m6_1024 -> m6_1038  [key=0, style=solid];
m6_1041 -> m6_1102  [key=1, style=dashed, color=darkseagreen4, label=numberValue];
m6_1041 -> m6_1053  [key=0, style=solid];
m6_1056 -> m6_1102  [key=1, style=dashed, color=darkseagreen4, label=numberValue];
m6_1056 -> m6_1068  [key=0, style=solid];
m6_1070 -> m6_1102  [key=1, style=dashed, color=darkseagreen4, label=numberValue];
m6_1070 -> m6_1071  [key=0, style=solid];
m6_1021 -> m6_1102  [key=1, style=dashed, color=darkseagreen4, label=numberValue];
m6_1021 -> m6_1101  [key=0, style=solid];
m6_1020 -> m6_1102  [key=1, style=dashed, color=darkseagreen4, label=numberType];
m6_1020 -> m6_1021  [key=0, style=solid];
m6_1028 -> m6_1102  [key=1, style=dashed, color=darkseagreen4, label=numberValue];
m6_1028 -> m6_1029  [key=0, style=solid];
m6_1028 -> m6_1038  [key=0, style=solid];
m6_1038 -> m6_1102  [key=1, style=dashed, color=darkseagreen4, label=numberType];
m6_1038 -> m6_1101  [key=0, style=solid];
m6_1034 -> m6_1102  [key=1, style=dashed, color=darkseagreen4, label=numberValue];
m6_1034 -> m6_1038  [key=0, style=solid];
m6_1045 -> m6_1102  [key=1, style=dashed, color=darkseagreen4, label=numberValue];
m6_1045 -> m6_1046  [key=0, style=solid];
m6_1045 -> m6_1053  [key=0, style=solid];
m6_1045 -> m6_1111  [key=2, style=dotted];
m6_1053 -> m6_1102  [key=1, style=dashed, color=darkseagreen4, label=numberType];
m6_1053 -> m6_1101  [key=0, style=solid];
m6_1051 -> m6_1102  [key=1, style=dashed, color=darkseagreen4, label=numberValue];
m6_1051 -> m6_1053  [key=0, style=solid];
m6_1060 -> m6_1102  [key=1, style=dashed, color=darkseagreen4, label=numberValue];
m6_1060 -> m6_1068  [key=0, style=solid];
m6_1060 -> m6_1061  [key=0, style=solid];
m6_1060 -> m6_1113  [key=2, style=dotted];
m6_1071 -> m6_1102  [key=1, style=dashed, color=darkseagreen4, label=numberType];
m6_1071 -> m6_1101  [key=0, style=solid];
m6_1074 -> m6_1102  [key=1, style=dashed, color=darkseagreen4, label=numberValue];
m6_1074 -> m6_1075  [key=0, style=solid];
m6_1074 -> m6_1077  [key=0, style=solid];
m6_1074 -> m6_1105  [key=2, style=dotted];
m6_1074 -> m6_1106  [key=2, style=dotted];
m6_1077 -> m6_1102  [key=1, style=dashed, color=darkseagreen4, label=numberType];
m6_1077 -> m6_1101  [key=0, style=solid];
m6_1081 -> m6_1102  [key=1, style=dashed, color=darkseagreen4, label=numberValue];
m6_1081 -> m6_1082  [key=0, style=solid];
m6_1082 -> m6_1102  [key=1, style=dashed, color=darkseagreen4, label=numberType];
m6_1082 -> m6_1101  [key=0, style=solid];
m6_1087 -> m6_1102  [key=1, style=dashed, color=darkseagreen4, label=numberValue];
m6_1087 -> m6_1116  [key=2, style=dotted];
m6_1087 -> m6_1088  [key=0, style=solid];
m6_1088 -> m6_1102  [key=1, style=dashed, color=darkseagreen4, label=numberType];
m6_1088 -> m6_1101  [key=0, style=solid];
m6_1093 -> m6_1102  [key=1, style=dashed, color=darkseagreen4, label=numberValue];
m6_1093 -> m6_1100  [key=0, style=solid];
m6_1009 -> m6_1010  [key=0, style=solid];
m6_1009 -> m6_1022  [key=0, style=solid];
m6_1011 -> m6_1012  [key=0, style=solid];
m6_1011 -> m6_1017  [key=0, style=solid];
m6_1012 -> m6_1013  [key=0, style=solid];
m6_1012 -> m6_1014  [key=0, style=solid];
m6_1012 -> m6_1105  [key=2, style=dotted];
m6_1013 -> m6_1020  [key=0, style=solid];
m6_1013 -> m6_1015  [key=0, style=solid];
m6_1013 -> m6_1106  [key=2, style=dotted];
m6_1014 -> m6_1020  [key=0, style=solid];
m6_1014 -> m6_1015  [key=0, style=solid];
m6_1014 -> m6_1106  [key=2, style=dotted];
m6_1018 -> m6_1019  [key=0, style=solid];
m6_1018 -> m6_1020  [key=0, style=solid];
m6_1018 -> m6_1108  [key=2, style=dotted];
m6_1025 -> m6_1031  [key=0, style=solid];
m6_1025 -> m6_1026  [key=0, style=solid];
m6_1050 -> m6_1052  [key=0, style=solid];
m6_1050 -> m6_1051  [key=0, style=solid];
m6_1050 -> m6_1112  [key=2, style=dotted];
m6_1072 -> m6_1078  [key=0, style=solid];
m6_1072 -> m6_1073  [key=0, style=solid];
m6_1092 -> m6_1094  [key=0, style=solid];
m6_1092 -> m6_1093  [key=0, style=solid];
m6_1092 -> m6_1112  [key=2, style=dotted];
m6_1042 -> m6_1043  [key=0, style=solid];
m6_1042 -> m6_1048  [key=0, style=solid];
m6_1054 -> m6_1055  [key=0, style=solid];
m6_1054 -> m6_1069  [key=0, style=solid];
m6_1059 -> m6_1060  [key=0, style=solid];
m6_1059 -> m6_1105  [key=2, style=dotted];
m6_1059 -> m6_1106  [key=2, style=dotted];
m6_1023 -> m6_1024  [key=0, style=solid];
m6_1023 -> m6_1025  [key=0, style=solid];
m6_1040 -> m6_1041  [key=0, style=solid];
m6_1040 -> m6_1042  [key=0, style=solid];
m6_1069 -> m6_1070  [key=0, style=solid];
m6_1069 -> m6_1072  [key=0, style=solid];
m6_1015 -> m6_1016  [key=0, style=solid];
m6_1029 -> m6_1030  [key=0, style=solid];
m6_1033 -> m6_1034  [key=0, style=solid];
m6_1033 -> m6_1035  [key=0, style=solid];
m6_1035 -> m6_1036  [key=0, style=solid];
m6_1035 -> m6_1037  [key=0, style=solid];
m6_1044 -> m6_1045  [key=0, style=solid];
m6_1044 -> m6_1105  [key=2, style=dotted];
m6_1044 -> m6_1106  [key=2, style=dotted];
m6_1046 -> m6_1047  [key=0, style=solid];
m6_1061 -> m6_1062  [key=0, style=solid];
m6_1075 -> m6_1076  [key=0, style=solid];
m6_1080 -> m6_1081  [key=0, style=solid];
m6_1080 -> m6_1083  [key=0, style=solid];
m6_1083 -> m6_1084  [key=0, style=solid];
m6_1083 -> m6_1089  [key=0, style=solid];
m6_1085 -> m6_1086  [key=0, style=solid];
m6_1085 -> m6_1087  [key=0, style=solid];
m6_1022 -> m6_1023  [key=0, style=solid];
m6_1022 -> m6_1039  [key=0, style=solid];
m6_1017 -> m6_1018  [key=0, style=solid];
m6_1039 -> m6_1054  [key=0, style=solid];
m6_1039 -> m6_1040  [key=0, style=solid];
m6_1103 -> m6_365  [key=0, style=bold, color=blue];
m6_178 -> m6_179  [key=0, style=solid];
m6_178 -> m6_181  [key=3, color=darkorchid, style=bold, label="method methodReturn int? ReadAsInt32"];
m6_179 -> m6_180  [key=0, style=solid];
m6_179 -> m6_181  [key=2, style=dotted];
m6_180 -> m6_178  [key=0, style=bold, color=blue];
m6_171 -> m6_21  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ParseObject"];
m6_171 -> m6_31  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ParseObject"];
m6_171 -> m6_774  [key=0, style=solid];
m6_171 -> m6_800  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ParseObject"];
m6_775 -> m6_776  [key=0, style=solid];
m6_775 -> m6_796  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m6_778 -> m6_779  [key=0, style=solid];
m6_778 -> m6_781  [key=0, style=solid];
m6_779 -> m6_780  [key=0, style=solid];
m6_779 -> m6_774  [key=0, style=solid];
m6_779 -> m6_83  [key=2, style=dotted];
m6_781 -> m6_774  [key=0, style=solid];
m6_783 -> m6_784  [key=0, style=solid];
m6_783 -> m6_174  [key=2, style=dotted];
m6_784 -> m6_785  [key=0, style=solid];
m6_787 -> m6_788  [key=0, style=solid];
m6_787 -> m6_175  [key=2, style=dotted];
m6_790 -> m6_774  [key=0, style=solid];
m6_790 -> m6_261  [key=2, style=dotted];
m6_792 -> m6_774  [key=0, style=solid];
m6_792 -> m6_262  [key=2, style=dotted];
m6_795 -> m6_774  [key=0, style=solid];
m6_797 -> m6_774  [key=0, style=solid];
m6_798 -> m6_799  [key=0, style=solid];
m6_798 -> m6_800  [key=2, style=dotted];
m6_774 -> m6_775  [key=0, style=solid];
m6_774 -> m6_799  [key=0, style=solid];
m6_776 -> m6_777  [key=0, style=solid];
m6_776 -> m6_782  [key=0, style=solid];
m6_776 -> m6_786  [key=0, style=solid];
m6_776 -> m6_789  [key=0, style=solid];
m6_776 -> m6_791  [key=0, style=solid];
m6_776 -> m6_793  [key=0, style=solid];
m6_776 -> m6_796  [key=0, style=solid];
m6_796 -> m6_797  [key=0, style=solid];
m6_796 -> m6_798  [key=0, style=solid];
m6_796 -> m6_263  [key=2, style=dotted];
m6_777 -> m6_778  [key=0, style=solid];
m6_780 -> m6_799  [key=0, style=solid];
m6_782 -> m6_783  [key=0, style=solid];
m6_785 -> m6_799  [key=0, style=solid];
m6_786 -> m6_787  [key=0, style=solid];
m6_788 -> m6_799  [key=0, style=solid];
m6_789 -> m6_790  [key=0, style=solid];
m6_791 -> m6_792  [key=0, style=solid];
m6_794 -> m6_795  [key=0, style=solid];
m6_793 -> m6_794  [key=0, style=solid];
m6_799 -> m6_171  [key=0, style=bold, color=blue];
m6_1279 -> m6_1064  [key=1, style=dashed, color=green, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_3  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_4  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_9  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_10  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_14  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_15  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_18  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_19  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_20  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_21  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_26  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_28  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_30  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_31  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_33  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_34  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_35  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_39  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_45  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_48  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_49  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_52  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_53  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_55  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_56  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_73  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_74  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_75  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_77  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_78  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_79  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_80  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_81  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_84  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_87  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_89  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_91  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_92  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_93  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_94  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_95  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_96  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_97  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_98  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_100  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_101  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_102  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_104  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_105  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_106  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_107  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_108  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_109  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_110  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_112  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_113  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_121  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_122  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_126  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_128  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_130  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_139  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_141  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_148  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_151  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_153  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_156  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_157  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_158  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_159  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_161  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_162  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_164  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_165  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_167  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_179  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_183  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_187  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_190  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_192  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_201  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_204  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_205  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_209  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_210  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_212  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_213  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_214  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_215  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_218  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_219  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_220  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_223  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_224  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_225  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_227  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_230  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_232  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_234  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_235  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_236  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_238  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_240  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_242  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_245  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_246  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_248  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_250  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_252  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_265  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_266  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_275  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_278  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_279  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_283  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_286  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_288  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_290  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_291  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_292  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_294  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_295  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_296  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_299  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_300  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_301  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_302  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_315  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_316  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_317  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_318  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_322  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_323  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_325  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_326  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_327  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_330  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_332  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_334  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_337  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_339  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_341  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_342  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_343  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_345  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_347  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_349  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_352  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_353  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_355  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_357  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_359  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_370  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_373  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_374  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_383  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_386  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_387  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_391  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_392  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_394  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_408  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_410  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_411  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_412  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_413  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_419  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_420  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_421  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_424  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_426  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_428  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_429  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_430  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_432  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_434  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_436  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_439  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_440  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_442  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_444  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_446  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_450  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_451  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_452  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_453  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_454  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_457  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_458  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_467  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_470  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_471  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_475  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_478  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_480  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_482  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_485  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_488  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_490  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_492  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_493  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_494  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_495  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_507  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_508  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_510  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_512  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_514  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_515  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_516  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_518  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_520  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_522  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_525  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_526  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_528  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_530  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_532  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_538  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_541  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_544  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_546  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_547  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_549  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_551  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_552  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_553  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_554  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_558  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_559  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_560  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_562  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_563  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_564  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_565  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_567  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_568  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_569  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_571  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_574  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_575  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_576  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_578  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_579  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_580  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_581  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_583  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_585  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_587  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_588  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_589  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_591  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_592  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_593  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_595  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_616  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_617  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_623  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_625  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_626  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_632  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_633  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_634  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_637  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_638  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_639  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_640  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_641  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_644  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_645  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_646  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_648  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_649  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_650  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_653  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_656  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_657  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_659  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_660  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_662  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_672  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_673  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_677  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_678  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_680  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_681  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_687  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_689  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_691  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_692  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_693  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_724  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_725  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_728  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_731  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_732  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_736  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_739  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_740  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_741  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_743  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_745  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_746  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_749  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_750  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_753  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_754  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_757  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_760  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_761  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_765  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_767  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_769  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_771  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_772  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_775  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_778  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_779  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_781  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_783  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_784  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_787  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_790  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_792  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_795  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_797  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_798  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_801  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_804  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_806  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_807  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_808  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_810  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_811  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_812  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_814  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_815  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_817  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_818  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_819  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_820  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_821  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_822  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_823  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_824  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_825  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_834  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_836  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_838  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_839  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_840  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_841  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_843  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_844  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_845  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_847  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_849  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_852  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_855  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_856  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_858  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_861  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_864  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_867  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_870  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_871  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_873  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_875  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_876  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_877  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_878  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_881  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_884  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_887  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_888  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_889  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_892  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_895  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_898  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_899  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_902  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_903  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_906  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_907  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_910  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_913  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_914  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_917  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_919  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_922  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_924  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_926  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_928  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_935  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_936  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_938  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_939  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_940  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_941  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_946  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_949  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_950  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_952  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_954  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_956  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_959  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_963  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_964  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_965  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_968  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_970  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_971  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_972  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_973  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_974  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_976  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_978  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_979  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_981  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_982  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_984  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_985  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_987  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_988  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_989  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_990  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_991  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_992  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_993  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_994  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_995  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_996  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_997  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_999  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1000  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1001  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1002  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1003  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1004  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1007  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1008  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1010  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1016  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1019  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1026  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1030  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1032  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1036  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1037  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1043  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1047  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1048  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1052  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1058  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1062  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1067  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1073  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1076  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1079  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1084  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1086  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1089  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1090  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1094  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1096  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1099  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1101  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1102  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1120  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1121  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1122  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1124  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1126  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1128  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1129  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1130  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1132  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1134  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1135  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1137  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1138  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1140  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1142  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1144  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1145  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1146  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1147  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1151  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1153  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1156  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1158  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1159  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1163  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1167  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1168  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1169  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1172  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1173  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1176  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1179  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1182  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1184  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1193  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1195  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1198  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1209  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1210  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1211  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1213  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1214  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1215  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1217  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1218  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1219  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1221  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1222  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1223  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1225  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1229  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1230  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1233  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1235  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1236  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1238  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1242  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1243  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1246  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1248  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1249  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1251  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1255  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1256  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1259  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1261  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1262  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1265  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1266  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1267  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1268  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1269  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1270  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m6_1279 -> m6_1271  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m7_162 -> m7_163  [key=0, style=solid];
m7_163 -> m7_164  [key=0, style=solid];
m7_163 -> m7_144  [key=2, style=dotted];
m7_163 -> m7_170  [key=1, style=dashed, color=darkseagreen4, label=a1];
m7_163 -> m7_176  [key=1, style=dashed, color=darkseagreen4, label=a1];
m7_163 -> m7_178  [key=1, style=dashed, color=darkseagreen4, label=a1];
m7_164 -> m7_165  [key=0, style=solid];
m7_164 -> m7_144  [key=2, style=dotted];
m7_164 -> m7_167  [key=1, style=dashed, color=darkseagreen4, label=a2];
m7_164 -> m7_171  [key=1, style=dashed, color=darkseagreen4, label=a2];
m7_164 -> m7_183  [key=1, style=dashed, color=darkseagreen4, label=a2];
m7_164 -> m7_185  [key=1, style=dashed, color=darkseagreen4, label=a2];
m7_170 -> m7_171  [key=0, style=solid];
m7_170 -> m7_116  [key=2, style=dotted];
m7_170 -> m7_173  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_170 -> m7_8  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m7_170 -> m7_163  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Linq.JArray "];
m7_165 -> m7_166  [key=0, style=solid];
m7_165 -> m7_167  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_165 -> m7_168  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_165 -> m7_8  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m7_167 -> m7_168  [key=0, style=solid];
m7_167 -> m7_145  [key=2, style=dotted];
m7_171 -> m7_172  [key=0, style=solid];
m7_171 -> m7_116  [key=2, style=dotted];
m7_171 -> m7_180  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_171 -> m7_8  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m7_171 -> m7_164  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Linq.JArray "];
m7_166 -> m7_167  [key=0, style=solid];
m7_166 -> m7_169  [key=0, style=solid];
m7_168 -> m7_166  [key=0, style=solid];
m7_168 -> m7_168  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_169 -> m7_170  [key=0, style=solid];
m7_169 -> m7_175  [key=1, style=dashed, color=darkseagreen4, label=interations];
m7_169 -> m7_176  [key=1, style=dashed, color=darkseagreen4, label=interations];
m7_169 -> m7_171  [key=1, style=dashed, color=darkseagreen4, label=interations];
m7_169 -> m7_182  [key=1, style=dashed, color=darkseagreen4, label=interations];
m7_169 -> m7_183  [key=1, style=dashed, color=darkseagreen4, label=interations];
m7_169 -> m7_33  [key=3, color=red, style=bold, label="Local variable int interations"];
m7_172 -> m7_162  [key=0, style=bold, color=blue];
m7_583 -> m7_584  [key=0, style=solid];
m7_583 -> m7_586  [key=1, style=dashed, color=darkseagreen4, label=bool];
m7_583 -> m7_588  [key=1, style=dashed, color=darkseagreen4, label=string];
m7_583 -> m7_589  [key=3, color=darkorchid, style=bold, label="method methodReturn T DeserializeJsonNet"];
m7_583 -> m7_581  [key=3, color=darkorchid, style=bold, label="Parameter variable string json"];
m7_583 -> m7_45  [key=3, color=darkorchid, style=bold, label="Parameter variable bool isoDateTimeConverter"];
m7_583 -> m7_260  [key=3, color=darkorchid, style=bold, label="Parameter variable bool isoDateTimeConverter"];
m7_584 -> m7_585  [key=0, style=solid];
m7_584 -> m7_589  [key=1, style=dashed, color=darkseagreen4, label=type];
m7_586 -> m7_587  [key=0, style=solid];
m7_586 -> m7_588  [key=0, style=solid];
m7_588 -> m7_589  [key=0, style=solid];
m7_588 -> m7_29  [key=2, style=dotted];
m7_588 -> m7_593  [key=2, style=dotted];
m7_585 -> m7_586  [key=0, style=solid];
m7_585 -> m7_296  [key=2, style=dotted];
m7_585 -> m7_587  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m7_585 -> m7_589  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m7_589 -> m7_590  [key=0, style=solid];
m7_589 -> m7_594  [key=2, style=dotted];
m7_587 -> m7_588  [key=0, style=solid];
m7_587 -> m7_525  [key=2, style=dotted];
m7_587 -> m7_592  [key=2, style=dotted];
m7_590 -> m7_591  [key=0, style=solid];
m7_591 -> m7_583  [key=0, style=bold, color=blue];
m7_545 -> m7_554  [key=0, style=solid];
m7_545 -> m7_557  [key=1, style=dashed, color=darkseagreen4, label=object];
m7_545 -> m7_395  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m7_554 -> m7_555  [key=0, style=solid];
m7_557 -> m7_558  [key=0, style=solid];
m7_557 -> m7_380  [key=2, style=dotted];
m7_555 -> m7_556  [key=0, style=solid];
m7_555 -> m7_544  [key=2, style=dotted];
m7_555 -> m7_557  [key=1, style=dashed, color=darkseagreen4, label=ms];
m7_555 -> m7_558  [key=1, style=dashed, color=darkseagreen4, label=ms];
m7_556 -> m7_557  [key=0, style=solid];
m7_556 -> m7_379  [key=2, style=dotted];
m7_558 -> m7_559  [key=0, style=solid];
m7_559 -> m7_560  [key=0, style=solid];
m7_560 -> m7_545  [key=0, style=bold, color=blue];
m7_72 -> m7_73  [key=0, style=solid];
m7_73 -> m7_74  [key=0, style=solid];
m7_73 -> m7_39  [key=2, style=dotted];
m7_74 -> m7_75  [key=0, style=solid];
m7_74 -> m7_79  [key=2, style=dotted];
m7_74 -> m7_39  [key=2, style=dotted];
m7_75 -> m7_76  [key=0, style=solid];
m7_75 -> m7_14  [key=2, style=dotted];
m7_76 -> m7_77  [key=0, style=solid];
m7_76 -> m7_39  [key=2, style=dotted];
m7_77 -> m7_78  [key=0, style=solid];
m7_77 -> m7_79  [key=2, style=dotted];
m7_77 -> m7_39  [key=2, style=dotted];
m7_78 -> m7_72  [key=0, style=bold, color=blue];
m7_39 -> m7_561  [key=0, style=solid];
m7_39 -> m7_563  [key=1, style=dashed, color=darkseagreen4, label=bool];
m7_39 -> m7_564  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod"];
m7_39 -> m7_567  [key=1, style=dashed, color=darkseagreen4, label="int?"];
m7_39 -> m7_571  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod"];
m7_39 -> m7_574  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod"];
m7_39 -> m7_8  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod method"];
m7_39 -> m7_62  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod method"];
m7_39 -> m7_63  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod method"];
m7_39 -> m7_69  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod method"];
m7_39 -> m7_70  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod method"];
m7_39 -> m7_64  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod method"];
m7_39 -> m7_65  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod method"];
m7_39 -> m7_68  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod method"];
m7_39 -> m7_32  [key=3, color=red, style=bold, label="Parameter variable object json"];
m7_39 -> m7_44  [key=3, color=darkorchid, style=bold, label="Parameter variable object json"];
m7_39 -> m7_55  [key=3, color=darkorchid, style=bold, label="Parameter variable object json"];
m7_39 -> m7_197  [key=3, color=darkorchid, style=bold, label="Parameter variable object json"];
m7_39 -> m7_14  [key=3, color=darkorchid, style=bold, label="Parameter variable object json"];
m7_39 -> m7_33  [key=3, color=red, style=bold, label="Parameter variable int? iterations"];
m7_39 -> m7_45  [key=3, color=darkorchid, style=bold, label="Parameter variable bool warmUp"];
m7_561 -> m7_562  [key=0, style=solid];
m7_561 -> m7_579  [key=2, style=dotted];
m7_563 -> m7_564  [key=0, style=solid];
m7_563 -> m7_565  [key=0, style=solid];
m7_564 -> m7_565  [key=0, style=solid];
m7_564 -> m7_581  [key=2, style=dotted];
m7_567 -> m7_568  [key=0, style=solid];
m7_567 -> m7_567  [key=1, style=dashed, color=darkseagreen4, label="int?"];
m7_567 -> m7_570  [key=1, style=dashed, color=darkseagreen4, label="int?"];
m7_571 -> m7_572  [key=0, style=solid];
m7_571 -> m7_581  [key=2, style=dotted];
m7_571 -> m7_576  [key=1, style=dashed, color=darkseagreen4, label=value];
m7_574 -> m7_575  [key=0, style=solid];
m7_574 -> m7_130  [key=2, style=dotted];
m7_562 -> m7_563  [key=0, style=solid];
m7_562 -> m7_580  [key=2, style=dotted];
m7_565 -> m7_566  [key=0, style=solid];
m7_565 -> m7_127  [key=2, style=dotted];
m7_565 -> m7_573  [key=1, style=dashed, color=darkseagreen4, label=timed];
m7_565 -> m7_575  [key=1, style=dashed, color=darkseagreen4, label=timed];
m7_566 -> m7_567  [key=0, style=solid];
m7_566 -> m7_128  [key=2, style=dotted];
m7_573 -> m7_574  [key=0, style=solid];
m7_573 -> m7_131  [key=2, style=dotted];
m7_575 -> m7_576  [key=0, style=solid];
m7_575 -> m7_130  [key=2, style=dotted];
m7_568 -> m7_569  [key=0, style=solid];
m7_568 -> m7_576  [key=1, style=dashed, color=darkseagreen4, label=value];
m7_568 -> m7_581  [key=3, color=darkorchid, style=bold, label="Local variable T value"];
m7_570 -> m7_571  [key=0, style=solid];
m7_570 -> m7_573  [key=0, style=solid];
m7_570 -> m7_8  [key=3, color=darkorchid, style=bold, label="Local variable int x"];
m7_569 -> m7_570  [key=0, style=solid];
m7_569 -> m7_572  [key=1, style=dashed, color=darkseagreen4, label=x];
m7_576 -> m7_577  [key=0, style=solid];
m7_576 -> m7_582  [key=2, style=dotted];
m7_572 -> m7_570  [key=0, style=solid];
m7_572 -> m7_572  [key=1, style=dashed, color=darkseagreen4, label=x];
m7_577 -> m7_578  [key=0, style=solid];
m7_577 -> m7_396  [key=2, style=dotted];
m7_578 -> m7_39  [key=0, style=bold, color=blue];
m7_713 -> m7_714  [key=0, style=solid];
m7_714 -> m7_715  [key=0, style=solid];
m7_714 -> m7_717  [key=2, style=dotted];
m7_715 -> m7_716  [key=0, style=solid];
m7_715 -> m7_10  [key=2, style=dotted];
m7_716 -> m7_713  [key=0, style=bold, color=blue];
m7_429 -> m7_430  [key=0, style=solid];
m7_429 -> m7_432  [key=1, style=dashed, color=darkseagreen4, label=object];
m7_429 -> m7_395  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m7_430 -> m7_431  [key=0, style=solid];
m7_430 -> m7_368  [key=2, style=dotted];
m7_430 -> m7_356  [key=2, style=dotted];
m7_430 -> m7_432  [key=1, style=dashed, color=darkseagreen4, label=dataContractSerializer];
m7_432 -> m7_433  [key=0, style=solid];
m7_432 -> m7_357  [key=2, style=dotted];
m7_431 -> m7_432  [key=0, style=solid];
m7_431 -> m7_340  [key=2, style=dotted];
m7_431 -> m7_433  [key=1, style=dashed, color=darkseagreen4, label=ms];
m7_431 -> m7_434  [key=1, style=dashed, color=darkseagreen4, label=ms];
m7_433 -> m7_434  [key=0, style=solid];
m7_433 -> m7_437  [key=2, style=dotted];
m7_434 -> m7_435  [key=0, style=solid];
m7_434 -> m7_438  [key=2, style=dotted];
m7_435 -> m7_436  [key=0, style=solid];
m7_435 -> m7_439  [key=2, style=dotted];
m7_436 -> m7_429  [key=0, style=bold, color=blue];
m7_634 -> m7_635  [key=0, style=solid];
m7_634 -> m7_636  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m7_634 -> m7_637  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m7_634 -> m7_638  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m7_634 -> m7_640  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m7_634 -> m7_642  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m7_634 -> m7_644  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m7_634 -> m7_597  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonTextReader reader"];
m7_635 -> m7_636  [key=0, style=solid];
m7_635 -> m7_418  [key=2, style=dotted];
m7_635 -> m7_640  [key=1, style=dashed, color=darkseagreen4, label=a];
m7_635 -> m7_642  [key=1, style=dashed, color=darkseagreen4, label=a];
m7_635 -> m7_644  [key=1, style=dashed, color=darkseagreen4, label=a];
m7_635 -> m7_645  [key=1, style=dashed, color=darkseagreen4, label=a];
m7_636 -> m7_637  [key=0, style=solid];
m7_636 -> m7_645  [key=0, style=solid];
m7_636 -> m7_30  [key=2, style=dotted];
m7_637 -> m7_638  [key=0, style=solid];
m7_637 -> m7_645  [key=0, style=solid];
m7_638 -> m7_639  [key=0, style=solid];
m7_638 -> m7_641  [key=0, style=solid];
m7_638 -> m7_643  [key=0, style=solid];
m7_640 -> m7_636  [key=0, style=solid];
m7_640 -> m7_631  [key=2, style=dotted];
m7_642 -> m7_636  [key=0, style=solid];
m7_642 -> m7_631  [key=2, style=dotted];
m7_644 -> m7_636  [key=0, style=solid];
m7_644 -> m7_632  [key=2, style=dotted];
m7_644 -> m7_629  [key=2, style=dotted];
m7_645 -> m7_646  [key=0, style=solid];
m7_639 -> m7_640  [key=0, style=solid];
m7_641 -> m7_642  [key=0, style=solid];
m7_643 -> m7_644  [key=0, style=solid];
m7_646 -> m7_634  [key=0, style=bold, color=blue];
m7_89 -> m7_90  [key=0, style=solid];
m7_90 -> m7_91  [key=0, style=solid];
m7_90 -> m7_97  [key=2, style=dotted];
m7_90 -> m7_92  [key=1, style=dashed, color=darkseagreen4, label=image];
m7_90 -> m7_93  [key=1, style=dashed, color=darkseagreen4, label=image];
m7_90 -> m7_94  [key=1, style=dashed, color=darkseagreen4, label=image];
m7_90 -> m7_95  [key=1, style=dashed, color=darkseagreen4, label=image];
m7_91 -> m7_92  [key=0, style=solid];
m7_91 -> m7_98  [key=2, style=dotted];
m7_92 -> m7_93  [key=0, style=solid];
m7_93 -> m7_94  [key=0, style=solid];
m7_94 -> m7_95  [key=0, style=solid];
m7_95 -> m7_96  [key=0, style=solid];
m7_95 -> m7_88  [key=2, style=dotted];
m7_96 -> m7_89  [key=0, style=bold, color=blue];
m7_689 -> m7_690  [key=0, style=solid];
m7_689 -> m7_581  [key=3, color=darkorchid, style=bold, label="Parameter variable string xml"];
m7_690 -> m7_691  [key=0, style=solid];
m7_690 -> m7_544  [key=2, style=dotted];
m7_690 -> m7_327  [key=2, style=dotted];
m7_690 -> m7_692  [key=1, style=dashed, color=darkseagreen4, label=ms];
m7_691 -> m7_692  [key=0, style=solid];
m7_691 -> m7_355  [key=2, style=dotted];
m7_692 -> m7_693  [key=0, style=solid];
m7_692 -> m7_666  [key=2, style=dotted];
m7_693 -> m7_689  [key=0, style=bold, color=blue];
m7_718 -> m7_719  [key=0, style=solid];
m7_719 -> m7_720  [key=0, style=solid];
m7_719 -> m7_127  [key=2, style=dotted];
m7_719 -> m7_725  [key=1, style=dashed, color=darkseagreen4, label=timer];
m7_719 -> m7_726  [key=1, style=dashed, color=darkseagreen4, label=timer];
m7_720 -> m7_721  [key=0, style=solid];
m7_720 -> m7_128  [key=2, style=dotted];
m7_725 -> m7_726  [key=0, style=solid];
m7_725 -> m7_131  [key=2, style=dotted];
m7_726 -> m7_727  [key=0, style=solid];
m7_726 -> m7_729  [key=2, style=dotted];
m7_721 -> m7_722  [key=0, style=solid];
m7_721 -> m7_724  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_721 -> m7_8  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m7_722 -> m7_723  [key=0, style=solid];
m7_722 -> m7_725  [key=0, style=solid];
m7_724 -> m7_722  [key=0, style=solid];
m7_724 -> m7_724  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_723 -> m7_724  [key=0, style=solid];
m7_723 -> m7_208  [key=2, style=dotted];
m7_727 -> m7_728  [key=0, style=solid];
m7_727 -> m7_129  [key=2, style=dotted];
m7_728 -> m7_718  [key=0, style=bold, color=blue];
m7_31 -> m7_32  [key=0, style=solid, color=red];
m7_32 -> m7_33  [key=0, style=solid, color=red];
m7_32 -> m7_35  [key=2, style=dotted, color=red];
m7_32 -> m7_36  [key=2, style=dotted, color=red];
m7_32 -> m7_37  [key=2, style=dotted, color=red];
m7_32 -> m7_38  [key=2, style=dotted, color=red];
m7_32 -> m7_40  [key=1, style=dashed, color=red, label="lambda expression"];
m7_33 -> m7_34  [key=0, style=solid, color=red];
m7_33 -> m7_39  [key=2, style=dotted, color=red];
m7_34 -> m7_31  [key=0, style=bold, color=blue];
m7_581 -> m7_667  [key=0, style=solid];
m7_581 -> m7_669  [key=1, style=dashed, color=darkseagreen4, label=object];
m7_581 -> m7_671  [key=1, style=dashed, color=darkseagreen4, label=object];
m7_581 -> m7_674  [key=1, style=dashed, color=darkseagreen4, label=object];
m7_581 -> m7_677  [key=1, style=dashed, color=darkseagreen4, label=object];
m7_581 -> m7_679  [key=1, style=dashed, color=darkseagreen4, label=object];
m7_581 -> m7_681  [key=1, style=dashed, color=darkseagreen4, label=object];
m7_581 -> m7_683  [key=1, style=dashed, color=darkseagreen4, label=object];
m7_581 -> m7_685  [key=1, style=dashed, color=darkseagreen4, label=object];
m7_581 -> m7_686  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod"];
m7_581 -> m7_39  [key=3, color=darkorchid, style=bold, label="Parameter variable object json"];
m7_581 -> m7_583  [key=3, color=darkorchid, style=bold, label="method methodReturn T Deserialize"];
m7_581 -> m7_647  [key=3, color=darkorchid, style=bold, label="method methodReturn T Deserialize"];
m7_581 -> m7_688  [key=3, color=darkorchid, style=bold, label="method methodReturn T Deserialize"];
m7_581 -> m7_656  [key=3, color=darkorchid, style=bold, label="method methodReturn T Deserialize"];
m7_581 -> m7_689  [key=3, color=darkorchid, style=bold, label="method methodReturn T Deserialize"];
m7_581 -> m7_661  [key=3, color=darkorchid, style=bold, label="method methodReturn T Deserialize"];
m7_667 -> m7_668  [key=0, style=solid];
m7_667 -> m7_670  [key=0, style=solid];
m7_667 -> m7_672  [key=0, style=solid];
m7_667 -> m7_676  [key=0, style=solid];
m7_667 -> m7_678  [key=0, style=solid];
m7_667 -> m7_680  [key=0, style=solid];
m7_667 -> m7_682  [key=0, style=solid];
m7_667 -> m7_684  [key=0, style=solid];
m7_667 -> m7_686  [key=0, style=solid];
m7_669 -> m7_687  [key=0, style=solid];
m7_669 -> m7_583  [key=2, style=dotted];
m7_671 -> m7_687  [key=0, style=solid];
m7_671 -> m7_583  [key=2, style=dotted];
m7_674 -> m7_687  [key=0, style=solid];
m7_674 -> m7_595  [key=2, style=dotted];
m7_677 -> m7_687  [key=0, style=solid];
m7_677 -> m7_647  [key=2, style=dotted];
m7_679 -> m7_687  [key=0, style=solid];
m7_679 -> m7_688  [key=2, style=dotted];
m7_681 -> m7_687  [key=0, style=solid];
m7_681 -> m7_656  [key=2, style=dotted];
m7_683 -> m7_687  [key=0, style=solid];
m7_683 -> m7_689  [key=2, style=dotted];
m7_685 -> m7_687  [key=0, style=solid];
m7_685 -> m7_661  [key=2, style=dotted];
m7_686 -> m7_687  [key=0, style=solid];
m7_686 -> m7_546  [key=2, style=dotted];
m7_686 -> m7_547  [key=2, style=dotted];
m7_668 -> m7_669  [key=0, style=solid];
m7_670 -> m7_671  [key=0, style=solid];
m7_672 -> m7_673  [key=0, style=solid];
m7_676 -> m7_677  [key=0, style=solid];
m7_678 -> m7_679  [key=0, style=solid];
m7_680 -> m7_681  [key=0, style=solid];
m7_682 -> m7_683  [key=0, style=solid];
m7_684 -> m7_685  [key=0, style=solid];
m7_673 -> m7_674  [key=0, style=solid];
m7_673 -> m7_675  [key=0, style=solid];
m7_675 -> m7_687  [key=0, style=solid];
m7_687 -> m7_581  [key=0, style=bold, color=blue];
m7_698 -> m7_699  [key=0, style=solid];
m7_699 -> m7_700  [key=0, style=solid];
m7_699 -> m7_704  [key=1, style=dashed, color=darkseagreen4, label=rootValue];
m7_699 -> m7_710  [key=1, style=dashed, color=darkseagreen4, label=rootValue];
m7_699 -> m7_141  [key=3, color=darkorchid, style=bold, label="Local variable Newtonsoft.Json.Tests.LargeRecursiveTestClass rootValue"];
m7_699 -> m7_703  [key=3, color=darkorchid, style=bold, label="Local variable Newtonsoft.Json.Tests.LargeRecursiveTestClass rootValue"];
m7_700 -> m7_701  [key=0, style=solid];
m7_700 -> m7_706  [key=1, style=dashed, color=darkseagreen4, label=parentValue];
m7_700 -> m7_707  [key=1, style=dashed, color=darkseagreen4, label=parentValue];
m7_700 -> m7_141  [key=3, color=darkorchid, style=bold, label="Local variable Newtonsoft.Json.Tests.LargeRecursiveTestClass parentValue"];
m7_700 -> m7_703  [key=3, color=darkorchid, style=bold, label="Local variable Newtonsoft.Json.Tests.LargeRecursiveTestClass parentValue"];
m7_704 -> m7_705  [key=0, style=solid];
m7_704 -> m7_706  [key=0, style=solid];
m7_710 -> m7_711  [key=0, style=solid];
m7_710 -> m7_10  [key=2, style=dotted];
m7_701 -> m7_702  [key=0, style=solid];
m7_701 -> m7_709  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_701 -> m7_8  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m7_706 -> m7_707  [key=0, style=solid];
m7_706 -> m7_708  [key=0, style=solid];
m7_707 -> m7_708  [key=0, style=solid];
m7_702 -> m7_703  [key=0, style=solid];
m7_702 -> m7_710  [key=0, style=solid];
m7_709 -> m7_702  [key=0, style=solid];
m7_709 -> m7_709  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_703 -> m7_704  [key=0, style=solid];
m7_703 -> m7_712  [key=2, style=dotted];
m7_703 -> m7_705  [key=1, style=dashed, color=darkseagreen4, label=currentValue];
m7_703 -> m7_707  [key=1, style=dashed, color=darkseagreen4, label=currentValue];
m7_703 -> m7_708  [key=1, style=dashed, color=darkseagreen4, label=currentValue];
m7_705 -> m7_706  [key=0, style=solid];
m7_705 -> m7_710  [key=1, style=dashed, color=darkseagreen4, label=rootValue];
m7_708 -> m7_709  [key=0, style=solid];
m7_711 -> m7_698  [key=0, style=bold, color=blue];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_2  [key=0, style=solid];
m7_1 -> m7_4  [key=2, style=dotted];
m7_2 -> m7_3  [key=0, style=solid];
m7_2 -> m7_5  [key=2, style=dotted];
m7_3 -> m7_0  [key=0, style=bold, color=blue];
m7_19 -> m7_397  [key=0, style=solid];
m7_397 -> m7_398  [key=0, style=solid];
m7_397 -> m7_414  [key=2, style=dotted];
m7_397 -> m7_399  [key=1, style=dashed, color=darkseagreen4, label=test];
m7_397 -> m7_400  [key=1, style=dashed, color=darkseagreen4, label=test];
m7_397 -> m7_401  [key=1, style=dashed, color=darkseagreen4, label=test];
m7_397 -> m7_402  [key=1, style=dashed, color=darkseagreen4, label=test];
m7_397 -> m7_403  [key=1, style=dashed, color=darkseagreen4, label=test];
m7_397 -> m7_407  [key=1, style=dashed, color=darkseagreen4, label=test];
m7_397 -> m7_411  [key=1, style=dashed, color=darkseagreen4, label=test];
m7_397 -> m7_412  [key=1, style=dashed, color=darkseagreen4, label=test];
m7_398 -> m7_399  [key=0, style=solid];
m7_398 -> m7_415  [key=2, style=dotted];
m7_399 -> m7_400  [key=0, style=solid];
m7_400 -> m7_401  [key=0, style=solid];
m7_400 -> m7_416  [key=2, style=dotted];
m7_401 -> m7_402  [key=0, style=solid];
m7_402 -> m7_403  [key=0, style=solid];
m7_402 -> m7_417  [key=2, style=dotted];
m7_403 -> m7_404  [key=0, style=solid];
m7_403 -> m7_58  [key=2, style=dotted];
m7_407 -> m7_408  [key=0, style=solid];
m7_407 -> m7_419  [key=2, style=dotted];
m7_411 -> m7_412  [key=0, style=solid];
m7_411 -> m7_419  [key=2, style=dotted];
m7_412 -> m7_413  [key=0, style=solid];
m7_404 -> m7_405  [key=0, style=solid];
m7_404 -> m7_418  [key=2, style=dotted];
m7_404 -> m7_406  [key=1, style=dashed, color=darkseagreen4, label=address];
m7_404 -> m7_407  [key=1, style=dashed, color=darkseagreen4, label=address];
m7_405 -> m7_406  [key=0, style=solid];
m7_405 -> m7_416  [key=2, style=dotted];
m7_406 -> m7_407  [key=0, style=solid];
m7_408 -> m7_409  [key=0, style=solid];
m7_408 -> m7_418  [key=2, style=dotted];
m7_408 -> m7_410  [key=1, style=dashed, color=darkseagreen4, label=address];
m7_408 -> m7_411  [key=1, style=dashed, color=darkseagreen4, label=address];
m7_409 -> m7_410  [key=0, style=solid];
m7_409 -> m7_416  [key=2, style=dotted];
m7_410 -> m7_411  [key=0, style=solid];
m7_413 -> m7_19  [key=0, style=bold, color=blue];
m7_43 -> m7_44  [key=0, style=solid];
m7_44 -> m7_45  [key=0, style=solid];
m7_44 -> m7_47  [key=2, style=dotted];
m7_45 -> m7_46  [key=0, style=solid];
m7_45 -> m7_39  [key=2, style=dotted];
m7_46 -> m7_43  [key=0, style=bold, color=blue];
m7_15 -> m7_16  [key=0, style=solid];
m7_16 -> m7_17  [key=0, style=solid];
m7_16 -> m7_19  [key=2, style=dotted];
m7_17 -> m7_18  [key=0, style=solid];
m7_17 -> m7_5  [key=2, style=dotted];
m7_18 -> m7_15  [key=0, style=bold, color=blue];
m7_4 -> m7_420  [key=0, style=solid];
m7_420 -> m7_421  [key=0, style=solid];
m7_420 -> m7_422  [key=2, style=dotted];
m7_421 -> m7_4  [key=0, style=bold, color=blue];
m7_85 -> m7_86  [key=0, style=solid];
m7_86 -> m7_87  [key=0, style=solid];
m7_86 -> m7_19  [key=2, style=dotted];
m7_86 -> m7_88  [key=2, style=dotted];
m7_87 -> m7_85  [key=0, style=bold, color=blue];
m7_10 -> m7_381  [key=0, style=solid];
m7_10 -> m7_387  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod"];
m7_10 -> m7_390  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod"];
m7_10 -> m7_8  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod method"];
m7_10 -> m7_62  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod method"];
m7_10 -> m7_63  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod method"];
m7_10 -> m7_64  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod method"];
m7_10 -> m7_65  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod method"];
m7_10 -> m7_67  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod method"];
m7_10 -> m7_68  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod method"];
m7_10 -> m7_69  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod method"];
m7_10 -> m7_70  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod method"];
m7_10 -> m7_7  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m7_10 -> m7_49  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m7_10 -> m7_5  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m7_10 -> m7_699  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m7_10 -> m7_714  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m7_381 -> m7_382  [key=0, style=solid];
m7_381 -> m7_395  [key=2, style=dotted];
m7_387 -> m7_388  [key=0, style=solid];
m7_387 -> m7_395  [key=2, style=dotted];
m7_387 -> m7_392  [key=1, style=dashed, color=darkseagreen4, label=json];
m7_390 -> m7_391  [key=0, style=solid];
m7_390 -> m7_130  [key=2, style=dotted];
m7_382 -> m7_383  [key=0, style=solid];
m7_382 -> m7_127  [key=2, style=dotted];
m7_382 -> m7_389  [key=1, style=dashed, color=darkseagreen4, label=timed];
m7_382 -> m7_391  [key=1, style=dashed, color=darkseagreen4, label=timed];
m7_383 -> m7_384  [key=0, style=solid];
m7_383 -> m7_128  [key=2, style=dotted];
m7_389 -> m7_390  [key=0, style=solid];
m7_389 -> m7_131  [key=2, style=dotted];
m7_391 -> m7_392  [key=0, style=solid];
m7_391 -> m7_130  [key=2, style=dotted];
m7_384 -> m7_385  [key=0, style=solid];
m7_384 -> m7_392  [key=1, style=dashed, color=darkseagreen4, label=json];
m7_384 -> m7_141  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m7_384 -> m7_395  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m7_385 -> m7_386  [key=0, style=solid];
m7_385 -> m7_388  [key=1, style=dashed, color=darkseagreen4, label=x];
m7_385 -> m7_8  [key=3, color=darkorchid, style=bold, label="Local variable int x"];
m7_392 -> m7_393  [key=0, style=solid];
m7_392 -> m7_129  [key=2, style=dotted];
m7_386 -> m7_387  [key=0, style=solid];
m7_386 -> m7_389  [key=0, style=solid];
m7_388 -> m7_386  [key=0, style=solid];
m7_388 -> m7_388  [key=1, style=dashed, color=darkseagreen4, label=x];
m7_393 -> m7_394  [key=0, style=solid];
m7_393 -> m7_396  [key=2, style=dotted];
m7_394 -> m7_10  [key=0, style=bold, color=blue];
m7_5 -> m7_62  [key=0, style=solid];
m7_5 -> m7_63  [key=1, style=dashed, color=darkseagreen4, label=object];
m7_5 -> m7_64  [key=1, style=dashed, color=darkseagreen4, label=object];
m7_5 -> m7_65  [key=1, style=dashed, color=darkseagreen4, label=object];
m7_5 -> m7_66  [key=1, style=dashed, color=darkseagreen4, label=object];
m7_5 -> m7_67  [key=1, style=dashed, color=darkseagreen4, label=object];
m7_5 -> m7_68  [key=1, style=dashed, color=darkseagreen4, label=object];
m7_5 -> m7_69  [key=1, style=dashed, color=darkseagreen4, label=object];
m7_5 -> m7_70  [key=1, style=dashed, color=darkseagreen4, label=object];
m7_5 -> m7_1  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m7_5 -> m7_16  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m7_62 -> m7_63  [key=0, style=solid];
m7_62 -> m7_10  [key=2, style=dotted];
m7_63 -> m7_64  [key=0, style=solid];
m7_63 -> m7_10  [key=2, style=dotted];
m7_64 -> m7_65  [key=0, style=solid];
m7_64 -> m7_10  [key=2, style=dotted];
m7_65 -> m7_66  [key=0, style=solid];
m7_65 -> m7_10  [key=2, style=dotted];
m7_66 -> m7_67  [key=0, style=solid];
m7_66 -> m7_10  [key=2, style=dotted];
m7_67 -> m7_68  [key=0, style=solid];
m7_67 -> m7_10  [key=2, style=dotted];
m7_68 -> m7_69  [key=0, style=solid];
m7_68 -> m7_10  [key=2, style=dotted];
m7_69 -> m7_70  [key=0, style=solid];
m7_69 -> m7_10  [key=2, style=dotted];
m7_70 -> m7_71  [key=0, style=solid];
m7_70 -> m7_10  [key=2, style=dotted];
m7_71 -> m7_5  [key=0, style=bold, color=blue];
m7_14 -> m7_80  [key=0, style=solid];
m7_14 -> m7_81  [key=1, style=dashed, color=darkseagreen4, label=string];
m7_14 -> m7_82  [key=1, style=dashed, color=darkseagreen4, label=string];
m7_14 -> m7_83  [key=1, style=dashed, color=darkseagreen4, label=string];
m7_14 -> m7_529  [key=3, color=darkorchid, style=bold, label="Parameter variable string json"];
m7_80 -> m7_81  [key=0, style=solid];
m7_80 -> m7_39  [key=2, style=dotted];
m7_81 -> m7_82  [key=0, style=solid];
m7_81 -> m7_39  [key=2, style=dotted];
m7_82 -> m7_83  [key=0, style=solid];
m7_82 -> m7_39  [key=2, style=dotted];
m7_83 -> m7_84  [key=0, style=solid];
m7_83 -> m7_39  [key=2, style=dotted];
m7_84 -> m7_14  [key=0, style=bold, color=blue];
m7_187 -> m7_188  [key=0, style=solid];
m7_188 -> m7_189  [key=0, style=solid];
m7_188 -> m7_197  [key=2, style=dotted];
m7_188 -> m7_191  [key=1, style=dashed, color=darkseagreen4, label=o];
m7_188 -> m7_193  [key=1, style=dashed, color=darkseagreen4, label=o];
m7_189 -> m7_190  [key=0, style=solid];
m7_189 -> m7_191  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_189 -> m7_192  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_189 -> m7_8  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m7_191 -> m7_192  [key=0, style=solid];
m7_191 -> m7_198  [key=2, style=dotted];
m7_193 -> m7_194  [key=0, style=solid];
m7_193 -> m7_199  [key=2, style=dotted];
m7_193 -> m7_195  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m7_193 -> m7_204  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m7_190 -> m7_191  [key=0, style=solid];
m7_190 -> m7_193  [key=0, style=solid];
m7_192 -> m7_190  [key=0, style=solid];
m7_192 -> m7_192  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_194 -> m7_195  [key=0, style=solid];
m7_194 -> m7_203  [key=1, style=dashed, color=darkseagreen4, label=interations];
m7_194 -> m7_33  [key=3, color=red, style=bold, label="Local variable int interations"];
m7_195 -> m7_196  [key=0, style=solid];
m7_195 -> m7_116  [key=2, style=dotted];
m7_195 -> m7_200  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_195 -> m7_141  [key=3, color=darkorchid, style=bold, label="Local variable Newtonsoft.Json.Linq.JObject oo"];
m7_195 -> m7_8  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m7_195 -> m7_195  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Linq.JObject "];
m7_196 -> m7_187  [key=0, style=bold, color=blue];
m7_257 -> m7_258  [key=0, style=solid];
m7_258 -> m7_259  [key=0, style=solid];
m7_258 -> m7_260  [key=1, style=dashed, color=darkseagreen4, label=text];
m7_258 -> m7_265  [key=1, style=dashed, color=darkseagreen4, label=text];
m7_258 -> m7_267  [key=1, style=dashed, color=darkseagreen4, label=text];
m7_258 -> m7_258  [key=3, color=darkorchid, style=bold, label="Local variable string text"];
m7_259 -> m7_260  [key=0, style=solid];
m7_259 -> m7_264  [key=1, style=dashed, color=darkseagreen4, label=interations];
m7_259 -> m7_33  [key=3, color=red, style=bold, label="Local variable int interations"];
m7_260 -> m7_261  [key=0, style=solid];
m7_260 -> m7_116  [key=2, style=dotted];
m7_260 -> m7_262  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_260 -> m7_8  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m7_260 -> m7_141  [key=3, color=darkorchid, style=bold, label="Local variable char[] buffer"];
m7_260 -> m7_260  [key=3, color=darkorchid, style=bold, label="method methodReturn string "];
m7_261 -> m7_257  [key=0, style=bold, color=blue];
m7_762 -> m7_763  [key=0, style=solid];
m7_763 -> m7_764  [key=0, style=solid];
m7_763 -> m7_116  [key=2, style=dotted];
m7_763 -> m7_765  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_763 -> m7_8  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m7_763 -> m7_141  [key=3, color=darkorchid, style=bold, label="method methodReturn object "];
m7_764 -> m7_762  [key=0, style=bold, color=blue];
m7_730 -> m7_731  [key=0, style=solid];
m7_731 -> m7_732  [key=0, style=solid];
m7_731 -> m7_208  [key=2, style=dotted];
m7_731 -> m7_737  [key=1, style=dashed, color=darkseagreen4, label=test];
m7_731 -> m7_738  [key=1, style=dashed, color=darkseagreen4, label=test];
m7_732 -> m7_733  [key=0, style=solid];
m7_732 -> m7_116  [key=2, style=dotted];
m7_732 -> m7_734  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_732 -> m7_8  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m7_732 -> m7_141  [key=3, color=darkorchid, style=bold, label="method methodReturn object "];
m7_733 -> m7_730  [key=0, style=bold, color=blue];
m7_88 -> m7_305  [key=0, style=solid];
m7_88 -> m7_306  [key=1, style=dashed, color=darkseagreen4, label=object];
m7_88 -> m7_322  [key=1, style=dashed, color=darkseagreen4, label=object];
m7_88 -> m7_307  [key=1, style=dashed, color=darkseagreen4, label=object];
m7_88 -> m7_335  [key=1, style=dashed, color=darkseagreen4, label=object];
m7_88 -> m7_308  [key=1, style=dashed, color=darkseagreen4, label=object];
m7_88 -> m7_350  [key=1, style=dashed, color=darkseagreen4, label=object];
m7_88 -> m7_351  [key=1, style=dashed, color=darkseagreen4, label=object];
m7_88 -> m7_309  [key=1, style=dashed, color=darkseagreen4, label=object];
m7_88 -> m7_363  [key=1, style=dashed, color=darkseagreen4, label=object];
m7_88 -> m7_364  [key=1, style=dashed, color=darkseagreen4, label=object];
m7_88 -> m7_310  [key=1, style=dashed, color=darkseagreen4, label=object];
m7_88 -> m7_375  [key=1, style=dashed, color=darkseagreen4, label=object];
m7_88 -> m7_19  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m7_88 -> m7_90  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m7_305 -> m7_306  [key=0, style=solid];
m7_305 -> m7_321  [key=1, style=dashed, color=darkseagreen4, label=interations];
m7_305 -> m7_307  [key=1, style=dashed, color=darkseagreen4, label=interations];
m7_305 -> m7_331  [key=1, style=dashed, color=darkseagreen4, label=interations];
m7_305 -> m7_308  [key=1, style=dashed, color=darkseagreen4, label=interations];
m7_305 -> m7_348  [key=1, style=dashed, color=darkseagreen4, label=interations];
m7_305 -> m7_309  [key=1, style=dashed, color=darkseagreen4, label=interations];
m7_305 -> m7_361  [key=1, style=dashed, color=darkseagreen4, label=interations];
m7_305 -> m7_310  [key=1, style=dashed, color=darkseagreen4, label=interations];
m7_305 -> m7_372  [key=1, style=dashed, color=darkseagreen4, label=interations];
m7_306 -> m7_307  [key=0, style=solid];
m7_306 -> m7_116  [key=2, style=dotted];
m7_306 -> m7_318  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_306 -> m7_311  [key=1, style=dashed, color=darkseagreen4, label=jsonBytes];
m7_306 -> m7_141  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m7_306 -> m7_8  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m7_307 -> m7_308  [key=0, style=solid];
m7_307 -> m7_116  [key=2, style=dotted];
m7_307 -> m7_328  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_307 -> m7_312  [key=1, style=dashed, color=darkseagreen4, label=bsonBytes];
m7_307 -> m7_141  [key=3, color=darkorchid, style=bold, label="Local variable System.IO.MemoryStream ms"];
m7_307 -> m7_8  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m7_308 -> m7_309  [key=0, style=solid];
m7_308 -> m7_317  [key=2, style=dotted];
m7_308 -> m7_345  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_308 -> m7_314  [key=1, style=dashed, color=darkseagreen4, label=xmlBytes];
m7_308 -> m7_141  [key=3, color=darkorchid, style=bold, label="Local variable System.IO.MemoryStream ms"];
m7_308 -> m7_8  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m7_309 -> m7_310  [key=0, style=solid];
m7_309 -> m7_317  [key=2, style=dotted];
m7_309 -> m7_358  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_309 -> m7_313  [key=1, style=dashed, color=darkseagreen4, label=wcfJsonBytes];
m7_309 -> m7_141  [key=3, color=darkorchid, style=bold, label="Local variable System.IO.MemoryStream ms"];
m7_309 -> m7_8  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m7_310 -> m7_311  [key=0, style=solid];
m7_310 -> m7_116  [key=2, style=dotted];
m7_310 -> m7_369  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_310 -> m7_315  [key=1, style=dashed, color=darkseagreen4, label=binaryFormatterBytes];
m7_310 -> m7_141  [key=3, color=darkorchid, style=bold, label="Local variable System.IO.MemoryStream ms"];
m7_310 -> m7_8  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m7_311 -> m7_312  [key=0, style=solid];
m7_311 -> m7_130  [key=2, style=dotted];
m7_312 -> m7_313  [key=0, style=solid];
m7_312 -> m7_130  [key=2, style=dotted];
m7_314 -> m7_315  [key=0, style=solid];
m7_314 -> m7_130  [key=2, style=dotted];
m7_313 -> m7_314  [key=0, style=solid];
m7_313 -> m7_130  [key=2, style=dotted];
m7_315 -> m7_316  [key=0, style=solid];
m7_315 -> m7_130  [key=2, style=dotted];
m7_316 -> m7_88  [key=0, style=bold, color=blue];
m7_20 -> m7_21  [key=0, style=solid];
m7_21 -> m7_22  [key=0, style=solid];
m7_21 -> m7_26  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_21 -> m7_8  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m7_22 -> m7_23  [key=0, style=solid];
m7_22 -> m7_27  [key=0, style=solid];
m7_26 -> m7_22  [key=0, style=solid];
m7_26 -> m7_26  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_23 -> m7_24  [key=0, style=solid];
m7_23 -> m7_28  [key=2, style=dotted];
m7_24 -> m7_25  [key=0, style=solid];
m7_24 -> m7_29  [key=2, style=dotted];
m7_25 -> m7_25  [key=0, style=solid];
m7_25 -> m7_26  [key=0, style=solid];
m7_25 -> m7_30  [key=2, style=dotted];
m7_27 -> m7_20  [key=0, style=bold, color=blue];
m7_688 -> m7_694  [key=0, style=solid];
m7_688 -> m7_695  [key=1, style=dashed, color=darkseagreen4, label="byte[]"];
m7_688 -> m7_581  [key=3, color=darkorchid, style=bold, label="Parameter variable byte[] bytes"];
m7_694 -> m7_695  [key=0, style=solid];
m7_694 -> m7_379  [key=2, style=dotted];
m7_695 -> m7_696  [key=0, style=solid];
m7_695 -> m7_544  [key=2, style=dotted];
m7_695 -> m7_697  [key=2, style=dotted];
m7_696 -> m7_688  [key=0, style=bold, color=blue];
m7_209 -> m7_210  [key=0, style=solid];
m7_210 -> m7_211  [key=0, style=solid];
m7_210 -> m7_216  [key=1, style=dashed, color=darkseagreen4, label=totalIterations];
m7_210 -> m7_225  [key=1, style=dashed, color=darkseagreen4, label=totalIterations];
m7_210 -> m7_230  [key=1, style=dashed, color=darkseagreen4, label=totalIterations];
m7_210 -> m7_249  [key=1, style=dashed, color=darkseagreen4, label=totalIterations];
m7_210 -> m7_210  [key=3, color=darkorchid, style=bold, label="Local variable long totalIterations"];
m7_211 -> m7_212  [key=0, style=solid];
m7_211 -> m7_231  [key=1, style=dashed, color=darkseagreen4, label=xml];
m7_211 -> m7_211  [key=3, color=darkorchid, style=bold, label="Local variable string xml"];
m7_216 -> m7_217  [key=0, style=solid];
m7_216 -> m7_224  [key=0, style=solid];
m7_216 -> m7_8  [key=3, color=darkorchid, style=bold, label="Local variable long iteration"];
m7_225 -> m7_226  [key=0, style=solid];
m7_230 -> m7_231  [key=0, style=solid];
m7_230 -> m7_248  [key=0, style=solid];
m7_230 -> m7_8  [key=3, color=darkorchid, style=bold, label="Local variable long iteration"];
m7_249 -> m7_250  [key=0, style=solid];
m7_212 -> m7_213  [key=0, style=solid];
m7_212 -> m7_217  [key=1, style=dashed, color=darkseagreen4, label=json];
m7_212 -> m7_212  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m7_231 -> m7_232  [key=0, style=solid];
m7_231 -> m7_254  [key=2, style=dotted];
m7_213 -> m7_214  [key=0, style=solid];
m7_213 -> m7_127  [key=2, style=dotted];
m7_213 -> m7_224  [key=1, style=dashed, color=darkseagreen4, label=watch];
m7_213 -> m7_225  [key=1, style=dashed, color=darkseagreen4, label=watch];
m7_213 -> m7_226  [key=1, style=dashed, color=darkseagreen4, label=watch];
m7_213 -> m7_227  [key=1, style=dashed, color=darkseagreen4, label=watch];
m7_213 -> m7_228  [key=1, style=dashed, color=darkseagreen4, label=watch];
m7_213 -> m7_248  [key=1, style=dashed, color=darkseagreen4, label=watch];
m7_213 -> m7_249  [key=1, style=dashed, color=darkseagreen4, label=watch];
m7_213 -> m7_250  [key=1, style=dashed, color=darkseagreen4, label=watch];
m7_217 -> m7_218  [key=0, style=solid];
m7_217 -> m7_208  [key=2, style=dotted];
m7_217 -> m7_219  [key=1, style=dashed, color=darkseagreen4, label=obj];
m7_217 -> m7_220  [key=1, style=dashed, color=darkseagreen4, label=obj];
m7_217 -> m7_221  [key=1, style=dashed, color=darkseagreen4, label=obj];
m7_217 -> m7_222  [key=1, style=dashed, color=darkseagreen4, label=obj];
m7_214 -> m7_215  [key=0, style=solid];
m7_214 -> m7_128  [key=2, style=dotted];
m7_224 -> m7_225  [key=0, style=solid];
m7_224 -> m7_131  [key=2, style=dotted];
m7_226 -> m7_227  [key=0, style=solid];
m7_226 -> m7_129  [key=2, style=dotted];
m7_227 -> m7_228  [key=0, style=solid];
m7_227 -> m7_253  [key=2, style=dotted];
m7_228 -> m7_229  [key=0, style=solid];
m7_228 -> m7_128  [key=2, style=dotted];
m7_248 -> m7_249  [key=0, style=solid];
m7_248 -> m7_131  [key=2, style=dotted];
m7_250 -> m7_251  [key=0, style=solid];
m7_250 -> m7_129  [key=2, style=dotted];
m7_215 -> m7_216  [key=0, style=solid];
m7_215 -> m7_223  [key=1, style=dashed, color=darkseagreen4, label=iteration];
m7_223 -> m7_216  [key=0, style=solid];
m7_223 -> m7_223  [key=1, style=dashed, color=darkseagreen4, label=iteration];
m7_218 -> m7_219  [key=0, style=solid];
m7_218 -> m7_252  [key=2, style=dotted];
m7_219 -> m7_220  [key=0, style=solid];
m7_219 -> m7_252  [key=2, style=dotted];
m7_220 -> m7_221  [key=0, style=solid];
m7_220 -> m7_252  [key=2, style=dotted];
m7_221 -> m7_222  [key=0, style=solid];
m7_221 -> m7_252  [key=2, style=dotted];
m7_222 -> m7_223  [key=0, style=solid];
m7_222 -> m7_252  [key=2, style=dotted];
m7_229 -> m7_230  [key=0, style=solid];
m7_229 -> m7_247  [key=1, style=dashed, color=darkseagreen4, label=iteration];
m7_247 -> m7_230  [key=0, style=solid];
m7_247 -> m7_247  [key=1, style=dashed, color=darkseagreen4, label=iteration];
m7_232 -> m7_233  [key=0, style=solid];
m7_232 -> m7_255  [key=2, style=dotted];
m7_233 -> m7_234  [key=0, style=solid];
m7_233 -> m7_247  [key=0, style=solid];
m7_233 -> m7_238  [key=1, style=dashed, color=darkseagreen4, label=property];
m7_233 -> m7_240  [key=1, style=dashed, color=darkseagreen4, label=property];
m7_233 -> m7_242  [key=1, style=dashed, color=darkseagreen4, label=property];
m7_233 -> m7_244  [key=1, style=dashed, color=darkseagreen4, label=property];
m7_233 -> m7_246  [key=1, style=dashed, color=darkseagreen4, label=property];
m7_234 -> m7_235  [key=0, style=solid];
m7_234 -> m7_256  [key=2, style=dotted];
m7_238 -> m7_233  [key=0, style=solid];
m7_238 -> m7_254  [key=2, style=dotted];
m7_240 -> m7_233  [key=0, style=solid];
m7_240 -> m7_254  [key=2, style=dotted];
m7_242 -> m7_233  [key=0, style=solid];
m7_242 -> m7_254  [key=2, style=dotted];
m7_244 -> m7_233  [key=0, style=solid];
m7_244 -> m7_254  [key=2, style=dotted];
m7_246 -> m7_233  [key=0, style=solid];
m7_246 -> m7_254  [key=2, style=dotted];
m7_235 -> m7_236  [key=0, style=solid];
m7_236 -> m7_237  [key=0, style=solid];
m7_236 -> m7_239  [key=0, style=solid];
m7_236 -> m7_241  [key=0, style=solid];
m7_236 -> m7_243  [key=0, style=solid];
m7_236 -> m7_245  [key=0, style=solid];
m7_237 -> m7_238  [key=0, style=solid];
m7_239 -> m7_240  [key=0, style=solid];
m7_241 -> m7_242  [key=0, style=solid];
m7_243 -> m7_244  [key=0, style=solid];
m7_245 -> m7_246  [key=0, style=solid];
m7_251 -> m7_209  [key=0, style=bold, color=blue];
m7_595 -> m7_596  [key=0, style=solid];
m7_595 -> m7_597  [key=1, style=dashed, color=darkseagreen4, label=string];
m7_595 -> m7_581  [key=3, color=darkorchid, style=bold, label="Parameter variable string json"];
m7_596 -> m7_597  [key=0, style=solid];
m7_596 -> m7_414  [key=2, style=dotted];
m7_596 -> m7_606  [key=1, style=dashed, color=darkseagreen4, label=c];
m7_596 -> m7_611  [key=1, style=dashed, color=darkseagreen4, label=c];
m7_596 -> m7_613  [key=1, style=dashed, color=darkseagreen4, label=c];
m7_596 -> m7_615  [key=1, style=dashed, color=darkseagreen4, label=c];
m7_596 -> m7_617  [key=1, style=dashed, color=darkseagreen4, label=c];
m7_596 -> m7_620  [key=1, style=dashed, color=darkseagreen4, label=c];
m7_596 -> m7_625  [key=1, style=dashed, color=darkseagreen4, label=c];
m7_596 -> m7_626  [key=1, style=dashed, color=darkseagreen4, label=c];
m7_597 -> m7_598  [key=0, style=solid];
m7_597 -> m7_29  [key=2, style=dotted];
m7_597 -> m7_593  [key=2, style=dotted];
m7_597 -> m7_599  [key=1, style=dashed, color=darkseagreen4, label=reader];
m7_597 -> m7_600  [key=1, style=dashed, color=darkseagreen4, label=reader];
m7_597 -> m7_601  [key=1, style=dashed, color=darkseagreen4, label=reader];
m7_597 -> m7_604  [key=1, style=dashed, color=darkseagreen4, label=reader];
m7_597 -> m7_605  [key=1, style=dashed, color=darkseagreen4, label=reader];
m7_597 -> m7_606  [key=1, style=dashed, color=darkseagreen4, label=reader];
m7_597 -> m7_608  [key=1, style=dashed, color=darkseagreen4, label=reader];
m7_597 -> m7_609  [key=1, style=dashed, color=darkseagreen4, label=reader];
m7_597 -> m7_610  [key=1, style=dashed, color=darkseagreen4, label=reader];
m7_597 -> m7_611  [key=1, style=dashed, color=darkseagreen4, label=reader];
m7_597 -> m7_613  [key=1, style=dashed, color=darkseagreen4, label=reader];
m7_597 -> m7_615  [key=1, style=dashed, color=darkseagreen4, label=reader];
m7_597 -> m7_617  [key=1, style=dashed, color=darkseagreen4, label=reader];
m7_597 -> m7_619  [key=1, style=dashed, color=darkseagreen4, label=reader];
m7_597 -> m7_620  [key=1, style=dashed, color=darkseagreen4, label=reader];
m7_597 -> m7_622  [key=1, style=dashed, color=darkseagreen4, label=reader];
m7_597 -> m7_623  [key=1, style=dashed, color=darkseagreen4, label=reader];
m7_597 -> m7_624  [key=1, style=dashed, color=darkseagreen4, label=reader];
m7_606 -> m7_605  [key=0, style=solid];
m7_606 -> m7_419  [key=2, style=dotted];
m7_611 -> m7_609  [key=0, style=solid];
m7_611 -> m7_628  [key=2, style=dotted];
m7_611 -> m7_629  [key=2, style=dotted];
m7_611 -> m7_630  [key=2, style=dotted];
m7_613 -> m7_599  [key=0, style=solid];
m7_613 -> m7_631  [key=2, style=dotted];
m7_615 -> m7_599  [key=0, style=solid];
m7_615 -> m7_632  [key=2, style=dotted];
m7_615 -> m7_629  [key=2, style=dotted];
m7_617 -> m7_599  [key=0, style=solid];
m7_617 -> m7_633  [key=2, style=dotted];
m7_617 -> m7_629  [key=2, style=dotted];
m7_620 -> m7_599  [key=0, style=solid];
m7_620 -> m7_634  [key=2, style=dotted];
m7_625 -> m7_623  [key=0, style=solid];
m7_625 -> m7_419  [key=2, style=dotted];
m7_626 -> m7_627  [key=0, style=solid];
m7_598 -> m7_599  [key=0, style=solid];
m7_598 -> m7_30  [key=2, style=dotted];
m7_599 -> m7_600  [key=0, style=solid];
m7_599 -> m7_626  [key=0, style=solid];
m7_599 -> m7_30  [key=2, style=dotted];
m7_600 -> m7_601  [key=0, style=solid];
m7_600 -> m7_626  [key=0, style=solid];
m7_601 -> m7_602  [key=0, style=solid];
m7_604 -> m7_605  [key=0, style=solid];
m7_604 -> m7_30  [key=2, style=dotted];
m7_605 -> m7_606  [key=0, style=solid];
m7_605 -> m7_599  [key=0, style=solid];
m7_605 -> m7_30  [key=2, style=dotted];
m7_608 -> m7_609  [key=0, style=solid];
m7_608 -> m7_30  [key=2, style=dotted];
m7_609 -> m7_610  [key=0, style=solid];
m7_609 -> m7_599  [key=0, style=solid];
m7_609 -> m7_30  [key=2, style=dotted];
m7_610 -> m7_611  [key=0, style=solid];
m7_619 -> m7_620  [key=0, style=solid];
m7_619 -> m7_30  [key=2, style=dotted];
m7_622 -> m7_623  [key=0, style=solid];
m7_622 -> m7_30  [key=2, style=dotted];
m7_623 -> m7_624  [key=0, style=solid];
m7_623 -> m7_599  [key=0, style=solid];
m7_623 -> m7_30  [key=2, style=dotted];
m7_624 -> m7_625  [key=0, style=solid];
m7_624 -> m7_634  [key=2, style=dotted];
m7_602 -> m7_603  [key=0, style=solid];
m7_602 -> m7_607  [key=0, style=solid];
m7_602 -> m7_612  [key=0, style=solid];
m7_602 -> m7_614  [key=0, style=solid];
m7_602 -> m7_616  [key=0, style=solid];
m7_602 -> m7_618  [key=0, style=solid];
m7_602 -> m7_621  [key=0, style=solid];
m7_603 -> m7_604  [key=0, style=solid];
m7_607 -> m7_608  [key=0, style=solid];
m7_612 -> m7_613  [key=0, style=solid];
m7_614 -> m7_615  [key=0, style=solid];
m7_616 -> m7_617  [key=0, style=solid];
m7_618 -> m7_619  [key=0, style=solid];
m7_621 -> m7_622  [key=0, style=solid];
m7_627 -> m7_595  [key=0, style=bold, color=blue];
m7_661 -> m7_662  [key=0, style=solid];
m7_661 -> m7_663  [key=1, style=dashed, color=darkseagreen4, label=string];
m7_661 -> m7_581  [key=3, color=darkorchid, style=bold, label="Parameter variable string json"];
m7_662 -> m7_663  [key=0, style=solid];
m7_662 -> m7_368  [key=2, style=dotted];
m7_662 -> m7_664  [key=1, style=dashed, color=darkseagreen4, label=dataContractSerializer];
m7_663 -> m7_664  [key=0, style=solid];
m7_663 -> m7_544  [key=2, style=dotted];
m7_663 -> m7_327  [key=2, style=dotted];
m7_664 -> m7_665  [key=0, style=solid];
m7_664 -> m7_666  [key=2, style=dotted];
m7_665 -> m7_661  [key=0, style=bold, color=blue];
m7_11 -> m7_12  [key=0, style=solid];
m7_12 -> m7_13  [key=0, style=solid];
m7_12 -> m7_14  [key=2, style=dotted];
m7_13 -> m7_11  [key=0, style=bold, color=blue];
m7_99 -> m7_100  [key=0, style=solid];
m7_100 -> m7_101  [key=0, style=solid];
m7_100 -> m7_105  [key=2, style=dotted];
m7_100 -> m7_102  [key=1, style=dashed, color=darkseagreen4, label=doc];
m7_100 -> m7_103  [key=1, style=dashed, color=darkseagreen4, label=doc];
m7_101 -> m7_102  [key=0, style=solid];
m7_101 -> m7_106  [key=2, style=dotted];
m7_102 -> m7_103  [key=0, style=solid];
m7_102 -> m7_107  [key=2, style=dotted];
m7_103 -> m7_104  [key=0, style=solid];
m7_103 -> m7_108  [key=2, style=dotted];
m7_104 -> m7_99  [key=0, style=bold, color=blue];
m7_743 -> m7_744  [key=0, style=solid];
m7_744 -> m7_745  [key=0, style=solid];
m7_744 -> m7_208  [key=2, style=dotted];
m7_744 -> m7_746  [key=1, style=dashed, color=darkseagreen4, label=test];
m7_744 -> m7_751  [key=1, style=dashed, color=darkseagreen4, label=test];
m7_744 -> m7_754  [key=1, style=dashed, color=darkseagreen4, label=test];
m7_745 -> m7_746  [key=0, style=solid];
m7_745 -> m7_340  [key=2, style=dotted];
m7_745 -> m7_752  [key=1, style=dashed, color=darkseagreen4, label=ms];
m7_745 -> m7_753  [key=1, style=dashed, color=darkseagreen4, label=ms];
m7_745 -> m7_756  [key=1, style=dashed, color=darkseagreen4, label=ms];
m7_746 -> m7_747  [key=0, style=solid];
m7_746 -> m7_116  [key=2, style=dotted];
m7_746 -> m7_748  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_746 -> m7_8  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m7_746 -> m7_141  [key=3, color=darkorchid, style=bold, label="method methodReturn object "];
m7_747 -> m7_743  [key=0, style=bold, color=blue];
m7_765 -> m7_766  [key=0, style=solid];
m7_40 -> m7_41  [key=0, style=solid, color=red];
m7_41 -> m7_42  [key=0, style=solid, color=red];
m7_42 -> m7_40  [key=0, style=bold, color=blue];
m7_150 -> m7_151  [key=0, style=solid];
m7_150 -> m7_152  [key=1, style=dashed, color=darkseagreen4, label=p];
m7_158 -> m7_159  [key=0, style=solid];
m7_158 -> m7_160  [key=1, style=dashed, color=darkseagreen4, label=p];
m7_149 -> m7_150  [key=0, style=solid];
m7_149 -> m7_152  [key=0, style=solid];
m7_157 -> m7_158  [key=0, style=solid];
m7_157 -> m7_160  [key=0, style=solid];
m7_146 -> m7_147  [key=0, style=solid];
m7_154 -> m7_155  [key=0, style=solid];
m7_147 -> m7_148  [key=0, style=solid];
m7_147 -> m7_152  [key=1, style=dashed, color=darkseagreen4, label=p];
m7_148 -> m7_149  [key=0, style=solid];
m7_148 -> m7_151  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_152 -> m7_153  [key=0, style=solid];
m7_151 -> m7_149  [key=0, style=solid];
m7_151 -> m7_151  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_153 -> m7_146  [key=0, style=bold, color=blue];
m7_155 -> m7_156  [key=0, style=solid];
m7_155 -> m7_160  [key=1, style=dashed, color=darkseagreen4, label=p];
m7_156 -> m7_157  [key=0, style=solid];
m7_156 -> m7_159  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_160 -> m7_161  [key=0, style=solid];
m7_159 -> m7_157  [key=0, style=solid];
m7_159 -> m7_159  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_161 -> m7_154  [key=0, style=bold, color=blue];
m7_176 -> m7_177  [key=0, style=solid];
m7_176 -> m7_145  [key=2, style=dotted];
m7_178 -> m7_179  [key=0, style=solid];
m7_183 -> m7_184  [key=0, style=solid];
m7_183 -> m7_145  [key=2, style=dotted];
m7_185 -> m7_186  [key=0, style=solid];
m7_175 -> m7_176  [key=0, style=solid];
m7_175 -> m7_178  [key=0, style=solid];
m7_182 -> m7_183  [key=0, style=solid];
m7_182 -> m7_185  [key=0, style=solid];
m7_173 -> m7_174  [key=0, style=solid];
m7_180 -> m7_181  [key=0, style=solid];
m7_174 -> m7_175  [key=0, style=solid];
m7_174 -> m7_177  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_177 -> m7_175  [key=0, style=solid];
m7_177 -> m7_177  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_179 -> m7_173  [key=0, style=bold, color=blue];
m7_181 -> m7_182  [key=0, style=solid];
m7_181 -> m7_184  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_184 -> m7_182  [key=0, style=solid];
m7_184 -> m7_184  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_186 -> m7_180  [key=0, style=bold, color=blue];
m7_204 -> m7_205  [key=0, style=solid];
m7_204 -> m7_208  [key=2, style=dotted];
m7_204 -> m7_206  [key=1, style=dashed, color=darkseagreen4, label=oo];
m7_203 -> m7_204  [key=0, style=solid];
m7_203 -> m7_206  [key=0, style=solid];
m7_200 -> m7_201  [key=0, style=solid];
m7_201 -> m7_202  [key=0, style=solid];
m7_201 -> m7_206  [key=1, style=dashed, color=darkseagreen4, label=oo];
m7_202 -> m7_203  [key=0, style=solid];
m7_202 -> m7_205  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_206 -> m7_207  [key=0, style=solid];
m7_205 -> m7_203  [key=0, style=solid];
m7_205 -> m7_205  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_207 -> m7_200  [key=0, style=bold, color=blue];
m7_265 -> m7_266  [key=0, style=solid];
m7_265 -> m7_271  [key=2, style=dotted];
m7_265 -> m7_267  [key=1, style=dashed, color=darkseagreen4, label=w];
m7_267 -> m7_268  [key=0, style=solid];
m7_267 -> m7_272  [key=2, style=dotted];
m7_267 -> m7_267  [key=1, style=dashed, color=darkseagreen4, label=buffer];
m7_264 -> m7_265  [key=0, style=solid];
m7_264 -> m7_269  [key=0, style=solid];
m7_262 -> m7_263  [key=0, style=solid];
m7_263 -> m7_264  [key=0, style=solid];
m7_263 -> m7_268  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_268 -> m7_264  [key=0, style=solid];
m7_268 -> m7_268  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_269 -> m7_270  [key=0, style=solid];
m7_266 -> m7_267  [key=0, style=solid];
m7_270 -> m7_262  [key=0, style=bold, color=blue];
m7_284 -> m7_285  [key=0, style=solid];
m7_284 -> m7_288  [key=2, style=dotted];
m7_292 -> m7_293  [key=0, style=solid];
m7_292 -> m7_296  [key=2, style=dotted];
m7_292 -> m7_297  [key=2, style=dotted];
m7_301 -> m7_302  [key=0, style=solid];
m7_301 -> m7_252  [key=2, style=dotted];
m7_283 -> m7_284  [key=0, style=solid];
m7_283 -> m7_286  [key=0, style=solid];
m7_291 -> m7_292  [key=0, style=solid];
m7_291 -> m7_294  [key=0, style=solid];
m7_300 -> m7_301  [key=0, style=solid];
m7_300 -> m7_303  [key=0, style=solid];
m7_281 -> m7_282  [key=0, style=solid];
m7_289 -> m7_290  [key=0, style=solid];
m7_298 -> m7_299  [key=0, style=solid];
m7_282 -> m7_283  [key=0, style=solid];
m7_282 -> m7_285  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_285 -> m7_283  [key=0, style=solid];
m7_285 -> m7_285  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_286 -> m7_287  [key=0, style=solid];
m7_287 -> m7_281  [key=0, style=bold, color=blue];
m7_290 -> m7_291  [key=0, style=solid];
m7_290 -> m7_293  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_293 -> m7_291  [key=0, style=solid];
m7_293 -> m7_293  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_294 -> m7_295  [key=0, style=solid];
m7_295 -> m7_289  [key=0, style=bold, color=blue];
m7_299 -> m7_300  [key=0, style=solid];
m7_299 -> m7_302  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_302 -> m7_300  [key=0, style=solid];
m7_302 -> m7_302  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_303 -> m7_304  [key=0, style=solid];
m7_304 -> m7_298  [key=0, style=bold, color=blue];
m7_322 -> m7_323  [key=0, style=solid];
m7_322 -> m7_326  [key=2, style=dotted];
m7_322 -> m7_324  [key=1, style=dashed, color=darkseagreen4, label=json];
m7_335 -> m7_336  [key=0, style=solid];
m7_335 -> m7_342  [key=2, style=dotted];
m7_350 -> m7_351  [key=0, style=solid];
m7_350 -> m7_355  [key=2, style=dotted];
m7_350 -> m7_356  [key=2, style=dotted];
m7_351 -> m7_352  [key=0, style=solid];
m7_351 -> m7_357  [key=2, style=dotted];
m7_363 -> m7_364  [key=0, style=solid];
m7_363 -> m7_368  [key=2, style=dotted];
m7_363 -> m7_356  [key=2, style=dotted];
m7_364 -> m7_365  [key=0, style=solid];
m7_364 -> m7_357  [key=2, style=dotted];
m7_375 -> m7_376  [key=0, style=solid];
m7_375 -> m7_380  [key=2, style=dotted];
m7_321 -> m7_322  [key=0, style=solid];
m7_321 -> m7_324  [key=0, style=solid];
m7_331 -> m7_332  [key=0, style=solid];
m7_331 -> m7_338  [key=0, style=solid];
m7_348 -> m7_349  [key=0, style=solid];
m7_348 -> m7_353  [key=0, style=solid];
m7_361 -> m7_362  [key=0, style=solid];
m7_361 -> m7_366  [key=0, style=solid];
m7_372 -> m7_373  [key=0, style=solid];
m7_372 -> m7_377  [key=0, style=solid];
m7_318 -> m7_319  [key=0, style=solid];
m7_328 -> m7_329  [key=0, style=solid];
m7_345 -> m7_346  [key=0, style=solid];
m7_358 -> m7_359  [key=0, style=solid];
m7_369 -> m7_370  [key=0, style=solid];
m7_319 -> m7_320  [key=0, style=solid];
m7_319 -> m7_324  [key=1, style=dashed, color=darkseagreen4, label=json];
m7_320 -> m7_321  [key=0, style=solid];
m7_320 -> m7_323  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_324 -> m7_325  [key=0, style=solid];
m7_324 -> m7_327  [key=2, style=dotted];
m7_323 -> m7_321  [key=0, style=solid];
m7_323 -> m7_323  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_325 -> m7_318  [key=0, style=bold, color=blue];
m7_329 -> m7_330  [key=0, style=solid];
m7_329 -> m7_338  [key=1, style=dashed, color=darkseagreen4, label=ms];
m7_330 -> m7_331  [key=0, style=solid];
m7_330 -> m7_337  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_338 -> m7_339  [key=0, style=solid];
m7_338 -> m7_344  [key=2, style=dotted];
m7_337 -> m7_331  [key=0, style=solid];
m7_337 -> m7_337  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_332 -> m7_333  [key=0, style=solid];
m7_332 -> m7_340  [key=2, style=dotted];
m7_332 -> m7_334  [key=1, style=dashed, color=darkseagreen4, label=ms];
m7_332 -> m7_338  [key=1, style=dashed, color=darkseagreen4, label=ms];
m7_333 -> m7_334  [key=0, style=solid];
m7_333 -> m7_296  [key=2, style=dotted];
m7_333 -> m7_335  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m7_334 -> m7_335  [key=0, style=solid];
m7_334 -> m7_341  [key=2, style=dotted];
m7_334 -> m7_336  [key=1, style=dashed, color=darkseagreen4, label=writer];
m7_336 -> m7_337  [key=0, style=solid];
m7_336 -> m7_343  [key=2, style=dotted];
m7_339 -> m7_328  [key=0, style=bold, color=blue];
m7_346 -> m7_347  [key=0, style=solid];
m7_346 -> m7_353  [key=1, style=dashed, color=darkseagreen4, label=ms];
m7_347 -> m7_348  [key=0, style=solid];
m7_347 -> m7_352  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_353 -> m7_354  [key=0, style=solid];
m7_353 -> m7_344  [key=2, style=dotted];
m7_352 -> m7_348  [key=0, style=solid];
m7_352 -> m7_352  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_349 -> m7_350  [key=0, style=solid];
m7_349 -> m7_340  [key=2, style=dotted];
m7_349 -> m7_351  [key=1, style=dashed, color=darkseagreen4, label=ms];
m7_349 -> m7_353  [key=1, style=dashed, color=darkseagreen4, label=ms];
m7_354 -> m7_345  [key=0, style=bold, color=blue];
m7_359 -> m7_360  [key=0, style=solid];
m7_359 -> m7_366  [key=1, style=dashed, color=darkseagreen4, label=ms];
m7_360 -> m7_361  [key=0, style=solid];
m7_360 -> m7_365  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_366 -> m7_367  [key=0, style=solid];
m7_366 -> m7_344  [key=2, style=dotted];
m7_365 -> m7_361  [key=0, style=solid];
m7_365 -> m7_365  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_362 -> m7_363  [key=0, style=solid];
m7_362 -> m7_340  [key=2, style=dotted];
m7_362 -> m7_364  [key=1, style=dashed, color=darkseagreen4, label=ms];
m7_362 -> m7_366  [key=1, style=dashed, color=darkseagreen4, label=ms];
m7_367 -> m7_358  [key=0, style=bold, color=blue];
m7_370 -> m7_371  [key=0, style=solid];
m7_370 -> m7_377  [key=1, style=dashed, color=darkseagreen4, label=ms];
m7_371 -> m7_372  [key=0, style=solid];
m7_371 -> m7_376  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_377 -> m7_378  [key=0, style=solid];
m7_377 -> m7_344  [key=2, style=dotted];
m7_376 -> m7_372  [key=0, style=solid];
m7_376 -> m7_376  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_373 -> m7_374  [key=0, style=solid];
m7_373 -> m7_340  [key=2, style=dotted];
m7_373 -> m7_375  [key=1, style=dashed, color=darkseagreen4, label=ms];
m7_373 -> m7_377  [key=1, style=dashed, color=darkseagreen4, label=ms];
m7_374 -> m7_375  [key=0, style=solid];
m7_374 -> m7_379  [key=2, style=dotted];
m7_378 -> m7_369  [key=0, style=bold, color=blue];
m7_548 -> m7_549  [key=0, style=solid];
m7_551 -> m7_552  [key=0, style=solid];
m7_549 -> m7_550  [key=0, style=solid];
m7_549 -> m7_528  [key=2, style=dotted];
m7_549 -> m7_549  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, int>"];
m7_550 -> m7_548  [key=0, style=bold, color=blue];
m7_552 -> m7_553  [key=0, style=solid];
m7_552 -> m7_527  [key=2, style=dotted];
m7_552 -> m7_528  [key=2, style=dotted];
m7_553 -> m7_551  [key=0, style=bold, color=blue];
m7_737 -> m7_738  [key=0, style=solid];
m7_737 -> m7_742  [key=2, style=dotted];
m7_738 -> m7_739  [key=0, style=solid];
m7_738 -> m7_38  [key=2, style=dotted];
m7_734 -> m7_735  [key=0, style=solid];
m7_735 -> m7_736  [key=0, style=solid];
m7_735 -> m7_737  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_735 -> m7_739  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_736 -> m7_737  [key=0, style=solid];
m7_736 -> m7_740  [key=0, style=solid];
m7_739 -> m7_736  [key=0, style=solid];
m7_739 -> m7_739  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_740 -> m7_741  [key=0, style=solid];
m7_741 -> m7_734  [key=0, style=bold, color=blue];
m7_751 -> m7_752  [key=0, style=solid];
m7_751 -> m7_742  [key=2, style=dotted];
m7_754 -> m7_755  [key=0, style=solid];
m7_754 -> m7_761  [key=2, style=dotted];
m7_752 -> m7_753  [key=0, style=solid];
m7_752 -> m7_437  [key=2, style=dotted];
m7_753 -> m7_754  [key=0, style=solid];
m7_753 -> m7_532  [key=2, style=dotted];
m7_753 -> m7_760  [key=2, style=dotted];
m7_753 -> m7_755  [key=1, style=dashed, color=darkseagreen4, label=jsonTextWriter];
m7_756 -> m7_757  [key=0, style=solid];
m7_756 -> m7_344  [key=2, style=dotted];
m7_748 -> m7_749  [key=0, style=solid];
m7_749 -> m7_750  [key=0, style=solid];
m7_749 -> m7_751  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_749 -> m7_757  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_750 -> m7_751  [key=0, style=solid];
m7_750 -> m7_758  [key=0, style=solid];
m7_757 -> m7_750  [key=0, style=solid];
m7_757 -> m7_757  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_758 -> m7_759  [key=0, style=solid];
m7_755 -> m7_756  [key=0, style=solid];
m7_755 -> m7_542  [key=2, style=dotted];
m7_759 -> m7_748  [key=0, style=bold, color=blue];
m7_766 -> m7_767  [key=0, style=solid];
m7_766 -> m7_769  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_766 -> m7_772  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_767 -> m7_768  [key=0, style=solid];
m7_767 -> m7_773  [key=0, style=solid];
m7_769 -> m7_770  [key=0, style=solid];
m7_772 -> m7_767  [key=0, style=solid];
m7_772 -> m7_772  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_768 -> m7_769  [key=0, style=solid];
m7_768 -> m7_527  [key=2, style=dotted];
m7_768 -> m7_528  [key=2, style=dotted];
m7_768 -> m7_770  [key=1, style=dashed, color=darkseagreen4, label=test];
m7_768 -> m7_771  [key=1, style=dashed, color=darkseagreen4, label=test];
m7_773 -> m7_774  [key=0, style=solid];
m7_770 -> m7_771  [key=0, style=solid];
m7_771 -> m7_772  [key=0, style=solid];
m7_774 -> m7_765  [key=0, style=bold, color=blue];
m7_48 -> m7_49  [key=0, style=solid];
m7_49 -> m7_50  [key=0, style=solid];
m7_49 -> m7_58  [key=2, style=dotted];
m7_49 -> m7_52  [key=1, style=dashed, color=darkseagreen4, label=value];
m7_49 -> m7_54  [key=1, style=dashed, color=darkseagreen4, label=value];
m7_49 -> m7_55  [key=1, style=dashed, color=darkseagreen4, label=value];
m7_50 -> m7_51  [key=0, style=solid];
m7_50 -> m7_52  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_50 -> m7_53  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_50 -> m7_8  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m7_52 -> m7_53  [key=0, style=solid];
m7_52 -> m7_59  [key=2, style=dotted];
m7_52 -> m7_60  [key=2, style=dotted];
m7_54 -> m7_55  [key=0, style=solid];
m7_54 -> m7_10  [key=2, style=dotted];
m7_55 -> m7_56  [key=0, style=solid];
m7_55 -> m7_61  [key=2, style=dotted];
m7_51 -> m7_52  [key=0, style=solid];
m7_51 -> m7_54  [key=0, style=solid];
m7_53 -> m7_51  [key=0, style=solid];
m7_53 -> m7_53  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_56 -> m7_57  [key=0, style=solid];
m7_56 -> m7_39  [key=2, style=dotted];
m7_57 -> m7_48  [key=0, style=bold, color=blue];
m7_116 -> m7_117  [key=0, style=solid];
m7_116 -> m7_120  [key=1, style=dashed, color=darkseagreen4, label="System.Func<T>"];
m7_116 -> m7_121  [key=1, style=dashed, color=darkseagreen4, label=string];
m7_116 -> m7_141  [key=3, color=darkorchid, style=bold, label="Parameter variable string name"];
m7_116 -> m7_142  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<T> operation"];
m7_116 -> m7_170  [key=3, color=darkorchid, style=bold, label="Parameter variable string name"];
m7_116 -> m7_171  [key=3, color=darkorchid, style=bold, label="Parameter variable string name"];
m7_116 -> m7_195  [key=3, color=darkorchid, style=bold, label="Parameter variable string name"];
m7_116 -> m7_260  [key=3, color=darkorchid, style=bold, label="Parameter variable string name"];
m7_116 -> m7_276  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<T> operation"];
m7_116 -> m7_277  [key=3, color=darkorchid, style=bold, label="Parameter variable string name"];
m7_116 -> m7_278  [key=3, color=darkorchid, style=bold, label="Parameter variable string name"];
m7_116 -> m7_306  [key=3, color=darkorchid, style=bold, label="Parameter variable string name"];
m7_116 -> m7_307  [key=3, color=darkorchid, style=bold, label="Parameter variable string name"];
m7_116 -> m7_310  [key=3, color=darkorchid, style=bold, label="Parameter variable string name"];
m7_116 -> m7_732  [key=3, color=darkorchid, style=bold, label="Parameter variable string name"];
m7_116 -> m7_746  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<T> operation"];
m7_116 -> m7_763  [key=3, color=darkorchid, style=bold, label="Parameter variable string name"];
m7_116 -> m7_145  [key=3, color=darkorchid, style=bold, label="Parameter variable string name"];
m7_117 -> m7_118  [key=0, style=solid];
m7_117 -> m7_126  [key=2, style=dotted];
m7_120 -> m7_121  [key=0, style=solid];
m7_120 -> m7_126  [key=2, style=dotted];
m7_120 -> m7_124  [key=1, style=dashed, color=darkseagreen4, label=result];
m7_121 -> m7_122  [key=0, style=solid];
m7_121 -> m7_129  [key=2, style=dotted];
m7_118 -> m7_119  [key=0, style=solid];
m7_118 -> m7_127  [key=2, style=dotted];
m7_118 -> m7_122  [key=1, style=dashed, color=darkseagreen4, label=timed];
m7_118 -> m7_123  [key=1, style=dashed, color=darkseagreen4, label=timed];
m7_119 -> m7_120  [key=0, style=solid];
m7_119 -> m7_128  [key=2, style=dotted];
m7_122 -> m7_123  [key=0, style=solid];
m7_122 -> m7_130  [key=2, style=dotted];
m7_123 -> m7_124  [key=0, style=solid];
m7_123 -> m7_131  [key=2, style=dotted];
m7_124 -> m7_125  [key=0, style=solid];
m7_125 -> m7_116  [key=0, style=bold, color=blue];
m7_656 -> m7_657  [key=0, style=solid];
m7_656 -> m7_658  [key=1, style=dashed, color=darkseagreen4, label=string];
m7_656 -> m7_581  [key=3, color=darkorchid, style=bold, label="Parameter variable string json"];
m7_657 -> m7_658  [key=0, style=solid];
m7_657 -> m7_427  [key=2, style=dotted];
m7_658 -> m7_659  [key=0, style=solid];
m7_658 -> m7_660  [key=2, style=dotted];
m7_659 -> m7_656  [key=0, style=bold, color=blue];
m7_395 -> m7_448  [key=0, style=solid];
m7_395 -> m7_449  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod"];
m7_395 -> m7_451  [key=1, style=dashed, color=darkseagreen4, label=object];
m7_395 -> m7_453  [key=1, style=dashed, color=darkseagreen4, label=object];
m7_395 -> m7_455  [key=1, style=dashed, color=darkseagreen4, label=object];
m7_395 -> m7_461  [key=1, style=dashed, color=darkseagreen4, label=object];
m7_395 -> m7_512  [key=1, style=dashed, color=darkseagreen4, label=object];
m7_395 -> m7_515  [key=1, style=dashed, color=darkseagreen4, label=object];
m7_395 -> m7_517  [key=1, style=dashed, color=darkseagreen4, label=object];
m7_395 -> m7_519  [key=1, style=dashed, color=darkseagreen4, label=object];
m7_395 -> m7_521  [key=1, style=dashed, color=darkseagreen4, label=object];
m7_395 -> m7_522  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod"];
m7_395 -> m7_10  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m7_448 -> m7_449  [key=0, style=solid];
m7_448 -> m7_423  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m7_448 -> m7_429  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m7_448 -> m7_440  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m7_448 -> m7_545  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m7_449 -> m7_450  [key=0, style=solid];
m7_449 -> m7_452  [key=0, style=solid];
m7_449 -> m7_454  [key=0, style=solid];
m7_449 -> m7_460  [key=0, style=solid];
m7_449 -> m7_508  [key=0, style=solid];
m7_449 -> m7_514  [key=0, style=solid];
m7_449 -> m7_516  [key=0, style=solid];
m7_449 -> m7_518  [key=0, style=solid];
m7_449 -> m7_520  [key=0, style=solid];
m7_449 -> m7_522  [key=0, style=solid];
m7_451 -> m7_523  [key=0, style=solid];
m7_451 -> m7_61  [key=2, style=dotted];
m7_453 -> m7_523  [key=0, style=solid];
m7_453 -> m7_525  [key=2, style=dotted];
m7_453 -> m7_526  [key=2, style=dotted];
m7_455 -> m7_456  [key=0, style=solid];
m7_455 -> m7_457  [key=1, style=dashed, color=darkseagreen4, label=c];
m7_461 -> m7_462  [key=0, style=solid];
m7_461 -> m7_468  [key=1, style=dashed, color=darkseagreen4, label=c];
m7_461 -> m7_473  [key=1, style=dashed, color=darkseagreen4, label=c];
m7_461 -> m7_478  [key=1, style=dashed, color=darkseagreen4, label=c];
m7_461 -> m7_480  [key=1, style=dashed, color=darkseagreen4, label=c];
m7_461 -> m7_482  [key=1, style=dashed, color=darkseagreen4, label=c];
m7_461 -> m7_486  [key=1, style=dashed, color=darkseagreen4, label=c];
m7_461 -> m7_488  [key=1, style=dashed, color=darkseagreen4, label=c];
m7_461 -> m7_490  [key=1, style=dashed, color=darkseagreen4, label=c];
m7_461 -> m7_494  [key=1, style=dashed, color=darkseagreen4, label=c];
m7_512 -> m7_513  [key=0, style=solid];
m7_512 -> m7_342  [key=2, style=dotted];
m7_515 -> m7_523  [key=0, style=solid];
m7_515 -> m7_423  [key=2, style=dotted];
m7_517 -> m7_523  [key=0, style=solid];
m7_517 -> m7_429  [key=2, style=dotted];
m7_519 -> m7_523  [key=0, style=solid];
m7_519 -> m7_440  [key=2, style=dotted];
m7_521 -> m7_523  [key=0, style=solid];
m7_521 -> m7_545  [key=2, style=dotted];
m7_522 -> m7_524  [key=0, style=solid];
m7_522 -> m7_546  [key=2, style=dotted];
m7_522 -> m7_547  [key=2, style=dotted];
m7_450 -> m7_451  [key=0, style=solid];
m7_452 -> m7_453  [key=0, style=solid];
m7_454 -> m7_455  [key=0, style=solid];
m7_460 -> m7_461  [key=0, style=solid];
m7_508 -> m7_509  [key=0, style=solid];
m7_514 -> m7_515  [key=0, style=solid];
m7_516 -> m7_517  [key=0, style=solid];
m7_518 -> m7_519  [key=0, style=solid];
m7_520 -> m7_521  [key=0, style=solid];
m7_456 -> m7_457  [key=0, style=solid];
m7_456 -> m7_459  [key=0, style=solid];
m7_457 -> m7_458  [key=0, style=solid];
m7_457 -> m7_527  [key=2, style=dotted];
m7_457 -> m7_528  [key=2, style=dotted];
m7_457 -> m7_529  [key=2, style=dotted];
m7_457 -> m7_530  [key=2, style=dotted];
m7_457 -> m7_37  [key=2, style=dotted];
m7_457 -> m7_35  [key=2, style=dotted];
m7_457 -> m7_548  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_457 -> m7_551  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_459 -> m7_523  [key=0, style=solid];
m7_458 -> m7_523  [key=0, style=solid];
m7_458 -> m7_38  [key=2, style=dotted];
m7_462 -> m7_463  [key=0, style=solid];
m7_462 -> m7_507  [key=0, style=solid];
m7_468 -> m7_469  [key=0, style=solid];
m7_468 -> m7_470  [key=0, style=solid];
m7_473 -> m7_474  [key=0, style=solid];
m7_473 -> m7_476  [key=0, style=solid];
m7_478 -> m7_479  [key=0, style=solid];
m7_478 -> m7_536  [key=2, style=dotted];
m7_480 -> m7_481  [key=0, style=solid];
m7_480 -> m7_540  [key=2, style=dotted];
m7_482 -> m7_483  [key=0, style=solid];
m7_482 -> m7_541  [key=2, style=dotted];
m7_486 -> m7_487  [key=0, style=solid];
m7_486 -> m7_541  [key=2, style=dotted];
m7_488 -> m7_489  [key=0, style=solid];
m7_488 -> m7_541  [key=2, style=dotted];
m7_490 -> m7_491  [key=0, style=solid];
m7_490 -> m7_541  [key=2, style=dotted];
m7_494 -> m7_495  [key=0, style=solid];
m7_494 -> m7_503  [key=0, style=solid];
m7_494 -> m7_497  [key=1, style=dashed, color=darkseagreen4, label=address];
m7_494 -> m7_499  [key=1, style=dashed, color=darkseagreen4, label=address];
m7_494 -> m7_501  [key=1, style=dashed, color=darkseagreen4, label=address];
m7_463 -> m7_464  [key=0, style=solid];
m7_463 -> m7_531  [key=2, style=dotted];
m7_463 -> m7_506  [key=1, style=dashed, color=darkseagreen4, label=sw];
m7_507 -> m7_523  [key=0, style=solid];
m7_464 -> m7_465  [key=0, style=solid];
m7_464 -> m7_532  [key=2, style=dotted];
m7_464 -> m7_466  [key=1, style=dashed, color=darkseagreen4, label=writer];
m7_464 -> m7_467  [key=1, style=dashed, color=darkseagreen4, label=writer];
m7_464 -> m7_469  [key=1, style=dashed, color=darkseagreen4, label=writer];
m7_464 -> m7_470  [key=1, style=dashed, color=darkseagreen4, label=writer];
m7_464 -> m7_471  [key=1, style=dashed, color=darkseagreen4, label=writer];
m7_464 -> m7_472  [key=1, style=dashed, color=darkseagreen4, label=writer];
m7_464 -> m7_474  [key=1, style=dashed, color=darkseagreen4, label=writer];
m7_464 -> m7_475  [key=1, style=dashed, color=darkseagreen4, label=writer];
m7_464 -> m7_476  [key=1, style=dashed, color=darkseagreen4, label=writer];
m7_464 -> m7_477  [key=1, style=dashed, color=darkseagreen4, label=writer];
m7_464 -> m7_478  [key=1, style=dashed, color=darkseagreen4, label=writer];
m7_464 -> m7_479  [key=1, style=dashed, color=darkseagreen4, label=writer];
m7_464 -> m7_480  [key=1, style=dashed, color=darkseagreen4, label=writer];
m7_464 -> m7_481  [key=1, style=dashed, color=darkseagreen4, label=writer];
m7_464 -> m7_482  [key=1, style=dashed, color=darkseagreen4, label=writer];
m7_464 -> m7_483  [key=1, style=dashed, color=darkseagreen4, label=writer];
m7_464 -> m7_484  [key=1, style=dashed, color=darkseagreen4, label=writer];
m7_464 -> m7_485  [key=1, style=dashed, color=darkseagreen4, label=writer];
m7_464 -> m7_486  [key=1, style=dashed, color=darkseagreen4, label=writer];
m7_464 -> m7_487  [key=1, style=dashed, color=darkseagreen4, label=writer];
m7_464 -> m7_488  [key=1, style=dashed, color=darkseagreen4, label=writer];
m7_464 -> m7_489  [key=1, style=dashed, color=darkseagreen4, label=writer];
m7_464 -> m7_490  [key=1, style=dashed, color=darkseagreen4, label=writer];
m7_464 -> m7_491  [key=1, style=dashed, color=darkseagreen4, label=writer];
m7_464 -> m7_492  [key=1, style=dashed, color=darkseagreen4, label=writer];
m7_464 -> m7_493  [key=1, style=dashed, color=darkseagreen4, label=writer];
m7_464 -> m7_495  [key=1, style=dashed, color=darkseagreen4, label=writer];
m7_464 -> m7_496  [key=1, style=dashed, color=darkseagreen4, label=writer];
m7_464 -> m7_497  [key=1, style=dashed, color=darkseagreen4, label=writer];
m7_464 -> m7_498  [key=1, style=dashed, color=darkseagreen4, label=writer];
m7_464 -> m7_499  [key=1, style=dashed, color=darkseagreen4, label=writer];
m7_464 -> m7_500  [key=1, style=dashed, color=darkseagreen4, label=writer];
m7_464 -> m7_501  [key=1, style=dashed, color=darkseagreen4, label=writer];
m7_464 -> m7_502  [key=1, style=dashed, color=darkseagreen4, label=writer];
m7_464 -> m7_503  [key=1, style=dashed, color=darkseagreen4, label=writer];
m7_464 -> m7_504  [key=1, style=dashed, color=darkseagreen4, label=writer];
m7_464 -> m7_505  [key=1, style=dashed, color=darkseagreen4, label=writer];
m7_506 -> m7_523  [key=0, style=solid];
m7_506 -> m7_543  [key=2, style=dotted];
m7_465 -> m7_466  [key=0, style=solid];
m7_465 -> m7_533  [key=2, style=dotted];
m7_466 -> m7_467  [key=0, style=solid];
m7_466 -> m7_534  [key=2, style=dotted];
m7_467 -> m7_468  [key=0, style=solid];
m7_467 -> m7_535  [key=2, style=dotted];
m7_469 -> m7_468  [key=0, style=solid];
m7_469 -> m7_536  [key=2, style=dotted];
m7_470 -> m7_471  [key=0, style=solid];
m7_470 -> m7_537  [key=2, style=dotted];
m7_471 -> m7_472  [key=0, style=solid];
m7_471 -> m7_534  [key=2, style=dotted];
m7_472 -> m7_473  [key=0, style=solid];
m7_472 -> m7_533  [key=2, style=dotted];
m7_474 -> m7_475  [key=0, style=solid];
m7_474 -> m7_534  [key=2, style=dotted];
m7_474 -> m7_474  [key=1, style=dashed, color=darkseagreen4, label=keyValuePair];
m7_475 -> m7_473  [key=0, style=solid];
m7_475 -> m7_538  [key=2, style=dotted];
m7_475 -> m7_475  [key=1, style=dashed, color=darkseagreen4, label=keyValuePair];
m7_476 -> m7_477  [key=0, style=solid];
m7_476 -> m7_539  [key=2, style=dotted];
m7_477 -> m7_478  [key=0, style=solid];
m7_477 -> m7_534  [key=2, style=dotted];
m7_479 -> m7_480  [key=0, style=solid];
m7_479 -> m7_534  [key=2, style=dotted];
m7_481 -> m7_482  [key=0, style=solid];
m7_481 -> m7_534  [key=2, style=dotted];
m7_483 -> m7_484  [key=0, style=solid];
m7_483 -> m7_534  [key=2, style=dotted];
m7_484 -> m7_485  [key=0, style=solid];
m7_484 -> m7_533  [key=2, style=dotted];
m7_485 -> m7_486  [key=0, style=solid];
m7_485 -> m7_534  [key=2, style=dotted];
m7_487 -> m7_488  [key=0, style=solid];
m7_487 -> m7_534  [key=2, style=dotted];
m7_489 -> m7_490  [key=0, style=solid];
m7_489 -> m7_534  [key=2, style=dotted];
m7_491 -> m7_492  [key=0, style=solid];
m7_491 -> m7_539  [key=2, style=dotted];
m7_492 -> m7_493  [key=0, style=solid];
m7_492 -> m7_534  [key=2, style=dotted];
m7_493 -> m7_494  [key=0, style=solid];
m7_493 -> m7_535  [key=2, style=dotted];
m7_495 -> m7_496  [key=0, style=solid];
m7_495 -> m7_533  [key=2, style=dotted];
m7_496 -> m7_497  [key=0, style=solid];
m7_496 -> m7_534  [key=2, style=dotted];
m7_497 -> m7_498  [key=0, style=solid];
m7_497 -> m7_536  [key=2, style=dotted];
m7_498 -> m7_499  [key=0, style=solid];
m7_498 -> m7_534  [key=2, style=dotted];
m7_499 -> m7_500  [key=0, style=solid];
m7_499 -> m7_536  [key=2, style=dotted];
m7_500 -> m7_501  [key=0, style=solid];
m7_500 -> m7_534  [key=2, style=dotted];
m7_501 -> m7_502  [key=0, style=solid];
m7_501 -> m7_540  [key=2, style=dotted];
m7_502 -> m7_494  [key=0, style=solid];
m7_502 -> m7_539  [key=2, style=dotted];
m7_503 -> m7_504  [key=0, style=solid];
m7_503 -> m7_537  [key=2, style=dotted];
m7_504 -> m7_505  [key=0, style=solid];
m7_504 -> m7_539  [key=2, style=dotted];
m7_505 -> m7_506  [key=0, style=solid];
m7_505 -> m7_542  [key=2, style=dotted];
m7_509 -> m7_510  [key=0, style=solid];
m7_509 -> m7_544  [key=2, style=dotted];
m7_509 -> m7_511  [key=1, style=dashed, color=darkseagreen4, label=ms];
m7_509 -> m7_513  [key=1, style=dashed, color=darkseagreen4, label=ms];
m7_510 -> m7_511  [key=0, style=solid];
m7_510 -> m7_296  [key=2, style=dotted];
m7_510 -> m7_512  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m7_511 -> m7_512  [key=0, style=solid];
m7_511 -> m7_341  [key=2, style=dotted];
m7_513 -> m7_523  [key=0, style=solid];
m7_523 -> m7_524  [key=0, style=solid];
m7_524 -> m7_395  [key=0, style=bold, color=blue];
m7_795 -> m7_796  [key=0, style=solid];
m7_796 -> m7_797  [key=0, style=solid];
m7_796 -> m7_717  [key=2, style=dotted];
m7_796 -> m7_800  [key=1, style=dashed, color=darkseagreen4, label=json];
m7_797 -> m7_798  [key=0, style=solid];
m7_800 -> m7_801  [key=0, style=solid];
m7_800 -> m7_805  [key=2, style=dotted];
m7_800 -> m7_802  [key=1, style=dashed, color=darkseagreen4, label=a];
m7_798 -> m7_799  [key=0, style=solid];
m7_798 -> m7_127  [key=2, style=dotted];
m7_798 -> m7_801  [key=1, style=dashed, color=darkseagreen4, label=sw];
m7_798 -> m7_803  [key=1, style=dashed, color=darkseagreen4, label=sw];
m7_799 -> m7_800  [key=0, style=solid];
m7_799 -> m7_128  [key=2, style=dotted];
m7_801 -> m7_802  [key=0, style=solid];
m7_801 -> m7_131  [key=2, style=dotted];
m7_803 -> m7_804  [key=0, style=solid];
m7_803 -> m7_130  [key=2, style=dotted];
m7_802 -> m7_803  [key=0, style=solid];
m7_802 -> m7_806  [key=2, style=dotted];
m7_804 -> m7_795  [key=0, style=bold, color=blue];
m7_775 -> m7_776  [key=0, style=solid];
m7_776 -> m7_777  [key=0, style=solid];
m7_777 -> m7_778  [key=0, style=solid];
m7_777 -> m7_784  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_777 -> m7_791  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_777 -> m7_792  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_777 -> m7_777  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m7_778 -> m7_779  [key=0, style=solid];
m7_778 -> m7_793  [key=0, style=solid];
m7_784 -> m7_785  [key=0, style=solid];
m7_784 -> m7_789  [key=0, style=solid];
m7_784 -> m7_8  [key=3, color=darkorchid, style=bold, label="Local variable int j"];
m7_791 -> m7_792  [key=0, style=solid];
m7_791 -> m7_794  [key=2, style=dotted];
m7_792 -> m7_778  [key=0, style=solid];
m7_792 -> m7_792  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_779 -> m7_780  [key=0, style=solid];
m7_779 -> m7_127  [key=2, style=dotted];
m7_779 -> m7_790  [key=1, style=dashed, color=darkseagreen4, label=sw];
m7_779 -> m7_791  [key=1, style=dashed, color=darkseagreen4, label=sw];
m7_780 -> m7_781  [key=0, style=solid];
m7_780 -> m7_128  [key=2, style=dotted];
m7_790 -> m7_791  [key=0, style=solid];
m7_790 -> m7_131  [key=2, style=dotted];
m7_781 -> m7_782  [key=0, style=solid];
m7_781 -> m7_144  [key=2, style=dotted];
m7_781 -> m7_786  [key=1, style=dashed, color=darkseagreen4, label=ija];
m7_781 -> m7_789  [key=1, style=dashed, color=darkseagreen4, label=ija];
m7_781 -> m7_785  [key=3, color=darkorchid, style=bold, label="Local variable Newtonsoft.Json.Linq.JArray ija"];
m7_782 -> m7_783  [key=0, style=solid];
m7_782 -> m7_781  [key=3, color=darkorchid, style=bold, label="Local variable Newtonsoft.Json.Linq.JToken ijt"];
m7_786 -> m7_787  [key=0, style=solid];
m7_786 -> m7_145  [key=2, style=dotted];
m7_789 -> m7_790  [key=0, style=solid];
m7_789 -> m7_145  [key=2, style=dotted];
m7_783 -> m7_784  [key=0, style=solid];
m7_783 -> m7_788  [key=1, style=dashed, color=darkseagreen4, label=j];
m7_788 -> m7_784  [key=0, style=solid];
m7_788 -> m7_788  [key=1, style=dashed, color=darkseagreen4, label=j];
m7_785 -> m7_786  [key=0, style=solid];
m7_785 -> m7_144  [key=2, style=dotted];
m7_785 -> m7_787  [key=1, style=dashed, color=darkseagreen4, label=temp];
m7_787 -> m7_788  [key=0, style=solid];
m7_787 -> m7_789  [key=1, style=dashed, color=darkseagreen4, label=ija];
m7_793 -> m7_775  [key=0, style=bold, color=blue];
m7_647 -> m7_648  [key=0, style=solid];
m7_647 -> m7_653  [key=1, style=dashed, color=darkseagreen4, label="byte[]"];
m7_647 -> m7_581  [key=3, color=darkorchid, style=bold, label="Parameter variable byte[] bson"];
m7_648 -> m7_649  [key=0, style=solid];
m7_648 -> m7_653  [key=1, style=dashed, color=darkseagreen4, label=type];
m7_653 -> m7_654  [key=0, style=solid];
m7_653 -> m7_655  [key=2, style=dotted];
m7_653 -> m7_544  [key=2, style=dotted];
m7_653 -> m7_594  [key=2, style=dotted];
m7_649 -> m7_650  [key=0, style=solid];
m7_649 -> m7_296  [key=2, style=dotted];
m7_649 -> m7_651  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m7_649 -> m7_652  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m7_649 -> m7_653  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m7_650 -> m7_651  [key=0, style=solid];
m7_651 -> m7_652  [key=0, style=solid];
m7_652 -> m7_653  [key=0, style=solid];
m7_654 -> m7_647  [key=0, style=bold, color=blue];
m7_273 -> m7_274  [key=0, style=solid];
m7_274 -> m7_275  [key=0, style=solid];
m7_274 -> m7_280  [key=2, style=dotted];
m7_274 -> m7_276  [key=1, style=dashed, color=darkseagreen4, label=s];
m7_274 -> m7_284  [key=1, style=dashed, color=darkseagreen4, label=s];
m7_274 -> m7_277  [key=1, style=dashed, color=darkseagreen4, label=s];
m7_274 -> m7_292  [key=1, style=dashed, color=darkseagreen4, label=s];
m7_274 -> m7_278  [key=1, style=dashed, color=darkseagreen4, label=s];
m7_274 -> m7_301  [key=1, style=dashed, color=darkseagreen4, label=s];
m7_275 -> m7_276  [key=0, style=solid];
m7_275 -> m7_283  [key=1, style=dashed, color=darkseagreen4, label=interations];
m7_275 -> m7_277  [key=1, style=dashed, color=darkseagreen4, label=interations];
m7_275 -> m7_291  [key=1, style=dashed, color=darkseagreen4, label=interations];
m7_275 -> m7_278  [key=1, style=dashed, color=darkseagreen4, label=interations];
m7_275 -> m7_300  [key=1, style=dashed, color=darkseagreen4, label=interations];
m7_275 -> m7_275  [key=3, color=darkorchid, style=bold, label="Local variable int interations"];
m7_276 -> m7_277  [key=0, style=solid];
m7_276 -> m7_116  [key=2, style=dotted];
m7_276 -> m7_281  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_276 -> m7_8  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m7_276 -> m7_260  [key=3, color=darkorchid, style=bold, label="method methodReturn string "];
m7_277 -> m7_278  [key=0, style=solid];
m7_277 -> m7_116  [key=2, style=dotted];
m7_277 -> m7_289  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_277 -> m7_8  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m7_277 -> m7_260  [key=3, color=darkorchid, style=bold, label="method methodReturn string "];
m7_278 -> m7_279  [key=0, style=solid];
m7_278 -> m7_116  [key=2, style=dotted];
m7_278 -> m7_298  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_278 -> m7_8  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m7_278 -> m7_260  [key=3, color=darkorchid, style=bold, label="method methodReturn string "];
m7_279 -> m7_273  [key=0, style=bold, color=blue];
m7_132 -> m7_133  [key=0, style=solid];
m7_133 -> m7_134  [key=0, style=solid];
m7_133 -> m7_144  [key=2, style=dotted];
m7_133 -> m7_136  [key=1, style=dashed, color=darkseagreen4, label=a];
m7_133 -> m7_138  [key=1, style=dashed, color=darkseagreen4, label=a];
m7_133 -> m7_139  [key=1, style=dashed, color=darkseagreen4, label=a];
m7_134 -> m7_135  [key=0, style=solid];
m7_134 -> m7_136  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_134 -> m7_137  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_134 -> m7_8  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m7_136 -> m7_137  [key=0, style=solid];
m7_136 -> m7_145  [key=2, style=dotted];
m7_138 -> m7_139  [key=0, style=solid];
m7_138 -> m7_141  [key=1, style=dashed, color=darkseagreen4, label=first];
m7_138 -> m7_150  [key=1, style=dashed, color=darkseagreen4, label=first];
m7_139 -> m7_140  [key=0, style=solid];
m7_139 -> m7_142  [key=1, style=dashed, color=darkseagreen4, label=last];
m7_139 -> m7_158  [key=1, style=dashed, color=darkseagreen4, label=last];
m7_135 -> m7_136  [key=0, style=solid];
m7_135 -> m7_138  [key=0, style=solid];
m7_137 -> m7_135  [key=0, style=solid];
m7_137 -> m7_137  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_141 -> m7_142  [key=0, style=solid];
m7_141 -> m7_116  [key=2, style=dotted];
m7_141 -> m7_146  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_141 -> m7_141  [key=3, color=darkorchid, style=bold, label="method methodReturn string "];
m7_141 -> m7_8  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m7_140 -> m7_141  [key=0, style=solid];
m7_140 -> m7_149  [key=1, style=dashed, color=darkseagreen4, label=interations];
m7_140 -> m7_142  [key=1, style=dashed, color=darkseagreen4, label=interations];
m7_140 -> m7_157  [key=1, style=dashed, color=darkseagreen4, label=interations];
m7_140 -> m7_33  [key=3, color=red, style=bold, label="Local variable int interations"];
m7_142 -> m7_143  [key=0, style=solid];
m7_142 -> m7_116  [key=2, style=dotted];
m7_142 -> m7_154  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_142 -> m7_141  [key=3, color=darkorchid, style=bold, label="Local variable string p"];
m7_142 -> m7_8  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m7_142 -> m7_142  [key=3, color=darkorchid, style=bold, label="method methodReturn string "];
m7_143 -> m7_132  [key=0, style=bold, color=blue];
m7_6 -> m7_7  [key=0, style=solid];
m7_7 -> m7_8  [key=0, style=solid];
m7_8 -> m7_9  [key=0, style=solid];
m7_8 -> m7_10  [key=2, style=dotted];
m7_9 -> m7_6  [key=0, style=bold, color=blue];
m7_423 -> m7_424  [key=0, style=solid];
m7_423 -> m7_425  [key=1, style=dashed, color=darkseagreen4, label=object];
m7_423 -> m7_395  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m7_424 -> m7_425  [key=0, style=solid];
m7_424 -> m7_427  [key=2, style=dotted];
m7_425 -> m7_426  [key=0, style=solid];
m7_425 -> m7_428  [key=2, style=dotted];
m7_426 -> m7_423  [key=0, style=bold, color=blue];
m7_440 -> m7_441  [key=0, style=solid];
m7_440 -> m7_443  [key=1, style=dashed, color=darkseagreen4, label=object];
m7_440 -> m7_395  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m7_441 -> m7_442  [key=0, style=solid];
m7_441 -> m7_355  [key=2, style=dotted];
m7_441 -> m7_356  [key=2, style=dotted];
m7_441 -> m7_443  [key=1, style=dashed, color=darkseagreen4, label=dataContractSerializer];
m7_443 -> m7_444  [key=0, style=solid];
m7_443 -> m7_357  [key=2, style=dotted];
m7_442 -> m7_443  [key=0, style=solid];
m7_442 -> m7_340  [key=2, style=dotted];
m7_442 -> m7_444  [key=1, style=dashed, color=darkseagreen4, label=ms];
m7_442 -> m7_445  [key=1, style=dashed, color=darkseagreen4, label=ms];
m7_444 -> m7_445  [key=0, style=solid];
m7_444 -> m7_437  [key=2, style=dotted];
m7_445 -> m7_446  [key=0, style=solid];
m7_445 -> m7_438  [key=2, style=dotted];
m7_446 -> m7_447  [key=0, style=solid];
m7_446 -> m7_439  [key=2, style=dotted];
m7_447 -> m7_440  [key=0, style=bold, color=blue];
m7_109 -> m7_110  [key=0, style=solid];
m7_110 -> m7_111  [key=0, style=solid];
m7_111 -> m7_112  [key=0, style=solid];
m7_111 -> m7_106  [key=2, style=dotted];
m7_112 -> m7_113  [key=0, style=solid];
m7_112 -> m7_107  [key=2, style=dotted];
m7_113 -> m7_114  [key=0, style=solid];
m7_113 -> m7_115  [key=2, style=dotted];
m7_114 -> m7_109  [key=0, style=bold, color=blue];
m7_807 -> m7_2  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.PerformanceTests"];
m7_807 -> m7_8  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.PerformanceTests"];
m7_807 -> m7_12  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.PerformanceTests"];
m7_807 -> m7_16  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.PerformanceTests"];
m7_807 -> m7_17  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.PerformanceTests"];
m7_807 -> m7_33  [key=1, style=dashed, color=red, label="Newtonsoft.Json.Tests.PerformanceTests"];
m7_807 -> m7_45  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.PerformanceTests"];
m7_807 -> m7_54  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.PerformanceTests"];
m7_807 -> m7_56  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.PerformanceTests"];
m7_807 -> m7_62  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.PerformanceTests"];
m7_807 -> m7_63  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.PerformanceTests"];
m7_807 -> m7_64  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.PerformanceTests"];
m7_807 -> m7_65  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.PerformanceTests"];
m7_807 -> m7_66  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.PerformanceTests"];
m7_807 -> m7_67  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.PerformanceTests"];
m7_807 -> m7_68  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.PerformanceTests"];
m7_807 -> m7_69  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.PerformanceTests"];
m7_807 -> m7_70  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.PerformanceTests"];
m7_807 -> m7_73  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.PerformanceTests"];
m7_807 -> m7_74  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.PerformanceTests"];
m7_807 -> m7_75  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.PerformanceTests"];
m7_807 -> m7_76  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.PerformanceTests"];
m7_807 -> m7_77  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.PerformanceTests"];
m7_807 -> m7_80  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.PerformanceTests"];
m7_807 -> m7_81  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.PerformanceTests"];
m7_807 -> m7_82  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.PerformanceTests"];
m7_807 -> m7_83  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.PerformanceTests"];
m7_807 -> m7_86  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.PerformanceTests"];
m7_807 -> m7_95  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.PerformanceTests"];
m7_807 -> m7_141  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.PerformanceTests"];
m7_807 -> m7_142  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.PerformanceTests"];
m7_807 -> m7_170  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.PerformanceTests"];
m7_807 -> m7_171  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.PerformanceTests"];
m7_807 -> m7_195  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.PerformanceTests"];
m7_807 -> m7_260  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.PerformanceTests"];
m7_807 -> m7_276  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.PerformanceTests"];
m7_807 -> m7_277  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.PerformanceTests"];
m7_807 -> m7_278  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.PerformanceTests"];
m7_807 -> m7_306  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.PerformanceTests"];
m7_807 -> m7_307  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.PerformanceTests"];
m7_807 -> m7_308  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.PerformanceTests"];
m7_807 -> m7_309  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.PerformanceTests"];
m7_807 -> m7_310  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.PerformanceTests"];
m7_807 -> m7_381  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.PerformanceTests"];
m7_807 -> m7_386  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.PerformanceTests"];
m7_807 -> m7_387  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.PerformanceTests"];
m7_807 -> m7_515  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.PerformanceTests"];
m7_807 -> m7_517  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.PerformanceTests"];
m7_807 -> m7_519  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.PerformanceTests"];
m7_807 -> m7_521  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.PerformanceTests"];
m7_807 -> m7_564  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.PerformanceTests"];
m7_807 -> m7_567  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.PerformanceTests"];
m7_807 -> m7_571  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.PerformanceTests"];
m7_807 -> m7_669  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.PerformanceTests"];
m7_807 -> m7_671  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.PerformanceTests"];
m7_807 -> m7_674  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.PerformanceTests"];
m7_807 -> m7_677  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.PerformanceTests"];
m7_807 -> m7_679  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.PerformanceTests"];
m7_807 -> m7_681  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.PerformanceTests"];
m7_807 -> m7_683  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.PerformanceTests"];
m7_807 -> m7_685  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.PerformanceTests"];
m7_807 -> m7_710  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.PerformanceTests"];
m7_807 -> m7_715  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.PerformanceTests"];
m7_807 -> m7_732  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.PerformanceTests"];
m7_807 -> m7_736  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.PerformanceTests"];
m7_807 -> m7_746  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.PerformanceTests"];
m7_807 -> m7_750  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.PerformanceTests"];
m7_807 -> m7_763  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.PerformanceTests"];
m7_807 -> m7_767  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.PerformanceTests"];
m7_808 -> m7_149  [key=1, style=dashed, color=darkseagreen4, label=interations];
m7_808 -> m7_157  [key=1, style=dashed, color=darkseagreen4, label=interations];
m7_809 -> m7_150  [key=1, style=dashed, color=darkseagreen4, label=first];
m7_810 -> m7_158  [key=1, style=dashed, color=darkseagreen4, label=last];
m7_811 -> m7_175  [key=1, style=dashed, color=darkseagreen4, label=interations];
m7_811 -> m7_176  [key=1, style=dashed, color=darkseagreen4, label=interations];
m7_811 -> m7_182  [key=1, style=dashed, color=darkseagreen4, label=interations];
m7_811 -> m7_183  [key=1, style=dashed, color=darkseagreen4, label=interations];
m7_812 -> m7_176  [key=1, style=dashed, color=darkseagreen4, label=a1];
m7_812 -> m7_178  [key=1, style=dashed, color=darkseagreen4, label=a1];
m7_813 -> m7_183  [key=1, style=dashed, color=darkseagreen4, label=a2];
m7_813 -> m7_185  [key=1, style=dashed, color=darkseagreen4, label=a2];
m7_814 -> m7_203  [key=1, style=dashed, color=darkseagreen4, label=interations];
m7_815 -> m7_204  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m7_816 -> m7_264  [key=1, style=dashed, color=darkseagreen4, label=interations];
m7_817 -> m7_265  [key=1, style=dashed, color=darkseagreen4, label=text];
m7_817 -> m7_267  [key=1, style=dashed, color=darkseagreen4, label=text];
m7_818 -> m7_283  [key=1, style=dashed, color=darkseagreen4, label=interations];
m7_818 -> m7_291  [key=1, style=dashed, color=darkseagreen4, label=interations];
m7_818 -> m7_300  [key=1, style=dashed, color=darkseagreen4, label=interations];
m7_819 -> m7_284  [key=1, style=dashed, color=darkseagreen4, label=s];
m7_819 -> m7_292  [key=1, style=dashed, color=darkseagreen4, label=s];
m7_819 -> m7_301  [key=1, style=dashed, color=darkseagreen4, label=s];
m7_820 -> m7_321  [key=1, style=dashed, color=darkseagreen4, label=interations];
m7_820 -> m7_331  [key=1, style=dashed, color=darkseagreen4, label=interations];
m7_820 -> m7_348  [key=1, style=dashed, color=darkseagreen4, label=interations];
m7_820 -> m7_361  [key=1, style=dashed, color=darkseagreen4, label=interations];
m7_820 -> m7_372  [key=1, style=dashed, color=darkseagreen4, label=interations];
m7_821 -> m7_322  [key=1, style=dashed, color=darkseagreen4, label=object];
m7_821 -> m7_335  [key=1, style=dashed, color=darkseagreen4, label=object];
m7_821 -> m7_350  [key=1, style=dashed, color=darkseagreen4, label=object];
m7_821 -> m7_351  [key=1, style=dashed, color=darkseagreen4, label=object];
m7_821 -> m7_363  [key=1, style=dashed, color=darkseagreen4, label=object];
m7_821 -> m7_364  [key=1, style=dashed, color=darkseagreen4, label=object];
m7_821 -> m7_375  [key=1, style=dashed, color=darkseagreen4, label=object];
m7_822 -> m7_737  [key=1, style=dashed, color=darkseagreen4, label=test];
m7_822 -> m7_738  [key=1, style=dashed, color=darkseagreen4, label=test];
m7_823 -> m7_751  [key=1, style=dashed, color=darkseagreen4, label=test];
m7_823 -> m7_754  [key=1, style=dashed, color=darkseagreen4, label=test];
m7_824 -> m7_752  [key=1, style=dashed, color=darkseagreen4, label=ms];
m7_824 -> m7_753  [key=1, style=dashed, color=darkseagreen4, label=ms];
m7_824 -> m7_756  [key=1, style=dashed, color=darkseagreen4, label=ms];
m8_276 -> m8_277  [key=0, style=solid];
m8_277 -> m8_278  [key=0, style=solid];
m8_277 -> m8_283  [key=2, style=dotted];
m8_277 -> m8_284  [key=2, style=dotted];
m8_277 -> m8_279  [key=1, style=dashed, color=darkseagreen4, label=p];
m8_277 -> m8_280  [key=1, style=dashed, color=darkseagreen4, label=p];
m8_278 -> m8_279  [key=0, style=solid];
m8_278 -> m8_20  [key=2, style=dotted];
m8_278 -> m8_280  [key=1, style=dashed, color=darkseagreen4, label=people];
m8_278 -> m8_281  [key=1, style=dashed, color=darkseagreen4, label=people];
m8_279 -> m8_280  [key=0, style=solid];
m8_279 -> m8_38  [key=2, style=dotted];
m8_280 -> m8_281  [key=0, style=solid];
m8_280 -> m8_38  [key=2, style=dotted];
m8_281 -> m8_282  [key=0, style=solid];
m8_281 -> m8_92  [key=2, style=dotted];
m8_282 -> m8_276  [key=0, style=bold, color=blue];
m8_185 -> m8_186  [key=0, style=solid];
m8_186 -> m8_187  [key=0, style=solid];
m8_186 -> m8_178  [key=2, style=dotted];
m8_186 -> m8_189  [key=1, style=dashed, color=darkseagreen4, label=c1];
m8_186 -> m8_191  [key=1, style=dashed, color=darkseagreen4, label=c1];
m8_186 -> m8_192  [key=1, style=dashed, color=darkseagreen4, label=c1];
m8_187 -> m8_188  [key=0, style=solid];
m8_187 -> m8_178  [key=2, style=dotted];
m8_187 -> m8_189  [key=1, style=dashed, color=darkseagreen4, label=c2];
m8_187 -> m8_190  [key=1, style=dashed, color=darkseagreen4, label=c2];
m8_189 -> m8_190  [key=0, style=solid];
m8_191 -> m8_192  [key=0, style=solid];
m8_192 -> m8_193  [key=0, style=solid];
m8_192 -> m8_37  [key=2, style=dotted];
m8_192 -> m8_20  [key=2, style=dotted];
m8_192 -> m8_195  [key=2, style=dotted];
m8_192 -> m8_69  [key=2, style=dotted];
m8_188 -> m8_189  [key=0, style=solid];
m8_188 -> m8_178  [key=2, style=dotted];
m8_188 -> m8_190  [key=1, style=dashed, color=darkseagreen4, label=c3];
m8_188 -> m8_191  [key=1, style=dashed, color=darkseagreen4, label=c3];
m8_190 -> m8_191  [key=0, style=solid];
m8_193 -> m8_194  [key=0, style=solid];
m8_193 -> m8_41  [key=2, style=dotted];
m8_194 -> m8_185  [key=0, style=bold, color=blue];
m8_221 -> m8_222  [key=0, style=solid, color=green];
m8_222 -> m8_223  [key=0, style=solid, color=green];
m8_222 -> m8_178  [key=2, style=dotted];
m8_222 -> m8_225  [key=1, style=dashed, color=darkseagreen4, label=c1];
m8_222 -> m8_227  [key=1, style=dashed, color=darkseagreen4, label=c1];
m8_222 -> m8_228  [key=1, style=dashed, color=darkseagreen4, label=c1];
m8_223 -> m8_221  [key=0, style=bold, color=blue];
m8_223 -> m8_224  [key=0, style=solid];
m8_223 -> m8_178  [key=2, style=dotted];
m8_223 -> m8_225  [key=1, style=dashed, color=darkseagreen4, label=c2];
m8_223 -> m8_226  [key=1, style=dashed, color=darkseagreen4, label=c2];
m8_60 -> m8_61  [key=0, style=solid];
m8_61 -> m8_62  [key=0, style=solid];
m8_61 -> m8_67  [key=2, style=dotted];
m8_61 -> m8_63  [key=1, style=dashed, color=darkseagreen4, label=circularDictionary];
m8_61 -> m8_64  [key=1, style=dashed, color=darkseagreen4, label=circularDictionary];
m8_62 -> m8_63  [key=0, style=solid];
m8_62 -> m8_67  [key=2, style=dotted];
m8_62 -> m8_68  [key=2, style=dotted];
m8_63 -> m8_64  [key=0, style=solid];
m8_63 -> m8_68  [key=2, style=dotted];
m8_64 -> m8_65  [key=0, style=solid];
m8_64 -> m8_37  [key=2, style=dotted];
m8_64 -> m8_69  [key=2, style=dotted];
m8_65 -> m8_66  [key=0, style=solid];
m8_65 -> m8_41  [key=2, style=dotted];
m8_66 -> m8_60  [key=0, style=bold, color=blue];
m8_126 -> m8_127  [key=0, style=solid];
m8_127 -> m8_128  [key=0, style=solid];
m8_127 -> m8_131  [key=1, style=dashed, color=darkseagreen4, label=classRef];
m8_128 -> m8_129  [key=0, style=solid];
m8_128 -> m8_67  [key=2, style=dotted];
m8_128 -> m8_130  [key=1, style=dashed, color=darkseagreen4, label=circularDictionary];
m8_128 -> m8_131  [key=1, style=dashed, color=darkseagreen4, label=circularDictionary];
m8_128 -> m8_134  [key=1, style=dashed, color=darkseagreen4, label=circularDictionary];
m8_131 -> m8_132  [key=0, style=solid];
m8_131 -> m8_88  [key=2, style=dotted];
m8_131 -> m8_133  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_129 -> m8_130  [key=0, style=solid];
m8_129 -> m8_67  [key=2, style=dotted];
m8_129 -> m8_68  [key=2, style=dotted];
m8_130 -> m8_131  [key=0, style=solid];
m8_130 -> m8_68  [key=2, style=dotted];
m8_132 -> m8_126  [key=0, style=bold, color=blue];
m8_40 -> m8_45  [key=3, color=darkorchid, style=bold, label="Property variable Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.Child Child1"];
m8_21 -> m8_22  [key=0, style=solid];
m8_22 -> m8_23  [key=0, style=solid];
m8_22 -> m8_37  [key=2, style=dotted];
m8_22 -> m8_24  [key=1, style=dashed, color=darkseagreen4, label=settings];
m8_22 -> m8_25  [key=1, style=dashed, color=darkseagreen4, label=settings];
m8_22 -> m8_31  [key=1, style=dashed, color=darkseagreen4, label=settings];
m8_22 -> m8_33  [key=1, style=dashed, color=darkseagreen4, label=settings];
m8_23 -> m8_24  [key=0, style=solid];
m8_24 -> m8_25  [key=0, style=solid];
m8_25 -> m8_26  [key=0, style=solid];
m8_31 -> m8_32  [key=0, style=solid];
m8_31 -> m8_39  [key=2, style=dotted];
m8_31 -> m8_33  [key=1, style=dashed, color=darkseagreen4, label=s];
m8_33 -> m8_34  [key=0, style=solid];
m8_33 -> m8_42  [key=2, style=dotted];
m8_33 -> m8_35  [key=1, style=dashed, color=darkseagreen4, label=c2];
m8_26 -> m8_27  [key=0, style=solid];
m8_26 -> m8_16  [key=2, style=dotted];
m8_26 -> m8_29  [key=1, style=dashed, color=darkseagreen4, label=c1];
m8_26 -> m8_30  [key=1, style=dashed, color=darkseagreen4, label=c1];
m8_26 -> m8_31  [key=1, style=dashed, color=darkseagreen4, label=c1];
m8_27 -> m8_28  [key=0, style=solid];
m8_27 -> m8_0  [key=2, style=dotted];
m8_27 -> m8_29  [key=1, style=dashed, color=darkseagreen4, label=content];
m8_27 -> m8_30  [key=1, style=dashed, color=darkseagreen4, label=content];
m8_29 -> m8_30  [key=0, style=solid];
m8_29 -> m8_38  [key=2, style=dotted];
m8_30 -> m8_31  [key=0, style=solid];
m8_30 -> m8_38  [key=2, style=dotted];
m8_28 -> m8_29  [key=0, style=solid];
m8_32 -> m8_33  [key=0, style=solid];
m8_32 -> m8_40  [key=2, style=dotted];
m8_32 -> m8_41  [key=2, style=dotted];
m8_34 -> m8_35  [key=0, style=solid];
m8_34 -> m8_43  [key=2, style=dotted];
m8_35 -> m8_36  [key=0, style=solid];
m8_35 -> m8_43  [key=2, style=dotted];
m8_36 -> m8_21  [key=0, style=bold, color=blue];
m8_150 -> m8_151  [key=0, style=solid];
m8_150 -> m8_152  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m8_150 -> m8_155  [key=1, style=dashed, color=darkseagreen4, label=object];
m8_150 -> m8_157  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m8_150 -> m8_159  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m8_151 -> m8_152  [key=0, style=solid];
m8_151 -> m8_156  [key=1, style=dashed, color=darkseagreen4, label=circularReferenceClass];
m8_151 -> m8_157  [key=1, style=dashed, color=darkseagreen4, label=circularReferenceClass];
m8_152 -> m8_153  [key=0, style=solid];
m8_152 -> m8_161  [key=2, style=dotted];
m8_152 -> m8_154  [key=1, style=dashed, color=darkseagreen4, label=reference];
m8_155 -> m8_156  [key=0, style=solid];
m8_155 -> m8_163  [key=2, style=dotted];
m8_155 -> m8_164  [key=2, style=dotted];
m8_157 -> m8_158  [key=0, style=solid];
m8_157 -> m8_165  [key=2, style=dotted];
m8_159 -> m8_160  [key=0, style=solid];
m8_159 -> m8_166  [key=2, style=dotted];
m8_156 -> m8_157  [key=0, style=solid];
m8_156 -> m8_163  [key=2, style=dotted];
m8_153 -> m8_154  [key=0, style=solid];
m8_153 -> m8_162  [key=2, style=dotted];
m8_153 -> m8_155  [key=1, style=dashed, color=darkseagreen4, label=me];
m8_153 -> m8_156  [key=1, style=dashed, color=darkseagreen4, label=me];
m8_153 -> m8_158  [key=1, style=dashed, color=darkseagreen4, label=me];
m8_153 -> m8_159  [key=1, style=dashed, color=darkseagreen4, label=me];
m8_154 -> m8_155  [key=0, style=solid];
m8_154 -> m8_163  [key=2, style=dotted];
m8_158 -> m8_159  [key=0, style=solid];
m8_160 -> m8_150  [key=0, style=bold, color=blue];
m8_364 -> m8_365  [key=0, style=solid];
m8_365 -> m8_366  [key=0, style=solid];
m8_365 -> m8_373  [key=2, style=dotted];
m8_365 -> m8_367  [key=1, style=dashed, color=darkseagreen4, label=c1];
m8_365 -> m8_369  [key=1, style=dashed, color=darkseagreen4, label=c1];
m8_366 -> m8_367  [key=0, style=solid];
m8_366 -> m8_363  [key=2, style=dotted];
m8_366 -> m8_368  [key=1, style=dashed, color=darkseagreen4, label=l];
m8_366 -> m8_369  [key=1, style=dashed, color=darkseagreen4, label=l];
m8_366 -> m8_370  [key=1, style=dashed, color=darkseagreen4, label=l];
m8_367 -> m8_368  [key=0, style=solid];
m8_367 -> m8_38  [key=2, style=dotted];
m8_369 -> m8_370  [key=0, style=solid];
m8_369 -> m8_38  [key=2, style=dotted];
m8_368 -> m8_369  [key=0, style=solid];
m8_368 -> m8_373  [key=2, style=dotted];
m8_368 -> m8_38  [key=2, style=dotted];
m8_370 -> m8_371  [key=0, style=solid];
m8_370 -> m8_92  [key=2, style=dotted];
m8_371 -> m8_372  [key=0, style=solid];
m8_371 -> m8_41  [key=2, style=dotted];
m8_372 -> m8_364  [key=0, style=bold, color=blue];
m8_374 -> m8_375  [key=0, style=solid];
m8_375 -> m8_376  [key=0, style=solid];
m8_375 -> m8_382  [key=2, style=dotted];
m8_375 -> m8_377  [key=1, style=dashed, color=darkseagreen4, label=l];
m8_375 -> m8_378  [key=1, style=dashed, color=darkseagreen4, label=l];
m8_375 -> m8_379  [key=1, style=dashed, color=darkseagreen4, label=l];
m8_376 -> m8_377  [key=0, style=solid];
m8_376 -> m8_68  [key=2, style=dotted];
m8_377 -> m8_378  [key=0, style=solid];
m8_377 -> m8_68  [key=2, style=dotted];
m8_378 -> m8_379  [key=0, style=solid];
m8_378 -> m8_68  [key=2, style=dotted];
m8_379 -> m8_380  [key=0, style=solid];
m8_379 -> m8_92  [key=2, style=dotted];
m8_380 -> m8_381  [key=0, style=solid];
m8_380 -> m8_41  [key=2, style=dotted];
m8_381 -> m8_374  [key=0, style=bold, color=blue];
m8_143 -> m8_144  [key=0, style=solid];
m8_144 -> m8_145  [key=0, style=solid];
m8_144 -> m8_148  [key=1, style=dashed, color=darkseagreen4, label=json];
m8_144 -> m8_144  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m8_145 -> m8_146  [key=0, style=solid];
m8_145 -> m8_88  [key=2, style=dotted];
m8_145 -> m8_147  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_146 -> m8_143  [key=0, style=bold, color=blue];
m8_300 -> m8_301  [key=0, style=solid];
m8_301 -> m8_300  [key=0, style=bold, color=blue];
m8_246 -> m8_247  [key=0, style=solid];
m8_247 -> m8_248  [key=0, style=solid];
m8_247 -> m8_244  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m8_248 -> m8_249  [key=0, style=solid];
m8_248 -> m8_220  [key=2, style=dotted];
m8_248 -> m8_250  [key=1, style=dashed, color=darkseagreen4, label=employees];
m8_248 -> m8_251  [key=1, style=dashed, color=darkseagreen4, label=employees];
m8_248 -> m8_252  [key=1, style=dashed, color=darkseagreen4, label=employees];
m8_248 -> m8_253  [key=1, style=dashed, color=darkseagreen4, label=employees];
m8_248 -> m8_254  [key=1, style=dashed, color=darkseagreen4, label=employees];
m8_248 -> m8_255  [key=1, style=dashed, color=darkseagreen4, label=employees];
m8_249 -> m8_250  [key=0, style=solid];
m8_249 -> m8_43  [key=2, style=dotted];
m8_250 -> m8_251  [key=0, style=solid];
m8_250 -> m8_43  [key=2, style=dotted];
m8_251 -> m8_252  [key=0, style=solid];
m8_251 -> m8_43  [key=2, style=dotted];
m8_252 -> m8_253  [key=0, style=solid];
m8_252 -> m8_43  [key=2, style=dotted];
m8_253 -> m8_254  [key=0, style=solid];
m8_253 -> m8_43  [key=2, style=dotted];
m8_254 -> m8_255  [key=0, style=solid];
m8_254 -> m8_43  [key=2, style=dotted];
m8_255 -> m8_256  [key=0, style=solid];
m8_255 -> m8_43  [key=2, style=dotted];
m8_256 -> m8_246  [key=0, style=bold, color=blue];
m8_265 -> m8_266  [key=0, style=solid];
m8_266 -> m8_267  [key=0, style=solid];
m8_266 -> m8_262  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m8_267 -> m8_268  [key=0, style=solid];
m8_267 -> m8_220  [key=2, style=dotted];
m8_267 -> m8_269  [key=1, style=dashed, color=darkseagreen4, label=employees];
m8_267 -> m8_270  [key=1, style=dashed, color=darkseagreen4, label=employees];
m8_267 -> m8_273  [key=1, style=dashed, color=darkseagreen4, label=employees];
m8_267 -> m8_274  [key=1, style=dashed, color=darkseagreen4, label=employees];
m8_268 -> m8_269  [key=0, style=solid];
m8_268 -> m8_43  [key=2, style=dotted];
m8_269 -> m8_270  [key=0, style=solid];
m8_269 -> m8_271  [key=1, style=dashed, color=darkseagreen4, label=e1];
m8_269 -> m8_273  [key=1, style=dashed, color=darkseagreen4, label=e1];
m8_270 -> m8_271  [key=0, style=solid];
m8_270 -> m8_272  [key=1, style=dashed, color=darkseagreen4, label=e2];
m8_270 -> m8_274  [key=1, style=dashed, color=darkseagreen4, label=e2];
m8_273 -> m8_274  [key=0, style=solid];
m8_273 -> m8_43  [key=2, style=dotted];
m8_274 -> m8_275  [key=0, style=solid];
m8_274 -> m8_43  [key=2, style=dotted];
m8_271 -> m8_272  [key=0, style=solid];
m8_271 -> m8_43  [key=2, style=dotted];
m8_272 -> m8_273  [key=0, style=solid];
m8_272 -> m8_43  [key=2, style=dotted];
m8_275 -> m8_265  [key=0, style=bold, color=blue];
m8_306 -> m8_307  [key=0, style=solid];
m8_307 -> m8_308  [key=0, style=solid];
m8_307 -> m8_309  [key=2, style=dotted];
m8_308 -> m8_306  [key=0, style=bold, color=blue];
m8_302 -> m8_303  [key=0, style=solid];
m8_302 -> m8_304  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_303 -> m8_304  [key=0, style=solid];
m8_304 -> m8_305  [key=0, style=solid];
m8_305 -> m8_302  [key=0, style=bold, color=blue];
m8_204 -> m8_205  [key=0, style=solid];
m8_205 -> m8_206  [key=0, style=solid];
m8_205 -> m8_211  [key=2, style=dotted];
m8_205 -> m8_207  [key=1, style=dashed, color=darkseagreen4, label=mikeManager];
m8_206 -> m8_207  [key=0, style=solid];
m8_206 -> m8_211  [key=2, style=dotted];
m8_207 -> m8_208  [key=0, style=solid];
m8_207 -> m8_20  [key=2, style=dotted];
m8_208 -> m8_209  [key=0, style=solid];
m8_208 -> m8_92  [key=2, style=dotted];
m8_209 -> m8_210  [key=0, style=solid];
m8_209 -> m8_41  [key=2, style=dotted];
m8_210 -> m8_204  [key=0, style=bold, color=blue];
m8_101 -> m8_102  [key=0, style=solid];
m8_102 -> m8_103  [key=0, style=solid];
m8_102 -> m8_87  [key=2, style=dotted];
m8_102 -> m8_104  [key=1, style=dashed, color=darkseagreen4, label=circularList];
m8_102 -> m8_105  [key=1, style=dashed, color=darkseagreen4, label=circularList];
m8_102 -> m8_106  [key=1, style=dashed, color=darkseagreen4, label=circularList];
m8_103 -> m8_104  [key=0, style=solid];
m8_103 -> m8_38  [key=2, style=dotted];
m8_104 -> m8_105  [key=0, style=solid];
m8_104 -> m8_87  [key=2, style=dotted];
m8_104 -> m8_38  [key=2, style=dotted];
m8_105 -> m8_106  [key=0, style=solid];
m8_105 -> m8_87  [key=2, style=dotted];
m8_105 -> m8_38  [key=2, style=dotted];
m8_106 -> m8_107  [key=0, style=solid];
m8_106 -> m8_37  [key=2, style=dotted];
m8_106 -> m8_69  [key=2, style=dotted];
m8_107 -> m8_108  [key=0, style=solid];
m8_107 -> m8_41  [key=2, style=dotted];
m8_108 -> m8_101  [key=0, style=bold, color=blue];
m8_257 -> m8_258  [key=0, style=solid];
m8_258 -> m8_259  [key=0, style=solid];
m8_258 -> m8_211  [key=2, style=dotted];
m8_258 -> m8_260  [key=1, style=dashed, color=darkseagreen4, label=e1];
m8_259 -> m8_260  [key=0, style=solid];
m8_259 -> m8_211  [key=2, style=dotted];
m8_260 -> m8_261  [key=0, style=solid];
m8_260 -> m8_264  [key=2, style=dotted];
m8_261 -> m8_262  [key=0, style=solid];
m8_261 -> m8_92  [key=2, style=dotted];
m8_262 -> m8_263  [key=0, style=solid];
m8_262 -> m8_41  [key=2, style=dotted];
m8_263 -> m8_257  [key=0, style=bold, color=blue];
m8_136 -> m8_137  [key=0, style=solid];
m8_137 -> m8_138  [key=0, style=solid];
m8_137 -> m8_67  [key=2, style=dotted];
m8_137 -> m8_139  [key=1, style=dashed, color=darkseagreen4, label=circularDictionary];
m8_137 -> m8_140  [key=1, style=dashed, color=darkseagreen4, label=circularDictionary];
m8_138 -> m8_139  [key=0, style=solid];
m8_138 -> m8_67  [key=2, style=dotted];
m8_138 -> m8_68  [key=2, style=dotted];
m8_139 -> m8_140  [key=0, style=solid];
m8_139 -> m8_68  [key=2, style=dotted];
m8_140 -> m8_141  [key=0, style=solid];
m8_140 -> m8_37  [key=2, style=dotted];
m8_140 -> m8_69  [key=2, style=dotted];
m8_141 -> m8_142  [key=0, style=solid];
m8_141 -> m8_41  [key=2, style=dotted];
m8_142 -> m8_136  [key=0, style=bold, color=blue];
m8_93 -> m8_94  [key=0, style=solid];
m8_94 -> m8_95  [key=0, style=solid];
m8_94 -> m8_87  [key=2, style=dotted];
m8_94 -> m8_96  [key=1, style=dashed, color=darkseagreen4, label=circularList];
m8_94 -> m8_97  [key=1, style=dashed, color=darkseagreen4, label=circularList];
m8_94 -> m8_98  [key=1, style=dashed, color=darkseagreen4, label=circularList];
m8_95 -> m8_96  [key=0, style=solid];
m8_95 -> m8_38  [key=2, style=dotted];
m8_96 -> m8_97  [key=0, style=solid];
m8_96 -> m8_87  [key=2, style=dotted];
m8_96 -> m8_38  [key=2, style=dotted];
m8_97 -> m8_98  [key=0, style=solid];
m8_97 -> m8_87  [key=2, style=dotted];
m8_97 -> m8_38  [key=2, style=dotted];
m8_98 -> m8_99  [key=0, style=solid];
m8_98 -> m8_37  [key=2, style=dotted];
m8_98 -> m8_69  [key=2, style=dotted];
m8_99 -> m8_100  [key=0, style=solid];
m8_99 -> m8_41  [key=2, style=dotted];
m8_100 -> m8_93  [key=0, style=bold, color=blue];
m8_355 -> m8_356  [key=0, style=solid];
m8_356 -> m8_357  [key=0, style=solid];
m8_356 -> m8_363  [key=2, style=dotted];
m8_356 -> m8_358  [key=1, style=dashed, color=darkseagreen4, label=l];
m8_356 -> m8_359  [key=1, style=dashed, color=darkseagreen4, label=l];
m8_356 -> m8_360  [key=1, style=dashed, color=darkseagreen4, label=l];
m8_357 -> m8_358  [key=0, style=solid];
m8_357 -> m8_38  [key=2, style=dotted];
m8_358 -> m8_359  [key=0, style=solid];
m8_358 -> m8_38  [key=2, style=dotted];
m8_359 -> m8_360  [key=0, style=solid];
m8_359 -> m8_38  [key=2, style=dotted];
m8_360 -> m8_361  [key=0, style=solid];
m8_360 -> m8_92  [key=2, style=dotted];
m8_361 -> m8_362  [key=0, style=solid];
m8_361 -> m8_41  [key=2, style=dotted];
m8_362 -> m8_355  [key=0, style=bold, color=blue];
m8_119 -> m8_120  [key=0, style=solid];
m8_120 -> m8_121  [key=0, style=solid];
m8_120 -> m8_124  [key=1, style=dashed, color=darkseagreen4, label=json];
m8_120 -> m8_107  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m8_121 -> m8_122  [key=0, style=solid];
m8_121 -> m8_88  [key=2, style=dotted];
m8_121 -> m8_123  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_122 -> m8_119  [key=0, style=bold, color=blue];
m8_4 -> m8_5  [key=0, style=solid];
m8_5 -> m8_6  [key=0, style=solid];
m8_6 -> m8_4  [key=0, style=bold, color=blue];
m8_7 -> m8_8  [key=0, style=solid];
m8_8 -> m8_9  [key=0, style=solid];
m8_8 -> m8_0  [key=2, style=dotted];
m8_8 -> m8_10  [key=2, style=dotted];
m8_9 -> m8_7  [key=0, style=bold, color=blue];
m8_314 -> m8_315  [key=0, style=solid];
m8_315 -> m8_316  [key=0, style=solid];
m8_315 -> m8_302  [key=2, style=dotted];
m8_315 -> m8_317  [key=1, style=dashed, color=darkseagreen4, label=user1];
m8_315 -> m8_319  [key=1, style=dashed, color=darkseagreen4, label=user1];
m8_316 -> m8_317  [key=0, style=solid];
m8_316 -> m8_302  [key=2, style=dotted];
m8_317 -> m8_318  [key=0, style=solid];
m8_319 -> m8_320  [key=0, style=solid];
m8_319 -> m8_69  [key=2, style=dotted];
m8_318 -> m8_319  [key=0, style=solid];
m8_318 -> m8_37  [key=2, style=dotted];
m8_318 -> m8_320  [key=1, style=dashed, color=darkseagreen4, label=serializerSettings];
m8_320 -> m8_321  [key=0, style=solid];
m8_320 -> m8_42  [key=2, style=dotted];
m8_321 -> m8_322  [key=0, style=solid];
m8_321 -> m8_323  [key=2, style=dotted];
m8_322 -> m8_314  [key=0, style=bold, color=blue];
m8_239 -> m8_240  [key=0, style=solid];
m8_239 -> m8_234  [key=0, style=bold, color=blue];
m8_240 -> m8_241  [key=0, style=solid];
m8_240 -> m8_211  [key=2, style=dotted];
m8_240 -> m8_242  [key=1, style=dashed, color=darkseagreen4, label=e1];
m8_241 -> m8_242  [key=0, style=solid];
m8_241 -> m8_211  [key=2, style=dotted];
m8_242 -> m8_243  [key=0, style=solid];
m8_242 -> m8_20  [key=2, style=dotted];
m8_243 -> m8_244  [key=0, style=solid];
m8_243 -> m8_92  [key=2, style=dotted];
m8_244 -> m8_245  [key=0, style=solid];
m8_244 -> m8_41  [key=2, style=dotted];
m8_245 -> m8_239  [key=0, style=bold, color=blue];
m8_196 -> m8_197  [key=0, style=solid];
m8_197 -> m8_198  [key=0, style=solid];
m8_197 -> m8_193  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m8_198 -> m8_199  [key=0, style=solid];
m8_198 -> m8_37  [key=2, style=dotted];
m8_198 -> m8_20  [key=2, style=dotted];
m8_198 -> m8_195  [key=2, style=dotted];
m8_198 -> m8_42  [key=2, style=dotted];
m8_198 -> m8_200  [key=1, style=dashed, color=darkseagreen4, label=c1];
m8_198 -> m8_201  [key=1, style=dashed, color=darkseagreen4, label=c1];
m8_198 -> m8_202  [key=1, style=dashed, color=darkseagreen4, label=c1];
m8_199 -> m8_200  [key=0, style=solid];
m8_199 -> m8_43  [key=2, style=dotted];
m8_200 -> m8_201  [key=0, style=solid];
m8_200 -> m8_43  [key=2, style=dotted];
m8_201 -> m8_202  [key=0, style=solid];
m8_201 -> m8_43  [key=2, style=dotted];
m8_202 -> m8_203  [key=0, style=solid];
m8_202 -> m8_43  [key=2, style=dotted];
m8_203 -> m8_196  [key=0, style=bold, color=blue];
m8_383 -> m8_384  [key=0, style=solid];
m8_384 -> m8_385  [key=0, style=solid];
m8_384 -> m8_373  [key=2, style=dotted];
m8_384 -> m8_386  [key=1, style=dashed, color=darkseagreen4, label=c1];
m8_384 -> m8_388  [key=1, style=dashed, color=darkseagreen4, label=c1];
m8_385 -> m8_386  [key=0, style=solid];
m8_385 -> m8_382  [key=2, style=dotted];
m8_385 -> m8_387  [key=1, style=dashed, color=darkseagreen4, label=l];
m8_385 -> m8_388  [key=1, style=dashed, color=darkseagreen4, label=l];
m8_385 -> m8_389  [key=1, style=dashed, color=darkseagreen4, label=l];
m8_386 -> m8_387  [key=0, style=solid];
m8_386 -> m8_68  [key=2, style=dotted];
m8_388 -> m8_389  [key=0, style=solid];
m8_388 -> m8_68  [key=2, style=dotted];
m8_387 -> m8_388  [key=0, style=solid];
m8_387 -> m8_373  [key=2, style=dotted];
m8_387 -> m8_68  [key=2, style=dotted];
m8_389 -> m8_390  [key=0, style=solid];
m8_389 -> m8_92  [key=2, style=dotted];
m8_389 -> m8_391  [key=1, style=dashed, color=darkseagreen4, label=json];
m8_390 -> m8_391  [key=0, style=solid];
m8_390 -> m8_41  [key=2, style=dotted];
m8_391 -> m8_392  [key=0, style=solid];
m8_391 -> m8_220  [key=2, style=dotted];
m8_391 -> m8_393  [key=1, style=dashed, color=darkseagreen4, label=d];
m8_392 -> m8_393  [key=0, style=solid];
m8_392 -> m8_43  [key=2, style=dotted];
m8_393 -> m8_394  [key=0, style=solid];
m8_393 -> m8_77  [key=2, style=dotted];
m8_393 -> m8_78  [key=2, style=dotted];
m8_394 -> m8_383  [key=0, style=bold, color=blue];
m8_163 -> m8_45  [key=3, color=darkorchid, style=bold, label="Property variable Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.Child Child2"];
m8_16 -> m8_17  [key=0, style=solid];
m8_17 -> m8_18  [key=0, style=solid];
m8_17 -> m8_20  [key=2, style=dotted];
m8_18 -> m8_19  [key=0, style=solid];
m8_18 -> m8_20  [key=2, style=dotted];
m8_19 -> m8_16  [key=0, style=bold, color=blue];
m8_70 -> m8_71  [key=0, style=solid];
m8_71 -> m8_72  [key=0, style=solid];
m8_71 -> m8_65  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m8_72 -> m8_73  [key=0, style=solid];
m8_72 -> m8_37  [key=2, style=dotted];
m8_72 -> m8_42  [key=2, style=dotted];
m8_72 -> m8_74  [key=1, style=dashed, color=darkseagreen4, label=circularDictionary];
m8_72 -> m8_75  [key=1, style=dashed, color=darkseagreen4, label=circularDictionary];
m8_73 -> m8_74  [key=0, style=solid];
m8_73 -> m8_43  [key=2, style=dotted];
m8_74 -> m8_75  [key=0, style=solid];
m8_74 -> m8_43  [key=2, style=dotted];
m8_75 -> m8_76  [key=0, style=solid];
m8_75 -> m8_77  [key=2, style=dotted];
m8_75 -> m8_78  [key=2, style=dotted];
m8_76 -> m8_70  [key=0, style=bold, color=blue];
m8_425 -> m8_426  [key=0, style=solid];
m8_426 -> m8_427  [key=0, style=solid];
m8_426 -> m8_430  [key=1, style=dashed, color=darkseagreen4, label=json];
m8_426 -> m8_426  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m8_427 -> m8_428  [key=0, style=solid];
m8_427 -> m8_88  [key=2, style=dotted];
m8_427 -> m8_429  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_428 -> m8_425  [key=0, style=bold, color=blue];
m8_234 -> m8_235  [key=0, style=solid, color=green];
m8_234 -> m8_43  [key=2, style=dotted];
m8_235 -> m8_232  [key=3, color=green, style=bold, label="Local variable string json"];
m8_235 -> m8_236  [key=0, style=solid, color=green];
m8_235 -> m8_43  [key=2, style=dotted];
m8_236 -> m8_237  [key=0, style=solid, color=green];
m8_236 -> m8_220  [key=2, style=dotted, color=green];
m8_236 -> m8_238  [key=1, style=dashed, color=green, label=value];
m8_236 -> m8_43  [key=2, style=dotted];
m8_237 -> m8_238  [key=0, style=solid, color=green];
m8_237 -> m8_43  [key=2, style=dotted, color=green];
m8_238 -> m8_239  [key=0, style=solid, color=green];
m8_238 -> m8_43  [key=2, style=dotted, color=green];
m8_238 -> m8_231  [key=0, style=bold, color=blue];
m8_410 -> m8_411  [key=0, style=solid];
m8_411 -> m8_412  [key=0, style=solid];
m8_411 -> m8_373  [key=2, style=dotted];
m8_412 -> m8_413  [key=0, style=solid];
m8_412 -> m8_422  [key=2, style=dotted];
m8_412 -> m8_423  [key=2, style=dotted];
m8_412 -> m8_20  [key=2, style=dotted];
m8_413 -> m8_414  [key=0, style=solid];
m8_413 -> m8_92  [key=2, style=dotted];
m8_413 -> m8_415  [key=1, style=dashed, color=darkseagreen4, label=json];
m8_414 -> m8_415  [key=0, style=solid];
m8_414 -> m8_41  [key=2, style=dotted];
m8_415 -> m8_416  [key=0, style=solid];
m8_415 -> m8_220  [key=2, style=dotted];
m8_415 -> m8_417  [key=1, style=dashed, color=darkseagreen4, label=o2];
m8_415 -> m8_418  [key=1, style=dashed, color=darkseagreen4, label=o2];
m8_416 -> m8_417  [key=0, style=solid];
m8_416 -> m8_419  [key=1, style=dashed, color=darkseagreen4, label=c2];
m8_416 -> m8_420  [key=1, style=dashed, color=darkseagreen4, label=c2];
m8_417 -> m8_418  [key=0, style=solid];
m8_417 -> m8_419  [key=1, style=dashed, color=darkseagreen4, label=c3];
m8_418 -> m8_419  [key=0, style=solid];
m8_418 -> m8_420  [key=1, style=dashed, color=darkseagreen4, label=c4];
m8_419 -> m8_420  [key=0, style=solid];
m8_419 -> m8_77  [key=2, style=dotted];
m8_419 -> m8_78  [key=2, style=dotted];
m8_420 -> m8_421  [key=0, style=solid];
m8_420 -> m8_77  [key=2, style=dotted];
m8_420 -> m8_424  [key=2, style=dotted];
m8_421 -> m8_410  [key=0, style=bold, color=blue];
m8_348 -> m8_40  [key=3, color=darkorchid, style=bold, label="Property variable Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.Child ReadOnlyChild"];
m8_429 -> m8_430  [key=0, style=solid];
m8_90 -> m8_91  [key=0, style=solid];
m8_90 -> m8_92  [key=2, style=dotted];
m8_89 -> m8_90  [key=0, style=solid];
m8_91 -> m8_89  [key=0, style=bold, color=blue];
m8_124 -> m8_125  [key=0, style=solid];
m8_124 -> m8_37  [key=2, style=dotted];
m8_124 -> m8_42  [key=2, style=dotted];
m8_123 -> m8_124  [key=0, style=solid];
m8_125 -> m8_123  [key=0, style=bold, color=blue];
m8_134 -> m8_135  [key=0, style=solid];
m8_134 -> m8_92  [key=2, style=dotted];
m8_133 -> m8_134  [key=0, style=solid];
m8_135 -> m8_133  [key=0, style=bold, color=blue];
m8_148 -> m8_149  [key=0, style=solid];
m8_148 -> m8_37  [key=2, style=dotted];
m8_148 -> m8_42  [key=2, style=dotted];
m8_147 -> m8_148  [key=0, style=solid];
m8_149 -> m8_147  [key=0, style=bold, color=blue];
m8_430 -> m8_431  [key=0, style=solid];
m8_430 -> m8_37  [key=2, style=dotted];
m8_430 -> m8_42  [key=2, style=dotted];
m8_431 -> m8_429  [key=0, style=bold, color=blue];
m8_310 -> m8_311  [key=0, style=solid];
m8_311 -> m8_312  [key=0, style=solid];
m8_311 -> m8_313  [key=2, style=dotted];
m8_312 -> m8_310  [key=0, style=bold, color=blue];
m8_395 -> m8_396  [key=0, style=solid];
m8_396 -> m8_397  [key=0, style=solid];
m8_396 -> m8_409  [key=2, style=dotted];
m8_396 -> m8_398  [key=1, style=dashed, color=darkseagreen4, label=o1];
m8_396 -> m8_399  [key=1, style=dashed, color=darkseagreen4, label=o1];
m8_396 -> m8_400  [key=1, style=dashed, color=darkseagreen4, label=o1];
m8_396 -> m8_401  [key=1, style=dashed, color=darkseagreen4, label=o1];
m8_396 -> m8_402  [key=1, style=dashed, color=darkseagreen4, label=o1];
m8_397 -> m8_398  [key=0, style=solid];
m8_397 -> m8_373  [key=2, style=dotted];
m8_398 -> m8_399  [key=0, style=solid];
m8_399 -> m8_400  [key=0, style=solid];
m8_399 -> m8_373  [key=2, style=dotted];
m8_400 -> m8_401  [key=0, style=solid];
m8_401 -> m8_402  [key=0, style=solid];
m8_402 -> m8_403  [key=0, style=solid];
m8_402 -> m8_92  [key=2, style=dotted];
m8_402 -> m8_404  [key=1, style=dashed, color=darkseagreen4, label=json];
m8_402 -> m8_405  [key=1, style=dashed, color=darkseagreen4, label=json];
m8_403 -> m8_404  [key=0, style=solid];
m8_403 -> m8_403  [key=3, color=darkorchid, style=bold, label="Local variable string expected"];
m8_404 -> m8_405  [key=0, style=solid];
m8_404 -> m8_41  [key=2, style=dotted];
m8_405 -> m8_406  [key=0, style=solid];
m8_405 -> m8_220  [key=2, style=dotted];
m8_405 -> m8_407  [key=1, style=dashed, color=darkseagreen4, label=referenceObject];
m8_406 -> m8_407  [key=0, style=solid];
m8_406 -> m8_323  [key=2, style=dotted];
m8_407 -> m8_408  [key=0, style=solid];
m8_407 -> m8_77  [key=2, style=dotted];
m8_407 -> m8_78  [key=2, style=dotted];
m8_408 -> m8_395  [key=0, style=bold, color=blue];
m8_285 -> m8_286  [key=0, style=solid];
m8_286 -> m8_287  [key=0, style=solid];
m8_286 -> m8_283  [key=2, style=dotted];
m8_286 -> m8_284  [key=2, style=dotted];
m8_286 -> m8_288  [key=1, style=dashed, color=darkseagreen4, label=p];
m8_286 -> m8_289  [key=1, style=dashed, color=darkseagreen4, label=p];
m8_287 -> m8_288  [key=0, style=solid];
m8_287 -> m8_20  [key=2, style=dotted];
m8_287 -> m8_289  [key=1, style=dashed, color=darkseagreen4, label=people];
m8_287 -> m8_290  [key=1, style=dashed, color=darkseagreen4, label=people];
m8_288 -> m8_289  [key=0, style=solid];
m8_288 -> m8_38  [key=2, style=dotted];
m8_289 -> m8_290  [key=0, style=solid];
m8_289 -> m8_38  [key=2, style=dotted];
m8_290 -> m8_291  [key=0, style=solid];
m8_290 -> m8_37  [key=2, style=dotted];
m8_290 -> m8_69  [key=2, style=dotted];
m8_291 -> m8_292  [key=0, style=solid];
m8_291 -> m8_37  [key=2, style=dotted];
m8_291 -> m8_42  [key=2, style=dotted];
m8_291 -> m8_293  [key=1, style=dashed, color=darkseagreen4, label=deserializedPeople];
m8_291 -> m8_294  [key=1, style=dashed, color=darkseagreen4, label=deserializedPeople];
m8_292 -> m8_293  [key=0, style=solid];
m8_292 -> m8_43  [key=2, style=dotted];
m8_293 -> m8_294  [key=0, style=solid];
m8_293 -> m8_295  [key=1, style=dashed, color=darkseagreen4, label=p1];
m8_293 -> m8_297  [key=1, style=dashed, color=darkseagreen4, label=p1];
m8_294 -> m8_295  [key=0, style=solid];
m8_294 -> m8_296  [key=1, style=dashed, color=darkseagreen4, label=p2];
m8_294 -> m8_297  [key=1, style=dashed, color=darkseagreen4, label=p2];
m8_295 -> m8_296  [key=0, style=solid];
m8_295 -> m8_43  [key=2, style=dotted];
m8_297 -> m8_298  [key=0, style=solid];
m8_297 -> m8_77  [key=2, style=dotted];
m8_296 -> m8_297  [key=0, style=solid];
m8_296 -> m8_43  [key=2, style=dotted];
m8_298 -> m8_299  [key=0, style=solid];
m8_298 -> m8_43  [key=2, style=dotted];
m8_299 -> m8_285  [key=0, style=bold, color=blue];
m8_324 -> m8_325  [key=0, style=solid];
m8_325 -> m8_326  [key=0, style=solid];
m8_325 -> m8_344  [key=2, style=dotted];
m8_326 -> m8_327  [key=0, style=solid];
m8_326 -> m8_20  [key=2, style=dotted];
m8_326 -> m8_331  [key=1, style=dashed, color=darkseagreen4, label=myClasses1];
m8_326 -> m8_342  [key=1, style=dashed, color=darkseagreen4, label=myClasses1];
m8_327 -> m8_328  [key=0, style=solid];
m8_327 -> m8_345  [key=2, style=dotted];
m8_327 -> m8_331  [key=1, style=dashed, color=darkseagreen4, label=ser];
m8_327 -> m8_339  [key=1, style=dashed, color=darkseagreen4, label=ser];
m8_331 -> m8_332  [key=0, style=solid];
m8_331 -> m8_15  [key=2, style=dotted];
m8_342 -> m8_343  [key=0, style=solid];
m8_342 -> m8_354  [key=2, style=dotted];
m8_328 -> m8_329  [key=0, style=solid];
m8_328 -> m8_346  [key=2, style=dotted];
m8_328 -> m8_332  [key=1, style=dashed, color=darkseagreen4, label=ms];
m8_339 -> m8_340  [key=0, style=solid];
m8_339 -> m8_10  [key=2, style=dotted];
m8_339 -> m8_341  [key=1, style=dashed, color=darkseagreen4, label=myClasses2];
m8_339 -> m8_342  [key=1, style=dashed, color=darkseagreen4, label=myClasses2];
m8_329 -> m8_330  [key=0, style=solid];
m8_329 -> m8_347  [key=2, style=dotted];
m8_332 -> m8_333  [key=0, style=solid];
m8_332 -> m8_349  [key=2, style=dotted];
m8_332 -> m8_335  [key=1, style=dashed, color=darkseagreen4, label=data];
m8_330 -> m8_331  [key=0, style=solid];
m8_330 -> m8_348  [key=2, style=dotted];
m8_333 -> m8_334  [key=0, style=solid];
m8_333 -> m8_350  [key=2, style=dotted];
m8_335 -> m8_336  [key=0, style=solid];
m8_335 -> m8_351  [key=2, style=dotted];
m8_335 -> m8_337  [key=1, style=dashed, color=darkseagreen4, label=ms];
m8_334 -> m8_335  [key=0, style=solid];
m8_334 -> m8_41  [key=2, style=dotted];
m8_336 -> m8_337  [key=0, style=solid];
m8_337 -> m8_338  [key=0, style=solid];
m8_337 -> m8_352  [key=2, style=dotted];
m8_338 -> m8_339  [key=0, style=solid];
m8_338 -> m8_353  [key=2, style=dotted];
m8_340 -> m8_341  [key=0, style=solid];
m8_340 -> m8_43  [key=2, style=dotted];
m8_341 -> m8_342  [key=0, style=solid];
m8_341 -> m8_43  [key=2, style=dotted];
m8_343 -> m8_324  [key=0, style=bold, color=blue];
m8_109 -> m8_110  [key=0, style=solid];
m8_110 -> m8_111  [key=0, style=solid];
m8_110 -> m8_107  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m8_111 -> m8_112  [key=0, style=solid];
m8_111 -> m8_37  [key=2, style=dotted];
m8_111 -> m8_42  [key=2, style=dotted];
m8_111 -> m8_113  [key=1, style=dashed, color=darkseagreen4, label=circularList];
m8_111 -> m8_114  [key=1, style=dashed, color=darkseagreen4, label=circularList];
m8_111 -> m8_115  [key=1, style=dashed, color=darkseagreen4, label=circularList];
m8_111 -> m8_116  [key=1, style=dashed, color=darkseagreen4, label=circularList];
m8_111 -> m8_117  [key=1, style=dashed, color=darkseagreen4, label=circularList];
m8_112 -> m8_113  [key=0, style=solid];
m8_112 -> m8_43  [key=2, style=dotted];
m8_113 -> m8_114  [key=0, style=solid];
m8_113 -> m8_43  [key=2, style=dotted];
m8_114 -> m8_115  [key=0, style=solid];
m8_114 -> m8_43  [key=2, style=dotted];
m8_115 -> m8_116  [key=0, style=solid];
m8_115 -> m8_43  [key=2, style=dotted];
m8_116 -> m8_117  [key=0, style=solid];
m8_116 -> m8_43  [key=2, style=dotted];
m8_117 -> m8_118  [key=0, style=solid];
m8_117 -> m8_77  [key=2, style=dotted];
m8_117 -> m8_78  [key=2, style=dotted];
m8_118 -> m8_109  [key=0, style=bold, color=blue];
m8_225 -> m8_226  [key=0, style=solid, color=green];
m8_227 -> m8_228  [key=0, style=solid];
m8_227 -> m8_224  [key=0, style=bold, color=blue];
m8_228 -> m8_229  [key=0, style=solid, color=green];
m8_228 -> m8_37  [key=2, style=dotted];
m8_228 -> m8_69  [key=2, style=dotted];
m8_224 -> m8_225  [key=0, style=solid, color=green];
m8_224 -> m8_178  [key=2, style=dotted];
m8_224 -> m8_226  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.Condition"];
m8_224 -> m8_227  [key=1, style=dashed, color=darkseagreen4, label=c3];
m8_226 -> m8_227  [key=0, style=solid, color=green];
m8_229 -> m8_230  [key=0, style=solid, color=green];
m8_229 -> m8_41  [key=2, style=dotted];
m8_229 -> m8_221  [key=2, style=dotted, color=green];
m8_230 -> m8_221  [key=0, style=bold, color=blue];
m8_230 -> m8_231  [key=0, style=solid, color=green];
m8_230 -> m8_224  [key=2, style=dotted, color=green];
m8_11 -> m8_12  [key=0, style=solid];
m8_11 -> m8_13  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m8_12 -> m8_13  [key=0, style=solid];
m8_13 -> m8_14  [key=0, style=solid];
m8_13 -> m8_15  [key=2, style=dotted];
m8_14 -> m8_11  [key=0, style=bold, color=blue];
m8_212 -> m8_213  [key=0, style=solid];
m8_213 -> m8_214  [key=0, style=solid];
m8_213 -> m8_209  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m8_214 -> m8_215  [key=0, style=solid];
m8_214 -> m8_220  [key=2, style=dotted];
m8_214 -> m8_216  [key=1, style=dashed, color=darkseagreen4, label=employees];
m8_214 -> m8_217  [key=1, style=dashed, color=darkseagreen4, label=employees];
m8_214 -> m8_218  [key=1, style=dashed, color=darkseagreen4, label=employees];
m8_215 -> m8_216  [key=0, style=solid];
m8_215 -> m8_43  [key=2, style=dotted];
m8_216 -> m8_217  [key=0, style=solid];
m8_216 -> m8_43  [key=2, style=dotted];
m8_217 -> m8_218  [key=0, style=solid];
m8_217 -> m8_43  [key=2, style=dotted];
m8_218 -> m8_219  [key=0, style=solid];
m8_218 -> m8_43  [key=2, style=dotted];
m8_219 -> m8_212  [key=0, style=bold, color=blue];
m8_79 -> m8_80  [key=0, style=solid];
m8_80 -> m8_81  [key=0, style=solid];
m8_80 -> m8_85  [key=1, style=dashed, color=darkseagreen4, label=classRef];
m8_81 -> m8_82  [key=0, style=solid];
m8_81 -> m8_87  [key=2, style=dotted];
m8_81 -> m8_83  [key=1, style=dashed, color=darkseagreen4, label=circularList];
m8_81 -> m8_84  [key=1, style=dashed, color=darkseagreen4, label=circularList];
m8_81 -> m8_85  [key=1, style=dashed, color=darkseagreen4, label=circularList];
m8_81 -> m8_90  [key=1, style=dashed, color=darkseagreen4, label=circularList];
m8_85 -> m8_86  [key=0, style=solid];
m8_85 -> m8_88  [key=2, style=dotted];
m8_85 -> m8_89  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_82 -> m8_83  [key=0, style=solid];
m8_82 -> m8_38  [key=2, style=dotted];
m8_83 -> m8_84  [key=0, style=solid];
m8_83 -> m8_87  [key=2, style=dotted];
m8_83 -> m8_38  [key=2, style=dotted];
m8_84 -> m8_85  [key=0, style=solid];
m8_84 -> m8_87  [key=2, style=dotted];
m8_84 -> m8_38  [key=2, style=dotted];
m8_86 -> m8_79  [key=0, style=bold, color=blue];
m8_231 -> m8_232  [key=0, style=solid, color=green];
m8_231 -> m8_92  [key=2, style=dotted, color=green];
m8_232 -> m8_233  [key=0, style=solid, color=green];
m8_232 -> m8_229  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m8_232 -> m8_41  [key=2, style=dotted, color=green];
m8_233 -> m8_234  [key=0, style=solid];
m8_233 -> m8_37  [key=2, style=dotted];
m8_233 -> m8_42  [key=2, style=dotted];
m8_233 -> m8_235  [key=1, style=dashed, color=darkseagreen4, label=c1];
m8_233 -> m8_236  [key=1, style=dashed, color=darkseagreen4, label=c1];
m8_233 -> m8_237  [key=1, style=dashed, color=darkseagreen4, label=c1];
m8_233 -> m8_228  [key=0, style=bold, color=blue];
m8_44 -> m8_45  [key=0, style=solid];
m8_45 -> m8_46  [key=0, style=solid];
m8_45 -> m8_58  [key=2, style=dotted];
m8_45 -> m8_47  [key=1, style=dashed, color=darkseagreen4, label=c];
m8_46 -> m8_47  [key=0, style=solid];
m8_46 -> m8_20  [key=2, style=dotted];
m8_47 -> m8_48  [key=0, style=solid];
m8_47 -> m8_59  [key=2, style=dotted];
m8_48 -> m8_49  [key=0, style=solid];
m8_48 -> m8_37  [key=2, style=dotted];
m8_48 -> m8_39  [key=2, style=dotted];
m8_48 -> m8_50  [key=1, style=dashed, color=darkseagreen4, label=json];
m8_49 -> m8_50  [key=0, style=solid];
m8_49 -> m8_41  [key=2, style=dotted];
m8_50 -> m8_51  [key=0, style=solid];
m8_50 -> m8_37  [key=2, style=dotted];
m8_50 -> m8_42  [key=2, style=dotted];
m8_50 -> m8_52  [key=1, style=dashed, color=darkseagreen4, label=newP];
m8_50 -> m8_53  [key=1, style=dashed, color=darkseagreen4, label=newP];
m8_50 -> m8_54  [key=1, style=dashed, color=darkseagreen4, label=newP];
m8_50 -> m8_55  [key=1, style=dashed, color=darkseagreen4, label=newP];
m8_50 -> m8_56  [key=1, style=dashed, color=darkseagreen4, label=newP];
m8_51 -> m8_52  [key=0, style=solid];
m8_51 -> m8_43  [key=2, style=dotted];
m8_52 -> m8_53  [key=0, style=solid];
m8_52 -> m8_43  [key=2, style=dotted];
m8_53 -> m8_54  [key=0, style=solid];
m8_53 -> m8_43  [key=2, style=dotted];
m8_54 -> m8_55  [key=0, style=solid];
m8_54 -> m8_43  [key=2, style=dotted];
m8_55 -> m8_56  [key=0, style=solid];
m8_55 -> m8_43  [key=2, style=dotted];
m8_56 -> m8_57  [key=0, style=solid];
m8_56 -> m8_43  [key=2, style=dotted];
m8_57 -> m8_44  [key=0, style=bold, color=blue];
m8_0 -> m8_1  [key=0, style=solid];
m8_1 -> m8_2  [key=0, style=solid];
m8_1 -> m8_3  [key=2, style=dotted];
m8_2 -> m8_0  [key=0, style=bold, color=blue];
m8_167 -> m8_168  [key=0, style=solid];
m8_167 -> m8_172  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m8_167 -> m8_175  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m8_167 -> m8_171  [key=3, color=darkorchid, style=bold, label="method methodReturn object ReadJson"];
m8_168 -> m8_169  [key=0, style=solid];
m8_168 -> m8_177  [key=2, style=dotted];
m8_168 -> m8_172  [key=1, style=dashed, color=darkseagreen4, label=o];
m8_168 -> m8_174  [key=1, style=dashed, color=darkseagreen4, label=o];
m8_172 -> m8_173  [key=0, style=solid];
m8_172 -> m8_179  [key=2, style=dotted];
m8_172 -> m8_180  [key=2, style=dotted];
m8_175 -> m8_176  [key=0, style=solid];
m8_175 -> m8_181  [key=2, style=dotted];
m8_169 -> m8_170  [key=0, style=solid];
m8_174 -> m8_175  [key=0, style=solid];
m8_170 -> m8_171  [key=0, style=solid];
m8_170 -> m8_174  [key=0, style=solid];
m8_171 -> m8_172  [key=0, style=solid];
m8_171 -> m8_178  [key=2, style=dotted];
m8_171 -> m8_173  [key=1, style=dashed, color=darkseagreen4, label=circularReferenceClass];
m8_173 -> m8_176  [key=0, style=solid];
m8_176 -> m8_167  [key=0, style=bold, color=blue];
m8_182 -> m8_183  [key=0, style=solid];
m8_183 -> m8_184  [key=0, style=solid];
m8_184 -> m8_182  [key=0, style=bold, color=blue];
m8_432 -> m8_1  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ContentA"];
m8_433 -> m8_17  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.Container"];
m8_433 -> m8_18  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.Container"];
m8_434 -> m8_90  [key=1, style=dashed, color=darkseagreen4, label=circularList];
m8_435 -> m8_124  [key=1, style=dashed, color=darkseagreen4, label=json];
m8_436 -> m8_134  [key=1, style=dashed, color=darkseagreen4, label=circularDictionary];
m8_437 -> m8_148  [key=1, style=dashed, color=darkseagreen4, label=json];
m8_438 -> m8_303  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.User"];
m8_438 -> m8_304  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.User"];
m8_438 -> m8_307  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.User"];
m8_438 -> m8_311  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.User"];
m8_439 -> m8_430  [key=1, style=dashed, color=darkseagreen4, label=json];
m8_457 -> m8_222  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.Condition"];
m8_458 -> m8_225  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ClassWithConditions"];
m8_458 -> m8_226  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ClassWithConditions"];
m9_382 -> m9_11  [key=2, style=dotted];
m9_382 -> m9_383  [key=0, style=solid];
m9_199 -> m9_200  [key=0, style=solid];
m9_199 -> m9_202  [key=1, style=dashed, color=darkseagreen4, label=testDates];
m9_199 -> m9_204  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m9_199 -> m9_209  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m9_199 -> m9_213  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m9_199 -> m9_206  [key=1, style=dashed, color=darkseagreen4, label=testDates];
m9_199 -> m9_210  [key=2, style=dotted];
m9_200 -> m9_201  [key=0, style=solid];
m9_200 -> m9_13  [key=2, style=dotted];
m9_200 -> m9_14  [key=2, style=dotted];
m9_200 -> m9_204  [key=1, style=dashed, color=darkseagreen4, label=ms];
m9_200 -> m9_53  [key=2, style=dotted];
m9_200 -> m9_202  [key=1, style=dashed, color=darkseagreen4, label=ms];
m9_200 -> m9_203  [key=1, style=dashed, color=darkseagreen4, label=ms];
m9_202 -> m9_203  [key=0, style=solid];
m9_202 -> m9_209  [key=0, style=solid];
m9_202 -> m9_133  [key=2, style=dotted];
m9_202 -> m9_205  [key=1, style=dashed, color=darkseagreen4, label=genericDictionaryType];
m9_202 -> m9_55  [key=2, style=dotted];
m9_204 -> m9_214  [key=0, style=solid];
m9_204 -> m9_196  [key=2, style=dotted];
m9_204 -> m9_156  [key=2, style=dotted];
m9_204 -> m9_205  [key=0, style=solid];
m9_204 -> m9_212  [key=2, style=dotted];
m9_209 -> m9_210  [key=0, style=solid];
m9_209 -> m9_213  [key=0, style=solid];
m9_209 -> m9_198  [key=2, style=dotted];
m9_213 -> m9_214  [key=0, style=solid];
m9_213 -> m9_196  [key=2, style=dotted];
m9_213 -> m9_156  [key=2, style=dotted];
m9_201 -> m9_202  [key=0, style=solid];
m9_201 -> m9_54  [key=2, style=dotted];
m9_203 -> m9_204  [key=0, style=solid];
m9_203 -> m9_205  [key=0, style=solid];
m9_203 -> m9_154  [key=2, style=dotted];
m9_203 -> m9_211  [key=2, style=dotted];
m9_205 -> m9_206  [key=0, style=solid];
m9_205 -> m9_197  [key=2, style=dotted];
m9_205 -> m9_207  [key=1, style=dashed, color=darkseagreen4, label=expected];
m9_205 -> m9_213  [key=2, style=dotted];
m9_206 -> m9_207  [key=0, style=solid];
m9_206 -> m9_214  [key=1, style=dashed, color=darkseagreen4, label="out System.Type"];
m9_206 -> m9_215  [key=2, style=dotted];
m9_207 -> m9_208  [key=0, style=solid];
m9_207 -> m9_214  [key=1, style=dashed, color=darkseagreen4, label="out System.Type"];
m9_207 -> m9_11  [key=2, style=dotted];
m9_208 -> m9_214  [key=0, style=solid];
m9_208 -> m9_198  [key=0, style=bold, color=blue];
m9_210 -> m9_211  [key=0, style=solid];
m9_210 -> m9_214  [key=1, style=dashed, color=darkseagreen4, label="out System.Type"];
m9_211 -> m9_212  [key=0, style=solid];
m9_211 -> m9_214  [key=1, style=dashed, color=darkseagreen4, label="out System.Type"];
m9_212 -> m9_214  [key=0, style=solid];
m9_214 -> m9_199  [key=0, style=bold, color=blue];
m9_1284 -> m9_1285  [key=0, style=solid];
m9_1285 -> m9_1286  [key=0, style=solid];
m9_1285 -> m9_1287  [key=2, style=dotted];
m9_1286 -> m9_1284  [key=0, style=bold, color=blue];
m9_1751 -> m9_1752  [key=0, style=solid];
m9_1758 -> m9_351  [key=2, style=dotted];
m9_1758 -> m9_1759  [key=0, style=solid];
m9_1759 -> m9_12  [key=2, style=dotted];
m9_1759 -> m9_1760  [key=0, style=solid];
m9_1752 -> m9_1758  [key=1, style=dashed, color=darkseagreen4, label=joe];
m9_1752 -> m9_1753  [key=0, style=solid];
m9_1752 -> m9_1761  [key=2, style=dotted];
m9_1752 -> m9_1756  [key=1, style=dashed, color=darkseagreen4, label=joe];
m9_1754 -> m9_1758  [key=1, style=dashed, color=darkseagreen4, label=mike];
m9_1754 -> m9_1755  [key=0, style=solid];
m9_1754 -> m9_1761  [key=2, style=dotted];
m9_1754 -> m9_1756  [key=1, style=dashed, color=darkseagreen4, label=mike];
m9_1754 -> m9_1757  [key=1, style=dashed, color=darkseagreen4, label=mike];
m9_1757 -> m9_1758  [key=0, style=solid];
m9_1753 -> m9_1754  [key=0, style=solid];
m9_1756 -> m9_1757  [key=0, style=solid];
m9_1755 -> m9_1756  [key=0, style=solid];
m9_1760 -> m9_1751  [key=0, style=bold, color=blue];
m9_772 -> m9_773  [key=0, style=solid];
m9_772 -> m9_774  [key=1, style=dashed, color=darkseagreen4, label=int];
m9_772 -> m9_775  [key=1, style=dashed, color=darkseagreen4, label=int];
m9_772 -> m9_776  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_773 -> m9_774  [key=0, style=solid];
m9_774 -> m9_775  [key=0, style=solid];
m9_775 -> m9_776  [key=0, style=solid];
m9_776 -> m9_777  [key=0, style=solid];
m9_777 -> m9_772  [key=0, style=bold, color=blue];
m9_263 -> m9_267  [key=0, style=solid];
m9_263 -> m9_268  [key=2, style=dotted];
m9_3372 -> m9_3373  [key=0, style=solid];
m9_3373 -> m9_2942  [key=2, style=dotted];
m9_3373 -> m9_3374  [key=0, style=solid];
m9_3374 -> m9_3372  [key=0, style=bold, color=blue];
m9_270 -> m9_271  [key=0, style=solid];
m9_270 -> m9_273  [key=1, style=dashed, color=darkseagreen4, label=sw];
m9_270 -> m9_274  [key=1, style=dashed, color=darkseagreen4, label=bool];
m9_270 -> m9_280  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m9_270 -> m9_283  [key=1, style=dashed, color=darkseagreen4, label=bool];
m9_270 -> m9_285  [key=1, style=dashed, color=darkseagreen4, label=bool];
m9_270 -> m9_7  [key=3, color=darkorchid, style=bold, label="method methodReturn bool CanReadMemberValue"];
m9_270 -> m9_11  [key=3, color=darkorchid, style=bold, label="method methodReturn bool CanReadMemberValue"];
m9_270 -> m9_272  [key=1, style=dashed, color=darkseagreen4, label=sw];
m9_270 -> m9_278  [key=2, style=dotted];
m9_271 -> m9_272  [key=0, style=solid];
m9_271 -> m9_279  [key=0, style=solid];
m9_271 -> m9_286  [key=0, style=solid];
m9_271 -> m9_228  [key=2, style=dotted];
m9_273 -> m9_274  [key=0, style=solid];
m9_273 -> m9_276  [key=1, style=dashed, color=darkseagreen4, label=fieldInfo];
m9_273 -> m9_282  [key=2, style=dotted];
m9_273 -> m9_283  [key=2, style=dotted];
m9_273 -> m9_280  [key=2, style=dotted];
m9_273 -> m9_281  [key=2, style=dotted];
m9_273 -> m9_284  [key=2, style=dotted];
m9_274 -> m9_275  [key=0, style=solid];
m9_274 -> m9_276  [key=0, style=solid];
m9_274 -> m9_11  [key=2, style=dotted];
m9_280 -> m9_281  [key=0, style=solid];
m9_280 -> m9_285  [key=1, style=dashed, color=darkseagreen4, label=propertyInfo];
m9_283 -> m9_284  [key=0, style=solid];
m9_283 -> m9_285  [key=0, style=solid];
m9_285 -> m9_287  [key=0, style=solid];
m9_285 -> m9_288  [key=2, style=dotted];
m9_285 -> m9_286  [key=0, style=solid];
m9_272 -> m9_273  [key=0, style=solid];
m9_272 -> m9_11  [key=2, style=dotted];
m9_272 -> m9_280  [key=2, style=dotted];
m9_272 -> m9_281  [key=2, style=dotted];
m9_279 -> m9_280  [key=0, style=solid];
m9_286 -> m9_287  [key=0, style=solid];
m9_286 -> m9_9  [key=2, style=dotted];
m9_286 -> m9_289  [key=2, style=dotted];
m9_276 -> m9_277  [key=0, style=solid];
m9_276 -> m9_278  [key=0, style=solid];
m9_275 -> m9_287  [key=0, style=solid];
m9_275 -> m9_266  [key=0, style=bold, color=blue];
m9_277 -> m9_287  [key=0, style=solid];
m9_278 -> m9_287  [key=0, style=solid];
m9_281 -> m9_282  [key=0, style=solid];
m9_281 -> m9_283  [key=0, style=solid];
m9_282 -> m9_287  [key=0, style=solid];
m9_284 -> m9_287  [key=0, style=solid];
m9_287 -> m9_270  [key=0, style=bold, color=blue];
m9_287 -> m9_11  [key=2, style=dotted];
m9_287 -> m9_288  [key=0, style=solid];
m9_322 -> m9_323  [key=0, style=solid];
m9_322 -> m9_331  [key=2, style=dotted];
m9_322 -> m9_324  [key=1, style=dashed, color=darkseagreen4, label=resolvedMembers];
m9_322 -> m9_325  [key=1, style=dashed, color=darkseagreen4, label=resolvedMembers];
m9_322 -> m9_327  [key=1, style=dashed, color=darkseagreen4, label=resolvedMembers];
m9_322 -> m9_328  [key=1, style=dashed, color=darkseagreen4, label=resolvedMembers];
m9_433 -> m9_434  [key=0, style=solid];
m9_433 -> m9_444  [key=0, style=solid];
m9_433 -> m9_60  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m9_862 -> m9_863  [key=0, style=solid];
m9_864 -> m9_93  [key=2, style=dotted];
m9_864 -> m9_865  [key=0, style=solid];
m9_864 -> m9_866  [key=1, style=dashed, color=darkseagreen4, label=r];
m9_864 -> m9_867  [key=1, style=dashed, color=darkseagreen4, label=r];
m9_865 -> m9_11  [key=2, style=dotted];
m9_865 -> m9_866  [key=0, style=solid];
m9_866 -> m9_11  [key=2, style=dotted];
m9_866 -> m9_867  [key=0, style=solid];
m9_867 -> m9_11  [key=2, style=dotted];
m9_867 -> m9_868  [key=0, style=solid];
m9_863 -> m9_864  [key=0, style=solid];
m9_868 -> m9_862  [key=0, style=bold, color=blue];
m9_39 -> m9_40  [key=0, style=solid];
m9_39 -> m9_41  [key=1, style=dashed, color=darkseagreen4, label=dateValue];
m9_39 -> m9_43  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m9_39 -> m9_45  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m9_39 -> m9_46  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.Formatters.FormatterAssemblyStyle"];
m9_39 -> m9_54  [key=3, color=darkorchid, style=bold, label="method methodReturn string GetTypeName"];
m9_39 -> m9_50  [key=1, style=dashed, color=darkseagreen4, label=dateValue];
m9_39 -> m9_29  [key=2, style=dotted];
m9_39 -> m9_60  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type type"];
m9_39 -> m9_2345  [key=3, color=darkorchid, style=bold, label="Parameter variable bool explicitOnly"];
m9_40 -> m9_41  [key=0, style=solid];
m9_40 -> m9_42  [key=1, style=dashed, color=darkseagreen4, label=testDictionary];
m9_40 -> m9_52  [key=2, style=dotted];
m9_40 -> m9_45  [key=1, style=dashed, color=darkseagreen4, label=testDictionary];
m9_41 -> m9_42  [key=0, style=solid];
m9_41 -> m9_45  [key=0, style=solid];
m9_43 -> m9_44  [key=0, style=solid];
m9_43 -> m9_53  [key=2, style=dotted];
m9_43 -> m9_45  [key=1, style=dashed, color=darkseagreen4, label=ms];
m9_43 -> m9_46  [key=1, style=dashed, color=darkseagreen4, label=ms];
m9_45 -> m9_46  [key=0, style=solid];
m9_45 -> m9_48  [key=1, style=dashed, color=darkseagreen4, label=fullyQualifiedTypeName];
m9_45 -> m9_50  [key=1, style=dashed, color=darkseagreen4, label=fullyQualifiedTypeName];
m9_45 -> m9_55  [key=2, style=dotted];
m9_46 -> m9_47  [key=0, style=solid];
m9_46 -> m9_49  [key=0, style=solid];
m9_46 -> m9_51  [key=0, style=solid];
m9_46 -> m9_56  [key=2, style=dotted];
m9_42 -> m9_43  [key=0, style=solid];
m9_42 -> m9_9  [key=2, style=dotted];
m9_42 -> m9_48  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m9_44 -> m9_46  [key=0, style=solid];
m9_44 -> m9_48  [key=1, style=dashed, color=darkseagreen4, label=fullyQualifiedTypeName];
m9_44 -> m9_50  [key=1, style=dashed, color=darkseagreen4, label=fullyQualifiedTypeName];
m9_44 -> m9_45  [key=0, style=solid];
m9_44 -> m9_54  [key=2, style=dotted];
m9_48 -> m9_52  [key=0, style=solid];
m9_48 -> m9_54  [key=2, style=dotted];
m9_48 -> m9_49  [key=0, style=solid];
m9_48 -> m9_10  [key=2, style=dotted];
m9_50 -> m9_52  [key=0, style=solid];
m9_50 -> m9_11  [key=2, style=dotted];
m9_50 -> m9_51  [key=0, style=solid];
m9_47 -> m9_48  [key=0, style=solid];
m9_47 -> m9_57  [key=2, style=dotted];
m9_49 -> m9_50  [key=0, style=solid];
m9_51 -> m9_52  [key=0, style=solid];
m9_51 -> m9_55  [key=2, style=dotted];
m9_51 -> m9_38  [key=0, style=bold, color=blue];
m9_52 -> m9_39  [key=0, style=bold, color=blue];
m9_57 -> m9_58  [key=0, style=solid];
m9_57 -> m9_11  [key=3, color=darkorchid, style=bold, label="Local variable bool writingAssemblyName"];
m9_28 -> m9_29  [key=0, style=solid];
m9_28 -> m9_31  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.PropertyInfo"];
m9_28 -> m9_7  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsPublic"];
m9_28 -> m9_11  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsPublic"];
m9_28 -> m9_506  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Reflection.PropertyInfo property"];
m9_28 -> m9_511  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Reflection.PropertyInfo property"];
m9_1211 -> m9_1212  [key=0, style=solid];
m9_1213 -> m9_238  [key=2, style=dotted];
m9_1213 -> m9_1213  [key=1, style=dashed, color=darkseagreen4, label=pair];
m9_1213 -> m9_1212  [key=0, style=solid];
m9_1212 -> m9_1213  [key=0, style=solid];
m9_1212 -> m9_1214  [key=0, style=solid];
m9_1214 -> m9_1211  [key=0, style=bold, color=blue];
m9_1688 -> m9_1689  [key=0, style=solid];
m9_1689 -> m9_1691  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_1689 -> m9_140  [key=2, style=dotted];
m9_1689 -> m9_1690  [key=0, style=solid];
m9_1690 -> m9_1688  [key=0, style=bold, color=blue];
m9_2943 -> m9_2944  [key=0, style=solid];
m9_2944 -> m9_2939  [key=2, style=dotted];
m9_2944 -> m9_2945  [key=0, style=solid];
m9_2945 -> m9_2943  [key=0, style=bold, color=blue];
m9_1588 -> m9_1589  [key=0, style=solid];
m9_1593 -> m9_93  [key=2, style=dotted];
m9_1593 -> m9_1594  [key=0, style=solid];
m9_1593 -> m9_1595  [key=1, style=dashed, color=darkseagreen4, label=newValue];
m9_1594 -> m9_11  [key=2, style=dotted];
m9_1594 -> m9_1595  [key=0, style=solid];
m9_1595 -> m9_11  [key=2, style=dotted];
m9_1595 -> m9_1596  [key=0, style=solid];
m9_1595 -> m9_1168  [key=2, style=dotted];
m9_1592 -> m9_1593  [key=0, style=solid];
m9_1592 -> m9_351  [key=2, style=dotted];
m9_1589 -> m9_1592  [key=1, style=dashed, color=darkseagreen4, label=c];
m9_1589 -> m9_1590  [key=0, style=solid];
m9_1589 -> m9_1585  [key=2, style=dotted];
m9_1589 -> m9_1591  [key=1, style=dashed, color=darkseagreen4, label=c];
m9_1591 -> m9_1592  [key=0, style=solid];
m9_1591 -> m9_158  [key=2, style=dotted];
m9_1590 -> m9_1591  [key=0, style=solid];
m9_1590 -> m9_158  [key=2, style=dotted];
m9_1596 -> m9_1588  [key=0, style=bold, color=blue];
m9_252 -> m9_253  [key=0, style=solid];
m9_252 -> m9_229  [key=2, style=dotted];
m9_252 -> m9_257  [key=2, style=dotted];
m9_252 -> m9_13  [key=2, style=dotted];
m9_1041 -> m9_60  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type type"];
m9_475 -> m9_476  [key=0, style=solid];
m9_475 -> m9_473  [key=0, style=solid];
m9_475 -> m9_480  [key=2, style=dotted];
m9_480 -> m9_93  [key=2, style=dotted];
m9_480 -> m9_481  [key=0, style=solid];
m9_480 -> m9_482  [key=1, style=dashed, color=darkseagreen4, label=m2];
m9_481 -> m9_11  [key=2, style=dotted];
m9_481 -> m9_482  [key=0, style=solid];
m9_482 -> m9_11  [key=2, style=dotted];
m9_482 -> m9_483  [key=0, style=solid];
m9_479 -> m9_11  [key=2, style=dotted];
m9_479 -> m9_480  [key=0, style=solid];
m9_478 -> m9_480  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_478 -> m9_479  [key=0, style=solid];
m9_478 -> m9_214  [key=2, style=dotted];
m9_478 -> m9_215  [key=2, style=dotted];
m9_476 -> m9_481  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m9_476 -> m9_482  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m9_476 -> m9_477  [key=0, style=solid];
m9_476 -> m9_453  [key=2, style=dotted];
m9_476 -> m9_470  [key=0, style=bold, color=blue];
m9_477 -> m9_478  [key=0, style=solid];
m9_477 -> m9_454  [key=2, style=dotted];
m9_477 -> m9_472  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Reflection.BindingFlags flag"];
m9_483 -> m9_475  [key=0, style=bold, color=blue];
m9_483 -> m9_481  [key=0, style=bold, color=blue];
m9_3178 -> m9_3179  [key=0, style=solid];
m9_3183 -> m9_11  [key=2, style=dotted];
m9_3183 -> m9_3184  [key=0, style=solid];
m9_3182 -> m9_3183  [key=0, style=solid];
m9_3182 -> m9_214  [key=2, style=dotted];
m9_3182 -> m9_215  [key=2, style=dotted];
m9_3181 -> m9_3182  [key=0, style=solid];
m9_3181 -> m9_209  [key=2, style=dotted];
m9_3180 -> m9_3181  [key=0, style=solid];
m9_3179 -> m9_2847  [key=2, style=dotted];
m9_3179 -> m9_3180  [key=0, style=solid];
m9_3184 -> m9_3178  [key=0, style=bold, color=blue];
m9_407 -> m9_409  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_407 -> m9_408  [key=0, style=solid];
m9_407 -> m9_351  [key=2, style=dotted];
m9_945 -> m9_946  [key=0, style=solid];
m9_946 -> m9_93  [key=2, style=dotted];
m9_946 -> m9_947  [key=0, style=solid];
m9_946 -> m9_948  [key=1, style=dashed, color=darkseagreen4, label=l];
m9_946 -> m9_949  [key=1, style=dashed, color=darkseagreen4, label=l];
m9_946 -> m9_950  [key=1, style=dashed, color=darkseagreen4, label=l];
m9_947 -> m9_11  [key=2, style=dotted];
m9_947 -> m9_948  [key=0, style=solid];
m9_948 -> m9_11  [key=2, style=dotted];
m9_948 -> m9_949  [key=0, style=solid];
m9_949 -> m9_11  [key=2, style=dotted];
m9_949 -> m9_950  [key=0, style=solid];
m9_950 -> m9_11  [key=2, style=dotted];
m9_950 -> m9_951  [key=0, style=solid];
m9_951 -> m9_945  [key=0, style=bold, color=blue];
m9_2441 -> m9_2442  [key=0, style=solid];
m9_2444 -> m9_93  [key=2, style=dotted];
m9_2444 -> m9_2445  [key=0, style=solid];
m9_2444 -> m9_2446  [key=1, style=dashed, color=darkseagreen4, label=d2];
m9_2445 -> m9_11  [key=2, style=dotted];
m9_2445 -> m9_2446  [key=0, style=solid];
m9_2446 -> m9_11  [key=2, style=dotted];
m9_2446 -> m9_2447  [key=0, style=solid];
m9_2443 -> m9_9  [key=2, style=dotted];
m9_2443 -> m9_2444  [key=0, style=solid];
m9_2442 -> m9_2445  [key=1, style=dashed, color=darkseagreen4, label=d1];
m9_2442 -> m9_2446  [key=1, style=dashed, color=darkseagreen4, label=d1];
m9_2442 -> m9_2443  [key=0, style=solid];
m9_2442 -> m9_209  [key=2, style=dotted];
m9_2447 -> m9_2441  [key=0, style=bold, color=blue];
m9_841 -> m9_842  [key=0, style=solid];
m9_844 -> m9_11  [key=2, style=dotted];
m9_844 -> m9_845  [key=0, style=solid];
m9_843 -> m9_9  [key=2, style=dotted];
m9_843 -> m9_844  [key=0, style=solid];
m9_842 -> m9_843  [key=0, style=solid];
m9_842 -> m9_846  [key=2, style=dotted];
m9_842 -> m9_847  [key=2, style=dotted];
m9_845 -> m9_841  [key=0, style=bold, color=blue];
m9_1906 -> m9_1907  [key=0, style=solid];
m9_1907 -> m9_93  [key=2, style=dotted];
m9_1907 -> m9_1908  [key=0, style=solid];
m9_1908 -> m9_11  [key=2, style=dotted];
m9_1908 -> m9_1909  [key=0, style=solid];
m9_1908 -> m9_1894  [key=2, style=dotted];
m9_1908 -> m9_29  [key=2, style=dotted];
m9_1908 -> m9_223  [key=2, style=dotted];
m9_1909 -> m9_1906  [key=0, style=bold, color=blue];
m9_630 -> m9_631  [key=0, style=solid];
m9_632 -> m9_93  [key=2, style=dotted];
m9_632 -> m9_633  [key=0, style=solid];
m9_632 -> m9_634  [key=1, style=dashed, color=darkseagreen4, label=aa];
m9_632 -> m9_635  [key=1, style=dashed, color=darkseagreen4, label=aa];
m9_632 -> m9_636  [key=1, style=dashed, color=darkseagreen4, label=aa];
m9_632 -> m9_637  [key=1, style=dashed, color=darkseagreen4, label=aa];
m9_632 -> m9_638  [key=1, style=dashed, color=darkseagreen4, label=aa];
m9_632 -> m9_639  [key=1, style=dashed, color=darkseagreen4, label=aa];
m9_640 -> m9_11  [key=2, style=dotted];
m9_640 -> m9_641  [key=0, style=solid];
m9_633 -> m9_11  [key=2, style=dotted];
m9_633 -> m9_634  [key=0, style=solid];
m9_634 -> m9_11  [key=2, style=dotted];
m9_634 -> m9_635  [key=0, style=solid];
m9_635 -> m9_11  [key=2, style=dotted];
m9_635 -> m9_636  [key=0, style=solid];
m9_636 -> m9_11  [key=2, style=dotted];
m9_636 -> m9_637  [key=0, style=solid];
m9_637 -> m9_11  [key=2, style=dotted];
m9_637 -> m9_638  [key=0, style=solid];
m9_638 -> m9_11  [key=2, style=dotted];
m9_638 -> m9_639  [key=0, style=solid];
m9_639 -> m9_9  [key=2, style=dotted];
m9_639 -> m9_640  [key=0, style=solid];
m9_631 -> m9_632  [key=0, style=solid];
m9_631 -> m9_640  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_641 -> m9_630  [key=0, style=bold, color=blue];
m9_925 -> m9_926  [key=0, style=solid];
m9_926 -> m9_930  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_926 -> m9_927  [key=0, style=solid];
m9_927 -> m9_929  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_927 -> m9_928  [key=0, style=solid];
m9_927 -> m9_140  [key=2, style=dotted];
m9_928 -> m9_925  [key=0, style=bold, color=blue];
m9_500 -> m9_504  [key=0, style=solid];
m9_500 -> m9_505  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.BindingFlags"];
m9_500 -> m9_508  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<System.Reflection.PropertyInfo>"];
m9_500 -> m9_510  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<System.Reflection.PropertyInfo>"];
m9_500 -> m9_511  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<System.Reflection.PropertyInfo>"];
m9_500 -> m9_513  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<System.Reflection.PropertyInfo>"];
m9_500 -> m9_515  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<System.Reflection.PropertyInfo>"];
m9_500 -> m9_517  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<System.Reflection.PropertyInfo>"];
m9_500 -> m9_518  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<System.Reflection.PropertyInfo>"];
m9_500 -> m9_520  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<System.Reflection.PropertyInfo>"];
m9_500 -> m9_485  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.IList<System.Reflection.PropertyInfo> initialProperties"];
m9_500 -> m9_334  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Reflection.BindingFlags bindingAttr"];
m9_2963 -> m9_2964  [key=0, style=solid];
m9_2964 -> m9_2968  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_2964 -> m9_2965  [key=0, style=solid];
m9_2965 -> m9_2967  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_2965 -> m9_2966  [key=0, style=solid];
m9_2965 -> m9_140  [key=2, style=dotted];
m9_2966 -> m9_2963  [key=0, style=bold, color=blue];
m9_1667 -> m9_1668  [key=0, style=solid];
m9_1671 -> m9_11  [key=2, style=dotted];
m9_1671 -> m9_1672  [key=0, style=solid];
m9_1668 -> m9_1671  [key=1, style=dashed, color=darkseagreen4, label=p];
m9_1668 -> m9_1669  [key=0, style=solid];
m9_1668 -> m9_1653  [key=2, style=dotted];
m9_1668 -> m9_1670  [key=1, style=dashed, color=darkseagreen4, label=p];
m9_1670 -> m9_1671  [key=0, style=solid];
m9_1670 -> m9_214  [key=2, style=dotted];
m9_1670 -> m9_209  [key=2, style=dotted];
m9_1670 -> m9_1673  [key=2, style=dotted];
m9_1670 -> m9_1655  [key=2, style=dotted];
m9_1669 -> m9_1670  [key=0, style=solid];
m9_1672 -> m9_1667  [key=0, style=bold, color=blue];
m9_125 -> m9_128  [key=0, style=solid];
m9_2096 -> m9_2097  [key=0, style=solid];
m9_2098 -> m9_93  [key=2, style=dotted];
m9_2098 -> m9_2099  [key=0, style=solid];
m9_2098 -> m9_2100  [key=1, style=dashed, color=darkseagreen4, label=p];
m9_2098 -> m9_2101  [key=1, style=dashed, color=darkseagreen4, label=p];
m9_2099 -> m9_11  [key=2, style=dotted];
m9_2099 -> m9_2100  [key=0, style=solid];
m9_2100 -> m9_11  [key=2, style=dotted];
m9_2100 -> m9_2101  [key=0, style=solid];
m9_2101 -> m9_11  [key=2, style=dotted];
m9_2101 -> m9_2102  [key=0, style=solid];
m9_2097 -> m9_2098  [key=0, style=solid];
m9_2102 -> m9_2096  [key=0, style=bold, color=blue];
m9_1702 -> m9_1703  [key=0, style=solid];
m9_1712 -> m9_93  [key=2, style=dotted];
m9_1712 -> m9_1713  [key=0, style=solid];
m9_1712 -> m9_1714  [key=1, style=dashed, color=darkseagreen4, label=result];
m9_1712 -> m9_1715  [key=1, style=dashed, color=darkseagreen4, label=result];
m9_1713 -> m9_11  [key=2, style=dotted];
m9_1713 -> m9_1714  [key=0, style=solid];
m9_1714 -> m9_11  [key=2, style=dotted];
m9_1714 -> m9_1715  [key=0, style=solid];
m9_1715 -> m9_11  [key=2, style=dotted];
m9_1715 -> m9_1716  [key=0, style=solid];
m9_1711 -> m9_9  [key=2, style=dotted];
m9_1711 -> m9_1712  [key=0, style=solid];
m9_1710 -> m9_1711  [key=0, style=solid];
m9_1710 -> m9_238  [key=2, style=dotted];
m9_1707 -> m9_1711  [key=1, style=dashed, color=darkseagreen4, label=child];
m9_1707 -> m9_1710  [key=1, style=dashed, color=darkseagreen4, label=child];
m9_1707 -> m9_1708  [key=0, style=solid];
m9_1707 -> m9_52  [key=2, style=dotted];
m9_1707 -> m9_1709  [key=1, style=dashed, color=darkseagreen4, label=child];
m9_1704 -> m9_238  [key=2, style=dotted];
m9_1704 -> m9_1705  [key=0, style=solid];
m9_1705 -> m9_238  [key=2, style=dotted];
m9_1705 -> m9_1706  [key=0, style=solid];
m9_1706 -> m9_238  [key=2, style=dotted];
m9_1706 -> m9_1707  [key=0, style=solid];
m9_1708 -> m9_238  [key=2, style=dotted];
m9_1708 -> m9_1709  [key=0, style=solid];
m9_1709 -> m9_238  [key=2, style=dotted];
m9_1709 -> m9_1710  [key=0, style=solid];
m9_1703 -> m9_1710  [key=1, style=dashed, color=darkseagreen4, label=reference];
m9_1703 -> m9_52  [key=2, style=dotted];
m9_1703 -> m9_1704  [key=0, style=solid];
m9_1703 -> m9_1705  [key=1, style=dashed, color=darkseagreen4, label=reference];
m9_1703 -> m9_1706  [key=1, style=dashed, color=darkseagreen4, label=reference];
m9_1716 -> m9_1702  [key=0, style=bold, color=blue];
m9_290 -> m9_291  [key=0, style=solid];
m9_290 -> m9_302  [key=0, style=solid];
m9_290 -> m9_309  [key=0, style=solid];
m9_290 -> m9_228  [key=2, style=dotted];
m9_292 -> m9_11  [key=2, style=dotted];
m9_292 -> m9_293  [key=0, style=solid];
m9_292 -> m9_295  [key=1, style=dashed, color=darkseagreen4, label=fieldInfo];
m9_292 -> m9_299  [key=1, style=dashed, color=darkseagreen4, label=fieldInfo];
m9_291 -> m9_9  [key=2, style=dotted];
m9_291 -> m9_292  [key=0, style=solid];
m9_293 -> m9_290  [key=0, style=bold, color=blue];
m9_293 -> m9_294  [key=0, style=solid];
m9_293 -> m9_295  [key=0, style=solid];
m9_2666 -> m9_2667  [key=0, style=solid];
m9_2674 -> m9_11  [key=2, style=dotted];
m9_2674 -> m9_2675  [key=0, style=solid];
m9_2677 -> m9_11  [key=2, style=dotted];
m9_2677 -> m9_2678  [key=0, style=solid];
m9_2672 -> m9_9  [key=2, style=dotted];
m9_2672 -> m9_2673  [key=0, style=solid];
m9_2673 -> m9_2674  [key=0, style=solid];
m9_2673 -> m9_214  [key=2, style=dotted];
m9_2673 -> m9_2679  [key=2, style=dotted];
m9_2673 -> m9_2680  [key=2, style=dotted];
m9_2673 -> m9_215  [key=2, style=dotted];
m9_2675 -> m9_2676  [key=0, style=solid];
m9_2676 -> m9_2677  [key=0, style=solid];
m9_2676 -> m9_214  [key=2, style=dotted];
m9_2676 -> m9_2679  [key=2, style=dotted];
m9_2676 -> m9_2680  [key=2, style=dotted];
m9_2676 -> m9_2681  [key=2, style=dotted];
m9_2676 -> m9_215  [key=2, style=dotted];
m9_2667 -> m9_2672  [key=1, style=dashed, color=darkseagreen4, label=product];
m9_2667 -> m9_2673  [key=1, style=dashed, color=darkseagreen4, label=product];
m9_2667 -> m9_2668  [key=0, style=solid];
m9_2667 -> m9_28  [key=2, style=dotted];
m9_2667 -> m9_2669  [key=1, style=dashed, color=darkseagreen4, label=product];
m9_2667 -> m9_2670  [key=1, style=dashed, color=darkseagreen4, label=product];
m9_2667 -> m9_2671  [key=1, style=dashed, color=darkseagreen4, label=product];
m9_2671 -> m9_2672  [key=0, style=solid];
m9_2669 -> m9_29  [key=2, style=dotted];
m9_2669 -> m9_2670  [key=0, style=solid];
m9_2668 -> m9_2669  [key=0, style=solid];
m9_2670 -> m9_2671  [key=0, style=solid];
m9_2678 -> m9_2666  [key=0, style=bold, color=blue];
m9_621 -> m9_622  [key=0, style=solid];
m9_627 -> m9_11  [key=2, style=dotted];
m9_627 -> m9_628  [key=0, style=solid];
m9_626 -> m9_9  [key=2, style=dotted];
m9_626 -> m9_627  [key=0, style=solid];
m9_623 -> m9_347  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m9_623 -> m9_624  [key=0, style=solid];
m9_622 -> m9_626  [key=1, style=dashed, color=darkseagreen4, label=aa];
m9_622 -> m9_623  [key=0, style=solid];
m9_622 -> m9_629  [key=2, style=dotted];
m9_622 -> m9_624  [key=1, style=dashed, color=darkseagreen4, label=aa];
m9_622 -> m9_625  [key=1, style=dashed, color=darkseagreen4, label=aa];
m9_625 -> m9_626  [key=0, style=solid];
m9_624 -> m9_625  [key=0, style=solid];
m9_628 -> m9_621  [key=0, style=bold, color=blue];
m9_1821 -> m9_1822  [key=0, style=solid];
m9_1827 -> m9_93  [key=2, style=dotted];
m9_1827 -> m9_1828  [key=0, style=solid];
m9_1826 -> m9_11  [key=2, style=dotted];
m9_1826 -> m9_1827  [key=0, style=solid];
m9_1828 -> m9_11  [key=2, style=dotted];
m9_1828 -> m9_1829  [key=0, style=solid];
m9_1825 -> m9_1827  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_1825 -> m9_1826  [key=0, style=solid];
m9_1825 -> m9_351  [key=2, style=dotted];
m9_1822 -> m9_1825  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m9_1822 -> m9_1823  [key=0, style=solid];
m9_1822 -> m9_52  [key=2, style=dotted];
m9_1822 -> m9_1824  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m9_1824 -> m9_1825  [key=0, style=solid];
m9_1824 -> m9_238  [key=2, style=dotted];
m9_1824 -> m9_1820  [key=2, style=dotted];
m9_1823 -> m9_238  [key=2, style=dotted];
m9_1823 -> m9_1824  [key=0, style=solid];
m9_1823 -> m9_1820  [key=2, style=dotted];
m9_1829 -> m9_1821  [key=0, style=bold, color=blue];
m9_1196 -> m9_1197  [key=0, style=solid];
m9_1198 -> m9_93  [key=2, style=dotted];
m9_1198 -> m9_1199  [key=0, style=solid];
m9_1198 -> m9_1200  [key=1, style=dashed, color=darkseagreen4, label=dic];
m9_1198 -> m9_1201  [key=1, style=dashed, color=darkseagreen4, label=dic];
m9_1198 -> m9_1202  [key=1, style=dashed, color=darkseagreen4, label=dic];
m9_1199 -> m9_11  [key=2, style=dotted];
m9_1199 -> m9_1200  [key=0, style=solid];
m9_1200 -> m9_11  [key=2, style=dotted];
m9_1200 -> m9_1201  [key=0, style=solid];
m9_1201 -> m9_11  [key=2, style=dotted];
m9_1201 -> m9_1202  [key=0, style=solid];
m9_1202 -> m9_11  [key=2, style=dotted];
m9_1202 -> m9_1203  [key=0, style=solid];
m9_1197 -> m9_1198  [key=0, style=solid];
m9_1203 -> m9_1196  [key=0, style=bold, color=blue];
m9_501 -> m9_502  [key=0, style=solid];
m9_2401 -> m9_2402  [key=0, style=solid];
m9_2405 -> m9_93  [key=2, style=dotted];
m9_2405 -> m9_2406  [key=0, style=solid];
m9_2406 -> m9_11  [key=2, style=dotted];
m9_2406 -> m9_2407  [key=0, style=solid];
m9_2404 -> m9_9  [key=2, style=dotted];
m9_2404 -> m9_2405  [key=0, style=solid];
m9_2403 -> m9_2406  [key=1, style=dashed, color=darkseagreen4, label=uri];
m9_2403 -> m9_2404  [key=0, style=solid];
m9_2403 -> m9_839  [key=2, style=dotted];
m9_2402 -> m9_2403  [key=0, style=solid];
m9_2407 -> m9_2401  [key=0, style=bold, color=blue];
m9_502 -> m9_503  [key=0, style=solid];
m9_503 -> m9_501  [key=0, style=bold, color=blue];
m9_503 -> m9_506  [key=1, style=dashed, color=darkseagreen4, label=c1];
m9_503 -> m9_504  [key=0, style=solid];
m9_503 -> m9_512  [key=2, style=dotted];
m9_503 -> m9_505  [key=1, style=dashed, color=darkseagreen4, label=c1];
m9_2248 -> m9_2249  [key=0, style=solid];
m9_2249 -> m9_2250  [key=0, style=solid];
m9_2250 -> m9_2248  [key=0, style=bold, color=blue];
m9_2665 -> m9_3429  [key=0, style=solid];
m9_3429 -> m9_3430  [key=0, style=solid];
m9_3429 -> m9_3427  [key=2, style=dotted];
m9_3430 -> m9_2665  [key=0, style=bold, color=blue];
m9_1292 -> m9_1293  [key=0, style=solid];
m9_1293 -> m9_1294  [key=0, style=solid];
m9_1293 -> m9_1295  [key=2, style=dotted];
m9_1294 -> m9_1292  [key=0, style=bold, color=blue];
m9_3035 -> m9_3036  [key=0, style=solid];
m9_3041 -> m9_11  [key=2, style=dotted];
m9_3041 -> m9_3042  [key=0, style=solid];
m9_3040 -> m9_9  [key=2, style=dotted];
m9_3040 -> m9_3041  [key=0, style=solid];
m9_3036 -> m9_3040  [key=1, style=dashed, color=darkseagreen4, label=aa];
m9_3036 -> m9_3037  [key=0, style=solid];
m9_3036 -> m9_3043  [key=2, style=dotted];
m9_3036 -> m9_3038  [key=1, style=dashed, color=darkseagreen4, label=aa];
m9_3036 -> m9_3039  [key=1, style=dashed, color=darkseagreen4, label=aa];
m9_3039 -> m9_3040  [key=0, style=solid];
m9_3037 -> m9_3038  [key=0, style=solid];
m9_3038 -> m9_3039  [key=0, style=solid];
m9_3042 -> m9_3035  [key=0, style=bold, color=blue];
m9_2455 -> m9_2456  [key=0, style=solid];
m9_2458 -> m9_93  [key=2, style=dotted];
m9_2458 -> m9_2459  [key=0, style=solid];
m9_2458 -> m9_2460  [key=1, style=dashed, color=darkseagreen4, label=d2];
m9_2459 -> m9_11  [key=2, style=dotted];
m9_2459 -> m9_2460  [key=0, style=solid];
m9_2460 -> m9_11  [key=2, style=dotted];
m9_2460 -> m9_2461  [key=0, style=solid];
m9_2457 -> m9_9  [key=2, style=dotted];
m9_2457 -> m9_2458  [key=0, style=solid];
m9_2456 -> m9_2459  [key=1, style=dashed, color=darkseagreen4, label=d1];
m9_2456 -> m9_2460  [key=1, style=dashed, color=darkseagreen4, label=d1];
m9_2456 -> m9_2457  [key=0, style=solid];
m9_2456 -> m9_209  [key=2, style=dotted];
m9_2461 -> m9_2455  [key=0, style=bold, color=blue];
m9_1169 -> m9_1170  [key=0, style=solid];
m9_1170 -> m9_238  [key=2, style=dotted];
m9_1170 -> m9_1171  [key=0, style=solid];
m9_1171 -> m9_1169  [key=0, style=bold, color=blue];
m9_2049 -> m9_2050  [key=0, style=solid];
m9_2050 -> m9_93  [key=2, style=dotted];
m9_2050 -> m9_2051  [key=0, style=solid];
m9_2051 -> m9_11  [key=2, style=dotted];
m9_2051 -> m9_2052  [key=0, style=solid];
m9_2052 -> m9_2049  [key=0, style=bold, color=blue];
m9_238 -> m9_239  [key=0, style=solid];
m9_238 -> m9_13  [key=2, style=dotted];
m9_238 -> m9_14  [key=2, style=dotted];
m9_3023 -> m9_3024  [key=0, style=solid];
m9_3024 -> m9_3025  [key=0, style=solid];
m9_3025 -> m9_3023  [key=0, style=bold, color=blue];
m9_13 -> m9_14  [key=0, style=solid];
m9_429 -> m9_11  [key=2, style=dotted];
m9_429 -> m9_430  [key=0, style=solid];
m9_1946 -> m9_1947  [key=0, style=solid];
m9_1948 -> m9_93  [key=2, style=dotted];
m9_1948 -> m9_1949  [key=0, style=solid];
m9_1949 -> m9_11  [key=2, style=dotted];
m9_1949 -> m9_1950  [key=0, style=solid];
m9_1947 -> m9_1948  [key=0, style=solid];
m9_1950 -> m9_1946  [key=0, style=bold, color=blue];
m9_1886 -> m9_1887  [key=0, style=solid];
m9_1889 -> m9_93  [key=2, style=dotted];
m9_1889 -> m9_1890  [key=0, style=solid];
m9_1889 -> m9_1891  [key=1, style=dashed, color=darkseagreen4, label=deserializeObject];
m9_1888 -> m9_11  [key=2, style=dotted];
m9_1888 -> m9_1889  [key=0, style=solid];
m9_1890 -> m9_11  [key=2, style=dotted];
m9_1890 -> m9_1891  [key=0, style=solid];
m9_1890 -> m9_223  [key=2, style=dotted];
m9_1891 -> m9_11  [key=2, style=dotted];
m9_1891 -> m9_1892  [key=0, style=solid];
m9_1891 -> m9_29  [key=2, style=dotted];
m9_1887 -> m9_9  [key=2, style=dotted];
m9_1887 -> m9_1889  [key=1, style=dashed, color=darkseagreen4, label=serializeObject];
m9_1887 -> m9_1888  [key=0, style=solid];
m9_1887 -> m9_1893  [key=2, style=dotted];
m9_1887 -> m9_1894  [key=2, style=dotted];
m9_1887 -> m9_29  [key=2, style=dotted];
m9_1887 -> m9_223  [key=2, style=dotted];
m9_1892 -> m9_1886  [key=0, style=bold, color=blue];
m9_117 -> m9_118  [key=0, style=solid];
m9_117 -> m9_114  [key=2, style=dotted];
m9_117 -> m9_119  [key=1, style=dashed, color=darkseagreen4, label=o];
m9_2139 -> m9_2140  [key=0, style=solid];
m9_2141 -> m9_93  [key=2, style=dotted];
m9_2141 -> m9_2142  [key=0, style=solid];
m9_2140 -> m9_9  [key=2, style=dotted];
m9_2140 -> m9_2141  [key=0, style=solid];
m9_2140 -> m9_2143  [key=2, style=dotted];
m9_2142 -> m9_2139  [key=0, style=bold, color=blue];
m9_3125 -> m9_3126  [key=0, style=solid];
m9_3131 -> m9_11  [key=2, style=dotted];
m9_3131 -> m9_3132  [key=0, style=solid];
m9_3130 -> m9_9  [key=2, style=dotted];
m9_3130 -> m9_3131  [key=0, style=solid];
m9_3126 -> m9_3130  [key=1, style=dashed, color=darkseagreen4, label=aa];
m9_3126 -> m9_3127  [key=0, style=solid];
m9_3126 -> m9_3043  [key=2, style=dotted];
m9_3126 -> m9_3128  [key=1, style=dashed, color=darkseagreen4, label=aa];
m9_3126 -> m9_3129  [key=1, style=dashed, color=darkseagreen4, label=aa];
m9_3129 -> m9_3130  [key=0, style=solid];
m9_3127 -> m9_3128  [key=0, style=solid];
m9_3128 -> m9_3129  [key=0, style=solid];
m9_3132 -> m9_3125  [key=0, style=bold, color=blue];
m9_3158 -> m9_3159  [key=0, style=solid];
m9_3160 -> m9_93  [key=2, style=dotted];
m9_3160 -> m9_3161  [key=0, style=solid];
m9_3160 -> m9_3162  [key=1, style=dashed, color=darkseagreen4, label=aa];
m9_3160 -> m9_3163  [key=1, style=dashed, color=darkseagreen4, label=aa];
m9_3160 -> m9_3164  [key=1, style=dashed, color=darkseagreen4, label=aa];
m9_3165 -> m9_11  [key=2, style=dotted];
m9_3165 -> m9_3166  [key=0, style=solid];
m9_3161 -> m9_11  [key=2, style=dotted];
m9_3161 -> m9_3162  [key=0, style=solid];
m9_3162 -> m9_11  [key=2, style=dotted];
m9_3162 -> m9_3163  [key=0, style=solid];
m9_3163 -> m9_11  [key=2, style=dotted];
m9_3163 -> m9_3164  [key=0, style=solid];
m9_3164 -> m9_9  [key=2, style=dotted];
m9_3164 -> m9_3165  [key=0, style=solid];
m9_3159 -> m9_3160  [key=0, style=solid];
m9_3159 -> m9_3165  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_3166 -> m9_3158  [key=0, style=bold, color=blue];
m9_3375 -> m9_3376  [key=0, style=solid];
m9_3376 -> m9_2942  [key=2, style=dotted];
m9_3376 -> m9_3377  [key=0, style=solid];
m9_3377 -> m9_3375  [key=0, style=bold, color=blue];
m9_3243 -> m9_3244  [key=0, style=solid];
m9_3245 -> m9_93  [key=2, style=dotted];
m9_3245 -> m9_3246  [key=0, style=solid];
m9_3246 -> m9_11  [key=2, style=dotted];
m9_3246 -> m9_3247  [key=0, style=solid];
m9_3246 -> m9_1517  [key=2, style=dotted];
m9_3244 -> m9_3245  [key=0, style=solid];
m9_3244 -> m9_3250  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_3244 -> m9_3247  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_3247 -> m9_3249  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_3247 -> m9_3248  [key=0, style=solid];
m9_3247 -> m9_140  [key=2, style=dotted];
m9_3248 -> m9_3243  [key=0, style=bold, color=blue];
m9_2480 -> m9_2481  [key=0, style=solid];
m9_2483 -> m9_11  [key=2, style=dotted];
m9_2483 -> m9_2484  [key=0, style=solid];
m9_2482 -> m9_2483  [key=0, style=solid];
m9_2482 -> m9_351  [key=2, style=dotted];
m9_2481 -> m9_2482  [key=0, style=solid];
m9_2481 -> m9_2485  [key=2, style=dotted];
m9_2481 -> m9_2486  [key=2, style=dotted];
m9_2484 -> m9_2480  [key=0, style=bold, color=blue];
m9_418 -> m9_419  [key=0, style=solid];
m9_418 -> m9_425  [key=2, style=dotted];
m9_3084 -> m9_3085  [key=0, style=solid];
m9_3085 -> m9_3089  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_3085 -> m9_3086  [key=0, style=solid];
m9_3086 -> m9_3088  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_3086 -> m9_3087  [key=0, style=solid];
m9_3086 -> m9_140  [key=2, style=dotted];
m9_3087 -> m9_3084  [key=0, style=bold, color=blue];
m9_2113 -> m9_2114  [key=0, style=solid];
m9_2116 -> m9_11  [key=2, style=dotted];
m9_2116 -> m9_2117  [key=0, style=solid];
m9_2115 -> m9_2116  [key=0, style=solid];
m9_2115 -> m9_351  [key=2, style=dotted];
m9_2114 -> m9_2115  [key=0, style=solid];
m9_2114 -> m9_2118  [key=2, style=dotted];
m9_2117 -> m9_2113  [key=0, style=bold, color=blue];
m9_427 -> m9_431  [key=0, style=solid];
m9_427 -> m9_433  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_427 -> m9_434  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_427 -> m9_419  [key=3, color=darkorchid, style=bold, label="Parameter variable string fullyQualifiedTypeName"];
m9_427 -> m9_25  [key=3, color=darkorchid, style=bold, label="method methodReturn int? GetAssemblyDelimiterIndex"];
m9_427 -> m9_428  [key=0, style=solid];
m9_431 -> m9_432  [key=0, style=solid];
m9_431 -> m9_437  [key=1, style=dashed, color=darkseagreen4, label=scope];
m9_431 -> m9_60  [key=3, color=darkorchid, style=bold, label="Local variable int scope"];
m9_431 -> m9_11  [key=2, style=dotted];
m9_434 -> m9_435  [key=0, style=solid];
m9_432 -> m9_433  [key=0, style=solid];
m9_432 -> m9_434  [key=1, style=dashed, color=darkseagreen4, label=i];
m9_432 -> m9_442  [key=1, style=dashed, color=darkseagreen4, label=i];
m9_432 -> m9_443  [key=1, style=dashed, color=darkseagreen4, label=i];
m9_432 -> m9_426  [key=0, style=bold, color=blue];
m9_437 -> m9_443  [key=0, style=solid];
m9_437 -> m9_437  [key=1, style=dashed, color=darkseagreen4, label=scope];
m9_437 -> m9_439  [key=1, style=dashed, color=darkseagreen4, label=scope];
m9_437 -> m9_11  [key=2, style=dotted];
m9_437 -> m9_438  [key=0, style=solid];
m9_442 -> m9_445  [key=0, style=solid];
m9_443 -> m9_433  [key=0, style=solid];
m9_443 -> m9_443  [key=1, style=dashed, color=darkseagreen4, label=i];
m9_444 -> m9_445  [key=0, style=solid];
m9_435 -> m9_436  [key=0, style=solid];
m9_435 -> m9_438  [key=0, style=solid];
m9_435 -> m9_440  [key=0, style=solid];
m9_435 -> m9_433  [key=2, style=dotted];
m9_436 -> m9_437  [key=0, style=solid];
m9_436 -> m9_441  [key=2, style=dotted];
m9_436 -> m9_442  [key=2, style=dotted];
m9_436 -> m9_438  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_438 -> m9_439  [key=0, style=solid];
m9_438 -> m9_441  [key=2, style=dotted];
m9_438 -> m9_443  [key=2, style=dotted];
m9_440 -> m9_441  [key=0, style=solid];
m9_440 -> m9_434  [key=0, style=bold, color=blue];
m9_439 -> m9_443  [key=0, style=solid];
m9_439 -> m9_439  [key=1, style=dashed, color=darkseagreen4, label=scope];
m9_439 -> m9_441  [key=1, style=dashed, color=darkseagreen4, label=scope];
m9_439 -> m9_11  [key=2, style=dotted];
m9_439 -> m9_440  [key=0, style=solid];
m9_441 -> m9_442  [key=0, style=solid];
m9_441 -> m9_443  [key=0, style=solid];
m9_445 -> m9_427  [key=0, style=bold, color=blue];
m9_445 -> m9_450  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m9_445 -> m9_451  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m9_445 -> m9_446  [key=0, style=solid];
m9_445 -> m9_453  [key=2, style=dotted];
m9_523 -> m9_11  [key=2, style=dotted];
m9_523 -> m9_524  [key=0, style=solid];
m9_2360 -> m9_2361  [key=0, style=solid];
m9_2362 -> m9_93  [key=2, style=dotted];
m9_2362 -> m9_2363  [key=0, style=solid];
m9_2362 -> m9_2364  [key=1, style=dashed, color=darkseagreen4, label=values];
m9_2362 -> m9_2365  [key=1, style=dashed, color=darkseagreen4, label=values];
m9_2362 -> m9_2366  [key=1, style=dashed, color=darkseagreen4, label=values];
m9_2362 -> m9_2367  [key=1, style=dashed, color=darkseagreen4, label=values];
m9_2362 -> m9_2368  [key=1, style=dashed, color=darkseagreen4, label=values];
m9_2362 -> m9_2369  [key=1, style=dashed, color=darkseagreen4, label=values];
m9_2362 -> m9_2370  [key=1, style=dashed, color=darkseagreen4, label=values];
m9_2362 -> m9_2371  [key=1, style=dashed, color=darkseagreen4, label=values];
m9_2363 -> m9_11  [key=2, style=dotted];
m9_2363 -> m9_2364  [key=0, style=solid];
m9_2364 -> m9_11  [key=2, style=dotted];
m9_2364 -> m9_2365  [key=0, style=solid];
m9_2365 -> m9_11  [key=2, style=dotted];
m9_2365 -> m9_2366  [key=0, style=solid];
m9_2366 -> m9_11  [key=2, style=dotted];
m9_2366 -> m9_2367  [key=0, style=solid];
m9_2367 -> m9_11  [key=2, style=dotted];
m9_2367 -> m9_2368  [key=0, style=solid];
m9_2368 -> m9_11  [key=2, style=dotted];
m9_2368 -> m9_2369  [key=0, style=solid];
m9_2369 -> m9_11  [key=2, style=dotted];
m9_2369 -> m9_2370  [key=0, style=solid];
m9_2370 -> m9_11  [key=2, style=dotted];
m9_2370 -> m9_2371  [key=0, style=solid];
m9_2371 -> m9_11  [key=2, style=dotted];
m9_2371 -> m9_2372  [key=0, style=solid];
m9_2361 -> m9_2362  [key=0, style=solid];
m9_2372 -> m9_2360  [key=0, style=bold, color=blue];
m9_3091 -> m9_3092  [key=0, style=solid];
m9_3093 -> m9_93  [key=2, style=dotted];
m9_3093 -> m9_3094  [key=0, style=solid];
m9_3093 -> m9_3095  [key=1, style=dashed, color=darkseagreen4, label=aa];
m9_3093 -> m9_3096  [key=1, style=dashed, color=darkseagreen4, label=aa];
m9_3093 -> m9_3097  [key=1, style=dashed, color=darkseagreen4, label=aa];
m9_3093 -> m9_3098  [key=1, style=dashed, color=darkseagreen4, label=aa];
m9_3093 -> m9_3099  [key=1, style=dashed, color=darkseagreen4, label=aa];
m9_3093 -> m9_3100  [key=1, style=dashed, color=darkseagreen4, label=aa];
m9_3093 -> m9_3101  [key=1, style=dashed, color=darkseagreen4, label=aa];
m9_3102 -> m9_11  [key=2, style=dotted];
m9_3102 -> m9_3103  [key=0, style=solid];
m9_3094 -> m9_11  [key=2, style=dotted];
m9_3094 -> m9_3095  [key=0, style=solid];
m9_3095 -> m9_11  [key=2, style=dotted];
m9_3095 -> m9_3096  [key=0, style=solid];
m9_3096 -> m9_11  [key=2, style=dotted];
m9_3096 -> m9_3097  [key=0, style=solid];
m9_3096 -> m9_3064  [key=2, style=dotted];
m9_3097 -> m9_11  [key=2, style=dotted];
m9_3097 -> m9_3098  [key=0, style=solid];
m9_3097 -> m9_3064  [key=2, style=dotted];
m9_3098 -> m9_11  [key=2, style=dotted];
m9_3098 -> m9_3099  [key=0, style=solid];
m9_3098 -> m9_3064  [key=2, style=dotted];
m9_3099 -> m9_11  [key=2, style=dotted];
m9_3099 -> m9_3100  [key=0, style=solid];
m9_3100 -> m9_11  [key=2, style=dotted];
m9_3100 -> m9_3101  [key=0, style=solid];
m9_3101 -> m9_9  [key=2, style=dotted];
m9_3101 -> m9_3102  [key=0, style=solid];
m9_3092 -> m9_3093  [key=0, style=solid];
m9_3092 -> m9_3102  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_3103 -> m9_3091  [key=0, style=bold, color=blue];
m9_1245 -> m9_1248  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m9_1245 -> m9_1246  [key=0, style=solid];
m9_1249 -> m9_238  [key=2, style=dotted];
m9_1249 -> m9_1249  [key=1, style=dashed, color=darkseagreen4, label=entry];
m9_1249 -> m9_1248  [key=0, style=solid];
m9_1248 -> m9_1249  [key=0, style=solid];
m9_1248 -> m9_1250  [key=0, style=solid];
m9_1246 -> m9_1248  [key=0, style=solid];
m9_1246 -> m9_1247  [key=0, style=solid];
m9_1247 -> m9_1250  [key=0, style=solid];
m9_1247 -> m9_1251  [key=2, style=dotted];
m9_1250 -> m9_1245  [key=0, style=bold, color=blue];
m9_592 -> m9_593  [key=0, style=solid];
m9_594 -> m9_93  [key=2, style=dotted];
m9_594 -> m9_595  [key=0, style=solid];
m9_594 -> m9_596  [key=1, style=dashed, color=darkseagreen4, label=c];
m9_594 -> m9_597  [key=1, style=dashed, color=darkseagreen4, label=c];
m9_595 -> m9_11  [key=2, style=dotted];
m9_595 -> m9_596  [key=0, style=solid];
m9_596 -> m9_11  [key=2, style=dotted];
m9_596 -> m9_597  [key=0, style=solid];
m9_597 -> m9_11  [key=2, style=dotted];
m9_597 -> m9_598  [key=0, style=solid];
m9_593 -> m9_594  [key=0, style=solid];
m9_598 -> m9_592  [key=0, style=bold, color=blue];
m9_2777 -> m9_2778  [key=0, style=solid];
m9_2781 -> m9_93  [key=2, style=dotted];
m9_2781 -> m9_2782  [key=0, style=solid];
m9_2781 -> m9_2783  [key=1, style=dashed, color=darkseagreen4, label=dic2];
m9_2781 -> m9_2784  [key=1, style=dashed, color=darkseagreen4, label=dic2];
m9_2780 -> m9_11  [key=2, style=dotted];
m9_2780 -> m9_2781  [key=0, style=solid];
m9_2782 -> m9_11  [key=2, style=dotted];
m9_2782 -> m9_2783  [key=0, style=solid];
m9_2783 -> m9_11  [key=2, style=dotted];
m9_2783 -> m9_2784  [key=0, style=solid];
m9_2783 -> m9_222  [key=2, style=dotted];
m9_2784 -> m9_11  [key=2, style=dotted];
m9_2784 -> m9_2785  [key=0, style=solid];
m9_2784 -> m9_222  [key=2, style=dotted];
m9_2779 -> m9_2781  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_2779 -> m9_2780  [key=0, style=solid];
m9_2779 -> m9_351  [key=2, style=dotted];
m9_2778 -> m9_2779  [key=0, style=solid];
m9_2778 -> m9_222  [key=2, style=dotted];
m9_2778 -> m9_52  [key=2, style=dotted];
m9_2785 -> m9_2777  [key=0, style=bold, color=blue];
m9_2931 -> m9_2932  [key=0, style=solid];
m9_2933 -> m9_11  [key=2, style=dotted];
m9_2933 -> m9_2934  [key=0, style=solid];
m9_2932 -> m9_2933  [key=0, style=solid];
m9_2932 -> m9_1610  [key=2, style=dotted];
m9_2932 -> m9_214  [key=2, style=dotted];
m9_2932 -> m9_2935  [key=2, style=dotted];
m9_2932 -> m9_728  [key=2, style=dotted];
m9_2934 -> m9_2931  [key=0, style=bold, color=blue];
m9_230 -> m9_231  [key=0, style=solid];
m9_230 -> m9_232  [key=1, style=dashed, color=darkseagreen4, label=values];
m9_230 -> m9_237  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsIndexedProperty"];
m9_230 -> m9_11  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsIndexedProperty"];
m9_230 -> m9_236  [key=1, style=dashed, color=darkseagreen4, label=values];
m9_230 -> m9_233  [key=1, style=dashed, color=darkseagreen4, label=values];
m9_230 -> m9_52  [key=2, style=dotted];
m9_231 -> m9_232  [key=0, style=solid];
m9_231 -> m9_13  [key=2, style=dotted];
m9_231 -> m9_14  [key=2, style=dotted];
m9_231 -> m9_238  [key=2, style=dotted];
m9_232 -> m9_233  [key=0, style=solid];
m9_232 -> m9_234  [key=1, style=dashed, color=darkseagreen4, label=propertyInfo];
m9_232 -> m9_238  [key=2, style=dotted];
m9_233 -> m9_234  [key=0, style=solid];
m9_233 -> m9_235  [key=0, style=solid];
m9_233 -> m9_9  [key=2, style=dotted];
m9_234 -> m9_236  [key=0, style=solid];
m9_234 -> m9_237  [key=2, style=dotted];
m9_234 -> m9_11  [key=2, style=dotted];
m9_234 -> m9_235  [key=0, style=solid];
m9_235 -> m9_236  [key=0, style=solid];
m9_235 -> m9_93  [key=2, style=dotted];
m9_236 -> m9_230  [key=0, style=bold, color=blue];
m9_236 -> m9_11  [key=2, style=dotted];
m9_236 -> m9_237  [key=0, style=solid];
m9_1585 -> m9_1586  [key=0, style=solid];
m9_1586 -> m9_209  [key=2, style=dotted];
m9_1586 -> m9_1587  [key=0, style=solid];
m9_1587 -> m9_1585  [key=0, style=bold, color=blue];
m9_980 -> m9_981  [key=0, style=solid];
m9_981 -> m9_985  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_981 -> m9_982  [key=0, style=solid];
m9_982 -> m9_984  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_982 -> m9_983  [key=0, style=solid];
m9_982 -> m9_140  [key=2, style=dotted];
m9_983 -> m9_980  [key=0, style=bold, color=blue];
m9_3473 -> m9_3474  [key=0, style=solid];
m9_3474 -> m9_3461  [key=2, style=dotted];
m9_3474 -> m9_3475  [key=0, style=solid];
m9_3475 -> m9_3473  [key=0, style=bold, color=blue];
m9_311 -> m9_11  [key=2, style=dotted];
m9_311 -> m9_312  [key=0, style=solid];
m9_3044 -> m9_3045  [key=0, style=solid];
m9_3050 -> m9_11  [key=2, style=dotted];
m9_3050 -> m9_3051  [key=0, style=solid];
m9_3049 -> m9_3050  [key=0, style=solid];
m9_3049 -> m9_351  [key=2, style=dotted];
m9_3045 -> m9_3049  [key=1, style=dashed, color=darkseagreen4, label=aa];
m9_3045 -> m9_3046  [key=0, style=solid];
m9_3045 -> m9_3052  [key=2, style=dotted];
m9_3045 -> m9_3047  [key=1, style=dashed, color=darkseagreen4, label=aa];
m9_3045 -> m9_3048  [key=1, style=dashed, color=darkseagreen4, label=aa];
m9_3048 -> m9_3049  [key=0, style=solid];
m9_3046 -> m9_3047  [key=0, style=solid];
m9_3047 -> m9_3048  [key=0, style=solid];
m9_3051 -> m9_3044  [key=0, style=bold, color=blue];
m9_522 -> m9_9  [key=2, style=dotted];
m9_522 -> m9_523  [key=0, style=solid];
m9_522 -> m9_525  [key=2, style=dotted];
m9_1309 -> m9_1310  [key=0, style=solid];
m9_1309 -> m9_1311  [key=1, style=dashed, color=darkseagreen4, label=int];
m9_1309 -> m9_1312  [key=1, style=dashed, color=darkseagreen4, label="System.DateTimeOffset"];
m9_1309 -> m9_1313  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.Person"];
m9_1314 -> m9_453  [key=2, style=dotted];
m9_1314 -> m9_1315  [key=0, style=solid];
m9_1310 -> m9_1311  [key=0, style=solid];
m9_1311 -> m9_1312  [key=0, style=solid];
m9_1312 -> m9_1313  [key=0, style=solid];
m9_1313 -> m9_1314  [key=0, style=solid];
m9_1315 -> m9_1309  [key=0, style=bold, color=blue];
m9_455 -> m9_456  [key=0, style=solid];
m9_1252 -> m9_1253  [key=0, style=solid];
m9_1253 -> m9_264  [key=2, style=dotted];
m9_1253 -> m9_1254  [key=0, style=solid];
m9_1254 -> m9_1252  [key=0, style=bold, color=blue];
m9_1938 -> m9_1939  [key=0, style=solid];
m9_1939 -> m9_93  [key=2, style=dotted];
m9_1939 -> m9_1940  [key=0, style=solid];
m9_1940 -> m9_11  [key=2, style=dotted];
m9_1940 -> m9_1941  [key=0, style=solid];
m9_1941 -> m9_1938  [key=0, style=bold, color=blue];
m9_1728 -> m9_1729  [key=0, style=solid];
m9_1731 -> m9_11  [key=2, style=dotted];
m9_1731 -> m9_1732  [key=0, style=solid];
m9_1731 -> m9_1168  [key=2, style=dotted];
m9_1732 -> m9_11  [key=2, style=dotted];
m9_1732 -> m9_1733  [key=0, style=solid];
m9_1730 -> m9_1731  [key=0, style=solid];
m9_1730 -> m9_1732  [key=1, style=dashed, color=darkseagreen4, label=dic];
m9_1730 -> m9_214  [key=2, style=dotted];
m9_1730 -> m9_474  [key=2, style=dotted];
m9_1729 -> m9_1730  [key=0, style=solid];
m9_1733 -> m9_1728  [key=0, style=bold, color=blue];
m9_1734 -> m9_1735  [key=0, style=solid];
m9_1743 -> m9_93  [key=2, style=dotted];
m9_1743 -> m9_1744  [key=0, style=solid];
m9_1743 -> m9_1745  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m9_1739 -> m9_11  [key=2, style=dotted];
m9_1739 -> m9_1740  [key=0, style=solid];
m9_1742 -> m9_11  [key=2, style=dotted];
m9_1742 -> m9_1743  [key=0, style=solid];
m9_1744 -> m9_11  [key=2, style=dotted];
m9_1744 -> m9_1745  [key=0, style=solid];
m9_1745 -> m9_11  [key=2, style=dotted];
m9_1745 -> m9_1746  [key=0, style=solid];
m9_1741 -> m9_1743  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_1741 -> m9_1742  [key=0, style=solid];
m9_1741 -> m9_351  [key=2, style=dotted];
m9_1738 -> m9_1739  [key=0, style=solid];
m9_1738 -> m9_351  [key=2, style=dotted];
m9_1740 -> m9_1741  [key=0, style=solid];
m9_1735 -> m9_1741  [key=1, style=dashed, color=darkseagreen4, label=c];
m9_1735 -> m9_1738  [key=1, style=dashed, color=darkseagreen4, label=c];
m9_1735 -> m9_1740  [key=1, style=dashed, color=darkseagreen4, label=c];
m9_1735 -> m9_1736  [key=0, style=solid];
m9_1735 -> m9_1747  [key=2, style=dotted];
m9_1735 -> m9_1737  [key=1, style=dashed, color=darkseagreen4, label=c];
m9_1737 -> m9_1738  [key=0, style=solid];
m9_1736 -> m9_1737  [key=0, style=solid];
m9_1746 -> m9_1734  [key=0, style=bold, color=blue];
m9_2957 -> m9_2958  [key=0, style=solid];
m9_2958 -> m9_2959  [key=0, style=solid];
m9_2958 -> m9_2942  [key=2, style=dotted];
m9_2959 -> m9_2957  [key=0, style=bold, color=blue];
m9_289 -> m9_290  [key=0, style=solid];
m9_289 -> m9_292  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m9_289 -> m9_295  [key=1, style=dashed, color=darkseagreen4, label=bool];
m9_289 -> m9_297  [key=1, style=dashed, color=darkseagreen4, label=bool];
m9_289 -> m9_303  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m9_289 -> m9_306  [key=1, style=dashed, color=darkseagreen4, label=bool];
m9_289 -> m9_308  [key=1, style=dashed, color=darkseagreen4, label=bool];
m9_289 -> m9_11  [key=3, color=darkorchid, style=bold, label="method methodReturn bool CanSetMemberValue"];
m9_289 -> m9_7  [key=3, color=darkorchid, style=bold, label="method methodReturn bool CanSetMemberValue"];
m9_295 -> m9_296  [key=0, style=solid];
m9_295 -> m9_297  [key=0, style=solid];
m9_297 -> m9_298  [key=0, style=solid];
m9_297 -> m9_299  [key=0, style=solid];
m9_297 -> m9_11  [key=2, style=dotted];
m9_303 -> m9_304  [key=0, style=solid];
m9_303 -> m9_308  [key=1, style=dashed, color=darkseagreen4, label=propertyInfo];
m9_303 -> m9_294  [key=0, style=bold, color=blue];
m9_306 -> m9_307  [key=0, style=solid];
m9_306 -> m9_308  [key=0, style=solid];
m9_306 -> m9_93  [key=2, style=dotted];
m9_306 -> m9_309  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m9_306 -> m9_310  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m9_306 -> m9_311  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m9_306 -> m9_312  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m9_308 -> m9_310  [key=0, style=solid];
m9_308 -> m9_311  [key=2, style=dotted];
m9_308 -> m9_11  [key=2, style=dotted];
m9_308 -> m9_308  [key=3, color=darkorchid, style=bold, label="Local variable string rawJson"];
m9_308 -> m9_309  [key=0, style=solid];
m9_302 -> m9_303  [key=0, style=solid];
m9_302 -> m9_11  [key=2, style=dotted];
m9_309 -> m9_310  [key=0, style=solid];
m9_309 -> m9_11  [key=2, style=dotted];
m9_299 -> m9_300  [key=0, style=solid];
m9_299 -> m9_301  [key=0, style=solid];
m9_299 -> m9_11  [key=2, style=dotted];
m9_294 -> m9_310  [key=0, style=solid];
m9_294 -> m9_295  [key=0, style=solid];
m9_296 -> m9_310  [key=0, style=solid];
m9_296 -> m9_93  [key=2, style=dotted];
m9_296 -> m9_297  [key=0, style=solid];
m9_296 -> m9_298  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m9_296 -> m9_299  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m9_296 -> m9_300  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m9_296 -> m9_301  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m9_296 -> m9_302  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m9_298 -> m9_310  [key=0, style=solid];
m9_298 -> m9_11  [key=2, style=dotted];
m9_298 -> m9_299  [key=0, style=solid];
m9_300 -> m9_310  [key=0, style=solid];
m9_300 -> m9_11  [key=2, style=dotted];
m9_300 -> m9_301  [key=0, style=solid];
m9_301 -> m9_310  [key=0, style=solid];
m9_301 -> m9_11  [key=2, style=dotted];
m9_301 -> m9_302  [key=0, style=solid];
m9_304 -> m9_305  [key=0, style=solid];
m9_304 -> m9_306  [key=0, style=solid];
m9_305 -> m9_310  [key=0, style=solid];
m9_305 -> m9_306  [key=0, style=solid];
m9_307 -> m9_310  [key=0, style=solid];
m9_307 -> m9_11  [key=2, style=dotted];
m9_307 -> m9_308  [key=0, style=solid];
m9_310 -> m9_289  [key=0, style=bold, color=blue];
m9_310 -> m9_11  [key=2, style=dotted];
m9_310 -> m9_311  [key=0, style=solid];
m9_1504 -> m9_1505  [key=0, style=solid];
m9_1511 -> m9_93  [key=2, style=dotted];
m9_1511 -> m9_1512  [key=0, style=solid];
m9_1511 -> m9_1513  [key=1, style=dashed, color=darkseagreen4, label=newTestObject];
m9_1511 -> m9_1514  [key=1, style=dashed, color=darkseagreen4, label=newTestObject];
m9_1512 -> m9_11  [key=2, style=dotted];
m9_1512 -> m9_1513  [key=0, style=solid];
m9_1512 -> m9_1518  [key=2, style=dotted];
m9_1513 -> m9_11  [key=2, style=dotted];
m9_1513 -> m9_1514  [key=0, style=solid];
m9_1513 -> m9_1518  [key=2, style=dotted];
m9_1510 -> m9_11  [key=2, style=dotted];
m9_1510 -> m9_1511  [key=0, style=solid];
m9_1508 -> m9_1511  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_1508 -> m9_1510  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_1508 -> m9_1509  [key=0, style=solid];
m9_1508 -> m9_351  [key=2, style=dotted];
m9_1514 -> m9_1515  [key=0, style=solid];
m9_1514 -> m9_1519  [key=2, style=dotted];
m9_1505 -> m9_1512  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m9_1505 -> m9_1513  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m9_1505 -> m9_1508  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m9_1505 -> m9_1506  [key=0, style=solid];
m9_1505 -> m9_1516  [key=2, style=dotted];
m9_1505 -> m9_1507  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m9_1509 -> m9_1510  [key=0, style=solid];
m9_1507 -> m9_1508  [key=0, style=solid];
m9_1507 -> m9_1517  [key=2, style=dotted];
m9_1506 -> m9_1517  [key=2, style=dotted];
m9_1506 -> m9_1507  [key=0, style=solid];
m9_1515 -> m9_1504  [key=0, style=bold, color=blue];
m9_3167 -> m9_3168  [key=0, style=solid];
m9_3169 -> m9_93  [key=2, style=dotted];
m9_3169 -> m9_3170  [key=0, style=solid];
m9_3169 -> m9_3171  [key=1, style=dashed, color=darkseagreen4, label=aa];
m9_3169 -> m9_3172  [key=1, style=dashed, color=darkseagreen4, label=aa];
m9_3169 -> m9_3173  [key=1, style=dashed, color=darkseagreen4, label=aa];
m9_3169 -> m9_3174  [key=1, style=dashed, color=darkseagreen4, label=aa];
m9_3169 -> m9_3175  [key=1, style=dashed, color=darkseagreen4, label=aa];
m9_3176 -> m9_11  [key=2, style=dotted];
m9_3176 -> m9_3177  [key=0, style=solid];
m9_3170 -> m9_11  [key=2, style=dotted];
m9_3170 -> m9_3171  [key=0, style=solid];
m9_3171 -> m9_11  [key=2, style=dotted];
m9_3171 -> m9_3172  [key=0, style=solid];
m9_3172 -> m9_11  [key=2, style=dotted];
m9_3172 -> m9_3173  [key=0, style=solid];
m9_3172 -> m9_3064  [key=2, style=dotted];
m9_3173 -> m9_11  [key=2, style=dotted];
m9_3173 -> m9_3174  [key=0, style=solid];
m9_3173 -> m9_3064  [key=2, style=dotted];
m9_3174 -> m9_11  [key=2, style=dotted];
m9_3174 -> m9_3175  [key=0, style=solid];
m9_3174 -> m9_3064  [key=2, style=dotted];
m9_3175 -> m9_9  [key=2, style=dotted];
m9_3175 -> m9_3176  [key=0, style=solid];
m9_3168 -> m9_3169  [key=0, style=solid];
m9_3168 -> m9_3176  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_3177 -> m9_3167  [key=0, style=bold, color=blue];
m9_80 -> m9_81  [key=0, style=solid];
m9_80 -> m9_54  [key=0, style=bold, color=blue];
m9_83 -> m9_11  [key=2, style=dotted];
m9_83 -> m9_84  [key=0, style=solid];
m9_83 -> m9_79  [key=2, style=dotted];
m9_84 -> m9_11  [key=2, style=dotted];
m9_84 -> m9_85  [key=0, style=solid];
m9_84 -> m9_79  [key=2, style=dotted];
m9_84 -> m9_86  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m9_84 -> m9_88  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m9_84 -> m9_7  [key=3, color=darkorchid, style=bold, label="method methodReturn bool HasDefaultConstructor"];
m9_82 -> m9_83  [key=0, style=solid];
m9_82 -> m9_84  [key=1, style=dashed, color=darkseagreen4, label=p];
m9_82 -> m9_10  [key=2, style=dotted];
m9_81 -> m9_82  [key=0, style=solid];
m9_85 -> m9_80  [key=0, style=bold, color=blue];
m9_85 -> m9_86  [key=0, style=solid];
m9_85 -> m9_13  [key=2, style=dotted];
m9_85 -> m9_14  [key=2, style=dotted];
m9_1258 -> m9_1259  [key=0, style=solid];
m9_1259 -> m9_1260  [key=0, style=solid];
m9_1259 -> m9_1261  [key=2, style=dotted];
m9_1260 -> m9_1258  [key=0, style=bold, color=blue];
m9_71 -> m9_72  [key=0, style=solid];
m9_3401 -> m9_3402  [key=0, style=solid];
m9_3404 -> m9_11  [key=2, style=dotted];
m9_3404 -> m9_3405  [key=0, style=solid];
m9_3403 -> m9_3404  [key=0, style=solid];
m9_3403 -> m9_214  [key=2, style=dotted];
m9_3403 -> m9_474  [key=2, style=dotted];
m9_3402 -> m9_3406  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_3402 -> m9_3403  [key=0, style=solid];
m9_3402 -> m9_140  [key=2, style=dotted];
m9_3405 -> m9_3401  [key=0, style=bold, color=blue];
m9_507 -> m9_11  [key=2, style=dotted];
m9_507 -> m9_508  [key=0, style=solid];
m9_507 -> m9_514  [key=0, style=solid];
m9_507 -> m9_28  [key=2, style=dotted];
m9_509 -> m9_11  [key=2, style=dotted];
m9_509 -> m9_510  [key=0, style=solid];
m9_509 -> m9_511  [key=0, style=solid];
m9_510 -> m9_11  [key=2, style=dotted];
m9_510 -> m9_511  [key=0, style=solid];
m9_510 -> m9_505  [key=0, style=solid];
m9_510 -> m9_341  [key=2, style=dotted];
m9_506 -> m9_507  [key=0, style=solid];
m9_506 -> m9_441  [key=2, style=dotted];
m9_506 -> m9_442  [key=2, style=dotted];
m9_506 -> m9_508  [key=1, style=dashed, color=darkseagreen4, label=subTypeProperty];
m9_506 -> m9_525  [key=1, style=dashed, color=darkseagreen4, label=subTypeProperty];
m9_506 -> m9_510  [key=1, style=dashed, color=darkseagreen4, label=subTypeProperty];
m9_506 -> m9_513  [key=1, style=dashed, color=darkseagreen4, label=subTypeProperty];
m9_506 -> m9_514  [key=1, style=dashed, color=darkseagreen4, label=subTypeProperty];
m9_506 -> m9_515  [key=1, style=dashed, color=darkseagreen4, label=subTypeProperty];
m9_506 -> m9_528  [key=1, style=dashed, color=darkseagreen4, label=subTypeProperty];
m9_506 -> m9_517  [key=1, style=dashed, color=darkseagreen4, label=subTypeProperty];
m9_506 -> m9_518  [key=1, style=dashed, color=darkseagreen4, label=subTypeProperty];
m9_506 -> m9_531  [key=1, style=dashed, color=darkseagreen4, label=subTypeProperty];
m9_506 -> m9_520  [key=1, style=dashed, color=darkseagreen4, label=subTypeProperty];
m9_506 -> m9_505  [key=3, color=darkorchid, style=bold, label="Local variable System.Reflection.PropertyInfo subTypeProperty"];
m9_508 -> m9_509  [key=0, style=solid];
m9_508 -> m9_510  [key=1, style=dashed, color=darkseagreen4, label=c2];
m9_508 -> m9_441  [key=2, style=dotted];
m9_508 -> m9_443  [key=2, style=dotted];
m9_508 -> m9_522  [key=2, style=dotted];
m9_508 -> m9_524  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_508 -> m9_511  [key=1, style=dashed, color=darkseagreen4, label=index];
m9_508 -> m9_513  [key=1, style=dashed, color=darkseagreen4, label=index];
m9_505 -> m9_506  [key=0, style=solid];
m9_505 -> m9_433  [key=2, style=dotted];
m9_505 -> m9_504  [key=0, style=solid];
m9_505 -> m9_499  [key=2, style=dotted];
m9_504 -> m9_505  [key=0, style=solid];
m9_504 -> m9_433  [key=2, style=dotted];
m9_504 -> m9_521  [key=0, style=solid];
m9_504 -> m9_181  [key=2, style=dotted];
m9_504 -> m9_504  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m9_511 -> m9_502  [key=0, style=bold, color=blue];
m9_511 -> m9_512  [key=0, style=solid];
m9_2697 -> m9_2698  [key=0, style=solid];
m9_2708 -> m9_831  [key=2, style=dotted];
m9_2708 -> m9_2709  [key=0, style=solid];
m9_2708 -> m9_12  [key=2, style=dotted];
m9_2707 -> m9_1168  [key=2, style=dotted];
m9_2707 -> m9_2708  [key=0, style=solid];
m9_2707 -> m9_2716  [key=2, style=dotted];
m9_2704 -> m9_175  [key=2, style=dotted];
m9_2704 -> m9_2705  [key=0, style=solid];
m9_2704 -> m9_2714  [key=2, style=dotted];
m9_2705 -> m9_2708  [key=1, style=dashed, color=darkseagreen4, label=a];
m9_2705 -> m9_2706  [key=0, style=solid];
m9_2705 -> m9_2715  [key=2, style=dotted];
m9_2706 -> m9_2707  [key=0, style=solid];
m9_2698 -> m9_53  [key=2, style=dotted];
m9_2698 -> m9_2699  [key=0, style=solid];
m9_2698 -> m9_2703  [key=1, style=dashed, color=darkseagreen4, label=ms];
m9_2703 -> m9_2704  [key=0, style=solid];
m9_2703 -> m9_56  [key=2, style=dotted];
m9_2699 -> m9_2700  [key=0, style=solid];
m9_2699 -> m9_2710  [key=2, style=dotted];
m9_2699 -> m9_2701  [key=1, style=dashed, color=darkseagreen4, label=writer];
m9_2699 -> m9_2702  [key=1, style=dashed, color=darkseagreen4, label=writer];
m9_2702 -> m9_2703  [key=0, style=solid];
m9_2702 -> m9_2713  [key=2, style=dotted];
m9_2700 -> m9_2701  [key=0, style=solid];
m9_2700 -> m9_2711  [key=2, style=dotted];
m9_2701 -> m9_2702  [key=0, style=solid];
m9_2701 -> m9_2712  [key=2, style=dotted];
m9_2709 -> m9_2697  [key=0, style=bold, color=blue];
m9_1042 -> m9_1043  [key=0, style=solid];
m9_1043 -> m9_140  [key=2, style=dotted];
m9_1043 -> m9_1044  [key=0, style=solid];
m9_1043 -> m9_1045  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_1044 -> m9_1042  [key=0, style=bold, color=blue];
m9_1446 -> m9_1493  [key=0, style=solid];
m9_1446 -> m9_1494  [key=1, style=dashed, color=darkseagreen4, label=int];
m9_1446 -> m9_1495  [key=1, style=dashed, color=darkseagreen4, label=int];
m9_1446 -> m9_1496  [key=1, style=dashed, color=darkseagreen4, label=int];
m9_1446 -> m9_1497  [key=1, style=dashed, color=darkseagreen4, label=int];
m9_1446 -> m9_1498  [key=1, style=dashed, color=darkseagreen4, label=int];
m9_1446 -> m9_1499  [key=1, style=dashed, color=darkseagreen4, label=int];
m9_1446 -> m9_1500  [key=1, style=dashed, color=darkseagreen4, label=int];
m9_1446 -> m9_1501  [key=1, style=dashed, color=darkseagreen4, label=int];
m9_1446 -> m9_1502  [key=1, style=dashed, color=darkseagreen4, label=int];
m9_1493 -> m9_1494  [key=0, style=solid];
m9_1494 -> m9_1495  [key=0, style=solid];
m9_1495 -> m9_1496  [key=0, style=solid];
m9_1496 -> m9_1497  [key=0, style=solid];
m9_1497 -> m9_1498  [key=0, style=solid];
m9_1498 -> m9_1499  [key=0, style=solid];
m9_1499 -> m9_1500  [key=0, style=solid];
m9_1500 -> m9_1501  [key=0, style=solid];
m9_1501 -> m9_1502  [key=0, style=solid];
m9_1502 -> m9_1503  [key=0, style=solid];
m9_1503 -> m9_1446  [key=0, style=bold, color=blue];
m9_105 -> m9_11  [key=2, style=dotted];
m9_105 -> m9_106  [key=0, style=solid];
m9_526 -> m9_527  [key=0, style=solid];
m9_526 -> m9_524  [key=0, style=bold, color=blue];
m9_529 -> m9_11  [key=2, style=dotted];
m9_529 -> m9_530  [key=0, style=solid];
m9_529 -> m9_527  [key=0, style=bold, color=blue];
m9_531 -> m9_11  [key=2, style=dotted];
m9_531 -> m9_532  [key=0, style=solid];
m9_531 -> m9_523  [key=2, style=dotted];
m9_531 -> m9_533  [key=2, style=dotted];
m9_531 -> m9_198  [key=2, style=dotted];
m9_528 -> m9_9  [key=2, style=dotted];
m9_528 -> m9_529  [key=0, style=solid];
m9_530 -> m9_9  [key=2, style=dotted];
m9_530 -> m9_531  [key=0, style=solid];
m9_527 -> m9_528  [key=0, style=solid];
m9_532 -> m9_526  [key=0, style=bold, color=blue];
m9_532 -> m9_530  [key=0, style=bold, color=blue];
m9_848 -> m9_849  [key=0, style=solid];
m9_851 -> m9_11  [key=2, style=dotted];
m9_851 -> m9_852  [key=0, style=solid];
m9_850 -> m9_851  [key=0, style=solid];
m9_850 -> m9_351  [key=2, style=dotted];
m9_849 -> m9_850  [key=0, style=solid];
m9_849 -> m9_853  [key=2, style=dotted];
m9_849 -> m9_209  [key=2, style=dotted];
m9_852 -> m9_848  [key=0, style=bold, color=blue];
m9_1794 -> m9_1795  [key=0, style=solid];
m9_1806 -> m9_93  [key=2, style=dotted];
m9_1806 -> m9_1807  [key=0, style=solid];
m9_1809 -> m9_93  [key=2, style=dotted];
m9_1809 -> m9_1810  [key=0, style=solid];
m9_1805 -> m9_1806  [key=0, style=solid];
m9_1807 -> m9_1808  [key=0, style=solid];
m9_1807 -> m9_1813  [key=2, style=dotted];
m9_1808 -> m9_1809  [key=0, style=solid];
m9_1810 -> m9_1811  [key=0, style=solid];
m9_1810 -> m9_1813  [key=2, style=dotted];
m9_1804 -> m9_1805  [key=0, style=solid];
m9_1804 -> m9_12  [key=2, style=dotted];
m9_1803 -> m9_351  [key=2, style=dotted];
m9_1803 -> m9_1804  [key=0, style=solid];
m9_1795 -> m9_1803  [key=1, style=dashed, color=darkseagreen4, label=joe];
m9_1795 -> m9_1796  [key=0, style=solid];
m9_1795 -> m9_1812  [key=2, style=dotted];
m9_1795 -> m9_1797  [key=1, style=dashed, color=darkseagreen4, label=joe];
m9_1795 -> m9_1798  [key=1, style=dashed, color=darkseagreen4, label=joe];
m9_1799 -> m9_1803  [key=1, style=dashed, color=darkseagreen4, label=martha];
m9_1799 -> m9_1800  [key=0, style=solid];
m9_1799 -> m9_1812  [key=2, style=dotted];
m9_1799 -> m9_1801  [key=1, style=dashed, color=darkseagreen4, label=martha];
m9_1799 -> m9_1802  [key=1, style=dashed, color=darkseagreen4, label=martha];
m9_1802 -> m9_1803  [key=0, style=solid];
m9_1796 -> m9_1797  [key=0, style=solid];
m9_1797 -> m9_1798  [key=0, style=solid];
m9_1798 -> m9_1799  [key=0, style=solid];
m9_1800 -> m9_1801  [key=0, style=solid];
m9_1801 -> m9_1802  [key=0, style=solid];
m9_1811 -> m9_1794  [key=0, style=bold, color=blue];
m9_533 -> m9_534  [key=0, style=solid];
m9_401 -> m9_402  [key=0, style=solid];
m9_409 -> m9_93  [key=2, style=dotted];
m9_409 -> m9_410  [key=0, style=solid];
m9_409 -> m9_411  [key=1, style=dashed, color=darkseagreen4, label=newName];
m9_409 -> m9_412  [key=1, style=dashed, color=darkseagreen4, label=newName];
m9_409 -> m9_413  [key=1, style=dashed, color=darkseagreen4, label=newName];
m9_408 -> m9_11  [key=2, style=dotted];
m9_408 -> m9_409  [key=0, style=solid];
m9_410 -> m9_11  [key=2, style=dotted];
m9_410 -> m9_411  [key=0, style=solid];
m9_411 -> m9_11  [key=2, style=dotted];
m9_411 -> m9_412  [key=0, style=solid];
m9_412 -> m9_11  [key=2, style=dotted];
m9_412 -> m9_413  [key=0, style=solid];
m9_413 -> m9_11  [key=2, style=dotted];
m9_413 -> m9_414  [key=0, style=solid];
m9_402 -> m9_407  [key=1, style=dashed, color=darkseagreen4, label=name];
m9_402 -> m9_403  [key=0, style=solid];
m9_402 -> m9_415  [key=2, style=dotted];
m9_402 -> m9_405  [key=1, style=dashed, color=darkseagreen4, label=name];
m9_402 -> m9_406  [key=1, style=dashed, color=darkseagreen4, label=name];
m9_402 -> m9_416  [key=2, style=dotted];
m9_406 -> m9_407  [key=0, style=solid];
m9_406 -> m9_158  [key=2, style=dotted];
m9_406 -> m9_381  [key=0, style=bold, color=blue];
m9_403 -> m9_404  [key=0, style=solid];
m9_403 -> m9_416  [key=2, style=dotted];
m9_403 -> m9_405  [key=1, style=dashed, color=darkseagreen4, label=p1];
m9_405 -> m9_406  [key=0, style=solid];
m9_405 -> m9_158  [key=2, style=dotted];
m9_404 -> m9_406  [key=1, style=dashed, color=darkseagreen4, label=p2];
m9_404 -> m9_405  [key=0, style=solid];
m9_404 -> m9_416  [key=2, style=dotted];
m9_404 -> m9_417  [key=2, style=dotted];
m9_404 -> m9_418  [key=2, style=dotted];
m9_414 -> m9_401  [key=0, style=bold, color=blue];
m9_1385 -> m9_1386  [key=0, style=solid];
m9_1397 -> m9_93  [key=2, style=dotted];
m9_1397 -> m9_1398  [key=0, style=solid];
m9_1397 -> m9_1399  [key=1, style=dashed, color=darkseagreen4, label=o2];
m9_1397 -> m9_1400  [key=1, style=dashed, color=darkseagreen4, label=o2];
m9_1397 -> m9_1401  [key=1, style=dashed, color=darkseagreen4, label=o2];
m9_1397 -> m9_1402  [key=1, style=dashed, color=darkseagreen4, label=o2];
m9_1397 -> m9_1403  [key=1, style=dashed, color=darkseagreen4, label=o2];
m9_1400 -> m9_11  [key=2, style=dotted];
m9_1400 -> m9_1401  [key=0, style=solid];
m9_1396 -> m9_11  [key=2, style=dotted];
m9_1396 -> m9_1397  [key=0, style=solid];
m9_1398 -> m9_11  [key=2, style=dotted];
m9_1398 -> m9_1399  [key=0, style=solid];
m9_1399 -> m9_11  [key=2, style=dotted];
m9_1399 -> m9_1400  [key=0, style=solid];
m9_1401 -> m9_11  [key=2, style=dotted];
m9_1401 -> m9_1402  [key=0, style=solid];
m9_1402 -> m9_11  [key=2, style=dotted];
m9_1402 -> m9_1403  [key=0, style=solid];
m9_1403 -> m9_11  [key=2, style=dotted];
m9_1403 -> m9_1404  [key=0, style=solid];
m9_1395 -> m9_1397  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_1395 -> m9_1396  [key=0, style=solid];
m9_1395 -> m9_351  [key=2, style=dotted];
m9_1391 -> m9_1400  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffset];
m9_1391 -> m9_1392  [key=0, style=solid];
m9_1391 -> m9_222  [key=2, style=dotted];
m9_1391 -> m9_223  [key=2, style=dotted];
m9_1391 -> m9_1394  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffset];
m9_1393 -> m9_1396  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffsetText];
m9_1393 -> m9_1394  [key=0, style=solid];
m9_1394 -> m9_1395  [key=0, style=solid];
m9_1394 -> m9_1309  [key=2, style=dotted];
m9_1387 -> m9_210  [key=2, style=dotted];
m9_1387 -> m9_1388  [key=0, style=solid];
m9_1390 -> m9_1391  [key=0, style=solid];
m9_1392 -> m9_1393  [key=0, style=solid];
m9_1386 -> m9_1394  [key=1, style=dashed, color=darkseagreen4, label=person];
m9_1386 -> m9_1387  [key=0, style=solid];
m9_1386 -> m9_1390  [key=1, style=dashed, color=darkseagreen4, label=person];
m9_1386 -> m9_661  [key=2, style=dotted];
m9_1386 -> m9_1388  [key=1, style=dashed, color=darkseagreen4, label=person];
m9_1386 -> m9_1389  [key=1, style=dashed, color=darkseagreen4, label=person];
m9_1388 -> m9_1389  [key=0, style=solid];
m9_1389 -> m9_1390  [key=0, style=solid];
m9_1404 -> m9_1385  [key=0, style=bold, color=blue];
m9_2462 -> m9_2463  [key=0, style=solid];
m9_2469 -> m9_93  [key=2, style=dotted];
m9_2469 -> m9_2470  [key=0, style=solid];
m9_2468 -> m9_11  [key=2, style=dotted];
m9_2468 -> m9_2469  [key=0, style=solid];
m9_2470 -> m9_11  [key=2, style=dotted];
m9_2470 -> m9_2471  [key=0, style=solid];
m9_2467 -> m9_9  [key=2, style=dotted];
m9_2467 -> m9_2469  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_2467 -> m9_2468  [key=0, style=solid];
m9_2463 -> m9_2467  [key=1, style=dashed, color=darkseagreen4, label=b];
m9_2463 -> m9_2464  [key=0, style=solid];
m9_2463 -> m9_2472  [key=2, style=dotted];
m9_2463 -> m9_2465  [key=1, style=dashed, color=darkseagreen4, label=b];
m9_2466 -> m9_2467  [key=0, style=solid];
m9_2464 -> m9_2465  [key=0, style=solid];
m9_2465 -> m9_2466  [key=0, style=solid];
m9_2471 -> m9_2462  [key=0, style=bold, color=blue];
m9_583 -> m9_584  [key=0, style=solid];
m9_587 -> m9_93  [key=2, style=dotted];
m9_587 -> m9_588  [key=0, style=solid];
m9_587 -> m9_589  [key=1, style=dashed, color=darkseagreen4, label=c2];
m9_586 -> m9_11  [key=2, style=dotted];
m9_586 -> m9_587  [key=0, style=solid];
m9_586 -> m9_541  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_588 -> m9_11  [key=2, style=dotted];
m9_588 -> m9_589  [key=0, style=solid];
m9_589 -> m9_11  [key=2, style=dotted];
m9_589 -> m9_590  [key=0, style=solid];
m9_589 -> m9_210  [key=2, style=dotted];
m9_585 -> m9_587  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_585 -> m9_586  [key=0, style=solid];
m9_585 -> m9_351  [key=2, style=dotted];
m9_585 -> m9_541  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m9_584 -> m9_585  [key=0, style=solid];
m9_584 -> m9_210  [key=2, style=dotted];
m9_584 -> m9_591  [key=2, style=dotted];
m9_584 -> m9_525  [key=1, style=dashed, color=darkseagreen4, label=subTypeProperty];
m9_584 -> m9_528  [key=1, style=dashed, color=darkseagreen4, label=subTypeProperty];
m9_584 -> m9_531  [key=1, style=dashed, color=darkseagreen4, label=subTypeProperty];
m9_590 -> m9_583  [key=0, style=bold, color=blue];
m9_2178 -> m9_2179  [key=0, style=solid];
m9_2180 -> m9_209  [key=2, style=dotted];
m9_2180 -> m9_2181  [key=0, style=solid];
m9_2179 -> m9_2180  [key=0, style=solid];
m9_2181 -> m9_2178  [key=0, style=bold, color=blue];
m9_241 -> m9_9  [key=2, style=dotted];
m9_241 -> m9_242  [key=0, style=solid];
m9_241 -> m9_243  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_525 -> m9_526  [key=0, style=solid];
m9_2033 -> m9_2034  [key=0, style=solid];
m9_2034 -> m9_2035  [key=0, style=solid];
m9_2035 -> m9_2033  [key=0, style=bold, color=blue];
m9_1215 -> m9_1216  [key=0, style=solid];
m9_1218 -> m9_11  [key=2, style=dotted];
m9_1218 -> m9_1219  [key=0, style=solid];
m9_1217 -> m9_1218  [key=0, style=solid];
m9_1217 -> m9_351  [key=2, style=dotted];
m9_1216 -> m9_1217  [key=0, style=solid];
m9_1216 -> m9_1220  [key=2, style=dotted];
m9_1219 -> m9_1215  [key=0, style=bold, color=blue];
m9_737 -> m9_738  [key=0, style=solid];
m9_739 -> m9_140  [key=2, style=dotted];
m9_739 -> m9_740  [key=0, style=solid];
m9_739 -> m9_741  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_738 -> m9_739  [key=0, style=solid];
m9_740 -> m9_737  [key=0, style=bold, color=blue];
m9_2288 -> m9_2289  [key=0, style=solid];
m9_2289 -> m9_93  [key=2, style=dotted];
m9_2289 -> m9_2290  [key=0, style=solid];
m9_2289 -> m9_2291  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m9_2290 -> m9_11  [key=2, style=dotted];
m9_2290 -> m9_2291  [key=0, style=solid];
m9_2291 -> m9_11  [key=2, style=dotted];
m9_2291 -> m9_2292  [key=0, style=solid];
m9_2292 -> m9_2288  [key=0, style=bold, color=blue];
m9_599 -> m9_600  [key=0, style=solid];
m9_600 -> m9_602  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_600 -> m9_140  [key=2, style=dotted];
m9_600 -> m9_601  [key=0, style=solid];
m9_601 -> m9_599  [key=0, style=bold, color=blue];
m9_3 -> m9_4  [key=0, style=solid];
m9_3 -> m9_5  [key=1, style=dashed, color=darkseagreen4, label=deserializedStore];
m9_3 -> m9_8  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.PropertyInfo"];
m9_3 -> m9_7  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsVirtual"];
m9_3 -> m9_11  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsVirtual"];
m9_3 -> m9_348  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Reflection.PropertyInfo propertyInfo"];
m9_3 -> m9_10  [key=2, style=dotted];
m9_4 -> m9_5  [key=0, style=solid];
m9_4 -> m9_13  [key=2, style=dotted];
m9_4 -> m9_14  [key=2, style=dotted];
m9_4 -> m9_11  [key=2, style=dotted];
m9_5 -> m9_6  [key=0, style=solid];
m9_5 -> m9_15  [key=2, style=dotted];
m9_5 -> m9_11  [key=2, style=dotted];
m9_8 -> m9_9  [key=0, style=solid];
m9_8 -> m9_16  [key=2, style=dotted];
m9_6 -> m9_7  [key=0, style=solid];
m9_6 -> m9_8  [key=0, style=solid];
m9_6 -> m9_12  [key=2, style=dotted];
m9_7 -> m9_12  [key=0, style=solid];
m9_7 -> m9_0  [key=0, style=bold, color=blue];
m9_9 -> m9_10  [key=0, style=solid];
m9_9 -> m9_11  [key=0, style=solid];
m9_10 -> m9_12  [key=0, style=solid];
m9_11 -> m9_12  [key=0, style=solid];
m9_12 -> m9_3  [key=0, style=bold, color=blue];
m9_3211 -> m9_3212  [key=0, style=solid];
m9_3214 -> m9_11  [key=2, style=dotted];
m9_3214 -> m9_3215  [key=0, style=solid];
m9_3213 -> m9_3214  [key=0, style=solid];
m9_3213 -> m9_214  [key=2, style=dotted];
m9_3213 -> m9_3216  [key=2, style=dotted];
m9_3213 -> m9_728  [key=2, style=dotted];
m9_3212 -> m9_210  [key=2, style=dotted];
m9_3212 -> m9_223  [key=2, style=dotted];
m9_3212 -> m9_222  [key=2, style=dotted];
m9_3212 -> m9_3213  [key=0, style=solid];
m9_3212 -> m9_209  [key=2, style=dotted];
m9_3215 -> m9_3211  [key=0, style=bold, color=blue];
m9_15 -> m9_16  [key=0, style=solid];
m9_1255 -> m9_1256  [key=0, style=solid];
m9_1256 -> m9_238  [key=2, style=dotted];
m9_1256 -> m9_1257  [key=0, style=solid];
m9_1257 -> m9_1255  [key=0, style=bold, color=blue];
m9_169 -> m9_170  [key=0, style=solid];
m9_169 -> m9_54  [key=2, style=dotted];
m9_1089 -> m9_1090  [key=0, style=solid];
m9_1096 -> m9_93  [key=2, style=dotted];
m9_1096 -> m9_1097  [key=0, style=solid];
m9_1096 -> m9_1098  [key=1, style=dashed, color=darkseagreen4, label=newFoo];
m9_1096 -> m9_1099  [key=1, style=dashed, color=darkseagreen4, label=newFoo];
m9_1096 -> m9_1100  [key=1, style=dashed, color=darkseagreen4, label=newFoo];
m9_1095 -> m9_11  [key=2, style=dotted];
m9_1095 -> m9_1096  [key=0, style=solid];
m9_1097 -> m9_11  [key=2, style=dotted];
m9_1097 -> m9_1098  [key=0, style=solid];
m9_1098 -> m9_11  [key=2, style=dotted];
m9_1098 -> m9_1099  [key=0, style=solid];
m9_1099 -> m9_11  [key=2, style=dotted];
m9_1099 -> m9_1100  [key=0, style=solid];
m9_1100 -> m9_11  [key=2, style=dotted];
m9_1100 -> m9_1101  [key=0, style=solid];
m9_1094 -> m9_1096  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_1094 -> m9_1095  [key=0, style=solid];
m9_1094 -> m9_351  [key=2, style=dotted];
m9_1090 -> m9_1094  [key=1, style=dashed, color=darkseagreen4, label=f];
m9_1090 -> m9_1091  [key=0, style=solid];
m9_1090 -> m9_1102  [key=2, style=dotted];
m9_1090 -> m9_1092  [key=1, style=dashed, color=darkseagreen4, label=f];
m9_1090 -> m9_1093  [key=1, style=dashed, color=darkseagreen4, label=f];
m9_1093 -> m9_1094  [key=0, style=solid];
m9_1093 -> m9_1103  [key=2, style=dotted];
m9_1093 -> m9_158  [key=2, style=dotted];
m9_1091 -> m9_158  [key=2, style=dotted];
m9_1091 -> m9_1092  [key=0, style=solid];
m9_1091 -> m9_1103  [key=2, style=dotted];
m9_1092 -> m9_1093  [key=0, style=solid];
m9_1092 -> m9_158  [key=2, style=dotted];
m9_1092 -> m9_1103  [key=2, style=dotted];
m9_1101 -> m9_1089  [key=0, style=bold, color=blue];
m9_1351 -> m9_1352  [key=0, style=solid];
m9_1351 -> m9_1353  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m9_1351 -> m9_1354  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m9_1351 -> m9_1355  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m9_1351 -> m9_1356  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m9_1351 -> m9_1358  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m9_1351 -> m9_1359  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m9_1351 -> m9_1360  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m9_1351 -> m9_1361  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m9_1351 -> m9_1362  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m9_1351 -> m9_1363  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m9_1351 -> m9_1364  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m9_1351 -> m9_1365  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m9_1351 -> m9_1366  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m9_1351 -> m9_1367  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m9_1351 -> m9_1368  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m9_1351 -> m9_1369  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m9_1351 -> m9_1357  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m9_1352 -> m9_1353  [key=0, style=solid];
m9_1352 -> m9_1371  [key=2, style=dotted];
m9_1353 -> m9_1354  [key=0, style=solid];
m9_1353 -> m9_1372  [key=2, style=dotted];
m9_1354 -> m9_1355  [key=0, style=solid];
m9_1354 -> m9_1371  [key=2, style=dotted];
m9_1355 -> m9_1356  [key=0, style=solid];
m9_1355 -> m9_1371  [key=2, style=dotted];
m9_1356 -> m9_1357  [key=0, style=solid];
m9_1356 -> m9_1371  [key=2, style=dotted];
m9_1358 -> m9_1359  [key=0, style=solid];
m9_1358 -> m9_1373  [key=2, style=dotted];
m9_1359 -> m9_1360  [key=0, style=solid];
m9_1359 -> m9_1374  [key=2, style=dotted];
m9_1360 -> m9_1361  [key=0, style=solid];
m9_1360 -> m9_1375  [key=2, style=dotted];
m9_1361 -> m9_1362  [key=0, style=solid];
m9_1361 -> m9_1376  [key=2, style=dotted];
m9_1362 -> m9_1363  [key=0, style=solid];
m9_1362 -> m9_1377  [key=2, style=dotted];
m9_1363 -> m9_1364  [key=0, style=solid];
m9_1363 -> m9_1378  [key=2, style=dotted];
m9_1364 -> m9_1365  [key=0, style=solid];
m9_1364 -> m9_1379  [key=2, style=dotted];
m9_1365 -> m9_1366  [key=0, style=solid];
m9_1365 -> m9_1380  [key=2, style=dotted];
m9_1366 -> m9_1367  [key=0, style=solid];
m9_1366 -> m9_1381  [key=2, style=dotted];
m9_1367 -> m9_1368  [key=0, style=solid];
m9_1367 -> m9_1382  [key=2, style=dotted];
m9_1368 -> m9_1369  [key=0, style=solid];
m9_1368 -> m9_1383  [key=2, style=dotted];
m9_1369 -> m9_1370  [key=0, style=solid];
m9_1369 -> m9_1384  [key=2, style=dotted];
m9_1357 -> m9_1358  [key=0, style=solid];
m9_1357 -> m9_1371  [key=2, style=dotted];
m9_1370 -> m9_1351  [key=0, style=bold, color=blue];
m9_145 -> m9_146  [key=0, style=solid];
m9_145 -> m9_144  [key=0, style=solid];
m9_145 -> m9_117  [key=2, style=dotted];
m9_152 -> m9_93  [key=2, style=dotted];
m9_152 -> m9_153  [key=0, style=solid];
m9_152 -> m9_154  [key=1, style=dashed, color=darkseagreen4, label=articles2];
m9_152 -> m9_133  [key=0, style=bold, color=blue];
m9_153 -> m9_11  [key=2, style=dotted];
m9_153 -> m9_154  [key=0, style=solid];
m9_154 -> m9_11  [key=2, style=dotted];
m9_154 -> m9_155  [key=0, style=solid];
m9_151 -> m9_9  [key=2, style=dotted];
m9_151 -> m9_152  [key=0, style=solid];
m9_148 -> m9_153  [key=1, style=dashed, color=darkseagreen4, label=articles1];
m9_148 -> m9_154  [key=1, style=dashed, color=darkseagreen4, label=articles1];
m9_148 -> m9_151  [key=1, style=dashed, color=darkseagreen4, label=articles1];
m9_148 -> m9_149  [key=0, style=solid];
m9_148 -> m9_157  [key=2, style=dotted];
m9_148 -> m9_150  [key=1, style=dashed, color=darkseagreen4, label=articles1];
m9_150 -> m9_151  [key=0, style=solid];
m9_150 -> m9_158  [key=2, style=dotted];
m9_150 -> m9_152  [key=1, style=dashed, color=darkseagreen4, label="out System.Type"];
m9_147 -> m9_148  [key=0, style=solid];
m9_147 -> m9_150  [key=1, style=dashed, color=darkseagreen4, label=a2];
m9_147 -> m9_156  [key=2, style=dotted];
m9_147 -> m9_144  [key=0, style=solid];
m9_149 -> m9_150  [key=0, style=solid];
m9_149 -> m9_158  [key=2, style=dotted];
m9_149 -> m9_152  [key=0, style=solid];
m9_146 -> m9_147  [key=0, style=solid];
m9_146 -> m9_149  [key=1, style=dashed, color=darkseagreen4, label=a1];
m9_146 -> m9_156  [key=2, style=dotted];
m9_146 -> m9_118  [key=2, style=dotted];
m9_155 -> m9_145  [key=0, style=bold, color=blue];
m9_2960 -> m9_2961  [key=0, style=solid];
m9_2961 -> m9_2962  [key=0, style=solid];
m9_2961 -> m9_2957  [key=2, style=dotted];
m9_2962 -> m9_2960  [key=0, style=bold, color=blue];
m9_2272 -> m9_2273  [key=0, style=solid];
m9_2273 -> m9_209  [key=2, style=dotted];
m9_2273 -> m9_2274  [key=0, style=solid];
m9_2274 -> m9_2272  [key=0, style=bold, color=blue];
m9_568 -> m9_569  [key=0, style=solid];
m9_573 -> m9_93  [key=2, style=dotted];
m9_573 -> m9_574  [key=0, style=solid];
m9_573 -> m9_577  [key=0, style=solid];
m9_573 -> m9_582  [key=2, style=dotted];
m9_579 -> m9_93  [key=2, style=dotted];
m9_579 -> m9_580  [key=0, style=solid];
m9_572 -> m9_11  [key=2, style=dotted];
m9_572 -> m9_573  [key=0, style=solid];
m9_574 -> m9_11  [key=2, style=dotted];
m9_574 -> m9_575  [key=0, style=solid];
m9_574 -> m9_576  [key=0, style=solid];
m9_574 -> m9_107  [key=2, style=dotted];
m9_578 -> m9_11  [key=2, style=dotted];
m9_578 -> m9_579  [key=0, style=solid];
m9_580 -> m9_11  [key=2, style=dotted];
m9_580 -> m9_581  [key=0, style=solid];
m9_571 -> m9_9  [key=2, style=dotted];
m9_571 -> m9_573  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_571 -> m9_572  [key=0, style=solid];
m9_571 -> m9_577  [key=0, style=solid];
m9_571 -> m9_581  [key=2, style=dotted];
m9_577 -> m9_9  [key=2, style=dotted];
m9_577 -> m9_579  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_577 -> m9_578  [key=0, style=solid];
m9_577 -> m9_543  [key=0, style=bold, color=blue];
m9_569 -> m9_572  [key=1, style=dashed, color=darkseagreen4, label=boolRef];
m9_569 -> m9_570  [key=0, style=solid];
m9_569 -> m9_577  [key=0, style=solid];
m9_569 -> m9_580  [key=2, style=dotted];
m9_575 -> m9_578  [key=1, style=dashed, color=darkseagreen4, label=jsonSerializerTestRef];
m9_575 -> m9_576  [key=0, style=solid];
m9_575 -> m9_577  [key=0, style=solid];
m9_570 -> m9_571  [key=0, style=solid];
m9_570 -> m9_582  [key=2, style=dotted];
m9_576 -> m9_577  [key=0, style=solid];
m9_576 -> m9_582  [key=2, style=dotted];
m9_576 -> m9_583  [key=2, style=dotted];
m9_581 -> m9_568  [key=0, style=bold, color=blue];
m9_3387 -> m9_3388  [key=0, style=solid];
m9_3388 -> m9_2942  [key=2, style=dotted];
m9_3388 -> m9_3389  [key=0, style=solid];
m9_3389 -> m9_3387  [key=0, style=bold, color=blue];
m9_3222 -> m9_3223  [key=0, style=solid];
m9_3229 -> m9_11  [key=2, style=dotted];
m9_3229 -> m9_3230  [key=0, style=solid];
m9_3230 -> m9_11  [key=2, style=dotted];
m9_3230 -> m9_3231  [key=0, style=solid];
m9_3232 -> m9_11  [key=2, style=dotted];
m9_3232 -> m9_3233  [key=0, style=solid];
m9_3225 -> m9_3229  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m9_3225 -> m9_3230  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m9_3225 -> m9_3226  [key=0, style=solid];
m9_3225 -> m9_2342  [key=2, style=dotted];
m9_3225 -> m9_3227  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m9_3225 -> m9_3228  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m9_3228 -> m9_3229  [key=0, style=solid];
m9_3228 -> m9_1519  [key=2, style=dotted];
m9_3231 -> m9_3232  [key=0, style=solid];
m9_3231 -> m9_2346  [key=2, style=dotted];
m9_3223 -> m9_210  [key=2, style=dotted];
m9_3223 -> m9_223  [key=2, style=dotted];
m9_3223 -> m9_222  [key=2, style=dotted];
m9_3223 -> m9_3224  [key=0, style=solid];
m9_3223 -> m9_209  [key=2, style=dotted];
m9_3223 -> m9_3227  [key=1, style=dashed, color=darkseagreen4, label=dates];
m9_3224 -> m9_3225  [key=0, style=solid];
m9_3224 -> m9_3231  [key=1, style=dashed, color=darkseagreen4, label=sw];
m9_3224 -> m9_278  [key=2, style=dotted];
m9_3226 -> m9_214  [key=2, style=dotted];
m9_3226 -> m9_3216  [key=2, style=dotted];
m9_3226 -> m9_3227  [key=0, style=solid];
m9_3226 -> m9_2547  [key=2, style=dotted];
m9_3227 -> m9_3228  [key=0, style=solid];
m9_3227 -> m9_2426  [key=2, style=dotted];
m9_3233 -> m9_3222  [key=0, style=bold, color=blue];
m9_959 -> m9_960  [key=0, style=solid];
m9_960 -> m9_964  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_960 -> m9_961  [key=0, style=solid];
m9_961 -> m9_963  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_961 -> m9_962  [key=0, style=solid];
m9_961 -> m9_140  [key=2, style=dotted];
m9_962 -> m9_959  [key=0, style=bold, color=blue];
m9_331 -> m9_11  [key=2, style=dotted];
m9_331 -> m9_332  [key=0, style=solid];
m9_2198 -> m9_2199  [key=0, style=solid];
m9_2204 -> m9_93  [key=2, style=dotted];
m9_2204 -> m9_2205  [key=0, style=solid];
m9_2204 -> m9_2206  [key=1, style=dashed, color=darkseagreen4, label=c2];
m9_2204 -> m9_2207  [key=1, style=dashed, color=darkseagreen4, label=c2];
m9_2204 -> m9_2208  [key=1, style=dashed, color=darkseagreen4, label=c2];
m9_2205 -> m9_11  [key=2, style=dotted];
m9_2205 -> m9_2206  [key=0, style=solid];
m9_2206 -> m9_11  [key=2, style=dotted];
m9_2206 -> m9_2207  [key=0, style=solid];
m9_2203 -> m9_11  [key=2, style=dotted];
m9_2203 -> m9_2204  [key=0, style=solid];
m9_2207 -> m9_11  [key=2, style=dotted];
m9_2207 -> m9_2208  [key=0, style=solid];
m9_2208 -> m9_11  [key=2, style=dotted];
m9_2208 -> m9_2209  [key=0, style=solid];
m9_2202 -> m9_2204  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_2202 -> m9_2203  [key=0, style=solid];
m9_2202 -> m9_351  [key=2, style=dotted];
m9_2199 -> m9_2205  [key=1, style=dashed, color=darkseagreen4, label=c1];
m9_2199 -> m9_2206  [key=1, style=dashed, color=darkseagreen4, label=c1];
m9_2199 -> m9_2202  [key=1, style=dashed, color=darkseagreen4, label=c1];
m9_2199 -> m9_2200  [key=0, style=solid];
m9_2199 -> m9_2194  [key=2, style=dotted];
m9_2199 -> m9_2201  [key=1, style=dashed, color=darkseagreen4, label=c1];
m9_2201 -> m9_2202  [key=0, style=solid];
m9_2201 -> m9_2210  [key=2, style=dotted];
m9_2200 -> m9_2201  [key=0, style=solid];
m9_2200 -> m9_2210  [key=2, style=dotted];
m9_2209 -> m9_2198  [key=0, style=bold, color=blue];
m9_1447 -> m9_1448  [key=0, style=solid];
m9_1448 -> m9_93  [key=2, style=dotted];
m9_1448 -> m9_1449  [key=0, style=solid];
m9_1448 -> m9_1450  [key=1, style=dashed, color=darkseagreen4, label=myA];
m9_1448 -> m9_1451  [key=1, style=dashed, color=darkseagreen4, label=myA];
m9_1448 -> m9_1452  [key=1, style=dashed, color=darkseagreen4, label=myA];
m9_1448 -> m9_1453  [key=1, style=dashed, color=darkseagreen4, label=myA];
m9_1448 -> m9_1454  [key=1, style=dashed, color=darkseagreen4, label=myA];
m9_1448 -> m9_1455  [key=1, style=dashed, color=darkseagreen4, label=myA];
m9_1448 -> m9_1456  [key=1, style=dashed, color=darkseagreen4, label=myA];
m9_1457 -> m9_93  [key=2, style=dotted];
m9_1457 -> m9_1458  [key=0, style=solid];
m9_1457 -> m9_1459  [key=1, style=dashed, color=darkseagreen4, label=myB];
m9_1457 -> m9_1460  [key=1, style=dashed, color=darkseagreen4, label=myB];
m9_1457 -> m9_1461  [key=1, style=dashed, color=darkseagreen4, label=myB];
m9_1457 -> m9_1462  [key=1, style=dashed, color=darkseagreen4, label=myB];
m9_1457 -> m9_1463  [key=1, style=dashed, color=darkseagreen4, label=myB];
m9_1457 -> m9_1464  [key=1, style=dashed, color=darkseagreen4, label=myB];
m9_1457 -> m9_1465  [key=1, style=dashed, color=darkseagreen4, label=myB];
m9_1457 -> m9_1466  [key=1, style=dashed, color=darkseagreen4, label=myB];
m9_1457 -> m9_1467  [key=1, style=dashed, color=darkseagreen4, label=myB];
m9_1457 -> m9_1468  [key=1, style=dashed, color=darkseagreen4, label=myB];
m9_1457 -> m9_1469  [key=1, style=dashed, color=darkseagreen4, label=myB];
m9_1457 -> m9_1470  [key=1, style=dashed, color=darkseagreen4, label=myB];
m9_1457 -> m9_1471  [key=1, style=dashed, color=darkseagreen4, label=myB];
m9_1457 -> m9_1472  [key=1, style=dashed, color=darkseagreen4, label=myB];
m9_1457 -> m9_1473  [key=1, style=dashed, color=darkseagreen4, label=myB];
m9_1457 -> m9_1474  [key=1, style=dashed, color=darkseagreen4, label=myB];
m9_1457 -> m9_1475  [key=1, style=dashed, color=darkseagreen4, label=myB];
m9_1449 -> m9_11  [key=2, style=dotted];
m9_1449 -> m9_1450  [key=0, style=solid];
m9_1449 -> m9_1477  [key=2, style=dotted];
m9_1449 -> m9_1478  [key=2, style=dotted];
m9_1450 -> m9_11  [key=2, style=dotted];
m9_1450 -> m9_1451  [key=0, style=solid];
m9_1450 -> m9_1477  [key=2, style=dotted];
m9_1450 -> m9_1478  [key=2, style=dotted];
m9_1451 -> m9_11  [key=2, style=dotted];
m9_1451 -> m9_1452  [key=0, style=solid];
m9_1451 -> m9_1479  [key=2, style=dotted];
m9_1451 -> m9_1478  [key=2, style=dotted];
m9_1452 -> m9_11  [key=2, style=dotted];
m9_1452 -> m9_1453  [key=0, style=solid];
m9_1452 -> m9_1479  [key=2, style=dotted];
m9_1452 -> m9_1478  [key=2, style=dotted];
m9_1453 -> m9_11  [key=2, style=dotted];
m9_1453 -> m9_1454  [key=0, style=solid];
m9_1453 -> m9_1479  [key=2, style=dotted];
m9_1453 -> m9_1478  [key=2, style=dotted];
m9_1454 -> m9_11  [key=2, style=dotted];
m9_1454 -> m9_1455  [key=0, style=solid];
m9_1454 -> m9_1479  [key=2, style=dotted];
m9_1454 -> m9_1478  [key=2, style=dotted];
m9_1455 -> m9_11  [key=2, style=dotted];
m9_1455 -> m9_1456  [key=0, style=solid];
m9_1455 -> m9_1479  [key=2, style=dotted];
m9_1455 -> m9_1478  [key=2, style=dotted];
m9_1456 -> m9_11  [key=2, style=dotted];
m9_1456 -> m9_1457  [key=0, style=solid];
m9_1456 -> m9_1479  [key=2, style=dotted];
m9_1456 -> m9_1478  [key=2, style=dotted];
m9_1458 -> m9_11  [key=2, style=dotted];
m9_1458 -> m9_1459  [key=0, style=solid];
m9_1458 -> m9_1477  [key=2, style=dotted];
m9_1458 -> m9_1478  [key=2, style=dotted];
m9_1459 -> m9_11  [key=2, style=dotted];
m9_1459 -> m9_1460  [key=0, style=solid];
m9_1459 -> m9_1477  [key=2, style=dotted];
m9_1459 -> m9_1478  [key=2, style=dotted];
m9_1460 -> m9_11  [key=2, style=dotted];
m9_1460 -> m9_1461  [key=0, style=solid];
m9_1460 -> m9_1479  [key=2, style=dotted];
m9_1460 -> m9_1478  [key=2, style=dotted];
m9_1461 -> m9_11  [key=2, style=dotted];
m9_1461 -> m9_1462  [key=0, style=solid];
m9_1461 -> m9_1479  [key=2, style=dotted];
m9_1461 -> m9_1478  [key=2, style=dotted];
m9_1462 -> m9_11  [key=2, style=dotted];
m9_1462 -> m9_1463  [key=0, style=solid];
m9_1462 -> m9_1479  [key=2, style=dotted];
m9_1462 -> m9_1478  [key=2, style=dotted];
m9_1463 -> m9_11  [key=2, style=dotted];
m9_1463 -> m9_1464  [key=0, style=solid];
m9_1463 -> m9_1479  [key=2, style=dotted];
m9_1463 -> m9_1478  [key=2, style=dotted];
m9_1464 -> m9_11  [key=2, style=dotted];
m9_1464 -> m9_1465  [key=0, style=solid];
m9_1464 -> m9_1479  [key=2, style=dotted];
m9_1464 -> m9_1478  [key=2, style=dotted];
m9_1465 -> m9_11  [key=2, style=dotted];
m9_1465 -> m9_1466  [key=0, style=solid];
m9_1465 -> m9_1479  [key=2, style=dotted];
m9_1465 -> m9_1478  [key=2, style=dotted];
m9_1466 -> m9_11  [key=2, style=dotted];
m9_1466 -> m9_1467  [key=0, style=solid];
m9_1467 -> m9_11  [key=2, style=dotted];
m9_1467 -> m9_1468  [key=0, style=solid];
m9_1468 -> m9_11  [key=2, style=dotted];
m9_1468 -> m9_1469  [key=0, style=solid];
m9_1469 -> m9_11  [key=2, style=dotted];
m9_1469 -> m9_1470  [key=0, style=solid];
m9_1470 -> m9_11  [key=2, style=dotted];
m9_1470 -> m9_1471  [key=0, style=solid];
m9_1470 -> m9_1479  [key=2, style=dotted];
m9_1470 -> m9_1478  [key=2, style=dotted];
m9_1471 -> m9_11  [key=2, style=dotted];
m9_1471 -> m9_1472  [key=0, style=solid];
m9_1471 -> m9_1479  [key=2, style=dotted];
m9_1471 -> m9_1478  [key=2, style=dotted];
m9_1472 -> m9_11  [key=2, style=dotted];
m9_1472 -> m9_1473  [key=0, style=solid];
m9_1473 -> m9_11  [key=2, style=dotted];
m9_1473 -> m9_1474  [key=0, style=solid];
m9_1473 -> m9_1479  [key=2, style=dotted];
m9_1473 -> m9_1478  [key=2, style=dotted];
m9_1474 -> m9_11  [key=2, style=dotted];
m9_1474 -> m9_1475  [key=0, style=solid];
m9_1474 -> m9_1479  [key=2, style=dotted];
m9_1474 -> m9_1478  [key=2, style=dotted];
m9_1475 -> m9_11  [key=2, style=dotted];
m9_1475 -> m9_1476  [key=0, style=solid];
m9_1475 -> m9_1479  [key=2, style=dotted];
m9_1475 -> m9_1478  [key=2, style=dotted];
m9_1476 -> m9_1447  [key=0, style=bold, color=blue];
m9_351 -> m9_352  [key=0, style=solid];
m9_351 -> m9_354  [key=1, style=dashed, color=darkseagreen4, label=declaringType];
m9_3378 -> m9_3379  [key=0, style=solid];
m9_3382 -> m9_11  [key=2, style=dotted];
m9_3382 -> m9_3383  [key=0, style=solid];
m9_3381 -> m9_3382  [key=0, style=solid];
m9_3381 -> m9_351  [key=2, style=dotted];
m9_3380 -> m9_3381  [key=0, style=solid];
m9_3380 -> m9_3361  [key=2, style=dotted];
m9_3379 -> m9_52  [key=2, style=dotted];
m9_3379 -> m9_3380  [key=0, style=solid];
m9_3383 -> m9_3378  [key=0, style=bold, color=blue];
m9_688 -> m9_689  [key=0, style=solid];
m9_690 -> m9_93  [key=2, style=dotted];
m9_690 -> m9_691  [key=0, style=solid];
m9_690 -> m9_692  [key=1, style=dashed, color=darkseagreen4, label=o];
m9_690 -> m9_693  [key=1, style=dashed, color=darkseagreen4, label=o];
m9_690 -> m9_694  [key=1, style=dashed, color=darkseagreen4, label=o];
m9_690 -> m9_695  [key=1, style=dashed, color=darkseagreen4, label=o];
m9_692 -> m9_11  [key=2, style=dotted];
m9_692 -> m9_693  [key=0, style=solid];
m9_693 -> m9_11  [key=2, style=dotted];
m9_693 -> m9_694  [key=0, style=solid];
m9_694 -> m9_11  [key=2, style=dotted];
m9_694 -> m9_695  [key=0, style=solid];
m9_695 -> m9_11  [key=2, style=dotted];
m9_695 -> m9_696  [key=0, style=solid];
m9_689 -> m9_690  [key=0, style=solid];
m9_691 -> m9_692  [key=0, style=solid];
m9_691 -> m9_686  [key=2, style=dotted];
m9_696 -> m9_688  [key=0, style=bold, color=blue];
m9_493 -> m9_494  [key=0, style=solid];
m9_493 -> m9_496  [key=0, style=solid];
m9_314 -> m9_315  [key=0, style=solid];
m9_314 -> m9_332  [key=2, style=dotted];
m9_314 -> m9_333  [key=2, style=dotted];
m9_319 -> m9_11  [key=2, style=dotted];
m9_319 -> m9_320  [key=0, style=solid];
m9_319 -> m9_338  [key=2, style=dotted];
m9_319 -> m9_321  [key=1, style=dashed, color=darkseagreen4, label=members];
m9_319 -> m9_323  [key=1, style=dashed, color=darkseagreen4, label=members];
m9_320 -> m9_11  [key=2, style=dotted];
m9_320 -> m9_321  [key=0, style=solid];
m9_320 -> m9_322  [key=0, style=solid];
m9_318 -> m9_319  [key=0, style=solid];
m9_318 -> m9_320  [key=1, style=dashed, color=darkseagreen4, label=count];
m9_318 -> m9_283  [key=2, style=dotted];
m9_318 -> m9_322  [key=2, style=dotted];
m9_318 -> m9_337  [key=2, style=dotted];
m9_315 -> m9_318  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_315 -> m9_316  [key=0, style=solid];
m9_315 -> m9_334  [key=2, style=dotted];
m9_315 -> m9_333  [key=2, style=dotted];
m9_316 -> m9_318  [key=1, style=dashed, color=darkseagreen4, label=s];
m9_316 -> m9_317  [key=0, style=solid];
m9_316 -> m9_277  [key=2, style=dotted];
m9_316 -> m9_335  [key=2, style=dotted];
m9_316 -> m9_321  [key=1, style=dashed, color=darkseagreen4, label=distinctMembers];
m9_316 -> m9_328  [key=1, style=dashed, color=darkseagreen4, label=distinctMembers];
m9_316 -> m9_329  [key=1, style=dashed, color=darkseagreen4, label=distinctMembers];
m9_317 -> m9_318  [key=0, style=solid];
m9_317 -> m9_329  [key=0, style=solid];
m9_317 -> m9_336  [key=2, style=dotted];
m9_317 -> m9_343  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_317 -> m9_319  [key=1, style=dashed, color=darkseagreen4, label=groupedMember];
m9_321 -> m9_314  [key=0, style=bold, color=blue];
m9_321 -> m9_317  [key=0, style=solid];
m9_321 -> m9_339  [key=2, style=dotted];
m9_321 -> m9_340  [key=2, style=dotted];
m9_716 -> m9_717  [key=0, style=solid];
m9_723 -> m9_11  [key=2, style=dotted];
m9_723 -> m9_724  [key=0, style=solid];
m9_725 -> m9_11  [key=2, style=dotted];
m9_725 -> m9_726  [key=0, style=solid];
m9_722 -> m9_723  [key=0, style=solid];
m9_722 -> m9_351  [key=2, style=dotted];
m9_724 -> m9_725  [key=0, style=solid];
m9_724 -> m9_214  [key=2, style=dotted];
m9_724 -> m9_728  [key=2, style=dotted];
m9_717 -> m9_722  [key=1, style=dashed, color=darkseagreen4, label=o];
m9_717 -> m9_724  [key=1, style=dashed, color=darkseagreen4, label=o];
m9_717 -> m9_718  [key=0, style=solid];
m9_717 -> m9_727  [key=2, style=dotted];
m9_717 -> m9_719  [key=1, style=dashed, color=darkseagreen4, label=o];
m9_717 -> m9_720  [key=1, style=dashed, color=darkseagreen4, label=o];
m9_717 -> m9_721  [key=1, style=dashed, color=darkseagreen4, label=o];
m9_721 -> m9_722  [key=0, style=solid];
m9_718 -> m9_719  [key=0, style=solid];
m9_719 -> m9_720  [key=0, style=solid];
m9_720 -> m9_721  [key=0, style=solid];
m9_726 -> m9_716  [key=0, style=bold, color=blue];
m9_2898 -> m9_2899  [key=0, style=solid];
m9_2899 -> m9_93  [key=2, style=dotted];
m9_2899 -> m9_2900  [key=0, style=solid];
m9_2899 -> m9_2901  [key=1, style=dashed, color=darkseagreen4, label=uris];
m9_2902 -> m9_93  [key=2, style=dotted];
m9_2902 -> m9_2903  [key=0, style=solid];
m9_2907 -> m9_93  [key=2, style=dotted];
m9_2907 -> m9_2908  [key=0, style=solid];
m9_2907 -> m9_2909  [key=1, style=dashed, color=darkseagreen4, label=uri];
m9_2900 -> m9_11  [key=2, style=dotted];
m9_2900 -> m9_2901  [key=0, style=solid];
m9_2901 -> m9_11  [key=2, style=dotted];
m9_2901 -> m9_2902  [key=0, style=solid];
m9_2901 -> m9_839  [key=2, style=dotted];
m9_2906 -> m9_11  [key=2, style=dotted];
m9_2906 -> m9_2907  [key=0, style=solid];
m9_2909 -> m9_11  [key=2, style=dotted];
m9_2909 -> m9_2910  [key=0, style=solid];
m9_2909 -> m9_2911  [key=2, style=dotted];
m9_2903 -> m9_2904  [key=0, style=solid];
m9_2903 -> m9_686  [key=2, style=dotted];
m9_2908 -> m9_2909  [key=0, style=solid];
m9_2908 -> m9_686  [key=2, style=dotted];
m9_2904 -> m9_2906  [key=1, style=dashed, color=darkseagreen4, label=i1];
m9_2904 -> m9_2905  [key=0, style=solid];
m9_2904 -> m9_2911  [key=2, style=dotted];
m9_2905 -> m9_2906  [key=0, style=solid];
m9_2905 -> m9_839  [key=2, style=dotted];
m9_2910 -> m9_2898  [key=0, style=bold, color=blue];
m9_239 -> m9_240  [key=0, style=solid];
m9_239 -> m9_241  [key=2, style=dotted];
m9_242 -> m9_11  [key=2, style=dotted];
m9_242 -> m9_243  [key=0, style=solid];
m9_242 -> m9_244  [key=1, style=dashed, color=darkseagreen4, label=object];
m9_242 -> m9_245  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m9_242 -> m9_247  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m9_242 -> m9_249  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m9_242 -> m9_251  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m9_242 -> m9_252  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m9_244 -> m9_11  [key=2, style=dotted];
m9_244 -> m9_245  [key=0, style=solid];
m9_244 -> m9_13  [key=2, style=dotted];
m9_244 -> m9_14  [key=2, style=dotted];
m9_245 -> m9_11  [key=2, style=dotted];
m9_245 -> m9_246  [key=0, style=solid];
m9_245 -> m9_248  [key=0, style=solid];
m9_245 -> m9_252  [key=0, style=solid];
m9_245 -> m9_228  [key=2, style=dotted];
m9_246 -> m9_11  [key=2, style=dotted];
m9_246 -> m9_247  [key=0, style=solid];
m9_247 -> m9_11  [key=2, style=dotted];
m9_247 -> m9_248  [key=0, style=solid];
m9_247 -> m9_253  [key=0, style=solid];
m9_247 -> m9_254  [key=2, style=dotted];
m9_248 -> m9_11  [key=2, style=dotted];
m9_248 -> m9_249  [key=0, style=solid];
m9_249 -> m9_11  [key=2, style=dotted];
m9_249 -> m9_250  [key=0, style=solid];
m9_249 -> m9_253  [key=0, style=solid];
m9_249 -> m9_255  [key=2, style=dotted];
m9_250 -> m9_11  [key=2, style=dotted];
m9_250 -> m9_251  [key=0, style=solid];
m9_243 -> m9_244  [key=0, style=solid];
m9_243 -> m9_245  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m9_243 -> m9_246  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m9_243 -> m9_247  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m9_243 -> m9_248  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m9_243 -> m9_249  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m9_243 -> m9_250  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m9_243 -> m9_243  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m9_243 -> m9_252  [key=2, style=dotted];
m9_243 -> m9_13  [key=2, style=dotted];
m9_243 -> m9_14  [key=2, style=dotted];
m9_240 -> m9_241  [key=0, style=solid];
m9_240 -> m9_243  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m9_240 -> m9_28  [key=2, style=dotted];
m9_240 -> m9_237  [key=0, style=bold, color=blue];
m9_251 -> m9_239  [key=0, style=bold, color=blue];
m9_251 -> m9_253  [key=0, style=solid];
m9_251 -> m9_256  [key=2, style=dotted];
m9_251 -> m9_156  [key=2, style=dotted];
m9_29 -> m9_30  [key=0, style=solid];
m9_29 -> m9_31  [key=0, style=solid];
m9_29 -> m9_15  [key=2, style=dotted];
m9_31 -> m9_32  [key=0, style=solid];
m9_31 -> m9_33  [key=0, style=solid];
m9_31 -> m9_16  [key=2, style=dotted];
m9_30 -> m9_34  [key=0, style=solid];
m9_30 -> m9_31  [key=0, style=solid];
m9_32 -> m9_34  [key=0, style=solid];
m9_32 -> m9_33  [key=0, style=solid];
m9_32 -> m9_35  [key=1, style=dashed, color=darkseagreen4, label=p];
m9_32 -> m9_10  [key=2, style=dotted];
m9_33 -> m9_34  [key=0, style=solid];
m9_33 -> m9_11  [key=2, style=dotted];
m9_34 -> m9_28  [key=0, style=bold, color=blue];
m9_34 -> m9_11  [key=2, style=dotted];
m9_34 -> m9_35  [key=0, style=solid];
m9_34 -> m9_37  [key=2, style=dotted];
m9_1721 -> m9_1722  [key=0, style=solid];
m9_1723 -> m9_93  [key=2, style=dotted];
m9_1723 -> m9_1724  [key=0, style=solid];
m9_1723 -> m9_1725  [key=1, style=dashed, color=darkseagreen4, label=cc];
m9_1723 -> m9_1726  [key=1, style=dashed, color=darkseagreen4, label=cc];
m9_1724 -> m9_11  [key=2, style=dotted];
m9_1724 -> m9_1725  [key=0, style=solid];
m9_1725 -> m9_11  [key=2, style=dotted];
m9_1725 -> m9_1726  [key=0, style=solid];
m9_1726 -> m9_11  [key=2, style=dotted];
m9_1726 -> m9_1727  [key=0, style=solid];
m9_1722 -> m9_1723  [key=0, style=solid];
m9_1727 -> m9_1721  [key=0, style=bold, color=blue];
m9_2275 -> m9_2276  [key=0, style=solid];
m9_2281 -> m9_93  [key=2, style=dotted];
m9_2281 -> m9_2282  [key=0, style=solid];
m9_2284 -> m9_93  [key=2, style=dotted];
m9_2284 -> m9_2285  [key=0, style=solid];
m9_2282 -> m9_11  [key=2, style=dotted];
m9_2282 -> m9_2283  [key=0, style=solid];
m9_2282 -> m9_2287  [key=2, style=dotted];
m9_2285 -> m9_11  [key=2, style=dotted];
m9_2285 -> m9_2286  [key=0, style=solid];
m9_2285 -> m9_2287  [key=2, style=dotted];
m9_2280 -> m9_9  [key=2, style=dotted];
m9_2280 -> m9_2281  [key=0, style=solid];
m9_2283 -> m9_2284  [key=0, style=solid];
m9_2283 -> m9_351  [key=2, style=dotted];
m9_2276 -> m9_2280  [key=1, style=dashed, color=darkseagreen4, label=classWithException];
m9_2276 -> m9_2283  [key=1, style=dashed, color=darkseagreen4, label=classWithException];
m9_2276 -> m9_2277  [key=0, style=solid];
m9_2276 -> m9_2272  [key=2, style=dotted];
m9_2276 -> m9_2279  [key=1, style=dashed, color=darkseagreen4, label=classWithException];
m9_2277 -> m9_2280  [key=0, style=solid];
m9_2277 -> m9_1239  [key=2, style=dotted];
m9_2279 -> m9_2280  [key=0, style=solid];
m9_2279 -> m9_264  [key=2, style=dotted];
m9_2278 -> m9_2279  [key=0, style=solid];
m9_2286 -> m9_2275  [key=0, style=bold, color=blue];
m9_2266 -> m9_2267  [key=0, style=solid];
m9_2269 -> m9_11  [key=2, style=dotted];
m9_2269 -> m9_2270  [key=0, style=solid];
m9_2268 -> m9_2269  [key=0, style=solid];
m9_2268 -> m9_351  [key=2, style=dotted];
m9_2267 -> m9_2268  [key=0, style=solid];
m9_2267 -> m9_2271  [key=2, style=dotted];
m9_2270 -> m9_2266  [key=0, style=bold, color=blue];
m9_1520 -> m9_1521  [key=0, style=solid];
m9_1528 -> m9_93  [key=2, style=dotted];
m9_1528 -> m9_1529  [key=0, style=solid];
m9_1529 -> m9_11  [key=2, style=dotted];
m9_1529 -> m9_1530  [key=0, style=solid];
m9_1527 -> m9_11  [key=2, style=dotted];
m9_1527 -> m9_1528  [key=0, style=solid];
m9_1525 -> m9_1528  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_1525 -> m9_1527  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_1525 -> m9_1526  [key=0, style=solid];
m9_1525 -> m9_351  [key=2, style=dotted];
m9_1521 -> m9_1529  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m9_1521 -> m9_1525  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m9_1521 -> m9_1522  [key=0, style=solid];
m9_1521 -> m9_1531  [key=2, style=dotted];
m9_1521 -> m9_1524  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m9_1526 -> m9_1527  [key=0, style=solid];
m9_1524 -> m9_1525  [key=0, style=solid];
m9_1522 -> m9_1524  [key=1, style=dashed, color=darkseagreen4, label=document];
m9_1522 -> m9_1523  [key=0, style=solid];
m9_1522 -> m9_1532  [key=2, style=dotted];
m9_1523 -> m9_1524  [key=0, style=solid];
m9_1523 -> m9_1533  [key=2, style=dotted];
m9_1530 -> m9_1520  [key=0, style=bold, color=blue];
m9_1274 -> m9_1275  [key=0, style=solid];
m9_1275 -> m9_1276  [key=0, style=solid];
m9_1275 -> m9_1277  [key=2, style=dotted];
m9_1276 -> m9_1274  [key=0, style=bold, color=blue];
m9_2824 -> m9_2825  [key=0, style=solid];
m9_2825 -> m9_2826  [key=0, style=solid];
m9_2825 -> m9_2828  [key=2, style=dotted];
m9_2826 -> m9_2827  [key=0, style=solid];
m9_2826 -> m9_2829  [key=2, style=dotted];
m9_2827 -> m9_2824  [key=0, style=bold, color=blue];
m9_1965 -> m9_1966  [key=0, style=solid];
m9_1969 -> m9_93  [key=2, style=dotted];
m9_1969 -> m9_1970  [key=0, style=solid];
m9_1969 -> m9_1971  [key=1, style=dashed, color=darkseagreen4, label=obj];
m9_1969 -> m9_1972  [key=1, style=dashed, color=darkseagreen4, label=obj];
m9_1970 -> m9_11  [key=2, style=dotted];
m9_1970 -> m9_1971  [key=0, style=solid];
m9_1971 -> m9_11  [key=2, style=dotted];
m9_1971 -> m9_1972  [key=0, style=solid];
m9_1972 -> m9_11  [key=2, style=dotted];
m9_1972 -> m9_1973  [key=0, style=solid];
m9_1968 -> m9_9  [key=2, style=dotted];
m9_1968 -> m9_1969  [key=0, style=solid];
m9_1966 -> m9_1968  [key=1, style=dashed, color=darkseagreen4, label=obj];
m9_1966 -> m9_1967  [key=0, style=solid];
m9_1966 -> m9_1974  [key=2, style=dotted];
m9_1967 -> m9_1968  [key=0, style=solid];
m9_1967 -> m9_1975  [key=2, style=dotted];
m9_1973 -> m9_1965  [key=0, style=bold, color=blue];
m9_781 -> m9_782  [key=0, style=solid];
m9_786 -> m9_93  [key=2, style=dotted];
m9_786 -> m9_787  [key=0, style=solid];
m9_785 -> m9_11  [key=2, style=dotted];
m9_785 -> m9_786  [key=0, style=solid];
m9_787 -> m9_11  [key=2, style=dotted];
m9_787 -> m9_788  [key=0, style=solid];
m9_787 -> m9_778  [key=2, style=dotted];
m9_784 -> m9_786  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_784 -> m9_785  [key=0, style=solid];
m9_784 -> m9_351  [key=2, style=dotted];
m9_782 -> m9_784  [key=1, style=dashed, color=darkseagreen4, label=c];
m9_782 -> m9_783  [key=0, style=solid];
m9_782 -> m9_772  [key=2, style=dotted];
m9_783 -> m9_784  [key=0, style=solid];
m9_788 -> m9_781  [key=0, style=bold, color=blue];
m9_2591 -> m9_2592  [key=0, style=solid];
m9_2592 -> m9_2594  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_2592 -> m9_2593  [key=0, style=solid];
m9_2592 -> m9_140  [key=2, style=dotted];
m9_2593 -> m9_2591  [key=0, style=bold, color=blue];
m9_369 -> m9_370  [key=0, style=solid];
m9_369 -> m9_366  [key=3, color=darkorchid, style=bold, label="Parameter variable object attributeProvider"];
m9_369 -> m9_7  [key=3, color=darkorchid, style=bold, label="Parameter variable bool inherit"];
m9_2240 -> m9_2241  [key=0, style=solid];
m9_2240 -> m9_2242  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_2240 -> m9_2243  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_2241 -> m9_2242  [key=0, style=solid];
m9_2242 -> m9_2243  [key=0, style=solid];
m9_2243 -> m9_2244  [key=0, style=solid];
m9_2244 -> m9_2240  [key=0, style=bold, color=blue];
m9_3196 -> m9_3197  [key=0, style=solid];
m9_3201 -> m9_11  [key=2, style=dotted];
m9_3201 -> m9_3201  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffset];
m9_3201 -> m9_3202  [key=0, style=solid];
m9_3201 -> m9_223  [key=2, style=dotted];
m9_3202 -> m9_11  [key=2, style=dotted];
m9_3202 -> m9_3202  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffset];
m9_3202 -> m9_3203  [key=0, style=solid];
m9_3202 -> m9_3204  [key=2, style=dotted];
m9_3200 -> m9_3201  [key=0, style=solid];
m9_3199 -> m9_3200  [key=0, style=solid];
m9_3199 -> m9_3195  [key=2, style=dotted];
m9_3198 -> m9_214  [key=2, style=dotted];
m9_3198 -> m9_3199  [key=0, style=solid];
m9_3197 -> m9_3199  [key=1, style=dashed, color=darkseagreen4, label=content];
m9_3197 -> m9_3198  [key=0, style=solid];
m9_3203 -> m9_3196  [key=0, style=bold, color=blue];
m9_197 -> m9_195  [key=0, style=bold, color=blue];
m9_361 -> m9_362  [key=0, style=solid];
m9_361 -> m9_363  [key=0, style=solid];
m9_426 -> m9_427  [key=0, style=solid];
m9_426 -> m9_419  [key=0, style=bold, color=blue];
m9_430 -> m9_93  [key=2, style=dotted];
m9_430 -> m9_431  [key=0, style=solid];
m9_428 -> m9_9  [key=2, style=dotted];
m9_428 -> m9_430  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_428 -> m9_429  [key=0, style=solid];
m9_729 -> m9_730  [key=0, style=solid];
m9_731 -> m9_93  [key=2, style=dotted];
m9_731 -> m9_732  [key=0, style=solid];
m9_731 -> m9_733  [key=1, style=dashed, color=darkseagreen4, label=o];
m9_731 -> m9_734  [key=1, style=dashed, color=darkseagreen4, label=o];
m9_731 -> m9_735  [key=1, style=dashed, color=darkseagreen4, label=o];
m9_732 -> m9_11  [key=2, style=dotted];
m9_732 -> m9_733  [key=0, style=solid];
m9_733 -> m9_11  [key=2, style=dotted];
m9_733 -> m9_734  [key=0, style=solid];
m9_734 -> m9_11  [key=2, style=dotted];
m9_734 -> m9_735  [key=0, style=solid];
m9_735 -> m9_11  [key=2, style=dotted];
m9_735 -> m9_736  [key=0, style=solid];
m9_730 -> m9_731  [key=0, style=solid];
m9_736 -> m9_729  [key=0, style=bold, color=blue];
m9_2828 -> m9_2833  [key=1, style=dashed, color=darkseagreen4, label=T];
m9_2828 -> m9_2830  [key=0, style=solid];
m9_2833 -> m9_279  [key=2, style=dotted];
m9_2833 -> m9_2834  [key=0, style=solid];
m9_2830 -> m9_278  [key=2, style=dotted];
m9_2830 -> m9_2833  [key=1, style=dashed, color=darkseagreen4, label=stringWriter];
m9_2830 -> m9_2831  [key=0, style=solid];
m9_2830 -> m9_2834  [key=1, style=dashed, color=darkseagreen4, label=stringWriter];
m9_2834 -> m9_2346  [key=2, style=dotted];
m9_2834 -> m9_2835  [key=0, style=solid];
m9_2831 -> m9_277  [key=2, style=dotted];
m9_2831 -> m9_2833  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m9_2831 -> m9_2832  [key=0, style=solid];
m9_2832 -> m9_2833  [key=0, style=solid];
m9_2832 -> m9_2836  [key=2, style=dotted];
m9_2835 -> m9_2828  [key=0, style=bold, color=blue];
m9_2530 -> m9_2531  [key=0, style=solid];
m9_2534 -> m9_93  [key=2, style=dotted];
m9_2534 -> m9_2535  [key=0, style=solid];
m9_2534 -> m9_2536  [key=1, style=dashed, color=darkseagreen4, label=actual];
m9_2534 -> m9_2537  [key=1, style=dashed, color=darkseagreen4, label=actual];
m9_2533 -> m9_11  [key=2, style=dotted];
m9_2533 -> m9_2534  [key=0, style=solid];
m9_2535 -> m9_11  [key=2, style=dotted];
m9_2535 -> m9_369  [key=2, style=dotted];
m9_2535 -> m9_2536  [key=0, style=solid];
m9_2536 -> m9_11  [key=2, style=dotted];
m9_2536 -> m9_369  [key=2, style=dotted];
m9_2536 -> m9_2537  [key=0, style=solid];
m9_2531 -> m9_369  [key=2, style=dotted];
m9_2531 -> m9_2532  [key=0, style=solid];
m9_2531 -> m9_2540  [key=2, style=dotted];
m9_2531 -> m9_210  [key=2, style=dotted];
m9_2532 -> m9_2534  [key=1, style=dashed, color=darkseagreen4, label=jsonString];
m9_2532 -> m9_2533  [key=0, style=solid];
m9_2532 -> m9_351  [key=2, style=dotted];
m9_2537 -> m9_2538  [key=0, style=solid];
m9_2538 -> m9_2539  [key=0, style=solid];
m9_2538 -> m9_1137  [key=2, style=dotted];
m9_2538 -> m9_2429  [key=2, style=dotted];
m9_2539 -> m9_2530  [key=0, style=bold, color=blue];
m9_3327 -> m9_3328  [key=0, style=solid];
m9_3328 -> m9_93  [key=2, style=dotted];
m9_3328 -> m9_3329  [key=0, style=solid];
m9_3328 -> m9_3330  [key=1, style=dashed, color=darkseagreen4, label=list];
m9_3328 -> m9_3331  [key=1, style=dashed, color=darkseagreen4, label=list];
m9_3328 -> m9_3332  [key=1, style=dashed, color=darkseagreen4, label=list];
m9_3329 -> m9_11  [key=2, style=dotted];
m9_3329 -> m9_3330  [key=0, style=solid];
m9_3330 -> m9_11  [key=2, style=dotted];
m9_3330 -> m9_3331  [key=0, style=solid];
m9_3331 -> m9_11  [key=2, style=dotted];
m9_3331 -> m9_3332  [key=0, style=solid];
m9_3332 -> m9_11  [key=2, style=dotted];
m9_3332 -> m9_3333  [key=0, style=solid];
m9_3333 -> m9_3327  [key=0, style=bold, color=blue];
m9_1437 -> m9_1438  [key=0, style=solid];
m9_1440 -> m9_11  [key=2, style=dotted];
m9_1440 -> m9_1441  [key=0, style=solid];
m9_1443 -> m9_11  [key=2, style=dotted];
m9_1443 -> m9_1444  [key=0, style=solid];
m9_1439 -> m9_1440  [key=0, style=solid];
m9_1439 -> m9_351  [key=2, style=dotted];
m9_1441 -> m9_1442  [key=0, style=solid];
m9_1441 -> m9_1446  [key=2, style=dotted];
m9_1442 -> m9_1443  [key=0, style=solid];
m9_1442 -> m9_351  [key=2, style=dotted];
m9_1438 -> m9_1439  [key=0, style=solid];
m9_1438 -> m9_1445  [key=2, style=dotted];
m9_1444 -> m9_1437  [key=0, style=bold, color=blue];
m9_2864 -> m9_2865  [key=0, style=solid];
m9_2870 -> m9_11  [key=2, style=dotted];
m9_2870 -> m9_2871  [key=0, style=solid];
m9_2868 -> m9_2870  [key=1, style=dashed, color=darkseagreen4, label=o];
m9_2868 -> m9_2869  [key=0, style=solid];
m9_2868 -> m9_282  [key=2, style=dotted];
m9_2868 -> m9_283  [key=2, style=dotted];
m9_2868 -> m9_2548  [key=2, style=dotted];
m9_2869 -> m9_2870  [key=0, style=solid];
m9_2869 -> m9_686  [key=2, style=dotted];
m9_2871 -> m9_2872  [key=0, style=solid];
m9_2865 -> m9_2868  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_2865 -> m9_2866  [key=0, style=solid];
m9_2865 -> m9_2873  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_2865 -> m9_2876  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_2867 -> m9_2868  [key=0, style=solid];
m9_2867 -> m9_2547  [key=2, style=dotted];
m9_2866 -> m9_2871  [key=1, style=dashed, color=darkseagreen4, label=settings];
m9_2866 -> m9_214  [key=2, style=dotted];
m9_2866 -> m9_2867  [key=0, style=solid];
m9_2866 -> m9_2872  [key=1, style=dashed, color=darkseagreen4, label=settings];
m9_2872 -> m9_2873  [key=0, style=solid];
m9_2872 -> m9_2547  [key=2, style=dotted];
m9_2872 -> m9_2876  [key=1, style=dashed, color=darkseagreen4, label=s];
m9_2873 -> m9_140  [key=2, style=dotted];
m9_2873 -> m9_2874  [key=0, style=solid];
m9_2873 -> m9_2875  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_2874 -> m9_2864  [key=0, style=bold, color=blue];
m9_1762 -> m9_1763  [key=0, style=solid];
m9_1769 -> m9_93  [key=2, style=dotted];
m9_1769 -> m9_1770  [key=0, style=solid];
m9_1769 -> m9_1771  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m9_1769 -> m9_1772  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m9_1769 -> m9_1773  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m9_1769 -> m9_1774  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m9_1769 -> m9_1775  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m9_1782 -> m9_93  [key=2, style=dotted];
m9_1782 -> m9_1783  [key=0, style=solid];
m9_1782 -> m9_1784  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m9_1782 -> m9_1785  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m9_1782 -> m9_1786  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m9_1782 -> m9_1787  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m9_1782 -> m9_1788  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m9_1782 -> m9_1789  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m9_1768 -> m9_11  [key=2, style=dotted];
m9_1768 -> m9_1769  [key=0, style=solid];
m9_1775 -> m9_11  [key=2, style=dotted];
m9_1775 -> m9_1776  [key=0, style=solid];
m9_1781 -> m9_11  [key=2, style=dotted];
m9_1781 -> m9_1782  [key=0, style=solid];
m9_1783 -> m9_11  [key=2, style=dotted];
m9_1783 -> m9_1784  [key=0, style=solid];
m9_1788 -> m9_11  [key=2, style=dotted];
m9_1788 -> m9_1789  [key=0, style=solid];
m9_1789 -> m9_11  [key=2, style=dotted];
m9_1789 -> m9_1790  [key=0, style=solid];
m9_1767 -> m9_1769  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_1767 -> m9_1768  [key=0, style=solid];
m9_1767 -> m9_351  [key=2, style=dotted];
m9_1770 -> m9_1771  [key=0, style=solid];
m9_1770 -> m9_1519  [key=2, style=dotted];
m9_1771 -> m9_1772  [key=0, style=solid];
m9_1771 -> m9_1792  [key=2, style=dotted];
m9_1772 -> m9_1773  [key=0, style=solid];
m9_1772 -> m9_1792  [key=2, style=dotted];
m9_1773 -> m9_1774  [key=0, style=solid];
m9_1773 -> m9_1792  [key=2, style=dotted];
m9_1774 -> m9_1775  [key=0, style=solid];
m9_1774 -> m9_1792  [key=2, style=dotted];
m9_1780 -> m9_1782  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_1780 -> m9_1781  [key=0, style=solid];
m9_1780 -> m9_351  [key=2, style=dotted];
m9_1784 -> m9_1785  [key=0, style=solid];
m9_1784 -> m9_1793  [key=2, style=dotted];
m9_1785 -> m9_1786  [key=0, style=solid];
m9_1785 -> m9_1793  [key=2, style=dotted];
m9_1786 -> m9_1787  [key=0, style=solid];
m9_1786 -> m9_1793  [key=2, style=dotted];
m9_1787 -> m9_1788  [key=0, style=solid];
m9_1787 -> m9_1793  [key=2, style=dotted];
m9_1776 -> m9_1777  [key=0, style=solid];
m9_1763 -> m9_1767  [key=1, style=dashed, color=darkseagreen4, label=c];
m9_1763 -> m9_1780  [key=1, style=dashed, color=darkseagreen4, label=c];
m9_1763 -> m9_1776  [key=1, style=dashed, color=darkseagreen4, label=c];
m9_1763 -> m9_1764  [key=0, style=solid];
m9_1763 -> m9_1791  [key=2, style=dotted];
m9_1763 -> m9_1765  [key=1, style=dashed, color=darkseagreen4, label=c];
m9_1763 -> m9_1766  [key=1, style=dashed, color=darkseagreen4, label=c];
m9_1763 -> m9_1777  [key=1, style=dashed, color=darkseagreen4, label=c];
m9_1763 -> m9_1778  [key=1, style=dashed, color=darkseagreen4, label=c];
m9_1763 -> m9_1779  [key=1, style=dashed, color=darkseagreen4, label=c];
m9_1766 -> m9_1767  [key=0, style=solid];
m9_1779 -> m9_1780  [key=0, style=solid];
m9_1777 -> m9_1778  [key=0, style=solid];
m9_1764 -> m9_1765  [key=0, style=solid];
m9_1765 -> m9_1766  [key=0, style=solid];
m9_1778 -> m9_1779  [key=0, style=solid];
m9_1790 -> m9_1762  [key=0, style=bold, color=blue];
m9_79 -> m9_80  [key=0, style=solid];
m9_79 -> m9_83  [key=2, style=dotted];
m9_2018 -> m9_2019  [key=0, style=solid];
m9_2019 -> m9_214  [key=2, style=dotted];
m9_2019 -> m9_474  [key=2, style=dotted];
m9_2019 -> m9_2020  [key=0, style=solid];
m9_2020 -> m9_2018  [key=0, style=bold, color=blue];
m9_2603 -> m9_2604  [key=0, style=solid];
m9_2604 -> m9_2606  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_2604 -> m9_2605  [key=0, style=solid];
m9_2604 -> m9_140  [key=2, style=dotted];
m9_2605 -> m9_2603  [key=0, style=bold, color=blue];
m9_129 -> m9_130  [key=0, style=solid];
m9_129 -> m9_131  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m9_129 -> m9_133  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ImplementsGenericDefinition"];
m9_130 -> m9_131  [key=0, style=solid];
m9_130 -> m9_9  [key=2, style=dotted];
m9_130 -> m9_132  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m9_131 -> m9_132  [key=0, style=solid];
m9_131 -> m9_133  [key=2, style=dotted];
m9_131 -> m9_11  [key=2, style=dotted];
m9_132 -> m9_129  [key=0, style=bold, color=blue];
m9_132 -> m9_93  [key=2, style=dotted];
m9_132 -> m9_133  [key=0, style=solid];
m9_132 -> m9_134  [key=1, style=dashed, color=darkseagreen4, label=test2];
m9_642 -> m9_643  [key=0, style=solid];
m9_644 -> m9_93  [key=2, style=dotted];
m9_644 -> m9_645  [key=0, style=solid];
m9_643 -> m9_644  [key=0, style=solid];
m9_645 -> m9_642  [key=0, style=bold, color=blue];
m9_1156 -> m9_1157  [key=0, style=solid];
m9_1157 -> m9_93  [key=2, style=dotted];
m9_1157 -> m9_1158  [key=0, style=solid];
m9_1157 -> m9_1159  [key=1, style=dashed, color=darkseagreen4, label=d];
m9_1157 -> m9_1160  [key=1, style=dashed, color=darkseagreen4, label=d];
m9_1157 -> m9_1161  [key=1, style=dashed, color=darkseagreen4, label=d];
m9_1157 -> m9_1162  [key=1, style=dashed, color=darkseagreen4, label=d];
m9_1157 -> m9_1163  [key=1, style=dashed, color=darkseagreen4, label=d];
m9_1157 -> m9_1164  [key=1, style=dashed, color=darkseagreen4, label=d];
m9_1157 -> m9_1165  [key=1, style=dashed, color=darkseagreen4, label=d];
m9_1157 -> m9_1166  [key=1, style=dashed, color=darkseagreen4, label=d];
m9_1160 -> m9_11  [key=2, style=dotted];
m9_1160 -> m9_1161  [key=0, style=solid];
m9_1160 -> m9_1168  [key=2, style=dotted];
m9_1161 -> m9_11  [key=2, style=dotted];
m9_1161 -> m9_1162  [key=0, style=solid];
m9_1161 -> m9_1168  [key=2, style=dotted];
m9_1162 -> m9_11  [key=2, style=dotted];
m9_1162 -> m9_1163  [key=0, style=solid];
m9_1163 -> m9_11  [key=2, style=dotted];
m9_1163 -> m9_1164  [key=0, style=solid];
m9_1164 -> m9_11  [key=2, style=dotted];
m9_1164 -> m9_1165  [key=0, style=solid];
m9_1165 -> m9_11  [key=2, style=dotted];
m9_1165 -> m9_1166  [key=0, style=solid];
m9_1166 -> m9_11  [key=2, style=dotted];
m9_1166 -> m9_1167  [key=0, style=solid];
m9_1158 -> m9_1159  [key=0, style=solid];
m9_1158 -> m9_686  [key=2, style=dotted];
m9_1159 -> m9_1160  [key=0, style=solid];
m9_1159 -> m9_686  [key=2, style=dotted];
m9_1167 -> m9_1156  [key=0, style=bold, color=blue];
m9_37 -> m9_35  [key=0, style=bold, color=blue];
m9_987 -> m9_988  [key=0, style=solid];
m9_988 -> m9_992  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_988 -> m9_989  [key=0, style=solid];
m9_989 -> m9_991  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_989 -> m9_990  [key=0, style=solid];
m9_989 -> m9_140  [key=2, style=dotted];
m9_990 -> m9_987  [key=0, style=bold, color=blue];
m9_468 -> m9_11  [key=2, style=dotted];
m9_468 -> m9_469  [key=0, style=solid];
m9_21 -> m9_11  [key=2, style=dotted];
m9_21 -> m9_22  [key=0, style=solid];
m9_21 -> m9_26  [key=0, style=solid];
m9_21 -> m9_27  [key=2, style=dotted];
m9_22 -> m9_11  [key=2, style=dotted];
m9_22 -> m9_23  [key=0, style=solid];
m9_22 -> m9_29  [key=2, style=dotted];
m9_22 -> m9_16  [key=2, style=dotted];
m9_22 -> m9_24  [key=1, style=dashed, color=darkseagreen4, label=m];
m9_23 -> m9_11  [key=2, style=dotted];
m9_23 -> m9_24  [key=0, style=solid];
m9_23 -> m9_25  [key=0, style=solid];
m9_24 -> m9_11  [key=2, style=dotted];
m9_24 -> m9_25  [key=0, style=solid];
m9_24 -> m9_26  [key=0, style=solid];
m9_24 -> m9_27  [key=2, style=dotted];
m9_25 -> m9_11  [key=2, style=dotted];
m9_25 -> m9_26  [key=0, style=solid];
m9_26 -> m9_11  [key=2, style=dotted];
m9_26 -> m9_27  [key=0, style=solid];
m9_26 -> m9_17  [key=0, style=bold, color=blue];
m9_19 -> m9_9  [key=2, style=dotted];
m9_19 -> m9_20  [key=0, style=solid];
m9_19 -> m9_15  [key=2, style=dotted];
m9_19 -> m9_21  [key=1, style=dashed, color=darkseagreen4, label=m];
m9_20 -> m9_21  [key=0, style=solid];
m9_20 -> m9_22  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m9_20 -> m9_23  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m9_20 -> m9_24  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m9_20 -> m9_25  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m9_20 -> m9_26  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m9_20 -> m9_10  [key=2, style=dotted];
m9_14 -> m9_19  [key=1, style=dashed, color=darkseagreen4, label=product];
m9_14 -> m9_15  [key=0, style=solid];
m9_14 -> m9_28  [key=2, style=dotted];
m9_14 -> m9_16  [key=1, style=dashed, color=darkseagreen4, label=product];
m9_14 -> m9_17  [key=1, style=dashed, color=darkseagreen4, label=product];
m9_14 -> m9_18  [key=1, style=dashed, color=darkseagreen4, label=product];
m9_18 -> m9_19  [key=0, style=solid];
m9_18 -> m9_13  [key=2, style=dotted];
m9_18 -> m9_14  [key=2, style=dotted];
m9_16 -> m9_29  [key=2, style=dotted];
m9_16 -> m9_17  [key=0, style=solid];
m9_17 -> m9_18  [key=0, style=solid];
m9_17 -> m9_19  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.PropertyInfo"];
m9_17 -> m9_22  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.PropertyInfo"];
m9_17 -> m9_25  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Reflection.MethodInfo GetBaseDefinition"];
m9_27 -> m9_13  [key=0, style=bold, color=blue];
m9_1915 -> m9_1916  [key=0, style=solid];
m9_1924 -> m9_93  [key=2, style=dotted];
m9_1924 -> m9_1925  [key=0, style=solid];
m9_1924 -> m9_1926  [key=1, style=dashed, color=darkseagreen4, label=newExpando];
m9_1924 -> m9_1927  [key=1, style=dashed, color=darkseagreen4, label=newExpando];
m9_1924 -> m9_1928  [key=1, style=dashed, color=darkseagreen4, label=newExpando];
m9_1924 -> m9_1929  [key=1, style=dashed, color=darkseagreen4, label=newExpando];
m9_1924 -> m9_1930  [key=1, style=dashed, color=darkseagreen4, label=newExpando];
m9_1926 -> m9_11  [key=2, style=dotted];
m9_1926 -> m9_1927  [key=0, style=solid];
m9_1928 -> m9_11  [key=2, style=dotted];
m9_1928 -> m9_1929  [key=0, style=solid];
m9_1932 -> m9_11  [key=2, style=dotted];
m9_1932 -> m9_1933  [key=0, style=solid];
m9_1934 -> m9_11  [key=2, style=dotted];
m9_1934 -> m9_1935  [key=0, style=solid];
m9_1923 -> m9_11  [key=2, style=dotted];
m9_1923 -> m9_1924  [key=0, style=solid];
m9_1922 -> m9_1924  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_1922 -> m9_1923  [key=0, style=solid];
m9_1922 -> m9_1937  [key=2, style=dotted];
m9_1925 -> m9_1926  [key=0, style=solid];
m9_1925 -> m9_891  [key=2, style=dotted];
m9_1927 -> m9_1928  [key=0, style=solid];
m9_1927 -> m9_891  [key=2, style=dotted];
m9_1929 -> m9_1930  [key=0, style=solid];
m9_1929 -> m9_891  [key=2, style=dotted];
m9_1930 -> m9_1932  [key=1, style=dashed, color=darkseagreen4, label=o];
m9_1930 -> m9_1934  [key=1, style=dashed, color=darkseagreen4, label=o];
m9_1930 -> m9_1931  [key=0, style=solid];
m9_1930 -> m9_1933  [key=1, style=dashed, color=darkseagreen4, label=o];
m9_1916 -> m9_1926  [key=1, style=dashed, color=darkseagreen4, label=expando];
m9_1916 -> m9_1928  [key=1, style=dashed, color=darkseagreen4, label=expando];
m9_1916 -> m9_1932  [key=1, style=dashed, color=darkseagreen4, label=expando];
m9_1916 -> m9_1934  [key=1, style=dashed, color=darkseagreen4, label=expando];
m9_1916 -> m9_1922  [key=1, style=dashed, color=darkseagreen4, label=expando];
m9_1916 -> m9_1917  [key=0, style=solid];
m9_1916 -> m9_1936  [key=2, style=dotted];
m9_1916 -> m9_1918  [key=1, style=dashed, color=darkseagreen4, label=expando];
m9_1916 -> m9_1919  [key=1, style=dashed, color=darkseagreen4, label=expando];
m9_1916 -> m9_1920  [key=1, style=dashed, color=darkseagreen4, label=expando];
m9_1916 -> m9_1921  [key=1, style=dashed, color=darkseagreen4, label=expando];
m9_1931 -> m9_1932  [key=0, style=solid];
m9_1931 -> m9_891  [key=2, style=dotted];
m9_1933 -> m9_1934  [key=0, style=solid];
m9_1933 -> m9_891  [key=2, style=dotted];
m9_1921 -> m9_1922  [key=0, style=solid];
m9_1921 -> m9_210  [key=2, style=dotted];
m9_1917 -> m9_1918  [key=0, style=solid];
m9_1918 -> m9_1919  [key=0, style=solid];
m9_1919 -> m9_1936  [key=2, style=dotted];
m9_1919 -> m9_1920  [key=0, style=solid];
m9_1920 -> m9_1921  [key=0, style=solid];
m9_1935 -> m9_1915  [key=0, style=bold, color=blue];
m9_2424 -> m9_3447  [key=0, style=solid];
m9_2424 -> m9_3448  [key=1, style=dashed, color=darkseagreen4, label="byte[]"];
m9_3447 -> m9_3448  [key=0, style=solid];
m9_3448 -> m9_3449  [key=0, style=solid];
m9_3449 -> m9_2424  [key=0, style=bold, color=blue];
m9_540 -> m9_541  [key=0, style=solid];
m9_513 -> m9_505  [key=0, style=solid];
m9_513 -> m9_514  [key=0, style=solid];
m9_515 -> m9_516  [key=0, style=solid];
m9_515 -> m9_522  [key=2, style=dotted];
m9_515 -> m9_527  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_515 -> m9_513  [key=0, style=bold, color=blue];
m9_517 -> m9_505  [key=0, style=solid];
m9_517 -> m9_341  [key=2, style=dotted];
m9_517 -> m9_518  [key=0, style=solid];
m9_517 -> m9_520  [key=2, style=dotted];
m9_518 -> m9_519  [key=0, style=solid];
m9_518 -> m9_522  [key=2, style=dotted];
m9_518 -> m9_530  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_518 -> m9_9  [key=2, style=dotted];
m9_520 -> m9_505  [key=0, style=solid];
m9_520 -> m9_341  [key=2, style=dotted];
m9_514 -> m9_515  [key=0, style=solid];
m9_514 -> m9_518  [key=0, style=solid];
m9_514 -> m9_523  [key=2, style=dotted];
m9_514 -> m9_140  [key=2, style=dotted];
m9_514 -> m9_516  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_512 -> m9_513  [key=0, style=solid];
m9_512 -> m9_505  [key=0, style=solid];
m9_512 -> m9_28  [key=2, style=dotted];
m9_516 -> m9_517  [key=0, style=solid];
m9_516 -> m9_505  [key=0, style=solid];
m9_519 -> m9_520  [key=0, style=solid];
m9_519 -> m9_505  [key=0, style=solid];
m9_519 -> m9_516  [key=0, style=bold, color=blue];
m9_521 -> m9_500  [key=0, style=bold, color=blue];
m9_521 -> m9_522  [key=0, style=solid];
m9_1030 -> m9_1031  [key=0, style=solid];
m9_1032 -> m9_93  [key=2, style=dotted];
m9_1032 -> m9_1033  [key=0, style=solid];
m9_1033 -> m9_11  [key=2, style=dotted];
m9_1033 -> m9_1034  [key=0, style=solid];
m9_1031 -> m9_1032  [key=0, style=solid];
m9_1034 -> m9_1030  [key=0, style=bold, color=blue];
m9_1630 -> m9_1635  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_1630 -> m9_1637  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_1630 -> m9_1631  [key=0, style=solid];
m9_1630 -> m9_1633  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_1630 -> m9_1634  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_1636 -> m9_158  [key=2, style=dotted];
m9_1636 -> m9_1637  [key=0, style=solid];
m9_1635 -> m9_1636  [key=0, style=solid];
m9_1632 -> m9_1636  [key=1, style=dashed, color=darkseagreen4, label=newStrings];
m9_1632 -> m9_1633  [key=0, style=solid];
m9_1632 -> m9_1640  [key=2, style=dotted];
m9_1632 -> m9_1638  [key=1, style=dashed, color=darkseagreen4, label=newStrings];
m9_1637 -> m9_1634  [key=0, style=solid];
m9_1637 -> m9_1641  [key=2, style=dotted];
m9_1634 -> m9_1635  [key=0, style=solid];
m9_1634 -> m9_1638  [key=0, style=solid];
m9_1631 -> m9_1632  [key=0, style=solid];
m9_1633 -> m9_1634  [key=0, style=solid];
m9_1633 -> m9_1641  [key=2, style=dotted];
m9_1638 -> m9_1639  [key=0, style=solid];
m9_1639 -> m9_1630  [key=0, style=bold, color=blue];
m9_257 -> m9_258  [key=0, style=solid];
m9_257 -> m9_264  [key=2, style=dotted];
m9_257 -> m9_263  [key=2, style=dotted];
m9_2885 -> m9_2886  [key=0, style=solid];
m9_2886 -> m9_140  [key=2, style=dotted];
m9_2886 -> m9_2887  [key=0, style=solid];
m9_2886 -> m9_2888  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_2887 -> m9_2885  [key=0, style=bold, color=blue];
m9_196 -> m9_93  [key=2, style=dotted];
m9_196 -> m9_197  [key=0, style=solid];
m9_35 -> m9_36  [key=0, style=solid];
m9_35 -> m9_11  [key=2, style=dotted];
m9_36 -> m9_37  [key=0, style=solid];
m9_36 -> m9_38  [key=2, style=dotted];
m9_36 -> m9_30  [key=0, style=bold, color=blue];
m9_1077 -> m9_1078  [key=0, style=solid];
m9_1082 -> m9_93  [key=2, style=dotted];
m9_1082 -> m9_1083  [key=0, style=solid];
m9_1083 -> m9_11  [key=2, style=dotted];
m9_1083 -> m9_1083  [key=1, style=dashed, color=darkseagreen4, label=structTest];
m9_1083 -> m9_1084  [key=0, style=solid];
m9_1083 -> m9_1085  [key=1, style=dashed, color=darkseagreen4, label=structTest];
m9_1081 -> m9_11  [key=2, style=dotted];
m9_1081 -> m9_1082  [key=0, style=solid];
m9_1084 -> m9_11  [key=2, style=dotted];
m9_1084 -> m9_1085  [key=0, style=solid];
m9_1085 -> m9_11  [key=2, style=dotted];
m9_1085 -> m9_1085  [key=1, style=dashed, color=darkseagreen4, label=structTest];
m9_1085 -> m9_1086  [key=0, style=solid];
m9_1086 -> m9_11  [key=2, style=dotted];
m9_1086 -> m9_1087  [key=0, style=solid];
m9_1079 -> m9_1082  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_1079 -> m9_1081  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_1079 -> m9_1080  [key=0, style=solid];
m9_1079 -> m9_351  [key=2, style=dotted];
m9_1078 -> m9_1083  [key=1, style=dashed, color=darkseagreen4, label=structTest];
m9_1078 -> m9_1079  [key=0, style=solid];
m9_1078 -> m9_1088  [key=2, style=dotted];
m9_1080 -> m9_1081  [key=0, style=solid];
m9_1080 -> m9_12  [key=2, style=dotted];
m9_1087 -> m9_1077  [key=0, style=bold, color=blue];
m9_2508 -> m9_2509  [key=0, style=solid];
m9_2509 -> m9_2511  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_2509 -> m9_140  [key=2, style=dotted];
m9_2509 -> m9_2510  [key=0, style=solid];
m9_2510 -> m9_2508  [key=0, style=bold, color=blue];
m9_266 -> m9_267  [key=0, style=solid];
m9_266 -> m9_229  [key=2, style=dotted];
m9_266 -> m9_156  [key=2, style=dotted];
m9_266 -> m9_13  [key=2, style=dotted];
m9_267 -> m9_274  [key=1, style=dashed, color=darkseagreen4, label=collection];
m9_267 -> m9_267  [key=3, color=darkorchid, style=bold, label="Local variable string expected"];
m9_267 -> m9_268  [key=0, style=solid];
m9_267 -> m9_276  [key=2, style=dotted];
m9_267 -> m9_28  [key=2, style=dotted];
m9_267 -> m9_271  [key=1, style=dashed, color=darkseagreen4, label=collection];
m9_267 -> m9_258  [key=0, style=bold, color=blue];
m9_268 -> m9_273  [key=1, style=dashed, color=darkseagreen4, label=jsonSerializer];
m9_268 -> m9_271  [key=1, style=dashed, color=darkseagreen4, label=jsonSerializer];
m9_268 -> m9_269  [key=0, style=solid];
m9_268 -> m9_277  [key=2, style=dotted];
m9_269 -> m9_270  [key=0, style=solid];
m9_189 -> m9_194  [key=0, style=solid];
m9_189 -> m9_196  [key=2, style=dotted];
m9_189 -> m9_156  [key=2, style=dotted];
m9_191 -> m9_192  [key=0, style=solid];
m9_191 -> m9_193  [key=0, style=solid];
m9_191 -> m9_198  [key=2, style=dotted];
m9_192 -> m9_196  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_192 -> m9_193  [key=0, style=solid];
m9_192 -> m9_194  [key=0, style=solid];
m9_193 -> m9_195  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_193 -> m9_193  [key=3, color=darkorchid, style=bold, label="Local variable string expected"];
m9_193 -> m9_194  [key=0, style=solid];
m9_193 -> m9_140  [key=2, style=dotted];
m9_193 -> m9_196  [key=2, style=dotted];
m9_193 -> m9_156  [key=2, style=dotted];
m9_194 -> m9_191  [key=0, style=bold, color=blue];
m9_194 -> m9_182  [key=0, style=bold, color=blue];
m9_454 -> m9_446  [key=0, style=bold, color=blue];
m9_417 -> m9_418  [key=0, style=solid];
m9_697 -> m9_698  [key=0, style=solid];
m9_702 -> m9_93  [key=2, style=dotted];
m9_702 -> m9_703  [key=0, style=solid];
m9_701 -> m9_11  [key=2, style=dotted];
m9_701 -> m9_702  [key=0, style=solid];
m9_704 -> m9_11  [key=2, style=dotted];
m9_704 -> m9_705  [key=0, style=solid];
m9_700 -> m9_9  [key=2, style=dotted];
m9_700 -> m9_702  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_700 -> m9_701  [key=0, style=solid];
m9_703 -> m9_9  [key=2, style=dotted];
m9_703 -> m9_704  [key=0, style=solid];
m9_698 -> m9_700  [key=1, style=dashed, color=darkseagreen4, label=i];
m9_698 -> m9_699  [key=0, style=solid];
m9_698 -> m9_706  [key=2, style=dotted];
m9_699 -> m9_700  [key=0, style=solid];
m9_705 -> m9_697  [key=0, style=bold, color=blue];
m9_2804 -> m9_2805  [key=0, style=solid];
m9_2808 -> m9_93  [key=2, style=dotted];
m9_2808 -> m9_2809  [key=0, style=solid];
m9_2808 -> m9_2810  [key=1, style=dashed, color=darkseagreen4, label=dic2];
m9_2808 -> m9_2811  [key=1, style=dashed, color=darkseagreen4, label=dic2];
m9_2807 -> m9_11  [key=2, style=dotted];
m9_2807 -> m9_2808  [key=0, style=solid];
m9_2809 -> m9_11  [key=2, style=dotted];
m9_2809 -> m9_2810  [key=0, style=solid];
m9_2810 -> m9_11  [key=2, style=dotted];
m9_2810 -> m9_2811  [key=0, style=solid];
m9_2810 -> m9_210  [key=2, style=dotted];
m9_2811 -> m9_11  [key=2, style=dotted];
m9_2811 -> m9_2812  [key=0, style=solid];
m9_2811 -> m9_210  [key=2, style=dotted];
m9_2806 -> m9_2808  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_2806 -> m9_2807  [key=0, style=solid];
m9_2806 -> m9_214  [key=2, style=dotted];
m9_2806 -> m9_728  [key=2, style=dotted];
m9_2805 -> m9_2806  [key=0, style=solid];
m9_2805 -> m9_210  [key=2, style=dotted];
m9_2805 -> m9_52  [key=2, style=dotted];
m9_2812 -> m9_2804  [key=0, style=bold, color=blue];
m9_221 -> m9_227  [key=0, style=solid];
m9_2297 -> m9_2298  [key=0, style=solid];
m9_2301 -> m9_93  [key=2, style=dotted];
m9_2301 -> m9_2302  [key=0, style=solid];
m9_2301 -> m9_2303  [key=1, style=dashed, color=darkseagreen4, label=c2];
m9_2301 -> m9_2304  [key=1, style=dashed, color=darkseagreen4, label=c2];
m9_2301 -> m9_2305  [key=1, style=dashed, color=darkseagreen4, label=c2];
m9_2301 -> m9_2306  [key=1, style=dashed, color=darkseagreen4, label=c2];
m9_2302 -> m9_11  [key=2, style=dotted];
m9_2302 -> m9_2303  [key=0, style=solid];
m9_2303 -> m9_11  [key=2, style=dotted];
m9_2303 -> m9_2304  [key=0, style=solid];
m9_2304 -> m9_11  [key=2, style=dotted];
m9_2304 -> m9_2305  [key=0, style=solid];
m9_2305 -> m9_11  [key=2, style=dotted];
m9_2305 -> m9_2306  [key=0, style=solid];
m9_2306 -> m9_11  [key=2, style=dotted];
m9_2306 -> m9_2307  [key=0, style=solid];
m9_2300 -> m9_11  [key=2, style=dotted];
m9_2300 -> m9_2301  [key=0, style=solid];
m9_2299 -> m9_2301  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_2299 -> m9_2300  [key=0, style=solid];
m9_2299 -> m9_351  [key=2, style=dotted];
m9_2298 -> m9_2302  [key=1, style=dashed, color=darkseagreen4, label=c1];
m9_2298 -> m9_2303  [key=1, style=dashed, color=darkseagreen4, label=c1];
m9_2298 -> m9_2304  [key=1, style=dashed, color=darkseagreen4, label=c1];
m9_2298 -> m9_2305  [key=1, style=dashed, color=darkseagreen4, label=c1];
m9_2298 -> m9_2306  [key=1, style=dashed, color=darkseagreen4, label=c1];
m9_2298 -> m9_2299  [key=0, style=solid];
m9_2298 -> m9_2308  [key=2, style=dotted];
m9_2307 -> m9_2297  [key=0, style=bold, color=blue];
m9_966 -> m9_967  [key=0, style=solid];
m9_967 -> m9_971  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_967 -> m9_968  [key=0, style=solid];
m9_968 -> m9_970  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_968 -> m9_969  [key=0, style=solid];
m9_968 -> m9_140  [key=2, style=dotted];
m9_969 -> m9_966  [key=0, style=bold, color=blue];
m9_92 -> m9_93  [key=0, style=solid];
m9_92 -> m9_91  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Reflection.ConstructorInfo GetDefaultConstructor"];
m9_2996 -> m9_2997  [key=0, style=solid];
m9_2998 -> m9_93  [key=2, style=dotted];
m9_2998 -> m9_2999  [key=0, style=solid];
m9_2998 -> m9_3000  [key=1, style=dashed, color=darkseagreen4, label=l];
m9_2999 -> m9_11  [key=2, style=dotted];
m9_2999 -> m9_3000  [key=0, style=solid];
m9_3000 -> m9_11  [key=2, style=dotted];
m9_3000 -> m9_3001  [key=0, style=solid];
m9_2997 -> m9_2998  [key=0, style=solid];
m9_3001 -> m9_2996  [key=0, style=bold, color=blue];
m9_1008 -> m9_1009  [key=0, style=solid];
m9_1009 -> m9_1013  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_1009 -> m9_1010  [key=0, style=solid];
m9_1010 -> m9_1012  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_1010 -> m9_1011  [key=0, style=solid];
m9_1010 -> m9_140  [key=2, style=dotted];
m9_1011 -> m9_1008  [key=0, style=bold, color=blue];
m9_459 -> m9_11  [key=2, style=dotted];
m9_459 -> m9_460  [key=0, style=solid];
m9_1986 -> m9_1987  [key=0, style=solid];
m9_1991 -> m9_11  [key=2, style=dotted];
m9_1991 -> m9_1992  [key=0, style=solid];
m9_1992 -> m9_11  [key=2, style=dotted];
m9_1992 -> m9_1993  [key=0, style=solid];
m9_1990 -> m9_1991  [key=0, style=solid];
m9_1990 -> m9_1992  [key=1, style=dashed, color=darkseagreen4, label=meh];
m9_1990 -> m9_474  [key=2, style=dotted];
m9_1988 -> m9_1990  [key=1, style=dashed, color=darkseagreen4, label=settings];
m9_1988 -> m9_214  [key=2, style=dotted];
m9_1988 -> m9_1989  [key=0, style=solid];
m9_1989 -> m9_1990  [key=0, style=solid];
m9_1989 -> m9_728  [key=2, style=dotted];
m9_1987 -> m9_1988  [key=0, style=solid];
m9_1987 -> m9_1989  [key=1, style=dashed, color=darkseagreen4, label=derived];
m9_1987 -> m9_1978  [key=2, style=dotted];
m9_1993 -> m9_1986  [key=0, style=bold, color=blue];
m9_994 -> m9_995  [key=0, style=solid];
m9_995 -> m9_999  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_995 -> m9_996  [key=0, style=solid];
m9_996 -> m9_998  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_996 -> m9_997  [key=0, style=solid];
m9_996 -> m9_140  [key=2, style=dotted];
m9_997 -> m9_994  [key=0, style=bold, color=blue];
m9_237 -> m9_238  [key=0, style=solid];
m9_237 -> m9_239  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.PropertyInfo"];
m9_237 -> m9_232  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Reflection.PropertyInfo property"];
m9_237 -> m9_229  [key=0, style=bold, color=blue];
m9_2970 -> m9_2971  [key=0, style=solid];
m9_2971 -> m9_2972  [key=0, style=solid];
m9_2972 -> m9_2970  [key=0, style=bold, color=blue];
m9_2194 -> m9_2195  [key=0, style=solid];
m9_2196 -> m9_52  [key=2, style=dotted];
m9_2196 -> m9_2197  [key=0, style=solid];
m9_2195 -> m9_2196  [key=0, style=solid];
m9_2197 -> m9_2194  [key=0, style=bold, color=blue];
m9_366 -> m9_367  [key=0, style=solid];
m9_366 -> m9_369  [key=3, color=darkorchid, style=bold, label="method methodReturn T GetAttribute"];
m9_366 -> m9_93  [key=2, style=dotted];
m9_367 -> m9_368  [key=0, style=solid];
m9_367 -> m9_369  [key=2, style=dotted];
m9_367 -> m9_11  [key=2, style=dotted];
m9_368 -> m9_366  [key=0, style=bold, color=blue];
m9_368 -> m9_362  [key=0, style=bold, color=blue];
m9_1956 -> m9_1957  [key=0, style=solid];
m9_1958 -> m9_93  [key=2, style=dotted];
m9_1958 -> m9_1959  [key=0, style=solid];
m9_1959 -> m9_11  [key=2, style=dotted];
m9_1959 -> m9_1960  [key=0, style=solid];
m9_1957 -> m9_1958  [key=0, style=solid];
m9_1960 -> m9_1956  [key=0, style=bold, color=blue];
m9_229 -> m9_230  [key=0, style=solid];
m9_2245 -> m9_2246  [key=0, style=solid];
m9_2246 -> m9_2247  [key=0, style=solid];
m9_2247 -> m9_2245  [key=0, style=bold, color=blue];
m9_144 -> m9_145  [key=0, style=solid];
m9_144 -> m9_150  [key=0, style=solid];
m9_144 -> m9_157  [key=2, style=dotted];
m9_144 -> m9_146  [key=1, style=dashed, color=darkseagreen4, label=i];
m9_144 -> m9_148  [key=1, style=dashed, color=darkseagreen4, label=i];
m9_377 -> m9_378  [key=0, style=solid];
m9_377 -> m9_379  [key=0, style=solid];
m9_381 -> m9_93  [key=2, style=dotted];
m9_381 -> m9_382  [key=0, style=solid];
m9_381 -> m9_384  [key=0, style=solid];
m9_381 -> m9_385  [key=1, style=dashed, color=darkseagreen4, label=object];
m9_381 -> m9_388  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m9_381 -> m9_393  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m9_381 -> m9_396  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m9_381 -> m9_399  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m9_381 -> m9_402  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m9_381 -> m9_403  [key=1, style=dashed, color=darkseagreen4, label=object];
m9_381 -> m9_404  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m9_381 -> m9_373  [key=3, color=darkorchid, style=bold, label="Parameter variable bool inherit"];
m9_381 -> m9_389  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Attribute[] GetAttributes"];
m9_380 -> m9_11  [key=2, style=dotted];
m9_380 -> m9_381  [key=0, style=solid];
m9_380 -> m9_373  [key=0, style=bold, color=blue];
m9_379 -> m9_381  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_379 -> m9_380  [key=0, style=solid];
m9_379 -> m9_385  [key=2, style=dotted];
m9_379 -> m9_351  [key=2, style=dotted];
m9_379 -> m9_382  [key=2, style=dotted];
m9_379 -> m9_383  [key=2, style=dotted];
m9_378 -> m9_382  [key=1, style=dashed, color=darkseagreen4, label=ts];
m9_378 -> m9_379  [key=0, style=solid];
m9_378 -> m9_384  [key=2, style=dotted];
m9_378 -> m9_380  [key=0, style=solid];
m9_383 -> m9_377  [key=0, style=bold, color=blue];
m9_195 -> m9_196  [key=0, style=solid];
m9_3002 -> m9_3003  [key=0, style=solid];
m9_3005 -> m9_11  [key=2, style=dotted];
m9_3005 -> m9_3006  [key=0, style=solid];
m9_3009 -> m9_11  [key=2, style=dotted];
m9_3009 -> m9_3010  [key=0, style=solid];
m9_3004 -> m9_9  [key=2, style=dotted];
m9_3004 -> m9_3013  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_3004 -> m9_3005  [key=0, style=solid];
m9_3004 -> m9_3007  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_3006 -> m9_3007  [key=0, style=solid];
m9_3008 -> m9_3009  [key=0, style=solid];
m9_3008 -> m9_3011  [key=2, style=dotted];
m9_3003 -> m9_3004  [key=0, style=solid];
m9_3003 -> m9_2970  [key=2, style=dotted];
m9_3007 -> m9_3008  [key=0, style=solid];
m9_3010 -> m9_3002  [key=0, style=bold, color=blue];
m9_1316 -> m9_1317  [key=0, style=solid];
m9_1316 -> m9_1318  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m9_1316 -> m9_1319  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m9_1316 -> m9_1320  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m9_1316 -> m9_1321  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m9_1316 -> m9_1322  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m9_1316 -> m9_1323  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m9_1316 -> m9_1324  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m9_1316 -> m9_1325  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m9_1316 -> m9_1326  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m9_1316 -> m9_1327  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m9_1316 -> m9_1328  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m9_1316 -> m9_1329  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m9_1316 -> m9_1330  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m9_1316 -> m9_1331  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m9_1316 -> m9_1332  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m9_1316 -> m9_1333  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m9_1316 -> m9_1334  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m9_1317 -> m9_1318  [key=0, style=solid];
m9_1317 -> m9_1336  [key=2, style=dotted];
m9_1318 -> m9_1319  [key=0, style=solid];
m9_1318 -> m9_1337  [key=2, style=dotted];
m9_1319 -> m9_1320  [key=0, style=solid];
m9_1319 -> m9_1338  [key=2, style=dotted];
m9_1320 -> m9_1321  [key=0, style=solid];
m9_1320 -> m9_1338  [key=2, style=dotted];
m9_1321 -> m9_1322  [key=0, style=solid];
m9_1321 -> m9_1338  [key=2, style=dotted];
m9_1322 -> m9_1323  [key=0, style=solid];
m9_1322 -> m9_1338  [key=2, style=dotted];
m9_1323 -> m9_1324  [key=0, style=solid];
m9_1323 -> m9_1339  [key=2, style=dotted];
m9_1324 -> m9_1325  [key=0, style=solid];
m9_1324 -> m9_1340  [key=2, style=dotted];
m9_1325 -> m9_1326  [key=0, style=solid];
m9_1325 -> m9_1341  [key=2, style=dotted];
m9_1326 -> m9_1327  [key=0, style=solid];
m9_1326 -> m9_1342  [key=2, style=dotted];
m9_1327 -> m9_1328  [key=0, style=solid];
m9_1327 -> m9_1343  [key=2, style=dotted];
m9_1328 -> m9_1329  [key=0, style=solid];
m9_1328 -> m9_1344  [key=2, style=dotted];
m9_1329 -> m9_1330  [key=0, style=solid];
m9_1329 -> m9_1345  [key=2, style=dotted];
m9_1330 -> m9_1331  [key=0, style=solid];
m9_1330 -> m9_1346  [key=2, style=dotted];
m9_1331 -> m9_1332  [key=0, style=solid];
m9_1331 -> m9_1347  [key=2, style=dotted];
m9_1332 -> m9_1333  [key=0, style=solid];
m9_1332 -> m9_1348  [key=2, style=dotted];
m9_1333 -> m9_1334  [key=0, style=solid];
m9_1333 -> m9_1349  [key=2, style=dotted];
m9_1334 -> m9_1335  [key=0, style=solid];
m9_1334 -> m9_1350  [key=2, style=dotted];
m9_1335 -> m9_1316  [key=0, style=bold, color=blue];
m9_2541 -> m9_2542  [key=0, style=solid];
m9_2544 -> m9_11  [key=2, style=dotted];
m9_2544 -> m9_2545  [key=0, style=solid];
m9_2545 -> m9_11  [key=2, style=dotted];
m9_2545 -> m9_2546  [key=0, style=solid];
m9_2543 -> m9_2544  [key=0, style=solid];
m9_2543 -> m9_2545  [key=1, style=dashed, color=darkseagreen4, label=dict];
m9_2543 -> m9_282  [key=2, style=dotted];
m9_2543 -> m9_283  [key=2, style=dotted];
m9_2543 -> m9_2548  [key=2, style=dotted];
m9_2542 -> m9_2543  [key=0, style=solid];
m9_2542 -> m9_214  [key=2, style=dotted];
m9_2542 -> m9_2547  [key=2, style=dotted];
m9_2546 -> m9_2541  [key=0, style=bold, color=blue];
m9_2813 -> m9_2814  [key=0, style=solid];
m9_2815 -> m9_11  [key=2, style=dotted];
m9_2815 -> m9_2816  [key=0, style=solid];
m9_2814 -> m9_2815  [key=0, style=solid];
m9_2814 -> m9_277  [key=2, style=dotted];
m9_2814 -> m9_282  [key=2, style=dotted];
m9_2814 -> m9_283  [key=2, style=dotted];
m9_2814 -> m9_2428  [key=2, style=dotted];
m9_2816 -> m9_2813  [key=0, style=bold, color=blue];
m9_2926 -> m9_2927  [key=0, style=solid];
m9_2927 -> m9_93  [key=2, style=dotted];
m9_2927 -> m9_2928  [key=0, style=solid];
m9_2928 -> m9_11  [key=2, style=dotted];
m9_2928 -> m9_2928  [key=1, style=dashed, color=darkseagreen4, label=result];
m9_2928 -> m9_2929  [key=0, style=solid];
m9_2929 -> m9_11  [key=2, style=dotted];
m9_2929 -> m9_2929  [key=1, style=dashed, color=darkseagreen4, label=result];
m9_2929 -> m9_2930  [key=0, style=solid];
m9_2930 -> m9_2926  [key=0, style=bold, color=blue];
m9_360 -> m9_361  [key=0, style=solid];
m9_360 -> m9_215  [key=2, style=dotted];
m9_93 -> m9_94  [key=0, style=solid];
m9_93 -> m9_91  [key=2, style=dotted];
m9_94 -> m9_92  [key=0, style=bold, color=blue];
m9_94 -> m9_95  [key=0, style=solid];
m9_1243 -> m9_1244  [key=0, style=solid];
m9_1244 -> m9_1243  [key=0, style=bold, color=blue];
m9_657 -> m9_658  [key=0, style=solid];
m9_658 -> m9_210  [key=2, style=dotted];
m9_658 -> m9_659  [key=0, style=solid];
m9_658 -> m9_661  [key=2, style=dotted];
m9_659 -> m9_660  [key=0, style=solid];
m9_660 -> m9_657  [key=0, style=bold, color=blue];
m9_122 -> m9_115  [key=0, style=bold, color=blue];
m9_3111 -> m9_3112  [key=0, style=solid];
m9_3112 -> m9_3116  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_3112 -> m9_3113  [key=0, style=solid];
m9_3113 -> m9_3115  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_3113 -> m9_3114  [key=0, style=solid];
m9_3113 -> m9_140  [key=2, style=dotted];
m9_3114 -> m9_3111  [key=0, style=bold, color=blue];
m9_99 -> m9_91  [key=0, style=bold, color=blue];
m9_3292 -> m9_3293  [key=0, style=solid];
m9_3301 -> m9_11  [key=2, style=dotted];
m9_3301 -> m9_3302  [key=0, style=solid];
m9_3300 -> m9_3301  [key=0, style=solid];
m9_3300 -> m9_351  [key=2, style=dotted];
m9_3293 -> m9_3300  [key=1, style=dashed, color=darkseagreen4, label=joe];
m9_3293 -> m9_3294  [key=0, style=solid];
m9_3293 -> m9_3303  [key=2, style=dotted];
m9_3293 -> m9_3295  [key=1, style=dashed, color=darkseagreen4, label=joe];
m9_3293 -> m9_3299  [key=1, style=dashed, color=darkseagreen4, label=joe];
m9_3299 -> m9_3300  [key=0, style=solid];
m9_3294 -> m9_3295  [key=0, style=solid];
m9_3295 -> m9_3296  [key=0, style=solid];
m9_3296 -> m9_3299  [key=1, style=dashed, color=darkseagreen4, label=mike];
m9_3296 -> m9_3297  [key=0, style=solid];
m9_3296 -> m9_1761  [key=2, style=dotted];
m9_3296 -> m9_3298  [key=1, style=dashed, color=darkseagreen4, label=mike];
m9_3298 -> m9_3299  [key=0, style=solid];
m9_3297 -> m9_3298  [key=0, style=solid];
m9_3302 -> m9_3292  [key=0, style=bold, color=blue];
m9_614 -> m9_615  [key=0, style=solid];
m9_615 -> m9_617  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_615 -> m9_140  [key=2, style=dotted];
m9_615 -> m9_615  [key=3, color=darkorchid, style=bold, label="Field variable string EscapedUnicodeText"];
m9_615 -> m9_616  [key=0, style=solid];
m9_615 -> m9_607  [key=3, color=darkorchid, style=bold, label="Parameter variable char delimiter"];
m9_616 -> m9_614  [key=0, style=bold, color=blue];
m9_606 -> m9_607  [key=0, style=solid];
m9_607 -> m9_140  [key=2, style=dotted];
m9_607 -> m9_609  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_607 -> m9_607  [key=3, color=darkorchid, style=bold, label="Local variable char c"];
m9_607 -> m9_608  [key=0, style=solid];
m9_608 -> m9_606  [key=0, style=bold, color=blue];
m9_1997 -> m9_1998  [key=0, style=solid];
m9_1998 -> m9_1371  [key=2, style=dotted];
m9_1998 -> m9_1999  [key=0, style=solid];
m9_1999 -> m9_1997  [key=0, style=bold, color=blue];
m9_158 -> m9_159  [key=0, style=solid];
m9_158 -> m9_160  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m9_158 -> m9_162  [key=3, color=darkorchid, style=bold, label="method methodReturn bool InheritsGenericDefinition"];
m9_340 -> m9_341  [key=0, style=solid];
m9_2657 -> m9_2658  [key=0, style=solid];
m9_2662 -> m9_93  [key=2, style=dotted];
m9_2662 -> m9_2663  [key=0, style=solid];
m9_2663 -> m9_11  [key=2, style=dotted];
m9_2663 -> m9_2664  [key=0, style=solid];
m9_2661 -> m9_9  [key=2, style=dotted];
m9_2661 -> m9_2662  [key=0, style=solid];
m9_2658 -> m9_2663  [key=1, style=dashed, color=darkseagreen4, label=person];
m9_2658 -> m9_2661  [key=1, style=dashed, color=darkseagreen4, label=person];
m9_2658 -> m9_2659  [key=0, style=solid];
m9_2658 -> m9_2665  [key=2, style=dotted];
m9_2658 -> m9_2660  [key=1, style=dashed, color=darkseagreen4, label=person];
m9_2660 -> m9_2661  [key=0, style=solid];
m9_2659 -> m9_2660  [key=0, style=solid];
m9_2664 -> m9_2657  [key=0, style=bold, color=blue];
m9_811 -> m9_812  [key=0, style=solid];
m9_814 -> m9_11  [key=2, style=dotted];
m9_814 -> m9_815  [key=0, style=solid];
m9_815 -> m9_11  [key=2, style=dotted];
m9_815 -> m9_816  [key=0, style=solid];
m9_815 -> m9_210  [key=2, style=dotted];
m9_816 -> m9_11  [key=2, style=dotted];
m9_816 -> m9_817  [key=0, style=solid];
m9_817 -> m9_11  [key=2, style=dotted];
m9_817 -> m9_818  [key=0, style=solid];
m9_818 -> m9_11  [key=2, style=dotted];
m9_818 -> m9_819  [key=0, style=solid];
m9_819 -> m9_11  [key=2, style=dotted];
m9_819 -> m9_820  [key=0, style=solid];
m9_813 -> m9_814  [key=0, style=solid];
m9_813 -> m9_815  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m9_813 -> m9_816  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m9_813 -> m9_817  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m9_813 -> m9_818  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m9_813 -> m9_819  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m9_813 -> m9_10  [key=2, style=dotted];
m9_812 -> m9_813  [key=0, style=solid];
m9_820 -> m9_811  [key=0, style=bold, color=blue];
m9_3151 -> m9_3152  [key=0, style=solid];
m9_3152 -> m9_3156  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_3152 -> m9_3153  [key=0, style=solid];
m9_3153 -> m9_3155  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_3153 -> m9_3154  [key=0, style=solid];
m9_3153 -> m9_140  [key=2, style=dotted];
m9_3154 -> m9_3151  [key=0, style=bold, color=blue];
m9_0 -> m9_1  [key=0, style=solid];
m9_2 -> m9_9  [key=2, style=dotted];
m9_2 -> m9_3  [key=0, style=solid];
m9_2 -> m9_6  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m9_2 -> m9_0  [key=0, style=bold, color=blue];
m9_1 -> m9_4  [key=1, style=dashed, color=darkseagreen4, label=store];
m9_1 -> m9_5  [key=1, style=dashed, color=darkseagreen4, label=store];
m9_1 -> m9_2  [key=0, style=solid];
m9_1 -> m9_8  [key=2, style=dotted];
m9_162 -> m9_163  [key=0, style=solid];
m9_162 -> m9_164  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m9_162 -> m9_165  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m9_162 -> m9_166  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m9_162 -> m9_167  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m9_162 -> m9_158  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type genericClassDefinition"];
m9_162 -> m9_159  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type implementingType"];
m9_162 -> m9_170  [key=3, color=darkorchid, style=bold, label="method methodReturn bool InheritsGenericDefinition"];
m9_162 -> m9_11  [key=2, style=dotted];
m9_163 -> m9_164  [key=0, style=solid];
m9_163 -> m9_13  [key=2, style=dotted];
m9_163 -> m9_14  [key=2, style=dotted];
m9_163 -> m9_93  [key=2, style=dotted];
m9_164 -> m9_165  [key=0, style=solid];
m9_164 -> m9_13  [key=2, style=dotted];
m9_164 -> m9_14  [key=2, style=dotted];
m9_164 -> m9_11  [key=2, style=dotted];
m9_165 -> m9_166  [key=0, style=solid];
m9_165 -> m9_167  [key=0, style=solid];
m9_165 -> m9_169  [key=2, style=dotted];
m9_165 -> m9_154  [key=2, style=dotted];
m9_165 -> m9_159  [key=0, style=bold, color=blue];
m9_166 -> m9_168  [key=0, style=solid];
m9_166 -> m9_155  [key=2, style=dotted];
m9_166 -> m9_156  [key=2, style=dotted];
m9_167 -> m9_168  [key=0, style=solid];
m9_167 -> m9_170  [key=2, style=dotted];
m9_168 -> m9_162  [key=0, style=bold, color=blue];
m9_168 -> m9_171  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_168 -> m9_169  [key=0, style=solid];
m9_168 -> m9_170  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_2842 -> m9_2843  [key=0, style=solid];
m9_2845 -> m9_11  [key=2, style=dotted];
m9_2845 -> m9_2846  [key=0, style=solid];
m9_2844 -> m9_2845  [key=0, style=solid];
m9_2844 -> m9_351  [key=2, style=dotted];
m9_2843 -> m9_2844  [key=0, style=solid];
m9_2843 -> m9_209  [key=2, style=dotted];
m9_2843 -> m9_2847  [key=2, style=dotted];
m9_2843 -> m9_2848  [key=2, style=dotted];
m9_2846 -> m9_2842  [key=0, style=bold, color=blue];
m9_2074 -> m9_2075  [key=0, style=solid];
m9_2075 -> m9_93  [key=2, style=dotted];
m9_2075 -> m9_2076  [key=0, style=solid];
m9_2075 -> m9_2077  [key=1, style=dashed, color=darkseagreen4, label=c];
m9_2075 -> m9_2078  [key=1, style=dashed, color=darkseagreen4, label=c];
m9_2076 -> m9_11  [key=2, style=dotted];
m9_2076 -> m9_2077  [key=0, style=solid];
m9_2077 -> m9_11  [key=2, style=dotted];
m9_2077 -> m9_2078  [key=0, style=solid];
m9_2078 -> m9_11  [key=2, style=dotted];
m9_2078 -> m9_2079  [key=0, style=solid];
m9_2079 -> m9_2074  [key=0, style=bold, color=blue];
m9_323 -> m9_324  [key=0, style=solid];
m9_323 -> m9_328  [key=0, style=solid];
m9_323 -> m9_325  [key=1, style=dashed, color=darkseagreen4, label=memberInfo];
m9_323 -> m9_326  [key=1, style=dashed, color=darkseagreen4, label=memberInfo];
m9_323 -> m9_327  [key=1, style=dashed, color=darkseagreen4, label=memberInfo];
m9_330 -> m9_93  [key=2, style=dotted];
m9_330 -> m9_331  [key=0, style=solid];
m9_330 -> m9_332  [key=1, style=dashed, color=darkseagreen4, label=wibbleOut];
m9_330 -> m9_333  [key=1, style=dashed, color=darkseagreen4, label=wibbleOut];
m9_330 -> m9_334  [key=1, style=dashed, color=darkseagreen4, label=wibbleOut];
m9_330 -> m9_335  [key=1, style=dashed, color=darkseagreen4, label=wibbleOut];
m9_330 -> m9_336  [key=1, style=dashed, color=darkseagreen4, label=wibbleOut];
m9_330 -> m9_337  [key=1, style=dashed, color=darkseagreen4, label=wibbleOut];
m9_330 -> m9_312  [key=0, style=bold, color=blue];
m9_332 -> m9_11  [key=2, style=dotted];
m9_332 -> m9_333  [key=0, style=solid];
m9_332 -> m9_463  [key=0, style=solid];
m9_332 -> m9_464  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m9_332 -> m9_465  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m9_332 -> m9_312  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Reflection.BindingFlags bindingAttr"];
m9_333 -> m9_11  [key=2, style=dotted];
m9_333 -> m9_334  [key=0, style=solid];
m9_334 -> m9_11  [key=2, style=dotted];
m9_334 -> m9_335  [key=0, style=solid];
m9_334 -> m9_484  [key=0, style=solid];
m9_334 -> m9_485  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m9_334 -> m9_486  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m9_334 -> m9_487  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m9_334 -> m9_488  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.BindingFlags"];
m9_334 -> m9_489  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m9_334 -> m9_493  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m9_334 -> m9_312  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Reflection.BindingFlags bindingAttr"];
m9_335 -> m9_11  [key=2, style=dotted];
m9_335 -> m9_336  [key=0, style=solid];
m9_336 -> m9_11  [key=2, style=dotted];
m9_336 -> m9_337  [key=0, style=solid];
m9_337 -> m9_11  [key=2, style=dotted];
m9_337 -> m9_338  [key=0, style=solid];
m9_329 -> m9_9  [key=2, style=dotted];
m9_329 -> m9_330  [key=0, style=solid];
m9_324 -> m9_329  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m9_324 -> m9_325  [key=0, style=solid];
m9_324 -> m9_339  [key=2, style=dotted];
m9_324 -> m9_326  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m9_324 -> m9_327  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m9_324 -> m9_328  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m9_328 -> m9_329  [key=0, style=solid];
m9_328 -> m9_264  [key=2, style=dotted];
m9_328 -> m9_317  [key=0, style=solid];
m9_328 -> m9_333  [key=2, style=dotted];
m9_325 -> m9_326  [key=0, style=solid];
m9_325 -> m9_323  [key=0, style=solid];
m9_325 -> m9_341  [key=2, style=dotted];
m9_326 -> m9_264  [key=2, style=dotted];
m9_326 -> m9_327  [key=0, style=solid];
m9_326 -> m9_323  [key=0, style=solid];
m9_326 -> m9_342  [key=2, style=dotted];
m9_327 -> m9_328  [key=0, style=solid];
m9_327 -> m9_264  [key=2, style=dotted];
m9_327 -> m9_323  [key=0, style=solid];
m9_327 -> m9_341  [key=2, style=dotted];
m9_338 -> m9_323  [key=0, style=bold, color=blue];
m9_1405 -> m9_1406  [key=0, style=solid];
m9_1417 -> m9_93  [key=2, style=dotted];
m9_1417 -> m9_1418  [key=0, style=solid];
m9_1417 -> m9_1419  [key=1, style=dashed, color=darkseagreen4, label=o2];
m9_1417 -> m9_1420  [key=1, style=dashed, color=darkseagreen4, label=o2];
m9_1417 -> m9_1421  [key=1, style=dashed, color=darkseagreen4, label=o2];
m9_1417 -> m9_1422  [key=1, style=dashed, color=darkseagreen4, label=o2];
m9_1417 -> m9_1423  [key=1, style=dashed, color=darkseagreen4, label=o2];
m9_1420 -> m9_11  [key=2, style=dotted];
m9_1420 -> m9_1421  [key=0, style=solid];
m9_1416 -> m9_11  [key=2, style=dotted];
m9_1416 -> m9_1417  [key=0, style=solid];
m9_1418 -> m9_11  [key=2, style=dotted];
m9_1418 -> m9_1419  [key=0, style=solid];
m9_1419 -> m9_11  [key=2, style=dotted];
m9_1419 -> m9_1420  [key=0, style=solid];
m9_1421 -> m9_11  [key=2, style=dotted];
m9_1421 -> m9_1422  [key=0, style=solid];
m9_1422 -> m9_11  [key=2, style=dotted];
m9_1422 -> m9_1423  [key=0, style=solid];
m9_1423 -> m9_11  [key=2, style=dotted];
m9_1423 -> m9_1424  [key=0, style=solid];
m9_1415 -> m9_1417  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_1415 -> m9_1416  [key=0, style=solid];
m9_1415 -> m9_214  [key=2, style=dotted];
m9_1415 -> m9_728  [key=2, style=dotted];
m9_1411 -> m9_1420  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffset];
m9_1411 -> m9_1412  [key=0, style=solid];
m9_1411 -> m9_222  [key=2, style=dotted];
m9_1411 -> m9_223  [key=2, style=dotted];
m9_1411 -> m9_1414  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffset];
m9_1413 -> m9_1416  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffsetText];
m9_1413 -> m9_1414  [key=0, style=solid];
m9_1414 -> m9_1415  [key=0, style=solid];
m9_1414 -> m9_1309  [key=2, style=dotted];
m9_1407 -> m9_210  [key=2, style=dotted];
m9_1407 -> m9_1408  [key=0, style=solid];
m9_1410 -> m9_1411  [key=0, style=solid];
m9_1412 -> m9_1413  [key=0, style=solid];
m9_1406 -> m9_1414  [key=1, style=dashed, color=darkseagreen4, label=person];
m9_1406 -> m9_1407  [key=0, style=solid];
m9_1406 -> m9_1410  [key=1, style=dashed, color=darkseagreen4, label=person];
m9_1406 -> m9_661  [key=2, style=dotted];
m9_1406 -> m9_1408  [key=1, style=dashed, color=darkseagreen4, label=person];
m9_1406 -> m9_1409  [key=1, style=dashed, color=darkseagreen4, label=person];
m9_1408 -> m9_1409  [key=0, style=solid];
m9_1409 -> m9_1410  [key=0, style=solid];
m9_1424 -> m9_1405  [key=0, style=bold, color=blue];
m9_3205 -> m9_3206  [key=0, style=solid];
m9_3208 -> m9_11  [key=2, style=dotted];
m9_3208 -> m9_3209  [key=0, style=solid];
m9_3207 -> m9_3208  [key=0, style=solid];
m9_3207 -> m9_214  [key=2, style=dotted];
m9_3207 -> m9_728  [key=2, style=dotted];
m9_3206 -> m9_3207  [key=0, style=solid];
m9_3206 -> m9_3210  [key=2, style=dotted];
m9_3209 -> m9_3205  [key=0, style=bold, color=blue];
m9_255 -> m9_260  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m9_255 -> m9_258  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m9_255 -> m9_256  [key=0, style=solid];
m9_2522 -> m9_2523  [key=0, style=solid];
m9_2524 -> m9_93  [key=2, style=dotted];
m9_2524 -> m9_2525  [key=0, style=solid];
m9_2527 -> m9_93  [key=2, style=dotted];
m9_2527 -> m9_2528  [key=0, style=solid];
m9_2525 -> m9_11  [key=2, style=dotted];
m9_2525 -> m9_2526  [key=0, style=solid];
m9_2528 -> m9_11  [key=2, style=dotted];
m9_2528 -> m9_369  [key=2, style=dotted];
m9_2528 -> m9_2529  [key=0, style=solid];
m9_2523 -> m9_2524  [key=0, style=solid];
m9_2526 -> m9_2527  [key=0, style=solid];
m9_2529 -> m9_2522  [key=0, style=bold, color=blue];
m9_484 -> m9_485  [key=0, style=solid];
m9_484 -> m9_13  [key=2, style=dotted];
m9_484 -> m9_14  [key=2, style=dotted];
m9_490 -> m9_11  [key=2, style=dotted];
m9_490 -> m9_491  [key=0, style=solid];
m9_490 -> m9_492  [key=1, style=dashed, color=darkseagreen4, label=i];
m9_490 -> m9_495  [key=1, style=dashed, color=darkseagreen4, label=i];
m9_490 -> m9_496  [key=1, style=dashed, color=darkseagreen4, label=i];
m9_491 -> m9_11  [key=2, style=dotted];
m9_491 -> m9_492  [key=0, style=solid];
m9_491 -> m9_497  [key=0, style=solid];
m9_491 -> m9_60  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m9_488 -> m9_11  [key=2, style=dotted];
m9_488 -> m9_489  [key=0, style=solid];
m9_488 -> m9_487  [key=0, style=solid];
m9_488 -> m9_499  [key=2, style=dotted];
m9_488 -> m9_333  [key=2, style=dotted];
m9_485 -> m9_490  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m9_485 -> m9_491  [key=1, style=dashed, color=darkseagreen4, label=propertyInfos];
m9_485 -> m9_486  [key=0, style=solid];
m9_485 -> m9_453  [key=2, style=dotted];
m9_485 -> m9_468  [key=2, style=dotted];
m9_485 -> m9_499  [key=2, style=dotted];
m9_485 -> m9_488  [key=1, style=dashed, color=darkseagreen4, label=propertyInfos];
m9_485 -> m9_489  [key=1, style=dashed, color=darkseagreen4, label=propertyInfos];
m9_485 -> m9_492  [key=1, style=dashed, color=darkseagreen4, label=propertyInfos];
m9_485 -> m9_495  [key=1, style=dashed, color=darkseagreen4, label=propertyInfos];
m9_485 -> m9_497  [key=1, style=dashed, color=darkseagreen4, label=propertyInfos];
m9_489 -> m9_490  [key=0, style=solid];
m9_489 -> m9_491  [key=1, style=dashed, color=darkseagreen4, label=m2];
m9_489 -> m9_493  [key=2, style=dotted];
m9_489 -> m9_443  [key=2, style=dotted];
m9_489 -> m9_500  [key=2, style=dotted];
m9_487 -> m9_488  [key=0, style=solid];
m9_487 -> m9_489  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_487 -> m9_493  [key=2, style=dotted];
m9_487 -> m9_442  [key=2, style=dotted];
m9_487 -> m9_157  [key=2, style=dotted];
m9_486 -> m9_487  [key=0, style=solid];
m9_486 -> m9_454  [key=2, style=dotted];
m9_486 -> m9_489  [key=0, style=solid];
m9_486 -> m9_153  [key=2, style=dotted];
m9_492 -> m9_484  [key=0, style=bold, color=blue];
m9_492 -> m9_493  [key=0, style=solid];
m9_492 -> m9_494  [key=1, style=dashed, color=darkseagreen4, label=member];
m9_854 -> m9_855  [key=0, style=solid];
m9_856 -> m9_93  [key=2, style=dotted];
m9_856 -> m9_857  [key=0, style=solid];
m9_856 -> m9_858  [key=1, style=dashed, color=darkseagreen4, label=content];
m9_856 -> m9_859  [key=1, style=dashed, color=darkseagreen4, label=content];
m9_856 -> m9_860  [key=1, style=dashed, color=darkseagreen4, label=content];
m9_857 -> m9_11  [key=2, style=dotted];
m9_857 -> m9_858  [key=0, style=solid];
m9_858 -> m9_11  [key=2, style=dotted];
m9_858 -> m9_859  [key=0, style=solid];
m9_859 -> m9_11  [key=2, style=dotted];
m9_859 -> m9_860  [key=0, style=solid];
m9_860 -> m9_11  [key=2, style=dotted];
m9_860 -> m9_861  [key=0, style=solid];
m9_855 -> m9_856  [key=0, style=solid];
m9_861 -> m9_854  [key=0, style=bold, color=blue];
m9_3315 -> m9_3421  [key=0, style=solid];
m9_3421 -> m9_3422  [key=0, style=solid];
m9_3421 -> m9_3421  [key=1, style=dashed, color=darkseagreen4, label=answer];
m9_3421 -> m9_3423  [key=2, style=dotted];
m9_3421 -> m9_3424  [key=2, style=dotted];
m9_3421 -> m9_3425  [key=2, style=dotted];
m9_3422 -> m9_3315  [key=0, style=bold, color=blue];
m9_1172 -> m9_1173  [key=0, style=solid];
m9_102 -> m9_103  [key=0, style=solid];
m9_102 -> m9_11  [key=2, style=dotted];
m9_103 -> m9_104  [key=0, style=solid];
m9_103 -> m9_105  [key=2, style=dotted];
m9_103 -> m9_106  [key=2, style=dotted];
m9_103 -> m9_93  [key=2, style=dotted];
m9_104 -> m9_102  [key=0, style=bold, color=blue];
m9_104 -> m9_11  [key=2, style=dotted];
m9_104 -> m9_104  [key=3, color=darkorchid, style=bold, label="Local variable string expected"];
m9_104 -> m9_105  [key=0, style=solid];
m9_343 -> m9_344  [key=0, style=solid];
m9_344 -> m9_345  [key=0, style=solid];
m9_344 -> m9_11  [key=2, style=dotted];
m9_345 -> m9_343  [key=0, style=bold, color=blue];
m9_345 -> m9_93  [key=2, style=dotted];
m9_345 -> m9_346  [key=0, style=solid];
m9_345 -> m9_347  [key=1, style=dashed, color=darkseagreen4, label=c];
m9_345 -> m9_348  [key=1, style=dashed, color=darkseagreen4, label=c];
m9_460 -> m9_461  [key=0, style=solid];
m9_460 -> m9_93  [key=2, style=dotted];
m9_460 -> m9_462  [key=1, style=dashed, color=darkseagreen4, label=m2];
m9_461 -> m9_462  [key=0, style=solid];
m9_461 -> m9_11  [key=2, style=dotted];
m9_462 -> m9_460  [key=0, style=bold, color=blue];
m9_462 -> m9_11  [key=2, style=dotted];
m9_462 -> m9_463  [key=0, style=solid];
m9_524 -> m9_525  [key=0, style=solid];
m9_524 -> m9_521  [key=0, style=bold, color=blue];
m9_541 -> m9_542  [key=0, style=solid, color=green];
m9_541 -> m9_27  [key=2, style=dotted];
m9_542 -> m9_540  [key=0, style=bold, color=blue];
m9_542 -> m9_543  [key=0, style=solid, color=green];
m9_604 -> m9_93  [key=2, style=dotted];
m9_604 -> m9_605  [key=0, style=solid];
m9_619 -> m9_93  [key=2, style=dotted];
m9_619 -> m9_620  [key=0, style=solid];
m9_930 -> m9_93  [key=2, style=dotted];
m9_930 -> m9_931  [key=0, style=solid];
m9_957 -> m9_93  [key=2, style=dotted];
m9_957 -> m9_958  [key=0, style=solid];
m9_964 -> m9_93  [key=2, style=dotted];
m9_964 -> m9_965  [key=0, style=solid];
m9_971 -> m9_93  [key=2, style=dotted];
m9_971 -> m9_972  [key=0, style=solid];
m9_978 -> m9_93  [key=2, style=dotted];
m9_978 -> m9_979  [key=0, style=solid];
m9_985 -> m9_93  [key=2, style=dotted];
m9_985 -> m9_986  [key=0, style=solid];
m9_992 -> m9_93  [key=2, style=dotted];
m9_992 -> m9_993  [key=0, style=solid];
m9_999 -> m9_93  [key=2, style=dotted];
m9_999 -> m9_1000  [key=0, style=solid];
m9_1006 -> m9_93  [key=2, style=dotted];
m9_1006 -> m9_1007  [key=0, style=solid];
m9_1013 -> m9_93  [key=2, style=dotted];
m9_1013 -> m9_1014  [key=0, style=solid];
m9_1123 -> m9_93  [key=2, style=dotted];
m9_1123 -> m9_1124  [key=0, style=solid];
m9_1686 -> m9_93  [key=2, style=dotted];
m9_1686 -> m9_1687  [key=0, style=solid];
m9_1700 -> m9_93  [key=2, style=dotted];
m9_1700 -> m9_1701  [key=0, style=solid];
m9_1876 -> m9_93  [key=2, style=dotted];
m9_1876 -> m9_1877  [key=0, style=solid];
m9_2392 -> m9_93  [key=2, style=dotted];
m9_2392 -> m9_2393  [key=0, style=solid];
m9_2478 -> m9_93  [key=2, style=dotted];
m9_2478 -> m9_2479  [key=0, style=solid];
m9_2492 -> m9_93  [key=2, style=dotted];
m9_2492 -> m9_2493  [key=0, style=solid];
m9_2513 -> m9_93  [key=2, style=dotted];
m9_2513 -> m9_2514  [key=0, style=solid];
m9_2520 -> m9_93  [key=2, style=dotted];
m9_2520 -> m9_2521  [key=0, style=solid];
m9_2595 -> m9_93  [key=2, style=dotted];
m9_2595 -> m9_2596  [key=0, style=solid];
m9_2601 -> m9_93  [key=2, style=dotted];
m9_2601 -> m9_2602  [key=0, style=solid];
m9_2607 -> m9_93  [key=2, style=dotted];
m9_2607 -> m9_2608  [key=0, style=solid];
m9_2617 -> m9_93  [key=2, style=dotted];
m9_2617 -> m9_2618  [key=0, style=solid];
m9_2968 -> m9_93  [key=2, style=dotted];
m9_2968 -> m9_2969  [key=0, style=solid];
m9_3013 -> m9_93  [key=2, style=dotted];
m9_3013 -> m9_3014  [key=0, style=solid];
m9_3013 -> m9_3009  [key=1, style=dashed, color=darkseagreen4, label=obj];
m9_3082 -> m9_93  [key=2, style=dotted];
m9_3082 -> m9_3083  [key=0, style=solid];
m9_3089 -> m9_93  [key=2, style=dotted];
m9_3089 -> m9_3090  [key=0, style=solid];
m9_3109 -> m9_93  [key=2, style=dotted];
m9_3109 -> m9_3110  [key=0, style=solid];
m9_3116 -> m9_93  [key=2, style=dotted];
m9_3116 -> m9_3117  [key=0, style=solid];
m9_3123 -> m9_93  [key=2, style=dotted];
m9_3123 -> m9_3124  [key=0, style=solid];
m9_3149 -> m9_93  [key=2, style=dotted];
m9_3149 -> m9_3150  [key=0, style=solid];
m9_3156 -> m9_93  [key=2, style=dotted];
m9_3156 -> m9_3157  [key=0, style=solid];
m9_3250 -> m9_93  [key=2, style=dotted];
m9_3250 -> m9_3251  [key=0, style=solid];
m9_3407 -> m9_93  [key=2, style=dotted];
m9_3407 -> m9_3408  [key=0, style=solid];
m9_142 -> m9_9  [key=2, style=dotted];
m9_142 -> m9_143  [key=0, style=solid];
m9_142 -> m9_144  [key=2, style=dotted];
m9_611 -> m9_9  [key=2, style=dotted];
m9_611 -> m9_612  [key=0, style=solid];
m9_603 -> m9_604  [key=0, style=solid];
m9_605 -> m9_602  [key=0, style=bold, color=blue];
m9_618 -> m9_619  [key=0, style=solid];
m9_620 -> m9_617  [key=0, style=bold, color=blue];
m9_929 -> m9_930  [key=0, style=solid];
m9_931 -> m9_929  [key=0, style=bold, color=blue];
m9_956 -> m9_957  [key=0, style=solid];
m9_958 -> m9_956  [key=0, style=bold, color=blue];
m9_963 -> m9_964  [key=0, style=solid];
m9_965 -> m9_963  [key=0, style=bold, color=blue];
m9_970 -> m9_971  [key=0, style=solid];
m9_972 -> m9_970  [key=0, style=bold, color=blue];
m9_977 -> m9_978  [key=0, style=solid];
m9_979 -> m9_977  [key=0, style=bold, color=blue];
m9_984 -> m9_985  [key=0, style=solid];
m9_986 -> m9_984  [key=0, style=bold, color=blue];
m9_991 -> m9_992  [key=0, style=solid];
m9_993 -> m9_991  [key=0, style=bold, color=blue];
m9_998 -> m9_999  [key=0, style=solid];
m9_1000 -> m9_998  [key=0, style=bold, color=blue];
m9_1005 -> m9_1006  [key=0, style=solid];
m9_1007 -> m9_1005  [key=0, style=bold, color=blue];
m9_1012 -> m9_1013  [key=0, style=solid];
m9_1014 -> m9_1012  [key=0, style=bold, color=blue];
m9_1122 -> m9_1123  [key=0, style=solid];
m9_1124 -> m9_1121  [key=0, style=bold, color=blue];
m9_1685 -> m9_1686  [key=0, style=solid];
m9_1687 -> m9_1685  [key=0, style=bold, color=blue];
m9_1699 -> m9_1700  [key=0, style=solid];
m9_1699 -> m9_351  [key=2, style=dotted];
m9_1701 -> m9_1691  [key=0, style=bold, color=blue];
m9_1875 -> m9_1876  [key=0, style=solid];
m9_1877 -> m9_1875  [key=0, style=bold, color=blue];
m9_2391 -> m9_2392  [key=0, style=solid];
m9_2393 -> m9_2391  [key=0, style=bold, color=blue];
m9_2477 -> m9_2478  [key=0, style=solid];
m9_2479 -> m9_2477  [key=0, style=bold, color=blue];
m9_2491 -> m9_2492  [key=0, style=solid];
m9_2493 -> m9_2491  [key=0, style=bold, color=blue];
m9_2512 -> m9_2513  [key=0, style=solid];
m9_2514 -> m9_2511  [key=0, style=bold, color=blue];
m9_2519 -> m9_2520  [key=0, style=solid];
m9_2521 -> m9_2518  [key=0, style=bold, color=blue];
m9_2594 -> m9_2595  [key=0, style=solid];
m9_2596 -> m9_2594  [key=0, style=bold, color=blue];
m9_2600 -> m9_2601  [key=0, style=solid];
m9_2602 -> m9_2600  [key=0, style=bold, color=blue];
m9_2606 -> m9_2607  [key=0, style=solid];
m9_2608 -> m9_2606  [key=0, style=bold, color=blue];
m9_2616 -> m9_2617  [key=0, style=solid];
m9_2618 -> m9_2616  [key=0, style=bold, color=blue];
m9_2967 -> m9_2968  [key=0, style=solid];
m9_2969 -> m9_2967  [key=0, style=bold, color=blue];
m9_3012 -> m9_3013  [key=0, style=solid];
m9_3014 -> m9_3012  [key=0, style=bold, color=blue];
m9_3081 -> m9_3082  [key=0, style=solid];
m9_3083 -> m9_3081  [key=0, style=bold, color=blue];
m9_3088 -> m9_3089  [key=0, style=solid];
m9_3090 -> m9_3088  [key=0, style=bold, color=blue];
m9_3108 -> m9_3109  [key=0, style=solid];
m9_3110 -> m9_3108  [key=0, style=bold, color=blue];
m9_3115 -> m9_3116  [key=0, style=solid];
m9_3117 -> m9_3115  [key=0, style=bold, color=blue];
m9_3122 -> m9_3123  [key=0, style=solid];
m9_3124 -> m9_3122  [key=0, style=bold, color=blue];
m9_3148 -> m9_3149  [key=0, style=solid];
m9_3150 -> m9_3148  [key=0, style=bold, color=blue];
m9_3155 -> m9_3156  [key=0, style=solid];
m9_3157 -> m9_3155  [key=0, style=bold, color=blue];
m9_3249 -> m9_3250  [key=0, style=solid];
m9_3251 -> m9_3249  [key=0, style=bold, color=blue];
m9_3406 -> m9_3407  [key=0, style=solid];
m9_3408 -> m9_3406  [key=0, style=bold, color=blue];
m9_141 -> m9_142  [key=0, style=solid];
m9_141 -> m9_144  [key=0, style=solid];
m9_143 -> m9_141  [key=0, style=bold, color=blue];
m9_143 -> m9_152  [key=0, style=solid];
m9_610 -> m9_611  [key=0, style=solid];
m9_610 -> m9_210  [key=2, style=dotted];
m9_610 -> m9_591  [key=2, style=dotted];
m9_612 -> m9_613  [key=0, style=solid];
m9_612 -> m9_12  [key=2, style=dotted];
m9_655 -> m9_656  [key=0, style=solid];
m9_655 -> m9_10  [key=2, style=dotted];
m9_602 -> m9_603  [key=0, style=solid];
m9_617 -> m9_618  [key=0, style=solid];
m9_1121 -> m9_1122  [key=0, style=solid];
m9_1698 -> m9_1699  [key=0, style=solid];
m9_1698 -> m9_238  [key=2, style=dotted];
m9_1695 -> m9_1699  [key=1, style=dashed, color=darkseagreen4, label=child];
m9_1695 -> m9_1698  [key=1, style=dashed, color=darkseagreen4, label=child];
m9_1695 -> m9_1696  [key=0, style=solid];
m9_1695 -> m9_52  [key=2, style=dotted];
m9_1695 -> m9_1697  [key=1, style=dashed, color=darkseagreen4, label=child];
m9_1691 -> m9_1692  [key=0, style=solid];
m9_2511 -> m9_2512  [key=0, style=solid];
m9_2518 -> m9_2519  [key=0, style=solid];
m9_472 -> m9_214  [key=2, style=dotted];
m9_472 -> m9_473  [key=0, style=solid];
m9_472 -> m9_474  [key=2, style=dotted];
m9_472 -> m9_477  [key=2, style=dotted];
m9_471 -> m9_472  [key=0, style=solid];
m9_471 -> m9_476  [key=0, style=solid];
m9_2730 -> m9_264  [key=2, style=dotted];
m9_2730 -> m9_2731  [key=0, style=solid];
m9_2745 -> m9_264  [key=2, style=dotted];
m9_2745 -> m9_2746  [key=0, style=solid];
m9_2760 -> m9_264  [key=2, style=dotted];
m9_2760 -> m9_2761  [key=0, style=solid];
m9_1693 -> m9_238  [key=2, style=dotted];
m9_1693 -> m9_1694  [key=0, style=solid];
m9_1694 -> m9_238  [key=2, style=dotted];
m9_1694 -> m9_1695  [key=0, style=solid];
m9_1696 -> m9_238  [key=2, style=dotted];
m9_1696 -> m9_1697  [key=0, style=solid];
m9_1697 -> m9_238  [key=2, style=dotted];
m9_1697 -> m9_1698  [key=0, style=solid];
m9_609 -> m9_610  [key=0, style=solid];
m9_613 -> m9_609  [key=0, style=bold, color=blue];
m9_654 -> m9_655  [key=0, style=solid];
m9_656 -> m9_654  [key=0, style=bold, color=blue];
m9_744 -> m9_214  [key=2, style=dotted];
m9_744 -> m9_728  [key=2, style=dotted];
m9_744 -> m9_745  [key=0, style=solid];
m9_1039 -> m9_214  [key=2, style=dotted];
m9_1039 -> m9_215  [key=2, style=dotted];
m9_1039 -> m9_1041  [key=2, style=dotted];
m9_1039 -> m9_53  [key=2, style=dotted];
m9_1039 -> m9_1040  [key=0, style=solid];
m9_1046 -> m9_214  [key=2, style=dotted];
m9_1046 -> m9_1041  [key=2, style=dotted];
m9_1046 -> m9_474  [key=2, style=dotted];
m9_1046 -> m9_1047  [key=0, style=solid];
m9_1052 -> m9_214  [key=2, style=dotted];
m9_1052 -> m9_1041  [key=2, style=dotted];
m9_1052 -> m9_474  [key=2, style=dotted];
m9_1052 -> m9_1053  [key=0, style=solid];
m9_1058 -> m9_214  [key=2, style=dotted];
m9_1058 -> m9_1041  [key=2, style=dotted];
m9_1058 -> m9_474  [key=2, style=dotted];
m9_1058 -> m9_1059  [key=0, style=solid];
m9_1209 -> m9_214  [key=2, style=dotted];
m9_1209 -> m9_474  [key=2, style=dotted];
m9_1209 -> m9_1210  [key=0, style=solid];
m9_1692 -> m9_1698  [key=1, style=dashed, color=darkseagreen4, label=reference];
m9_1692 -> m9_52  [key=2, style=dotted];
m9_1692 -> m9_1693  [key=0, style=solid];
m9_1692 -> m9_1694  [key=1, style=dashed, color=darkseagreen4, label=reference];
m9_2107 -> m9_10  [key=2, style=dotted];
m9_2107 -> m9_2108  [key=0, style=solid];
m9_2623 -> m9_114  [key=2, style=dotted];
m9_2623 -> m9_2624  [key=0, style=solid];
m9_2876 -> m9_282  [key=2, style=dotted];
m9_2876 -> m9_283  [key=2, style=dotted];
m9_2876 -> m9_2548  [key=2, style=dotted];
m9_2876 -> m9_2877  [key=0, style=solid];
m9_2892 -> m9_282  [key=2, style=dotted];
m9_2892 -> m9_283  [key=2, style=dotted];
m9_2892 -> m9_2893  [key=0, style=solid];
m9_2892 -> m9_2894  [key=1, style=dashed, color=darkseagreen4, label=reader];
m9_2892 -> m9_2895  [key=1, style=dashed, color=darkseagreen4, label=reader];
m9_2895 -> m9_284  [key=2, style=dotted];
m9_2895 -> m9_2896  [key=0, style=solid];
m9_473 -> m9_471  [key=0, style=bold, color=blue];
m9_473 -> m9_474  [key=0, style=solid];
m9_473 -> m9_476  [key=0, style=solid];
m9_473 -> m9_181  [key=2, style=dotted];
m9_473 -> m9_473  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m9_1028 -> m9_209  [key=2, style=dotted];
m9_1028 -> m9_1029  [key=0, style=solid];
m9_1028 -> m9_1022  [key=2, style=dotted];
m9_2731 -> m9_2732  [key=0, style=solid];
m9_2729 -> m9_2730  [key=0, style=solid];
m9_2729 -> m9_2731  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m9_2746 -> m9_2747  [key=0, style=solid];
m9_2744 -> m9_2745  [key=0, style=solid];
m9_2744 -> m9_2746  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m9_2761 -> m9_2762  [key=0, style=solid];
m9_2759 -> m9_2760  [key=0, style=solid];
m9_2759 -> m9_2761  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m9_2890 -> m9_277  [key=2, style=dotted];
m9_2890 -> m9_2895  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m9_2890 -> m9_2891  [key=0, style=solid];
m9_742 -> m9_744  [key=1, style=dashed, color=darkseagreen4, label=o];
m9_742 -> m9_727  [key=2, style=dotted];
m9_742 -> m9_743  [key=0, style=solid];
m9_743 -> m9_744  [key=0, style=solid];
m9_745 -> m9_741  [key=0, style=bold, color=blue];
m9_1038 -> m9_1039  [key=0, style=solid];
m9_1040 -> m9_1038  [key=0, style=bold, color=blue];
m9_1045 -> m9_1046  [key=0, style=solid];
m9_1047 -> m9_1045  [key=0, style=bold, color=blue];
m9_1051 -> m9_1052  [key=0, style=solid];
m9_1053 -> m9_1051  [key=0, style=bold, color=blue];
m9_1057 -> m9_1058  [key=0, style=solid];
m9_1059 -> m9_1057  [key=0, style=bold, color=blue];
m9_1208 -> m9_1209  [key=0, style=solid];
m9_1210 -> m9_1208  [key=0, style=bold, color=blue];
m9_2106 -> m9_2107  [key=0, style=solid];
m9_2108 -> m9_2106  [key=0, style=bold, color=blue];
m9_2622 -> m9_2623  [key=0, style=solid];
m9_2624 -> m9_2622  [key=0, style=bold, color=blue];
m9_2875 -> m9_2876  [key=0, style=solid];
m9_2877 -> m9_2875  [key=0, style=bold, color=blue];
m9_2889 -> m9_2892  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_2889 -> m9_2890  [key=0, style=solid];
m9_2891 -> m9_2892  [key=0, style=solid];
m9_2893 -> m9_2894  [key=0, style=solid];
m9_2893 -> m9_2897  [key=2, style=dotted];
m9_2894 -> m9_2895  [key=0, style=solid];
m9_2894 -> m9_2897  [key=2, style=dotted];
m9_2896 -> m9_2888  [key=0, style=bold, color=blue];
m9_741 -> m9_742  [key=0, style=solid];
m9_1019 -> m9_1020  [key=0, style=solid];
m9_1027 -> m9_1028  [key=0, style=solid];
m9_2888 -> m9_2889  [key=0, style=solid];
m9_1020 -> m9_661  [key=2, style=dotted];
m9_1020 -> m9_1021  [key=0, style=solid];
m9_1020 -> m9_1022  [key=2, style=dotted];
m9_1029 -> m9_1027  [key=0, style=bold, color=blue];
m9_2732 -> m9_2729  [key=0, style=bold, color=blue];
m9_2747 -> m9_2744  [key=0, style=bold, color=blue];
m9_2762 -> m9_2759  [key=0, style=bold, color=blue];
m9_1173 -> m9_1174  [key=0, style=solid];
m9_1021 -> m9_1019  [key=0, style=bold, color=blue];
m9_1174 -> m9_1172  [key=0, style=bold, color=blue];
m9_38 -> m9_39  [key=0, style=solid];
m9_1574 -> m9_1575  [key=0, style=solid];
m9_1577 -> m9_11  [key=2, style=dotted];
m9_1577 -> m9_1578  [key=0, style=solid];
m9_1580 -> m9_11  [key=2, style=dotted];
m9_1580 -> m9_9  [key=2, style=dotted];
m9_1580 -> m9_1581  [key=0, style=solid];
m9_1583 -> m9_11  [key=2, style=dotted];
m9_1583 -> m9_9  [key=2, style=dotted];
m9_1583 -> m9_1584  [key=0, style=solid];
m9_1576 -> m9_9  [key=2, style=dotted];
m9_1576 -> m9_1577  [key=0, style=solid];
m9_1578 -> m9_1580  [key=1, style=dashed, color=darkseagreen4, label=d1];
m9_1578 -> m9_1579  [key=0, style=solid];
m9_1578 -> m9_52  [key=2, style=dotted];
m9_1579 -> m9_1580  [key=0, style=solid];
m9_1579 -> m9_238  [key=2, style=dotted];
m9_1581 -> m9_1583  [key=1, style=dashed, color=darkseagreen4, label=d2];
m9_1581 -> m9_1582  [key=0, style=solid];
m9_1581 -> m9_52  [key=2, style=dotted];
m9_1582 -> m9_1583  [key=0, style=solid];
m9_1582 -> m9_238  [key=2, style=dotted];
m9_1575 -> m9_1576  [key=0, style=solid];
m9_1575 -> m9_1579  [key=1, style=dashed, color=darkseagreen4, label=s];
m9_1575 -> m9_1582  [key=1, style=dashed, color=darkseagreen4, label=s];
m9_1584 -> m9_1574  [key=0, style=bold, color=blue];
m9_2976 -> m9_2977  [key=0, style=solid];
m9_2982 -> m9_11  [key=2, style=dotted];
m9_2982 -> m9_2983  [key=0, style=solid];
m9_2979 -> m9_9  [key=2, style=dotted];
m9_2979 -> m9_2980  [key=0, style=solid];
m9_2981 -> m9_2982  [key=0, style=solid];
m9_2981 -> m9_214  [key=2, style=dotted];
m9_2981 -> m9_215  [key=2, style=dotted];
m9_2978 -> m9_2979  [key=0, style=solid];
m9_2978 -> m9_2981  [key=1, style=dashed, color=darkseagreen4, label=d];
m9_2978 -> m9_209  [key=2, style=dotted];
m9_2978 -> m9_2980  [key=1, style=dashed, color=darkseagreen4, label=d];
m9_2980 -> m9_2981  [key=0, style=solid];
m9_2980 -> m9_214  [key=2, style=dotted];
m9_2980 -> m9_215  [key=2, style=dotted];
m9_2977 -> m9_2978  [key=0, style=solid];
m9_2983 -> m9_2976  [key=0, style=bold, color=blue];
m9_54 -> m9_56  [key=0, style=solid];
m9_54 -> m9_60  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_54 -> m9_61  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_54 -> m9_40  [key=3, color=darkorchid, style=bold, label="Parameter variable string fullyQualifiedTypeName"];
m9_2939 -> m9_2940  [key=0, style=solid];
m9_2940 -> m9_2942  [key=2, style=dotted];
m9_2940 -> m9_2941  [key=0, style=solid];
m9_2941 -> m9_2939  [key=0, style=bold, color=blue];
m9_494 -> m9_495  [key=0, style=solid];
m9_494 -> m9_446  [key=2, style=dotted];
m9_497 -> m9_351  [key=2, style=dotted];
m9_497 -> m9_498  [key=0, style=solid];
m9_498 -> m9_12  [key=2, style=dotted];
m9_498 -> m9_499  [key=0, style=solid];
m9_498 -> m9_334  [key=0, style=bold, color=blue];
m9_496 -> m9_454  [key=2, style=dotted];
m9_496 -> m9_497  [key=0, style=solid];
m9_496 -> m9_491  [key=0, style=solid];
m9_496 -> m9_496  [key=1, style=dashed, color=darkseagreen4, label=i];
m9_495 -> m9_496  [key=0, style=solid];
m9_495 -> m9_500  [key=2, style=dotted];
m9_495 -> m9_501  [key=2, style=dotted];
m9_499 -> m9_494  [key=0, style=bold, color=blue];
m9_106 -> m9_100  [key=0, style=bold, color=blue];
m9_3341 -> m9_3342  [key=0, style=solid];
m9_3342 -> m9_93  [key=2, style=dotted];
m9_3342 -> m9_3343  [key=0, style=solid];
m9_3342 -> m9_3344  [key=1, style=dashed, color=darkseagreen4, label=list];
m9_3342 -> m9_3345  [key=1, style=dashed, color=darkseagreen4, label=list];
m9_3342 -> m9_3346  [key=1, style=dashed, color=darkseagreen4, label=list];
m9_3343 -> m9_11  [key=2, style=dotted];
m9_3343 -> m9_3344  [key=0, style=solid];
m9_3344 -> m9_11  [key=2, style=dotted];
m9_3344 -> m9_3345  [key=0, style=solid];
m9_3345 -> m9_11  [key=2, style=dotted];
m9_3345 -> m9_3346  [key=0, style=solid];
m9_3346 -> m9_11  [key=2, style=dotted];
m9_3346 -> m9_3347  [key=0, style=solid];
m9_3347 -> m9_3341  [key=0, style=bold, color=blue];
m9_1048 -> m9_1049  [key=0, style=solid];
m9_1049 -> m9_140  [key=2, style=dotted];
m9_1049 -> m9_1050  [key=0, style=solid];
m9_1049 -> m9_1051  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_1050 -> m9_1048  [key=0, style=bold, color=blue];
m9_2922 -> m9_2923  [key=0, style=solid];
m9_2923 -> m9_93  [key=2, style=dotted];
m9_2923 -> m9_2924  [key=0, style=solid];
m9_2924 -> m9_11  [key=2, style=dotted];
m9_2924 -> m9_2925  [key=0, style=solid];
m9_2925 -> m9_2922  [key=0, style=bold, color=blue];
m9_1125 -> m9_1126  [key=0, style=solid];
m9_1131 -> m9_93  [key=2, style=dotted];
m9_1131 -> m9_1132  [key=0, style=solid];
m9_1131 -> m9_831  [key=2, style=dotted];
m9_1133 -> m9_11  [key=2, style=dotted];
m9_1133 -> m9_1134  [key=0, style=solid];
m9_1134 -> m9_11  [key=2, style=dotted];
m9_1134 -> m9_1135  [key=0, style=solid];
m9_1135 -> m9_11  [key=2, style=dotted];
m9_1135 -> m9_1136  [key=0, style=solid];
m9_1130 -> m9_1131  [key=0, style=solid];
m9_1130 -> m9_1133  [key=0, style=solid];
m9_1132 -> m9_1130  [key=0, style=solid];
m9_1132 -> m9_264  [key=2, style=dotted];
m9_1129 -> m9_1133  [key=1, style=dashed, color=darkseagreen4, label=searchResults];
m9_1129 -> m9_1134  [key=1, style=dashed, color=darkseagreen4, label=searchResults];
m9_1129 -> m9_1135  [key=1, style=dashed, color=darkseagreen4, label=searchResults];
m9_1129 -> m9_1130  [key=0, style=solid];
m9_1129 -> m9_1132  [key=1, style=dashed, color=darkseagreen4, label=searchResults];
m9_1129 -> m9_209  [key=2, style=dotted];
m9_1128 -> m9_1130  [key=1, style=dashed, color=darkseagreen4, label=results];
m9_1128 -> m9_125  [key=2, style=dotted];
m9_1128 -> m9_1129  [key=0, style=solid];
m9_1128 -> m9_1137  [key=2, style=dotted];
m9_1127 -> m9_830  [key=2, style=dotted];
m9_1127 -> m9_1128  [key=0, style=solid];
m9_1126 -> m9_1127  [key=0, style=solid];
m9_1136 -> m9_1125  [key=0, style=bold, color=blue];
m9_1429 -> m9_1430  [key=0, style=solid];
m9_1430 -> m9_93  [key=2, style=dotted];
m9_1430 -> m9_1431  [key=0, style=solid];
m9_1430 -> m9_1432  [key=1, style=dashed, color=darkseagreen4, label=kvPairs];
m9_1430 -> m9_1433  [key=1, style=dashed, color=darkseagreen4, label=kvPairs];
m9_1430 -> m9_1434  [key=1, style=dashed, color=darkseagreen4, label=kvPairs];
m9_1430 -> m9_1435  [key=1, style=dashed, color=darkseagreen4, label=kvPairs];
m9_1431 -> m9_11  [key=2, style=dotted];
m9_1431 -> m9_1432  [key=0, style=solid];
m9_1432 -> m9_11  [key=2, style=dotted];
m9_1432 -> m9_1433  [key=0, style=solid];
m9_1433 -> m9_11  [key=2, style=dotted];
m9_1433 -> m9_1434  [key=0, style=solid];
m9_1434 -> m9_11  [key=2, style=dotted];
m9_1434 -> m9_1435  [key=0, style=solid];
m9_1435 -> m9_11  [key=2, style=dotted];
m9_1435 -> m9_1436  [key=0, style=solid];
m9_1436 -> m9_1429  [key=0, style=bold, color=blue];
m9_646 -> m9_647  [key=0, style=solid];
m9_649 -> m9_9  [key=2, style=dotted];
m9_649 -> m9_650  [key=0, style=solid];
m9_649 -> m9_655  [key=1, style=dashed, color=darkseagreen4, label=strFromTest];
m9_647 -> m9_649  [key=1, style=dashed, color=darkseagreen4, label=testClass];
m9_647 -> m9_648  [key=0, style=solid];
m9_647 -> m9_652  [key=2, style=dotted];
m9_648 -> m9_649  [key=0, style=solid];
m9_648 -> m9_653  [key=2, style=dotted];
m9_650 -> m9_651  [key=0, style=solid];
m9_650 -> m9_140  [key=2, style=dotted];
m9_650 -> m9_654  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_651 -> m9_646  [key=0, style=bold, color=blue];
m9_2613 -> m9_2614  [key=0, style=solid];
m9_2614 -> m9_2616  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_2614 -> m9_2615  [key=0, style=solid];
m9_2614 -> m9_140  [key=2, style=dotted];
m9_2615 -> m9_2613  [key=0, style=bold, color=blue];
m9_1111 -> m9_1112  [key=0, style=solid];
m9_1116 -> m9_11  [key=2, style=dotted];
m9_1116 -> m9_1117  [key=0, style=solid];
m9_1115 -> m9_1116  [key=0, style=solid];
m9_1115 -> m9_351  [key=2, style=dotted];
m9_1112 -> m9_1115  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m9_1112 -> m9_52  [key=2, style=dotted];
m9_1112 -> m9_1113  [key=0, style=solid];
m9_1112 -> m9_1114  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m9_1114 -> m9_1115  [key=0, style=solid];
m9_1114 -> m9_238  [key=2, style=dotted];
m9_1114 -> m9_661  [key=2, style=dotted];
m9_1113 -> m9_238  [key=2, style=dotted];
m9_1113 -> m9_1114  [key=0, style=solid];
m9_1113 -> m9_661  [key=2, style=dotted];
m9_1117 -> m9_1111  [key=0, style=bold, color=blue];
m9_2036 -> m9_2037  [key=0, style=solid];
m9_2039 -> m9_93  [key=2, style=dotted];
m9_2039 -> m9_2040  [key=0, style=solid];
m9_2040 -> m9_11  [key=2, style=dotted];
m9_2040 -> m9_2041  [key=0, style=solid];
m9_2038 -> m9_9  [key=2, style=dotted];
m9_2038 -> m9_2039  [key=0, style=solid];
m9_2037 -> m9_2038  [key=0, style=solid];
m9_2037 -> m9_2033  [key=2, style=dotted];
m9_2041 -> m9_2036  [key=0, style=bold, color=blue];
m9_371 -> m9_372  [key=0, style=solid];
m9_371 -> m9_374  [key=2, style=dotted];
m9_374 -> m9_93  [key=2, style=dotted];
m9_374 -> m9_375  [key=0, style=solid];
m9_373 -> m9_11  [key=2, style=dotted];
m9_373 -> m9_374  [key=0, style=solid];
m9_373 -> m9_375  [key=0, style=solid];
m9_373 -> m9_369  [key=3, color=darkorchid, style=bold, label="Parameter variable bool inherit"];
m9_373 -> m9_376  [key=3, color=darkorchid, style=bold, label="method methodReturn T[] GetAttributes"];
m9_375 -> m9_11  [key=2, style=dotted];
m9_375 -> m9_376  [key=0, style=solid];
m9_375 -> m9_381  [key=2, style=dotted];
m9_375 -> m9_379  [key=1, style=dashed, color=darkseagreen4, label=a];
m9_372 -> m9_9  [key=2, style=dotted];
m9_372 -> m9_374  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_372 -> m9_373  [key=0, style=solid];
m9_372 -> m9_369  [key=0, style=bold, color=blue];
m9_376 -> m9_371  [key=0, style=bold, color=blue];
m9_376 -> m9_377  [key=0, style=solid];
m9_376 -> m9_378  [key=1, style=dashed, color=darkseagreen4, label=attributes];
m9_2575 -> m9_2576  [key=0, style=solid];
m9_2576 -> m9_93  [key=2, style=dotted];
m9_2576 -> m9_2577  [key=0, style=solid];
m9_2578 -> m9_93  [key=2, style=dotted];
m9_2578 -> m9_2579  [key=0, style=solid];
m9_2580 -> m9_93  [key=2, style=dotted];
m9_2580 -> m9_2581  [key=0, style=solid];
m9_2582 -> m9_93  [key=2, style=dotted];
m9_2582 -> m9_2583  [key=0, style=solid];
m9_2584 -> m9_93  [key=2, style=dotted];
m9_2584 -> m9_2585  [key=0, style=solid];
m9_2586 -> m9_93  [key=2, style=dotted];
m9_2586 -> m9_2587  [key=0, style=solid];
m9_2588 -> m9_93  [key=2, style=dotted];
m9_2588 -> m9_2589  [key=0, style=solid];
m9_2577 -> m9_2578  [key=0, style=solid];
m9_2577 -> m9_1519  [key=2, style=dotted];
m9_2579 -> m9_2580  [key=0, style=solid];
m9_2579 -> m9_1519  [key=2, style=dotted];
m9_2581 -> m9_2582  [key=0, style=solid];
m9_2581 -> m9_1519  [key=2, style=dotted];
m9_2583 -> m9_2584  [key=0, style=solid];
m9_2583 -> m9_1519  [key=2, style=dotted];
m9_2585 -> m9_2586  [key=0, style=solid];
m9_2585 -> m9_1519  [key=2, style=dotted];
m9_2587 -> m9_2588  [key=0, style=solid];
m9_2587 -> m9_1519  [key=2, style=dotted];
m9_2589 -> m9_2590  [key=0, style=solid];
m9_2589 -> m9_1519  [key=2, style=dotted];
m9_2590 -> m9_2575  [key=0, style=bold, color=blue];
m9_3271 -> m9_3272  [key=0, style=solid];
m9_3273 -> m9_93  [key=2, style=dotted];
m9_3273 -> m9_3274  [key=0, style=solid];
m9_3273 -> m9_3275  [key=1, style=dashed, color=darkseagreen4, label=c2];
m9_3273 -> m9_3276  [key=1, style=dashed, color=darkseagreen4, label=c2];
m9_3273 -> m9_3277  [key=1, style=dashed, color=darkseagreen4, label=c2];
m9_3273 -> m9_3278  [key=1, style=dashed, color=darkseagreen4, label=c2];
m9_3272 -> m9_3273  [key=0, style=solid];
m9_3274 -> m9_3275  [key=0, style=solid];
m9_3274 -> m9_1519  [key=2, style=dotted];
m9_3275 -> m9_3276  [key=0, style=solid];
m9_3275 -> m9_1519  [key=2, style=dotted];
m9_3276 -> m9_3277  [key=0, style=solid];
m9_3276 -> m9_1519  [key=2, style=dotted];
m9_3277 -> m9_3278  [key=0, style=solid];
m9_3277 -> m9_1519  [key=2, style=dotted];
m9_3278 -> m9_3279  [key=0, style=solid];
m9_3278 -> m9_1519  [key=2, style=dotted];
m9_3279 -> m9_3271  [key=0, style=bold, color=blue];
m9_56 -> m9_57  [key=0, style=solid];
m9_56 -> m9_81  [key=2, style=dotted];
m9_56 -> m9_66  [key=1, style=dashed, color=darkseagreen4, label=builder];
m9_56 -> m9_70  [key=1, style=dashed, color=darkseagreen4, label=builder];
m9_56 -> m9_74  [key=1, style=dashed, color=darkseagreen4, label=builder];
m9_56 -> m9_77  [key=1, style=dashed, color=darkseagreen4, label=builder];
m9_56 -> m9_79  [key=1, style=dashed, color=darkseagreen4, label=builder];
m9_60 -> m9_61  [key=0, style=solid];
m9_60 -> m9_79  [key=0, style=solid];
m9_60 -> m9_60  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m9_60 -> m9_66  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Schema.JsonSchema GenerateInternal"];
m9_60 -> m9_109  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Required valueRequired"];
m9_60 -> m9_2345  [key=3, color=darkorchid, style=bold, label="Parameter variable bool required"];
m9_61 -> m9_62  [key=0, style=solid];
m9_61 -> m9_66  [key=1, style=dashed, color=darkseagreen4, label=current];
m9_61 -> m9_70  [key=1, style=dashed, color=darkseagreen4, label=current];
m9_61 -> m9_74  [key=1, style=dashed, color=darkseagreen4, label=current];
m9_61 -> m9_77  [key=1, style=dashed, color=darkseagreen4, label=current];
m9_66 -> m9_78  [key=0, style=solid];
m9_66 -> m9_82  [key=2, style=dotted];
m9_66 -> m9_11  [key=2, style=dotted];
m9_66 -> m9_67  [key=0, style=solid];
m9_70 -> m9_78  [key=0, style=solid];
m9_70 -> m9_82  [key=2, style=dotted];
m9_70 -> m9_58  [key=0, style=bold, color=blue];
m9_74 -> m9_78  [key=0, style=solid];
m9_74 -> m9_82  [key=2, style=dotted];
m9_74 -> m9_75  [key=0, style=solid];
m9_77 -> m9_78  [key=0, style=solid];
m9_77 -> m9_82  [key=2, style=dotted];
m9_77 -> m9_11  [key=2, style=dotted];
m9_77 -> m9_79  [key=2, style=dotted];
m9_58 -> m9_59  [key=0, style=solid];
m9_58 -> m9_11  [key=3, color=darkorchid, style=bold, label="Local variable bool skippingAssemblyDetails"];
m9_59 -> m9_60  [key=0, style=solid];
m9_59 -> m9_61  [key=1, style=dashed, color=darkseagreen4, label=executorObject];
m9_59 -> m9_78  [key=1, style=dashed, color=darkseagreen4, label=i];
m9_59 -> m9_63  [key=1, style=dashed, color=darkseagreen4, label=executorObject];
m9_59 -> m9_65  [key=1, style=dashed, color=darkseagreen4, label=executorObject];
m9_59 -> m9_71  [key=2, style=dotted];
m9_59 -> m9_62  [key=1, style=dashed, color=darkseagreen4, label=executorObject];
m9_78 -> m9_60  [key=0, style=solid];
m9_78 -> m9_78  [key=1, style=dashed, color=darkseagreen4, label=i];
m9_78 -> m9_74  [key=0, style=bold, color=blue];
m9_62 -> m9_63  [key=0, style=solid];
m9_62 -> m9_67  [key=0, style=solid];
m9_62 -> m9_71  [key=0, style=solid];
m9_62 -> m9_76  [key=0, style=solid];
m9_63 -> m9_64  [key=0, style=solid];
m9_63 -> m9_9  [key=2, style=dotted];
m9_63 -> m9_39  [key=3, color=darkorchid, style=bold, label="Local variable string resolvedId"];
m9_67 -> m9_68  [key=0, style=solid];
m9_67 -> m9_11  [key=2, style=dotted];
m9_76 -> m9_77  [key=0, style=solid];
m9_76 -> m9_78  [key=0, style=solid];
m9_76 -> m9_10  [key=2, style=dotted];
m9_64 -> m9_65  [key=0, style=solid];
m9_64 -> m9_66  [key=1, style=dashed, color=darkseagreen4, label=executorObject2];
m9_64 -> m9_67  [key=1, style=dashed, color=darkseagreen4, label=executorObject2];
m9_64 -> m9_69  [key=1, style=dashed, color=darkseagreen4, label=executorObject2];
m9_64 -> m9_10  [key=2, style=dotted];
m9_64 -> m9_68  [key=1, style=dashed, color=darkseagreen4, label=executorObject2];
m9_65 -> m9_66  [key=0, style=solid];
m9_65 -> m9_72  [key=2, style=dotted];
m9_68 -> m9_69  [key=0, style=solid];
m9_68 -> m9_72  [key=1, style=dashed, color=darkseagreen4, label=writingAssemblyName];
m9_68 -> m9_73  [key=2, style=dotted];
m9_69 -> m9_70  [key=0, style=solid];
m9_69 -> m9_76  [key=1, style=dashed, color=darkseagreen4, label=skippingAssemblyDetails];
m9_69 -> m9_11  [key=2, style=dotted];
m9_72 -> m9_73  [key=0, style=solid];
m9_72 -> m9_75  [key=0, style=solid];
m9_73 -> m9_74  [key=0, style=solid];
m9_75 -> m9_78  [key=0, style=solid];
m9_75 -> m9_76  [key=1, style=dashed, color=darkseagreen4, label=skippingAssemblyDetails];
m9_352 -> m9_353  [key=0, style=solid];
m9_352 -> m9_354  [key=0, style=solid];
m9_352 -> m9_117  [key=2, style=dotted];
m9_358 -> m9_11  [key=2, style=dotted];
m9_358 -> m9_359  [key=0, style=solid];
m9_358 -> m9_360  [key=0, style=solid];
m9_357 -> m9_9  [key=2, style=dotted];
m9_357 -> m9_358  [key=0, style=solid];
m9_357 -> m9_365  [key=2, style=dotted];
m9_357 -> m9_360  [key=1, style=dashed, color=darkseagreen4, label=members];
m9_353 -> m9_357  [key=1, style=dashed, color=darkseagreen4, label=s];
m9_353 -> m9_354  [key=0, style=solid];
m9_353 -> m9_360  [key=2, style=dotted];
m9_353 -> m9_355  [key=1, style=dashed, color=darkseagreen4, label=s];
m9_353 -> m9_356  [key=1, style=dashed, color=darkseagreen4, label=s];
m9_353 -> m9_364  [key=0, style=solid];
m9_356 -> m9_357  [key=0, style=solid];
m9_356 -> m9_361  [key=2, style=dotted];
m9_356 -> m9_364  [key=0, style=solid];
m9_354 -> m9_355  [key=0, style=solid];
m9_354 -> m9_361  [key=2, style=dotted];
m9_354 -> m9_118  [key=2, style=dotted];
m9_354 -> m9_357  [key=1, style=dashed, color=darkseagreen4, label=genericTypeDefinition];
m9_355 -> m9_356  [key=0, style=solid];
m9_355 -> m9_361  [key=2, style=dotted];
m9_355 -> m9_357  [key=0, style=solid];
m9_359 -> m9_352  [key=0, style=bold, color=blue];
m9_359 -> m9_364  [key=0, style=solid];
m9_2494 -> m9_2495  [key=0, style=solid];
m9_2497 -> m9_11  [key=2, style=dotted];
m9_2497 -> m9_2498  [key=0, style=solid];
m9_2496 -> m9_9  [key=2, style=dotted];
m9_2496 -> m9_2497  [key=0, style=solid];
m9_2495 -> m9_2496  [key=0, style=solid];
m9_2495 -> m9_2500  [key=2, style=dotted];
m9_2495 -> m9_2499  [key=2, style=dotted];
m9_2498 -> m9_2494  [key=0, style=bold, color=blue];
m9_198 -> m9_199  [key=0, style=solid];
m9_778 -> m9_779  [key=0, style=solid];
m9_779 -> m9_780  [key=0, style=solid];
m9_780 -> m9_778  [key=0, style=bold, color=blue];
m9_2408 -> m9_2409  [key=0, style=solid];
m9_2421 -> m9_11  [key=2, style=dotted];
m9_2421 -> m9_2422  [key=0, style=solid];
m9_2420 -> m9_2421  [key=0, style=solid];
m9_2420 -> m9_2428  [key=2, style=dotted];
m9_2420 -> m9_2422  [key=1, style=dashed, color=darkseagreen4, label=newObject];
m9_2422 -> m9_2423  [key=0, style=solid];
m9_2422 -> m9_2429  [key=2, style=dotted];
m9_2410 -> m9_2420  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m9_2410 -> m9_2411  [key=0, style=solid];
m9_2410 -> m9_277  [key=2, style=dotted];
m9_2410 -> m9_2415  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m9_2419 -> m9_2420  [key=0, style=solid];
m9_2419 -> m9_282  [key=2, style=dotted];
m9_2419 -> m9_212  [key=2, style=dotted];
m9_2418 -> m9_175  [key=2, style=dotted];
m9_2418 -> m9_2419  [key=0, style=solid];
m9_2409 -> m9_2410  [key=0, style=solid];
m9_2409 -> m9_2424  [key=2, style=dotted];
m9_2409 -> m9_2415  [key=1, style=dashed, color=darkseagreen4, label=test];
m9_2411 -> m9_2412  [key=0, style=solid];
m9_2415 -> m9_2426  [key=2, style=dotted];
m9_2415 -> m9_2416  [key=0, style=solid];
m9_2414 -> m9_2342  [key=2, style=dotted];
m9_2414 -> m9_2415  [key=0, style=solid];
m9_2414 -> m9_2425  [key=2, style=dotted];
m9_2414 -> m9_2416  [key=1, style=dashed, color=darkseagreen4, label=bsonWriter];
m9_2413 -> m9_53  [key=2, style=dotted];
m9_2413 -> m9_2414  [key=0, style=solid];
m9_2413 -> m9_2417  [key=1, style=dashed, color=darkseagreen4, label=bsonStream];
m9_2417 -> m9_2418  [key=0, style=solid];
m9_2417 -> m9_56  [key=2, style=dotted];
m9_2412 -> m9_2413  [key=0, style=solid];
m9_2416 -> m9_2417  [key=0, style=solid];
m9_2416 -> m9_2427  [key=2, style=dotted];
m9_2423 -> m9_2408  [key=0, style=bold, color=blue];
m9_177 -> m9_178  [key=0, style=solid];
m9_458 -> m9_460  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_458 -> m9_459  [key=0, style=solid];
m9_458 -> m9_214  [key=2, style=dotted];
m9_458 -> m9_215  [key=2, style=dotted];
m9_96 -> m9_93  [key=2, style=dotted];
m9_96 -> m9_97  [key=0, style=solid];
m9_96 -> m9_98  [key=0, style=solid];
m9_97 -> m9_11  [key=2, style=dotted];
m9_97 -> m9_98  [key=0, style=solid];
m9_97 -> m9_97  [key=1, style=dashed, color=darkseagreen4, label=bindingFlags];
m9_95 -> m9_9  [key=2, style=dotted];
m9_95 -> m9_96  [key=0, style=solid];
m9_95 -> m9_99  [key=2, style=dotted];
m9_95 -> m9_97  [key=1, style=dashed, color=darkseagreen4, label=bindingFlags];
m9_95 -> m9_98  [key=1, style=dashed, color=darkseagreen4, label=bindingFlags];
m9_95 -> m9_95  [key=3, color=darkorchid, style=bold, label="Local variable System.Reflection.BindingFlags bindingFlags"];
m9_98 -> m9_94  [key=0, style=bold, color=blue];
m9_98 -> m9_99  [key=0, style=solid];
m9_98 -> m9_100  [key=2, style=dotted];
m9_98 -> m9_101  [key=2, style=dotted];
m9_98 -> m9_102  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_1262 -> m9_1263  [key=0, style=solid];
m9_1263 -> m9_1265  [key=2, style=dotted];
m9_1263 -> m9_1264  [key=0, style=solid];
m9_1264 -> m9_1262  [key=0, style=bold, color=blue];
m9_2717 -> m9_2718  [key=0, style=solid];
m9_2723 -> m9_11  [key=2, style=dotted];
m9_2723 -> m9_2724  [key=0, style=solid];
m9_2724 -> m9_11  [key=2, style=dotted];
m9_2724 -> m9_2725  [key=0, style=solid];
m9_2725 -> m9_11  [key=2, style=dotted];
m9_2725 -> m9_2726  [key=0, style=solid];
m9_2726 -> m9_11  [key=2, style=dotted];
m9_2726 -> m9_2727  [key=0, style=solid];
m9_2727 -> m9_11  [key=2, style=dotted];
m9_2727 -> m9_2728  [key=0, style=solid];
m9_2719 -> m9_2723  [key=1, style=dashed, color=darkseagreen4, label=errors];
m9_2719 -> m9_2724  [key=1, style=dashed, color=darkseagreen4, label=errors];
m9_2719 -> m9_2725  [key=1, style=dashed, color=darkseagreen4, label=errors];
m9_2719 -> m9_2726  [key=1, style=dashed, color=darkseagreen4, label=errors];
m9_2719 -> m9_2727  [key=1, style=dashed, color=darkseagreen4, label=errors];
m9_2719 -> m9_2720  [key=0, style=solid];
m9_2719 -> m9_209  [key=2, style=dotted];
m9_2719 -> m9_2730  [key=1, style=dashed, color=darkseagreen4, label=errors];
m9_2722 -> m9_2723  [key=0, style=solid];
m9_2722 -> m9_686  [key=2, style=dotted];
m9_2718 -> m9_2719  [key=0, style=solid];
m9_2718 -> m9_2721  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_2720 -> m9_2721  [key=0, style=solid];
m9_2720 -> m9_2730  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m9_2720 -> m9_2731  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m9_2721 -> m9_2722  [key=0, style=solid];
m9_2721 -> m9_214  [key=2, style=dotted];
m9_2721 -> m9_474  [key=2, style=dotted];
m9_2728 -> m9_2717  [key=0, style=bold, color=blue];
m9_457 -> m9_458  [key=0, style=solid];
m9_457 -> m9_454  [key=2, style=dotted];
m9_548 -> m9_577  [key=0, style=solid];
m9_464 -> m9_465  [key=0, style=solid];
m9_464 -> m9_468  [key=2, style=dotted];
m9_464 -> m9_469  [key=2, style=dotted];
m9_464 -> m9_466  [key=1, style=dashed, color=darkseagreen4, label=fieldInfos];
m9_467 -> m9_468  [key=0, style=solid];
m9_467 -> m9_214  [key=2, style=dotted];
m9_467 -> m9_215  [key=2, style=dotted];
m9_467 -> m9_469  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_467 -> m9_472  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_467 -> m9_332  [key=0, style=bold, color=blue];
m9_469 -> m9_470  [key=0, style=solid];
m9_469 -> m9_140  [key=2, style=dotted];
m9_469 -> m9_471  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_466 -> m9_467  [key=0, style=solid];
m9_466 -> m9_454  [key=2, style=dotted];
m9_466 -> m9_382  [key=2, style=dotted];
m9_465 -> m9_453  [key=2, style=dotted];
m9_465 -> m9_466  [key=0, style=solid];
m9_465 -> m9_470  [key=2, style=dotted];
m9_470 -> m9_464  [key=0, style=bold, color=blue];
m9_470 -> m9_471  [key=0, style=solid];
m9_470 -> m9_472  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.BindingFlags"];
m9_470 -> m9_473  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m9_470 -> m9_475  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<System.Reflection.MemberInfo>"];
m9_470 -> m9_332  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Reflection.BindingFlags bindingAttr"];
m9_3252 -> m9_3253  [key=0, style=solid];
m9_3254 -> m9_93  [key=2, style=dotted];
m9_3254 -> m9_3255  [key=0, style=solid];
m9_3254 -> m9_3256  [key=1, style=dashed, color=darkseagreen4, label=floats];
m9_3254 -> m9_3257  [key=1, style=dashed, color=darkseagreen4, label=floats];
m9_3258 -> m9_93  [key=2, style=dotted];
m9_3258 -> m9_3259  [key=0, style=solid];
m9_3258 -> m9_3260  [key=1, style=dashed, color=darkseagreen4, label=doubles];
m9_3258 -> m9_3261  [key=1, style=dashed, color=darkseagreen4, label=doubles];
m9_3255 -> m9_11  [key=2, style=dotted];
m9_3255 -> m9_3256  [key=0, style=solid];
m9_3256 -> m9_11  [key=2, style=dotted];
m9_3256 -> m9_3257  [key=0, style=solid];
m9_3257 -> m9_11  [key=2, style=dotted];
m9_3257 -> m9_3258  [key=0, style=solid];
m9_3259 -> m9_11  [key=2, style=dotted];
m9_3259 -> m9_3260  [key=0, style=solid];
m9_3260 -> m9_11  [key=2, style=dotted];
m9_3260 -> m9_3261  [key=0, style=solid];
m9_3261 -> m9_11  [key=2, style=dotted];
m9_3261 -> m9_3262  [key=0, style=solid];
m9_3253 -> m9_3254  [key=0, style=solid];
m9_3253 -> m9_3258  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_3262 -> m9_3252  [key=0, style=bold, color=blue];
m9_1288 -> m9_1289  [key=0, style=solid];
m9_1289 -> m9_1290  [key=0, style=solid];
m9_1289 -> m9_1291  [key=2, style=dotted];
m9_1290 -> m9_1288  [key=0, style=bold, color=blue];
m9_2090 -> m9_2091  [key=0, style=solid];
m9_2093 -> m9_11  [key=2, style=dotted];
m9_2093 -> m9_2094  [key=0, style=solid];
m9_2092 -> m9_2093  [key=0, style=solid];
m9_2092 -> m9_351  [key=2, style=dotted];
m9_2091 -> m9_2092  [key=0, style=solid];
m9_2091 -> m9_2095  [key=2, style=dotted];
m9_2094 -> m9_2090  [key=0, style=bold, color=blue];
m9_3458 -> m9_3459  [key=0, style=solid];
m9_3459 -> m9_79  [key=2, style=dotted];
m9_3459 -> m9_3460  [key=0, style=solid];
m9_3459 -> m9_3461  [key=2, style=dotted];
m9_3459 -> m9_2915  [key=2, style=dotted];
m9_3460 -> m9_3458  [key=0, style=bold, color=blue];
m9_973 -> m9_974  [key=0, style=solid];
m9_974 -> m9_978  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_974 -> m9_975  [key=0, style=solid];
m9_975 -> m9_977  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_975 -> m9_976  [key=0, style=solid];
m9_975 -> m9_140  [key=2, style=dotted];
m9_976 -> m9_973  [key=0, style=bold, color=blue];
m9_2645 -> m9_2646  [key=0, style=solid];
m9_2651 -> m9_93  [key=2, style=dotted];
m9_2651 -> m9_2652  [key=0, style=solid];
m9_2651 -> m9_2653  [key=1, style=dashed, color=darkseagreen4, label=c2];
m9_2651 -> m9_2654  [key=1, style=dashed, color=darkseagreen4, label=c2];
m9_2651 -> m9_2655  [key=1, style=dashed, color=darkseagreen4, label=c2];
m9_2647 -> m9_11  [key=2, style=dotted];
m9_2647 -> m9_2648  [key=0, style=solid];
m9_2647 -> m9_2642  [key=2, style=dotted];
m9_2647 -> m9_2643  [key=2, style=dotted];
m9_2648 -> m9_11  [key=2, style=dotted];
m9_2648 -> m9_2649  [key=0, style=solid];
m9_2648 -> m9_2644  [key=2, style=dotted];
m9_2649 -> m9_11  [key=2, style=dotted];
m9_2649 -> m9_2650  [key=0, style=solid];
m9_2650 -> m9_11  [key=2, style=dotted];
m9_2650 -> m9_2651  [key=0, style=solid];
m9_2652 -> m9_11  [key=2, style=dotted];
m9_2652 -> m9_2653  [key=0, style=solid];
m9_2653 -> m9_11  [key=2, style=dotted];
m9_2653 -> m9_2654  [key=0, style=solid];
m9_2654 -> m9_11  [key=2, style=dotted];
m9_2654 -> m9_2655  [key=0, style=solid];
m9_2655 -> m9_11  [key=2, style=dotted];
m9_2655 -> m9_2656  [key=0, style=solid];
m9_2646 -> m9_2647  [key=0, style=solid];
m9_2646 -> m9_2648  [key=1, style=dashed, color=darkseagreen4, label=c];
m9_2646 -> m9_2649  [key=1, style=dashed, color=darkseagreen4, label=c];
m9_2646 -> m9_2650  [key=1, style=dashed, color=darkseagreen4, label=c];
m9_2646 -> m9_214  [key=2, style=dotted];
m9_2646 -> m9_474  [key=2, style=dotted];
m9_2656 -> m9_2645  [key=0, style=bold, color=blue];
m9_911 -> m9_912  [key=0, style=solid];
m9_913 -> m9_93  [key=2, style=dotted];
m9_913 -> m9_914  [key=0, style=solid];
m9_913 -> m9_915  [key=1, style=dashed, color=darkseagreen4, label=products];
m9_913 -> m9_917  [key=1, style=dashed, color=darkseagreen4, label=products];
m9_913 -> m9_918  [key=1, style=dashed, color=darkseagreen4, label=products];
m9_917 -> m9_11  [key=2, style=dotted];
m9_917 -> m9_918  [key=0, style=solid];
m9_918 -> m9_11  [key=2, style=dotted];
m9_918 -> m9_919  [key=0, style=solid];
m9_912 -> m9_913  [key=0, style=solid];
m9_914 -> m9_915  [key=0, style=solid];
m9_914 -> m9_901  [key=2, style=dotted];
m9_915 -> m9_916  [key=0, style=solid];
m9_916 -> m9_917  [key=0, style=solid];
m9_916 -> m9_12  [key=2, style=dotted];
m9_919 -> m9_911  [key=0, style=bold, color=blue];
m9_3185 -> m9_3186  [key=0, style=solid];
m9_3190 -> m9_11  [key=2, style=dotted];
m9_3190 -> m9_3191  [key=0, style=solid];
m9_3192 -> m9_11  [key=2, style=dotted];
m9_3192 -> m9_3193  [key=0, style=solid];
m9_3193 -> m9_11  [key=2, style=dotted];
m9_3193 -> m9_3194  [key=0, style=solid];
m9_3189 -> m9_3190  [key=0, style=solid];
m9_3189 -> m9_214  [key=2, style=dotted];
m9_3189 -> m9_215  [key=2, style=dotted];
m9_3189 -> m9_3191  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_3191 -> m9_3192  [key=0, style=solid];
m9_3191 -> m9_3193  [key=1, style=dashed, color=darkseagreen4, label=values2];
m9_3191 -> m9_214  [key=2, style=dotted];
m9_3191 -> m9_3195  [key=2, style=dotted];
m9_3188 -> m9_3189  [key=0, style=solid];
m9_3188 -> m9_209  [key=2, style=dotted];
m9_3187 -> m9_3188  [key=0, style=solid];
m9_3186 -> m9_2847  [key=2, style=dotted];
m9_3186 -> m9_3187  [key=0, style=solid];
m9_3194 -> m9_3185  [key=0, style=bold, color=blue];
m9_107 -> m9_108  [key=0, style=solid];
m9_107 -> m9_109  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m9_107 -> m9_110  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m9_107 -> m9_113  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsNullable"];
m9_107 -> m9_7  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsNullable"];
m9_107 -> m9_543  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type t"];
m9_3104 -> m9_3105  [key=0, style=solid];
m9_3105 -> m9_3109  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_3105 -> m9_3106  [key=0, style=solid];
m9_3106 -> m9_3108  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_3106 -> m9_3107  [key=0, style=solid];
m9_3106 -> m9_140  [key=2, style=dotted];
m9_3107 -> m9_3104  [key=0, style=bold, color=blue];
m9_449 -> m9_93  [key=2, style=dotted];
m9_449 -> m9_450  [key=0, style=solid];
m9_449 -> m9_451  [key=1, style=dashed, color=darkseagreen4, label=m2];
m9_450 -> m9_11  [key=2, style=dotted];
m9_450 -> m9_450  [key=3, color=darkorchid, style=bold, label="Local variable string expected"];
m9_450 -> m9_451  [key=0, style=solid];
m9_450 -> m9_452  [key=1, style=dashed, color=darkseagreen4, label=propertyInfo];
m9_451 -> m9_11  [key=2, style=dotted];
m9_451 -> m9_452  [key=0, style=solid];
m9_451 -> m9_241  [key=2, style=dotted];
m9_451 -> m9_455  [key=2, style=dotted];
m9_451 -> m9_456  [key=2, style=dotted];
m9_451 -> m9_460  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_448 -> m9_11  [key=2, style=dotted];
m9_448 -> m9_449  [key=0, style=solid];
m9_448 -> m9_453  [key=0, style=solid];
m9_448 -> m9_228  [key=2, style=dotted];
m9_447 -> m9_9  [key=2, style=dotted];
m9_447 -> m9_449  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_447 -> m9_448  [key=0, style=solid];
m9_447 -> m9_452  [key=1, style=dashed, color=darkseagreen4, label=bindingAttr];
m9_447 -> m9_453  [key=1, style=dashed, color=darkseagreen4, label=bindingAttr];
m9_447 -> m9_447  [key=3, color=darkorchid, style=bold, label="Local variable System.Reflection.BindingFlags bindingAttr"];
m9_446 -> m9_447  [key=0, style=solid];
m9_446 -> m9_454  [key=2, style=dotted];
m9_446 -> m9_448  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m9_446 -> m9_450  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m9_446 -> m9_452  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m9_446 -> m9_453  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m9_446 -> m9_492  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Reflection.MemberInfo memberInfo"];
m9_452 -> m9_444  [key=0, style=bold, color=blue];
m9_452 -> m9_454  [key=0, style=solid];
m9_452 -> m9_457  [key=2, style=dotted];
m9_1266 -> m9_1267  [key=0, style=solid];
m9_1267 -> m9_1268  [key=0, style=solid];
m9_1267 -> m9_1269  [key=2, style=dotted];
m9_1268 -> m9_1266  [key=0, style=bold, color=blue];
m9_952 -> m9_953  [key=0, style=solid];
m9_953 -> m9_957  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_953 -> m9_954  [key=0, style=solid];
m9_954 -> m9_956  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_954 -> m9_955  [key=0, style=solid];
m9_954 -> m9_140  [key=2, style=dotted];
m9_955 -> m9_952  [key=0, style=bold, color=blue];
m9_2733 -> m9_2734  [key=0, style=solid];
m9_2739 -> m9_11  [key=2, style=dotted];
m9_2739 -> m9_2740  [key=0, style=solid];
m9_2740 -> m9_11  [key=2, style=dotted];
m9_2740 -> m9_2741  [key=0, style=solid];
m9_2741 -> m9_11  [key=2, style=dotted];
m9_2741 -> m9_2742  [key=0, style=solid];
m9_2742 -> m9_11  [key=2, style=dotted];
m9_2742 -> m9_2743  [key=0, style=solid];
m9_2735 -> m9_2739  [key=1, style=dashed, color=darkseagreen4, label=errors];
m9_2735 -> m9_2740  [key=1, style=dashed, color=darkseagreen4, label=errors];
m9_2735 -> m9_2741  [key=1, style=dashed, color=darkseagreen4, label=errors];
m9_2735 -> m9_2742  [key=1, style=dashed, color=darkseagreen4, label=errors];
m9_2735 -> m9_2736  [key=0, style=solid];
m9_2735 -> m9_209  [key=2, style=dotted];
m9_2735 -> m9_2745  [key=1, style=dashed, color=darkseagreen4, label=errors];
m9_2738 -> m9_2739  [key=0, style=solid];
m9_2738 -> m9_686  [key=2, style=dotted];
m9_2734 -> m9_2735  [key=0, style=solid];
m9_2734 -> m9_2737  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_2736 -> m9_2737  [key=0, style=solid];
m9_2736 -> m9_2745  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m9_2736 -> m9_2746  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m9_2737 -> m9_2738  [key=0, style=solid];
m9_2737 -> m9_214  [key=2, style=dotted];
m9_2737 -> m9_474  [key=2, style=dotted];
m9_2743 -> m9_2733  [key=0, style=bold, color=blue];
m9_2817 -> m9_2818  [key=0, style=solid];
m9_2820 -> m9_11  [key=2, style=dotted];
m9_2820 -> m9_2821  [key=0, style=solid];
m9_2821 -> m9_11  [key=2, style=dotted];
m9_2821 -> m9_2822  [key=0, style=solid];
m9_2818 -> m9_2820  [key=1, style=dashed, color=darkseagreen4, label=testObj];
m9_2818 -> m9_2819  [key=0, style=solid];
m9_2818 -> m9_2823  [key=2, style=dotted];
m9_2819 -> m9_2820  [key=0, style=solid];
m9_2819 -> m9_2821  [key=1, style=dashed, color=darkseagreen4, label=objDeserialized];
m9_2819 -> m9_2824  [key=2, style=dotted];
m9_2822 -> m9_2817  [key=0, style=bold, color=blue];
m9_1152 -> m9_1153  [key=0, style=solid];
m9_1153 -> m9_52  [key=2, style=dotted];
m9_1153 -> m9_1154  [key=0, style=solid];
m9_1154 -> m9_209  [key=2, style=dotted];
m9_1154 -> m9_1155  [key=0, style=solid];
m9_1155 -> m9_1152  [key=0, style=bold, color=blue];
m9_2080 -> m9_2081  [key=0, style=solid];
m9_2084 -> m9_93  [key=2, style=dotted];
m9_2084 -> m9_2085  [key=0, style=solid];
m9_2084 -> m9_2086  [key=1, style=dashed, color=darkseagreen4, label=c2];
m9_2084 -> m9_2087  [key=1, style=dashed, color=darkseagreen4, label=c2];
m9_2083 -> m9_11  [key=2, style=dotted];
m9_2083 -> m9_2084  [key=0, style=solid];
m9_2085 -> m9_11  [key=2, style=dotted];
m9_2085 -> m9_2086  [key=0, style=solid];
m9_2085 -> m9_810  [key=2, style=dotted];
m9_2086 -> m9_11  [key=2, style=dotted];
m9_2086 -> m9_2087  [key=0, style=solid];
m9_2086 -> m9_810  [key=2, style=dotted];
m9_2087 -> m9_11  [key=2, style=dotted];
m9_2087 -> m9_2088  [key=0, style=solid];
m9_2087 -> m9_810  [key=2, style=dotted];
m9_2082 -> m9_2084  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_2082 -> m9_2083  [key=0, style=solid];
m9_2082 -> m9_351  [key=2, style=dotted];
m9_2081 -> m9_2082  [key=0, style=solid];
m9_2081 -> m9_2089  [key=2, style=dotted];
m9_2081 -> m9_209  [key=2, style=dotted];
m9_2088 -> m9_2080  [key=0, style=bold, color=blue];
m9_384 -> m9_385  [key=0, style=solid];
m9_384 -> m9_13  [key=2, style=dotted];
m9_384 -> m9_14  [key=2, style=dotted];
m9_385 -> m9_386  [key=0, style=solid];
m9_385 -> m9_387  [key=1, style=dashed, color=darkseagreen4, label=provider];
m9_385 -> m9_391  [key=1, style=dashed, color=darkseagreen4, label=provider];
m9_385 -> m9_392  [key=1, style=dashed, color=darkseagreen4, label=provider];
m9_385 -> m9_394  [key=1, style=dashed, color=darkseagreen4, label=provider];
m9_385 -> m9_395  [key=1, style=dashed, color=darkseagreen4, label=provider];
m9_385 -> m9_397  [key=1, style=dashed, color=darkseagreen4, label=provider];
m9_385 -> m9_398  [key=1, style=dashed, color=darkseagreen4, label=provider];
m9_385 -> m9_400  [key=1, style=dashed, color=darkseagreen4, label=provider];
m9_385 -> m9_401  [key=1, style=dashed, color=darkseagreen4, label=provider];
m9_385 -> m9_381  [key=3, color=darkorchid, style=bold, label="Local variable object provider"];
m9_388 -> m9_389  [key=0, style=solid];
m9_388 -> m9_407  [key=2, style=dotted];
m9_388 -> m9_408  [key=2, style=dotted];
m9_388 -> m9_11  [key=2, style=dotted];
m9_393 -> m9_406  [key=0, style=solid];
m9_393 -> m9_409  [key=2, style=dotted];
m9_393 -> m9_410  [key=2, style=dotted];
m9_396 -> m9_406  [key=0, style=solid];
m9_396 -> m9_411  [key=2, style=dotted];
m9_396 -> m9_412  [key=2, style=dotted];
m9_396 -> m9_93  [key=2, style=dotted];
m9_396 -> m9_397  [key=0, style=solid];
m9_396 -> m9_398  [key=1, style=dashed, color=darkseagreen4, label=o];
m9_396 -> m9_399  [key=1, style=dashed, color=darkseagreen4, label=o];
m9_399 -> m9_406  [key=0, style=solid];
m9_399 -> m9_413  [key=2, style=dotted];
m9_399 -> m9_414  [key=2, style=dotted];
m9_399 -> m9_11  [key=2, style=dotted];
m9_399 -> m9_400  [key=0, style=solid];
m9_386 -> m9_387  [key=0, style=solid];
m9_386 -> m9_391  [key=0, style=solid];
m9_387 -> m9_388  [key=0, style=solid];
m9_387 -> m9_9  [key=2, style=dotted];
m9_387 -> m9_393  [key=2, style=dotted];
m9_391 -> m9_392  [key=0, style=solid];
m9_391 -> m9_394  [key=0, style=solid];
m9_391 -> m9_11  [key=2, style=dotted];
m9_392 -> m9_393  [key=0, style=solid];
m9_392 -> m9_386  [key=0, style=bold, color=blue];
m9_394 -> m9_395  [key=0, style=solid];
m9_394 -> m9_397  [key=0, style=solid];
m9_395 -> m9_396  [key=0, style=solid];
m9_397 -> m9_398  [key=0, style=solid];
m9_397 -> m9_400  [key=0, style=solid];
m9_397 -> m9_11  [key=2, style=dotted];
m9_398 -> m9_399  [key=0, style=solid];
m9_398 -> m9_11  [key=2, style=dotted];
m9_400 -> m9_401  [key=0, style=solid];
m9_400 -> m9_403  [key=0, style=solid];
m9_400 -> m9_394  [key=0, style=bold, color=blue];
m9_389 -> m9_390  [key=0, style=solid];
m9_389 -> m9_382  [key=2, style=dotted];
m9_389 -> m9_383  [key=2, style=dotted];
m9_389 -> m9_93  [key=2, style=dotted];
m9_389 -> m9_391  [key=1, style=dashed, color=darkseagreen4, label=c];
m9_390 -> m9_406  [key=0, style=solid];
m9_390 -> m9_11  [key=2, style=dotted];
m9_390 -> m9_391  [key=0, style=solid];
m9_2501 -> m9_2502  [key=0, style=solid];
m9_2503 -> m9_93  [key=2, style=dotted];
m9_2503 -> m9_2504  [key=0, style=solid];
m9_2503 -> m9_2505  [key=1, style=dashed, color=darkseagreen4, label=w];
m9_2503 -> m9_2506  [key=1, style=dashed, color=darkseagreen4, label=w];
m9_2504 -> m9_11  [key=2, style=dotted];
m9_2504 -> m9_2505  [key=0, style=solid];
m9_2504 -> m9_2500  [key=2, style=dotted];
m9_2505 -> m9_11  [key=2, style=dotted];
m9_2505 -> m9_2506  [key=0, style=solid];
m9_2505 -> m9_2500  [key=2, style=dotted];
m9_2506 -> m9_11  [key=2, style=dotted];
m9_2506 -> m9_2507  [key=0, style=solid];
m9_2502 -> m9_2503  [key=0, style=solid];
m9_2507 -> m9_2501  [key=0, style=bold, color=blue];
m9_3427 -> m9_3428  [key=0, style=solid];
m9_3428 -> m9_3427  [key=0, style=bold, color=blue];
m9_456 -> m9_461  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m9_456 -> m9_462  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m9_456 -> m9_457  [key=0, style=solid];
m9_456 -> m9_453  [key=2, style=dotted];
m9_463 -> m9_455  [key=0, style=bold, color=blue];
m9_463 -> m9_464  [key=0, style=solid];
m9_463 -> m9_13  [key=2, style=dotted];
m9_463 -> m9_14  [key=2, style=dotted];
m9_3118 -> m9_3119  [key=0, style=solid];
m9_3119 -> m9_3123  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_3119 -> m9_3120  [key=0, style=solid];
m9_3120 -> m9_3122  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_3120 -> m9_3121  [key=0, style=solid];
m9_3120 -> m9_140  [key=2, style=dotted];
m9_3121 -> m9_3118  [key=0, style=bold, color=blue];
m9_2568 -> m9_2569  [key=0, style=solid];
m9_2573 -> m9_11  [key=2, style=dotted];
m9_2573 -> m9_2574  [key=0, style=solid];
m9_2570 -> m9_2573  [key=1, style=dashed, color=darkseagreen4, label=dict];
m9_2570 -> m9_2571  [key=0, style=solid];
m9_2570 -> m9_282  [key=2, style=dotted];
m9_2570 -> m9_283  [key=2, style=dotted];
m9_2570 -> m9_2548  [key=2, style=dotted];
m9_2572 -> m9_2573  [key=0, style=solid];
m9_2572 -> m9_2548  [key=2, style=dotted];
m9_2569 -> m9_2570  [key=0, style=solid];
m9_2569 -> m9_2572  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m9_2569 -> m9_214  [key=2, style=dotted];
m9_2569 -> m9_2547  [key=2, style=dotted];
m9_2571 -> m9_2572  [key=0, style=solid];
m9_2571 -> m9_282  [key=2, style=dotted];
m9_2571 -> m9_283  [key=2, style=dotted];
m9_2574 -> m9_2568  [key=0, style=bold, color=blue];
m9_2748 -> m9_2749  [key=0, style=solid];
m9_2753 -> m9_11  [key=2, style=dotted];
m9_2753 -> m9_2754  [key=0, style=solid];
m9_2754 -> m9_11  [key=2, style=dotted];
m9_2754 -> m9_2755  [key=0, style=solid];
m9_2755 -> m9_11  [key=2, style=dotted];
m9_2755 -> m9_2756  [key=0, style=solid];
m9_2756 -> m9_11  [key=2, style=dotted];
m9_2756 -> m9_2757  [key=0, style=solid];
m9_2752 -> m9_11  [key=2, style=dotted];
m9_2752 -> m9_2753  [key=0, style=solid];
m9_2749 -> m9_2753  [key=1, style=dashed, color=darkseagreen4, label=errors];
m9_2749 -> m9_2754  [key=1, style=dashed, color=darkseagreen4, label=errors];
m9_2749 -> m9_2755  [key=1, style=dashed, color=darkseagreen4, label=errors];
m9_2749 -> m9_2756  [key=1, style=dashed, color=darkseagreen4, label=errors];
m9_2749 -> m9_2750  [key=0, style=solid];
m9_2749 -> m9_209  [key=2, style=dotted];
m9_2749 -> m9_2760  [key=1, style=dashed, color=darkseagreen4, label=errors];
m9_2751 -> m9_2752  [key=0, style=solid];
m9_2751 -> m9_2758  [key=2, style=dotted];
m9_2751 -> m9_214  [key=2, style=dotted];
m9_2751 -> m9_215  [key=2, style=dotted];
m9_2750 -> m9_2751  [key=0, style=solid];
m9_2750 -> m9_2760  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m9_2750 -> m9_2761  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m9_2757 -> m9_2748  [key=0, style=bold, color=blue];
m9_2373 -> m9_2374  [key=0, style=solid];
m9_2375 -> m9_93  [key=2, style=dotted];
m9_2375 -> m9_2376  [key=0, style=solid];
m9_2375 -> m9_2377  [key=1, style=dashed, color=darkseagreen4, label=values];
m9_2375 -> m9_2378  [key=1, style=dashed, color=darkseagreen4, label=values];
m9_2375 -> m9_2379  [key=1, style=dashed, color=darkseagreen4, label=values];
m9_2375 -> m9_2380  [key=1, style=dashed, color=darkseagreen4, label=values];
m9_2375 -> m9_2381  [key=1, style=dashed, color=darkseagreen4, label=values];
m9_2375 -> m9_2382  [key=1, style=dashed, color=darkseagreen4, label=values];
m9_2375 -> m9_2383  [key=1, style=dashed, color=darkseagreen4, label=values];
m9_2375 -> m9_2384  [key=1, style=dashed, color=darkseagreen4, label=values];
m9_2375 -> m9_2385  [key=1, style=dashed, color=darkseagreen4, label=values];
m9_2376 -> m9_11  [key=2, style=dotted];
m9_2376 -> m9_2377  [key=0, style=solid];
m9_2377 -> m9_11  [key=2, style=dotted];
m9_2377 -> m9_2378  [key=0, style=solid];
m9_2378 -> m9_11  [key=2, style=dotted];
m9_2378 -> m9_2379  [key=0, style=solid];
m9_2379 -> m9_11  [key=2, style=dotted];
m9_2379 -> m9_2380  [key=0, style=solid];
m9_2380 -> m9_11  [key=2, style=dotted];
m9_2380 -> m9_2381  [key=0, style=solid];
m9_2381 -> m9_11  [key=2, style=dotted];
m9_2381 -> m9_2382  [key=0, style=solid];
m9_2382 -> m9_11  [key=2, style=dotted];
m9_2382 -> m9_2383  [key=0, style=solid];
m9_2383 -> m9_11  [key=2, style=dotted];
m9_2383 -> m9_2384  [key=0, style=solid];
m9_2384 -> m9_11  [key=2, style=dotted];
m9_2384 -> m9_2385  [key=0, style=solid];
m9_2385 -> m9_11  [key=2, style=dotted];
m9_2385 -> m9_2386  [key=0, style=solid];
m9_2374 -> m9_2375  [key=0, style=solid];
m9_2386 -> m9_2373  [key=0, style=bold, color=blue];
m9_3348 -> m9_3349  [key=0, style=solid];
m9_3349 -> m9_93  [key=2, style=dotted];
m9_3349 -> m9_3350  [key=0, style=solid];
m9_3349 -> m9_3351  [key=1, style=dashed, color=darkseagreen4, label=dic];
m9_3349 -> m9_3352  [key=1, style=dashed, color=darkseagreen4, label=dic];
m9_3349 -> m9_3353  [key=1, style=dashed, color=darkseagreen4, label=dic];
m9_3350 -> m9_11  [key=2, style=dotted];
m9_3350 -> m9_3351  [key=0, style=solid];
m9_3351 -> m9_11  [key=2, style=dotted];
m9_3351 -> m9_3352  [key=0, style=solid];
m9_3352 -> m9_11  [key=2, style=dotted];
m9_3352 -> m9_3353  [key=0, style=solid];
m9_3353 -> m9_3354  [key=0, style=solid];
m9_3353 -> m9_891  [key=2, style=dotted];
m9_3354 -> m9_3348  [key=0, style=bold, color=blue];
m9_182 -> m9_183  [key=0, style=solid];
m9_182 -> m9_185  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m9_182 -> m9_186  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m9_182 -> m9_187  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m9_182 -> m9_189  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m9_182 -> m9_191  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m9_182 -> m9_193  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m9_182 -> m9_25  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Type GetCollectionItemType"];
m9_182 -> m9_54  [key=2, style=dotted];
m9_183 -> m9_184  [key=0, style=solid];
m9_183 -> m9_13  [key=2, style=dotted];
m9_183 -> m9_14  [key=2, style=dotted];
m9_183 -> m9_186  [key=1, style=dashed, color=darkseagreen4, label=dataContractResult];
m9_183 -> m9_175  [key=2, style=dotted];
m9_183 -> m9_176  [key=2, style=dotted];
m9_183 -> m9_177  [key=2, style=dotted];
m9_185 -> m9_186  [key=0, style=solid];
m9_185 -> m9_187  [key=0, style=solid];
m9_185 -> m9_11  [key=2, style=dotted];
m9_186 -> m9_194  [key=0, style=solid];
m9_186 -> m9_195  [key=2, style=dotted];
m9_186 -> m9_11  [key=2, style=dotted];
m9_186 -> m9_187  [key=0, style=solid];
m9_187 -> m9_188  [key=0, style=solid];
m9_187 -> m9_191  [key=0, style=solid];
m9_187 -> m9_133  [key=2, style=dotted];
m9_187 -> m9_190  [key=1, style=dashed, color=darkseagreen4, label=genericListType];
m9_187 -> m9_11  [key=2, style=dotted];
m9_184 -> m9_185  [key=0, style=solid];
m9_184 -> m9_93  [key=2, style=dotted];
m9_184 -> m9_186  [key=1, style=dashed, color=darkseagreen4, label=jsonNetResult];
m9_184 -> m9_187  [key=1, style=dashed, color=darkseagreen4, label=jsonNetResult];
m9_188 -> m9_189  [key=0, style=solid];
m9_188 -> m9_190  [key=0, style=solid];
m9_188 -> m9_154  [key=2, style=dotted];
m9_188 -> m9_178  [key=0, style=bold, color=blue];
m9_190 -> m9_194  [key=0, style=solid];
m9_190 -> m9_197  [key=2, style=dotted];
m9_86 -> m9_87  [key=0, style=solid];
m9_86 -> m9_88  [key=0, style=solid];
m9_86 -> m9_90  [key=2, style=dotted];
m9_88 -> m9_89  [key=0, style=solid];
m9_88 -> m9_91  [key=2, style=dotted];
m9_88 -> m9_93  [key=2, style=dotted];
m9_88 -> m9_90  [key=1, style=dashed, color=darkseagreen4, label=c];
m9_87 -> m9_89  [key=0, style=solid];
m9_87 -> m9_9  [key=2, style=dotted];
m9_87 -> m9_88  [key=0, style=solid];
m9_87 -> m9_92  [key=2, style=dotted];
m9_89 -> m9_84  [key=0, style=bold, color=blue];
m9_89 -> m9_11  [key=2, style=dotted];
m9_89 -> m9_90  [key=0, style=solid];
m9_2321 -> m9_2322  [key=0, style=solid];
m9_2325 -> m9_93  [key=2, style=dotted];
m9_2325 -> m9_2326  [key=0, style=solid];
m9_2325 -> m9_2327  [key=1, style=dashed, color=darkseagreen4, label=v2];
m9_2325 -> m9_2328  [key=1, style=dashed, color=darkseagreen4, label=v2];
m9_2325 -> m9_2329  [key=1, style=dashed, color=darkseagreen4, label=v2];
m9_2324 -> m9_11  [key=2, style=dotted];
m9_2324 -> m9_2325  [key=0, style=solid];
m9_2326 -> m9_11  [key=2, style=dotted];
m9_2326 -> m9_2327  [key=0, style=solid];
m9_2327 -> m9_11  [key=2, style=dotted];
m9_2327 -> m9_2328  [key=0, style=solid];
m9_2328 -> m9_11  [key=2, style=dotted];
m9_2328 -> m9_2329  [key=0, style=solid];
m9_2329 -> m9_11  [key=2, style=dotted];
m9_2329 -> m9_2330  [key=0, style=solid];
m9_2323 -> m9_2325  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_2323 -> m9_2324  [key=0, style=solid];
m9_2323 -> m9_351  [key=2, style=dotted];
m9_2322 -> m9_2323  [key=0, style=solid];
m9_2322 -> m9_52  [key=2, style=dotted];
m9_2330 -> m9_2321  [key=0, style=bold, color=blue];
m9_1138 -> m9_1139  [key=0, style=solid];
m9_1148 -> m9_93  [key=2, style=dotted];
m9_1148 -> m9_1149  [key=0, style=solid];
m9_1149 -> m9_11  [key=2, style=dotted];
m9_1149 -> m9_1150  [key=0, style=solid];
m9_1147 -> m9_11  [key=2, style=dotted];
m9_1147 -> m9_1148  [key=0, style=solid];
m9_1146 -> m9_1148  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_1146 -> m9_1147  [key=0, style=solid];
m9_1146 -> m9_351  [key=2, style=dotted];
m9_1140 -> m9_1149  [key=1, style=dashed, color=darkseagreen4, label=wagePerson];
m9_1140 -> m9_1141  [key=0, style=solid];
m9_1140 -> m9_1142  [key=1, style=dashed, color=darkseagreen4, label=wagePerson];
m9_1140 -> m9_1143  [key=1, style=dashed, color=darkseagreen4, label=wagePerson];
m9_1140 -> m9_1144  [key=1, style=dashed, color=darkseagreen4, label=wagePerson];
m9_1140 -> m9_1145  [key=1, style=dashed, color=darkseagreen4, label=wagePerson];
m9_1139 -> m9_1146  [key=1, style=dashed, color=darkseagreen4, label=personPropertyClass];
m9_1139 -> m9_1140  [key=0, style=solid];
m9_1139 -> m9_1151  [key=2, style=dotted];
m9_1145 -> m9_1146  [key=0, style=solid];
m9_1141 -> m9_210  [key=2, style=dotted];
m9_1141 -> m9_1142  [key=0, style=solid];
m9_1144 -> m9_210  [key=2, style=dotted];
m9_1144 -> m9_1145  [key=0, style=solid];
m9_1142 -> m9_1143  [key=0, style=solid];
m9_1143 -> m9_1144  [key=0, style=solid];
m9_1150 -> m9_1138  [key=0, style=bold, color=blue];
m9_1204 -> m9_1205  [key=0, style=solid];
m9_1206 -> m9_140  [key=2, style=dotted];
m9_1206 -> m9_1207  [key=0, style=solid];
m9_1206 -> m9_1208  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_1205 -> m9_1209  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_1205 -> m9_1206  [key=0, style=solid];
m9_1207 -> m9_1204  [key=0, style=bold, color=blue];
m9_115 -> m9_104  [key=3, color=darkorchid, style=bold, label="Local variable string expected"];
m9_115 -> m9_116  [key=0, style=solid];
m9_115 -> m9_117  [key=2, style=dotted];
m9_115 -> m9_118  [key=2, style=dotted];
m9_118 -> m9_11  [key=2, style=dotted];
m9_118 -> m9_119  [key=0, style=solid];
m9_118 -> m9_123  [key=2, style=dotted];
m9_118 -> m9_124  [key=2, style=dotted];
m9_121 -> m9_11  [key=2, style=dotted];
m9_121 -> m9_122  [key=0, style=solid];
m9_121 -> m9_125  [key=2, style=dotted];
m9_121 -> m9_124  [key=2, style=dotted];
m9_121 -> m9_119  [key=0, style=bold, color=blue];
m9_116 -> m9_83  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonObjectContract contract"];
m9_116 -> m9_60  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type type"];
m9_116 -> m9_117  [key=0, style=solid];
m9_116 -> m9_113  [key=0, style=bold, color=blue];
m9_119 -> m9_120  [key=0, style=solid];
m9_120 -> m9_121  [key=0, style=solid];
m9_120 -> m9_113  [key=2, style=dotted];
m9_120 -> m9_122  [key=2, style=dotted];
m9_869 -> m9_870  [key=0, style=solid];
m9_871 -> m9_93  [key=2, style=dotted];
m9_871 -> m9_872  [key=0, style=solid];
m9_871 -> m9_873  [key=1, style=dashed, color=darkseagreen4, label=o];
m9_871 -> m9_874  [key=1, style=dashed, color=darkseagreen4, label=o];
m9_871 -> m9_875  [key=1, style=dashed, color=darkseagreen4, label=o];
m9_871 -> m9_876  [key=1, style=dashed, color=darkseagreen4, label=o];
m9_872 -> m9_11  [key=2, style=dotted];
m9_872 -> m9_873  [key=0, style=solid];
m9_873 -> m9_11  [key=2, style=dotted];
m9_873 -> m9_874  [key=0, style=solid];
m9_874 -> m9_11  [key=2, style=dotted];
m9_874 -> m9_875  [key=0, style=solid];
m9_875 -> m9_11  [key=2, style=dotted];
m9_875 -> m9_876  [key=0, style=solid];
m9_876 -> m9_11  [key=2, style=dotted];
m9_876 -> m9_877  [key=0, style=solid];
m9_870 -> m9_871  [key=0, style=solid];
m9_877 -> m9_869  [key=0, style=bold, color=blue];
m9_256 -> m9_260  [key=1, style=dashed, color=darkseagreen4, label=settings];
m9_256 -> m9_258  [key=1, style=dashed, color=darkseagreen4, label=settings];
m9_256 -> m9_214  [key=2, style=dotted];
m9_256 -> m9_257  [key=0, style=solid];
m9_2984 -> m9_2985  [key=0, style=solid];
m9_2986 -> m9_93  [key=2, style=dotted];
m9_2986 -> m9_2987  [key=0, style=solid];
m9_2988 -> m9_11  [key=2, style=dotted];
m9_2988 -> m9_2989  [key=0, style=solid];
m9_2988 -> m9_1517  [key=2, style=dotted];
m9_2985 -> m9_2986  [key=0, style=solid];
m9_2987 -> m9_2988  [key=0, style=solid];
m9_2989 -> m9_2984  [key=0, style=bold, color=blue];
m9_707 -> m9_708  [key=0, style=solid];
m9_711 -> m9_11  [key=2, style=dotted];
m9_711 -> m9_712  [key=0, style=solid];
m9_714 -> m9_11  [key=2, style=dotted];
m9_714 -> m9_715  [key=0, style=solid];
m9_710 -> m9_711  [key=0, style=solid];
m9_710 -> m9_214  [key=2, style=dotted];
m9_710 -> m9_215  [key=2, style=dotted];
m9_710 -> m9_712  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_712 -> m9_713  [key=0, style=solid];
m9_712 -> m9_214  [key=2, style=dotted];
m9_712 -> m9_474  [key=2, style=dotted];
m9_713 -> m9_714  [key=0, style=solid];
m9_713 -> m9_214  [key=2, style=dotted];
m9_713 -> m9_215  [key=2, style=dotted];
m9_708 -> m9_710  [key=1, style=dashed, color=darkseagreen4, label=i];
m9_708 -> m9_709  [key=0, style=solid];
m9_708 -> m9_706  [key=2, style=dotted];
m9_709 -> m9_710  [key=0, style=solid];
m9_715 -> m9_707  [key=0, style=bold, color=blue];
m9_2625 -> m9_2626  [key=0, style=solid];
m9_2628 -> m9_11  [key=2, style=dotted];
m9_2628 -> m9_2629  [key=0, style=solid];
m9_2627 -> m9_2628  [key=0, style=solid];
m9_2627 -> m9_263  [key=2, style=dotted];
m9_2627 -> m9_443  [key=2, style=dotted];
m9_2626 -> m9_2627  [key=0, style=solid];
m9_2629 -> m9_2625  [key=0, style=bold, color=blue];
m9_3077 -> m9_3078  [key=0, style=solid];
m9_3078 -> m9_3082  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_3078 -> m9_3079  [key=0, style=solid];
m9_3079 -> m9_3081  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_3079 -> m9_3080  [key=0, style=solid];
m9_3079 -> m9_140  [key=2, style=dotted];
m9_3080 -> m9_3077  [key=0, style=bold, color=blue];
m9_2021 -> m9_2022  [key=0, style=solid];
m9_2024 -> m9_93  [key=2, style=dotted];
m9_2024 -> m9_2025  [key=0, style=solid];
m9_2024 -> m9_2026  [key=1, style=dashed, color=darkseagreen4, label=deserializedResponse];
m9_2025 -> m9_11  [key=2, style=dotted];
m9_2025 -> m9_2026  [key=0, style=solid];
m9_2023 -> m9_2024  [key=0, style=solid];
m9_2023 -> m9_351  [key=2, style=dotted];
m9_2026 -> m9_2027  [key=0, style=solid];
m9_2026 -> m9_2030  [key=2, style=dotted];
m9_2026 -> m9_1793  [key=2, style=dotted];
m9_2022 -> m9_2023  [key=0, style=solid];
m9_2022 -> m9_2026  [key=1, style=dashed, color=darkseagreen4, label=response];
m9_2022 -> m9_2028  [key=2, style=dotted];
m9_2022 -> m9_2029  [key=2, style=dotted];
m9_2022 -> m9_847  [key=2, style=dotted];
m9_2027 -> m9_2021  [key=0, style=bold, color=blue];
m9_1994 -> m9_1995  [key=0, style=solid];
m9_1995 -> m9_1336  [key=2, style=dotted];
m9_1995 -> m9_1996  [key=0, style=solid];
m9_1995 -> m9_3528  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable"];
m9_1996 -> m9_1994  [key=0, style=bold, color=blue];
m9_3217 -> m9_3218  [key=0, style=solid];
m9_3220 -> m9_11  [key=2, style=dotted];
m9_3220 -> m9_3221  [key=0, style=solid];
m9_3219 -> m9_3220  [key=0, style=solid];
m9_3219 -> m9_214  [key=2, style=dotted];
m9_3219 -> m9_728  [key=2, style=dotted];
m9_3218 -> m9_210  [key=2, style=dotted];
m9_3218 -> m9_223  [key=2, style=dotted];
m9_3218 -> m9_222  [key=2, style=dotted];
m9_3218 -> m9_3219  [key=0, style=solid];
m9_3218 -> m9_209  [key=2, style=dotted];
m9_3221 -> m9_3217  [key=0, style=bold, color=blue];
m9_1118 -> m9_1119  [key=0, style=solid];
m9_1119 -> m9_1121  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_1119 -> m9_140  [key=2, style=dotted];
m9_1119 -> m9_1120  [key=0, style=solid];
m9_1120 -> m9_1118  [key=0, style=bold, color=blue];
m9_2060 -> m9_2061  [key=0, style=solid];
m9_2061 -> m9_93  [key=2, style=dotted];
m9_2061 -> m9_2062  [key=0, style=solid];
m9_2061 -> m9_2063  [key=1, style=dashed, color=darkseagreen4, label=c];
m9_2062 -> m9_11  [key=2, style=dotted];
m9_2062 -> m9_2063  [key=0, style=solid];
m9_2063 -> m9_11  [key=2, style=dotted];
m9_2063 -> m9_2064  [key=0, style=solid];
m9_2064 -> m9_2060  [key=0, style=bold, color=blue];
m9_3393 -> m9_3394  [key=0, style=solid];
m9_3397 -> m9_11  [key=2, style=dotted];
m9_3397 -> m9_3398  [key=0, style=solid];
m9_3396 -> m9_3397  [key=0, style=solid];
m9_3396 -> m9_351  [key=2, style=dotted];
m9_3395 -> m9_3396  [key=0, style=solid];
m9_3395 -> m9_3384  [key=2, style=dotted];
m9_3394 -> m9_209  [key=2, style=dotted];
m9_3394 -> m9_3395  [key=0, style=solid];
m9_3398 -> m9_3393  [key=0, style=bold, color=blue];
m9_171 -> m9_93  [key=2, style=dotted];
m9_171 -> m9_172  [key=0, style=solid];
m9_171 -> m9_173  [key=1, style=dashed, color=darkseagreen4, label=jsonNetResult];
m9_171 -> m9_176  [key=0, style=solid];
m9_171 -> m9_117  [key=2, style=dotted];
m9_173 -> m9_11  [key=2, style=dotted];
m9_173 -> m9_174  [key=0, style=solid];
m9_173 -> m9_176  [key=0, style=solid];
m9_172 -> m9_11  [key=2, style=dotted];
m9_172 -> m9_173  [key=0, style=solid];
m9_172 -> m9_118  [key=2, style=dotted];
m9_170 -> m9_171  [key=0, style=solid];
m9_170 -> m9_173  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m9_170 -> m9_175  [key=2, style=dotted];
m9_170 -> m9_176  [key=2, style=dotted];
m9_170 -> m9_177  [key=2, style=dotted];
m9_170 -> m9_172  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m9_170 -> m9_174  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m9_170 -> m9_179  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m9_170 -> m9_162  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type implementingType"];
m9_170 -> m9_170  [key=3, color=darkorchid, style=bold, label="method methodReturn bool InheritsGenericDefinitionInternal"];
m9_170 -> m9_7  [key=3, color=darkorchid, style=bold, label="method methodReturn bool InheritsGenericDefinitionInternal"];
m9_170 -> m9_11  [key=3, color=darkorchid, style=bold, label="method methodReturn bool InheritsGenericDefinitionInternal"];
m9_174 -> m9_167  [key=0, style=bold, color=blue];
m9_174 -> m9_175  [key=0, style=solid];
m9_2172 -> m9_2173  [key=0, style=solid];
m9_2175 -> m9_11  [key=2, style=dotted];
m9_2175 -> m9_2176  [key=0, style=solid];
m9_2174 -> m9_2175  [key=0, style=solid];
m9_2174 -> m9_351  [key=2, style=dotted];
m9_2173 -> m9_210  [key=2, style=dotted];
m9_2173 -> m9_2174  [key=0, style=solid];
m9_2173 -> m9_2177  [key=2, style=dotted];
m9_2176 -> m9_2172  [key=0, style=bold, color=blue];
m9_91 -> m9_95  [key=0, style=solid];
m9_91 -> m9_96  [key=1, style=dashed, color=darkseagreen4, label=bool];
m9_91 -> m9_98  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m9_91 -> m9_84  [key=3, color=darkorchid, style=bold, label="Parameter variable bool nonPublic"];
m9_91 -> m9_92  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type t"];
m9_91 -> m9_11  [key=3, color=darkorchid, style=bold, label="Parameter variable bool nonPublic"];
m9_91 -> m9_86  [key=0, style=bold, color=blue];
m9_2912 -> m9_2913  [key=0, style=solid];
m9_2913 -> m9_2915  [key=2, style=dotted];
m9_2913 -> m9_2914  [key=0, style=solid];
m9_2914 -> m9_2912  [key=0, style=bold, color=blue];
m9_1296 -> m9_1297  [key=0, style=solid];
m9_1297 -> m9_1298  [key=0, style=solid];
m9_1297 -> m9_1299  [key=2, style=dotted];
m9_1298 -> m9_1296  [key=0, style=bold, color=blue];
m9_215 -> m9_216  [key=0, style=solid];
m9_215 -> m9_217  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m9_215 -> m9_219  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m9_215 -> m9_221  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m9_215 -> m9_223  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m9_215 -> m9_225  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m9_215 -> m9_226  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m9_796 -> m9_797  [key=0, style=solid];
m9_799 -> m9_11  [key=2, style=dotted];
m9_799 -> m9_800  [key=0, style=solid];
m9_800 -> m9_11  [key=2, style=dotted];
m9_800 -> m9_801  [key=0, style=solid];
m9_801 -> m9_11  [key=2, style=dotted];
m9_801 -> m9_802  [key=0, style=solid];
m9_802 -> m9_11  [key=2, style=dotted];
m9_802 -> m9_803  [key=0, style=solid];
m9_803 -> m9_11  [key=2, style=dotted];
m9_803 -> m9_804  [key=0, style=solid];
m9_804 -> m9_11  [key=2, style=dotted];
m9_804 -> m9_805  [key=0, style=solid];
m9_804 -> m9_810  [key=2, style=dotted];
m9_805 -> m9_11  [key=2, style=dotted];
m9_805 -> m9_806  [key=0, style=solid];
m9_805 -> m9_810  [key=2, style=dotted];
m9_806 -> m9_11  [key=2, style=dotted];
m9_806 -> m9_807  [key=0, style=solid];
m9_807 -> m9_11  [key=2, style=dotted];
m9_807 -> m9_808  [key=0, style=solid];
m9_798 -> m9_799  [key=0, style=solid];
m9_798 -> m9_800  [key=1, style=dashed, color=darkseagreen4, label=c];
m9_798 -> m9_801  [key=1, style=dashed, color=darkseagreen4, label=c];
m9_798 -> m9_802  [key=1, style=dashed, color=darkseagreen4, label=c];
m9_798 -> m9_803  [key=1, style=dashed, color=darkseagreen4, label=c];
m9_798 -> m9_804  [key=1, style=dashed, color=darkseagreen4, label=c];
m9_798 -> m9_805  [key=1, style=dashed, color=darkseagreen4, label=c];
m9_798 -> m9_806  [key=1, style=dashed, color=darkseagreen4, label=c];
m9_798 -> m9_807  [key=1, style=dashed, color=darkseagreen4, label=c];
m9_798 -> m9_214  [key=2, style=dotted];
m9_798 -> m9_474  [key=2, style=dotted];
m9_798 -> m9_808  [key=1, style=dashed, color=darkseagreen4, label=c];
m9_808 -> m9_809  [key=0, style=solid];
m9_808 -> m9_686  [key=2, style=dotted];
m9_797 -> m9_798  [key=0, style=solid];
m9_809 -> m9_796  [key=0, style=bold, color=blue];
m9_537 -> m9_11  [key=2, style=dotted];
m9_537 -> m9_538  [key=0, style=solid];
m9_537 -> m9_534  [key=0, style=bold, color=blue];
m9_536 -> m9_9  [key=2, style=dotted];
m9_536 -> m9_537  [key=0, style=solid];
m9_534 -> m9_536  [key=1, style=dashed, color=darkseagreen4, label=personRaw];
m9_534 -> m9_535  [key=0, style=solid];
m9_534 -> m9_539  [key=2, style=dotted];
m9_534 -> m9_540  [key=2, style=dotted];
m9_534 -> m9_541  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m9_535 -> m9_536  [key=0, style=solid];
m9_535 -> m9_538  [key=2, style=dotted];
m9_535 -> m9_539  [key=2, style=dotted];
m9_535 -> m9_540  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_538 -> m9_533  [key=0, style=bold, color=blue];
m9_453 -> m9_454  [key=0, style=solid];
m9_453 -> m9_228  [key=2, style=dotted];
m9_453 -> m9_458  [key=2, style=dotted];
m9_453 -> m9_459  [key=2, style=dotted];
m9_1270 -> m9_1271  [key=0, style=solid];
m9_1271 -> m9_1272  [key=0, style=solid];
m9_1271 -> m9_1273  [key=2, style=dotted];
m9_1272 -> m9_1270  [key=0, style=bold, color=blue];
m9_2387 -> m9_2388  [key=0, style=solid];
m9_2388 -> m9_2392  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_2388 -> m9_2389  [key=0, style=solid];
m9_2389 -> m9_2391  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_2389 -> m9_2390  [key=0, style=solid];
m9_2389 -> m9_140  [key=2, style=dotted];
m9_2390 -> m9_2387  [key=0, style=bold, color=blue];
m9_2854 -> m9_2855  [key=0, style=solid];
m9_2857 -> m9_11  [key=2, style=dotted];
m9_2857 -> m9_2858  [key=0, style=solid];
m9_2860 -> m9_11  [key=2, style=dotted];
m9_2860 -> m9_2861  [key=0, style=solid];
m9_2856 -> m9_2857  [key=0, style=solid];
m9_2856 -> m9_351  [key=2, style=dotted];
m9_2858 -> m9_2859  [key=0, style=solid];
m9_2858 -> m9_2863  [key=2, style=dotted];
m9_2859 -> m9_2860  [key=0, style=solid];
m9_2859 -> m9_351  [key=2, style=dotted];
m9_2855 -> m9_2856  [key=0, style=solid];
m9_2855 -> m9_2862  [key=2, style=dotted];
m9_2861 -> m9_2854  [key=0, style=bold, color=blue];
m9_1895 -> m9_1896  [key=0, style=solid];
m9_1896 -> m9_93  [key=2, style=dotted];
m9_1896 -> m9_1897  [key=0, style=solid];
m9_1897 -> m9_11  [key=2, style=dotted];
m9_1897 -> m9_1898  [key=0, style=solid];
m9_1897 -> m9_1894  [key=2, style=dotted];
m9_1897 -> m9_29  [key=2, style=dotted];
m9_1897 -> m9_223  [key=2, style=dotted];
m9_1898 -> m9_1895  [key=0, style=bold, color=blue];
m9_2119 -> m9_2120  [key=0, style=solid];
m9_2121 -> m9_93  [key=2, style=dotted];
m9_2121 -> m9_2122  [key=0, style=solid];
m9_2121 -> m9_2123  [key=1, style=dashed, color=darkseagreen4, label=commentTestClass];
m9_2121 -> m9_2124  [key=1, style=dashed, color=darkseagreen4, label=commentTestClass];
m9_2122 -> m9_11  [key=2, style=dotted];
m9_2122 -> m9_2123  [key=0, style=solid];
m9_2123 -> m9_11  [key=2, style=dotted];
m9_2123 -> m9_2124  [key=0, style=solid];
m9_2124 -> m9_11  [key=2, style=dotted];
m9_2124 -> m9_2125  [key=0, style=solid];
m9_2120 -> m9_2121  [key=0, style=solid];
m9_2125 -> m9_2119  [key=0, style=bold, color=blue];
m9_920 -> m9_921  [key=0, style=solid];
m9_922 -> m9_93  [key=2, style=dotted];
m9_922 -> m9_923  [key=0, style=solid];
m9_923 -> m9_11  [key=2, style=dotted];
m9_923 -> m9_924  [key=0, style=solid];
m9_921 -> m9_922  [key=0, style=solid];
m9_924 -> m9_920  [key=0, style=bold, color=blue];
m9_216 -> m9_217  [key=0, style=solid];
m9_216 -> m9_13  [key=2, style=dotted];
m9_216 -> m9_14  [key=2, style=dotted];
m9_219 -> m9_11  [key=2, style=dotted];
m9_219 -> m9_220  [key=0, style=solid];
m9_219 -> m9_227  [key=0, style=solid];
m9_218 -> m9_9  [key=2, style=dotted];
m9_218 -> m9_219  [key=0, style=solid];
m9_217 -> m9_218  [key=0, style=solid];
m9_217 -> m9_210  [key=2, style=dotted];
m9_217 -> m9_223  [key=2, style=dotted];
m9_217 -> m9_222  [key=2, style=dotted];
m9_217 -> m9_217  [key=3, color=darkorchid, style=bold, label="Local variable string expected"];
m9_217 -> m9_209  [key=2, style=dotted];
m9_217 -> m9_221  [key=2, style=dotted];
m9_217 -> m9_220  [key=0, style=solid];
m9_217 -> m9_224  [key=0, style=solid];
m9_217 -> m9_226  [key=0, style=solid];
m9_217 -> m9_228  [key=2, style=dotted];
m9_220 -> m9_216  [key=0, style=bold, color=blue];
m9_220 -> m9_221  [key=0, style=solid];
m9_2597 -> m9_2598  [key=0, style=solid];
m9_2598 -> m9_2600  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_2598 -> m9_2599  [key=0, style=solid];
m9_2598 -> m9_140  [key=2, style=dotted];
m9_2599 -> m9_2597  [key=0, style=bold, color=blue];
m9_2829 -> m9_2837  [key=0, style=solid];
m9_2837 -> m9_282  [key=2, style=dotted];
m9_2837 -> m9_283  [key=2, style=dotted];
m9_2837 -> m9_2838  [key=0, style=solid];
m9_2837 -> m9_2840  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m9_2840 -> m9_284  [key=2, style=dotted];
m9_2840 -> m9_2841  [key=0, style=solid];
m9_2838 -> m9_277  [key=2, style=dotted];
m9_2838 -> m9_2840  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m9_2838 -> m9_2839  [key=0, style=solid];
m9_2839 -> m9_2840  [key=0, style=solid];
m9_2839 -> m9_2836  [key=2, style=dotted];
m9_2841 -> m9_2829  [key=0, style=bold, color=blue];
m9_2549 -> m9_2550  [key=0, style=solid];
m9_2552 -> m9_93  [key=2, style=dotted];
m9_2552 -> m9_2553  [key=0, style=solid];
m9_2556 -> m9_93  [key=2, style=dotted];
m9_2556 -> m9_2557  [key=0, style=solid];
m9_2551 -> m9_11  [key=2, style=dotted];
m9_2551 -> m9_2552  [key=0, style=solid];
m9_2553 -> m9_11  [key=2, style=dotted];
m9_2553 -> m9_2554  [key=0, style=solid];
m9_2555 -> m9_11  [key=2, style=dotted];
m9_2555 -> m9_2556  [key=0, style=solid];
m9_2557 -> m9_11  [key=2, style=dotted];
m9_2557 -> m9_2558  [key=0, style=solid];
m9_2550 -> m9_9  [key=2, style=dotted];
m9_2550 -> m9_2552  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_2550 -> m9_2551  [key=0, style=solid];
m9_2550 -> m9_2559  [key=2, style=dotted];
m9_2554 -> m9_9  [key=2, style=dotted];
m9_2554 -> m9_2556  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_2554 -> m9_2555  [key=0, style=solid];
m9_2554 -> m9_2559  [key=2, style=dotted];
m9_2558 -> m9_2549  [key=0, style=bold, color=blue];
m9_3334 -> m9_3335  [key=0, style=solid];
m9_3335 -> m9_93  [key=2, style=dotted];
m9_3335 -> m9_3336  [key=0, style=solid];
m9_3335 -> m9_3337  [key=1, style=dashed, color=darkseagreen4, label=list];
m9_3335 -> m9_3338  [key=1, style=dashed, color=darkseagreen4, label=list];
m9_3335 -> m9_3339  [key=1, style=dashed, color=darkseagreen4, label=list];
m9_3336 -> m9_11  [key=2, style=dotted];
m9_3336 -> m9_3337  [key=0, style=solid];
m9_3337 -> m9_11  [key=2, style=dotted];
m9_3337 -> m9_3338  [key=0, style=solid];
m9_3337 -> m9_810  [key=2, style=dotted];
m9_3338 -> m9_11  [key=2, style=dotted];
m9_3338 -> m9_3339  [key=0, style=solid];
m9_3338 -> m9_810  [key=2, style=dotted];
m9_3339 -> m9_11  [key=2, style=dotted];
m9_3339 -> m9_3340  [key=0, style=solid];
m9_3339 -> m9_810  [key=2, style=dotted];
m9_3340 -> m9_3334  [key=0, style=bold, color=blue];
m9_224 -> m9_225  [key=0, style=solid];
m9_227 -> m9_11  [key=2, style=dotted];
m9_227 -> m9_228  [key=0, style=solid];
m9_227 -> m9_215  [key=0, style=bold, color=blue];
m9_226 -> m9_227  [key=0, style=solid];
m9_226 -> m9_214  [key=2, style=dotted];
m9_226 -> m9_215  [key=2, style=dotted];
m9_226 -> m9_229  [key=2, style=dotted];
m9_226 -> m9_13  [key=2, style=dotted];
m9_225 -> m9_226  [key=0, style=solid];
m9_225 -> m9_210  [key=2, style=dotted];
m9_225 -> m9_223  [key=2, style=dotted];
m9_225 -> m9_222  [key=2, style=dotted];
m9_225 -> m9_209  [key=2, style=dotted];
m9_225 -> m9_221  [key=2, style=dotted];
m9_225 -> m9_227  [key=0, style=solid];
m9_228 -> m9_224  [key=0, style=bold, color=blue];
m9_176 -> m9_177  [key=0, style=solid];
m9_176 -> m9_179  [key=0, style=solid];
m9_176 -> m9_181  [key=2, style=dotted];
m9_179 -> m9_180  [key=0, style=solid];
m9_179 -> m9_181  [key=2, style=dotted];
m9_179 -> m9_170  [key=2, style=dotted];
m9_179 -> m9_184  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_179 -> m9_183  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_175 -> m9_180  [key=0, style=solid];
m9_178 -> m9_180  [key=0, style=solid];
m9_178 -> m9_179  [key=0, style=solid];
m9_180 -> m9_170  [key=0, style=bold, color=blue];
m9_180 -> m9_181  [key=0, style=solid];
m9_180 -> m9_189  [key=2, style=dotted];
m9_108 -> m9_109  [key=0, style=solid];
m9_108 -> m9_13  [key=2, style=dotted];
m9_108 -> m9_14  [key=2, style=dotted];
m9_109 -> m9_110  [key=0, style=solid];
m9_109 -> m9_111  [key=0, style=solid];
m9_109 -> m9_90  [key=2, style=dotted];
m9_109 -> m9_103  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Schema.JsonSchemaType type"];
m9_109 -> m9_104  [key=3, color=darkorchid, style=bold, label="Local variable string expected"];
m9_109 -> m9_109  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Schema.JsonSchemaType AddNullType"];
m9_109 -> m9_60  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Required valueRequired"];
m9_110 -> m9_112  [key=0, style=solid];
m9_110 -> m9_113  [key=2, style=dotted];
m9_110 -> m9_111  [key=0, style=solid];
m9_110 -> m9_114  [key=2, style=dotted];
m9_111 -> m9_112  [key=0, style=solid];
m9_112 -> m9_107  [key=0, style=bold, color=blue];
m9_112 -> m9_113  [key=0, style=solid];
m9_112 -> m9_112  [key=1, style=dashed, color=darkseagreen4, label=s];
m9_3311 -> m9_3312  [key=0, style=solid];
m9_3313 -> m9_11  [key=2, style=dotted];
m9_3313 -> m9_3314  [key=0, style=solid];
m9_3312 -> m9_3313  [key=0, style=solid];
m9_3312 -> m9_3315  [key=2, style=dotted];
m9_3312 -> m9_214  [key=2, style=dotted];
m9_3312 -> m9_1041  [key=2, style=dotted];
m9_3312 -> m9_728  [key=2, style=dotted];
m9_3314 -> m9_3311  [key=0, style=bold, color=blue];
m9_264 -> m9_265  [key=0, style=solid];
m9_341 -> m9_345  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_341 -> m9_344  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_341 -> m9_342  [key=0, style=solid];
m9_341 -> m9_350  [key=2, style=dotted];
m9_341 -> m9_351  [key=2, style=dotted];
m9_136 -> m9_137  [key=0, style=solid];
m9_136 -> m9_138  [key=0, style=solid];
m9_136 -> m9_153  [key=2, style=dotted];
m9_136 -> m9_154  [key=2, style=dotted];
m9_2515 -> m9_2516  [key=0, style=solid];
m9_2516 -> m9_2518  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_2516 -> m9_140  [key=2, style=dotted];
m9_2516 -> m9_2517  [key=0, style=solid];
m9_2517 -> m9_2515  [key=0, style=bold, color=blue];
m9_2103 -> m9_2104  [key=0, style=solid];
m9_2104 -> m9_140  [key=2, style=dotted];
m9_2104 -> m9_2105  [key=0, style=solid];
m9_2104 -> m9_2106  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_2105 -> m9_2103  [key=0, style=bold, color=blue];
m9_1300 -> m9_1301  [key=0, style=solid];
m9_1305 -> m9_93  [key=2, style=dotted];
m9_1305 -> m9_1306  [key=0, style=solid];
m9_1305 -> m9_1307  [key=1, style=dashed, color=darkseagreen4, label=newModelStateDictionary];
m9_1304 -> m9_11  [key=2, style=dotted];
m9_1304 -> m9_1305  [key=0, style=solid];
m9_1306 -> m9_11  [key=2, style=dotted];
m9_1306 -> m9_1307  [key=0, style=solid];
m9_1307 -> m9_11  [key=2, style=dotted];
m9_1307 -> m9_1308  [key=0, style=solid];
m9_1303 -> m9_9  [key=2, style=dotted];
m9_1303 -> m9_1305  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_1303 -> m9_1304  [key=0, style=solid];
m9_1301 -> m9_1303  [key=1, style=dashed, color=darkseagreen4, label=modelStateDictionary];
m9_1301 -> m9_1302  [key=0, style=solid];
m9_1301 -> m9_1243  [key=2, style=dotted];
m9_1302 -> m9_1303  [key=0, style=solid];
m9_1302 -> m9_1255  [key=2, style=dotted];
m9_1308 -> m9_1300  [key=0, style=bold, color=blue];
m9_3414 -> m9_3415  [key=0, style=solid];
m9_3415 -> m9_93  [key=2, style=dotted];
m9_3415 -> m9_3416  [key=0, style=solid];
m9_3415 -> m9_3417  [key=1, style=dashed, color=darkseagreen4, label=list];
m9_3415 -> m9_3418  [key=1, style=dashed, color=darkseagreen4, label=list];
m9_3415 -> m9_3419  [key=1, style=dashed, color=darkseagreen4, label=list];
m9_3416 -> m9_11  [key=2, style=dotted];
m9_3416 -> m9_3417  [key=0, style=solid];
m9_3417 -> m9_11  [key=2, style=dotted];
m9_3417 -> m9_3418  [key=0, style=solid];
m9_3418 -> m9_11  [key=2, style=dotted];
m9_3418 -> m9_3419  [key=0, style=solid];
m9_3419 -> m9_11  [key=2, style=dotted];
m9_3419 -> m9_3420  [key=0, style=solid];
m9_3420 -> m9_3414  [key=0, style=bold, color=blue];
m9_2293 -> m9_2294  [key=0, style=solid];
m9_2294 -> m9_93  [key=2, style=dotted];
m9_2294 -> m9_2295  [key=0, style=solid];
m9_2295 -> m9_11  [key=2, style=dotted];
m9_2295 -> m9_2296  [key=0, style=solid];
m9_2296 -> m9_2293  [key=0, style=bold, color=blue];
m9_1611 -> m9_1612  [key=0, style=solid];
m9_1618 -> m9_93  [key=2, style=dotted];
m9_1618 -> m9_1619  [key=0, style=solid];
m9_1618 -> m9_1620  [key=1, style=dashed, color=darkseagreen4, label=result];
m9_1618 -> m9_1621  [key=1, style=dashed, color=darkseagreen4, label=result];
m9_1618 -> m9_1622  [key=1, style=dashed, color=darkseagreen4, label=result];
m9_1618 -> m9_1623  [key=1, style=dashed, color=darkseagreen4, label=result];
m9_1617 -> m9_11  [key=2, style=dotted];
m9_1617 -> m9_1618  [key=0, style=solid];
m9_1619 -> m9_11  [key=2, style=dotted];
m9_1619 -> m9_1620  [key=0, style=solid];
m9_1620 -> m9_11  [key=2, style=dotted];
m9_1620 -> m9_1621  [key=0, style=solid];
m9_1621 -> m9_11  [key=2, style=dotted];
m9_1621 -> m9_1622  [key=0, style=solid];
m9_1622 -> m9_11  [key=2, style=dotted];
m9_1622 -> m9_1623  [key=0, style=solid];
m9_1623 -> m9_11  [key=2, style=dotted];
m9_1623 -> m9_1624  [key=0, style=solid];
m9_1616 -> m9_1618  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_1616 -> m9_1617  [key=0, style=solid];
m9_1616 -> m9_351  [key=2, style=dotted];
m9_1613 -> m9_1616  [key=1, style=dashed, color=darkseagreen4, label=list];
m9_1613 -> m9_1614  [key=0, style=solid];
m9_1613 -> m9_209  [key=2, style=dotted];
m9_1613 -> m9_1615  [key=1, style=dashed, color=darkseagreen4, label=list];
m9_1615 -> m9_1616  [key=0, style=solid];
m9_1615 -> m9_1610  [key=2, style=dotted];
m9_1615 -> m9_1625  [key=2, style=dotted];
m9_1615 -> m9_158  [key=2, style=dotted];
m9_1612 -> m9_210  [key=2, style=dotted];
m9_1612 -> m9_1613  [key=0, style=solid];
m9_1612 -> m9_1615  [key=1, style=dashed, color=darkseagreen4, label=dateTime];
m9_1612 -> m9_1614  [key=1, style=dashed, color=darkseagreen4, label=dateTime];
m9_1614 -> m9_1615  [key=0, style=solid];
m9_1614 -> m9_1610  [key=2, style=dotted];
m9_1614 -> m9_158  [key=2, style=dotted];
m9_1614 -> m9_1625  [key=2, style=dotted];
m9_1624 -> m9_1611  [key=0, style=bold, color=blue];
m9_133 -> m9_134  [key=0, style=solid];
m9_133 -> m9_135  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m9_133 -> m9_136  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m9_133 -> m9_137  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m9_133 -> m9_138  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m9_133 -> m9_139  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m9_133 -> m9_140  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m9_133 -> m9_141  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m9_133 -> m9_142  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m9_133 -> m9_144  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m9_133 -> m9_147  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m9_133 -> m9_129  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type genericInterfaceDefinition"];
m9_133 -> m9_182  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type type"];
m9_133 -> m9_199  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type type"];
m9_133 -> m9_130  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type implementingType"];
m9_133 -> m9_133  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type implementingType"];
m9_133 -> m9_184  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type implementingType"];
m9_133 -> m9_201  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type implementingType"];
m9_133 -> m9_7  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ImplementsGenericDefinition"];
m9_133 -> m9_11  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ImplementsGenericDefinition"];
m9_134 -> m9_135  [key=0, style=solid];
m9_134 -> m9_13  [key=2, style=dotted];
m9_134 -> m9_14  [key=2, style=dotted];
m9_134 -> m9_11  [key=2, style=dotted];
m9_135 -> m9_136  [key=0, style=solid];
m9_135 -> m9_13  [key=2, style=dotted];
m9_135 -> m9_14  [key=2, style=dotted];
m9_135 -> m9_126  [key=0, style=bold, color=blue];
m9_137 -> m9_152  [key=0, style=solid];
m9_137 -> m9_155  [key=2, style=dotted];
m9_137 -> m9_156  [key=2, style=dotted];
m9_137 -> m9_2345  [key=3, color=darkorchid, style=bold, label="method methodReturn bool HasFlag"];
m9_137 -> m9_138  [key=0, style=solid];
m9_138 -> m9_139  [key=0, style=solid];
m9_138 -> m9_144  [key=0, style=solid];
m9_138 -> m9_153  [key=2, style=dotted];
m9_138 -> m9_141  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_138 -> m9_140  [key=2, style=dotted];
m9_139 -> m9_140  [key=0, style=solid];
m9_139 -> m9_144  [key=0, style=solid];
m9_139 -> m9_117  [key=2, style=dotted];
m9_139 -> m9_137  [key=0, style=bold, color=blue];
m9_140 -> m9_141  [key=0, style=solid];
m9_140 -> m9_118  [key=2, style=dotted];
m9_159 -> m9_160  [key=0, style=solid];
m9_160 -> m9_161  [key=0, style=solid];
m9_160 -> m9_162  [key=2, style=dotted];
m9_160 -> m9_164  [key=1, style=dashed, color=darkseagreen4, label=r1];
m9_160 -> m9_166  [key=2, style=dotted];
m9_161 -> m9_158  [key=0, style=bold, color=blue];
m9_161 -> m9_9  [key=2, style=dotted];
m9_161 -> m9_163  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m9_161 -> m9_162  [key=0, style=solid];
m9_181 -> m9_187  [key=1, style=dashed, color=darkseagreen4, label=javaScriptSerializerResult];
m9_181 -> m9_182  [key=0, style=solid];
m9_181 -> m9_190  [key=2, style=dotted];
m9_253 -> m9_242  [key=0, style=bold, color=blue];
m9_253 -> m9_254  [key=0, style=solid];
m9_3065 -> m9_3066  [key=0, style=solid];
m9_3067 -> m9_93  [key=2, style=dotted];
m9_3067 -> m9_3068  [key=0, style=solid];
m9_3067 -> m9_3069  [key=1, style=dashed, color=darkseagreen4, label=aa];
m9_3067 -> m9_3070  [key=1, style=dashed, color=darkseagreen4, label=aa];
m9_3067 -> m9_3071  [key=1, style=dashed, color=darkseagreen4, label=aa];
m9_3067 -> m9_3072  [key=1, style=dashed, color=darkseagreen4, label=aa];
m9_3067 -> m9_3073  [key=1, style=dashed, color=darkseagreen4, label=aa];
m9_3067 -> m9_3074  [key=1, style=dashed, color=darkseagreen4, label=aa];
m9_3075 -> m9_11  [key=2, style=dotted];
m9_3075 -> m9_3076  [key=0, style=solid];
m9_3068 -> m9_11  [key=2, style=dotted];
m9_3068 -> m9_3069  [key=0, style=solid];
m9_3069 -> m9_11  [key=2, style=dotted];
m9_3069 -> m9_3070  [key=0, style=solid];
m9_3070 -> m9_11  [key=2, style=dotted];
m9_3070 -> m9_3071  [key=0, style=solid];
m9_3070 -> m9_3064  [key=2, style=dotted];
m9_3071 -> m9_11  [key=2, style=dotted];
m9_3071 -> m9_3072  [key=0, style=solid];
m9_3071 -> m9_3064  [key=2, style=dotted];
m9_3072 -> m9_11  [key=2, style=dotted];
m9_3072 -> m9_3073  [key=0, style=solid];
m9_3073 -> m9_11  [key=2, style=dotted];
m9_3073 -> m9_3074  [key=0, style=solid];
m9_3074 -> m9_9  [key=2, style=dotted];
m9_3074 -> m9_3075  [key=0, style=solid];
m9_3066 -> m9_3067  [key=0, style=solid];
m9_3066 -> m9_3075  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_3076 -> m9_3065  [key=0, style=bold, color=blue];
m9_2954 -> m9_2955  [key=0, style=solid];
m9_2955 -> m9_209  [key=2, style=dotted];
m9_2955 -> m9_2956  [key=0, style=solid];
m9_2956 -> m9_2954  [key=0, style=bold, color=blue];
m9_3316 -> m9_3317  [key=0, style=solid];
m9_3317 -> m9_93  [key=2, style=dotted];
m9_3317 -> m9_3318  [key=0, style=solid];
m9_3317 -> m9_3319  [key=1, style=dashed, color=darkseagreen4, label=l];
m9_3317 -> m9_3320  [key=1, style=dashed, color=darkseagreen4, label=l];
m9_3318 -> m9_11  [key=2, style=dotted];
m9_3318 -> m9_3319  [key=0, style=solid];
m9_3318 -> m9_1168  [key=2, style=dotted];
m9_3319 -> m9_11  [key=2, style=dotted];
m9_3319 -> m9_3320  [key=0, style=solid];
m9_3320 -> m9_11  [key=2, style=dotted];
m9_3320 -> m9_3321  [key=0, style=solid];
m9_3321 -> m9_3316  [key=0, style=bold, color=blue];
m9_2150 -> m9_2151  [key=0, style=solid];
m9_2156 -> m9_12  [key=2, style=dotted];
m9_2156 -> m9_2157  [key=0, style=solid];
m9_2153 -> m9_53  [key=2, style=dotted];
m9_2153 -> m9_2154  [key=0, style=solid];
m9_2153 -> m9_2155  [key=1, style=dashed, color=darkseagreen4, label=ms];
m9_2155 -> m9_2156  [key=0, style=solid];
m9_2155 -> m9_56  [key=2, style=dotted];
m9_2155 -> m9_57  [key=2, style=dotted];
m9_2155 -> m9_2159  [key=2, style=dotted];
m9_2154 -> m9_55  [key=2, style=dotted];
m9_2154 -> m9_2155  [key=0, style=solid];
m9_2152 -> m9_2153  [key=0, style=solid];
m9_2152 -> m9_2154  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m9_2152 -> m9_2158  [key=2, style=dotted];
m9_2151 -> m9_2154  [key=1, style=dashed, color=darkseagreen4, label=cc];
m9_2151 -> m9_2152  [key=0, style=solid];
m9_2151 -> m9_2149  [key=2, style=dotted];
m9_2157 -> m9_2150  [key=0, style=bold, color=blue];
m9_2160 -> m9_2161  [key=0, style=solid];
m9_2163 -> m9_11  [key=2, style=dotted];
m9_2163 -> m9_2164  [key=0, style=solid];
m9_2162 -> m9_9  [key=2, style=dotted];
m9_2162 -> m9_2163  [key=0, style=solid];
m9_2161 -> m9_2162  [key=0, style=solid];
m9_2161 -> m9_2165  [key=2, style=dotted];
m9_2164 -> m9_2160  [key=0, style=bold, color=blue];
m9_474 -> m9_475  [key=0, style=solid];
m9_474 -> m9_469  [key=2, style=dotted];
m9_474 -> m9_478  [key=2, style=dotted];
m9_474 -> m9_479  [key=2, style=dotted];
m9_474 -> m9_481  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_1060 -> m9_1061  [key=0, style=solid];
m9_1066 -> m9_11  [key=2, style=dotted];
m9_1066 -> m9_1067  [key=0, style=solid];
m9_1065 -> m9_9  [key=2, style=dotted];
m9_1065 -> m9_1066  [key=0, style=solid];
m9_1061 -> m9_1065  [key=1, style=dashed, color=darkseagreen4, label=strings];
m9_1061 -> m9_1062  [key=0, style=solid];
m9_1061 -> m9_209  [key=2, style=dotted];
m9_1061 -> m9_1063  [key=1, style=dashed, color=darkseagreen4, label=strings];
m9_1061 -> m9_1064  [key=1, style=dashed, color=darkseagreen4, label=strings];
m9_1064 -> m9_1065  [key=0, style=solid];
m9_1064 -> m9_158  [key=2, style=dotted];
m9_1062 -> m9_158  [key=2, style=dotted];
m9_1062 -> m9_1063  [key=0, style=solid];
m9_1063 -> m9_1064  [key=0, style=solid];
m9_1063 -> m9_158  [key=2, style=dotted];
m9_1067 -> m9_1060  [key=0, style=bold, color=blue];
m9_1068 -> m9_1069  [key=0, style=solid];
m9_1072 -> m9_93  [key=2, style=dotted];
m9_1072 -> m9_1073  [key=0, style=solid];
m9_1072 -> m9_1074  [key=1, style=dashed, color=darkseagreen4, label=c2];
m9_1071 -> m9_11  [key=2, style=dotted];
m9_1071 -> m9_1072  [key=0, style=solid];
m9_1073 -> m9_11  [key=2, style=dotted];
m9_1073 -> m9_1074  [key=0, style=solid];
m9_1074 -> m9_11  [key=2, style=dotted];
m9_1074 -> m9_1075  [key=0, style=solid];
m9_1070 -> m9_1072  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_1070 -> m9_1071  [key=0, style=solid];
m9_1070 -> m9_351  [key=2, style=dotted];
m9_1069 -> m9_1070  [key=0, style=solid];
m9_1069 -> m9_1076  [key=2, style=dotted];
m9_1075 -> m9_1068  [key=0, style=bold, color=blue];
m9_2560 -> m9_2561  [key=0, style=solid];
m9_2563 -> m9_93  [key=2, style=dotted];
m9_2563 -> m9_2564  [key=0, style=solid];
m9_2562 -> m9_11  [key=2, style=dotted];
m9_2562 -> m9_2563  [key=0, style=solid];
m9_2564 -> m9_11  [key=2, style=dotted];
m9_2564 -> m9_2565  [key=0, style=solid];
m9_2564 -> m9_2567  [key=2, style=dotted];
m9_2561 -> m9_9  [key=2, style=dotted];
m9_2561 -> m9_2562  [key=0, style=solid];
m9_2561 -> m9_2566  [key=2, style=dotted];
m9_2561 -> m9_2567  [key=2, style=dotted];
m9_2565 -> m9_2560  [key=0, style=bold, color=blue];
m9_2763 -> m9_2764  [key=0, style=solid];
m9_2765 -> m9_93  [key=2, style=dotted];
m9_2765 -> m9_2766  [key=0, style=solid];
m9_2765 -> m9_2767  [key=1, style=dashed, color=darkseagreen4, label=c2];
m9_2765 -> m9_2768  [key=1, style=dashed, color=darkseagreen4, label=c2];
m9_2765 -> m9_2769  [key=1, style=dashed, color=darkseagreen4, label=c2];
m9_2767 -> m9_11  [key=2, style=dotted];
m9_2767 -> m9_2768  [key=0, style=solid];
m9_2768 -> m9_11  [key=2, style=dotted];
m9_2768 -> m9_2769  [key=0, style=solid];
m9_2769 -> m9_11  [key=2, style=dotted];
m9_2769 -> m9_2770  [key=0, style=solid];
m9_2764 -> m9_2765  [key=0, style=solid];
m9_2764 -> m9_2771  [key=2, style=dotted];
m9_2766 -> m9_2767  [key=0, style=solid];
m9_2766 -> m9_686  [key=2, style=dotted];
m9_2770 -> m9_2763  [key=0, style=bold, color=blue];
m9_2630 -> m9_2631  [key=0, style=solid];
m9_2632 -> m9_11  [key=2, style=dotted];
m9_2632 -> m9_2633  [key=0, style=solid];
m9_2632 -> m9_2642  [key=2, style=dotted];
m9_2632 -> m9_2643  [key=2, style=dotted];
m9_2633 -> m9_11  [key=2, style=dotted];
m9_2633 -> m9_2634  [key=0, style=solid];
m9_2633 -> m9_2644  [key=2, style=dotted];
m9_2634 -> m9_11  [key=2, style=dotted];
m9_2634 -> m9_2635  [key=0, style=solid];
m9_2635 -> m9_11  [key=2, style=dotted];
m9_2635 -> m9_2636  [key=0, style=solid];
m9_2637 -> m9_11  [key=2, style=dotted];
m9_2637 -> m9_2638  [key=0, style=solid];
m9_2637 -> m9_2642  [key=2, style=dotted];
m9_2637 -> m9_2643  [key=2, style=dotted];
m9_2638 -> m9_11  [key=2, style=dotted];
m9_2638 -> m9_2639  [key=0, style=solid];
m9_2638 -> m9_2644  [key=2, style=dotted];
m9_2639 -> m9_11  [key=2, style=dotted];
m9_2639 -> m9_2640  [key=0, style=solid];
m9_2640 -> m9_11  [key=2, style=dotted];
m9_2640 -> m9_2641  [key=0, style=solid];
m9_2631 -> m9_2632  [key=0, style=solid];
m9_2631 -> m9_2633  [key=1, style=dashed, color=darkseagreen4, label=c];
m9_2631 -> m9_2634  [key=1, style=dashed, color=darkseagreen4, label=c];
m9_2631 -> m9_2635  [key=1, style=dashed, color=darkseagreen4, label=c];
m9_2631 -> m9_214  [key=2, style=dotted];
m9_2631 -> m9_474  [key=2, style=dotted];
m9_2636 -> m9_2637  [key=0, style=solid];
m9_2636 -> m9_2638  [key=1, style=dashed, color=darkseagreen4, label=c2];
m9_2636 -> m9_2639  [key=1, style=dashed, color=darkseagreen4, label=c2];
m9_2636 -> m9_2640  [key=1, style=dashed, color=darkseagreen4, label=c2];
m9_2636 -> m9_214  [key=2, style=dotted];
m9_2636 -> m9_474  [key=2, style=dotted];
m9_2641 -> m9_2630  [key=0, style=bold, color=blue];
m9_2232 -> m9_2233  [key=0, style=solid];
m9_2234 -> m9_11  [key=2, style=dotted];
m9_2234 -> m9_2235  [key=0, style=solid];
m9_2236 -> m9_11  [key=2, style=dotted];
m9_2236 -> m9_2237  [key=0, style=solid];
m9_2233 -> m9_2234  [key=0, style=solid];
m9_2233 -> m9_2238  [key=2, style=dotted];
m9_2233 -> m9_351  [key=2, style=dotted];
m9_2235 -> m9_2236  [key=0, style=solid];
m9_2235 -> m9_2239  [key=2, style=dotted];
m9_2235 -> m9_351  [key=2, style=dotted];
m9_2237 -> m9_2232  [key=0, style=bold, color=blue];
m9_3053 -> m9_3054  [key=0, style=solid];
m9_3055 -> m9_93  [key=2, style=dotted];
m9_3055 -> m9_3056  [key=0, style=solid];
m9_3055 -> m9_3057  [key=1, style=dashed, color=darkseagreen4, label=aa];
m9_3055 -> m9_3058  [key=1, style=dashed, color=darkseagreen4, label=aa];
m9_3055 -> m9_3059  [key=1, style=dashed, color=darkseagreen4, label=aa];
m9_3055 -> m9_3060  [key=1, style=dashed, color=darkseagreen4, label=aa];
m9_3055 -> m9_3061  [key=1, style=dashed, color=darkseagreen4, label=aa];
m9_3055 -> m9_3062  [key=1, style=dashed, color=darkseagreen4, label=aa];
m9_3056 -> m9_11  [key=2, style=dotted];
m9_3056 -> m9_3057  [key=0, style=solid];
m9_3057 -> m9_11  [key=2, style=dotted];
m9_3057 -> m9_3058  [key=0, style=solid];
m9_3058 -> m9_11  [key=2, style=dotted];
m9_3058 -> m9_3059  [key=0, style=solid];
m9_3058 -> m9_3064  [key=2, style=dotted];
m9_3059 -> m9_11  [key=2, style=dotted];
m9_3059 -> m9_3060  [key=0, style=solid];
m9_3059 -> m9_3064  [key=2, style=dotted];
m9_3060 -> m9_11  [key=2, style=dotted];
m9_3060 -> m9_3061  [key=0, style=solid];
m9_3060 -> m9_3064  [key=2, style=dotted];
m9_3061 -> m9_11  [key=2, style=dotted];
m9_3061 -> m9_3062  [key=0, style=solid];
m9_3062 -> m9_11  [key=2, style=dotted];
m9_3062 -> m9_3063  [key=0, style=solid];
m9_3054 -> m9_3055  [key=0, style=solid];
m9_3063 -> m9_3053  [key=0, style=bold, color=blue];
m9_1015 -> m9_1016  [key=0, style=solid];
m9_1017 -> m9_140  [key=2, style=dotted];
m9_1017 -> m9_1018  [key=0, style=solid];
m9_1017 -> m9_1019  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_1016 -> m9_1017  [key=0, style=solid];
m9_1016 -> m9_1020  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_1018 -> m9_1015  [key=0, style=bold, color=blue];
m9_3390 -> m9_3391  [key=0, style=solid];
m9_3391 -> m9_2942  [key=2, style=dotted];
m9_3391 -> m9_3392  [key=0, style=solid];
m9_3392 -> m9_3390  [key=0, style=bold, color=blue];
m9_288 -> m9_285  [key=0, style=bold, color=blue];
m9_2795 -> m9_2796  [key=0, style=solid];
m9_2799 -> m9_93  [key=2, style=dotted];
m9_2799 -> m9_2800  [key=0, style=solid];
m9_2799 -> m9_2801  [key=1, style=dashed, color=darkseagreen4, label=dic2];
m9_2799 -> m9_2802  [key=1, style=dashed, color=darkseagreen4, label=dic2];
m9_2798 -> m9_11  [key=2, style=dotted];
m9_2798 -> m9_2799  [key=0, style=solid];
m9_2800 -> m9_11  [key=2, style=dotted];
m9_2800 -> m9_2801  [key=0, style=solid];
m9_2801 -> m9_11  [key=2, style=dotted];
m9_2801 -> m9_2802  [key=0, style=solid];
m9_2801 -> m9_210  [key=2, style=dotted];
m9_2802 -> m9_11  [key=2, style=dotted];
m9_2802 -> m9_2803  [key=0, style=solid];
m9_2802 -> m9_210  [key=2, style=dotted];
m9_2797 -> m9_2799  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_2797 -> m9_2798  [key=0, style=solid];
m9_2797 -> m9_351  [key=2, style=dotted];
m9_2796 -> m9_2797  [key=0, style=solid];
m9_2796 -> m9_210  [key=2, style=dotted];
m9_2796 -> m9_52  [key=2, style=dotted];
m9_2803 -> m9_2795  [key=0, style=bold, color=blue];
m9_892 -> m9_893  [key=0, style=solid];
m9_894 -> m9_93  [key=2, style=dotted];
m9_894 -> m9_895  [key=0, style=solid];
m9_894 -> m9_896  [key=1, style=dashed, color=darkseagreen4, label=values];
m9_894 -> m9_897  [key=1, style=dashed, color=darkseagreen4, label=values];
m9_894 -> m9_898  [key=1, style=dashed, color=darkseagreen4, label=values];
m9_894 -> m9_899  [key=1, style=dashed, color=darkseagreen4, label=values];
m9_897 -> m9_11  [key=2, style=dotted];
m9_897 -> m9_898  [key=0, style=solid];
m9_898 -> m9_11  [key=2, style=dotted];
m9_898 -> m9_899  [key=0, style=solid];
m9_899 -> m9_11  [key=2, style=dotted];
m9_899 -> m9_900  [key=0, style=solid];
m9_893 -> m9_894  [key=0, style=solid];
m9_895 -> m9_896  [key=0, style=solid];
m9_895 -> m9_901  [key=2, style=dotted];
m9_896 -> m9_897  [key=0, style=solid];
m9_896 -> m9_12  [key=2, style=dotted];
m9_900 -> m9_892  [key=0, style=bold, color=blue];
m9_1175 -> m9_1176  [key=0, style=solid];
m9_1176 -> m9_351  [key=2, style=dotted];
m9_1176 -> m9_1177  [key=0, style=solid];
m9_1177 -> m9_1175  [key=0, style=bold, color=blue];
m9_2823 -> m9_3426  [key=0, style=solid];
m9_3426 -> m9_2823  [key=0, style=bold, color=blue];
m9_1951 -> m9_1952  [key=0, style=solid];
m9_1953 -> m9_93  [key=2, style=dotted];
m9_1953 -> m9_1954  [key=0, style=solid];
m9_1954 -> m9_11  [key=2, style=dotted];
m9_1954 -> m9_1955  [key=0, style=solid];
m9_1952 -> m9_1953  [key=0, style=solid];
m9_1955 -> m9_1951  [key=0, style=bold, color=blue];
m9_365 -> m9_11  [key=2, style=dotted];
m9_365 -> m9_366  [key=0, style=solid];
m9_254 -> m9_261  [key=1, style=dashed, color=darkseagreen4, label=d];
m9_254 -> m9_29  [key=2, style=dotted];
m9_254 -> m9_255  [key=0, style=solid];
m9_2357 -> m9_3453  [key=0, style=solid];
m9_3453 -> m9_2357  [key=0, style=bold, color=blue];
m9_941 -> m9_942  [key=0, style=solid];
m9_943 -> m9_93  [key=2, style=dotted];
m9_943 -> m9_944  [key=0, style=solid];
m9_942 -> m9_943  [key=0, style=solid];
m9_944 -> m9_941  [key=0, style=bold, color=blue];
m9_2347 -> m9_2348  [key=0, style=solid];
m9_2352 -> m9_93  [key=2, style=dotted];
m9_2352 -> m9_2353  [key=0, style=solid];
m9_2352 -> m9_2354  [key=1, style=dashed, color=darkseagreen4, label=newObject];
m9_2352 -> m9_2355  [key=1, style=dashed, color=darkseagreen4, label=newObject];
m9_2351 -> m9_11  [key=2, style=dotted];
m9_2351 -> m9_2352  [key=0, style=solid];
m9_2353 -> m9_11  [key=2, style=dotted];
m9_2353 -> m9_2354  [key=0, style=solid];
m9_2354 -> m9_11  [key=2, style=dotted];
m9_2354 -> m9_2355  [key=0, style=solid];
m9_2355 -> m9_11  [key=2, style=dotted];
m9_2355 -> m9_2356  [key=0, style=solid];
m9_2350 -> m9_2352  [key=1, style=dashed, color=darkseagreen4, label=originalJson];
m9_2350 -> m9_2351  [key=0, style=solid];
m9_2350 -> m9_351  [key=2, style=dotted];
m9_2349 -> m9_2350  [key=0, style=solid];
m9_2349 -> m9_2358  [key=2, style=dotted];
m9_2349 -> m9_2359  [key=2, style=dotted];
m9_2348 -> m9_2349  [key=0, style=solid];
m9_2348 -> m9_52  [key=2, style=dotted];
m9_2348 -> m9_2357  [key=2, style=dotted];
m9_2356 -> m9_2347  [key=0, style=bold, color=blue];
m9_3015 -> m9_3016  [key=0, style=solid];
m9_3018 -> m9_11  [key=2, style=dotted];
m9_3018 -> m9_3019  [key=0, style=solid];
m9_3020 -> m9_11  [key=2, style=dotted];
m9_3020 -> m9_3021  [key=0, style=solid];
m9_3017 -> m9_3018  [key=0, style=solid];
m9_3017 -> m9_214  [key=2, style=dotted];
m9_3017 -> m9_3023  [key=2, style=dotted];
m9_3017 -> m9_215  [key=2, style=dotted];
m9_3017 -> m9_3019  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_3019 -> m9_3020  [key=0, style=solid];
m9_3019 -> m9_214  [key=2, style=dotted];
m9_3019 -> m9_3023  [key=2, style=dotted];
m9_3019 -> m9_474  [key=2, style=dotted];
m9_3016 -> m9_3017  [key=0, style=solid];
m9_3016 -> m9_3022  [key=2, style=dotted];
m9_3021 -> m9_3015  [key=0, style=bold, color=blue];
m9_549 -> m9_550  [key=0, style=solid, color=green];
m9_550 -> m9_551  [key=0, style=solid, color=green];
m9_550 -> m9_562  [key=2, style=dotted, color=green];
m9_550 -> m9_369  [key=2, style=dotted, color=green];
m9_551 -> m9_551  [key=3, color=green, style=bold, label="Local variable string unicode"];
m9_551 -> m9_552  [key=0, style=solid, color=green];
m9_551 -> m9_9  [key=2, style=dotted, color=green];
m9_551 -> m9_553  [key=1, style=dashed, color=green, label=json];
m9_552 -> m9_553  [key=0, style=solid, color=green];
m9_552 -> m9_11  [key=2, style=dotted, color=green];
m9_553 -> m9_554  [key=0, style=solid, color=green];
m9_553 -> m9_93  [key=2, style=dotted, color=green];
m9_553 -> m9_555  [key=1, style=dashed, color=green, label=userNullablleDeserialized];
m9_553 -> m9_556  [key=1, style=dashed, color=green, label=userNullablleDeserialized];
m9_553 -> m9_557  [key=1, style=dashed, color=green, label=userNullablleDeserialized];
m9_553 -> m9_558  [key=1, style=dashed, color=green, label=userNullablleDeserialized];
m9_553 -> m9_559  [key=1, style=dashed, color=green, label=userNullablleDeserialized];
m9_553 -> m9_560  [key=1, style=dashed, color=green, label=userNullablleDeserialized];
m9_554 -> m9_555  [key=0, style=solid, color=green];
m9_554 -> m9_369  [key=2, style=dotted, color=green];
m9_554 -> m9_11  [key=2, style=dotted, color=green];
m9_555 -> m9_556  [key=0, style=solid, color=green];
m9_555 -> m9_11  [key=2, style=dotted, color=green];
m9_556 -> m9_11  [key=2, style=dotted];
m9_556 -> m9_557  [key=0, style=solid];
m9_556 -> m9_577  [key=0, style=solid];
m9_557 -> m9_11  [key=2, style=dotted];
m9_557 -> m9_558  [key=0, style=solid];
m9_558 -> m9_11  [key=2, style=dotted];
m9_558 -> m9_559  [key=0, style=solid];
m9_559 -> m9_11  [key=2, style=dotted];
m9_559 -> m9_560  [key=0, style=solid];
m9_559 -> m9_577  [key=0, style=solid];
m9_560 -> m9_11  [key=2, style=dotted];
m9_560 -> m9_561  [key=0, style=solid];
m9_561 -> m9_549  [key=0, style=bold, color=blue];
m9_561 -> m9_577  [key=0, style=solid];
m9_1054 -> m9_1055  [key=0, style=solid];
m9_1055 -> m9_140  [key=2, style=dotted];
m9_1055 -> m9_1056  [key=0, style=solid];
m9_1055 -> m9_1057  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_1056 -> m9_1054  [key=0, style=bold, color=blue];
m9_2251 -> m9_2252  [key=0, style=solid];
m9_2255 -> m9_93  [key=2, style=dotted];
m9_2255 -> m9_2256  [key=0, style=solid];
m9_2254 -> m9_11  [key=2, style=dotted];
m9_2254 -> m9_2255  [key=0, style=solid];
m9_2256 -> m9_11  [key=2, style=dotted];
m9_2256 -> m9_2257  [key=0, style=solid];
m9_2256 -> m9_2248  [key=2, style=dotted];
m9_2253 -> m9_2255  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_2253 -> m9_2254  [key=0, style=solid];
m9_2253 -> m9_351  [key=2, style=dotted];
m9_2252 -> m9_2253  [key=0, style=solid];
m9_2252 -> m9_2240  [key=2, style=dotted];
m9_2257 -> m9_2251  [key=0, style=bold, color=blue];
m9_3234 -> m9_3235  [key=0, style=solid];
m9_3239 -> m9_11  [key=2, style=dotted];
m9_3239 -> m9_3240  [key=0, style=solid];
m9_3241 -> m9_11  [key=2, style=dotted];
m9_3241 -> m9_3242  [key=0, style=solid];
m9_3236 -> m9_3239  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m9_3236 -> m9_3237  [key=0, style=solid];
m9_3236 -> m9_2342  [key=2, style=dotted];
m9_3236 -> m9_3238  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m9_3238 -> m9_3239  [key=0, style=solid];
m9_3238 -> m9_2426  [key=2, style=dotted];
m9_3240 -> m9_3241  [key=0, style=solid];
m9_3240 -> m9_2346  [key=2, style=dotted];
m9_3235 -> m9_3236  [key=0, style=solid];
m9_3235 -> m9_3240  [key=1, style=dashed, color=darkseagreen4, label=sw];
m9_3235 -> m9_278  [key=2, style=dotted];
m9_3237 -> m9_3238  [key=0, style=solid];
m9_3237 -> m9_214  [key=2, style=dotted];
m9_3237 -> m9_2547  [key=2, style=dotted];
m9_3242 -> m9_3234  [key=0, style=bold, color=blue];
m9_223 -> m9_227  [key=0, style=solid];
m9_222 -> m9_223  [key=0, style=solid];
m9_1001 -> m9_1002  [key=0, style=solid];
m9_1002 -> m9_1006  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_1002 -> m9_1003  [key=0, style=solid];
m9_1003 -> m9_1005  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_1003 -> m9_1004  [key=0, style=solid];
m9_1003 -> m9_140  [key=2, style=dotted];
m9_1004 -> m9_1001  [key=0, style=bold, color=blue];
m9_757 -> m9_758  [key=0, style=solid];
m9_764 -> m9_93  [key=2, style=dotted];
m9_764 -> m9_765  [key=0, style=solid];
m9_764 -> m9_766  [key=1, style=dashed, color=darkseagreen4, label=newOptInClass];
m9_764 -> m9_767  [key=1, style=dashed, color=darkseagreen4, label=newOptInClass];
m9_763 -> m9_11  [key=2, style=dotted];
m9_763 -> m9_764  [key=0, style=solid];
m9_765 -> m9_11  [key=2, style=dotted];
m9_765 -> m9_766  [key=0, style=solid];
m9_766 -> m9_11  [key=2, style=dotted];
m9_766 -> m9_767  [key=0, style=solid];
m9_767 -> m9_11  [key=2, style=dotted];
m9_767 -> m9_768  [key=0, style=solid];
m9_762 -> m9_763  [key=0, style=solid];
m9_762 -> m9_351  [key=2, style=dotted];
m9_758 -> m9_762  [key=1, style=dashed, color=darkseagreen4, label=optInClass];
m9_758 -> m9_759  [key=0, style=solid];
m9_758 -> m9_769  [key=2, style=dotted];
m9_758 -> m9_760  [key=1, style=dashed, color=darkseagreen4, label=optInClass];
m9_758 -> m9_761  [key=1, style=dashed, color=darkseagreen4, label=optInClass];
m9_761 -> m9_762  [key=0, style=solid];
m9_759 -> m9_760  [key=0, style=solid];
m9_760 -> m9_761  [key=0, style=solid];
m9_768 -> m9_757  [key=0, style=bold, color=blue];
m9_662 -> m9_663  [key=0, style=solid];
m9_664 -> m9_9  [key=2, style=dotted];
m9_664 -> m9_665  [key=0, style=solid];
m9_664 -> m9_667  [key=1, style=dashed, color=darkseagreen4, label=defaultJson];
m9_663 -> m9_664  [key=0, style=solid];
m9_663 -> m9_210  [key=2, style=dotted];
m9_663 -> m9_671  [key=2, style=dotted];
m9_663 -> m9_665  [key=1, style=dashed, color=darkseagreen4, label=entry];
m9_663 -> m9_666  [key=1, style=dashed, color=darkseagreen4, label=entry];
m9_665 -> m9_666  [key=0, style=solid];
m9_665 -> m9_263  [key=2, style=dotted];
m9_665 -> m9_442  [key=2, style=dotted];
m9_665 -> m9_668  [key=1, style=dashed, color=darkseagreen4, label=isoJson];
m9_667 -> m9_668  [key=0, style=solid];
m9_667 -> m9_12  [key=2, style=dotted];
m9_666 -> m9_667  [key=0, style=solid];
m9_666 -> m9_442  [key=2, style=dotted];
m9_666 -> m9_493  [key=2, style=dotted];
m9_666 -> m9_669  [key=1, style=dashed, color=darkseagreen4, label=javascriptJson];
m9_668 -> m9_12  [key=2, style=dotted];
m9_668 -> m9_669  [key=0, style=solid];
m9_669 -> m9_12  [key=2, style=dotted];
m9_669 -> m9_670  [key=0, style=solid];
m9_670 -> m9_662  [key=0, style=bold, color=blue];
m9_101 -> m9_9  [key=2, style=dotted];
m9_101 -> m9_102  [key=0, style=solid];
m9_101 -> m9_107  [key=2, style=dotted];
m9_350 -> m9_364  [key=0, style=solid];
m9_370 -> m9_371  [key=0, style=solid];
m9_370 -> m9_373  [key=2, style=dotted];
m9_2682 -> m9_2685  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m9_2682 -> m9_2683  [key=0, style=solid];
m9_2685 -> m9_1518  [key=2, style=dotted];
m9_2685 -> m9_2686  [key=0, style=solid];
m9_2685 -> m9_2687  [key=2, style=dotted];
m9_2685 -> m9_2688  [key=2, style=dotted];
m9_2685 -> m9_2689  [key=2, style=dotted];
m9_2684 -> m9_2685  [key=0, style=solid];
m9_2683 -> m9_2684  [key=0, style=solid];
m9_2686 -> m9_2682  [key=0, style=bold, color=blue];
m9_1878 -> m9_1879  [key=0, style=solid];
m9_1882 -> m9_93  [key=2, style=dotted];
m9_1882 -> m9_1883  [key=0, style=solid];
m9_1881 -> m9_11  [key=2, style=dotted];
m9_1881 -> m9_1882  [key=0, style=solid];
m9_1883 -> m9_11  [key=2, style=dotted];
m9_1883 -> m9_1883  [key=1, style=dashed, color=darkseagreen4, label=newStruct];
m9_1883 -> m9_1884  [key=0, style=solid];
m9_1880 -> m9_1882  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_1880 -> m9_1881  [key=0, style=solid];
m9_1880 -> m9_351  [key=2, style=dotted];
m9_1879 -> m9_1880  [key=0, style=solid];
m9_1879 -> m9_1885  [key=2, style=dotted];
m9_1884 -> m9_1878  [key=0, style=bold, color=blue];
m9_2109 -> m9_2110  [key=0, style=solid];
m9_2111 -> m9_1519  [key=2, style=dotted];
m9_2111 -> m9_2112  [key=0, style=solid];
m9_2110 -> m9_10  [key=2, style=dotted];
m9_2110 -> m9_2111  [key=0, style=solid];
m9_2112 -> m9_2109  [key=0, style=bold, color=blue];
m9_2849 -> m9_2850  [key=0, style=solid];
m9_2851 -> m9_11  [key=2, style=dotted];
m9_2851 -> m9_2852  [key=0, style=solid];
m9_2850 -> m9_2851  [key=0, style=solid];
m9_2850 -> m9_2853  [key=2, style=dotted];
m9_2850 -> m9_351  [key=2, style=dotted];
m9_2852 -> m9_2849  [key=0, style=bold, color=blue];
m9_543 -> m9_544  [key=0, style=solid, color=green];
m9_543 -> m9_546  [key=1, style=dashed, color=green, label=personRaw];
m9_543 -> m9_574  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m9_543 -> m9_576  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m9_543 -> m9_25  [key=3, color=darkorchid, style=bold, label="method methodReturn object GetDefaultValue"];
m9_543 -> m9_11  [key=3, color=darkorchid, style=bold, label="method methodReturn object GetDefaultValue"];
m9_543 -> m9_60  [key=3, color=darkorchid, style=bold, label="method methodReturn object GetDefaultValue"];
m9_543 -> m9_559  [key=3, color=darkorchid, style=bold, label="method methodReturn object GetDefaultValue"];
m9_543 -> m9_561  [key=3, color=darkorchid, style=bold, label="method methodReturn object GetDefaultValue"];
m9_543 -> m9_563  [key=3, color=darkorchid, style=bold, label="method methodReturn object GetDefaultValue"];
m9_543 -> m9_565  [key=3, color=darkorchid, style=bold, label="method methodReturn object GetDefaultValue"];
m9_543 -> m9_543  [key=3, color=green, style=bold, label="Local variable string script"];
m9_543 -> m9_93  [key=2, style=dotted, color=green];
m9_543 -> m9_545  [key=1, style=dashed, color=green, label=personRaw];
m9_544 -> m9_545  [key=0, style=solid, color=green];
m9_544 -> m9_546  [key=0, style=solid];
m9_544 -> m9_90  [key=2, style=dotted];
m9_544 -> m9_11  [key=2, style=dotted, color=green];
m9_546 -> m9_547  [key=0, style=solid, color=green];
m9_546 -> m9_549  [key=0, style=solid];
m9_546 -> m9_557  [key=0, style=solid];
m9_546 -> m9_560  [key=0, style=solid];
m9_546 -> m9_562  [key=0, style=solid];
m9_546 -> m9_564  [key=0, style=solid];
m9_546 -> m9_566  [key=0, style=solid];
m9_546 -> m9_568  [key=0, style=solid];
m9_546 -> m9_570  [key=0, style=solid];
m9_546 -> m9_572  [key=0, style=solid];
m9_546 -> m9_578  [key=2, style=dotted];
m9_546 -> m9_11  [key=2, style=dotted, color=green];
m9_545 -> m9_577  [key=0, style=solid];
m9_545 -> m9_546  [key=0, style=solid, color=green];
m9_545 -> m9_548  [key=2, style=dotted, color=green];
m9_545 -> m9_11  [key=2, style=dotted, color=green];
m9_547 -> m9_548  [key=0, style=solid];
m9_547 -> m9_541  [key=0, style=bold, color=blue];
m9_562 -> m9_563  [key=0, style=solid];
m9_564 -> m9_565  [key=0, style=solid];
m9_566 -> m9_567  [key=0, style=solid];
m9_566 -> m9_11  [key=2, style=dotted];
m9_563 -> m9_577  [key=0, style=solid];
m9_563 -> m9_564  [key=0, style=solid];
m9_565 -> m9_577  [key=0, style=solid];
m9_565 -> m9_93  [key=2, style=dotted];
m9_565 -> m9_566  [key=0, style=solid];
m9_567 -> m9_577  [key=0, style=solid];
m9_567 -> m9_579  [key=2, style=dotted];
m9_567 -> m9_563  [key=0, style=bold, color=blue];
m9_2448 -> m9_2449  [key=0, style=solid];
m9_2451 -> m9_93  [key=2, style=dotted];
m9_2451 -> m9_2452  [key=0, style=solid];
m9_2451 -> m9_2453  [key=1, style=dashed, color=darkseagreen4, label=d2];
m9_2452 -> m9_11  [key=2, style=dotted];
m9_2452 -> m9_2453  [key=0, style=solid];
m9_2453 -> m9_11  [key=2, style=dotted];
m9_2453 -> m9_2454  [key=0, style=solid];
m9_2450 -> m9_9  [key=2, style=dotted];
m9_2450 -> m9_2451  [key=0, style=solid];
m9_2449 -> m9_2452  [key=1, style=dashed, color=darkseagreen4, label=d1];
m9_2449 -> m9_2453  [key=1, style=dashed, color=darkseagreen4, label=d1];
m9_2449 -> m9_2450  [key=0, style=solid];
m9_2449 -> m9_209  [key=2, style=dotted];
m9_2454 -> m9_2448  [key=0, style=bold, color=blue];
m9_2990 -> m9_2991  [key=0, style=solid];
m9_2992 -> m9_93  [key=2, style=dotted];
m9_2992 -> m9_2993  [key=0, style=solid];
m9_2994 -> m9_11  [key=2, style=dotted];
m9_2994 -> m9_2995  [key=0, style=solid];
m9_2991 -> m9_2992  [key=0, style=solid];
m9_2993 -> m9_2994  [key=0, style=solid];
m9_2995 -> m9_2990  [key=0, style=bold, color=blue];
m9_1899 -> m9_1900  [key=0, style=solid];
m9_1902 -> m9_93  [key=2, style=dotted];
m9_1902 -> m9_1903  [key=0, style=solid];
m9_1902 -> m9_1904  [key=1, style=dashed, color=darkseagreen4, label=deserializeObject];
m9_1901 -> m9_11  [key=2, style=dotted];
m9_1901 -> m9_1902  [key=0, style=solid];
m9_1903 -> m9_11  [key=2, style=dotted];
m9_1903 -> m9_1904  [key=0, style=solid];
m9_1903 -> m9_223  [key=2, style=dotted];
m9_1904 -> m9_11  [key=2, style=dotted];
m9_1904 -> m9_1905  [key=0, style=solid];
m9_1904 -> m9_29  [key=2, style=dotted];
m9_1900 -> m9_1902  [key=1, style=dashed, color=darkseagreen4, label=serializeObject];
m9_1900 -> m9_1901  [key=0, style=solid];
m9_1900 -> m9_1893  [key=2, style=dotted];
m9_1900 -> m9_1894  [key=2, style=dotted];
m9_1900 -> m9_29  [key=2, style=dotted];
m9_1900 -> m9_223  [key=2, style=dotted];
m9_1900 -> m9_214  [key=2, style=dotted];
m9_1900 -> m9_728  [key=2, style=dotted];
m9_1905 -> m9_1899  [key=0, style=bold, color=blue];
m9_1445 -> m9_1482  [key=0, style=solid];
m9_1445 -> m9_1483  [key=1, style=dashed, color=darkseagreen4, label=int];
m9_1445 -> m9_1484  [key=1, style=dashed, color=darkseagreen4, label=int];
m9_1445 -> m9_1485  [key=1, style=dashed, color=darkseagreen4, label=int];
m9_1445 -> m9_1486  [key=1, style=dashed, color=darkseagreen4, label=int];
m9_1445 -> m9_1487  [key=1, style=dashed, color=darkseagreen4, label=int];
m9_1445 -> m9_1488  [key=1, style=dashed, color=darkseagreen4, label=int];
m9_1445 -> m9_1489  [key=1, style=dashed, color=darkseagreen4, label=int];
m9_1482 -> m9_1483  [key=0, style=solid];
m9_1483 -> m9_1484  [key=0, style=solid];
m9_1484 -> m9_1485  [key=0, style=solid];
m9_1485 -> m9_1486  [key=0, style=solid];
m9_1486 -> m9_1487  [key=0, style=solid];
m9_1487 -> m9_1488  [key=0, style=solid];
m9_1488 -> m9_1489  [key=0, style=solid];
m9_1489 -> m9_1490  [key=0, style=solid];
m9_1490 -> m9_1445  [key=0, style=bold, color=blue];
m9_1830 -> m9_1831  [key=0, style=solid];
m9_1832 -> m9_11  [key=2, style=dotted];
m9_1832 -> m9_1833  [key=0, style=solid];
m9_1831 -> m9_1832  [key=0, style=solid];
m9_1831 -> m9_351  [key=2, style=dotted];
m9_1833 -> m9_1830  [key=0, style=bold, color=blue];
m9_3133 -> m9_3134  [key=0, style=solid];
m9_3135 -> m9_93  [key=2, style=dotted];
m9_3135 -> m9_3136  [key=0, style=solid];
m9_3135 -> m9_3137  [key=1, style=dashed, color=darkseagreen4, label=aa];
m9_3135 -> m9_3138  [key=1, style=dashed, color=darkseagreen4, label=aa];
m9_3135 -> m9_3139  [key=1, style=dashed, color=darkseagreen4, label=aa];
m9_3135 -> m9_3140  [key=1, style=dashed, color=darkseagreen4, label=aa];
m9_3135 -> m9_3141  [key=1, style=dashed, color=darkseagreen4, label=aa];
m9_3142 -> m9_11  [key=2, style=dotted];
m9_3142 -> m9_3143  [key=0, style=solid];
m9_3136 -> m9_11  [key=2, style=dotted];
m9_3136 -> m9_3137  [key=0, style=solid];
m9_3137 -> m9_11  [key=2, style=dotted];
m9_3137 -> m9_3138  [key=0, style=solid];
m9_3138 -> m9_11  [key=2, style=dotted];
m9_3138 -> m9_3139  [key=0, style=solid];
m9_3138 -> m9_3064  [key=2, style=dotted];
m9_3139 -> m9_11  [key=2, style=dotted];
m9_3139 -> m9_3140  [key=0, style=solid];
m9_3139 -> m9_3064  [key=2, style=dotted];
m9_3140 -> m9_11  [key=2, style=dotted];
m9_3140 -> m9_3141  [key=0, style=solid];
m9_3140 -> m9_3064  [key=2, style=dotted];
m9_3141 -> m9_9  [key=2, style=dotted];
m9_3141 -> m9_3142  [key=0, style=solid];
m9_3134 -> m9_3135  [key=0, style=solid];
m9_3134 -> m9_3142  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_3143 -> m9_3133  [key=0, style=bold, color=blue];
m9_420 -> m9_93  [key=2, style=dotted];
m9_420 -> m9_421  [key=0, style=solid];
m9_420 -> m9_422  [key=1, style=dashed, color=darkseagreen4, label=assemblyDelimiterIndex];
m9_420 -> m9_423  [key=1, style=dashed, color=darkseagreen4, label=assemblyDelimiterIndex];
m9_420 -> m9_427  [key=2, style=dotted];
m9_421 -> m9_11  [key=2, style=dotted];
m9_421 -> m9_422  [key=0, style=solid];
m9_421 -> m9_424  [key=0, style=solid];
m9_422 -> m9_11  [key=2, style=dotted];
m9_422 -> m9_423  [key=0, style=solid];
m9_422 -> m9_428  [key=2, style=dotted];
m9_422 -> m9_429  [key=2, style=dotted];
m9_422 -> m9_430  [key=2, style=dotted];
m9_422 -> m9_426  [key=1, style=dashed, color=darkseagreen4, label="out string"];
m9_423 -> m9_11  [key=2, style=dotted];
m9_423 -> m9_424  [key=0, style=solid];
m9_423 -> m9_426  [key=0, style=solid];
m9_423 -> m9_428  [key=2, style=dotted];
m9_423 -> m9_429  [key=2, style=dotted];
m9_423 -> m9_430  [key=2, style=dotted];
m9_419 -> m9_9  [key=2, style=dotted];
m9_419 -> m9_420  [key=0, style=solid];
m9_419 -> m9_422  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_419 -> m9_423  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_419 -> m9_424  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_419 -> m9_419  [key=3, color=darkorchid, style=bold, label="Parameter variable string typeName"];
m9_424 -> m9_417  [key=0, style=bold, color=blue];
m9_424 -> m9_425  [key=0, style=solid];
m9_424 -> m9_426  [key=1, style=dashed, color=darkseagreen4, label="out string"];
m9_100 -> m9_101  [key=0, style=solid];
m9_90 -> m9_11  [key=2, style=dotted];
m9_90 -> m9_91  [key=0, style=solid];
m9_1867 -> m9_1868  [key=0, style=solid];
m9_1870 -> m9_1876  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_1870 -> m9_1871  [key=0, style=solid];
m9_1870 -> m9_351  [key=2, style=dotted];
m9_1869 -> m9_1870  [key=0, style=solid];
m9_1869 -> m9_1873  [key=2, style=dotted];
m9_1869 -> m9_1874  [key=2, style=dotted];
m9_1871 -> m9_1875  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_1871 -> m9_1872  [key=0, style=solid];
m9_1871 -> m9_140  [key=2, style=dotted];
m9_1868 -> m9_1869  [key=0, style=solid];
m9_1868 -> m9_1871  [key=1, style=dashed, color=darkseagreen4, label=classRef];
m9_1872 -> m9_1867  [key=0, style=bold, color=blue];
m9_362 -> m9_363  [key=0, style=solid];
m9_362 -> m9_364  [key=0, style=solid];
m9_363 -> m9_369  [key=2, style=dotted];
m9_363 -> m9_367  [key=1, style=dashed, color=darkseagreen4, label=guid];
m9_363 -> m9_364  [key=0, style=solid];
m9_364 -> m9_9  [key=2, style=dotted];
m9_364 -> m9_366  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_364 -> m9_365  [key=0, style=solid];
m9_364 -> m9_370  [key=2, style=dotted];
m9_364 -> m9_342  [key=0, style=bold, color=blue];
m9_1978 -> m9_1979  [key=0, style=solid];
m9_1979 -> m9_1980  [key=0, style=solid];
m9_1980 -> m9_1978  [key=0, style=bold, color=blue];
m9_2619 -> m9_2620  [key=0, style=solid];
m9_2620 -> m9_140  [key=2, style=dotted];
m9_2620 -> m9_2621  [key=0, style=solid];
m9_2620 -> m9_2622  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_2621 -> m9_2619  [key=0, style=bold, color=blue];
m9_3364 -> m9_3365  [key=0, style=solid];
m9_3365 -> m9_3366  [key=0, style=solid];
m9_3365 -> m9_3367  [key=2, style=dotted];
m9_3366 -> m9_3364  [key=0, style=bold, color=blue];
m9_1817 -> m9_1818  [key=0, style=solid];
m9_1818 -> m9_1820  [key=2, style=dotted];
m9_1818 -> m9_1819  [key=0, style=solid];
m9_1819 -> m9_1817  [key=0, style=bold, color=blue];
m9_2144 -> m9_2145  [key=0, style=solid];
m9_2146 -> m9_351  [key=2, style=dotted];
m9_2146 -> m9_2147  [key=0, style=solid];
m9_2147 -> m9_12  [key=2, style=dotted];
m9_2147 -> m9_2148  [key=0, style=solid];
m9_2145 -> m9_2146  [key=0, style=solid];
m9_2145 -> m9_2149  [key=2, style=dotted];
m9_2148 -> m9_2144  [key=0, style=bold, color=blue];
m9_346 -> m9_11  [key=2, style=dotted];
m9_346 -> m9_347  [key=0, style=solid];
m9_346 -> m9_348  [key=0, style=solid];
m9_346 -> m9_228  [key=2, style=dotted];
m9_347 -> m9_11  [key=2, style=dotted];
m9_347 -> m9_348  [key=0, style=solid];
m9_347 -> m9_364  [key=0, style=solid];
m9_348 -> m9_11  [key=2, style=dotted];
m9_348 -> m9_349  [key=0, style=solid];
m9_348 -> m9_351  [key=1, style=dashed, color=darkseagreen4, label=propertyInfo];
m9_348 -> m9_357  [key=1, style=dashed, color=darkseagreen4, label=propertyInfo];
m9_342 -> m9_343  [key=0, style=solid];
m9_342 -> m9_346  [key=0, style=solid];
m9_342 -> m9_348  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m9_342 -> m9_357  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.BindingFlags"];
m9_342 -> m9_323  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Reflection.MemberInfo memberInfo"];
m9_342 -> m9_312  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Reflection.BindingFlags bindingAttr"];
m9_342 -> m9_11  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsOverridenGenericMember"];
m9_342 -> m9_7  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsOverridenGenericMember"];
m9_349 -> m9_340  [key=0, style=bold, color=blue];
m9_349 -> m9_350  [key=0, style=solid];
m9_349 -> m9_351  [key=0, style=solid];
m9_349 -> m9_3  [key=2, style=dotted];
m9_1855 -> m9_1856  [key=0, style=solid];
m9_1862 -> m9_11  [key=2, style=dotted];
m9_1862 -> m9_1863  [key=0, style=solid];
m9_1863 -> m9_11  [key=2, style=dotted];
m9_1863 -> m9_1864  [key=0, style=solid];
m9_1864 -> m9_11  [key=2, style=dotted];
m9_1864 -> m9_1865  [key=0, style=solid];
m9_1861 -> m9_1862  [key=0, style=solid];
m9_1861 -> m9_1863  [key=1, style=dashed, color=darkseagreen4, label=z];
m9_1861 -> m9_1864  [key=1, style=dashed, color=darkseagreen4, label=z];
m9_1861 -> m9_284  [key=2, style=dotted];
m9_1856 -> m9_1861  [key=1, style=dashed, color=darkseagreen4, label=serializer1];
m9_1856 -> m9_1857  [key=0, style=solid];
m9_1856 -> m9_277  [key=2, style=dotted];
m9_1856 -> m9_1858  [key=1, style=dashed, color=darkseagreen4, label=serializer1];
m9_1860 -> m9_1861  [key=0, style=solid];
m9_1860 -> m9_282  [key=2, style=dotted];
m9_1860 -> m9_283  [key=2, style=dotted];
m9_1857 -> m9_263  [key=2, style=dotted];
m9_1857 -> m9_1858  [key=0, style=solid];
m9_1857 -> m9_1866  [key=2, style=dotted];
m9_1858 -> m9_1859  [key=0, style=solid];
m9_1859 -> m9_1860  [key=0, style=solid];
m9_1865 -> m9_1855  [key=0, style=bold, color=blue];
m9_821 -> m9_822  [key=0, style=solid];
m9_824 -> m9_93  [key=2, style=dotted];
m9_824 -> m9_825  [key=0, style=solid];
m9_824 -> m9_831  [key=2, style=dotted];
m9_824 -> m9_826  [key=1, style=dashed, color=darkseagreen4, label=s];
m9_824 -> m9_827  [key=1, style=dashed, color=darkseagreen4, label=s];
m9_824 -> m9_828  [key=1, style=dashed, color=darkseagreen4, label=s];
m9_826 -> m9_11  [key=2, style=dotted];
m9_826 -> m9_827  [key=0, style=solid];
m9_827 -> m9_11  [key=2, style=dotted];
m9_827 -> m9_828  [key=0, style=solid];
m9_828 -> m9_11  [key=2, style=dotted];
m9_828 -> m9_829  [key=0, style=solid];
m9_823 -> m9_824  [key=0, style=solid];
m9_823 -> m9_830  [key=2, style=dotted];
m9_825 -> m9_826  [key=0, style=solid];
m9_825 -> m9_686  [key=2, style=dotted];
m9_822 -> m9_823  [key=0, style=solid];
m9_829 -> m9_821  [key=0, style=bold, color=blue];
m9_2430 -> m9_2431  [key=0, style=solid];
m9_2436 -> m9_93  [key=2, style=dotted];
m9_2436 -> m9_2437  [key=0, style=solid];
m9_2436 -> m9_2438  [key=1, style=dashed, color=darkseagreen4, label=c];
m9_2437 -> m9_11  [key=2, style=dotted];
m9_2437 -> m9_2438  [key=0, style=solid];
m9_2438 -> m9_11  [key=2, style=dotted];
m9_2438 -> m9_2439  [key=0, style=solid];
m9_2435 -> m9_2436  [key=0, style=solid];
m9_2434 -> m9_2435  [key=0, style=solid];
m9_2432 -> m9_2434  [key=1, style=dashed, color=darkseagreen4, label=testCulture];
m9_2432 -> m9_2433  [key=0, style=solid];
m9_2432 -> m9_2440  [key=2, style=dotted];
m9_2433 -> m9_2434  [key=0, style=solid];
m9_2431 -> m9_2432  [key=0, style=solid];
m9_2439 -> m9_2430  [key=0, style=bold, color=blue];
m9_672 -> m9_673  [key=0, style=solid];
m9_679 -> m9_93  [key=2, style=dotted];
m9_679 -> m9_680  [key=0, style=solid];
m9_679 -> m9_681  [key=1, style=dashed, color=darkseagreen4, label=deserializedObject];
m9_679 -> m9_682  [key=1, style=dashed, color=darkseagreen4, label=deserializedObject];
m9_679 -> m9_683  [key=1, style=dashed, color=darkseagreen4, label=deserializedObject];
m9_681 -> m9_11  [key=2, style=dotted];
m9_681 -> m9_682  [key=0, style=solid];
m9_681 -> m9_687  [key=2, style=dotted];
m9_682 -> m9_11  [key=2, style=dotted];
m9_682 -> m9_683  [key=0, style=solid];
m9_682 -> m9_687  [key=2, style=dotted];
m9_683 -> m9_11  [key=2, style=dotted];
m9_683 -> m9_684  [key=0, style=solid];
m9_683 -> m9_687  [key=2, style=dotted];
m9_678 -> m9_11  [key=2, style=dotted];
m9_678 -> m9_679  [key=0, style=solid];
m9_677 -> m9_679  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_677 -> m9_678  [key=0, style=solid];
m9_677 -> m9_351  [key=2, style=dotted];
m9_680 -> m9_681  [key=0, style=solid];
m9_680 -> m9_686  [key=2, style=dotted];
m9_673 -> m9_681  [key=1, style=dashed, color=darkseagreen4, label=o];
m9_673 -> m9_682  [key=1, style=dashed, color=darkseagreen4, label=o];
m9_673 -> m9_683  [key=1, style=dashed, color=darkseagreen4, label=o];
m9_673 -> m9_677  [key=1, style=dashed, color=darkseagreen4, label=o];
m9_673 -> m9_674  [key=0, style=solid];
m9_673 -> m9_685  [key=2, style=dotted];
m9_673 -> m9_675  [key=1, style=dashed, color=darkseagreen4, label=o];
m9_673 -> m9_676  [key=1, style=dashed, color=darkseagreen4, label=o];
m9_676 -> m9_677  [key=0, style=solid];
m9_676 -> m9_209  [key=2, style=dotted];
m9_674 -> m9_52  [key=2, style=dotted];
m9_674 -> m9_675  [key=0, style=solid];
m9_675 -> m9_676  [key=0, style=solid];
m9_675 -> m9_209  [key=2, style=dotted];
m9_684 -> m9_672  [key=0, style=bold, color=blue];
m9_2394 -> m9_2395  [key=0, style=solid];
m9_2398 -> m9_93  [key=2, style=dotted];
m9_2398 -> m9_2399  [key=0, style=solid];
m9_2399 -> m9_11  [key=2, style=dotted];
m9_2399 -> m9_2400  [key=0, style=solid];
m9_2397 -> m9_9  [key=2, style=dotted];
m9_2397 -> m9_2398  [key=0, style=solid];
m9_2396 -> m9_2399  [key=1, style=dashed, color=darkseagreen4, label=uri];
m9_2396 -> m9_2397  [key=0, style=solid];
m9_2396 -> m9_839  [key=2, style=dotted];
m9_2395 -> m9_2396  [key=0, style=solid];
m9_2400 -> m9_2394  [key=0, style=bold, color=blue];
m9_746 -> m9_747  [key=0, style=solid];
m9_748 -> m9_93  [key=2, style=dotted];
m9_748 -> m9_749  [key=0, style=solid];
m9_750 -> m9_93  [key=2, style=dotted];
m9_750 -> m9_751  [key=0, style=solid];
m9_750 -> m9_752  [key=1, style=dashed, color=darkseagreen4, label=n];
m9_750 -> m9_753  [key=1, style=dashed, color=darkseagreen4, label=n];
m9_750 -> m9_754  [key=1, style=dashed, color=darkseagreen4, label=n];
m9_750 -> m9_755  [key=1, style=dashed, color=darkseagreen4, label=n];
m9_749 -> m9_11  [key=2, style=dotted];
m9_749 -> m9_750  [key=0, style=solid];
m9_751 -> m9_11  [key=2, style=dotted];
m9_751 -> m9_369  [key=2, style=dotted];
m9_751 -> m9_752  [key=0, style=solid];
m9_752 -> m9_11  [key=2, style=dotted];
m9_752 -> m9_369  [key=2, style=dotted];
m9_752 -> m9_753  [key=0, style=solid];
m9_753 -> m9_11  [key=2, style=dotted];
m9_753 -> m9_754  [key=0, style=solid];
m9_754 -> m9_11  [key=2, style=dotted];
m9_754 -> m9_755  [key=0, style=solid];
m9_755 -> m9_11  [key=2, style=dotted];
m9_755 -> m9_756  [key=0, style=solid];
m9_747 -> m9_748  [key=0, style=solid];
m9_747 -> m9_750  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_756 -> m9_746  [key=0, style=bold, color=blue];
m9_312 -> m9_313  [key=0, style=solid];
m9_312 -> m9_314  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m9_312 -> m9_315  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m9_312 -> m9_326  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.BindingFlags"];
m9_312 -> m9_316  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.List<System.Reflection.MemberInfo> GetFieldsAndProperties"];
m9_312 -> m9_11  [key=2, style=dotted];
m9_313 -> m9_314  [key=0, style=solid];
m9_313 -> m9_331  [key=2, style=dotted];
m9_313 -> m9_315  [key=1, style=dashed, color=darkseagreen4, label=targetMembers];
m9_313 -> m9_316  [key=1, style=dashed, color=darkseagreen4, label=targetMembers];
m9_313 -> m9_317  [key=1, style=dashed, color=darkseagreen4, label=targetMembers];
m9_313 -> m9_304  [key=0, style=bold, color=blue];
m9_2000 -> m9_2001  [key=0, style=solid];
m9_2009 -> m9_11  [key=2, style=dotted];
m9_2009 -> m9_2010  [key=0, style=solid];
m9_2010 -> m9_11  [key=2, style=dotted];
m9_2010 -> m9_2011  [key=0, style=solid];
m9_2013 -> m9_11  [key=2, style=dotted];
m9_2013 -> m9_2014  [key=0, style=solid];
m9_2014 -> m9_11  [key=2, style=dotted];
m9_2014 -> m9_2015  [key=0, style=solid];
m9_2007 -> m9_9  [key=2, style=dotted];
m9_2007 -> m9_2008  [key=0, style=solid];
m9_2011 -> m9_9  [key=2, style=dotted];
m9_2011 -> m9_2012  [key=0, style=solid];
m9_2008 -> m9_2009  [key=0, style=solid];
m9_2008 -> m9_2010  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m9_2008 -> m9_2018  [key=2, style=dotted];
m9_2012 -> m9_2013  [key=0, style=solid];
m9_2012 -> m9_2014  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m9_2012 -> m9_2018  [key=2, style=dotted];
m9_2001 -> m9_2007  [key=1, style=dashed, color=darkseagreen4, label=nullableStructPropertyClass];
m9_2001 -> m9_2002  [key=0, style=solid];
m9_2001 -> m9_2016  [key=2, style=dotted];
m9_2001 -> m9_2003  [key=1, style=dashed, color=darkseagreen4, label=nullableStructPropertyClass];
m9_2006 -> m9_2007  [key=0, style=solid];
m9_2004 -> m9_2011  [key=1, style=dashed, color=darkseagreen4, label=barWithNull];
m9_2004 -> m9_2006  [key=1, style=dashed, color=darkseagreen4, label=barWithNull];
m9_2004 -> m9_2005  [key=0, style=solid];
m9_2004 -> m9_2016  [key=2, style=dotted];
m9_2002 -> m9_2003  [key=0, style=solid];
m9_2002 -> m9_2017  [key=2, style=dotted];
m9_2003 -> m9_2004  [key=0, style=solid];
m9_2003 -> m9_2017  [key=2, style=dotted];
m9_2005 -> m9_2006  [key=0, style=solid];
m9_2005 -> m9_2017  [key=2, style=dotted];
m9_2015 -> m9_2000  [key=0, style=bold, color=blue];
m9_113 -> m9_114  [key=0, style=solid];
m9_113 -> m9_115  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m9_113 -> m9_107  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type t"];
m9_113 -> m9_119  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type t"];
m9_113 -> m9_108  [key=0, style=bold, color=blue];
m9_114 -> m9_115  [key=0, style=solid];
m9_114 -> m9_13  [key=2, style=dotted];
m9_114 -> m9_14  [key=2, style=dotted];
m9_1597 -> m9_1598  [key=0, style=solid];
m9_1603 -> m9_93  [key=2, style=dotted];
m9_1603 -> m9_1604  [key=0, style=solid];
m9_1603 -> m9_1605  [key=1, style=dashed, color=darkseagreen4, label=result];
m9_1603 -> m9_1606  [key=1, style=dashed, color=darkseagreen4, label=result];
m9_1603 -> m9_1607  [key=1, style=dashed, color=darkseagreen4, label=result];
m9_1603 -> m9_1608  [key=1, style=dashed, color=darkseagreen4, label=result];
m9_1602 -> m9_11  [key=2, style=dotted];
m9_1602 -> m9_1603  [key=0, style=solid];
m9_1604 -> m9_11  [key=2, style=dotted];
m9_1604 -> m9_1605  [key=0, style=solid];
m9_1605 -> m9_11  [key=2, style=dotted];
m9_1605 -> m9_1606  [key=0, style=solid];
m9_1606 -> m9_11  [key=2, style=dotted];
m9_1606 -> m9_1607  [key=0, style=solid];
m9_1607 -> m9_11  [key=2, style=dotted];
m9_1607 -> m9_1608  [key=0, style=solid];
m9_1608 -> m9_11  [key=2, style=dotted];
m9_1608 -> m9_1609  [key=0, style=solid];
m9_1601 -> m9_9  [key=2, style=dotted];
m9_1601 -> m9_1603  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_1601 -> m9_1602  [key=0, style=solid];
m9_1598 -> m9_1601  [key=1, style=dashed, color=darkseagreen4, label=list];
m9_1598 -> m9_1599  [key=0, style=solid];
m9_1598 -> m9_209  [key=2, style=dotted];
m9_1598 -> m9_1600  [key=1, style=dashed, color=darkseagreen4, label=list];
m9_1600 -> m9_1601  [key=0, style=solid];
m9_1600 -> m9_1610  [key=2, style=dotted];
m9_1600 -> m9_158  [key=2, style=dotted];
m9_1599 -> m9_1600  [key=0, style=solid];
m9_1599 -> m9_1610  [key=2, style=dotted];
m9_1599 -> m9_158  [key=2, style=dotted];
m9_1609 -> m9_1597  [key=0, style=bold, color=blue];
m9_124 -> m9_125  [key=0, style=solid];
m9_124 -> m9_126  [key=0, style=solid];
m9_124 -> m9_117  [key=2, style=dotted];
m9_1534 -> m9_1535  [key=0, style=solid];
m9_1537 -> m9_11  [key=2, style=dotted];
m9_1537 -> m9_1538  [key=0, style=solid];
m9_1536 -> m9_1537  [key=0, style=solid];
m9_1536 -> m9_1542  [key=2, style=dotted];
m9_1536 -> m9_1543  [key=2, style=dotted];
m9_1536 -> m9_442  [key=2, style=dotted];
m9_1535 -> m9_1536  [key=0, style=solid];
m9_1535 -> m9_1539  [key=2, style=dotted];
m9_1535 -> m9_1540  [key=2, style=dotted];
m9_1535 -> m9_1541  [key=2, style=dotted];
m9_1538 -> m9_1534  [key=0, style=bold, color=blue];
m9_2331 -> m9_2332  [key=0, style=solid];
m9_2339 -> m9_11  [key=2, style=dotted];
m9_2339 -> m9_2340  [key=0, style=solid];
m9_2338 -> m9_2339  [key=0, style=solid];
m9_2338 -> m9_2346  [key=2, style=dotted];
m9_2334 -> m9_2338  [key=1, style=dashed, color=darkseagreen4, label=sw];
m9_2334 -> m9_278  [key=2, style=dotted];
m9_2334 -> m9_2335  [key=0, style=solid];
m9_2337 -> m9_2338  [key=0, style=solid];
m9_2337 -> m9_2345  [key=2, style=dotted];
m9_2333 -> m9_2334  [key=0, style=solid];
m9_2333 -> m9_2341  [key=2, style=dotted];
m9_2333 -> m9_2336  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_2335 -> m9_2337  [key=1, style=dashed, color=darkseagreen4, label=jw];
m9_2335 -> m9_2342  [key=2, style=dotted];
m9_2335 -> m9_2336  [key=0, style=solid];
m9_2336 -> m9_2337  [key=0, style=solid];
m9_2336 -> m9_2343  [key=2, style=dotted];
m9_2336 -> m9_2344  [key=2, style=dotted];
m9_2332 -> m9_2333  [key=0, style=solid];
m9_2340 -> m9_2331  [key=0, style=bold, color=blue];
m9_1910 -> m9_1911  [key=0, style=solid];
m9_1912 -> m9_11  [key=2, style=dotted];
m9_1912 -> m9_1913  [key=0, style=solid];
m9_1911 -> m9_1912  [key=0, style=solid];
m9_1911 -> m9_1914  [key=2, style=dotted];
m9_1911 -> m9_351  [key=2, style=dotted];
m9_1913 -> m9_1910  [key=0, style=bold, color=blue];
m9_1278 -> m9_1281  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m9_1278 -> m9_1279  [key=0, style=solid];
m9_1282 -> m9_1282  [key=1, style=dashed, color=darkseagreen4, label=entry];
m9_1282 -> m9_1281  [key=0, style=solid];
m9_1281 -> m9_1282  [key=0, style=solid];
m9_1281 -> m9_1283  [key=0, style=solid];
m9_1279 -> m9_1281  [key=0, style=solid];
m9_1279 -> m9_1280  [key=0, style=solid];
m9_1280 -> m9_1283  [key=0, style=solid];
m9_1283 -> m9_1278  [key=0, style=bold, color=blue];
m9_425 -> m9_426  [key=0, style=solid];
m9_1834 -> m9_1835  [key=0, style=solid];
m9_1836 -> m9_11  [key=2, style=dotted];
m9_1836 -> m9_1837  [key=0, style=solid];
m9_1837 -> m9_11  [key=2, style=dotted];
m9_1837 -> m9_1838  [key=0, style=solid];
m9_1838 -> m9_11  [key=2, style=dotted];
m9_1838 -> m9_1839  [key=0, style=solid];
m9_1839 -> m9_11  [key=2, style=dotted];
m9_1839 -> m9_1840  [key=0, style=solid];
m9_1835 -> m9_1836  [key=0, style=solid];
m9_1835 -> m9_1837  [key=1, style=dashed, color=darkseagreen4, label=d];
m9_1835 -> m9_1838  [key=1, style=dashed, color=darkseagreen4, label=d];
m9_1835 -> m9_1839  [key=1, style=dashed, color=darkseagreen4, label=d];
m9_1835 -> m9_10  [key=2, style=dotted];
m9_1840 -> m9_1834  [key=0, style=bold, color=blue];
m9_2690 -> m9_2691  [key=0, style=solid];
m9_2691 -> m9_79  [key=2, style=dotted];
m9_2691 -> m9_2692  [key=0, style=solid];
m9_2691 -> m9_2693  [key=2, style=dotted];
m9_2692 -> m9_2690  [key=0, style=bold, color=blue];
m9_3026 -> m9_3027  [key=0, style=solid];
m9_3032 -> m9_11  [key=2, style=dotted];
m9_3032 -> m9_3033  [key=0, style=solid];
m9_3031 -> m9_9  [key=2, style=dotted];
m9_3031 -> m9_3032  [key=0, style=solid];
m9_3027 -> m9_3031  [key=1, style=dashed, color=darkseagreen4, label=aa];
m9_3027 -> m9_3028  [key=0, style=solid];
m9_3027 -> m9_3034  [key=2, style=dotted];
m9_3027 -> m9_3029  [key=1, style=dashed, color=darkseagreen4, label=aa];
m9_3027 -> m9_3030  [key=1, style=dashed, color=darkseagreen4, label=aa];
m9_3030 -> m9_3031  [key=0, style=solid];
m9_3028 -> m9_3029  [key=0, style=solid];
m9_3029 -> m9_3030  [key=0, style=solid];
m9_3033 -> m9_3026  [key=0, style=bold, color=blue];
m9_2309 -> m9_2310  [key=0, style=solid];
m9_2313 -> m9_93  [key=2, style=dotted];
m9_2313 -> m9_2314  [key=0, style=solid];
m9_2313 -> m9_2315  [key=1, style=dashed, color=darkseagreen4, label=c2];
m9_2313 -> m9_2316  [key=1, style=dashed, color=darkseagreen4, label=c2];
m9_2313 -> m9_2317  [key=1, style=dashed, color=darkseagreen4, label=c2];
m9_2313 -> m9_2318  [key=1, style=dashed, color=darkseagreen4, label=c2];
m9_2314 -> m9_11  [key=2, style=dotted];
m9_2314 -> m9_2315  [key=0, style=solid];
m9_2315 -> m9_11  [key=2, style=dotted];
m9_2315 -> m9_2316  [key=0, style=solid];
m9_2316 -> m9_11  [key=2, style=dotted];
m9_2316 -> m9_2317  [key=0, style=solid];
m9_2317 -> m9_11  [key=2, style=dotted];
m9_2317 -> m9_2318  [key=0, style=solid];
m9_2318 -> m9_11  [key=2, style=dotted];
m9_2318 -> m9_2319  [key=0, style=solid];
m9_2312 -> m9_11  [key=2, style=dotted];
m9_2312 -> m9_2313  [key=0, style=solid];
m9_2310 -> m9_369  [key=2, style=dotted];
m9_2310 -> m9_2314  [key=1, style=dashed, color=darkseagreen4, label=c1];
m9_2310 -> m9_2315  [key=1, style=dashed, color=darkseagreen4, label=c1];
m9_2310 -> m9_2316  [key=1, style=dashed, color=darkseagreen4, label=c1];
m9_2310 -> m9_2317  [key=1, style=dashed, color=darkseagreen4, label=c1];
m9_2310 -> m9_2318  [key=1, style=dashed, color=darkseagreen4, label=c1];
m9_2310 -> m9_2311  [key=0, style=solid];
m9_2310 -> m9_2308  [key=2, style=dotted];
m9_2310 -> m9_2320  [key=2, style=dotted];
m9_2310 -> m9_223  [key=2, style=dotted];
m9_2310 -> m9_839  [key=2, style=dotted];
m9_2311 -> m9_2313  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_2311 -> m9_2312  [key=0, style=solid];
m9_2311 -> m9_351  [key=2, style=dotted];
m9_2319 -> m9_2309  [key=0, style=bold, color=blue];
m9_3411 -> m9_3412  [key=0, style=solid];
m9_3412 -> m9_158  [key=2, style=dotted];
m9_3412 -> m9_3413  [key=0, style=solid];
m9_3413 -> m9_3411  [key=0, style=bold, color=blue];
m9_2946 -> m9_2947  [key=0, style=solid];
m9_2948 -> m9_93  [key=2, style=dotted];
m9_2948 -> m9_2949  [key=0, style=solid];
m9_2948 -> m9_2950  [key=1, style=dashed, color=darkseagreen4, label=result];
m9_2948 -> m9_2951  [key=1, style=dashed, color=darkseagreen4, label=result];
m9_2948 -> m9_2952  [key=1, style=dashed, color=darkseagreen4, label=result];
m9_2949 -> m9_11  [key=2, style=dotted];
m9_2949 -> m9_2950  [key=0, style=solid];
m9_2949 -> m9_124  [key=2, style=dotted];
m9_2950 -> m9_11  [key=2, style=dotted];
m9_2950 -> m9_2951  [key=0, style=solid];
m9_2950 -> m9_810  [key=2, style=dotted];
m9_2951 -> m9_11  [key=2, style=dotted];
m9_2951 -> m9_2952  [key=0, style=solid];
m9_2951 -> m9_810  [key=2, style=dotted];
m9_2952 -> m9_11  [key=2, style=dotted];
m9_2952 -> m9_2953  [key=0, style=solid];
m9_2952 -> m9_810  [key=2, style=dotted];
m9_2947 -> m9_2948  [key=0, style=solid];
m9_2953 -> m9_2946  [key=0, style=bold, color=blue];
m9_2182 -> m9_2183  [key=0, style=solid];
m9_2188 -> m9_93  [key=2, style=dotted];
m9_2188 -> m9_2189  [key=0, style=solid];
m9_2188 -> m9_2190  [key=1, style=dashed, color=darkseagreen4, label=c2];
m9_2188 -> m9_2191  [key=1, style=dashed, color=darkseagreen4, label=c2];
m9_2188 -> m9_2192  [key=1, style=dashed, color=darkseagreen4, label=c2];
m9_2189 -> m9_11  [key=2, style=dotted];
m9_2189 -> m9_2190  [key=0, style=solid];
m9_2190 -> m9_11  [key=2, style=dotted];
m9_2190 -> m9_2191  [key=0, style=solid];
m9_2187 -> m9_11  [key=2, style=dotted];
m9_2187 -> m9_2188  [key=0, style=solid];
m9_2191 -> m9_11  [key=2, style=dotted];
m9_2191 -> m9_2192  [key=0, style=solid];
m9_2192 -> m9_11  [key=2, style=dotted];
m9_2192 -> m9_2193  [key=0, style=solid];
m9_2186 -> m9_2188  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_2186 -> m9_2187  [key=0, style=solid];
m9_2186 -> m9_351  [key=2, style=dotted];
m9_2183 -> m9_2189  [key=1, style=dashed, color=darkseagreen4, label=c1];
m9_2183 -> m9_2190  [key=1, style=dashed, color=darkseagreen4, label=c1];
m9_2183 -> m9_2186  [key=1, style=dashed, color=darkseagreen4, label=c1];
m9_2183 -> m9_2184  [key=0, style=solid];
m9_2183 -> m9_2178  [key=2, style=dotted];
m9_2183 -> m9_2185  [key=1, style=dashed, color=darkseagreen4, label=c1];
m9_2185 -> m9_2186  [key=0, style=solid];
m9_2185 -> m9_264  [key=2, style=dotted];
m9_2184 -> m9_264  [key=2, style=dotted];
m9_2184 -> m9_2185  [key=0, style=solid];
m9_2193 -> m9_2182  [key=0, style=bold, color=blue];
m9_932 -> m9_933  [key=0, style=solid];
m9_934 -> m9_93  [key=2, style=dotted];
m9_934 -> m9_935  [key=0, style=solid];
m9_936 -> m9_11  [key=2, style=dotted];
m9_936 -> m9_937  [key=0, style=solid];
m9_937 -> m9_11  [key=2, style=dotted];
m9_937 -> m9_938  [key=0, style=solid];
m9_938 -> m9_11  [key=2, style=dotted];
m9_938 -> m9_939  [key=0, style=solid];
m9_933 -> m9_934  [key=0, style=solid];
m9_935 -> m9_936  [key=0, style=solid];
m9_935 -> m9_937  [key=1, style=dashed, color=darkseagreen4, label=a];
m9_935 -> m9_938  [key=1, style=dashed, color=darkseagreen4, label=a];
m9_935 -> m9_940  [key=2, style=dotted];
m9_939 -> m9_932  [key=0, style=bold, color=blue];
m9_789 -> m9_790  [key=0, style=solid];
m9_792 -> m9_11  [key=2, style=dotted];
m9_792 -> m9_793  [key=0, style=solid];
m9_793 -> m9_11  [key=2, style=dotted];
m9_793 -> m9_794  [key=0, style=solid];
m9_794 -> m9_11  [key=2, style=dotted];
m9_794 -> m9_795  [key=0, style=solid];
m9_791 -> m9_792  [key=0, style=solid];
m9_791 -> m9_793  [key=1, style=dashed, color=darkseagreen4, label=c];
m9_791 -> m9_794  [key=1, style=dashed, color=darkseagreen4, label=c];
m9_791 -> m9_214  [key=2, style=dotted];
m9_791 -> m9_474  [key=2, style=dotted];
m9_790 -> m9_791  [key=0, style=solid];
m9_795 -> m9_789  [key=0, style=bold, color=blue];
m9_1221 -> m9_1222  [key=0, style=solid];
m9_1223 -> m9_93  [key=2, style=dotted];
m9_1223 -> m9_1224  [key=0, style=solid];
m9_1224 -> m9_11  [key=2, style=dotted];
m9_1224 -> m9_1225  [key=0, style=solid];
m9_1222 -> m9_1223  [key=0, style=solid];
m9_1225 -> m9_1221  [key=0, style=bold, color=blue];
m9_1023 -> m9_1024  [key=0, style=solid];
m9_1025 -> m9_140  [key=2, style=dotted];
m9_1025 -> m9_1026  [key=0, style=solid];
m9_1025 -> m9_1027  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_1024 -> m9_1025  [key=0, style=solid];
m9_1024 -> m9_1028  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_1026 -> m9_1023  [key=0, style=bold, color=blue];
m9_3144 -> m9_3145  [key=0, style=solid];
m9_3145 -> m9_3149  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_3145 -> m9_3146  [key=0, style=solid];
m9_3146 -> m9_3148  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_3146 -> m9_3147  [key=0, style=solid];
m9_3146 -> m9_140  [key=2, style=dotted];
m9_3147 -> m9_3144  [key=0, style=bold, color=blue];
m9_1226 -> m9_1227  [key=0, style=solid];
m9_1230 -> m9_369  [key=2, style=dotted];
m9_1230 -> m9_1231  [key=0, style=solid];
m9_1228 -> m9_1230  [key=1, style=dashed, color=darkseagreen4, label=c];
m9_1228 -> m9_1229  [key=0, style=solid];
m9_1228 -> m9_1240  [key=2, style=dotted];
m9_1228 -> m9_1231  [key=1, style=dashed, color=darkseagreen4, label=c];
m9_1228 -> m9_1232  [key=1, style=dashed, color=darkseagreen4, label=c];
m9_1228 -> m9_1235  [key=1, style=dashed, color=darkseagreen4, label=c];
m9_1229 -> m9_1230  [key=0, style=solid];
m9_1229 -> m9_1241  [key=2, style=dotted];
m9_1231 -> m9_1232  [key=0, style=solid];
m9_1231 -> m9_1242  [key=2, style=dotted];
m9_1227 -> m9_1228  [key=0, style=solid];
m9_1227 -> m9_1239  [key=2, style=dotted];
m9_1227 -> m9_1232  [key=1, style=dashed, color=darkseagreen4, label=ex];
m9_1232 -> m9_1233  [key=0, style=solid];
m9_1235 -> m9_1236  [key=0, style=solid];
m9_1235 -> m9_55  [key=2, style=dotted];
m9_1233 -> m9_1235  [key=1, style=dashed, color=darkseagreen4, label=ms];
m9_1233 -> m9_53  [key=2, style=dotted];
m9_1233 -> m9_1234  [key=0, style=solid];
m9_1233 -> m9_1236  [key=1, style=dashed, color=darkseagreen4, label=ms];
m9_1234 -> m9_1235  [key=0, style=solid];
m9_1234 -> m9_54  [key=2, style=dotted];
m9_1236 -> m9_1237  [key=0, style=solid];
m9_1236 -> m9_56  [key=2, style=dotted];
m9_1237 -> m9_57  [key=2, style=dotted];
m9_1237 -> m9_1238  [key=0, style=solid];
m9_1238 -> m9_1226  [key=0, style=bold, color=blue];
m9_3304 -> m9_3305  [key=0, style=solid];
m9_3309 -> m9_11  [key=2, style=dotted];
m9_3309 -> m9_3310  [key=0, style=solid];
m9_3308 -> m9_3309  [key=0, style=solid];
m9_3308 -> m9_2548  [key=2, style=dotted];
m9_3305 -> m9_3308  [key=1, style=dashed, color=darkseagreen4, label=reader];
m9_3305 -> m9_282  [key=2, style=dotted];
m9_3305 -> m9_283  [key=2, style=dotted];
m9_3305 -> m9_3306  [key=0, style=solid];
m9_3307 -> m9_3308  [key=0, style=solid];
m9_3307 -> m9_2547  [key=2, style=dotted];
m9_3306 -> m9_214  [key=2, style=dotted];
m9_3306 -> m9_3307  [key=0, style=solid];
m9_3310 -> m9_3304  [key=0, style=bold, color=blue];
m9_1104 -> m9_1105  [key=0, style=solid];
m9_1109 -> m9_11  [key=2, style=dotted];
m9_1109 -> m9_1110  [key=0, style=solid];
m9_1106 -> m9_369  [key=2, style=dotted];
m9_1106 -> m9_1107  [key=0, style=solid];
m9_1106 -> m9_238  [key=2, style=dotted];
m9_1107 -> m9_369  [key=2, style=dotted];
m9_1107 -> m9_1108  [key=0, style=solid];
m9_1107 -> m9_238  [key=2, style=dotted];
m9_1108 -> m9_1109  [key=0, style=solid];
m9_1108 -> m9_351  [key=2, style=dotted];
m9_1105 -> m9_1106  [key=0, style=solid];
m9_1105 -> m9_1107  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m9_1105 -> m9_1108  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m9_1105 -> m9_52  [key=2, style=dotted];
m9_1110 -> m9_1104  [key=0, style=bold, color=blue];
m9_2936 -> m9_2937  [key=0, style=solid];
m9_2937 -> m9_1640  [key=2, style=dotted];
m9_2937 -> m9_2938  [key=0, style=solid];
m9_2938 -> m9_2936  [key=0, style=bold, color=blue];
m9_1942 -> m9_1943  [key=0, style=solid];
m9_1943 -> m9_93  [key=2, style=dotted];
m9_1943 -> m9_1944  [key=0, style=solid];
m9_1944 -> m9_11  [key=2, style=dotted];
m9_1944 -> m9_1945  [key=0, style=solid];
m9_1945 -> m9_1942  [key=0, style=bold, color=blue];
m9_3384 -> m9_3385  [key=0, style=solid];
m9_3385 -> m9_3386  [key=0, style=solid];
m9_3386 -> m9_3384  [key=0, style=bold, color=blue];
m9_3361 -> m9_3362  [key=0, style=solid];
m9_3362 -> m9_3363  [key=0, style=solid];
m9_3363 -> m9_3361  [key=0, style=bold, color=blue];
m9_1841 -> m9_1842  [key=0, style=solid];
m9_1844 -> m9_93  [key=2, style=dotted];
m9_1844 -> m9_1845  [key=0, style=solid];
m9_1844 -> m9_1846  [key=1, style=dashed, color=darkseagreen4, label=d];
m9_1844 -> m9_1847  [key=1, style=dashed, color=darkseagreen4, label=d];
m9_1844 -> m9_1848  [key=1, style=dashed, color=darkseagreen4, label=d];
m9_1843 -> m9_11  [key=2, style=dotted];
m9_1843 -> m9_1844  [key=0, style=solid];
m9_1845 -> m9_11  [key=2, style=dotted];
m9_1845 -> m9_1846  [key=0, style=solid];
m9_1842 -> m9_1844  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m9_1842 -> m9_1843  [key=0, style=solid];
m9_1842 -> m9_1850  [key=2, style=dotted];
m9_1842 -> m9_351  [key=2, style=dotted];
m9_1846 -> m9_1847  [key=0, style=solid];
m9_1846 -> m9_1851  [key=2, style=dotted];
m9_1846 -> m9_1793  [key=2, style=dotted];
m9_1847 -> m9_1848  [key=0, style=solid];
m9_1847 -> m9_1851  [key=2, style=dotted];
m9_1847 -> m9_1793  [key=2, style=dotted];
m9_1848 -> m9_1849  [key=0, style=solid];
m9_1848 -> m9_1851  [key=2, style=dotted];
m9_1848 -> m9_1793  [key=2, style=dotted];
m9_1849 -> m9_1841  [key=0, style=bold, color=blue];
m9_265 -> m9_267  [key=0, style=solid];
m9_265 -> m9_269  [key=2, style=dotted];
m9_123 -> m9_124  [key=0, style=solid];
m9_123 -> m9_126  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m9_123 -> m9_127  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m9_123 -> m9_11  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsGenericDefinition"];
m9_832 -> m9_833  [key=0, style=solid];
m9_836 -> m9_93  [key=2, style=dotted];
m9_836 -> m9_837  [key=0, style=solid];
m9_835 -> m9_11  [key=2, style=dotted];
m9_835 -> m9_836  [key=0, style=solid];
m9_835 -> m9_840  [key=2, style=dotted];
m9_837 -> m9_11  [key=2, style=dotted];
m9_837 -> m9_838  [key=0, style=solid];
m9_834 -> m9_9  [key=2, style=dotted];
m9_834 -> m9_836  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_834 -> m9_835  [key=0, style=solid];
m9_833 -> m9_835  [key=1, style=dashed, color=darkseagreen4, label=uri];
m9_833 -> m9_837  [key=1, style=dashed, color=darkseagreen4, label=uri];
m9_833 -> m9_834  [key=0, style=solid];
m9_833 -> m9_839  [key=2, style=dotted];
m9_838 -> m9_832  [key=0, style=bold, color=blue];
m9_1674 -> m9_1675  [key=0, style=solid];
m9_1682 -> m9_1686  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_1682 -> m9_1683  [key=0, style=solid];
m9_1682 -> m9_351  [key=2, style=dotted];
m9_1681 -> m9_1682  [key=0, style=solid];
m9_1681 -> m9_238  [key=2, style=dotted];
m9_1678 -> m9_1682  [key=1, style=dashed, color=darkseagreen4, label=child];
m9_1678 -> m9_1681  [key=1, style=dashed, color=darkseagreen4, label=child];
m9_1678 -> m9_1679  [key=0, style=solid];
m9_1678 -> m9_52  [key=2, style=dotted];
m9_1678 -> m9_1680  [key=1, style=dashed, color=darkseagreen4, label=child];
m9_1683 -> m9_1685  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_1683 -> m9_1684  [key=0, style=solid];
m9_1683 -> m9_140  [key=2, style=dotted];
m9_1676 -> m9_238  [key=2, style=dotted];
m9_1676 -> m9_1677  [key=0, style=solid];
m9_1677 -> m9_238  [key=2, style=dotted];
m9_1677 -> m9_1678  [key=0, style=solid];
m9_1679 -> m9_238  [key=2, style=dotted];
m9_1679 -> m9_1680  [key=0, style=solid];
m9_1680 -> m9_238  [key=2, style=dotted];
m9_1680 -> m9_1681  [key=0, style=solid];
m9_1675 -> m9_1681  [key=1, style=dashed, color=darkseagreen4, label=reference];
m9_1675 -> m9_52  [key=2, style=dotted];
m9_1675 -> m9_1676  [key=0, style=solid];
m9_1675 -> m9_1677  [key=1, style=dashed, color=darkseagreen4, label=reference];
m9_1684 -> m9_1674  [key=0, style=bold, color=blue];
m9_2772 -> m9_2773  [key=0, style=solid];
m9_2775 -> m9_11  [key=2, style=dotted];
m9_2775 -> m9_2776  [key=0, style=solid];
m9_2774 -> m9_9  [key=2, style=dotted];
m9_2774 -> m9_2775  [key=0, style=solid];
m9_2773 -> m9_2774  [key=0, style=solid];
m9_2773 -> m9_2771  [key=2, style=dotted];
m9_2776 -> m9_2772  [key=0, style=bold, color=blue];
m9_2473 -> m9_2474  [key=0, style=solid];
m9_2474 -> m9_2478  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_2474 -> m9_2475  [key=0, style=solid];
m9_2475 -> m9_2477  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_2475 -> m9_2476  [key=0, style=solid];
m9_2475 -> m9_140  [key=2, style=dotted];
m9_2476 -> m9_2473  [key=0, style=bold, color=blue];
m9_3439 -> m9_3442  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_3439 -> m9_3440  [key=0, style=solid];
m9_3442 -> m9_79  [key=2, style=dotted];
m9_3442 -> m9_2567  [key=2, style=dotted];
m9_3442 -> m9_3443  [key=0, style=solid];
m9_3442 -> m9_3444  [key=2, style=dotted];
m9_3440 -> m9_3442  [key=0, style=solid];
m9_3440 -> m9_3441  [key=0, style=solid];
m9_3441 -> m9_3443  [key=0, style=solid];
m9_3443 -> m9_3439  [key=0, style=bold, color=blue];
m9_258 -> m9_259  [key=0, style=solid];
m9_258 -> m9_260  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_258 -> m9_261  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m9_258 -> m9_263  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m9_258 -> m9_265  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m9_258 -> m9_266  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m9_258 -> m9_215  [key=2, style=dotted];
m9_259 -> m9_260  [key=0, style=solid];
m9_259 -> m9_13  [key=2, style=dotted];
m9_259 -> m9_14  [key=2, style=dotted];
m9_259 -> m9_11  [key=2, style=dotted];
m9_260 -> m9_261  [key=0, style=solid];
m9_260 -> m9_13  [key=2, style=dotted];
m9_260 -> m9_14  [key=2, style=dotted];
m9_260 -> m9_260  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m9_260 -> m9_265  [key=2, style=dotted];
m9_261 -> m9_262  [key=0, style=solid];
m9_261 -> m9_264  [key=0, style=solid];
m9_261 -> m9_266  [key=0, style=solid];
m9_261 -> m9_228  [key=2, style=dotted];
m9_261 -> m9_11  [key=2, style=dotted];
m9_262 -> m9_263  [key=0, style=solid];
m9_262 -> m9_253  [key=0, style=bold, color=blue];
m9_3280 -> m9_3281  [key=0, style=solid];
m9_3283 -> m9_93  [key=2, style=dotted];
m9_3283 -> m9_3284  [key=0, style=solid];
m9_3283 -> m9_3286  [key=1, style=dashed, color=darkseagreen4, label=s2];
m9_3284 -> m9_11  [key=2, style=dotted];
m9_3284 -> m9_3285  [key=0, style=solid];
m9_3282 -> m9_9  [key=2, style=dotted];
m9_3282 -> m9_3283  [key=0, style=solid];
m9_3286 -> m9_3285  [key=0, style=solid];
m9_3286 -> m9_1265  [key=2, style=dotted];
m9_3286 -> m9_1793  [key=2, style=dotted];
m9_3281 -> m9_3284  [key=1, style=dashed, color=darkseagreen4, label=s1];
m9_3281 -> m9_3282  [key=0, style=solid];
m9_3281 -> m9_3288  [key=2, style=dotted];
m9_3281 -> m9_3285  [key=1, style=dashed, color=darkseagreen4, label=s1];
m9_3285 -> m9_3286  [key=0, style=solid];
m9_3285 -> m9_3287  [key=0, style=solid];
m9_3287 -> m9_3280  [key=0, style=bold, color=blue];
m9_902 -> m9_903  [key=0, style=solid];
m9_909 -> m9_11  [key=2, style=dotted];
m9_909 -> m9_910  [key=0, style=solid];
m9_908 -> m9_909  [key=0, style=solid];
m9_908 -> m9_351  [key=2, style=dotted];
m9_903 -> m9_210  [key=2, style=dotted];
m9_903 -> m9_28  [key=2, style=dotted];
m9_903 -> m9_904  [key=0, style=solid];
m9_903 -> m9_906  [key=1, style=dashed, color=darkseagreen4, label=p1];
m9_904 -> m9_210  [key=2, style=dotted];
m9_904 -> m9_28  [key=2, style=dotted];
m9_904 -> m9_905  [key=0, style=solid];
m9_904 -> m9_907  [key=1, style=dashed, color=darkseagreen4, label=p2];
m9_905 -> m9_908  [key=1, style=dashed, color=darkseagreen4, label=products];
m9_905 -> m9_906  [key=0, style=solid];
m9_905 -> m9_209  [key=2, style=dotted];
m9_905 -> m9_907  [key=1, style=dashed, color=darkseagreen4, label=products];
m9_907 -> m9_908  [key=0, style=solid];
m9_907 -> m9_158  [key=2, style=dotted];
m9_906 -> m9_907  [key=0, style=solid];
m9_906 -> m9_158  [key=2, style=dotted];
m9_910 -> m9_902  [key=0, style=bold, color=blue];
m9_3434 -> m9_3436  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m9_3434 -> m9_3435  [key=0, style=solid];
m9_3436 -> m9_2915  [key=2, style=dotted];
m9_3436 -> m9_3436  [key=1, style=dashed, color=darkseagreen4, label=id];
m9_3436 -> m9_3437  [key=0, style=solid];
m9_3436 -> m9_3438  [key=2, style=dotted];
m9_3435 -> m9_3436  [key=0, style=solid];
m9_3437 -> m9_3434  [key=0, style=bold, color=blue];
m9_1190 -> m9_1191  [key=0, style=solid];
m9_1191 -> m9_93  [key=2, style=dotted];
m9_1191 -> m9_1192  [key=0, style=solid];
m9_1193 -> m9_93  [key=2, style=dotted];
m9_1193 -> m9_1194  [key=0, style=solid];
m9_1192 -> m9_11  [key=2, style=dotted];
m9_1192 -> m9_548  [key=2, style=dotted];
m9_1192 -> m9_1193  [key=0, style=solid];
m9_1194 -> m9_11  [key=2, style=dotted];
m9_1194 -> m9_548  [key=2, style=dotted];
m9_1194 -> m9_1195  [key=0, style=solid];
m9_1195 -> m9_1190  [key=0, style=bold, color=blue];
m9_2358 -> m9_3450  [key=0, style=solid];
m9_3450 -> m9_3451  [key=0, style=solid];
m9_3450 -> m9_3452  [key=2, style=dotted];
m9_3451 -> m9_2358  [key=0, style=bold, color=blue];
m9_3263 -> m9_3264  [key=0, style=solid];
m9_3269 -> m9_11  [key=2, style=dotted];
m9_3269 -> m9_3270  [key=0, style=solid];
m9_3265 -> m9_3269  [key=1, style=dashed, color=darkseagreen4, label=expected];
m9_3265 -> m9_3266  [key=0, style=solid];
m9_3265 -> m9_351  [key=2, style=dotted];
m9_3265 -> m9_3268  [key=1, style=dashed, color=darkseagreen4, label=expected];
m9_3267 -> m9_3269  [key=1, style=dashed, color=darkseagreen4, label=actual];
m9_3267 -> m9_3268  [key=0, style=solid];
m9_3267 -> m9_214  [key=2, style=dotted];
m9_3267 -> m9_728  [key=2, style=dotted];
m9_3268 -> m9_3269  [key=0, style=solid];
m9_3268 -> m9_12  [key=2, style=dotted];
m9_3264 -> m9_210  [key=2, style=dotted];
m9_3264 -> m9_223  [key=2, style=dotted];
m9_3264 -> m9_222  [key=2, style=dotted];
m9_3264 -> m9_3265  [key=0, style=solid];
m9_3264 -> m9_3267  [key=1, style=dashed, color=darkseagreen4, label=dates];
m9_3264 -> m9_52  [key=2, style=dotted];
m9_3266 -> m9_3267  [key=0, style=solid];
m9_3266 -> m9_12  [key=2, style=dotted];
m9_3270 -> m9_3263  [key=0, style=bold, color=blue];
m9_2786 -> m9_2787  [key=0, style=solid];
m9_2790 -> m9_93  [key=2, style=dotted];
m9_2790 -> m9_2791  [key=0, style=solid];
m9_2790 -> m9_2792  [key=1, style=dashed, color=darkseagreen4, label=dic2];
m9_2790 -> m9_2793  [key=1, style=dashed, color=darkseagreen4, label=dic2];
m9_2789 -> m9_11  [key=2, style=dotted];
m9_2789 -> m9_2790  [key=0, style=solid];
m9_2791 -> m9_11  [key=2, style=dotted];
m9_2791 -> m9_2792  [key=0, style=solid];
m9_2792 -> m9_11  [key=2, style=dotted];
m9_2792 -> m9_2793  [key=0, style=solid];
m9_2792 -> m9_222  [key=2, style=dotted];
m9_2793 -> m9_11  [key=2, style=dotted];
m9_2793 -> m9_2794  [key=0, style=solid];
m9_2793 -> m9_222  [key=2, style=dotted];
m9_2788 -> m9_2790  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_2788 -> m9_2789  [key=0, style=solid];
m9_2788 -> m9_214  [key=2, style=dotted];
m9_2788 -> m9_728  [key=2, style=dotted];
m9_2787 -> m9_2788  [key=0, style=solid];
m9_2787 -> m9_222  [key=2, style=dotted];
m9_2787 -> m9_52  [key=2, style=dotted];
m9_2794 -> m9_2786  [key=0, style=bold, color=blue];
m9_2133 -> m9_2134  [key=0, style=solid];
m9_2135 -> m9_93  [key=2, style=dotted];
m9_2135 -> m9_2136  [key=0, style=solid];
m9_2135 -> m9_2137  [key=1, style=dashed, color=darkseagreen4, label=withoutParameterisedConstructor];
m9_2136 -> m9_93  [key=2, style=dotted];
m9_2136 -> m9_2137  [key=0, style=solid];
m9_2137 -> m9_11  [key=2, style=dotted];
m9_2137 -> m9_2138  [key=0, style=solid];
m9_2134 -> m9_2135  [key=0, style=solid];
m9_2134 -> m9_2136  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_2138 -> m9_2133  [key=0, style=bold, color=blue];
m9_3355 -> m9_3356  [key=0, style=solid];
m9_3356 -> m9_93  [key=2, style=dotted];
m9_3356 -> m9_3357  [key=0, style=solid];
m9_3356 -> m9_3358  [key=1, style=dashed, color=darkseagreen4, label=dic];
m9_3356 -> m9_3359  [key=1, style=dashed, color=darkseagreen4, label=dic];
m9_3357 -> m9_11  [key=2, style=dotted];
m9_3357 -> m9_3358  [key=0, style=solid];
m9_3358 -> m9_11  [key=2, style=dotted];
m9_3358 -> m9_3359  [key=0, style=solid];
m9_3359 -> m9_11  [key=2, style=dotted];
m9_3359 -> m9_3360  [key=0, style=solid];
m9_3360 -> m9_3355  [key=0, style=bold, color=blue];
m9_2878 -> m9_2879  [key=0, style=solid];
m9_2880 -> m9_93  [key=2, style=dotted];
m9_2880 -> m9_2881  [key=0, style=solid];
m9_2880 -> m9_2882  [key=1, style=dashed, color=darkseagreen4, label=exception];
m9_2880 -> m9_2883  [key=1, style=dashed, color=darkseagreen4, label=exception];
m9_2883 -> m9_11  [key=2, style=dotted];
m9_2883 -> m9_2884  [key=0, style=solid];
m9_2879 -> m9_2880  [key=0, style=solid];
m9_2881 -> m9_2882  [key=0, style=solid];
m9_2881 -> m9_686  [key=2, style=dotted];
m9_2882 -> m9_2883  [key=0, style=solid];
m9_2882 -> m9_891  [key=2, style=dotted];
m9_2884 -> m9_2878  [key=0, style=bold, color=blue];
m9_1645 -> m9_1646  [key=0, style=solid];
m9_1649 -> m9_11  [key=2, style=dotted];
m9_1649 -> m9_1650  [key=0, style=solid];
m9_1650 -> m9_11  [key=2, style=dotted];
m9_1650 -> m9_1651  [key=0, style=solid];
m9_1651 -> m9_11  [key=2, style=dotted];
m9_1651 -> m9_1652  [key=0, style=solid];
m9_1646 -> m9_1649  [key=1, style=dashed, color=darkseagreen4, label=p];
m9_1646 -> m9_1650  [key=1, style=dashed, color=darkseagreen4, label=p];
m9_1646 -> m9_1651  [key=1, style=dashed, color=darkseagreen4, label=p];
m9_1646 -> m9_1647  [key=0, style=solid];
m9_1646 -> m9_1653  [key=2, style=dotted];
m9_1646 -> m9_1648  [key=1, style=dashed, color=darkseagreen4, label=p];
m9_1648 -> m9_1649  [key=0, style=solid];
m9_1648 -> m9_214  [key=2, style=dotted];
m9_1648 -> m9_209  [key=2, style=dotted];
m9_1648 -> m9_1654  [key=2, style=dotted];
m9_1648 -> m9_1655  [key=2, style=dotted];
m9_1647 -> m9_1648  [key=0, style=solid];
m9_1647 -> m9_209  [key=2, style=dotted];
m9_1652 -> m9_1645  [key=0, style=bold, color=blue];
m9_1178 -> m9_1179  [key=0, style=solid];
m9_1185 -> m9_93  [key=2, style=dotted];
m9_1185 -> m9_1186  [key=0, style=solid];
m9_1184 -> m9_11  [key=2, style=dotted];
m9_1184 -> m9_1185  [key=0, style=solid];
m9_1186 -> m9_11  [key=2, style=dotted];
m9_1186 -> m9_1187  [key=0, style=solid];
m9_1183 -> m9_1185  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_1183 -> m9_1184  [key=0, style=solid];
m9_1183 -> m9_1175  [key=2, style=dotted];
m9_1179 -> m9_1183  [key=1, style=dashed, color=darkseagreen4, label=g];
m9_1179 -> m9_1180  [key=0, style=solid];
m9_1179 -> m9_1188  [key=2, style=dotted];
m9_1179 -> m9_1181  [key=1, style=dashed, color=darkseagreen4, label=g];
m9_1179 -> m9_1182  [key=1, style=dashed, color=darkseagreen4, label=g];
m9_1182 -> m9_1183  [key=0, style=solid];
m9_1180 -> m9_1181  [key=0, style=solid];
m9_1180 -> m9_1189  [key=2, style=dotted];
m9_1180 -> m9_1169  [key=2, style=dotted];
m9_1181 -> m9_1182  [key=0, style=solid];
m9_1181 -> m9_1189  [key=2, style=dotted];
m9_1181 -> m9_1169  [key=2, style=dotted];
m9_1187 -> m9_1178  [key=0, style=bold, color=blue];
m9_3322 -> m9_3323  [key=0, style=solid];
m9_3325 -> m9_11  [key=2, style=dotted];
m9_3325 -> m9_3326  [key=0, style=solid];
m9_3324 -> m9_3325  [key=0, style=solid];
m9_3324 -> m9_351  [key=2, style=dotted];
m9_3323 -> m9_1517  [key=2, style=dotted];
m9_3323 -> m9_3324  [key=0, style=solid];
m9_3326 -> m9_3322  [key=0, style=bold, color=blue];
m9_1035 -> m9_1036  [key=0, style=solid];
m9_1036 -> m9_140  [key=2, style=dotted];
m9_1036 -> m9_1037  [key=0, style=solid];
m9_1036 -> m9_1038  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_1037 -> m9_1035  [key=0, style=bold, color=blue];
m9_126 -> m9_127  [key=0, style=solid];
m9_126 -> m9_118  [key=2, style=dotted];
m9_127 -> m9_133  [key=1, style=dashed, color=darkseagreen4, label=test];
m9_127 -> m9_134  [key=1, style=dashed, color=darkseagreen4, label=test];
m9_127 -> m9_130  [key=1, style=dashed, color=darkseagreen4, label=test];
m9_127 -> m9_128  [key=0, style=solid];
m9_127 -> m9_136  [key=2, style=dotted];
m9_127 -> m9_129  [key=1, style=dashed, color=darkseagreen4, label=test];
m9_128 -> m9_129  [key=0, style=solid];
m9_128 -> m9_123  [key=0, style=bold, color=blue];
m9_2609 -> m9_2610  [key=0, style=solid];
m9_2610 -> m9_93  [key=2, style=dotted];
m9_2610 -> m9_2611  [key=0, style=solid];
m9_2611 -> m9_2612  [key=0, style=solid];
m9_2611 -> m9_1519  [key=2, style=dotted];
m9_2612 -> m9_2609  [key=0, style=bold, color=blue];
m9_2166 -> m9_2167  [key=0, style=solid];
m9_2169 -> m9_11  [key=2, style=dotted];
m9_2169 -> m9_2170  [key=0, style=solid];
m9_2168 -> m9_9  [key=2, style=dotted];
m9_2168 -> m9_2169  [key=0, style=solid];
m9_2167 -> m9_2168  [key=0, style=solid];
m9_2167 -> m9_2171  [key=2, style=dotted];
m9_2170 -> m9_2166  [key=0, style=bold, color=blue];
m9_3368 -> m9_3369  [key=0, style=solid];
m9_3369 -> m9_3370  [key=0, style=solid];
m9_3369 -> m9_3371  [key=2, style=dotted];
m9_3370 -> m9_3368  [key=0, style=bold, color=blue];
m9_2487 -> m9_2488  [key=0, style=solid];
m9_2488 -> m9_2492  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_2488 -> m9_2489  [key=0, style=solid];
m9_2489 -> m9_2491  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_2489 -> m9_2490  [key=0, style=solid];
m9_2489 -> m9_140  [key=2, style=dotted];
m9_2490 -> m9_2487  [key=0, style=bold, color=blue];
m9_2258 -> m9_2259  [key=0, style=solid];
m9_2259 -> m9_93  [key=2, style=dotted];
m9_2259 -> m9_2260  [key=0, style=solid];
m9_2259 -> m9_2261  [key=1, style=dashed, color=darkseagreen4, label=r];
m9_2259 -> m9_2262  [key=1, style=dashed, color=darkseagreen4, label=r];
m9_2259 -> m9_2263  [key=1, style=dashed, color=darkseagreen4, label=r];
m9_2259 -> m9_2264  [key=1, style=dashed, color=darkseagreen4, label=r];
m9_2260 -> m9_11  [key=2, style=dotted];
m9_2260 -> m9_2261  [key=0, style=solid];
m9_2260 -> m9_1168  [key=2, style=dotted];
m9_2261 -> m9_11  [key=2, style=dotted];
m9_2261 -> m9_2262  [key=0, style=solid];
m9_2261 -> m9_124  [key=2, style=dotted];
m9_2262 -> m9_2263  [key=0, style=solid];
m9_2262 -> m9_810  [key=2, style=dotted];
m9_2262 -> m9_686  [key=2, style=dotted];
m9_2263 -> m9_2264  [key=0, style=solid];
m9_2263 -> m9_810  [key=2, style=dotted];
m9_2263 -> m9_686  [key=2, style=dotted];
m9_2264 -> m9_2265  [key=0, style=solid];
m9_2264 -> m9_810  [key=2, style=dotted];
m9_2264 -> m9_1519  [key=2, style=dotted];
m9_2265 -> m9_2258  [key=0, style=bold, color=blue];
m9_878 -> m9_879  [key=0, style=solid];
m9_880 -> m9_93  [key=2, style=dotted];
m9_880 -> m9_881  [key=0, style=solid];
m9_880 -> m9_882  [key=1, style=dashed, color=darkseagreen4, label=o];
m9_880 -> m9_883  [key=1, style=dashed, color=darkseagreen4, label=o];
m9_880 -> m9_884  [key=1, style=dashed, color=darkseagreen4, label=o];
m9_880 -> m9_885  [key=1, style=dashed, color=darkseagreen4, label=o];
m9_880 -> m9_886  [key=1, style=dashed, color=darkseagreen4, label=o];
m9_880 -> m9_887  [key=1, style=dashed, color=darkseagreen4, label=o];
m9_880 -> m9_888  [key=1, style=dashed, color=darkseagreen4, label=o];
m9_880 -> m9_889  [key=1, style=dashed, color=darkseagreen4, label=o];
m9_881 -> m9_11  [key=2, style=dotted];
m9_881 -> m9_882  [key=0, style=solid];
m9_882 -> m9_11  [key=2, style=dotted];
m9_882 -> m9_883  [key=0, style=solid];
m9_883 -> m9_11  [key=2, style=dotted];
m9_883 -> m9_884  [key=0, style=solid];
m9_884 -> m9_11  [key=2, style=dotted];
m9_884 -> m9_885  [key=0, style=solid];
m9_886 -> m9_11  [key=2, style=dotted];
m9_886 -> m9_887  [key=0, style=solid];
m9_888 -> m9_11  [key=2, style=dotted];
m9_888 -> m9_889  [key=0, style=solid];
m9_889 -> m9_11  [key=2, style=dotted];
m9_889 -> m9_890  [key=0, style=solid];
m9_879 -> m9_880  [key=0, style=solid];
m9_885 -> m9_886  [key=0, style=solid];
m9_885 -> m9_891  [key=2, style=dotted];
m9_887 -> m9_888  [key=0, style=solid];
m9_887 -> m9_891  [key=2, style=dotted];
m9_890 -> m9_878  [key=0, style=bold, color=blue];
m9_3493 -> m9_196  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_3497 -> m9_930  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_3498 -> m9_957  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_3499 -> m9_964  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_3500 -> m9_971  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_3501 -> m9_978  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_3502 -> m9_985  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_3503 -> m9_992  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_3504 -> m9_999  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_3505 -> m9_1006  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_3506 -> m9_1013  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_3519 -> m9_1686  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_3524 -> m9_1876  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_3540 -> m9_2392  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_3541 -> m9_2478  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_3542 -> m9_2492  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_3551 -> m9_2968  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_3554 -> m9_3013  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_3556 -> m9_3082  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_3557 -> m9_3089  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_3558 -> m9_3109  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_3559 -> m9_3116  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_3560 -> m9_3123  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_3561 -> m9_3149  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_3562 -> m9_3156  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_3563 -> m9_3250  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_3546 -> m9_2819  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest"];
m9_3546 -> m9_2825  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest"];
m9_3546 -> m9_2826  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest"];
m9_3495 -> m9_655  [key=1, style=dashed, color=darkseagreen4, label=strFromTest];
m9_3494 -> m9_472  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_3496 -> m9_779  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers"];
m9_3496 -> m9_773  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers"];
m9_3496 -> m9_774  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers"];
m9_3496 -> m9_775  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers"];
m9_3496 -> m9_776  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers"];
m9_3538 -> m9_2249  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes"];
m9_3538 -> m9_2241  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes"];
m9_3538 -> m9_2242  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes"];
m9_3538 -> m9_2243  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes"];
m9_3538 -> m9_2246  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes"];
m9_3543 -> m9_2730  [key=1, style=dashed, color=darkseagreen4, label=errors];
m9_3544 -> m9_2745  [key=1, style=dashed, color=darkseagreen4, label=errors];
m9_3545 -> m9_2760  [key=1, style=dashed, color=darkseagreen4, label=errors];
m9_3510 -> m9_1170  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>"];
m9_3510 -> m9_1176  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>"];
m9_3510 -> m9_1173  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>"];
m9_3512 -> m9_1213  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor"];
m9_3513 -> m9_1249  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m9_3513 -> m9_1256  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m9_3513 -> m9_1253  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m9_3513 -> m9_1263  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m9_3513 -> m9_1259  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m9_3513 -> m9_1267  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m9_3513 -> m9_1271  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m9_3513 -> m9_1275  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m9_3513 -> m9_1282  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m9_3513 -> m9_1285  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m9_3513 -> m9_1289  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m9_3513 -> m9_1293  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m9_3513 -> m9_1297  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m9_3511 -> m9_1209  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_3509 -> m9_1153  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass"];
m9_3509 -> m9_1154  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass"];
m9_3537 -> m9_2196  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty"];
m9_3537 -> m9_2195  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty"];
m9_3547 -> m9_2876  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_3548 -> m9_2876  [key=1, style=dashed, color=darkseagreen4, label=s];
m9_3514 -> m9_1314  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m9_3514 -> m9_1310  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m9_3514 -> m9_1311  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m9_3514 -> m9_1312  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m9_3514 -> m9_1313  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m9_3514 -> m9_1317  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m9_3514 -> m9_1318  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m9_3514 -> m9_1319  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m9_3514 -> m9_1320  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m9_3514 -> m9_1321  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m9_3514 -> m9_1322  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m9_3514 -> m9_1323  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m9_3514 -> m9_1324  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m9_3514 -> m9_1325  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m9_3514 -> m9_1326  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m9_3514 -> m9_1327  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m9_3514 -> m9_1328  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m9_3514 -> m9_1329  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m9_3514 -> m9_1330  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m9_3514 -> m9_1331  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m9_3514 -> m9_1332  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m9_3514 -> m9_1333  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m9_3514 -> m9_1334  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m9_3514 -> m9_1352  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m9_3514 -> m9_1353  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m9_3514 -> m9_1354  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m9_3514 -> m9_1355  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m9_3514 -> m9_1356  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m9_3514 -> m9_1358  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m9_3514 -> m9_1359  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m9_3514 -> m9_1360  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m9_3514 -> m9_1361  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m9_3514 -> m9_1362  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m9_3514 -> m9_1363  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m9_3514 -> m9_1364  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m9_3514 -> m9_1365  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m9_3514 -> m9_1366  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m9_3514 -> m9_1367  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m9_3514 -> m9_1368  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m9_3514 -> m9_1369  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m9_3508 -> m9_1028  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_3518 -> m9_1586  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListTestClass"];
m9_3536 -> m9_2180  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty"];
m9_3536 -> m9_2179  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty"];
m9_3539 -> m9_2273  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException"];
m9_3550 -> m9_2955  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClassFailure<T>"];
m9_3550 -> m9_2958  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClassFailure<T>"];
m9_3550 -> m9_2961  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClassFailure<T>"];
m9_3517 -> m9_1493  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m9_3517 -> m9_1494  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m9_3517 -> m9_1495  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m9_3517 -> m9_1496  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m9_3517 -> m9_1497  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m9_3517 -> m9_1498  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m9_3517 -> m9_1499  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m9_3517 -> m9_1500  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m9_3517 -> m9_1501  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m9_3517 -> m9_1502  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m9_3555 -> m9_3024  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver"];
m9_3567 -> m9_3421  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.AnswerFilterModel"];
m9_3566 -> m9_3412  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateDefaultCtorWithIEnumerableCtorList<T>"];
m9_3530 -> m9_2034  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DecimalTest"];
m9_3552 -> m9_2971  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>"];
m9_3569 -> m9_3450  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.GameObject"];
m9_3507 -> m9_1020  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_3516 -> m9_1482  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m9_3516 -> m9_1483  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m9_3516 -> m9_1484  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m9_3516 -> m9_1485  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m9_3516 -> m9_1486  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m9_3516 -> m9_1487  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m9_3516 -> m9_1488  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m9_3516 -> m9_1489  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m9_3564 -> m9_3362  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>"];
m9_3564 -> m9_3365  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>"];
m9_3564 -> m9_3369  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>"];
m9_3564 -> m9_3373  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>"];
m9_3564 -> m9_3376  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>"];
m9_3565 -> m9_3385  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyCollection<T>"];
m9_3565 -> m9_3388  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyCollection<T>"];
m9_3565 -> m9_3391  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyCollection<T>"];
m9_3526 -> m9_1979  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived"];
m9_3568 -> m9_3447  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.TestObject"];
m9_3568 -> m9_3448  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.TestObject"];
m9_3549 -> m9_2937  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass<T>"];
m9_3549 -> m9_2940  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass<T>"];
m9_3549 -> m9_2944  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass<T>"];
m9_3529 -> m9_1998  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable"];
m11_76 -> m11_77  [key=0, style=solid];
m11_77 -> m11_78  [key=0, style=solid];
m11_77 -> m11_79  [key=2, style=dotted];
m11_78 -> m11_76  [key=0, style=bold, color=blue];
m11_12 -> m11_13  [key=0, style=solid];
m11_13 -> m11_14  [key=0, style=solid];
m11_13 -> m11_15  [key=2, style=dotted];
m11_14 -> m11_12  [key=0, style=bold, color=blue];
m11_69 -> m11_70  [key=0, style=solid];
m11_70 -> m11_71  [key=0, style=solid];
m11_70 -> m11_72  [key=2, style=dotted];
m11_70 -> m11_73  [key=2, style=dotted];
m11_71 -> m11_69  [key=0, style=bold, color=blue];
m11_16 -> m11_17  [key=0, style=solid];
m11_16 -> m11_18  [key=1, style=dashed, color=darkseagreen4, label=object];
m11_16 -> m11_19  [key=1, style=dashed, color=darkseagreen4, label=object];
m11_17 -> m11_18  [key=0, style=solid];
m11_17 -> m11_23  [key=2, style=dotted];
m11_17 -> m11_19  [key=1, style=dashed, color=darkseagreen4, label=ms];
m11_17 -> m11_20  [key=1, style=dashed, color=darkseagreen4, label=ms];
m11_18 -> m11_19  [key=0, style=solid];
m11_18 -> m11_24  [key=2, style=dotted];
m11_18 -> m11_25  [key=2, style=dotted];
m11_19 -> m11_20  [key=0, style=solid];
m11_19 -> m11_26  [key=2, style=dotted];
m11_20 -> m11_21  [key=0, style=solid];
m11_20 -> m11_27  [key=2, style=dotted];
m11_21 -> m11_22  [key=0, style=solid];
m11_21 -> m11_28  [key=2, style=dotted];
m11_22 -> m11_16  [key=0, style=bold, color=blue];
m11_4 -> m11_5  [key=0, style=solid];
m11_5 -> m11_6  [key=0, style=solid];
m11_5 -> m11_7  [key=2, style=dotted];
m11_6 -> m11_4  [key=0, style=bold, color=blue];
m11_83 -> m11_84  [key=0, style=solid];
m11_83 -> m11_80  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m11_83 -> m11_81  [key=3, color=darkorchid, style=bold, label="Parameter variable string message"];
m11_84 -> m11_85  [key=0, style=solid];
m11_84 -> m11_86  [key=2, style=dotted];
m11_85 -> m11_83  [key=0, style=bold, color=blue];
m11_92 -> m11_100  [key=0, style=solid];
m11_92 -> m11_101  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_92 -> m11_102  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_92 -> m11_87  [key=3, color=darkorchid, style=bold, label="Parameter variable string s"];
m11_92 -> m11_94  [key=3, color=darkorchid, style=bold, label="Parameter variable string s"];
m11_92 -> m11_92  [key=3, color=darkorchid, style=bold, label="method methodReturn string Normalize"];
m11_100 -> m11_101  [key=0, style=solid];
m11_100 -> m11_102  [key=0, style=solid];
m11_101 -> m11_102  [key=0, style=solid];
m11_101 -> m11_104  [key=2, style=dotted];
m11_101 -> m11_101  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_102 -> m11_103  [key=0, style=solid];
m11_103 -> m11_92  [key=0, style=bold, color=blue];
m11_49 -> m11_50  [key=0, style=solid];
m11_49 -> m11_51  [key=3, color=darkorchid, style=bold, label="method methodReturn byte[] HexToBytes"];
m11_50 -> m11_51  [key=0, style=solid];
m11_50 -> m11_48  [key=2, style=dotted];
m11_50 -> m11_54  [key=1, style=dashed, color=darkseagreen4, label=fixedHex];
m11_51 -> m11_52  [key=0, style=solid];
m11_51 -> m11_58  [key=1, style=dashed, color=darkseagreen4, label=bytes];
m11_51 -> m11_62  [key=1, style=dashed, color=darkseagreen4, label=bytes];
m11_54 -> m11_55  [key=0, style=solid];
m11_54 -> m11_62  [key=0, style=solid];
m11_52 -> m11_53  [key=0, style=solid];
m11_52 -> m11_58  [key=1, style=dashed, color=darkseagreen4, label=shift];
m11_52 -> m11_59  [key=1, style=dashed, color=darkseagreen4, label=shift];
m11_52 -> m11_52  [key=3, color=darkorchid, style=bold, label="Local variable int shift"];
m11_58 -> m11_59  [key=0, style=solid];
m11_62 -> m11_63  [key=0, style=solid];
m11_53 -> m11_54  [key=0, style=solid];
m11_53 -> m11_58  [key=1, style=dashed, color=darkseagreen4, label=offset];
m11_53 -> m11_61  [key=1, style=dashed, color=darkseagreen4, label=offset];
m11_53 -> m11_31  [key=3, color=darkorchid, style=bold, label="Local variable int offset"];
m11_59 -> m11_60  [key=0, style=solid];
m11_59 -> m11_59  [key=1, style=dashed, color=darkseagreen4, label=shift];
m11_61 -> m11_54  [key=0, style=solid];
m11_61 -> m11_61  [key=1, style=dashed, color=darkseagreen4, label=offset];
m11_55 -> m11_56  [key=0, style=solid];
m11_55 -> m11_57  [key=1, style=dashed, color=darkseagreen4, label=b];
m11_55 -> m11_58  [key=1, style=dashed, color=darkseagreen4, label=b];
m11_56 -> m11_57  [key=0, style=solid];
m11_56 -> m11_58  [key=0, style=solid];
m11_57 -> m11_58  [key=0, style=solid];
m11_57 -> m11_57  [key=1, style=dashed, color=darkseagreen4, label=b];
m11_60 -> m11_61  [key=0, style=solid];
m11_60 -> m11_54  [key=0, style=solid];
m11_63 -> m11_49  [key=0, style=bold, color=blue];
m11_8 -> m11_9  [key=0, style=solid];
m11_9 -> m11_10  [key=0, style=solid];
m11_9 -> m11_11  [key=2, style=dotted];
m11_10 -> m11_8  [key=0, style=bold, color=blue];
m11_94 -> m11_95  [key=0, style=solid];
m11_94 -> m11_96  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_94 -> m11_92  [key=3, color=darkorchid, style=bold, label="Parameter variable string s2"];
m11_94 -> m11_112  [key=3, color=darkorchid, style=bold, label="Parameter variable string s1"];
m11_95 -> m11_96  [key=0, style=solid];
m11_95 -> m11_92  [key=2, style=dotted];
m11_95 -> m11_95  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_95 -> m11_97  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_96 -> m11_97  [key=0, style=solid];
m11_96 -> m11_92  [key=2, style=dotted];
m11_96 -> m11_96  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_97 -> m11_98  [key=0, style=solid];
m11_97 -> m11_99  [key=2, style=dotted];
m11_98 -> m11_94  [key=0, style=bold, color=blue];
m11_72 -> m11_74  [key=0, style=solid];
m11_72 -> m11_69  [key=3, color=darkorchid, style=bold, label="Parameter variable string json"];
m11_74 -> m11_75  [key=0, style=solid];
m11_74 -> m11_48  [key=2, style=dotted];
m11_75 -> m11_72  [key=0, style=bold, color=blue];
m11_0 -> m11_1  [key=0, style=solid];
m11_1 -> m11_2  [key=0, style=solid];
m11_1 -> m11_3  [key=2, style=dotted];
m11_2 -> m11_0  [key=0, style=bold, color=blue];
m11_41 -> m11_42  [key=0, style=solid];
m11_41 -> m11_43  [key=1, style=dashed, color=darkseagreen4, label=bool];
m11_41 -> m11_38  [key=3, color=darkorchid, style=bold, label="Parameter variable byte[] bytes"];
m11_41 -> m11_39  [key=3, color=darkorchid, style=bold, label="Parameter variable bool removeDashes"];
m11_42 -> m11_43  [key=0, style=solid];
m11_42 -> m11_47  [key=2, style=dotted];
m11_42 -> m11_44  [key=1, style=dashed, color=darkseagreen4, label=hex];
m11_42 -> m11_45  [key=1, style=dashed, color=darkseagreen4, label=hex];
m11_43 -> m11_44  [key=0, style=solid];
m11_43 -> m11_45  [key=0, style=solid];
m11_44 -> m11_45  [key=0, style=solid];
m11_44 -> m11_48  [key=2, style=dotted];
m11_44 -> m11_44  [key=1, style=dashed, color=darkseagreen4, label=hex];
m11_45 -> m11_46  [key=0, style=solid];
m11_46 -> m11_41  [key=0, style=bold, color=blue];
m11_64 -> m11_65  [key=0, style=solid];
m11_65 -> m11_66  [key=0, style=solid];
m11_66 -> m11_67  [key=0, style=solid];
m11_67 -> m11_68  [key=0, style=solid];
m11_68 -> m11_64  [key=0, style=bold, color=blue];
m11_29 -> m11_30  [key=0, style=solid];
m11_29 -> m11_31  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m11_30 -> m11_31  [key=0, style=solid];
m11_30 -> m11_32  [key=1, style=dashed, color=darkseagreen4, label=chars];
m11_31 -> m11_32  [key=0, style=solid];
m11_31 -> m11_34  [key=2, style=dotted];
m11_31 -> m11_35  [key=2, style=dotted];
m11_31 -> m11_36  [key=2, style=dotted];
m11_32 -> m11_33  [key=0, style=solid];
m11_32 -> m11_37  [key=2, style=dotted];
m11_33 -> m11_29  [key=0, style=bold, color=blue];
m11_87 -> m11_88  [key=0, style=solid];
m11_87 -> m11_89  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_87 -> m11_92  [key=3, color=darkorchid, style=bold, label="Parameter variable string actual"];
m11_88 -> m11_89  [key=0, style=solid];
m11_88 -> m11_92  [key=2, style=dotted];
m11_88 -> m11_88  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_88 -> m11_90  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_89 -> m11_90  [key=0, style=solid];
m11_89 -> m11_92  [key=2, style=dotted];
m11_89 -> m11_89  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_90 -> m11_91  [key=0, style=solid];
m11_90 -> m11_93  [key=2, style=dotted];
m11_91 -> m11_87  [key=0, style=bold, color=blue];
m11_80 -> m11_81  [key=0, style=solid];
m11_81 -> m11_82  [key=0, style=solid];
m11_81 -> m11_83  [key=2, style=dotted];
m11_82 -> m11_80  [key=0, style=bold, color=blue];
m11_38 -> m11_39  [key=0, style=solid];
m11_38 -> m11_41  [key=3, color=darkorchid, style=bold, label="method methodReturn string BytesToHex"];
m11_39 -> m11_40  [key=0, style=solid];
m11_39 -> m11_41  [key=2, style=dotted];
m11_40 -> m11_38  [key=0, style=bold, color=blue];
m11_105 -> m11_106  [key=0, style=solid];
m11_105 -> m11_110  [key=1, style=dashed, color=darkseagreen4, label="params string[]"];
m11_105 -> m11_112  [key=1, style=dashed, color=darkseagreen4, label="params string[]"];
m11_105 -> m11_115  [key=1, style=dashed, color=darkseagreen4, label="params string[]"];
m11_105 -> m11_81  [key=3, color=darkorchid, style=bold, label="method methodReturn TException Throws"];
m11_105 -> m11_109  [key=3, color=darkorchid, style=bold, label="method methodReturn TException Throws"];
m11_106 -> m11_107  [key=0, style=solid];
m11_106 -> m11_119  [key=2, style=dotted];
m11_110 -> m11_111  [key=0, style=solid];
m11_110 -> m11_112  [key=0, style=solid];
m11_112 -> m11_113  [key=0, style=solid];
m11_112 -> m11_115  [key=0, style=solid];
m11_115 -> m11_118  [key=0, style=solid];
m11_115 -> m11_121  [key=2, style=dotted];
m11_115 -> m11_122  [key=2, style=dotted];
m11_107 -> m11_108  [key=0, style=solid];
m11_107 -> m11_120  [key=2, style=dotted];
m11_108 -> m11_118  [key=0, style=solid];
m11_109 -> m11_110  [key=0, style=solid];
m11_111 -> m11_118  [key=0, style=solid];
m11_113 -> m11_114  [key=0, style=solid];
m11_113 -> m11_112  [key=0, style=solid];
m11_113 -> m11_94  [key=2, style=dotted];
m11_114 -> m11_118  [key=0, style=solid];
m11_116 -> m11_117  [key=0, style=solid];
m11_117 -> m11_118  [key=0, style=solid];
m11_117 -> m11_123  [key=2, style=dotted];
m11_117 -> m11_124  [key=2, style=dotted];
m11_117 -> m11_125  [key=2, style=dotted];
m11_118 -> m11_105  [key=0, style=bold, color=blue];
m11_126 -> m11_39  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestFixtureBase"];
m11_126 -> m11_70  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestFixtureBase"];
}
