digraph  {
n0 [label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonAnonymousObject.Example()", span="45-45", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonAnonymousObject.Example()"];
n1 [label="List<Post> posts = new List<Post>\r\n            {\r\n                new Post\r\n                {\r\n                    Title = ''Episode VII'',\r\n                    Description = ''Episode VII production'',\r\n                    Categories = new List<string>\r\n                    {\r\n                        ''episode-vii'',\r\n                        ''movie''\r\n                    },\r\n                    Link = ''episode-vii-production.aspx''\r\n                }\r\n            }", span="48-61", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonAnonymousObject.Example()", color=red, community=0];
n2 [label="JObject o = JObject.FromObject(new\r\n            {\r\n                channel = new\r\n                {\r\n                    title = ''Star Wars'',\r\n                    link = ''http://www.starwars.com'',\r\n                    description = ''Star Wars blog.'',\r\n                    item =\r\n                        from p in posts\r\n                        orderby p.Title\r\n                        select new\r\n                        {\r\n                            title = p.Title,\r\n                            description = p.Description,\r\n                            link = p.Link,\r\n                            category = p.Categories\r\n                        }\r\n                }\r\n            })", span="63-81", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonAnonymousObject.Example()"];
n5 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()"];
n6 [label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonAnonymousObject.Post.Post()", span="36-36", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonAnonymousObject.Post.Post()"];
n3 [label="Console.WriteLine(o.ToString())", span="83-83", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonAnonymousObject.Example()"];
n7 [label="Entry Newtonsoft.Json.Linq.JObject.FromObject(object)", span="377-377", cluster="Newtonsoft.Json.Linq.JObject.FromObject(object)"];
n4 [label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonAnonymousObject.Example()", span="45-45", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonAnonymousObject.Example()"];
n8 [label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="410-410", cluster="Newtonsoft.Json.Linq.JToken.ToString()"];
n9 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)"];
d1 [label="return TypeAttributeCache.Get(type);", span="40-40", cluster="Newtonsoft.Json.Serialization.CachedAttributeGetter<T>.GetAttribute(System.Reflection.ICustomAttributeProvider)", color=green, community=0];
d0 [label="Entry Newtonsoft.Json.Serialization.CachedAttributeGetter<T>.GetAttribute(System.Reflection.ICustomAttributeProvider)", span="38-38", cluster="Newtonsoft.Json.Serialization.CachedAttributeGetter<T>.GetAttribute(System.Reflection.ICustomAttributeProvider)"];
d2 [label="Exit Newtonsoft.Json.Serialization.CachedAttributeGetter<T>.GetAttribute(System.Reflection.ICustomAttributeProvider)", span="38-38", cluster="Newtonsoft.Json.Serialization.CachedAttributeGetter<T>.GetAttribute(System.Reflection.ICustomAttributeProvider)"];
d3 [label="Entry Newtonsoft.Json.Serialization.ThreadSafeDictionaryWrapper<TKey, TValue>.Get(TKey)", span="49-49", cluster="Newtonsoft.Json.Serialization.ThreadSafeDictionaryWrapper<TKey, TValue>.Get(TKey)"];
m0_110 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.TryConvert(object, System.Globalization.CultureInfo, System.Type, out object)", span="257-257", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvert(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs"];
m0_111 [label="return MiscellaneousUtils.TryAction<object>(delegate { return Convert(initialValue, culture, targetType); }, out convertedValue);", span="259-259", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvert(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs"];
m0_112 [label="Exit Newtonsoft.Json.Utilities.ConvertUtils.TryConvert(object, System.Globalization.CultureInfo, System.Type, out object)", span="257-257", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvert(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs"];
m0_140 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.TryConvertOrCast(object, System.Globalization.CultureInfo, System.Type, out object)", span="359-359", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertOrCast(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs"];
m0_141 [label="return MiscellaneousUtils.TryAction<object>(delegate { return ConvertOrCast(initialValue, culture, targetType); }, out convertedValue);", span="361-361", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertOrCast(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs"];
m0_142 [label="Exit Newtonsoft.Json.Utilities.ConvertUtils.TryConvertOrCast(object, System.Globalization.CultureInfo, System.Type, out object)", span="359-359", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertOrCast(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs"];
m0_95 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)", span="365-365", cluster="Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)", file="ConvertUtils.cs"];
m0_146 [label="Type valueType = (value != null) ? value.GetType() : null", span="367-367", cluster="Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)", file="ConvertUtils.cs"];
m0_147 [label="value != null && targetType.IsAssignableFrom(valueType)", span="369-369", cluster="Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)", file="ConvertUtils.cs"];
m0_148 [label="return value;", span="370-370", cluster="Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)", file="ConvertUtils.cs"];
m0_149 [label="value == null && ReflectionUtils.IsNullable(targetType)", span="371-371", cluster="Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)", file="ConvertUtils.cs"];
m0_151 [label="throw new Exception(''Could not cast or convert from {0} to {1}.''.FormatWith(CultureInfo.InvariantCulture, (initialType != null) ? initialType.ToString() : ''{null}'', targetType));", span="374-374", cluster="Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)", file="ConvertUtils.cs"];
m0_150 [label="return null;", span="372-372", cluster="Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)", file="ConvertUtils.cs"];
m0_152 [label="Exit Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)", span="365-365", cluster="Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)", file="ConvertUtils.cs"];
m0_129 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.TryConvertOrCast<T>(object, out T)", span="321-321", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertOrCast<T>(object, out T)", file="ConvertUtils.cs"];
m0_130 [label="return TryConvertOrCast<T>(initialValue, CultureInfo.CurrentCulture, out convertedValue);", span="323-323", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertOrCast<T>(object, out T)", file="ConvertUtils.cs"];
m0_131 [label="Exit Newtonsoft.Json.Utilities.ConvertUtils.TryConvertOrCast<T>(object, out T)", span="321-321", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertOrCast<T>(object, out T)", file="ConvertUtils.cs"];
m0_93 [label="Entry System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", span="0-0", cluster="System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", file="ConvertUtils.cs"];
m0_35 [label="Entry System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)", span="0-0", cluster="System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)", file="ConvertUtils.cs"];
m0_85 [label="Entry string.FormatWith(System.IFormatProvider, params object[])", span="48-48", cluster="string.FormatWith(System.IFormatProvider, params object[])", file="ConvertUtils.cs"];
m0_170 [label="Entry Unk.FormatWith", span="", cluster="Unk.FormatWith", file="ConvertUtils.cs"];
m0_153 [label="Entry System.Type.ToString()", span="0-0", cluster="System.Type.ToString()", file="ConvertUtils.cs"];
m0_0 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.CanConvertType(System.Type, System.Type, bool)", span="39-39", cluster="Newtonsoft.Json.Utilities.ConvertUtils.CanConvertType(System.Type, System.Type, bool)", file="ConvertUtils.cs"];
m0_1 [label="ValidationUtils.ArgumentNotNull(initialType, ''initialType'')", span="41-41", cluster="Newtonsoft.Json.Utilities.ConvertUtils.CanConvertType(System.Type, System.Type, bool)", file="ConvertUtils.cs"];
m0_2 [label="ValidationUtils.ArgumentNotNull(targetType, ''targetType'')", span="42-42", cluster="Newtonsoft.Json.Utilities.ConvertUtils.CanConvertType(System.Type, System.Type, bool)", file="ConvertUtils.cs"];
m0_3 [label="ReflectionUtils.IsNullableType(targetType)", span="44-44", cluster="Newtonsoft.Json.Utilities.ConvertUtils.CanConvertType(System.Type, System.Type, bool)", file="ConvertUtils.cs"];
m0_4 [label="targetType = Nullable.GetUnderlyingType(targetType)", span="45-45", cluster="Newtonsoft.Json.Utilities.ConvertUtils.CanConvertType(System.Type, System.Type, bool)", file="ConvertUtils.cs"];
m0_5 [label="targetType == initialType", span="47-47", cluster="Newtonsoft.Json.Utilities.ConvertUtils.CanConvertType(System.Type, System.Type, bool)", file="ConvertUtils.cs"];
m0_7 [label="typeof(IConvertible).IsAssignableFrom(initialType) && typeof(IConvertible).IsAssignableFrom(targetType)", span="50-50", cluster="Newtonsoft.Json.Utilities.ConvertUtils.CanConvertType(System.Type, System.Type, bool)", file="ConvertUtils.cs"];
m0_9 [label="initialType == typeof(DateTime) && targetType == typeof(DateTimeOffset)", span="55-55", cluster="Newtonsoft.Json.Utilities.ConvertUtils.CanConvertType(System.Type, System.Type, bool)", file="ConvertUtils.cs"];
m0_11 [label="initialType == typeof(Guid) && (targetType == typeof(Guid) || targetType == typeof(string))", span="58-58", cluster="Newtonsoft.Json.Utilities.ConvertUtils.CanConvertType(System.Type, System.Type, bool)", file="ConvertUtils.cs"];
m0_13 [label="initialType == typeof(Type) && targetType == typeof(string)", span="61-61", cluster="Newtonsoft.Json.Utilities.ConvertUtils.CanConvertType(System.Type, System.Type, bool)", file="ConvertUtils.cs"];
m0_15 [label="TypeConverter toConverter = GetConverter(initialType)", span="66-66", cluster="Newtonsoft.Json.Utilities.ConvertUtils.CanConvertType(System.Type, System.Type, bool)", file="ConvertUtils.cs"];
m0_16 [label="toConverter != null && !IsComponentConverter(toConverter) && toConverter.CanConvertTo(targetType)", span="68-68", cluster="Newtonsoft.Json.Utilities.ConvertUtils.CanConvertType(System.Type, System.Type, bool)", file="ConvertUtils.cs"];
m0_17 [label="allowTypeNameToString || toConverter.GetType() != typeof(TypeConverter)", span="70-70", cluster="Newtonsoft.Json.Utilities.ConvertUtils.CanConvertType(System.Type, System.Type, bool)", file="ConvertUtils.cs"];
m0_19 [label="TypeConverter fromConverter = GetConverter(targetType)", span="74-74", cluster="Newtonsoft.Json.Utilities.ConvertUtils.CanConvertType(System.Type, System.Type, bool)", file="ConvertUtils.cs"];
m0_20 [label="fromConverter != null && !IsComponentConverter(fromConverter) && fromConverter.CanConvertFrom(initialType)", span="76-76", cluster="Newtonsoft.Json.Utilities.ConvertUtils.CanConvertType(System.Type, System.Type, bool)", file="ConvertUtils.cs"];
m0_22 [label="initialType == typeof(DBNull)", span="81-81", cluster="Newtonsoft.Json.Utilities.ConvertUtils.CanConvertType(System.Type, System.Type, bool)", file="ConvertUtils.cs"];
m0_23 [label="ReflectionUtils.IsNullable(targetType)", span="83-83", cluster="Newtonsoft.Json.Utilities.ConvertUtils.CanConvertType(System.Type, System.Type, bool)", file="ConvertUtils.cs"];
m0_6 [label="return true;", span="48-48", cluster="Newtonsoft.Json.Utilities.ConvertUtils.CanConvertType(System.Type, System.Type, bool)", file="ConvertUtils.cs"];
m0_8 [label="return true;", span="52-52", cluster="Newtonsoft.Json.Utilities.ConvertUtils.CanConvertType(System.Type, System.Type, bool)", file="ConvertUtils.cs"];
m0_10 [label="return true;", span="56-56", cluster="Newtonsoft.Json.Utilities.ConvertUtils.CanConvertType(System.Type, System.Type, bool)", file="ConvertUtils.cs"];
m0_12 [label="return true;", span="59-59", cluster="Newtonsoft.Json.Utilities.ConvertUtils.CanConvertType(System.Type, System.Type, bool)", file="ConvertUtils.cs"];
m0_14 [label="return true;", span="62-62", cluster="Newtonsoft.Json.Utilities.ConvertUtils.CanConvertType(System.Type, System.Type, bool)", file="ConvertUtils.cs"];
m0_18 [label="return true;", span="71-71", cluster="Newtonsoft.Json.Utilities.ConvertUtils.CanConvertType(System.Type, System.Type, bool)", file="ConvertUtils.cs"];
m0_21 [label="return true;", span="77-77", cluster="Newtonsoft.Json.Utilities.ConvertUtils.CanConvertType(System.Type, System.Type, bool)", file="ConvertUtils.cs"];
m0_25 [label="return false;", span="87-87", cluster="Newtonsoft.Json.Utilities.ConvertUtils.CanConvertType(System.Type, System.Type, bool)", file="ConvertUtils.cs"];
m0_24 [label="return true;", span="84-84", cluster="Newtonsoft.Json.Utilities.ConvertUtils.CanConvertType(System.Type, System.Type, bool)", file="ConvertUtils.cs"];
m0_26 [label="Exit Newtonsoft.Json.Utilities.ConvertUtils.CanConvertType(System.Type, System.Type, bool)", span="39-39", cluster="Newtonsoft.Json.Utilities.ConvertUtils.CanConvertType(System.Type, System.Type, bool)", file="ConvertUtils.cs"];
m0_36 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", span="66-66", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", file="ConvertUtils.cs"];
m0_82 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="ConvertUtils.cs"];
m0_94 [label="Entry System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", span="0-0", cluster="System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", file="ConvertUtils.cs"];
m0_89 [label="Entry System.Enum.ToObject(System.Type, object)", span="0-0", cluster="System.Enum.ToObject(System.Type, object)", file="ConvertUtils.cs"];
m0_32 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.IsComponentConverter(System.ComponentModel.TypeConverter)", span="90-90", cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsComponentConverter(System.ComponentModel.TypeConverter)", file="ConvertUtils.cs"];
m0_37 [label="return (converter is ComponentConverter);", span="93-93", cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsComponentConverter(System.ComponentModel.TypeConverter)", file="ConvertUtils.cs"];
m0_38 [label="Exit Newtonsoft.Json.Utilities.ConvertUtils.IsComponentConverter(System.ComponentModel.TypeConverter)", span="90-90", cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsComponentConverter(System.ComponentModel.TypeConverter)", file="ConvertUtils.cs"];
m0_27 [label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", span="94-94", cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", file="ConvertUtils.cs"];
m0_116 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast<T>(object)", span="271-271", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast<T>(object)", file="ConvertUtils.cs"];
m0_117 [label="return ConvertOrCast<T>(initialValue, CultureInfo.CurrentCulture);", span="273-273", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast<T>(object)", file="ConvertUtils.cs"];
m0_118 [label="Exit Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast<T>(object)", span="271-271", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast<T>(object)", file="ConvertUtils.cs"];
m0_169 [label="Entry Unk.GetType", span="", cluster="Unk.GetType", file="ConvertUtils.cs"];
m0_30 [label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0", cluster="System.Type.IsAssignableFrom(System.Type)", file="ConvertUtils.cs"];
m0_29 [label="Entry System.Nullable.GetUnderlyingType(System.Type)", span="0-0", cluster="System.Nullable.GetUnderlyingType(System.Type)", file="ConvertUtils.cs"];
m0_96 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)", file="ConvertUtils.cs"];
m0_33 [label="Entry System.ComponentModel.TypeConverter.CanConvertTo(System.Type)", span="0-0", cluster="System.ComponentModel.TypeConverter.CanConvertTo(System.Type)", file="ConvertUtils.cs"];
m0_86 [label="Entry object.ToString()", span="0-0", cluster="object.ToString()", file="ConvertUtils.cs"];
m0_101 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.TryConvert<T>(object, System.Globalization.CultureInfo, out T)", span="236-236", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvert<T>(object, System.Globalization.CultureInfo, out T)", file="ConvertUtils.cs"];
m0_102 [label="return MiscellaneousUtils.TryAction<T>(delegate\r\n      {\r\n        object tempConvertedValue;\r\n        TryConvert(initialValue, CultureInfo.CurrentCulture, typeof(T), out tempConvertedValue);\r\n\r\n        return (T)tempConvertedValue;\r\n      }, out convertedValue);", span="238-244", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvert<T>(object, System.Globalization.CultureInfo, out T)", file="ConvertUtils.cs"];
m0_103 [label="Exit Newtonsoft.Json.Utilities.ConvertUtils.TryConvert<T>(object, System.Globalization.CultureInfo, out T)", span="236-236", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvert<T>(object, System.Globalization.CultureInfo, out T)", file="ConvertUtils.cs"];
m0_34 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="ConvertUtils.cs"];
m0_87 [label="Entry System.Enum.Parse(System.Type, string, bool)", span="0-0", cluster="System.Enum.Parse(System.Type, string, bool)", file="ConvertUtils.cs"];
m0_187 [label="Entry System.Convert.GetTypeCode(object)", span="0-0", cluster="System.Convert.GetTypeCode(object)", file="ConvertUtils.cs"];
m0_84 [label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string, string)", file="ConvertUtils.cs"];
m0_128 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetObjectType(object)", span="38-38", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetObjectType(object)", file="ConvertUtils.cs"];
m0_45 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", span="130-130", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs"];
m0_46 [label="initialValue == null", span="132-132", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs"];
m0_48 [label="ReflectionUtils.IsNullableType(targetType)", span="135-135", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs"];
m0_49 [label="targetType = Nullable.GetUnderlyingType(targetType)", span="136-136", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs"];
m0_50 [label="Type initialType = initialValue.GetType()", span="138-138", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs"];
m0_51 [label="targetType == initialType", span="140-140", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs"];
m0_52 [label="return initialValue;", span="141-141", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs"];
m0_53 [label="initialValue is string && typeof(Type).IsAssignableFrom(targetType)", span="143-143", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs"];
m0_54 [label="return Type.GetType((string) initialValue, true);", span="144-144", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs"];
m0_55 [label="targetType.IsInterface || targetType.IsGenericTypeDefinition || targetType.IsAbstract", span="146-146", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs"];
m0_56 [label="throw new ArgumentException(''Target type {0} is not a value type or a non-abstract class.''.FormatWith(CultureInfo.InvariantCulture, targetType), ''targetType'');", span="147-147", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs"];
m0_57 [label="initialValue is IConvertible && typeof(IConvertible).IsAssignableFrom(targetType)", span="150-150", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs"];
m0_58 [label="targetType.IsEnum", span="152-152", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs"];
m0_59 [label="initialValue is string", span="154-154", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs"];
m0_60 [label="return Enum.Parse(targetType, initialValue.ToString(), true);", span="155-155", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs"];
m0_61 [label="IsInteger(initialValue)", span="156-156", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs"];
m0_62 [label="return Enum.ToObject(targetType, initialValue);", span="157-157", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs"];
m0_63 [label="return System.Convert.ChangeType(initialValue, targetType, culture);", span="160-160", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs"];
m0_64 [label="initialValue is DateTime && targetType == typeof(DateTimeOffset)", span="163-163", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs"];
m0_65 [label="return new DateTimeOffset((DateTime)initialValue);", span="164-164", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs"];
m0_66 [label="initialValue is string && targetType == typeof(Guid)", span="166-166", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", color=red, community=0, file="ConvertUtils.cs"];
m0_67 [label="return new Guid((string)initialValue);", span="167-167", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", color=red, community=0, file="ConvertUtils.cs"];
m0_69 [label="toConverter != null && toConverter.CanConvertTo(targetType)", span="173-173", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs"];
m0_70 [label="return toConverter.ConvertTo(null, culture, initialValue, targetType);", span="176-176", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs"];
m0_71 [label="TypeConverter fromConverter = GetConverter(targetType)", span="182-182", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs"];
m0_73 [label="return fromConverter.ConvertFrom(null, culture, initialValue);", span="187-187", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs"];
m0_74 [label="initialValue == DBNull.Value", span="195-195", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs"];
m0_75 [label="ReflectionUtils.IsNullable(targetType)", span="197-197", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs"];
m0_76 [label="return EnsureTypeAssignable(null, initialType, targetType);", span="198-198", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs"];
m0_77 [label="throw new Exception(''Can not convert null {0} into non-nullable {1}.''.FormatWith(CultureInfo.InvariantCulture, initialType, targetType));", span="200-200", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs"];
m0_78 [label="initialValue is INullable", span="203-203", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs"];
m0_79 [label="return EnsureTypeAssignable(ToValue((INullable)initialValue), initialType, targetType);", span="204-204", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs"];
m0_80 [label="throw new Exception(''Can not convert from {0} to {1}.''.FormatWith(CultureInfo.InvariantCulture, initialType, targetType));", span="207-207", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs"];
m0_47 [label="throw new ArgumentNullException(''initialValue'');", span="133-133", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs"];
m0_68 [label="TypeConverter toConverter = GetConverter(initialType)", span="171-171", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs"];
m0_72 [label="fromConverter != null && fromConverter.CanConvertFrom(initialType)", span="184-184", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs"];
m0_81 [label="Exit Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", span="130-130", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs"];
m0_91 [label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime)", file="ConvertUtils.cs"];
m0_28 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", span="76-76", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", file="ConvertUtils.cs"];
m0_97 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", span="378-378", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", file="ConvertUtils.cs"];
m0_154 [label="nullableValue == null", span="380-380", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", file="ConvertUtils.cs"];
m0_156 [label="nullableValue is SqlInt32", span="382-382", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", file="ConvertUtils.cs"];
m0_157 [label="return ToValue((SqlInt32)nullableValue);", span="383-383", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", file="ConvertUtils.cs"];
m0_158 [label="nullableValue is SqlInt64", span="384-384", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", file="ConvertUtils.cs"];
m0_159 [label="return ToValue((SqlInt64)nullableValue);", span="385-385", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", file="ConvertUtils.cs"];
m0_160 [label="nullableValue is SqlBoolean", span="386-386", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", file="ConvertUtils.cs"];
m0_161 [label="return ToValue((SqlBoolean)nullableValue);", span="387-387", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", file="ConvertUtils.cs"];
m0_162 [label="nullableValue is SqlString", span="388-388", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", file="ConvertUtils.cs"];
m0_163 [label="return ToValue((SqlString)nullableValue);", span="389-389", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", file="ConvertUtils.cs"];
m0_164 [label="nullableValue is SqlDateTime", span="390-390", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", file="ConvertUtils.cs"];
m0_165 [label="return ToValue((SqlDateTime)nullableValue);", span="391-391", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", file="ConvertUtils.cs"];
m0_166 [label="throw new Exception(''Unsupported INullable type: {0}''.FormatWith(CultureInfo.InvariantCulture, nullableValue.GetType()));", span="393-393", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", file="ConvertUtils.cs"];
m0_155 [label="return null;", span="381-381", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", file="ConvertUtils.cs"];
m0_167 [label="Exit Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", span="378-378", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", file="ConvertUtils.cs"];
m0_122 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)", span="300-300", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs"];
m0_123 [label="object convertedValue", span="302-302", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs"];
m0_124 [label="TryConvert(initialValue, culture, targetType, out convertedValue)", span="303-303", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs"];
m0_126 [label="return EnsureTypeAssignable(initialValue, ReflectionUtils.GetObjectType(initialValue), targetType);", span="306-306", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs"];
m0_125 [label="return convertedValue;", span="304-304", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs"];
m0_127 [label="Exit Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)", span="300-300", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs"];
m0_98 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.TryConvert<T>(object, out T)", span="221-221", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvert<T>(object, out T)", file="ConvertUtils.cs"];
m0_99 [label="return TryConvert(initialValue, CultureInfo.CurrentCulture, out convertedValue);", span="223-223", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvert<T>(object, out T)", file="ConvertUtils.cs"];
m0_100 [label="Exit Newtonsoft.Json.Utilities.ConvertUtils.TryConvert<T>(object, out T)", span="221-221", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvert<T>(object, out T)", file="ConvertUtils.cs"];
m0_104 [label="Entry Newtonsoft.Json.Utilities.MiscellaneousUtils.TryAction<T>(Newtonsoft.Json.Utilities.Creator<T>, out T)", span="21-21", cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.TryAction<T>(Newtonsoft.Json.Utilities.Creator<T>, out T)", file="ConvertUtils.cs"];
m0_168 [label="Entry Unk.ToValue", span="", cluster="Unk.ToValue", file="ConvertUtils.cs"];
m0_39 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.Convert<T>(object)", span="106-106", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert<T>(object)", file="ConvertUtils.cs"];
m0_40 [label="return Convert<T>(initialValue, CultureInfo.CurrentCulture);", span="108-108", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert<T>(object)", file="ConvertUtils.cs"];
m0_41 [label="Exit Newtonsoft.Json.Utilities.ConvertUtils.Convert<T>(object)", span="106-106", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert<T>(object)", file="ConvertUtils.cs"];
m0_88 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", span="415-415", cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", file="ConvertUtils.cs"];
m0_175 [label="System.Convert.GetTypeCode(value)", span="417-417", cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", file="ConvertUtils.cs"];
m0_176 [label="TypeCode.SByte", span="419-419", cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", file="ConvertUtils.cs"];
m0_185 [label="return false;", span="429-429", cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", file="ConvertUtils.cs"];
m0_177 [label="TypeCode.Byte", span="420-420", cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", file="ConvertUtils.cs"];
m0_178 [label="TypeCode.Int16", span="421-421", cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", file="ConvertUtils.cs"];
m0_179 [label="TypeCode.UInt16", span="422-422", cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", file="ConvertUtils.cs"];
m0_180 [label="TypeCode.Int32", span="423-423", cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", file="ConvertUtils.cs"];
m0_181 [label="TypeCode.UInt32", span="424-424", cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", file="ConvertUtils.cs"];
m0_182 [label="TypeCode.Int64", span="425-425", cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", file="ConvertUtils.cs"];
m0_183 [label="TypeCode.UInt64", span="426-426", cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", file="ConvertUtils.cs"];
m0_184 [label="return true;", span="427-427", cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", file="ConvertUtils.cs"];
m0_186 [label="Exit Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", span="415-415", cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", file="ConvertUtils.cs"];
m0_119 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast<T>(object, System.Globalization.CultureInfo)", span="284-284", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast<T>(object, System.Globalization.CultureInfo)", file="ConvertUtils.cs"];
m0_120 [label="return (T)ConvertOrCast(initialValue, culture, typeof(T));", span="286-286", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast<T>(object, System.Globalization.CultureInfo)", file="ConvertUtils.cs"];
m0_121 [label="Exit Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast<T>(object, System.Globalization.CultureInfo)", span="284-284", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast<T>(object, System.Globalization.CultureInfo)", file="ConvertUtils.cs"];
m0_83 [label="Entry System.Type.GetType(string, bool)", span="0-0", cluster="System.Type.GetType(string, bool)", file="ConvertUtils.cs"];
m0_31 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.GetConverter(System.Type)", span="398-398", cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetConverter(System.Type)", file="ConvertUtils.cs"];
m0_171 [label="ValidationUtils.ArgumentNotNull(t, ''t'')", span="400-400", cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetConverter(System.Type)", file="ConvertUtils.cs"];
m0_172 [label="return TypeDescriptor.GetConverter(t);", span="403-403", cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetConverter(System.Type)", file="ConvertUtils.cs"];
m0_173 [label="Exit Newtonsoft.Json.Utilities.ConvertUtils.GetConverter(System.Type)", span="398-398", cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetConverter(System.Type)", file="ConvertUtils.cs"];
m0_132 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.TryConvertOrCast<T>(object, System.Globalization.CultureInfo, out T)", span="337-337", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertOrCast<T>(object, System.Globalization.CultureInfo, out T)", file="ConvertUtils.cs"];
m0_133 [label="return MiscellaneousUtils.TryAction<T>(delegate\r\n      {\r\n        object tempConvertedValue;\r\n        TryConvertOrCast(initialValue, CultureInfo.CurrentCulture, typeof(T), out tempConvertedValue);\r\n\r\n        return (T)tempConvertedValue;\r\n      }, out convertedValue);", span="339-345", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertOrCast<T>(object, System.Globalization.CultureInfo, out T)", file="ConvertUtils.cs"];
m0_134 [label="Exit Newtonsoft.Json.Utilities.ConvertUtils.TryConvertOrCast<T>(object, System.Globalization.CultureInfo, out T)", span="337-337", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertOrCast<T>(object, System.Globalization.CultureInfo, out T)", file="ConvertUtils.cs"];
m0_174 [label="Entry System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", span="0-0", cluster="System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", file="ConvertUtils.cs"];
m0_42 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.Convert<T>(object, System.Globalization.CultureInfo)", span="118-118", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert<T>(object, System.Globalization.CultureInfo)", file="ConvertUtils.cs"];
m0_43 [label="return (T)Convert(initialValue, culture, typeof(T));", span="120-120", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert<T>(object, System.Globalization.CultureInfo)", file="ConvertUtils.cs"];
m0_44 [label="Exit Newtonsoft.Json.Utilities.ConvertUtils.Convert<T>(object, System.Globalization.CultureInfo)", span="118-118", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert<T>(object, System.Globalization.CultureInfo)", file="ConvertUtils.cs"];
m0_90 [label="Entry System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", span="0-0", cluster="System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", file="ConvertUtils.cs"];
m0_143 [label="Entry lambda expression", span="361-361", cluster="lambda expression", file="ConvertUtils.cs"];
m0_107 [label="TryConvert(initialValue, CultureInfo.CurrentCulture, typeof(T), out tempConvertedValue)", span="241-241", cluster="lambda expression", file="ConvertUtils.cs"];
m0_105 [label="Entry lambda expression", span="238-244", cluster="lambda expression", file="ConvertUtils.cs"];
m0_106 [label="object tempConvertedValue", span="240-240", cluster="lambda expression", file="ConvertUtils.cs"];
m0_108 [label="return (T)tempConvertedValue;", span="243-243", cluster="lambda expression", file="ConvertUtils.cs"];
m0_109 [label="Exit lambda expression", span="238-244", cluster="lambda expression", file="ConvertUtils.cs"];
m0_114 [label="return Convert(initialValue, culture, targetType);", span="259-259", cluster="lambda expression", file="ConvertUtils.cs"];
m0_113 [label="Entry lambda expression", span="259-259", cluster="lambda expression", file="ConvertUtils.cs"];
m0_115 [label="Exit lambda expression", span="259-259", cluster="lambda expression", file="ConvertUtils.cs"];
m0_137 [label="TryConvertOrCast(initialValue, CultureInfo.CurrentCulture, typeof(T), out tempConvertedValue)", span="342-342", cluster="lambda expression", file="ConvertUtils.cs"];
m0_135 [label="Entry lambda expression", span="339-345", cluster="lambda expression", file="ConvertUtils.cs"];
m0_136 [label="object tempConvertedValue", span="341-341", cluster="lambda expression", file="ConvertUtils.cs"];
m0_138 [label="return (T)tempConvertedValue;", span="344-344", cluster="lambda expression", file="ConvertUtils.cs"];
m0_139 [label="Exit lambda expression", span="339-345", cluster="lambda expression", file="ConvertUtils.cs"];
m0_144 [label="return ConvertOrCast(initialValue, culture, targetType);", span="361-361", cluster="lambda expression", file="ConvertUtils.cs"];
m0_145 [label="Exit lambda expression", span="361-361", cluster="lambda expression", file="ConvertUtils.cs"];
m0_92 [label="Entry System.Guid.Guid(string)", span="0-0", cluster="System.Guid.Guid(string)", file="ConvertUtils.cs"];
m0_188 [label=object, span="", file="ConvertUtils.cs"];
m0_189 [label=object, span="", file="ConvertUtils.cs"];
m0_190 [label="System.Globalization.CultureInfo", span="", file="ConvertUtils.cs"];
m0_191 [label="System.Type", span="", file="ConvertUtils.cs"];
m0_192 [label=object, span="", file="ConvertUtils.cs"];
m0_193 [label=object, span="", file="ConvertUtils.cs"];
m0_194 [label="System.Globalization.CultureInfo", span="", file="ConvertUtils.cs"];
m0_195 [label="System.Type", span="", file="ConvertUtils.cs"];
m1_0 [label="Entry Newtonsoft.Json.Tests.Schema.JsonSchemaNodeTests.AddSchema()", span="44-44", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaNodeTests.AddSchema()", file="CustomCreationConverter.cs"];
m1_1 [label="string first = @''{\r\n  ''''id'''':''''first'''',\r\n  ''''type'''':''''object'''',\r\n  ''''properties'''':\r\n  {\r\n    ''''firstproperty'''':{''''type'''':''''string'''',''''maxLength'''':10},\r\n    ''''secondproperty'''':{\r\n      ''''type'''':''''object'''',\r\n      ''''properties'''':\r\n      {\r\n        ''''secondproperty_firstproperty'''':{''''type'''':''''string'''',''''maxLength'''':10,''''minLength'''':7}\r\n      }\r\n    }\r\n  },\r\n  ''''additionalProperties'''':{}\r\n}''", span="46-61", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaNodeTests.AddSchema()", color=green, community=0, file="CustomCreationConverter.cs"];
m1_2 [label="string second = @''{\r\n  ''''id'''':''''second'''',\r\n  ''''type'''':''''object'''',\r\n  ''''extends'''':{''''$ref'''':''''first''''},\r\n  ''''properties'''':\r\n  {\r\n    ''''firstproperty'''':{''''type'''':''''string''''},\r\n    ''''secondproperty'''':{\r\n      ''''extends'''':{\r\n        ''''properties'''':\r\n        {\r\n          ''''secondproperty_firstproperty'''':{''''maxLength'''':9,''''minLength'''':6}\r\n        }\r\n      },\r\n      ''''type'''':''''object'''',\r\n      ''''properties'''':\r\n      {\r\n        ''''secondproperty_firstproperty'''':{}\r\n      }\r\n    },\r\n    ''''thirdproperty'''':{''''type'''':''''string''''}\r\n  },\r\n  ''''additionalProperties'''':false\r\n}''", span="63-86", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaNodeTests.AddSchema()", file="CustomCreationConverter.cs"];
m1_13 [label="Entry Newtonsoft.Json.Schema.JsonSchemaResolver.JsonSchemaResolver()", span="50-50", cluster="Newtonsoft.Json.Schema.JsonSchemaResolver.JsonSchemaResolver()", file="CustomCreationConverter.cs"];
m1_4 [label="Entry Newtonsoft.Json.Converters.CustomCreationConverter<T>.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", span="56-56", cluster="Newtonsoft.Json.Converters.CustomCreationConverter<T>.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="CustomCreationConverter.cs"];
m1_3 [label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="360-360", cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="CustomCreationConverter.cs"];
m1_5 [label="T value = Create(objectType)", span="58-58", cluster="Newtonsoft.Json.Converters.CustomCreationConverter<T>.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="CustomCreationConverter.cs"];
m1_11 [label="Entry Newtonsoft.Json.Converters.CustomCreationConverter<T>.Create(System.Type)", span="71-71", cluster="Newtonsoft.Json.Converters.CustomCreationConverter<T>.Create(System.Type)", file="CustomCreationConverter.cs"];
m1_6 [label="value == null", span="59-59", cluster="Newtonsoft.Json.Converters.CustomCreationConverter<T>.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="CustomCreationConverter.cs"];
m1_7 [label="throw new JsonSerializationException(''No object created.'');", span="60-60", cluster="Newtonsoft.Json.Converters.CustomCreationConverter<T>.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="CustomCreationConverter.cs"];
m1_10 [label="Exit Newtonsoft.Json.Converters.CustomCreationConverter<T>.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", span="56-56", cluster="Newtonsoft.Json.Converters.CustomCreationConverter<T>.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="CustomCreationConverter.cs"];
m1_8 [label="serializer.Populate(reader, value)", span="62-62", cluster="Newtonsoft.Json.Converters.CustomCreationConverter<T>.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="CustomCreationConverter.cs"];
m1_9 [label="return value;", span="63-63", cluster="Newtonsoft.Json.Converters.CustomCreationConverter<T>.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="CustomCreationConverter.cs"];
m1_12 [label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", span="48-48", cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", file="CustomCreationConverter.cs"];
m1_16 [label="return typeof (T).IsAssignableFrom(objectType);", span="82-82", cluster="Newtonsoft.Json.Converters.CustomCreationConverter<T>.CanConvert(System.Type)", file="CustomCreationConverter.cs"];
m1_14 [label="Exit Newtonsoft.Json.Converters.CustomCreationConverter<T>.Create(System.Type)", span="71-71", cluster="Newtonsoft.Json.Converters.CustomCreationConverter<T>.Create(System.Type)", file="CustomCreationConverter.cs"];
m1_15 [label="Entry Newtonsoft.Json.Schema.JsonSchemaModelBuilder.JsonSchemaModelBuilder()", span="35-35", cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.JsonSchemaModelBuilder()", file="CustomCreationConverter.cs"];
m1_17 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="CustomCreationConverter.cs"];
m1_18 [label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0", cluster="System.Type.IsAssignableFrom(System.Type)", file="CustomCreationConverter.cs"];
m1_23 [label="Assert.AreEqual(1, node.Schemas.Count)", span="118-118", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaNodeTests.CircularReference()", file="CustomCreationConverter.cs"];
m1_24 [label="Assert.AreEqual(node, node.Items[0])", span="120-120", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaNodeTests.CircularReference()", file="CustomCreationConverter.cs"];
m1_21 [label="JsonSchemaModelBuilder modelBuilder = new JsonSchemaModelBuilder()", span="114-114", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaNodeTests.CircularReference()", file="CustomCreationConverter.cs"];
m1_22 [label="JsonSchemaNode node = modelBuilder.AddSchema(null, schema)", span="116-116", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaNodeTests.CircularReference()", file="CustomCreationConverter.cs"];
m1_20 [label="JsonSchema schema = JsonSchema.Parse(json)", span="112-112", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaNodeTests.CircularReference()", file="CustomCreationConverter.cs"];
m1_19 [label="Newtonsoft.Json.Converters.CustomCreationConverter<T>", span="", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaNodeTests.CircularReference()", file="CustomCreationConverter.cs"];
m1_25 [label="Exit Newtonsoft.Json.Tests.Schema.JsonSchemaNodeTests.CircularReference()", span="103-103", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaNodeTests.CircularReference()", file="CustomCreationConverter.cs"];
m1_26 [label="Entry Newtonsoft.Json.Schema.JsonSchema.Parse(string)", span="288-288", cluster="Newtonsoft.Json.Schema.JsonSchema.Parse(string)", file="CustomCreationConverter.cs"];
m3_8 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="525-525", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="DefaultMappingResolver.cs"];
m3_0 [label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DefaultValueHandlingIgnore.Example()", span="19-19", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DefaultValueHandlingIgnore.Example()", file="DefaultMappingResolver.cs"];
m3_1 [label="Person person = new Person()", span="22-22", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DefaultValueHandlingIgnore.Example()", file="DefaultMappingResolver.cs"];
m3_2 [label="string jsonIncludeDefaultValues = JsonConvert.SerializeObject(person, Formatting.Indented)", span="24-24", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DefaultValueHandlingIgnore.Example()", file="DefaultMappingResolver.cs"];
m3_4 [label="string jsonIgnoreDefaultValues = JsonConvert.SerializeObject(person, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DefaultValueHandling = DefaultValueHandling.Ignore\r\n            })", span="34-37", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DefaultValueHandlingIgnore.Example()", file="DefaultMappingResolver.cs"];
m3_3 [label="Console.WriteLine(jsonIncludeDefaultValues)", span="26-26", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DefaultValueHandlingIgnore.Example()", file="DefaultMappingResolver.cs"];
m3_5 [label="Console.WriteLine(jsonIgnoreDefaultValues)", span="39-39", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DefaultValueHandlingIgnore.Example()", file="DefaultMappingResolver.cs"];
m3_6 [label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DefaultValueHandlingIgnore.Example()", span="19-19", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DefaultValueHandlingIgnore.Example()", file="DefaultMappingResolver.cs"];
m3_7 [label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DefaultValueHandlingIgnore.Person.Person()", span="10-10", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DefaultValueHandlingIgnore.Person.Person()", file="DefaultMappingResolver.cs"];
m3_10 [label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="359-359", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="DefaultMappingResolver.cs"];
m3_11 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="606-606", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="DefaultMappingResolver.cs"];
m4_7 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="JObjectTests.cs"];
m4_10 [label="Entry lambda expression", span="40-47", cluster="lambda expression", file="JObjectTests.cs"];
m4_11 [label="new BlogPost\r\n            {\r\n                Title = (string)p[''Title''],\r\n                AuthorName = (string)p[''Author''][''Name''],\r\n                AuthorTwitter = (string)p[''Author''][''Twitter''],\r\n                PostedDate = (DateTime)p[''Date''],\r\n                Body = HttpUtility.HtmlDecode((string)p[''BodyHtml''])\r\n            }", span="40-47", cluster="lambda expression", file="JObjectTests.cs"];
m4_12 [label="Exit lambda expression", span="40-47", cluster="lambda expression", file="JObjectTests.cs"];
m4_6 [label="Entry Newtonsoft.Json.Linq.JArray.Parse(string)", span="144-144", cluster="Newtonsoft.Json.Linq.JArray.Parse(string)", file="JObjectTests.cs"];
m4_14 [label="Entry Unk.HtmlDecode", span="", cluster="Unk.HtmlDecode", file="JObjectTests.cs"];
m4_0 [label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Linq.DeserializeWithLinq.Example()", span="22-22", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.DeserializeWithLinq.Example()", file="JObjectTests.cs"];
m4_1 [label="string json = @''[\r\n              {\r\n                'Title': 'Json.NET is awesome!',\r\n                'Author': {\r\n                  'Name': 'James Newton-King',\r\n                  'Twitter': '@JamesNK',\r\n                  'Picture': '/jamesnk.png'\r\n                },\r\n                'Date': '2013-01-23T19:30:00',\r\n                'BodyHtml': '&lt;h3&gt;Title!&lt;/h3&gt;\r\n&lt;p&gt;Content!&lt;/p&gt;'\r\n              }\r\n            ]''", span="25-36", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.DeserializeWithLinq.Example()", file="JObjectTests.cs"];
m4_2 [label="JArray blogPostArray = JArray.Parse(json)", span="38-38", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.DeserializeWithLinq.Example()", file="JObjectTests.cs"];
m4_3 [label="IList<BlogPost> blogPosts = blogPostArray.Select(p => new BlogPost\r\n            {\r\n                Title = (string)p[''Title''],\r\n                AuthorName = (string)p[''Author''][''Name''],\r\n                AuthorTwitter = (string)p[''Author''][''Twitter''],\r\n                PostedDate = (DateTime)p[''Date''],\r\n                Body = HttpUtility.HtmlDecode((string)p[''BodyHtml''])\r\n            }).ToList()", span="40-47", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.DeserializeWithLinq.Example()", file="JObjectTests.cs"];
m4_4 [label="Console.WriteLine(blogPosts[0].Body)", span="49-49", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.DeserializeWithLinq.Example()", file="JObjectTests.cs"];
m4_5 [label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Linq.DeserializeWithLinq.Example()", span="22-22", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.DeserializeWithLinq.Example()", file="JObjectTests.cs"];
m4_13 [label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Linq.DeserializeWithLinq.BlogPost.BlogPost()", span="12-12", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.DeserializeWithLinq.BlogPost.BlogPost()", file="JObjectTests.cs"];
m4_8 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="JObjectTests.cs"];
m5_0 [label="Entry Newtonsoft.Json.Serialization.JsonMemberMapping.JsonMemberMapping(string, System.Reflection.MemberInfo, bool, bool, bool, Newtonsoft.Json.JsonConverter, object, bool, bool, Newtonsoft.Json.NullValueHandling?, Newtonsoft.Json.DefaultValueHandling?, Newtonsoft.Json.ReferenceLoopHandling?)", span="62-62", cluster="Newtonsoft.Json.Serialization.JsonMemberMapping.JsonMemberMapping(string, System.Reflection.MemberInfo, bool, bool, bool, Newtonsoft.Json.JsonConverter, object, bool, bool, Newtonsoft.Json.NullValueHandling?, Newtonsoft.Json.DefaultValueHandling?, Newtonsoft.Json.ReferenceLoopHandling?)", file="JsonMemberMapping.cs"];
m5_1 [label="_propertyName = propertyName", span="64-64", cluster="Newtonsoft.Json.Serialization.JsonMemberMapping.JsonMemberMapping(string, System.Reflection.MemberInfo, bool, bool, bool, Newtonsoft.Json.JsonConverter, object, bool, bool, Newtonsoft.Json.NullValueHandling?, Newtonsoft.Json.DefaultValueHandling?, Newtonsoft.Json.ReferenceLoopHandling?)", file="JsonMemberMapping.cs"];
m5_2 [label="_member = member", span="65-65", cluster="Newtonsoft.Json.Serialization.JsonMemberMapping.JsonMemberMapping(string, System.Reflection.MemberInfo, bool, bool, bool, Newtonsoft.Json.JsonConverter, object, bool, bool, Newtonsoft.Json.NullValueHandling?, Newtonsoft.Json.DefaultValueHandling?, Newtonsoft.Json.ReferenceLoopHandling?)", file="JsonMemberMapping.cs"];
m5_3 [label="_ignored = ignored", span="66-66", cluster="Newtonsoft.Json.Serialization.JsonMemberMapping.JsonMemberMapping(string, System.Reflection.MemberInfo, bool, bool, bool, Newtonsoft.Json.JsonConverter, object, bool, bool, Newtonsoft.Json.NullValueHandling?, Newtonsoft.Json.DefaultValueHandling?, Newtonsoft.Json.ReferenceLoopHandling?)", file="JsonMemberMapping.cs"];
m5_4 [label="_readable = readable", span="67-67", cluster="Newtonsoft.Json.Serialization.JsonMemberMapping.JsonMemberMapping(string, System.Reflection.MemberInfo, bool, bool, bool, Newtonsoft.Json.JsonConverter, object, bool, bool, Newtonsoft.Json.NullValueHandling?, Newtonsoft.Json.DefaultValueHandling?, Newtonsoft.Json.ReferenceLoopHandling?)", file="JsonMemberMapping.cs"];
m5_5 [label="_writable = writable", span="68-68", cluster="Newtonsoft.Json.Serialization.JsonMemberMapping.JsonMemberMapping(string, System.Reflection.MemberInfo, bool, bool, bool, Newtonsoft.Json.JsonConverter, object, bool, bool, Newtonsoft.Json.NullValueHandling?, Newtonsoft.Json.DefaultValueHandling?, Newtonsoft.Json.ReferenceLoopHandling?)", file="JsonMemberMapping.cs"];
m5_6 [label="_memberConverter = memberConverter", span="69-69", cluster="Newtonsoft.Json.Serialization.JsonMemberMapping.JsonMemberMapping(string, System.Reflection.MemberInfo, bool, bool, bool, Newtonsoft.Json.JsonConverter, object, bool, bool, Newtonsoft.Json.NullValueHandling?, Newtonsoft.Json.DefaultValueHandling?, Newtonsoft.Json.ReferenceLoopHandling?)", file="JsonMemberMapping.cs"];
m5_7 [label="_defaultValue = defaultValue", span="70-70", cluster="Newtonsoft.Json.Serialization.JsonMemberMapping.JsonMemberMapping(string, System.Reflection.MemberInfo, bool, bool, bool, Newtonsoft.Json.JsonConverter, object, bool, bool, Newtonsoft.Json.NullValueHandling?, Newtonsoft.Json.DefaultValueHandling?, Newtonsoft.Json.ReferenceLoopHandling?)", file="JsonMemberMapping.cs"];
m5_8 [label="_required = required", span="71-71", cluster="Newtonsoft.Json.Serialization.JsonMemberMapping.JsonMemberMapping(string, System.Reflection.MemberInfo, bool, bool, bool, Newtonsoft.Json.JsonConverter, object, bool, bool, Newtonsoft.Json.NullValueHandling?, Newtonsoft.Json.DefaultValueHandling?, Newtonsoft.Json.ReferenceLoopHandling?)", file="JsonMemberMapping.cs"];
m5_9 [label="_isReference = isReference", span="72-72", cluster="Newtonsoft.Json.Serialization.JsonMemberMapping.JsonMemberMapping(string, System.Reflection.MemberInfo, bool, bool, bool, Newtonsoft.Json.JsonConverter, object, bool, bool, Newtonsoft.Json.NullValueHandling?, Newtonsoft.Json.DefaultValueHandling?, Newtonsoft.Json.ReferenceLoopHandling?)", file="JsonMemberMapping.cs"];
m5_10 [label="_nullValueHandling = nullValueHandling", span="73-73", cluster="Newtonsoft.Json.Serialization.JsonMemberMapping.JsonMemberMapping(string, System.Reflection.MemberInfo, bool, bool, bool, Newtonsoft.Json.JsonConverter, object, bool, bool, Newtonsoft.Json.NullValueHandling?, Newtonsoft.Json.DefaultValueHandling?, Newtonsoft.Json.ReferenceLoopHandling?)", file="JsonMemberMapping.cs"];
m5_11 [label="_defaultValueHandling = defaultValueHandling", span="74-74", cluster="Newtonsoft.Json.Serialization.JsonMemberMapping.JsonMemberMapping(string, System.Reflection.MemberInfo, bool, bool, bool, Newtonsoft.Json.JsonConverter, object, bool, bool, Newtonsoft.Json.NullValueHandling?, Newtonsoft.Json.DefaultValueHandling?, Newtonsoft.Json.ReferenceLoopHandling?)", file="JsonMemberMapping.cs"];
m5_12 [label="_referenceLoopHandling = referenceLoopHandling", span="75-75", cluster="Newtonsoft.Json.Serialization.JsonMemberMapping.JsonMemberMapping(string, System.Reflection.MemberInfo, bool, bool, bool, Newtonsoft.Json.JsonConverter, object, bool, bool, Newtonsoft.Json.NullValueHandling?, Newtonsoft.Json.DefaultValueHandling?, Newtonsoft.Json.ReferenceLoopHandling?)", file="JsonMemberMapping.cs"];
m5_13 [label="Exit Newtonsoft.Json.Serialization.JsonMemberMapping.JsonMemberMapping(string, System.Reflection.MemberInfo, bool, bool, bool, Newtonsoft.Json.JsonConverter, object, bool, bool, Newtonsoft.Json.NullValueHandling?, Newtonsoft.Json.DefaultValueHandling?, Newtonsoft.Json.ReferenceLoopHandling?)", span="62-62", cluster="Newtonsoft.Json.Serialization.JsonMemberMapping.JsonMemberMapping(string, System.Reflection.MemberInfo, bool, bool, bool, Newtonsoft.Json.JsonConverter, object, bool, bool, Newtonsoft.Json.NullValueHandling?, Newtonsoft.Json.DefaultValueHandling?, Newtonsoft.Json.ReferenceLoopHandling?)", file="JsonMemberMapping.cs"];
m5_14 [label="Newtonsoft.Json.Serialization.JsonMemberMapping", span="", file="JsonMemberMapping.cs"];
m6_632 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", span="1345-1345", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs"];
m6_633 [label="GenericListAndDictionaryInterfaceProperties o = new GenericListAndDictionaryInterfaceProperties()", span="1347-1347", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs"];
m6_634 [label="o.IDictionaryProperty = new Dictionary<string, int>\r\n                                {\r\n                                  {''one'', 1},\r\n                                  {''two'', 2},\r\n                                  {''three'', 3}\r\n                                }", span="1348-1353", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs"];
m6_635 [label="o.IListProperty = new List<int>\r\n                          {\r\n                            1, 2, 3\r\n                          }", span="1354-1357", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs"];
m6_636 [label="o.IEnumerableProperty = new List<int>\r\n                                {\r\n                                  4, 5, 6\r\n                                }", span="1358-1361", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs"];
m6_637 [label="string json = JsonConvert.SerializeObject(o, Formatting.Indented)", span="1363-1363", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs"];
m6_641 [label="CollectionAssert.AreEqual(o.IListProperty.ToArray(), deserializedObject.IListProperty.ToArray())", span="1386-1386", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs"];
m6_642 [label="CollectionAssert.AreEqual(o.IEnumerableProperty.ToArray(), deserializedObject.IEnumerableProperty.ToArray())", span="1387-1387", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs"];
m6_643 [label="CollectionAssert.AreEqual(o.IDictionaryProperty.ToArray(), deserializedObject.IDictionaryProperty.ToArray())", span="1388-1388", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs"];
m6_638 [label="Assert.AreEqual(@''{\r\n  ''''IEnumerableProperty'''': [\r\n    4,\r\n    5,\r\n    6\r\n  ],\r\n  ''''IListProperty'''': [\r\n    1,\r\n    2,\r\n    3\r\n  ],\r\n  ''''IDictionaryProperty'''': {\r\n    ''''one'''': 1,\r\n    ''''two'''': 2,\r\n    ''''three'''': 3\r\n  }\r\n}'', json)", span="1365-1381", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs"];
m6_639 [label="GenericListAndDictionaryInterfaceProperties deserializedObject = JsonConvert.DeserializeObject<GenericListAndDictionaryInterfaceProperties>(json)", span="1383-1383", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs"];
m6_640 [label="Assert.IsNotNull(deserializedObject)", span="1384-1384", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs"];
m6_644 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", span="1345-1345", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs"];
m6_420 [label="Entry Newtonsoft.Json.Tests.TestObjects.ConverterPrecedenceClass.ConverterPrecedenceClass(string)", span="32-32", cluster="Newtonsoft.Json.Tests.TestObjects.ConverterPrecedenceClass.ConverterPrecedenceClass(string)", file="JsonSerializerTest.cs"];
m6_805 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.SerializeReferenceInDictionary()", span="1849-1849", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeReferenceInDictionary()", file="JsonSerializerTest.cs"];
m6_806 [label="Employee e1 = new Employee {Name = ''e1''}", span="1851-1851", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeReferenceInDictionary()", file="JsonSerializerTest.cs"];
m6_807 [label="Employee e2 = new Employee {Name = ''e2''}", span="1852-1852", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeReferenceInDictionary()", file="JsonSerializerTest.cs"];
m6_808 [label="Dictionary<string, Employee> employees = new Dictionary<string, Employee>\r\n        {\r\n          {''One'', e1},\r\n          {''Two'', e2},\r\n          {''Three'', e1},\r\n          {''Four'', e2}\r\n        }", span="1854-1860", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeReferenceInDictionary()", file="JsonSerializerTest.cs"];
m6_809 [label="string json = JsonConvert.SerializeObject(employees, Formatting.Indented)", span="1862-1862", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeReferenceInDictionary()", file="JsonSerializerTest.cs"];
m6_810 [label="Assert.AreEqual(@''{\r\n  ''''One'''': {\r\n    ''''$id'''': ''''1'''',\r\n    ''''Name'''': ''''e1'''',\r\n    ''''Manager'''': null\r\n  },\r\n  ''''Two'''': {\r\n    ''''$id'''': ''''2'''',\r\n    ''''Name'''': ''''e2'''',\r\n    ''''Manager'''': null\r\n  },\r\n  ''''Three'''': {\r\n    ''''$ref'''': ''''1''''\r\n  },\r\n  ''''Four'''': {\r\n    ''''$ref'''': ''''2''''\r\n  }\r\n}'', json)", span="1864-1881", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeReferenceInDictionary()", file="JsonSerializerTest.cs"];
m6_811 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.SerializeReferenceInDictionary()", span="1849-1849", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeReferenceInDictionary()", file="JsonSerializerTest.cs"];
m6_119 [label="Entry Newtonsoft.Json.Linq.JToken.Children()", span="272-272", cluster="Newtonsoft.Json.Linq.JToken.Children()", file="JsonSerializerTest.cs"];
m6_149 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.ReadOnlyCollectionSerialize()", span="397-397", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ReadOnlyCollectionSerialize()", file="JsonSerializerTest.cs"];
m6_150 [label="ReadOnlyCollection<int> r1 = new ReadOnlyCollection<int>(new int[] { 0, 1, 2, 3, 4 })", span="399-399", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ReadOnlyCollectionSerialize()", file="JsonSerializerTest.cs"];
m6_151 [label="string jsonText = JsonConvert.SerializeObject(r1)", span="401-401", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ReadOnlyCollectionSerialize()", file="JsonSerializerTest.cs"];
m6_153 [label="CollectionAssert.AreEqual(r1, r2)", span="405-405", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ReadOnlyCollectionSerialize()", file="JsonSerializerTest.cs"];
m6_152 [label="ReadOnlyCollection<int> r2 = JsonConvert.DeserializeObject<ReadOnlyCollection<int>>(jsonText)", span="403-403", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ReadOnlyCollectionSerialize()", file="JsonSerializerTest.cs"];
m6_154 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.ReadOnlyCollectionSerialize()", span="397-397", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ReadOnlyCollectionSerialize()", file="JsonSerializerTest.cs"];
m6_710 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.OptInClass.OptInClass()", span="1526-1526", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.OptInClass.OptInClass()", file="JsonSerializerTest.cs"];
m6_472 [label="Entry Newtonsoft.Json.Tests.TestObjects.GenericImpl.GenericImpl()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.GenericImpl.GenericImpl()", file="JsonSerializerTest.cs"];
m6_220 [label="Entry System.IO.StreamReader.ReadToEnd()", span="0-0", cluster="System.IO.StreamReader.ReadToEnd()", file="JsonSerializerTest.cs"];
m6_577 [label="Entry Newtonsoft.Json.Tests.TestObjects.JaggedArray.JaggedArray()", span="7-7", cluster="Newtonsoft.Json.Tests.TestObjects.JaggedArray.JaggedArray()", file="JsonSerializerTest.cs"];
m6_65 [label="Entry Newtonsoft.Json.Tests.TestObjects.MethodExecutorObject.MethodExecutorObject()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.MethodExecutorObject.MethodExecutorObject()", file="JsonSerializerTest.cs"];
m6_421 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", span="837-837", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonSerializerTest.cs"];
m6_422 [label="ConverterPrecedenceClass c1 = new ConverterPrecedenceClass(''!Test!'')", span="839-839", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonSerializerTest.cs"];
m6_423 [label="string json = JsonConvert.SerializeObject(c1, new ArgumentConverterPrecedenceClassConverter())", span="841-841", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonSerializerTest.cs"];
m6_424 [label="Assert.AreEqual(@''[''''Class'''',''''!Test!'''']'', json)", span="842-842", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonSerializerTest.cs"];
m6_425 [label="ConverterPrecedenceClass c2 = JsonConvert.DeserializeObject<ConverterPrecedenceClass>(json, new ArgumentConverterPrecedenceClassConverter())", span="844-844", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonSerializerTest.cs"];
m6_426 [label="Assert.AreEqual(''!Test!'', c2.TestValue)", span="846-846", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonSerializerTest.cs"];
m6_427 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", span="837-837", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonSerializerTest.cs"];
m6_366 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.EnumTest()", span="739-739", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.EnumTest()", file="JsonSerializerTest.cs"];
m6_367 [label="string json = JsonConvert.SerializeObject(StringComparison.CurrentCultureIgnoreCase)", span="741-741", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.EnumTest()", file="JsonSerializerTest.cs"];
m6_368 [label="Assert.AreEqual(@''1'', json)", span="742-742", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.EnumTest()", file="JsonSerializerTest.cs"];
m6_369 [label="StringComparison s = JsonConvert.DeserializeObject<StringComparison>(json)", span="744-744", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.EnumTest()", file="JsonSerializerTest.cs"];
m6_370 [label="Assert.AreEqual(StringComparison.CurrentCultureIgnoreCase, s)", span="745-745", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.EnumTest()", file="JsonSerializerTest.cs"];
m6_371 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.EnumTest()", span="739-739", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.EnumTest()", file="JsonSerializerTest.cs"];
m6_452 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", span="880-880", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs"];
m6_453 [label="ClassAndMemberConverterClass c1 = new ClassAndMemberConverterClass()", span="882-882", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs"];
m6_454 [label="c1.DefaultConverter = new ConverterPrecedenceClass(''DefaultConverterValue'')", span="883-883", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs"];
m6_455 [label="c1.MemberConverter = new ConverterPrecedenceClass(''MemberConverterValue'')", span="884-884", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs"];
m6_456 [label="string json = JsonConvert.SerializeObject(c1, new ArgumentConverterPrecedenceClassConverter())", span="886-886", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs"];
m6_457 [label="Assert.AreEqual(@''{''''DefaultConverter'''':[''''Class'''',''''DefaultConverterValue''''],''''MemberConverter'''':[''''Member'''',''''MemberConverterValue'''']}'', json)", span="887-887", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs"];
m6_458 [label="ClassAndMemberConverterClass c2 = JsonConvert.DeserializeObject<ClassAndMemberConverterClass>(json, new ArgumentConverterPrecedenceClassConverter())", span="889-889", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs"];
m6_459 [label="Assert.AreEqual(''DefaultConverterValue'', c2.DefaultConverter.TestValue)", span="891-891", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs"];
m6_460 [label="Assert.AreEqual(''MemberConverterValue'', c2.MemberConverter.TestValue)", span="892-892", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs"];
m6_461 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", span="880-880", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs"];
m6_787 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.SerializeReferenceInList()", span="1785-1785", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeReferenceInList()", file="JsonSerializerTest.cs"];
m6_788 [label="Employee e1 = new Employee { Name = ''e1'' }", span="1787-1787", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeReferenceInList()", file="JsonSerializerTest.cs"];
m6_789 [label="Employee e2 = new Employee { Name = ''e2'' }", span="1788-1788", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeReferenceInList()", file="JsonSerializerTest.cs"];
m6_790 [label="List<Employee> employees = new List<Employee> { e1, e2, e1, e2 }", span="1790-1790", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeReferenceInList()", file="JsonSerializerTest.cs"];
m6_791 [label="string json = JsonConvert.SerializeObject(employees, Formatting.Indented)", span="1792-1792", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeReferenceInList()", file="JsonSerializerTest.cs"];
m6_792 [label="Assert.AreEqual(@''[\r\n  {\r\n    ''''$id'''': ''''1'''',\r\n    ''''Name'''': ''''e1'''',\r\n    ''''Manager'''': null\r\n  },\r\n  {\r\n    ''''$id'''': ''''2'''',\r\n    ''''Name'''': ''''e2'''',\r\n    ''''Manager'''': null\r\n  },\r\n  {\r\n    ''''$ref'''': ''''1''''\r\n  },\r\n  {\r\n    ''''$ref'''': ''''2''''\r\n  }\r\n]'', json)", span="1794-1811", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeReferenceInList()", file="JsonSerializerTest.cs"];
m6_793 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.SerializeReferenceInList()", span="1785-1785", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeReferenceInList()", file="JsonSerializerTest.cs"];
m6_620 [label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="360-360", cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="JsonSerializerTest.cs"];
m6_939 [label="Entry Newtonsoft.Json.Linq.JObject.FromObject(object, Newtonsoft.Json.JsonSerializer)", span="238-238", cluster="Newtonsoft.Json.Linq.JObject.FromObject(object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m6_711 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers()", span="1573-1573", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers()", file="JsonSerializerTest.cs"];
m6_712 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers()", span="1573-1573", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers()", file="JsonSerializerTest.cs"];
m6_829 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.CircularDictionary.CircularDictionary()", span="1919-1919", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CircularDictionary.CircularDictionary()", file="JsonSerializerTest.cs"];
m6_267 [label="Entry System.Text.StringBuilder.ToString()", span="0-0", cluster="System.Text.StringBuilder.ToString()", file="JsonSerializerTest.cs"];
m6_657 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.SuperKlass.SuperKlass()", span="1421-1421", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SuperKlass.SuperKlass()", file="JsonSerializerTest.cs"];
m6_658 [label="SuperProp = ''default superprop''", span="1421-1421", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SuperKlass.SuperKlass()", file="JsonSerializerTest.cs"];
m6_659 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.SuperKlass.SuperKlass()", span="1421-1421", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SuperKlass.SuperKlass()", file="JsonSerializerTest.cs"];
m6_794 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeReferenceInList()", span="1815-1815", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeReferenceInList()", file="JsonSerializerTest.cs"];
m6_795 [label="string json = @''[\r\n  {\r\n    ''''$id'''': ''''1'''',\r\n    ''''Name'''': ''''e1'''',\r\n    ''''Manager'''': null\r\n  },\r\n  {\r\n    ''''$id'''': ''''2'''',\r\n    ''''Name'''': ''''e2'''',\r\n    ''''Manager'''': null\r\n  },\r\n  {\r\n    ''''$ref'''': ''''1''''\r\n  },\r\n  {\r\n    ''''$ref'''': ''''2''''\r\n  }\r\n]''", span="1817-1834", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeReferenceInList()", file="JsonSerializerTest.cs"];
m6_796 [label="List<Employee> employees = JsonConvert.DeserializeObject<List<Employee>>(json)", span="1836-1836", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeReferenceInList()", file="JsonSerializerTest.cs"];
m6_797 [label="Assert.AreEqual(4, employees.Count)", span="1837-1837", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeReferenceInList()", file="JsonSerializerTest.cs"];
m6_798 [label="Assert.AreEqual(''e1'', employees[0].Name)", span="1839-1839", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeReferenceInList()", file="JsonSerializerTest.cs"];
m6_799 [label="Assert.AreEqual(''e2'', employees[1].Name)", span="1840-1840", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeReferenceInList()", file="JsonSerializerTest.cs"];
m6_800 [label="Assert.AreEqual(''e1'', employees[2].Name)", span="1841-1841", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeReferenceInList()", file="JsonSerializerTest.cs"];
m6_801 [label="Assert.AreEqual(''e2'', employees[3].Name)", span="1842-1842", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeReferenceInList()", file="JsonSerializerTest.cs"];
m6_802 [label="Assert.AreEqual(employees[0], employees[2])", span="1844-1844", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeReferenceInList()", file="JsonSerializerTest.cs"];
m6_803 [label="Assert.AreEqual(employees[1], employees[3])", span="1845-1845", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeReferenceInList()", file="JsonSerializerTest.cs"];
m6_804 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeReferenceInList()", span="1815-1815", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeReferenceInList()", file="JsonSerializerTest.cs"];
m6_117 [label="Entry Newtonsoft.Json.Linq.JContainer.Children()", span="140-140", cluster="Newtonsoft.Json.Linq.JContainer.Children()", file="JsonSerializerTest.cs"];
m6_337 [label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="JsonSerializerTest.cs"];
m6_500 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.SerializeJsonRaw()", span="966-966", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeJsonRaw()", file="JsonSerializerTest.cs"];
m6_501 [label="PersonRaw personRaw = new PersonRaw\r\n      {\r\n        FirstName = ''FirstNameValue'',\r\n        RawContent = new JsonRaw(''[1,2,3,4,5]''),\r\n        LastName = ''LastNameValue''\r\n      }", span="968-973", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeJsonRaw()", file="JsonSerializerTest.cs"];
m6_502 [label="string json", span="975-975", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeJsonRaw()", file="JsonSerializerTest.cs"];
m6_503 [label="json = JsonConvert.SerializeObject(personRaw)", span="977-977", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeJsonRaw()", file="JsonSerializerTest.cs"];
m6_504 [label="Assert.AreEqual(@''{''''first_name'''':''''FirstNameValue'''',''''RawContent'''':[1,2,3,4,5],''''last_name'''':''''LastNameValue''''}'', json)", span="978-978", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeJsonRaw()", file="JsonSerializerTest.cs"];
m6_505 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.SerializeJsonRaw()", span="966-966", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeJsonRaw()", file="JsonSerializerTest.cs"];
m6_858 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.CircularList.CircularList()", span="1998-1998", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CircularList.CircularList()", file="JsonSerializerTest.cs"];
m6_238 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="JsonSerializerTest.cs"];
m6_319 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(System.IO.TextReader, System.Type)", span="318-318", cluster="Newtonsoft.Json.JsonSerializer.Deserialize(System.IO.TextReader, System.Type)", file="JsonSerializerTest.cs"];
m6_80 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", span="193-193", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonSerializerTest.cs"];
m6_81 [label="string value = JsonConvert.SerializeObject(new GetOnlyPropertyClass())", span="195-195", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonSerializerTest.cs"];
m6_82 [label="GetOnlyPropertyClass c = JsonConvert.DeserializeObject<GetOnlyPropertyClass>(value)", span="197-197", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonSerializerTest.cs"];
m6_83 [label="Assert.AreEqual(c.Field, ''Field'')", span="199-199", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonSerializerTest.cs"];
m6_84 [label="Assert.AreEqual(c.GetOnlyProperty, ''GetOnlyProperty'')", span="200-200", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonSerializerTest.cs"];
m6_85 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", span="193-193", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonSerializerTest.cs"];
m6_347 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.SerializeStack()", span="715-715", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs"];
m6_348 [label="Stack<object> s = new Stack<object>()", span="717-717", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs"];
m6_349 [label="s.Push(1)", span="718-718", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs"];
m6_350 [label="s.Push(2)", span="719-719", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs"];
m6_351 [label="s.Push(3)", span="720-720", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs"];
m6_352 [label="string json = JsonConvert.SerializeObject(s)", span="722-722", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs"];
m6_353 [label="Assert.AreEqual(''[3,2,1]'', json)", span="723-723", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs"];
m6_354 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.SerializeStack()", span="715-715", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs"];
m6_565 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", span="1095-1095", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonSerializerTest.cs"];
m6_566 [label="string json = @''{\r\n  ''''FirstName'''': ''''Bob''''\r\n}''", span="1097-1099", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonSerializerTest.cs"];
m6_567 [label="JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="1101-1101", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonSerializerTest.cs"];
m6_568 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", span="1095-1095", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonSerializerTest.cs"];
m6_265 [label="Entry Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", span="349-349", cluster="Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", file="JsonSerializerTest.cs"];
m6_73 [label="Entry object.ToString()", span="0-0", cluster="object.ToString()", file="JsonSerializerTest.cs"];
m6_291 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", span="638-638", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs"];
m6_292 [label="string json = ''{foo:'hello',bar:[1,2,3]}''", span="640-640", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs"];
m6_293 [label="ClassWithArray wibble = JsonConvert.DeserializeObject<ClassWithArray>(json)", span="641-641", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs"];
m6_294 [label="Assert.AreEqual(''hello'', wibble.Foo)", span="642-642", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs"];
m6_295 [label="Assert.AreEqual(4, wibble.Bar.Count)", span="644-644", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs"];
m6_296 [label="Assert.AreEqual(int.MaxValue, wibble.Bar[0])", span="645-645", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs"];
m6_297 [label="Assert.AreEqual(1, wibble.Bar[1])", span="646-646", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs"];
m6_298 [label="Assert.AreEqual(2, wibble.Bar[2])", span="647-647", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs"];
m6_299 [label="Assert.AreEqual(3, wibble.Bar[3])", span="648-648", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs"];
m6_300 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", span="638-638", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs"];
m6_938 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="JsonSerializerTest.cs"];
m6_485 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.SerializeInvoice()", span="931-931", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeInvoice()", file="JsonSerializerTest.cs"];
m6_486 [label="Invoice invoice = new Invoice\r\n                        {\r\n                          Company = ''Acme Ltd.'',\r\n                          Amount = 50.0m,\r\n                          Paid = false\r\n                        }", span="933-938", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeInvoice()", file="JsonSerializerTest.cs"];
m6_487 [label="string json = JsonConvert.SerializeObject(invoice)", span="940-940", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeInvoice()", file="JsonSerializerTest.cs"];
m6_489 [label="json = JsonConvert.SerializeObject(invoice,\r\n        Formatting.None,\r\n        new JsonSerializerSettings { DefaultValueHandling = DefaultValueHandling.Ignore })", span="945-947", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeInvoice()", file="JsonSerializerTest.cs"];
m6_488 [label="Console.WriteLine(json)", span="942-942", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeInvoice()", file="JsonSerializerTest.cs"];
m6_490 [label="Console.WriteLine(json)", span="949-949", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeInvoice()", file="JsonSerializerTest.cs"];
m6_491 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.SerializeInvoice()", span="931-931", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeInvoice()", file="JsonSerializerTest.cs"];
m6_148 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="JsonSerializerTest.cs"];
m6_745 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.PopulateDictionary()", span="1647-1647", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PopulateDictionary()", file="JsonSerializerTest.cs"];
m6_746 [label="Dictionary<string, string> p = new Dictionary<string, string>()", span="1649-1649", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PopulateDictionary()", file="JsonSerializerTest.cs"];
m6_747 [label="JsonSerializer serializer = new JsonSerializer()", span="1651-1651", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PopulateDictionary()", file="JsonSerializerTest.cs"];
m6_748 [label="serializer.Populate(new StringReader(@''{''''Name'''':''''James''''}''), p)", span="1652-1652", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PopulateDictionary()", file="JsonSerializerTest.cs"];
m6_749 [label="Assert.AreEqual(1, p.Count)", span="1654-1654", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PopulateDictionary()", file="JsonSerializerTest.cs"];
m6_750 [label="Assert.AreEqual(''James'', p[''Name''])", span="1655-1655", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PopulateDictionary()", file="JsonSerializerTest.cs"];
m6_751 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.PopulateDictionary()", span="1647-1647", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PopulateDictionary()", file="JsonSerializerTest.cs"];
m6_282 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.SerializeObject()", span="624-624", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeObject()", file="JsonSerializerTest.cs"];
m6_283 [label="string json = JsonConvert.SerializeObject(new object())", span="626-626", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeObject()", file="JsonSerializerTest.cs"];
m6_284 [label="Assert.AreEqual(''{}'', json)", span="627-627", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeObject()", file="JsonSerializerTest.cs"];
m6_285 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.SerializeObject()", span="624-624", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeObject()", file="JsonSerializerTest.cs"];
m6_135 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.InheritedListSerialize()", span="379-379", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.InheritedListSerialize()", file="JsonSerializerTest.cs"];
m6_136 [label="Article a1 = new Article(''a1'')", span="381-381", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.InheritedListSerialize()", file="JsonSerializerTest.cs"];
m6_137 [label="Article a2 = new Article(''a2'')", span="382-382", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.InheritedListSerialize()", file="JsonSerializerTest.cs"];
m6_139 [label="articles1.Add(a1)", span="385-385", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.InheritedListSerialize()", file="JsonSerializerTest.cs"];
m6_138 [label="ArticleCollection articles1 = new ArticleCollection()", span="384-384", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.InheritedListSerialize()", file="JsonSerializerTest.cs"];
m6_140 [label="articles1.Add(a2)", span="386-386", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.InheritedListSerialize()", file="JsonSerializerTest.cs"];
m6_141 [label="string jsonText = JsonConvert.SerializeObject(articles1)", span="388-388", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.InheritedListSerialize()", file="JsonSerializerTest.cs"];
m6_143 [label="Assert.AreEqual(articles1.Count, articles2.Count)", span="392-392", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.InheritedListSerialize()", file="JsonSerializerTest.cs"];
m6_144 [label="Assert.AreEqual(articles1[0].Name, articles2[0].Name)", span="393-393", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.InheritedListSerialize()", file="JsonSerializerTest.cs"];
m6_142 [label="ArticleCollection articles2 = JsonConvert.DeserializeObject<ArticleCollection>(jsonText)", span="390-390", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.InheritedListSerialize()", file="JsonSerializerTest.cs"];
m6_145 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.InheritedListSerialize()", span="379-379", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.InheritedListSerialize()", file="JsonSerializerTest.cs"];
m6_186 [label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="227-227", cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonSerializerTest.cs"];
m6_428 [label="Entry Newtonsoft.Json.Tests.TestObjects.ArgumentConverterPrecedenceClassConverter.ArgumentConverterPrecedenceClassConverter()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.ArgumentConverterPrecedenceClassConverter.ArgumentConverterPrecedenceClassConverter()", file="JsonSerializerTest.cs"];
m6_266 [label="Entry System.IO.StringWriter.GetStringBuilder()", span="0-0", cluster="System.IO.StringWriter.GetStringBuilder()", file="JsonSerializerTest.cs"];
m6_380 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.SerializeArrayAsArrayList()", span="763-763", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeArrayAsArrayList()", file="JsonSerializerTest.cs"];
m6_381 [label="string jsonText = @''[3, ''''somestring'''',[1,2,3],{}]''", span="765-765", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeArrayAsArrayList()", file="JsonSerializerTest.cs"];
m6_382 [label="ArrayList o = JsonConvert.DeserializeObject<ArrayList>(jsonText)", span="766-766", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeArrayAsArrayList()", file="JsonSerializerTest.cs"];
m6_383 [label="Assert.AreEqual(4, o.Count)", span="768-768", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeArrayAsArrayList()", file="JsonSerializerTest.cs"];
m6_384 [label="Assert.AreEqual(3, ((JArray)o[2]).Count)", span="769-769", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeArrayAsArrayList()", file="JsonSerializerTest.cs"];
m6_385 [label="Assert.AreEqual(0, ((JObject)o[3]).Count)", span="770-770", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeArrayAsArrayList()", file="JsonSerializerTest.cs"];
m6_386 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.SerializeArrayAsArrayList()", span="763-763", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeArrayAsArrayList()", file="JsonSerializerTest.cs"];
m6_87 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="541-541", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="JsonSerializerTest.cs"];
m6_473 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DefaultValueAttributeTest()", span="911-911", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DefaultValueAttributeTest()", file="JsonSerializerTest.cs"];
m6_474 [label="string json = JsonConvert.SerializeObject(new DefaultValueAttributeTestClass(),\r\n        Formatting.None, new JsonSerializerSettings { DefaultValueHandling = DefaultValueHandling.Ignore })", span="913-914", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DefaultValueAttributeTest()", file="JsonSerializerTest.cs"];
m6_475 [label="Assert.AreEqual(@''{''''TestField1'''':0,''''TestProperty1'''':null}'', json)", span="915-915", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DefaultValueAttributeTest()", file="JsonSerializerTest.cs"];
m6_476 [label="json = JsonConvert.SerializeObject(new DefaultValueAttributeTestClass { TestField1 = int.MinValue, TestProperty1 = ''NotDefault'' },\r\n        Formatting.None, new JsonSerializerSettings { DefaultValueHandling = DefaultValueHandling.Ignore })", span="917-918", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DefaultValueAttributeTest()", file="JsonSerializerTest.cs"];
m6_477 [label="Assert.AreEqual(@''{''''TestField1'''':-2147483648,''''TestProperty1'''':''''NotDefault''''}'', json)", span="919-919", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DefaultValueAttributeTest()", file="JsonSerializerTest.cs"];
m6_478 [label="json = JsonConvert.SerializeObject(new DefaultValueAttributeTestClass { TestField1 = 21, TestProperty1 = ''NotDefault'' },\r\n        Formatting.None, new JsonSerializerSettings { DefaultValueHandling = DefaultValueHandling.Ignore })", span="921-922", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DefaultValueAttributeTest()", file="JsonSerializerTest.cs"];
m6_479 [label="Assert.AreEqual(@''{''''TestProperty1'''':''''NotDefault''''}'', json)", span="923-923", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DefaultValueAttributeTest()", file="JsonSerializerTest.cs"];
m6_480 [label="json = JsonConvert.SerializeObject(new DefaultValueAttributeTestClass { TestField1 = 21, TestProperty1 = ''TestProperty1Value'' },\r\n        Formatting.None, new JsonSerializerSettings { DefaultValueHandling = DefaultValueHandling.Ignore })", span="925-926", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DefaultValueAttributeTest()", file="JsonSerializerTest.cs"];
m6_481 [label="Assert.AreEqual(@''{}'', json)", span="927-927", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DefaultValueAttributeTest()", file="JsonSerializerTest.cs"];
m6_482 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.DefaultValueAttributeTest()", span="911-911", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DefaultValueAttributeTest()", file="JsonSerializerTest.cs"];
m6_645 [label="Entry Newtonsoft.Json.Tests.TestObjects.GenericListAndDictionaryInterfaceProperties.GenericListAndDictionaryInterfaceProperties()", span="7-7", cluster="Newtonsoft.Json.Tests.TestObjects.GenericListAndDictionaryInterfaceProperties.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs"];
m6_844 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionarysWithPreserveObjectReferences()", span="1974-1974", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionarysWithPreserveObjectReferences()", file="JsonSerializerTest.cs"];
m6_845 [label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''other'''': {\r\n    ''''$id'''': ''''2'''',\r\n    ''''blah'''': null\r\n  },\r\n  ''''self'''': {\r\n    ''''$ref'''': ''''1''''\r\n  }\r\n}''", span="1976-1985", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionarysWithPreserveObjectReferences()", file="JsonSerializerTest.cs"];
m6_846 [label="CircularDictionary circularDictionary = JsonConvert.DeserializeObject<CircularDictionary>(json,\r\n        new JsonSerializerSettings\r\n          {\r\n            PreserveReferencesHandling = PreserveReferencesHandling.All\r\n          })", span="1987-1991", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionarysWithPreserveObjectReferences()", file="JsonSerializerTest.cs"];
m6_847 [label="Assert.AreEqual(2, circularDictionary.Count)", span="1993-1993", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionarysWithPreserveObjectReferences()", file="JsonSerializerTest.cs"];
m6_848 [label="Assert.AreEqual(1, circularDictionary[''other''].Count)", span="1994-1994", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionarysWithPreserveObjectReferences()", file="JsonSerializerTest.cs"];
m6_849 [label="Assert.AreEqual(circularDictionary, circularDictionary[''self''])", span="1995-1995", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionarysWithPreserveObjectReferences()", file="JsonSerializerTest.cs"];
m6_850 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionarysWithPreserveObjectReferences()", span="1974-1974", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionarysWithPreserveObjectReferences()", file="JsonSerializerTest.cs"];
m6_402 [label="Entry Newtonsoft.Json.Tests.TestObjects.PhoneNumber.PhoneNumber(string)", span="31-31", cluster="Newtonsoft.Json.Tests.TestObjects.PhoneNumber.PhoneNumber(string)", file="JsonSerializerTest.cs"];
m6_379 [label="Entry Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeOnClassTestClass.JsonIgnoreAttributeOnClassTestClass()", span="28-28", cluster="Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeOnClassTestClass.JsonIgnoreAttributeOnClassTestClass()", file="JsonSerializerTest.cs"];
m6_877 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeListsWithPreserveObjectReferences()", span="2077-2077", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeListsWithPreserveObjectReferences()", file="JsonSerializerTest.cs"];
m6_878 [label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$values'''': [\r\n    null,\r\n    {\r\n      ''''$id'''': ''''2'''',\r\n      ''''$values'''': [\r\n        null\r\n      ]\r\n    },\r\n    {\r\n      ''''$id'''': ''''3'''',\r\n      ''''$values'''': [\r\n        {\r\n          ''''$id'''': ''''4'''',\r\n          ''''$values'''': [\r\n            {\r\n              ''''$ref'''': ''''1''''\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}''", span="2079-2103", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeListsWithPreserveObjectReferences()", file="JsonSerializerTest.cs"];
m6_879 [label="CircularList circularList = JsonConvert.DeserializeObject<CircularList>(json,\r\n        new JsonSerializerSettings { PreserveReferencesHandling = PreserveReferencesHandling.All })", span="2105-2106", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeListsWithPreserveObjectReferences()", file="JsonSerializerTest.cs"];
m6_880 [label="Assert.AreEqual(3, circularList.Count)", span="2108-2108", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeListsWithPreserveObjectReferences()", file="JsonSerializerTest.cs"];
m6_881 [label="Assert.AreEqual(null, circularList[0])", span="2109-2109", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeListsWithPreserveObjectReferences()", file="JsonSerializerTest.cs"];
m6_882 [label="Assert.AreEqual(1, circularList[1].Count)", span="2110-2110", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeListsWithPreserveObjectReferences()", file="JsonSerializerTest.cs"];
m6_883 [label="Assert.AreEqual(1, circularList[2].Count)", span="2111-2111", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeListsWithPreserveObjectReferences()", file="JsonSerializerTest.cs"];
m6_884 [label="Assert.AreEqual(1, circularList[2][0].Count)", span="2112-2112", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeListsWithPreserveObjectReferences()", file="JsonSerializerTest.cs"];
m6_885 [label="Assert.IsTrue(ReferenceEquals(circularList, circularList[2][0][0]))", span="2113-2113", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeListsWithPreserveObjectReferences()", file="JsonSerializerTest.cs"];
m6_886 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeListsWithPreserveObjectReferences()", span="2077-2077", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeListsWithPreserveObjectReferences()", file="JsonSerializerTest.cs"];
m6_0 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.PersonTypedObjectDeserialization()", span="53-53", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m6_1 [label="Store store = new Store()", span="55-55", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m6_2 [label="string jsonText = JsonConvert.SerializeObject(store)", span="57-57", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m6_4 [label="Assert.AreEqual(store.Establised, deserializedStore.Establised)", span="61-61", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m6_3 [label="Store deserializedStore = (Store)JsonConvert.DeserializeObject(jsonText, typeof(Store))", span="59-59", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m6_5 [label="Console.WriteLine(jsonText)", span="63-63", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m6_6 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.PersonTypedObjectDeserialization()", span="53-53", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m6_101 [label="Entry Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeTestClass.JsonIgnoreAttributeTestClass()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeTestClass.JsonIgnoreAttributeTestClass()", file="JsonSerializerTest.cs"];
m6_441 [label="Entry Newtonsoft.Json.Tests.TestObjects.MemberConverterClass.MemberConverterClass()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.MemberConverterClass.MemberConverterClass()", file="JsonSerializerTest.cs"];
m6_663 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", span="1431-1431", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs"];
m6_664 [label="SubKlass i = new SubKlass(''my subprop'')", span="1433-1433", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs"];
m6_665 [label="i.SuperProp = ''overrided superprop''", span="1434-1434", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs"];
m6_666 [label="string json = JsonConvert.SerializeObject(i)", span="1436-1436", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs"];
m6_667 [label="Assert.AreEqual(@''{''''SubProp'''':''''my subprop'''',''''SuperProp'''':''''overrided superprop''''}'', json)", span="1437-1437", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs"];
m6_668 [label="SubKlass ii = JsonConvert.DeserializeObject<SubKlass>(json)", span="1439-1439", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs"];
m6_669 [label="string newJson = JsonConvert.SerializeObject(ii)", span="1441-1441", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs"];
m6_670 [label="Assert.AreEqual(@''{''''SubProp'''':''''my subprop'''',''''SuperProp'''':''''overrided superprop''''}'', newJson)", span="1442-1442", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs"];
m6_671 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", span="1431-1431", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs"];
m6_698 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.OptInClassMetadataSerialization()", span="1544-1544", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs"];
m6_699 [label="OptInClass optInClass = new OptInClass()", span="1546-1546", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs"];
m6_700 [label="optInClass.Age = 26", span="1547-1547", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs"];
m6_701 [label="optInClass.Name = ''James NK''", span="1548-1548", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs"];
m6_702 [label="optInClass.NotIncluded = ''Poor me :(''", span="1549-1549", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs"];
m6_703 [label="string json = JsonConvert.SerializeObject(optInClass, Formatting.Indented)", span="1551-1551", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs"];
m6_704 [label="Assert.AreEqual(@''{\r\n  ''''Name'''': ''''James NK'''',\r\n  ''''Age'''': 26\r\n}'', json)", span="1553-1556", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs"];
m6_705 [label="OptInClass newOptInClass = JsonConvert.DeserializeObject<OptInClass>(@''{\r\n  ''''Name'''': ''''James NK'''',\r\n  ''''NotIncluded'''': ''''Ignore me!'''',\r\n  ''''Age'''': 26\r\n}'')", span="1558-1562", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs"];
m6_706 [label="Assert.AreEqual(26, newOptInClass.Age)", span="1563-1563", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs"];
m6_707 [label="Assert.AreEqual(''James NK'', newOptInClass.Name)", span="1564-1564", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs"];
m6_708 [label="Assert.AreEqual(null, newOptInClass.NotIncluded)", span="1565-1565", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs"];
m6_709 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.OptInClassMetadataSerialization()", span="1544-1544", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs"];
m6_108 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string)", span="519-519", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string)", file="JsonSerializerTest.cs"];
m6_722 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDataContractPrivateMembers()", span="1604-1604", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs"];
m6_723 [label="DataContractPrivateMembers c = new DataContractPrivateMembers(''Jeff'', 26, 10, ''Dr'')", span="1606-1606", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs"];
m6_724 [label="c.NotIncluded = ''Hi''", span="1607-1607", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs"];
m6_725 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="1608-1608", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs"];
m6_726 [label="Assert.AreEqual(@''{\r\n  ''''_name'''': ''''Jeff'''',\r\n  ''''_age'''': 26,\r\n  ''''Rank'''': 10,\r\n  ''''JsonTitle'''': ''''Dr''''\r\n}'', json)", span="1610-1615", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs"];
m6_727 [label="DataContractPrivateMembers cc = JsonConvert.DeserializeObject<DataContractPrivateMembers>(json)", span="1617-1617", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs"];
m6_728 [label="Assert.AreEqual(''_name: Jeff, _age: 26, Rank: 10, JsonTitle: Dr'', cc.ToString())", span="1618-1618", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs"];
m6_729 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDataContractPrivateMembers()", span="1604-1604", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs"];
m6_412 [label="Entry Newtonsoft.Json.Tests.TestObjects.ConstructorCaseSensitivityClass.ConstructorCaseSensitivityClass(string, string, string)", span="33-33", cluster="Newtonsoft.Json.Tests.TestObjects.ConstructorCaseSensitivityClass.ConstructorCaseSensitivityClass(string, string, string)", file="JsonSerializerTest.cs"];
m6_779 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeCircularReference()", span="1754-1754", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeCircularReference()", file="JsonSerializerTest.cs"];
m6_780 [label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''Name'''': ''''c1'''',\r\n  ''''Child'''': {\r\n    ''''$id'''': ''''2'''',\r\n    ''''Name'''': ''''c2'''',\r\n    ''''Child'''': {\r\n      ''''$id'''': ''''3'''',\r\n      ''''Name'''': ''''c3'''',\r\n      ''''Child'''': {\r\n        ''''$ref'''': ''''1''''\r\n      }\r\n    }\r\n  }\r\n}''", span="1756-1770", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeCircularReference()", file="JsonSerializerTest.cs"];
m6_781 [label="CircularReferenceClass c1 =\r\n        JsonConvert.DeserializeObject<CircularReferenceClass>(json, new JsonSerializerSettings\r\n                                                                                          {\r\n                                                                                            PreserveReferencesHandling = PreserveReferencesHandling.Objects\r\n                                                                                          })", span="1772-1776", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeCircularReference()", file="JsonSerializerTest.cs"];
m6_782 [label="Assert.AreEqual(''c1'', c1.Name)", span="1778-1778", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeCircularReference()", file="JsonSerializerTest.cs"];
m6_783 [label="Assert.AreEqual(''c2'', c1.Child.Name)", span="1779-1779", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeCircularReference()", file="JsonSerializerTest.cs"];
m6_784 [label="Assert.AreEqual(''c3'', c1.Child.Child.Name)", span="1780-1780", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeCircularReference()", file="JsonSerializerTest.cs"];
m6_785 [label="Assert.AreEqual(''c1'', c1.Child.Child.Child.Name)", span="1781-1781", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeCircularReference()", file="JsonSerializerTest.cs"];
m6_786 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeCircularReference()", span="1754-1754", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeCircularReference()", file="JsonSerializerTest.cs"];
m6_320 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeSerializedJson()", span="681-681", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs"];
m6_321 [label="ClassWithArray wibble = new ClassWithArray()", span="683-683", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs"];
m6_322 [label="wibble.Foo = ''hello''", span="684-684", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs"];
m6_323 [label="wibble.Bar.Add(1)", span="685-685", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs"];
m6_324 [label="wibble.Bar.Add(2)", span="686-686", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs"];
m6_325 [label="wibble.Bar.Add(3)", span="687-687", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs"];
m6_326 [label="string json = JsonConvert.SerializeObject(wibble)", span="688-688", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs"];
m6_327 [label="ClassWithArray wibbleOut = JsonConvert.DeserializeObject<ClassWithArray>(json)", span="690-690", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs"];
m6_328 [label="Assert.AreEqual(''hello'', wibbleOut.Foo)", span="691-691", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs"];
m6_329 [label="Assert.AreEqual(5, wibbleOut.Bar.Count)", span="693-693", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs"];
m6_330 [label="Assert.AreEqual(int.MaxValue, wibbleOut.Bar[0])", span="694-694", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs"];
m6_331 [label="Assert.AreEqual(int.MaxValue, wibbleOut.Bar[1])", span="695-695", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs"];
m6_332 [label="Assert.AreEqual(1, wibbleOut.Bar[2])", span="696-696", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs"];
m6_333 [label="Assert.AreEqual(2, wibbleOut.Bar[3])", span="697-697", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs"];
m6_334 [label="Assert.AreEqual(3, wibbleOut.Bar[4])", span="698-698", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs"];
m6_335 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeSerializedJson()", span="681-681", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs"];
m6_311 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.ObjectCreationHandlingReplace()", span="666-666", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs"];
m6_312 [label="string json = ''{bar:[1,2,3], foo:'hello'}''", span="668-668", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs"];
m6_313 [label="JsonSerializer s = new JsonSerializer()", span="670-670", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs"];
m6_315 [label="ClassWithArray wibble = (ClassWithArray)s.Deserialize(new StringReader(json), typeof(ClassWithArray))", span="673-673", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs"];
m6_314 [label="s.ObjectCreationHandling = ObjectCreationHandling.Replace", span="671-671", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs"];
m6_316 [label="Assert.AreEqual(''hello'', wibble.Foo)", span="675-675", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs"];
m6_317 [label="Assert.AreEqual(1, wibble.Bar.Count)", span="677-677", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs"];
m6_318 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.ObjectCreationHandlingReplace()", span="666-666", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs"];
m6_338 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.SerializeConverableObjects()", span="702-702", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs"];
m6_339 [label="string json = JsonConvert.SerializeObject(new ConverableMembers())", span="704-704", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs"];
m6_340 [label="Assert.AreEqual(@''{''''String'''':''''string'''',''''Int32'''':2147483647,''''UInt32'''':4294967295,''''Byte'''':255,''''SByte'''':127,''''Short'''':32767,''''UShort'''':65535,''''Long'''':9223372036854775807,''''ULong'''':9223372036854775807,''''Double'''':1.7976931348623157E+308,''''Float'''':3.40282347E+38,''''DBNull'''':null,''''Bool'''':true,''''Char'''':''''\u0000''''}'', json)", span="706-706", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs"];
m6_341 [label="ConverableMembers c = JsonConvert.DeserializeObject<ConverableMembers>(json)", span="708-708", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs"];
m6_342 [label="Assert.AreEqual(''string'', c.String)", span="709-709", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs"];
m6_343 [label="Assert.AreEqual(double.MaxValue, c.Double)", span="710-710", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs"];
m6_344 [label="Assert.AreEqual(DBNull.Value, c.DBNull)", span="711-711", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs"];
m6_345 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.SerializeConverableObjects()", span="702-702", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs"];
m6_216 [label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0", cluster="System.IO.MemoryStream.MemoryStream()", file="JsonSerializerTest.cs"];
m6_937 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(string)", span="106-106", cluster="Newtonsoft.Json.Linq.JValue.JValue(string)", file="JsonSerializerTest.cs"];
m6_940 [label="Entry Newtonsoft.Json.Linq.JObject.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", span="262-262", cluster="Newtonsoft.Json.Linq.JObject.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonSerializerTest.cs"];
m6_608 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.WriteJsonToFile()", span="1295-1295", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.WriteJsonToFile()", file="JsonSerializerTest.cs"];
m6_609 [label="Person person = GetPerson()", span="1303-1303", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.WriteJsonToFile()", file="JsonSerializerTest.cs"];
m6_610 [label="FileStream fs = File.Open(@''c:\person.json'', FileMode.CreateNew)", span="1305-1305", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.WriteJsonToFile()", file="JsonSerializerTest.cs"];
m6_615 [label="serializer.Serialize(jw, person)", span="1312-1312", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.WriteJsonToFile()", file="JsonSerializerTest.cs"];
m6_611 [label="StreamWriter sw = new StreamWriter(fs)", span="1306-1306", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.WriteJsonToFile()", file="JsonSerializerTest.cs"];
m6_612 [label="JsonWriter jw = new JsonTextWriter(sw)", span="1307-1307", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.WriteJsonToFile()", file="JsonSerializerTest.cs"];
m6_613 [label="jw.Formatting = Formatting.Indented", span="1309-1309", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.WriteJsonToFile()", file="JsonSerializerTest.cs"];
m6_614 [label="JsonSerializer serializer = new JsonSerializer()", span="1311-1311", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.WriteJsonToFile()", file="JsonSerializerTest.cs"];
m6_616 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.WriteJsonToFile()", span="1295-1295", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.WriteJsonToFile()", file="JsonSerializerTest.cs"];
m6_413 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseClassConverter()", span="824-824", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonSerializerTest.cs"];
m6_414 [label="ConverterPrecedenceClass c1 = new ConverterPrecedenceClass(''!Test!'')", span="826-826", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonSerializerTest.cs"];
m6_415 [label="string json = JsonConvert.SerializeObject(c1)", span="828-828", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonSerializerTest.cs"];
m6_416 [label="Assert.AreEqual(@''[''''Class'''',''''!Test!'''']'', json)", span="829-829", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonSerializerTest.cs"];
m6_417 [label="ConverterPrecedenceClass c2 = JsonConvert.DeserializeObject<ConverterPrecedenceClass>(json)", span="831-831", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonSerializerTest.cs"];
m6_418 [label="Assert.AreEqual(''!Test!'', c2.TestValue)", span="833-833", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonSerializerTest.cs"];
m6_419 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseClassConverter()", span="824-824", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonSerializerTest.cs"];
m6_492 [label="Entry Newtonsoft.Json.Tests.TestObjects.Invoice.Invoice()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.Invoice.Invoice()", file="JsonSerializerTest.cs"];
m6_556 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.RequiredMembersClass()", span="1068-1068", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs"];
m6_557 [label="RequiredMembersClass c = new RequiredMembersClass()\r\n                                 {\r\n                                   BirthDate = new DateTime(2000, 12, 20, 10, 55, 55, DateTimeKind.Utc),\r\n                                   FirstName = ''Bob'',\r\n                                   LastName = ''Smith'',\r\n                                   MiddleName = ''Cosmo''\r\n                                 }", span="1070-1076", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs"];
m6_558 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="1078-1078", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs"];
m6_559 [label="Assert.AreEqual(@''{\r\n  ''''FirstName'''': ''''Bob'''',\r\n  ''''MiddleName'''': ''''Cosmo'''',\r\n  ''''LastName'''': ''''Smith'''',\r\n  ''''BirthDate'''': ''''\/Date(977309755000)\/''''\r\n}'', json)", span="1080-1085", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs"];
m6_560 [label="RequiredMembersClass c2 = JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="1087-1087", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs"];
m6_561 [label="Assert.AreEqual(''Bob'', c2.FirstName)", span="1089-1089", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs"];
m6_562 [label="Assert.AreEqual(new DateTime(2000, 12, 20, 10, 55, 55, DateTimeKind.Utc), c2.BirthDate)", span="1090-1090", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs"];
m6_563 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.RequiredMembersClass()", span="1068-1068", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs"];
m6_109 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.TorrentDeserializeTest()", span="313-313", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs"];
m6_110 [label="string jsonText = @''{\r\n'''''''':'''''''',\r\n''''label'''': [\r\n       [''''SomeName'''',6]\r\n],\r\n''''torrents'''': [\r\n       [''''192D99A5C943555CB7F00A852821CF6D6DB3008A'''',201,''''filename.avi'''',178311826,1000,178311826,72815250,408,1603,7,121430,''''NameOfLabelPrevioslyDefined'''',3,6,0,8,128954,-1,0],\r\n],\r\n''''torrentc'''': ''''1816000723''''\r\n}''", span="315-324", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs"];
m6_111 [label="JObject o = (JObject)JsonConvert.DeserializeObject(jsonText)", span="326-326", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs"];
m6_112 [label="Assert.AreEqual(4, o.Children().Count())", span="327-327", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs"];
m6_113 [label="JToken torrentsArray = (JToken)o[''torrents'']", span="329-329", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs"];
m6_114 [label="JToken nestedTorrentsArray = (JToken)torrentsArray[0]", span="330-330", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs"];
m6_115 [label="Assert.AreEqual(nestedTorrentsArray.Children().Count(), 19)", span="331-331", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs"];
m6_116 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.TorrentDeserializeTest()", span="313-313", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs"];
m6_165 [label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="84-84", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonSerializerTest.cs"];
m6_1019 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeTypeNameWithNoTypeNameHandling()", span="2516-2516", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeTypeNameWithNoTypeNameHandling()", file="JsonSerializerTest.cs"];
m6_1020 [label="string employeeRef = typeof(Employee).AssemblyQualifiedName", span="2518-2518", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeTypeNameWithNoTypeNameHandling()", file="JsonSerializerTest.cs"];
m6_1021 [label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$type'''': '''''' + employeeRef + @'''''',\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Manager'''': null\r\n}''", span="2520-2525", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeTypeNameWithNoTypeNameHandling()", file="JsonSerializerTest.cs"];
m6_1022 [label="JObject o = (JObject)JsonConvert.DeserializeObject(json)", span="2527-2527", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeTypeNameWithNoTypeNameHandling()", file="JsonSerializerTest.cs"];
m6_1023 [label="Assert.AreEqual(@''{\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Manager'''': null\r\n}'', o.ToString())", span="2529-2532", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeTypeNameWithNoTypeNameHandling()", file="JsonSerializerTest.cs"];
m6_1024 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeTypeNameWithNoTypeNameHandling()", span="2516-2516", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeTypeNameWithNoTypeNameHandling()", file="JsonSerializerTest.cs"];
m6_952 [label="Entry Newtonsoft.Json.Linq.JToken.CreateReader()", span="768-768", cluster="Newtonsoft.Json.Linq.JToken.CreateReader()", file="JsonSerializerTest.cs"];
m6_924 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.CircularReferenceClassConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="2244-2244", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CircularReferenceClassConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m6_925 [label="CircularReferenceClass circularReferenceClass = (CircularReferenceClass) value", span="2246-2246", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CircularReferenceClassConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m6_926 [label="string reference = serializer.ReferenceResolver.GetReference(circularReferenceClass)", span="2248-2248", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CircularReferenceClassConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m6_929 [label="me[''$type''] = new JValue(value.GetType().Name)", span="2252-2252", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CircularReferenceClassConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m6_931 [label="JObject o = JObject.FromObject(circularReferenceClass.Child, serializer)", span="2255-2255", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CircularReferenceClassConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m6_933 [label="me.WriteTo(writer)", span="2258-2258", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CircularReferenceClassConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m6_930 [label="me[''Name''] = new JValue(circularReferenceClass.Name)", span="2253-2253", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CircularReferenceClassConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m6_927 [label="JObject me = new JObject()", span="2250-2250", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CircularReferenceClassConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m6_928 [label="me[''$id''] = new JValue(reference)", span="2251-2251", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CircularReferenceClassConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m6_932 [label="me[''Child''] = o", span="2256-2256", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CircularReferenceClassConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m6_934 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.CircularReferenceClassConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="2244-2244", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CircularReferenceClassConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m6_936 [label="Entry Newtonsoft.Json.Linq.JObject.JObject()", span="43-43", cluster="Newtonsoft.Json.Linq.JObject.JObject()", file="JsonSerializerTest.cs"];
m6_969 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeCircularReferencesWithConverter()", span="2322-2322", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeCircularReferencesWithConverter()", file="JsonSerializerTest.cs"];
m6_970 [label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$type'''': ''''CircularReferenceClass'''',\r\n  ''''Name'''': ''''c1'''',\r\n  ''''Child'''': {\r\n    ''''$id'''': ''''2'''',\r\n    ''''$type'''': ''''CircularReferenceClass'''',\r\n    ''''Name'''': ''''c2'''',\r\n    ''''Child'''': {\r\n      ''''$id'''': ''''3'''',\r\n      ''''$type'''': ''''CircularReferenceClass'''',\r\n      ''''Name'''': ''''c3'''',\r\n      ''''Child'''': {\r\n        ''''$ref'''': ''''1''''\r\n      }\r\n    }\r\n  }\r\n}''", span="2324-2341", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeCircularReferencesWithConverter()", file="JsonSerializerTest.cs"];
m6_971 [label="CircularReferenceClass c1 = JsonConvert.DeserializeObject<CircularReferenceClass>(json, new JsonSerializerSettings\r\n      {\r\n        PreserveReferencesHandling = PreserveReferencesHandling.Objects,\r\n        Converters = new List<JsonConverter> { new CircularReferenceClassConverter() }\r\n      })", span="2343-2347", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeCircularReferencesWithConverter()", file="JsonSerializerTest.cs"];
m6_972 [label="Assert.AreEqual(''c1'', c1.Name)", span="2349-2349", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeCircularReferencesWithConverter()", file="JsonSerializerTest.cs"];
m6_973 [label="Assert.AreEqual(''c2'', c1.Child.Name)", span="2350-2350", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeCircularReferencesWithConverter()", file="JsonSerializerTest.cs"];
m6_974 [label="Assert.AreEqual(''c3'', c1.Child.Child.Name)", span="2351-2351", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeCircularReferencesWithConverter()", file="JsonSerializerTest.cs"];
m6_975 [label="Assert.AreEqual(''c1'', c1.Child.Child.Child.Name)", span="2352-2352", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeCircularReferencesWithConverter()", file="JsonSerializerTest.cs"];
m6_976 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeCircularReferencesWithConverter()", span="2322-2322", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeCircularReferencesWithConverter()", file="JsonSerializerTest.cs"];
m6_977 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.WriteTypeNameForObjects()", span="2356-2356", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.WriteTypeNameForObjects()", file="JsonSerializerTest.cs"];
m6_978 [label="string employeeRef = typeof(Employee).AssemblyQualifiedName", span="2358-2358", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.WriteTypeNameForObjects()", file="JsonSerializerTest.cs"];
m6_979 [label="Employee employee = new Employee()", span="2360-2360", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.WriteTypeNameForObjects()", file="JsonSerializerTest.cs"];
m6_981 [label="Assert.AreEqual(@''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$type'''': '''''' + employeeRef + @'''''',\r\n  ''''Name'''': null,\r\n  ''''Manager'''': null\r\n}'', json)", span="2367-2372", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.WriteTypeNameForObjects()", file="JsonSerializerTest.cs"];
m6_980 [label="string json = JsonConvert.SerializeObject(employee, Formatting.Indented, new JsonSerializerSettings\r\n        {\r\n          TypeNameHandling = TypeNameHandling.Objects\r\n        })", span="2362-2365", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.WriteTypeNameForObjects()", file="JsonSerializerTest.cs"];
m6_982 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.WriteTypeNameForObjects()", span="2356-2356", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.WriteTypeNameForObjects()", file="JsonSerializerTest.cs"];
m6_543 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemeber()", span="1048-1048", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemeber()", file="JsonSerializerTest.cs"];
m6_544 [label="string json = @''{''''Missing'''':1}''", span="1050-1050", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemeber()", file="JsonSerializerTest.cs"];
m6_545 [label="JsonConvert.DeserializeObject<DoubleClass>(json, new JsonSerializerSettings { MissingMemberHandling = MissingMemberHandling.Error })", span="1052-1052", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemeber()", file="JsonSerializerTest.cs"];
m6_546 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemeber()", span="1048-1048", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemeber()", file="JsonSerializerTest.cs"];
m6_467 [label="Entry Newtonsoft.Json.Tests.TestObjects.IncompatibleJsonAttributeClass.IncompatibleJsonAttributeClass()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.IncompatibleJsonAttributeClass.IncompatibleJsonAttributeClass()", file="JsonSerializerTest.cs"];
m6_442 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", span="865-865", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs"];
m6_443 [label="DateTime testDate = new DateTime(JsonConvert.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="867-867", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs"];
m6_444 [label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="868-868", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs"];
m6_448 [label="Assert.AreEqual(testDate, m2.DefaultConverter)", span="875-875", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs"];
m6_449 [label="Assert.AreEqual(testDate, m2.MemberConverter)", span="876-876", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs"];
m6_445 [label="string json = JsonConvert.SerializeObject(m1, new JavaScriptDateTimeConverter())", span="870-870", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs"];
m6_446 [label="Assert.AreEqual(@''{''''DefaultConverter'''':new Date(0),''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="871-871", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs"];
m6_447 [label="MemberConverterClass m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json, new JavaScriptDateTimeConverter())", span="873-873", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs"];
m6_450 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", span="865-865", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs"];
m6_646 [label="Entry Unk.IsNotNull", span="", cluster="Unk.IsNotNull", file="JsonSerializerTest.cs"];
m6_958 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularReferencesWithConverter()", span="2285-2285", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularReferencesWithConverter()", file="JsonSerializerTest.cs"];
m6_959 [label="CircularReferenceClass c1 = new CircularReferenceClass { Name = ''c1'' }", span="2287-2287", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularReferencesWithConverter()", file="JsonSerializerTest.cs"];
m6_960 [label="CircularReferenceClass c2 = new CircularReferenceClass { Name = ''c2'' }", span="2288-2288", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularReferencesWithConverter()", file="JsonSerializerTest.cs"];
m6_962 [label="c1.Child = c2", span="2291-2291", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularReferencesWithConverter()", file="JsonSerializerTest.cs"];
m6_964 [label="c3.Child = c1", span="2293-2293", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularReferencesWithConverter()", file="JsonSerializerTest.cs"];
m6_965 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented, new JsonSerializerSettings\r\n      {\r\n        PreserveReferencesHandling = PreserveReferencesHandling.Objects,\r\n        Converters = new List<JsonConverter> { new CircularReferenceClassConverter() }\r\n      })", span="2295-2299", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularReferencesWithConverter()", file="JsonSerializerTest.cs"];
m6_961 [label="CircularReferenceClass c3 = new CircularReferenceClass { Name = ''c3'' }", span="2289-2289", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularReferencesWithConverter()", file="JsonSerializerTest.cs"];
m6_963 [label="c2.Child = c3", span="2292-2292", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularReferencesWithConverter()", file="JsonSerializerTest.cs"];
m6_966 [label="Assert.AreEqual(@''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$type'''': ''''CircularReferenceClass'''',\r\n  ''''Name'''': ''''c1'''',\r\n  ''''Child'''': {\r\n    ''''$id'''': ''''2'''',\r\n    ''''$type'''': ''''CircularReferenceClass'''',\r\n    ''''Name'''': ''''c2'''',\r\n    ''''Child'''': {\r\n      ''''$id'''': ''''3'''',\r\n      ''''$type'''': ''''CircularReferenceClass'''',\r\n      ''''Name'''': ''''c3'''',\r\n      ''''Child'''': {\r\n        ''''$ref'''': ''''1''''\r\n      }\r\n    }\r\n  }\r\n}'', json)", span="2301-2318", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularReferencesWithConverter()", file="JsonSerializerTest.cs"];
m6_967 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularReferencesWithConverter()", span="2285-2285", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularReferencesWithConverter()", file="JsonSerializerTest.cs"];
m6_228 [label="Entry System.TimeSpan.FromHours(double)", span="0-0", cluster="System.TimeSpan.FromHours(double)", file="JsonSerializerTest.cs"];
m6_528 [label="Entry Newtonsoft.Json.Tests.TestObjects.UserNullable.UserNullable()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.UserNullable.UserNullable()", file="JsonSerializerTest.cs"];
m6_768 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularReference()", span="1721-1721", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularReference()", file="JsonSerializerTest.cs"];
m6_769 [label="CircularReferenceClass c1 = new CircularReferenceClass {Name = ''c1''}", span="1723-1723", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularReference()", file="JsonSerializerTest.cs"];
m6_770 [label="CircularReferenceClass c2 = new CircularReferenceClass {Name = ''c2''}", span="1724-1724", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularReference()", file="JsonSerializerTest.cs"];
m6_772 [label="c1.Child = c2", span="1727-1727", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularReference()", file="JsonSerializerTest.cs"];
m6_774 [label="c3.Child = c1", span="1729-1729", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularReference()", file="JsonSerializerTest.cs"];
m6_775 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented, new JsonSerializerSettings\r\n        {\r\n          PreserveReferencesHandling = PreserveReferencesHandling.Objects\r\n        })", span="1731-1734", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularReference()", file="JsonSerializerTest.cs"];
m6_771 [label="CircularReferenceClass c3 = new CircularReferenceClass {Name = ''c3''}", span="1725-1725", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularReference()", file="JsonSerializerTest.cs"];
m6_773 [label="c2.Child = c3", span="1728-1728", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularReference()", file="JsonSerializerTest.cs"];
m6_776 [label="Assert.AreEqual(@''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''Name'''': ''''c1'''',\r\n  ''''Child'''': {\r\n    ''''$id'''': ''''2'''',\r\n    ''''Name'''': ''''c2'''',\r\n    ''''Child'''': {\r\n      ''''$id'''': ''''3'''',\r\n      ''''Name'''': ''''c3'''',\r\n      ''''Child'''': {\r\n        ''''$ref'''': ''''1''''\r\n      }\r\n    }\r\n  }\r\n}'', json)", span="1736-1750", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularReference()", file="JsonSerializerTest.cs"];
m6_777 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularReference()", span="1721-1721", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularReference()", file="JsonSerializerTest.cs"];
m6_682 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", span="1472-1472", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="JsonSerializerTest.cs"];
m6_683 [label="JsonPropertyWithHandlingValues o = new JsonPropertyWithHandlingValues()", span="1474-1474", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="JsonSerializerTest.cs"];
m6_684 [label="o.ReferenceLoopHandlingErrorProperty = o", span="1475-1475", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="JsonSerializerTest.cs"];
m6_685 [label="JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings { ReferenceLoopHandling = ReferenceLoopHandling.Ignore })", span="1477-1477", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="JsonSerializerTest.cs"];
m6_686 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", span="1472-1472", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="JsonSerializerTest.cs"];
m6_131 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.BadJsonPropertyClassSerialize()", span="373-373", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.BadJsonPropertyClassSerialize()", file="JsonSerializerTest.cs"];
m6_132 [label="JsonConvert.SerializeObject(new BadJsonPropertyClass())", span="375-375", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.BadJsonPropertyClassSerialize()", file="JsonSerializerTest.cs"];
m6_133 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.BadJsonPropertyClassSerialize()", span="373-373", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.BadJsonPropertyClassSerialize()", file="JsonSerializerTest.cs"];
m6_51 [label="Entry System.Console.WriteLine()", span="0-0", cluster="System.Console.WriteLine()", file="JsonSerializerTest.cs"];
m6_67 [label="Entry Unk.Contains", span="", cluster="Unk.Contains", file="JsonSerializerTest.cs"];
m6_607 [label="Entry Newtonsoft.Json.Tests.TestObjects.Person.Person()", span="34-34", cluster="Newtonsoft.Json.Tests.TestObjects.Person.Person()", file="JsonSerializerTest.cs"];
m6_991 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.SerializeGenericObjectListWithTypeName()", span="2397-2397", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeGenericObjectListWithTypeName()", file="JsonSerializerTest.cs"];
m6_992 [label="string employeeRef = typeof(Employee).AssemblyQualifiedName", span="2399-2399", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeGenericObjectListWithTypeName()", file="JsonSerializerTest.cs"];
m6_993 [label="string personRef = typeof(Person).AssemblyQualifiedName", span="2400-2400", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeGenericObjectListWithTypeName()", file="JsonSerializerTest.cs"];
m6_996 [label="Assert.AreEqual(@''[\r\n  {\r\n    ''''$id'''': ''''1'''',\r\n    ''''$type'''': '''''' + employeeRef + @'''''',\r\n    ''''Name'''': ''''Bob'''',\r\n    ''''Manager'''': {\r\n      ''''$id'''': ''''2'''',\r\n      ''''$type'''': '''''' + employeeRef + @'''''',\r\n      ''''Name'''': ''''Frank'''',\r\n      ''''Manager'''': null\r\n    }\r\n  },\r\n  {\r\n    ''''$type'''': '''''' + personRef + @'''''',\r\n    ''''Name'''': null,\r\n    ''''BirthDate'''': ''''\/Date(978134400000)\/'''',\r\n    ''''LastModified'''': ''''\/Date(978134400000)\/''''\r\n  },\r\n  ''''String!'''',\r\n  -2147483648\r\n]'', json)", span="2424-2444", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeGenericObjectListWithTypeName()", file="JsonSerializerTest.cs"];
m6_994 [label="List<object> values = new List<object>\r\n        {\r\n          new Employee\r\n            {\r\n              Name = ''Bob'',\r\n              Manager = new Employee {Name = ''Frank''}\r\n            },\r\n          new Person\r\n            {\r\n              Department = ''Department'',\r\n              BirthDate = new DateTime(2000, 12, 30, 0, 0, 0, DateTimeKind.Utc),\r\n              LastModified = new DateTime(2000, 12, 30, 0, 0, 0, DateTimeKind.Utc)\r\n            },\r\n          ''String!'',\r\n          int.MinValue\r\n        }", span="2402-2417", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeGenericObjectListWithTypeName()", file="JsonSerializerTest.cs"];
m6_995 [label="string json = JsonConvert.SerializeObject(values, Formatting.Indented, new JsonSerializerSettings\r\n        {\r\n          TypeNameHandling = TypeNameHandling.Objects\r\n        })", span="2419-2422", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeGenericObjectListWithTypeName()", file="JsonSerializerTest.cs"];
m6_997 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.SerializeGenericObjectListWithTypeName()", span="2397-2397", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeGenericObjectListWithTypeName()", file="JsonSerializerTest.cs"];
m6_812 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeReferenceInDictionary()", span="1885-1885", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeReferenceInDictionary()", file="JsonSerializerTest.cs"];
m6_813 [label="string json = @''{\r\n  ''''One'''': {\r\n    ''''$id'''': ''''1'''',\r\n    ''''Name'''': ''''e1'''',\r\n    ''''Manager'''': null\r\n  },\r\n  ''''Two'''': {\r\n    ''''$id'''': ''''2'''',\r\n    ''''Name'''': ''''e2'''',\r\n    ''''Manager'''': null\r\n  },\r\n  ''''Three'''': {\r\n    ''''$ref'''': ''''1''''\r\n  },\r\n  ''''Four'''': {\r\n    ''''$ref'''': ''''2''''\r\n  }\r\n}''", span="1887-1904", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeReferenceInDictionary()", file="JsonSerializerTest.cs"];
m6_814 [label="Dictionary<string, Employee> employees = JsonConvert.DeserializeObject<Dictionary<string, Employee>>(json)", span="1906-1906", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeReferenceInDictionary()", file="JsonSerializerTest.cs"];
m6_815 [label="Assert.AreEqual(4, employees.Count)", span="1907-1907", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeReferenceInDictionary()", file="JsonSerializerTest.cs"];
m6_816 [label="Employee e1 = employees[''One'']", span="1909-1909", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeReferenceInDictionary()", file="JsonSerializerTest.cs"];
m6_817 [label="Employee e2 = employees[''Two'']", span="1910-1910", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeReferenceInDictionary()", file="JsonSerializerTest.cs"];
m6_820 [label="Assert.AreEqual(e1, employees[''Three''])", span="1915-1915", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeReferenceInDictionary()", file="JsonSerializerTest.cs"];
m6_821 [label="Assert.AreEqual(e2, employees[''Four''])", span="1916-1916", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeReferenceInDictionary()", file="JsonSerializerTest.cs"];
m6_818 [label="Assert.AreEqual(''e1'', e1.Name)", span="1912-1912", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeReferenceInDictionary()", file="JsonSerializerTest.cs"];
m6_819 [label="Assert.AreEqual(''e2'', e2.Name)", span="1913-1913", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeReferenceInDictionary()", file="JsonSerializerTest.cs"];
m6_822 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeReferenceInDictionary()", span="1885-1885", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeReferenceInDictionary()", file="JsonSerializerTest.cs"];
m6_226 [label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime)", file="JsonSerializerTest.cs"];
m6_263 [label="Entry Newtonsoft.Json.Tests.TestObjects.ProductCollection.ProductCollection()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.ProductCollection.ProductCollection()", file="JsonSerializerTest.cs"];
m6_909 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", span="2206-2206", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs"];
m6_910 [label="string json = @''{\r\n  ''''Random'''': {\r\n    ''''blah'''': 1\r\n  },\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Dictionary'''': {\r\n    ''''Item'''': 11,\r\n    ''''Item1'''': 12\r\n  },\r\n  ''''Collection'''': [\r\n    999\r\n  ],\r\n  ''''Employee'''': {\r\n    ''''Manager'''': {\r\n      ''''Name'''': ''''ManagerName!''''\r\n    }\r\n  }\r\n}''", span="2208-2225", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs"];
m6_911 [label="DictionaryInterfaceClass c = JsonConvert.DeserializeObject<DictionaryInterfaceClass>(json,\r\n        new JsonSerializerSettings { ObjectCreationHandling = ObjectCreationHandling.Reuse })", span="2227-2228", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs"];
m6_912 [label="Assert.AreEqual(''Name!'', c.Name)", span="2230-2230", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs"];
m6_913 [label="Assert.AreEqual(3, c.Dictionary.Count)", span="2231-2231", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs"];
m6_914 [label="Assert.AreEqual(11, c.Dictionary[''Item''])", span="2232-2232", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs"];
m6_915 [label="Assert.AreEqual(1, c.Dictionary[''existing''])", span="2233-2233", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs"];
m6_916 [label="Assert.AreEqual(4, c.Collection.Count)", span="2234-2234", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs"];
m6_917 [label="Assert.AreEqual(1, c.Collection.ElementAt(0))", span="2235-2235", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs"];
m6_918 [label="Assert.AreEqual(999, c.Collection.ElementAt(3))", span="2236-2236", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs"];
m6_919 [label="Assert.AreEqual(''EmployeeName!'', c.Employee.Name)", span="2237-2237", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs"];
m6_920 [label="Assert.AreEqual(''ManagerName!'', c.Employee.Manager.Name)", span="2238-2238", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs"];
m6_921 [label="Assert.IsNotNull(c.Random)", span="2239-2239", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs"];
m6_922 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", span="2206-2206", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs"];
m6_66 [label="Entry Unk.AreNotSame", span="", cluster="Unk.AreNotSame", file="JsonSerializerTest.cs"];
m6_681 [label="Entry Newtonsoft.Json.Tests.TestObjects.JsonPropertyWithHandlingValues.JsonPropertyWithHandlingValues()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.JsonPropertyWithHandlingValues.JsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m6_214 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="JsonSerializerTest.cs"];
m6_86 [label="Entry Newtonsoft.Json.Tests.TestObjects.GetOnlyPropertyClass.GetOnlyPropertyClass()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.GetOnlyPropertyClass.GetOnlyPropertyClass()", file="JsonSerializerTest.cs"];
m6_672 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyWithHandlingValues()", span="1446-1446", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m6_673 [label="JsonPropertyWithHandlingValues o = new JsonPropertyWithHandlingValues()", span="1448-1448", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m6_674 [label="o.DefaultValueHandlingIgnoreProperty = ''Default!''", span="1449-1449", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m6_675 [label="o.DefaultValueHandlingIncludeProperty = ''Default!''", span="1450-1450", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m6_676 [label="string json = JsonConvert.SerializeObject(o, Formatting.Indented)", span="1452-1452", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m6_678 [label="json = JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings {NullValueHandling = NullValueHandling.Ignore})", span="1462-1462", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m6_677 [label="Assert.AreEqual(@''{\r\n  ''''DefaultValueHandlingIncludeProperty'''': ''''Default!'''',\r\n  ''''NullValueHandlingIncludeProperty'''': null,\r\n  ''''ReferenceLoopHandlingErrorProperty'''': null,\r\n  ''''ReferenceLoopHandlingIgnoreProperty'''': null,\r\n  ''''ReferenceLoopHandlingSerializeProperty'''': null\r\n}'', json)", span="1454-1460", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m6_679 [label="Assert.AreEqual(@''{\r\n  ''''DefaultValueHandlingIncludeProperty'''': ''''Default!'''',\r\n  ''''NullValueHandlingIncludeProperty'''': null\r\n}'', json)", span="1464-1467", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m6_680 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyWithHandlingValues()", span="1446-1446", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m6_218 [label="Entry System.IO.MemoryStream.Seek(long, System.IO.SeekOrigin)", span="0-0", cluster="System.IO.MemoryStream.Seek(long, System.IO.SeekOrigin)", file="JsonSerializerTest.cs"];
m6_50 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JsonSerializerTest.cs"];
m6_888 [label="Entry Unk.IsTrue", span="", cluster="Unk.IsTrue", file="JsonSerializerTest.cs"];
m6_28 [label="Entry System.DateTime.DateTime(int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int)", file="JsonSerializerTest.cs"];
m6_134 [label="Entry Newtonsoft.Json.Tests.TestObjects.BadJsonPropertyClass.BadJsonPropertyClass()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.BadJsonPropertyClass.BadJsonPropertyClass()", file="JsonSerializerTest.cs"];
m6_229 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.NonStringKeyDictionary()", span="532-532", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs"];
m6_230 [label="Dictionary<int, int> values = new Dictionary<int, int>()", span="534-534", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs"];
m6_231 [label="values.Add(-5, 6)", span="535-535", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs"];
m6_232 [label="values.Add(int.MinValue, int.MaxValue)", span="536-536", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs"];
m6_233 [label="string json = JsonConvert.SerializeObject(values)", span="538-538", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs"];
m6_236 [label="CollectionAssert.AreEqual(values, newValues)", span="544-544", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs"];
m6_234 [label="Assert.AreEqual(@''{''''-5'''':6,''''-2147483648'''':2147483647}'', json)", span="540-540", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs"];
m6_235 [label="Dictionary<int, int> newValues = JsonConvert.DeserializeObject<Dictionary<int, int>>(json)", span="542-542", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs"];
m6_237 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.NonStringKeyDictionary()", span="532-532", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs"];
m6_564 [label="Entry Newtonsoft.Json.Tests.TestObjects.RequiredMembersClass.RequiredMembersClass()", span="32-32", cluster="Newtonsoft.Json.Tests.TestObjects.RequiredMembersClass.RequiredMembersClass()", file="JsonSerializerTest.cs"];
m6_622 [label="LogEntry entry = new LogEntry\r\n                         {\r\n                           LogDate = new DateTime(2009, 2, 15, 0, 0, 0, DateTimeKind.Utc),\r\n                           Details = ''Application started.''\r\n                         }", span="1325-1329", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs"];
m6_621 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.WriteJsonDates()", span="1323-1323", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs"];
m6_623 [label="string defaultJson = JsonConvert.SerializeObject(entry)", span="1331-1331", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs"];
m6_624 [label="string isoJson = JsonConvert.SerializeObject(entry, new IsoDateTimeConverter())", span="1334-1334", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs"];
m6_625 [label="string javascriptJson = JsonConvert.SerializeObject(entry, new JavaScriptDateTimeConverter())", span="1337-1337", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs"];
m6_626 [label="Console.WriteLine(defaultJson)", span="1340-1340", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs"];
m6_627 [label="Console.WriteLine(isoJson)", span="1341-1341", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs"];
m6_628 [label="Console.WriteLine(javascriptJson)", span="1342-1342", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs"];
m6_629 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.WriteJsonDates()", span="1323-1323", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs"];
m6_239 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.AnonymousObjectSerialization()", span="548-548", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs"];
m6_240 [label="var anonymous =\r\n        new\r\n        {\r\n          StringValue = ''I am a string'',\r\n          IntValue = int.MaxValue,\r\n          NestedAnonymous = new { NestedValue = byte.MaxValue },\r\n          NestedArray = new[] { 1, 2 },\r\n          Product = new Product() { Name = ''TestProduct'' }\r\n        }", span="550-558", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs"];
m6_241 [label="string json = JsonConvert.SerializeObject(anonymous)", span="560-560", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs"];
m6_243 [label="anonymous = JsonConvert.DeserializeAnonymousType(json, anonymous)", span="563-563", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs"];
m6_242 [label="Assert.AreEqual(@''{''''StringValue'''':''''I am a string'''',''''IntValue'''':2147483647,''''NestedAnonymous'''':{''''NestedValue'''':255},''''NestedArray'''':[1,2],''''Product'''':{''''Name'''':''''TestProduct'''',''''ExpiryDate'''':''''\/Date(946684800000)\/'''',''''Price'''':0,''''Sizes'''':null}}'', json)", span="561-561", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs"];
m6_244 [label="Assert.AreEqual(''I am a string'', anonymous.StringValue)", span="564-564", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs"];
m6_245 [label="Assert.AreEqual(int.MaxValue, anonymous.IntValue)", span="565-565", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs"];
m6_246 [label="Assert.AreEqual(255, anonymous.NestedAnonymous.NestedValue)", span="566-566", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs"];
m6_247 [label="Assert.AreEqual(2, anonymous.NestedArray.Length)", span="567-567", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs"];
m6_248 [label="Assert.AreEqual(1, anonymous.NestedArray[0])", span="568-568", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs"];
m6_249 [label="Assert.AreEqual(2, anonymous.NestedArray[1])", span="569-569", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs"];
m6_250 [label="Assert.AreEqual(''TestProduct'', anonymous.Product.Name)", span="570-570", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs"];
m6_251 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.AnonymousObjectSerialization()", span="548-548", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs"];
m6_387 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.SerializeMemberGenericList()", span="775-775", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeMemberGenericList()", file="JsonSerializerTest.cs"];
m6_388 [label="Name name = new Name(''The Idiot in Next To Me'')", span="777-777", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeMemberGenericList()", file="JsonSerializerTest.cs"];
m6_389 [label="PhoneNumber p1 = new PhoneNumber(''555-1212'')", span="779-779", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeMemberGenericList()", file="JsonSerializerTest.cs"];
m6_391 [label="name.pNumbers.Add(p1)", span="782-782", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeMemberGenericList()", file="JsonSerializerTest.cs"];
m6_392 [label="name.pNumbers.Add(p2)", span="783-783", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeMemberGenericList()", file="JsonSerializerTest.cs"];
m6_393 [label="string json = JsonConvert.SerializeObject(name, Formatting.Indented)", span="785-785", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeMemberGenericList()", file="JsonSerializerTest.cs"];
m6_390 [label="PhoneNumber p2 = new PhoneNumber(''444-1212'')", span="780-780", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeMemberGenericList()", file="JsonSerializerTest.cs"];
m6_394 [label="Assert.AreEqual(@''{\r\n  ''''personsName'''': ''''The Idiot in Next To Me'''',\r\n  ''''pNumbers'''': [\r\n    {\r\n      ''''phoneNumber'''': ''''555-1212''''\r\n    },\r\n    {\r\n      ''''phoneNumber'''': ''''444-1212''''\r\n    }\r\n  ]\r\n}'', json)", span="787-797", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeMemberGenericList()", file="JsonSerializerTest.cs"];
m6_395 [label="Name newName = JsonConvert.DeserializeObject<Name>(json)", span="799-799", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeMemberGenericList()", file="JsonSerializerTest.cs"];
m6_396 [label="Assert.AreEqual(''The Idiot in Next To Me'', newName.personsName)", span="801-801", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeMemberGenericList()", file="JsonSerializerTest.cs"];
m6_397 [label="Assert.AreEqual(2, newName.pNumbers.Count)", span="804-804", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeMemberGenericList()", file="JsonSerializerTest.cs"];
m6_398 [label="Assert.AreEqual(''555-1212'', newName.pNumbers[0].phoneNumber)", span="805-805", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeMemberGenericList()", file="JsonSerializerTest.cs"];
m6_399 [label="Assert.AreEqual(''444-1212'', newName.pNumbers[1].phoneNumber)", span="806-806", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeMemberGenericList()", file="JsonSerializerTest.cs"];
m6_400 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.SerializeMemberGenericList()", span="775-775", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeMemberGenericList()", file="JsonSerializerTest.cs"];
m6_955 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.CircularReferenceClassConverter.CanConvert(System.Type)", span="2278-2278", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CircularReferenceClassConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs"];
m6_956 [label="return (objectType == typeof(CircularReferenceClass));", span="2280-2280", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CircularReferenceClassConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs"];
m6_957 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.CircularReferenceClassConverter.CanConvert(System.Type)", span="2278-2278", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CircularReferenceClassConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs"];
m6_630 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.LogEntry.LogEntry()", span="1316-1316", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.LogEntry.LogEntry()", file="JsonSerializerTest.cs"];
m6_876 [label="Entry Newtonsoft.Json.Tests.TestFixtureBase.WriteEscapedJson(string)", span="43-43", cluster="Newtonsoft.Json.Tests.TestFixtureBase.WriteEscapedJson(string)", file="JsonSerializerTest.cs"];
m6_190 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.Unicode()", span="477-477", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs"];
m6_191 [label="string json = @''[''''PRE\u003cPOST'''']''", span="479-479", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs"];
m6_192 [label="DataContractJsonSerializer s = new DataContractJsonSerializer(typeof(List<string>))", span="481-481", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs"];
m6_193 [label="List<string> dataContractResult = (List<string>)s.ReadObject(new MemoryStream(Encoding.UTF8.GetBytes(json)))", span="482-482", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs"];
m6_194 [label="List<string> jsonNetResult = JsonConvert.DeserializeObject<List<string>>(json)", span="484-484", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs"];
m6_196 [label="Assert.AreEqual(dataContractResult[0], jsonNetResult[0])", span="487-487", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs"];
m6_195 [label="Assert.AreEqual(1, jsonNetResult.Count)", span="486-486", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs"];
m6_197 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.Unicode()", span="477-477", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs"];
m6_198 [label="Entry DataContractJsonSerializer.cstr", span="", cluster="DataContractJsonSerializer.cstr", file="JsonSerializerTest.cs"];
m6_493 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeNullable()", span="954-954", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeNullable()", file="JsonSerializerTest.cs"];
m6_494 [label="string json", span="956-956", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeNullable()", file="JsonSerializerTest.cs"];
m6_495 [label="json = JsonConvert.SerializeObject((int?)null)", span="958-958", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeNullable()", file="JsonSerializerTest.cs"];
m6_496 [label="Assert.AreEqual(''null'', json)", span="959-959", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeNullable()", file="JsonSerializerTest.cs"];
m6_497 [label="json = JsonConvert.SerializeObject((int?)1)", span="961-961", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeNullable()", file="JsonSerializerTest.cs"];
m6_498 [label="Assert.AreEqual(''1'', json)", span="962-962", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeNullable()", file="JsonSerializerTest.cs"];
m6_499 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeNullable()", span="954-954", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeNullable()", file="JsonSerializerTest.cs"];
m6_968 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.CircularReferenceClassConverter.CircularReferenceClassConverter()", span="2242-2242", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CircularReferenceClassConverter.CircularReferenceClassConverter()", file="JsonSerializerTest.cs"];
m6_941 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.CircularReferenceClassConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", span="2261-2261", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CircularReferenceClassConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m6_942 [label="JObject o = JObject.Load(reader)", span="2263-2263", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CircularReferenceClassConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m6_946 [label="serializer.Populate(o.CreateReader(), circularReferenceClass)", span="2268-2268", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CircularReferenceClassConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m6_949 [label="return serializer.ReferenceResolver.ResolveReference(reference);", span="2274-2274", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CircularReferenceClassConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m6_943 [label="string id = (string)o[''$id'']", span="2264-2264", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CircularReferenceClassConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m6_948 [label="string reference = (string)o[''$ref'']", span="2273-2273", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CircularReferenceClassConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m6_944 [label="id != null", span="2265-2265", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CircularReferenceClassConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m6_945 [label="CircularReferenceClass circularReferenceClass = new CircularReferenceClass()", span="2267-2267", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CircularReferenceClassConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m6_947 [label="return circularReferenceClass;", span="2269-2269", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CircularReferenceClassConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m6_950 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.CircularReferenceClassConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", span="2261-2261", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CircularReferenceClassConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m6_483 [label="Entry Newtonsoft.Json.Tests.TestObjects.DefaultValueAttributeTestClass.DefaultValueAttributeTestClass()", span="32-32", cluster="Newtonsoft.Json.Tests.TestObjects.DefaultValueAttributeTestClass.DefaultValueAttributeTestClass()", file="JsonSerializerTest.cs"];
m6_954 [label="Entry Newtonsoft.Json.Serialization.IReferenceResolver.ResolveReference(string)", span="37-37", cluster="Newtonsoft.Json.Serialization.IReferenceResolver.ResolveReference(string)", file="JsonSerializerTest.cs"];
m6_713 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", span="1577-1577", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonSerializerTest.cs"];
m6_714 [label="_name = name", span="1579-1579", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonSerializerTest.cs"];
m6_715 [label="Age = age", span="1580-1580", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonSerializerTest.cs"];
m6_716 [label="Rank = rank", span="1581-1581", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonSerializerTest.cs"];
m6_717 [label="Title = title", span="1582-1582", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonSerializerTest.cs"];
m6_718 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", span="1577-1577", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonSerializerTest.cs"];
m6_364 [label="Entry System.Guid.Guid(string)", span="0-0", cluster="System.Guid.Guid(string)", file="JsonSerializerTest.cs"];
m6_736 [label="Entry Newtonsoft.Json.JsonSerializer.Populate(System.IO.TextReader, object)", span="277-277", cluster="Newtonsoft.Json.JsonSerializer.Populate(System.IO.TextReader, object)", file="JsonSerializerTest.cs"];
m6_631 [label="Entry Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", span="12-12", cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", file="JsonSerializerTest.cs"];
m6_365 [label="Entry Newtonsoft.Json.Tests.TestObjects.ClassWithGuid.ClassWithGuid()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.ClassWithGuid.ClassWithGuid()", file="JsonSerializerTest.cs"];
m6_596 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeInterfaceProperty()", span="1274-1274", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonSerializerTest.cs"];
m6_597 [label="Test testClass = new Test()", span="1276-1276", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonSerializerTest.cs"];
m6_598 [label="testClass.co = new Co()", span="1277-1277", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonSerializerTest.cs"];
m6_599 [label="String strFromTest = JsonConvert.SerializeObject(testClass)", span="1278-1278", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonSerializerTest.cs"];
m6_600 [label="Test testFromDe = (Test)JsonConvert.DeserializeObject(strFromTest, typeof(Test))", span="1279-1279", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonSerializerTest.cs"];
m6_601 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeInterfaceProperty()", span="1274-1274", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonSerializerTest.cs"];
m6_687 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.PartialClassDeserialize()", span="1493-1493", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs"];
m6_688 [label="string json = @''{\r\n    ''''request'''': ''''ux.settings.update'''',\r\n    ''''sid'''': ''''14c561bd-32a8-457e-b4e5-4bba0832897f'''',\r\n    ''''uid'''': ''''30c39065-0f31-de11-9442-001e3786a8ec'''',\r\n    ''''fidOrder'''': [\r\n        ''''id'''',\r\n        ''''andytest_name'''',\r\n        ''''andytest_age'''',\r\n        ''''andytest_address'''',\r\n        ''''andytest_phone'''',\r\n        ''''date'''',\r\n        ''''title'''',\r\n        ''''titleId''''\r\n    ],\r\n    ''''entityName'''': ''''Andy Test'''',\r\n    ''''setting'''': ''''entity.field.order''''\r\n}''", span="1495-1511", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs"];
m6_689 [label="RequestOnly r = JsonConvert.DeserializeObject<RequestOnly>(json)", span="1513-1513", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs"];
m6_691 [label="NonRequest n = JsonConvert.DeserializeObject<NonRequest>(json)", span="1516-1516", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs"];
m6_690 [label="Assert.AreEqual(''ux.settings.update'', r.Request)", span="1514-1514", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs"];
m6_692 [label="Assert.AreEqual(new Guid(''14c561bd-32a8-457e-b4e5-4bba0832897f''), n.Sid)", span="1517-1517", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs"];
m6_693 [label="Assert.AreEqual(new Guid(''30c39065-0f31-de11-9442-001e3786a8ec''), n.Uid)", span="1518-1518", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs"];
m6_694 [label="Assert.AreEqual(8, n.FidOrder.Count)", span="1519-1519", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs"];
m6_695 [label="Assert.AreEqual(''id'', n.FidOrder[0])", span="1520-1520", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs"];
m6_696 [label="Assert.AreEqual(''titleId'', n.FidOrder[n.FidOrder.Count - 1])", span="1521-1521", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs"];
m6_697 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.PartialClassDeserialize()", span="1493-1493", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs"];
m6_508 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJsonRaw()", span="982-982", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs"];
m6_509 [label="string json = @''{''''first_name'''':''''FirstNameValue'''',''''RawContent'''':[1,2,3,4,5],''''last_name'''':''''LastNameValue''''}''", span="984-984", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs"];
m6_510 [label="PersonRaw personRaw = JsonConvert.DeserializeObject<PersonRaw>(json)", span="986-986", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs"];
m6_511 [label="Assert.AreEqual(''FirstNameValue'', personRaw.FirstName)", span="988-988", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs"];
m6_512 [label="Assert.AreEqual(''[1,2,3,4,5]'', personRaw.RawContent.Content)", span="989-989", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs"];
m6_513 [label="Assert.AreEqual(''LastNameValue'', personRaw.LastName)", span="990-990", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs"];
m6_514 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJsonRaw()", span="982-982", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs"];
m6_201 [label="Entry Unk.ReadObject", span="", cluster="Unk.ReadObject", file="JsonSerializerTest.cs"];
m6_187 [label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="51-51", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonSerializerTest.cs"];
m6_648 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeBestMatchPropertyCase()", span="1400-1400", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs"];
m6_649 [label="string json = @''{\r\n  ''''firstName'''': ''''firstName'''',\r\n  ''''FirstName'''': ''''FirstName'''',\r\n  ''''LastName'''': ''''LastName'''',\r\n  ''''lastName'''': ''''lastName'''',\r\n}''", span="1402-1407", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs"];
m6_650 [label="PropertyCase o = JsonConvert.DeserializeObject<PropertyCase>(json)", span="1409-1409", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs"];
m6_651 [label="Assert.IsNotNull(o)", span="1410-1410", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs"];
m6_652 [label="Assert.AreEqual(''firstName'', o.firstName)", span="1412-1412", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs"];
m6_653 [label="Assert.AreEqual(''FirstName'', o.FirstName)", span="1413-1413", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs"];
m6_654 [label="Assert.AreEqual(''LastName'', o.LastName)", span="1414-1414", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs"];
m6_655 [label="Assert.AreEqual(''lastName'', o.lastName)", span="1415-1415", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs"];
m6_656 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeBestMatchPropertyCase()", span="1400-1400", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs"];
m6_74 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.TypedHashtableDeserialization()", span="179-179", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonSerializerTest.cs"];
m6_75 [label="string value = @''{''''Name'''':''''Orange'''', ''''Hash'''':{''''ExpiryDate'''':''''01/24/2010 12:00:00'''',''''UntypedArray'''':[''''01/24/2010 12:00:00'''']}}''", span="181-181", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonSerializerTest.cs"];
m6_76 [label="TypedSubHashtable p = JsonConvert.DeserializeObject(value, typeof(TypedSubHashtable)) as TypedSubHashtable", span="183-183", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonSerializerTest.cs"];
m6_77 [label="Assert.AreEqual(''01/24/2010 12:00:00'', p.Hash[''ExpiryDate''].ToString())", span="185-185", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonSerializerTest.cs"];
m6_78 [label="Assert.AreEqual(@''[\r\n  ''''01/24/2010 12:00:00''''\r\n]'', p.Hash[''UntypedArray''].ToString())", span="186-188", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonSerializerTest.cs"];
m6_79 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.TypedHashtableDeserialization()", span="179-179", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonSerializerTest.cs"];
m6_537 [label="Entry System.Collections.ObjectModel.Collection<T>.Add(T)", span="0-0", cluster="System.Collections.ObjectModel.Collection<T>.Add(T)", file="JsonSerializerTest.cs"];
m6_619 [label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="97-97", cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JsonSerializerTest.cs"];
m6_529 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberIgnoreComplexValue()", span="1024-1024", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberIgnoreComplexValue()", file="JsonSerializerTest.cs"];
m6_530 [label="JsonSerializer serializer = new JsonSerializer { MissingMemberHandling = MissingMemberHandling.Ignore }", span="1026-1026", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberIgnoreComplexValue()", file="JsonSerializerTest.cs"];
m6_531 [label="serializer.Converters.Add(new JavaScriptDateTimeConverter())", span="1027-1027", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberIgnoreComplexValue()", file="JsonSerializerTest.cs"];
m6_533 [label="MyClass myClass = (MyClass)serializer.Deserialize(new StringReader(response), typeof(MyClass))", span="1031-1031", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberIgnoreComplexValue()", file="JsonSerializerTest.cs"];
m6_532 [label="string response = @''{''''PreProperty'''':1,''''DateProperty'''':new Date(1225962698973),''''PostProperty'''':2}''", span="1029-1029", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberIgnoreComplexValue()", file="JsonSerializerTest.cs"];
m6_534 [label="Assert.AreEqual(1, myClass.PreProperty)", span="1033-1033", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberIgnoreComplexValue()", file="JsonSerializerTest.cs"];
m6_535 [label="Assert.AreEqual(2, myClass.PostProperty)", span="1034-1034", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberIgnoreComplexValue()", file="JsonSerializerTest.cs"];
m6_536 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberIgnoreComplexValue()", span="1024-1024", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberIgnoreComplexValue()", file="JsonSerializerTest.cs"];
m6_1025 [label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="346-346", cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="JsonSerializerTest.cs"];
m6_372 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", span="749-749", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs"];
m6_373 [label="string json = JsonConvert.SerializeObject(new JsonIgnoreAttributeOnClassTestClass())", span="751-751", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs"];
m6_374 [label="Assert.AreEqual(@''{''''TheField'''':0,''''Property'''':21}'', json)", span="753-753", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs"];
m6_375 [label="JsonIgnoreAttributeOnClassTestClass c = JsonConvert.DeserializeObject<JsonIgnoreAttributeOnClassTestClass>(@''{''''TheField'''':99,''''Property'''':-1,''''IgnoredField'''':-1}'')", span="755-755", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs"];
m6_376 [label="Assert.AreEqual(0, c.IgnoredField)", span="757-757", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs"];
m6_377 [label="Assert.AreEqual(99, c.Field)", span="758-758", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs"];
m6_378 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", span="749-749", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs"];
m6_851 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularListsError()", span="2004-2004", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularListsError()", file="JsonSerializerTest.cs"];
m6_852 [label="CircularList circularList = new CircularList()", span="2006-2006", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularListsError()", file="JsonSerializerTest.cs"];
m6_853 [label="circularList.Add(null)", span="2007-2007", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularListsError()", file="JsonSerializerTest.cs"];
m6_854 [label="circularList.Add(new CircularList { null })", span="2008-2008", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularListsError()", file="JsonSerializerTest.cs"];
m6_855 [label="circularList.Add(new CircularList { new CircularList { circularList } })", span="2009-2009", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularListsError()", file="JsonSerializerTest.cs"];
m6_856 [label="JsonConvert.SerializeObject(circularList, Formatting.Indented)", span="2011-2011", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularListsError()", file="JsonSerializerTest.cs"];
m6_857 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularListsError()", span="2004-2004", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularListsError()", file="JsonSerializerTest.cs"];
m6_199 [label="Entry System.IO.MemoryStream.MemoryStream(byte[])", span="0-0", cluster="System.IO.MemoryStream.MemoryStream(byte[])", file="JsonSerializerTest.cs"];
m6_156 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserialize()", span="410-410", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserialize()", file="JsonSerializerTest.cs"];
m6_157 [label="Product product = new Product()", span="412-412", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserialize()", file="JsonSerializerTest.cs"];
m6_158 [label="product.Name = ''Apple''", span="414-414", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserialize()", file="JsonSerializerTest.cs"];
m6_159 [label="product.ExpiryDate = new DateTime(2008, 12, 28)", span="415-415", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserialize()", file="JsonSerializerTest.cs"];
m6_160 [label="product.Price = 3.99M", span="416-416", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserialize()", file="JsonSerializerTest.cs"];
m6_161 [label="product.Sizes = new string[] { ''Small'', ''Medium'', ''Large'' }", span="417-417", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserialize()", file="JsonSerializerTest.cs"];
m6_162 [label="string output = JsonConvert.SerializeObject(product)", span="419-419", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserialize()", file="JsonSerializerTest.cs"];
m6_163 [label="ProductShort deserializedProductShort = (ProductShort)JsonConvert.DeserializeObject(output, typeof(ProductShort), new JsonSerializerSettings { MissingMemberHandling = MissingMemberHandling.Error })", span="431-431", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserialize()", file="JsonSerializerTest.cs"];
m6_164 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserialize()", span="410-410", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserialize()", file="JsonSerializerTest.cs"];
m6_200 [label="Entry System.Text.Encoding.GetBytes(string)", span="0-0", cluster="System.Text.Encoding.GetBytes(string)", file="JsonSerializerTest.cs"];
m6_759 [label="Entry Newtonsoft.Json.Tests.TestObjects.Employee.Employee()", span="33-33", cluster="Newtonsoft.Json.Tests.TestObjects.Employee.Employee()", file="JsonSerializerTest.cs"];
m6_468 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.GenericAbstractProperty()", span="904-904", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GenericAbstractProperty()", file="JsonSerializerTest.cs"];
m6_469 [label="string json = JsonConvert.SerializeObject(new GenericImpl())", span="906-906", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GenericAbstractProperty()", file="JsonSerializerTest.cs"];
m6_470 [label="Assert.AreEqual(@''{''''Id'''':0}'', json)", span="907-907", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GenericAbstractProperty()", file="JsonSerializerTest.cs"];
m6_471 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.GenericAbstractProperty()", span="904-904", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GenericAbstractProperty()", file="JsonSerializerTest.cs"];
m6_603 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.GetPerson()", span="1282-1282", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GetPerson()", file="JsonSerializerTest.cs"];
m6_604 [label="Person person = new Person\r\n                        {\r\n                          Name = ''Mike Manager'',\r\n                          BirthDate = new DateTime(1983, 8, 3, 0, 0, 0, DateTimeKind.Utc),\r\n                          Department = ''IT'',\r\n                          LastModified = new DateTime(2009, 2, 15, 0, 0, 0, DateTimeKind.Utc)\r\n                        }", span="1284-1290", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GetPerson()", file="JsonSerializerTest.cs"];
m6_605 [label="return person;", span="1291-1291", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GetPerson()", file="JsonSerializerTest.cs"];
m6_606 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.GetPerson()", span="1282-1282", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GetPerson()", file="JsonSerializerTest.cs"];
m6_36 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int)", file="JsonSerializerTest.cs"];
m6_355 [label="Entry System.Collections.Generic.Stack<T>.Stack()", span="0-0", cluster="System.Collections.Generic.Stack<T>.Stack()", file="JsonSerializerTest.cs"];
m6_52 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.TestMethodExecutorObject()", span="149-149", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs"];
m6_53 [label="MethodExecutorObject executorObject = new MethodExecutorObject()", span="151-151", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs"];
m6_54 [label="executorObject.serverClassName = ''BanSubs''", span="152-152", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs"];
m6_55 [label="executorObject.serverMethodParams = new object[] { ''21321546'', ''101'', ''1236'', ''D:\\1.txt'' }", span="153-153", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs"];
m6_56 [label="executorObject.clientGetResultFunction = ''ClientBanSubsCB''", span="154-154", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs"];
m6_57 [label="string output = JsonConvert.SerializeObject(executorObject)", span="156-156", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs"];
m6_59 [label="Assert.AreNotSame(executorObject, executorObject2)", span="160-160", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs"];
m6_58 [label="MethodExecutorObject executorObject2 = JsonConvert.DeserializeObject(output, typeof(MethodExecutorObject)) as MethodExecutorObject", span="158-158", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs"];
m6_60 [label="Assert.AreEqual(executorObject2.serverClassName, ''BanSubs'')", span="161-161", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs"];
m6_61 [label="Assert.AreEqual(executorObject2.serverMethodParams.Length, 4)", span="162-162", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs"];
m6_62 [label="Assert.Contains(''101'', executorObject2.serverMethodParams)", span="163-163", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs"];
m6_63 [label="Assert.AreEqual(executorObject2.clientGetResultFunction, ''ClientBanSubsCB'')", span="164-164", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs"];
m6_64 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.TestMethodExecutorObject()", span="149-149", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs"];
m6_12 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserialization()", span="67-67", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m6_13 [label="Product product = new Product()", span="69-69", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m6_14 [label="product.Name = ''Apple''", span="71-71", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m6_15 [label="product.ExpiryDate = new DateTime(2008, 12, 28)", span="72-72", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m6_16 [label="product.Price = 3.99M", span="73-73", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m6_17 [label="product.Sizes = new string[] { ''Small'', ''Medium'', ''Large'' }", span="74-74", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m6_18 [label="string output = JsonConvert.SerializeObject(product)", span="76-76", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m6_19 [label="Product deserializedProduct = (Product)JsonConvert.DeserializeObject(output, typeof(Product))", span="88-88", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m6_20 [label="Assert.AreEqual(''Apple'', deserializedProduct.Name)", span="90-90", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m6_21 [label="Assert.AreEqual(new DateTime(2008, 12, 28), deserializedProduct.ExpiryDate)", span="91-91", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m6_22 [label="Assert.AreEqual(3.99, deserializedProduct.Price)", span="92-92", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m6_23 [label="Assert.AreEqual(''Small'', deserializedProduct.Sizes[0])", span="93-93", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m6_24 [label="Assert.AreEqual(''Medium'', deserializedProduct.Sizes[1])", span="94-94", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m6_25 [label="Assert.AreEqual(''Large'', deserializedProduct.Sizes[2])", span="95-95", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m6_26 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserialization()", span="67-67", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m6_830 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularDictionarysIgnore()", span="1935-1935", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularDictionarysIgnore()", file="JsonSerializerTest.cs"];
m6_831 [label="CircularDictionary circularDictionary = new CircularDictionary()", span="1937-1937", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularDictionarysIgnore()", file="JsonSerializerTest.cs"];
m6_832 [label="circularDictionary.Add(''other'', new CircularDictionary { { ''blah'', null } })", span="1938-1938", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularDictionarysIgnore()", file="JsonSerializerTest.cs"];
m6_833 [label="circularDictionary.Add(''self'', circularDictionary)", span="1939-1939", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularDictionarysIgnore()", file="JsonSerializerTest.cs"];
m6_834 [label="string json = JsonConvert.SerializeObject(circularDictionary, Formatting.Indented,\r\n        new JsonSerializerSettings { ReferenceLoopHandling = ReferenceLoopHandling.Ignore })", span="1941-1942", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularDictionarysIgnore()", file="JsonSerializerTest.cs"];
m6_835 [label="Assert.AreEqual(@''{\r\n  ''''other'''': {\r\n    ''''blah'''': null\r\n  }\r\n}'', json)", span="1944-1948", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularDictionarysIgnore()", file="JsonSerializerTest.cs"];
m6_836 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularDictionarysIgnore()", span="1935-1935", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularDictionarysIgnore()", file="JsonSerializerTest.cs"];
m6_404 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.ConstructorCaseSensitivity()", span="810-810", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs"];
m6_405 [label="ConstructorCaseSensitivityClass c = new ConstructorCaseSensitivityClass(''param1'', ''Param1'', ''Param2'')", span="812-812", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs"];
m6_406 [label="string json = JsonConvert.SerializeObject(c)", span="814-814", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs"];
m6_407 [label="ConstructorCaseSensitivityClass deserialized = JsonConvert.DeserializeObject<ConstructorCaseSensitivityClass>(json)", span="816-816", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs"];
m6_408 [label="Assert.AreEqual(''param1'', deserialized.param1)", span="818-818", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs"];
m6_409 [label="Assert.AreEqual(''Param1'', deserialized.Param1)", span="819-819", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs"];
m6_410 [label="Assert.AreEqual(''Param2'', deserialized.Param2)", span="820-820", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs"];
m6_411 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.ConstructorCaseSensitivity()", span="810-810", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs"];
m6_147 [label="Entry Newtonsoft.Json.Tests.TestObjects.ArticleCollection.ArticleCollection()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.ArticleCollection.ArticleCollection()", file="JsonSerializerTest.cs"];
m6_227 [label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", file="JsonSerializerTest.cs"];
m6_189 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", span="330-330", cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerTest.cs"];
m6_268 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.NullValueHandlingSerialization()", span="599-599", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NullValueHandlingSerialization()", file="JsonSerializerTest.cs"];
m6_269 [label="Store s1 = new Store()", span="601-601", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NullValueHandlingSerialization()", file="JsonSerializerTest.cs"];
m6_270 [label="JsonSerializer jsonSerializer = new JsonSerializer()", span="603-603", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NullValueHandlingSerialization()", file="JsonSerializerTest.cs"];
m6_273 [label="jsonSerializer.Serialize(sw, s1)", span="607-607", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NullValueHandlingSerialization()", file="JsonSerializerTest.cs"];
m6_280 [label="Assert.AreEqual(s1.Establised, s3.Establised)", span="620-620", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NullValueHandlingSerialization()", file="JsonSerializerTest.cs"];
m6_271 [label="jsonSerializer.NullValueHandling = NullValueHandling.Ignore", span="604-604", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NullValueHandlingSerialization()", file="JsonSerializerTest.cs"];
m6_275 [label="Store s2 = (Store)jsonSerializer.Deserialize(new JsonTextReader(new StringReader(''{}'')), typeof(Store))", span="613-613", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NullValueHandlingSerialization()", file="JsonSerializerTest.cs"];
m6_277 [label="Store s3 = (Store)jsonSerializer.Deserialize(new JsonTextReader(new StringReader(@''{''''Escape'''':null}'')), typeof(Store))", span="616-616", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NullValueHandlingSerialization()", file="JsonSerializerTest.cs"];
m6_279 [label="Store s4 = (Store)jsonSerializer.Deserialize(new JsonTextReader(new StringReader(@''{''''Color'''':2,''''Establised'''':''''\/Date(1264071600000+1300)\/'''',''''Width'''':1.1,''''Employees'''':999,''''RoomsPerFloor'''':[1,2,3,4,5,6,7,8,9],''''Open'''':false,''''Symbol'''':''''@'''',''''Mottos'''':[''''Hello World'''',''''������\\'{new Date(12345);}[222]_�@��~'''',null,'''' ''''],''''Cost'''':100980.1,''''Escape'''':''''\r\n\t\f\b?{\\r\\n\''''''''',''''product'''':[{''''Name'''':''''Rocket'''',''''ExpiryDate'''':''''\/Date(949485690000+1300)\/'''',''''Price'''':0},{''''Name'''':''''Alien'''',''''ExpiryDate'''':''''\/Date(946638000000)\/'''',''''Price'''':0}]}'')), typeof(Store))", span="619-619", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NullValueHandlingSerialization()", file="JsonSerializerTest.cs"];
m6_272 [label="StringWriter sw = new StringWriter()", span="606-606", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NullValueHandlingSerialization()", file="JsonSerializerTest.cs"];
m6_274 [label="Assert.AreEqual(@''{''''Color'''':4,''''Establised'''':''''\/Date(1264122061000+0000)\/'''',''''Width'''':1.1,''''Employees'''':999,''''RoomsPerFloor'''':[1,2,3,4,5,6,7,8,9],''''Open'''':false,''''Symbol'''':''''@'''',''''Mottos'''':[''''Hello World'''',''''������\\'{new Date(12345);}[222]_�@��~'''',null,'''' ''''],''''Cost'''':100980.1,''''Escape'''':''''\r\n\t\f\b?{\\r\\n\''''''''',''''product'''':[{''''Name'''':''''Rocket'''',''''ExpiryDate'''':''''\/Date(949532490000)\/'''',''''Price'''':0},{''''Name'''':''''Alien'''',''''ExpiryDate'''':''''\/Date(946684800000)\/'''',''''Price'''':0}]}'', sw.GetStringBuilder().ToString())", span="611-611", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NullValueHandlingSerialization()", file="JsonSerializerTest.cs"];
m6_276 [label="Assert.AreEqual(''\r\n\t\f\b?{\\r\\n\''\''', s2.Escape)", span="614-614", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NullValueHandlingSerialization()", file="JsonSerializerTest.cs"];
m6_278 [label="Assert.AreEqual(''\r\n\t\f\b?{\\r\\n\''\''', s3.Escape)", span="617-617", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NullValueHandlingSerialization()", file="JsonSerializerTest.cs"];
m6_281 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.NullValueHandlingSerialization()", span="599-599", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NullValueHandlingSerialization()", file="JsonSerializerTest.cs"];
m6_837 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDictionarysWithPreserveObjectReferences()", span="1952-1952", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDictionarysWithPreserveObjectReferences()", file="JsonSerializerTest.cs"];
m6_838 [label="CircularDictionary circularDictionary = new CircularDictionary()", span="1954-1954", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDictionarysWithPreserveObjectReferences()", file="JsonSerializerTest.cs"];
m6_839 [label="circularDictionary.Add(''other'', new CircularDictionary { {''blah'', null }})", span="1955-1955", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDictionarysWithPreserveObjectReferences()", file="JsonSerializerTest.cs"];
m6_840 [label="circularDictionary.Add(''self'', circularDictionary)", span="1956-1956", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDictionarysWithPreserveObjectReferences()", file="JsonSerializerTest.cs"];
m6_841 [label="string json = JsonConvert.SerializeObject(circularDictionary, Formatting.Indented,\r\n        new JsonSerializerSettings { PreserveReferencesHandling = PreserveReferencesHandling.All })", span="1958-1959", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDictionarysWithPreserveObjectReferences()", file="JsonSerializerTest.cs"];
m6_842 [label="Assert.AreEqual(@''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''other'''': {\r\n    ''''$id'''': ''''2'''',\r\n    ''''blah'''': null\r\n  },\r\n  ''''self'''': {\r\n    ''''$ref'''': ''''1''''\r\n  }\r\n}'', json)", span="1961-1970", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDictionarysWithPreserveObjectReferences()", file="JsonSerializerTest.cs"];
m6_843 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDictionarysWithPreserveObjectReferences()", span="1952-1952", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDictionarysWithPreserveObjectReferences()", file="JsonSerializerTest.cs"];
m6_887 [label="Entry object.ReferenceEquals(object, object)", span="0-0", cluster="object.ReferenceEquals(object, object)", file="JsonSerializerTest.cs"];
m6_1014 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeWithBadTypeName()", span="2498-2498", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeWithBadTypeName()", file="JsonSerializerTest.cs"];
m6_1015 [label="string employeeRef = typeof(Employee).AssemblyQualifiedName", span="2500-2500", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeWithBadTypeName()", file="JsonSerializerTest.cs"];
m6_1016 [label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$type'''': '''''' + employeeRef + @'''''',\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Manager'''': null\r\n}''", span="2502-2507", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeWithBadTypeName()", file="JsonSerializerTest.cs"];
m6_1017 [label="JsonConvert.DeserializeObject(json, typeof(Person), new JsonSerializerSettings\r\n      {\r\n        TypeNameHandling = TypeNameHandling.Objects\r\n      })", span="2509-2512", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeWithBadTypeName()", file="JsonSerializerTest.cs"];
m6_1018 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeWithBadTypeName()", span="2498-2498", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeWithBadTypeName()", file="JsonSerializerTest.cs"];
m6_68 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.HashtableDeserialization()", span="169-169", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.HashtableDeserialization()", file="JsonSerializerTest.cs"];
m6_69 [label="string value = @''{''''Name'''':''''Orange'''', ''''Price'''':3.99, ''''ExpiryDate'''':''''01/24/2010 12:00:00''''}''", span="171-171", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.HashtableDeserialization()", file="JsonSerializerTest.cs"];
m6_70 [label="Hashtable p = JsonConvert.DeserializeObject(value, typeof(Hashtable)) as Hashtable", span="173-173", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.HashtableDeserialization()", file="JsonSerializerTest.cs"];
m6_71 [label="Assert.AreEqual(''Orange'', p[''Name''].ToString())", span="175-175", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.HashtableDeserialization()", file="JsonSerializerTest.cs"];
m6_72 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.HashtableDeserialization()", span="169-169", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.HashtableDeserialization()", file="JsonSerializerTest.cs"];
m6_859 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularListsIgnore()", span="2015-2015", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularListsIgnore()", file="JsonSerializerTest.cs"];
m6_860 [label="CircularList circularList = new CircularList()", span="2017-2017", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularListsIgnore()", file="JsonSerializerTest.cs"];
m6_861 [label="circularList.Add(null)", span="2018-2018", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularListsIgnore()", file="JsonSerializerTest.cs"];
m6_862 [label="circularList.Add(new CircularList { null })", span="2019-2019", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularListsIgnore()", file="JsonSerializerTest.cs"];
m6_863 [label="circularList.Add(new CircularList { new CircularList { circularList } })", span="2020-2020", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularListsIgnore()", file="JsonSerializerTest.cs"];
m6_864 [label="string json = JsonConvert.SerializeObject(circularList,\r\n                                                Formatting.Indented,\r\n                                                new JsonSerializerSettings { ReferenceLoopHandling = ReferenceLoopHandling.Ignore })", span="2022-2024", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularListsIgnore()", file="JsonSerializerTest.cs"];
m6_865 [label="Assert.AreEqual(@''[\r\n  null,\r\n  [\r\n    null\r\n  ],\r\n  [\r\n    []\r\n  ]\r\n]'', json)", span="2026-2034", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularListsIgnore()", file="JsonSerializerTest.cs"];
m6_866 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularListsIgnore()", span="2015-2015", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularListsIgnore()", file="JsonSerializerTest.cs"];
m6_547 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="584-584", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerTest.cs"];
m6_215 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="JsonSerializerTest.cs"];
m6_431 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverter()", span="850-850", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverter()", file="JsonSerializerTest.cs"];
m6_432 [label="DateTime testDate = new DateTime(JsonConvert.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="852-852", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverter()", file="JsonSerializerTest.cs"];
m6_433 [label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="853-853", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverter()", file="JsonSerializerTest.cs"];
m6_437 [label="Assert.AreEqual(testDate, m2.DefaultConverter)", span="860-860", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverter()", file="JsonSerializerTest.cs"];
m6_438 [label="Assert.AreEqual(testDate, m2.MemberConverter)", span="861-861", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverter()", file="JsonSerializerTest.cs"];
m6_434 [label="string json = JsonConvert.SerializeObject(m1)", span="855-855", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverter()", file="JsonSerializerTest.cs"];
m6_435 [label="Assert.AreEqual(@''{''''DefaultConverter'''':''''\/Date(0)\/'''',''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="856-856", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverter()", file="JsonSerializerTest.cs"];
m6_436 [label="MemberConverterClass m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json)", span="858-858", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverter()", file="JsonSerializerTest.cs"];
m6_439 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverter()", span="850-850", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverter()", file="JsonSerializerTest.cs"];
m6_167 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserializeOkay()", span="435-435", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserializeOkay()", file="JsonSerializerTest.cs"];
m6_168 [label="Product product = new Product()", span="437-437", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserializeOkay()", file="JsonSerializerTest.cs"];
m6_169 [label="product.Name = ''Apple''", span="439-439", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserializeOkay()", file="JsonSerializerTest.cs"];
m6_170 [label="product.ExpiryDate = new DateTime(2008, 12, 28)", span="440-440", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserializeOkay()", file="JsonSerializerTest.cs"];
m6_171 [label="product.Price = 3.99M", span="441-441", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserializeOkay()", file="JsonSerializerTest.cs"];
m6_172 [label="product.Sizes = new string[] { ''Small'', ''Medium'', ''Large'' }", span="442-442", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserializeOkay()", file="JsonSerializerTest.cs"];
m6_173 [label="string output = JsonConvert.SerializeObject(product)", span="444-444", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserializeOkay()", file="JsonSerializerTest.cs"];
m6_174 [label="JsonSerializer jsonSerializer = new JsonSerializer()", span="456-456", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserializeOkay()", file="JsonSerializerTest.cs"];
m6_177 [label="JsonReader jsonReader = new JsonTextReader(new StringReader(output))", span="461-461", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserializeOkay()", file="JsonSerializerTest.cs"];
m6_175 [label="jsonSerializer.MissingMemberHandling = MissingMemberHandling.Ignore", span="457-457", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserializeOkay()", file="JsonSerializerTest.cs"];
m6_178 [label="deserializedValue = jsonSerializer.Deserialize(jsonReader, typeof(ProductShort))", span="463-463", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserializeOkay()", file="JsonSerializerTest.cs"];
m6_176 [label="object deserializedValue", span="459-459", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserializeOkay()", file="JsonSerializerTest.cs"];
m6_179 [label="ProductShort deserializedProductShort = (ProductShort)deserializedValue", span="466-466", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserializeOkay()", file="JsonSerializerTest.cs"];
m6_180 [label="Assert.AreEqual(''Apple'', deserializedProductShort.Name)", span="468-468", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserializeOkay()", file="JsonSerializerTest.cs"];
m6_181 [label="Assert.AreEqual(new DateTime(2008, 12, 28), deserializedProductShort.ExpiryDate)", span="469-469", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserializeOkay()", file="JsonSerializerTest.cs"];
m6_182 [label="Assert.AreEqual(''Small'', deserializedProductShort.Sizes[0])", span="470-470", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserializeOkay()", file="JsonSerializerTest.cs"];
m6_183 [label="Assert.AreEqual(''Medium'', deserializedProductShort.Sizes[1])", span="471-471", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserializeOkay()", file="JsonSerializerTest.cs"];
m6_184 [label="Assert.AreEqual(''Large'', deserializedProductShort.Sizes[2])", span="472-472", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserializeOkay()", file="JsonSerializerTest.cs"];
m6_185 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserializeOkay()", span="435-435", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserializeOkay()", file="JsonSerializerTest.cs"];
m6_953 [label="Entry Newtonsoft.Json.JsonSerializer.Populate(Newtonsoft.Json.JsonReader, object)", span="287-287", cluster="Newtonsoft.Json.JsonSerializer.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerTest.cs"];
m6_356 [label="Entry System.Collections.Generic.Stack<T>.Push(T)", span="0-0", cluster="System.Collections.Generic.Stack<T>.Push(T)", file="JsonSerializerTest.cs"];
m6_823 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularDictionarysError()", span="1925-1925", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularDictionarysError()", file="JsonSerializerTest.cs"];
m6_824 [label="CircularDictionary circularDictionary = new CircularDictionary()", span="1927-1927", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularDictionarysError()", file="JsonSerializerTest.cs"];
m6_825 [label="circularDictionary.Add(''other'', new CircularDictionary { { ''blah'', null } })", span="1928-1928", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularDictionarysError()", file="JsonSerializerTest.cs"];
m6_826 [label="circularDictionary.Add(''self'', circularDictionary)", span="1929-1929", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularDictionarysError()", file="JsonSerializerTest.cs"];
m6_827 [label="JsonConvert.SerializeObject(circularDictionary, Formatting.Indented)", span="1931-1931", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularDictionarysError()", file="JsonSerializerTest.cs"];
m6_828 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularDictionarysError()", span="1925-1925", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularDictionarysError()", file="JsonSerializerTest.cs"];
m6_217 [label="Entry Unk.WriteObject", span="", cluster="Unk.WriteObject", file="JsonSerializerTest.cs"];
m6_538 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeInt64ToNullableDouble()", span="1038-1038", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonSerializerTest.cs"];
m6_539 [label="string json = @''{''''Height'''':1}''", span="1040-1040", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonSerializerTest.cs"];
m6_540 [label="DoubleClass c = JsonConvert.DeserializeObject<DoubleClass>(json)", span="1042-1042", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonSerializerTest.cs"];
m6_541 [label="Assert.AreEqual(1, c.Height)", span="1043-1043", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonSerializerTest.cs"];
m6_542 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeInt64ToNullableDouble()", span="1038-1038", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonSerializerTest.cs"];
m6_923 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", file="JsonSerializerTest.cs"];
m6_287 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.SerializeNull()", span="631-631", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeNull()", file="JsonSerializerTest.cs"];
m6_288 [label="string json = JsonConvert.SerializeObject(null)", span="633-633", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeNull()", file="JsonSerializerTest.cs"];
m6_289 [label="Assert.AreEqual(''null'', json)", span="634-634", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeNull()", file="JsonSerializerTest.cs"];
m6_290 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.SerializeNull()", span="631-631", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeNull()", file="JsonSerializerTest.cs"];
m6_430 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", span="569-569", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", file="JsonSerializerTest.cs"];
m6_346 [label="Entry Newtonsoft.Json.Tests.TestObjects.ConverableMembers.ConverableMembers()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.ConverableMembers.ConverableMembers()", file="JsonSerializerTest.cs"];
m6_1026 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeTypeNameOnly()", span="2537-2537", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeTypeNameOnly()", file="JsonSerializerTest.cs"];
m6_1027 [label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Employee'''',\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Manager'''': null\r\n}''", span="2539-2544", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeTypeNameOnly()", file="JsonSerializerTest.cs"];
m6_1028 [label="JsonConvert.DeserializeObject(json, null, new JsonSerializerSettings\r\n      {\r\n        TypeNameHandling = TypeNameHandling.Objects\r\n      })", span="2546-2549", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeTypeNameOnly()", file="JsonSerializerTest.cs"];
m6_1029 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeTypeNameOnly()", span="2537-2537", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeTypeNameOnly()", file="JsonSerializerTest.cs"];
m6_130 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyClass.JsonPropertyClass()", span="334-334", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyClass.JsonPropertyClass()", file="JsonSerializerTest.cs"];
m6_202 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DateTimeTest()", span="491-491", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs"];
m6_203 [label="List<DateTime> testDates = new List<DateTime> {\r\n        new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Local),\r\n        new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Unspecified),\r\n        new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Utc),\r\n        new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Local),\r\n        new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Unspecified),\r\n        new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc),\r\n      }", span="493-500", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs"];
m6_204 [label="string result", span="501-501", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs"];
m6_207 [label="s.WriteObject(ms, testDates)", span="506-506", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs"];
m6_211 [label="result = JsonConvert.SerializeObject(testDates)", span="512-512", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs"];
m6_205 [label="MemoryStream ms = new MemoryStream()", span="504-504", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs"];
m6_206 [label="DataContractJsonSerializer s = new DataContractJsonSerializer(typeof(List<DateTime>))", span="505-505", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs"];
m6_208 [label="ms.Seek(0, SeekOrigin.Begin)", span="507-507", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs"];
m6_209 [label="StreamReader sr = new StreamReader(ms)", span="508-508", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs"];
m6_210 [label="string expected = sr.ReadToEnd()", span="510-510", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs"];
m6_212 [label="Assert.AreEqual(expected, result)", span="513-513", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs"];
m6_213 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.DateTimeTest()", span="491-491", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs"];
m6_463 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", span="897-897", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", file="JsonSerializerTest.cs"];
m6_464 [label="IncompatibleJsonAttributeClass c = new IncompatibleJsonAttributeClass()", span="899-899", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", file="JsonSerializerTest.cs"];
m6_465 [label="JsonConvert.SerializeObject(c)", span="900-900", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", file="JsonSerializerTest.cs"];
m6_466 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", span="897-897", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", file="JsonSerializerTest.cs"];
m6_29 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.JsonConvertSerializer()", span="117-117", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonConvertSerializer()", file="JsonSerializerTest.cs"];
m6_30 [label="string value = @''{''''Name'''':''''Orange'''', ''''Price'''':3.99, ''''ExpiryDate'''':''''01/24/2010 12:00:00''''}''", span="119-119", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonConvertSerializer()", file="JsonSerializerTest.cs"];
m6_31 [label="Product p = JsonConvert.DeserializeObject(value, typeof(Product)) as Product", span="121-121", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonConvertSerializer()", file="JsonSerializerTest.cs"];
m6_32 [label="Assert.AreEqual(''Orange'', p.Name)", span="123-123", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonConvertSerializer()", file="JsonSerializerTest.cs"];
m6_33 [label="Assert.AreEqual(new DateTime(2010, 1, 24, 12, 0, 0), p.ExpiryDate)", span="124-124", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonConvertSerializer()", file="JsonSerializerTest.cs"];
m6_34 [label="Assert.AreEqual(3.99, p.Price)", span="125-125", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonConvertSerializer()", file="JsonSerializerTest.cs"];
m6_35 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.JsonConvertSerializer()", span="117-117", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonConvertSerializer()", file="JsonSerializerTest.cs"];
m6_146 [label="Entry Newtonsoft.Json.Tests.TestObjects.Article.Article(string)", span="35-35", cluster="Newtonsoft.Json.Tests.TestObjects.Article.Article(string)", file="JsonSerializerTest.cs"];
m6_102 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.GoogleSearchAPI()", span="227-227", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GoogleSearchAPI()", file="JsonSerializerTest.cs"];
m6_103 [label="string json = @''{\r\n    results:\r\n        [\r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://www.google.com/'''',\r\n                url : ''''http://www.google.com/'''',\r\n                visibleUrl : ''''www.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:zhool8dxBV4J:www.google.com'''',\r\n                title : ''''Google'''',\r\n                titleNoFormatting : ''''Google'''',\r\n                content : ''''Enables users to search the Web, Usenet, and \r\nimages. Features include PageRank,   caching and translation of \r\nresults, and an option to find similar pages.''''\r\n            },\r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://news.google.com/'''',\r\n                url : ''''http://news.google.com/'''',\r\n                visibleUrl : ''''news.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:Va_XShOz_twJ:news.google.com'''',\r\n                title : ''''Google News'''',\r\n                titleNoFormatting : ''''Google News'''',\r\n                content : ''''Aggregated headlines and a search engine of many of the world's news sources.''''\r\n            },\r\n            \r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://groups.google.com/'''',\r\n                url : ''''http://groups.google.com/'''',\r\n                visibleUrl : ''''groups.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:x2uPD3hfkn0J:groups.google.com'''',\r\n                title : ''''Google Groups'''',\r\n                titleNoFormatting : ''''Google Groups'''',\r\n                content : ''''Enables users to search and browse the Usenet \r\narchives which consist of over 700   million messages, and post new \r\ncomments.''''\r\n            },\r\n            \r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://maps.google.com/'''',\r\n                url : ''''http://maps.google.com/'''',\r\n                visibleUrl : ''''maps.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:dkf5u2twBXIJ:maps.google.com'''',\r\n                title : ''''Google Maps'''',\r\n                titleNoFormatting : ''''Google Maps'''',\r\n                content : ''''Provides directions, interactive maps, and \r\nsatellite/aerial imagery of the United   States. Can also search by \r\nkeyword such as type of business.''''\r\n            }\r\n        ],\r\n        \r\n    adResults:\r\n        [\r\n            {\r\n                GsearchResultClass:''''GwebSearch.ad'''',\r\n                title : ''''Gartner Symposium/ITxpo'''',\r\n                content1 : ''''Meet brilliant Gartner IT analysts'''',\r\n                content2 : ''''20-23 May 2007- Barcelona, Spain'''',\r\n                url : \r\n''''http://www.google.com/url?sa=L&ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB&num=1&q=http://www.gartner.com/it/sym/2007/spr8/spr8.jsp%3Fsrc%3D_spain_07_%26WT.srch%3D1&usg=__CxRH06E4Xvm9Muq13S4MgMtnziY='''', \r\n\r\n                impressionUrl : \r\n''''http://www.google.com/uds/css/ad-indicator-on.gif?ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB'''', \r\n\r\n                unescapedUrl : \r\n''''http://www.google.com/url?sa=L&ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB&num=1&q=http://www.gartner.com/it/sym/2007/spr8/spr8.jsp%3Fsrc%3D_spain_07_%26WT.srch%3D1&usg=__CxRH06E4Xvm9Muq13S4MgMtnziY='''', \r\n\r\n                visibleUrl : ''''www.gartner.com''''\r\n            }\r\n        ]\r\n}\r\n''", span="229-306", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GoogleSearchAPI()", file="JsonSerializerTest.cs"];
m6_104 [label="object o = JsonConvert.DeserializeObject(json)", span="307-307", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GoogleSearchAPI()", file="JsonSerializerTest.cs"];
m6_105 [label="string s = string.Empty", span="308-308", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GoogleSearchAPI()", file="JsonSerializerTest.cs"];
m6_106 [label="s += s", span="309-309", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GoogleSearchAPI()", file="JsonSerializerTest.cs"];
m6_107 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.GoogleSearchAPI()", span="227-227", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GoogleSearchAPI()", file="JsonSerializerTest.cs"];
m6_602 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.Co.Co()", span="1248-1248", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.Co.Co()", file="JsonSerializerTest.cs"];
m6_983 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeTypeName()", span="2376-2376", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeTypeName()", file="JsonSerializerTest.cs"];
m6_984 [label="string employeeRef = typeof(Employee).AssemblyQualifiedName", span="2378-2378", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeTypeName()", file="JsonSerializerTest.cs"];
m6_985 [label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$type'''': '''''' + employeeRef + @'''''',\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Manager'''': null\r\n}''", span="2380-2385", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeTypeName()", file="JsonSerializerTest.cs"];
m6_986 [label="object employee = JsonConvert.DeserializeObject(json, null, new JsonSerializerSettings\r\n        {\r\n          TypeNameHandling = TypeNameHandling.Objects\r\n        })", span="2387-2390", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeTypeName()", file="JsonSerializerTest.cs"];
m6_987 [label="Assert.IsInstanceOfType(typeof(Employee), employee)", span="2392-2392", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeTypeName()", file="JsonSerializerTest.cs"];
m6_988 [label="Assert.AreEqual(''Name!'', ((Employee)employee).Name)", span="2393-2393", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeTypeName()", file="JsonSerializerTest.cs"];
m6_989 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeTypeName()", span="2376-2376", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeTypeName()", file="JsonSerializerTest.cs"];
m6_336 [label="Entry Newtonsoft.Json.Tests.TestObjects.ClassWithArray.ClassWithArray()", span="35-35", cluster="Newtonsoft.Json.Tests.TestObjects.ClassWithArray.ClassWithArray()", file="JsonSerializerTest.cs"];
m6_594 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.Test.Test()", span="1267-1267", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.Test.Test()", file="JsonSerializerTest.cs"];
m6_595 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.Test.Test()", span="1267-1267", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.Test.Test()", file="JsonSerializerTest.cs"];
m6_462 [label="Entry Newtonsoft.Json.Tests.TestObjects.ClassAndMemberConverterClass.ClassAndMemberConverterClass()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.ClassAndMemberConverterClass.ClassAndMemberConverterClass()", file="JsonSerializerTest.cs"];
m6_778 [label="Entry Newtonsoft.Json.Tests.TestObjects.CircularReferenceClass.CircularReferenceClass()", span="32-32", cluster="Newtonsoft.Json.Tests.TestObjects.CircularReferenceClass.CircularReferenceClass()", file="JsonSerializerTest.cs"];
m6_286 [label="Entry object.Object()", span="0-0", cluster="object.Object()", file="JsonSerializerTest.cs"];
m6_252 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T)", span="557-557", cluster="Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T)", file="JsonSerializerTest.cs"];
m6_617 [label="Entry System.IO.File.Open(string, System.IO.FileMode)", span="0-0", cluster="System.IO.File.Open(string, System.IO.FileMode)", file="JsonSerializerTest.cs"];
m6_998 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeGenericObjectListWithTypeName()", span="2448-2448", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeGenericObjectListWithTypeName()", file="JsonSerializerTest.cs"];
m6_999 [label="string employeeRef = typeof (Employee).AssemblyQualifiedName", span="2450-2450", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeGenericObjectListWithTypeName()", file="JsonSerializerTest.cs"];
m6_1000 [label="string personRef = typeof (Person).AssemblyQualifiedName", span="2451-2451", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeGenericObjectListWithTypeName()", file="JsonSerializerTest.cs"];
m6_1001 [label="string json = @''[\r\n  {\r\n    ''''$id'''': ''''1'''',\r\n    ''''$type'''': '''''' + employeeRef + @'''''',\r\n    ''''Name'''': ''''Bob'''',\r\n    ''''Manager'''': {\r\n      ''''$id'''': ''''2'''',\r\n      ''''$type'''': '''''' + employeeRef + @'''''',\r\n      ''''Name'''': ''''Frank'''',\r\n      ''''Manager'''': null\r\n    }\r\n  },\r\n  {\r\n    ''''$type'''': '''''' + personRef + @'''''',\r\n    ''''Name'''': null,\r\n    ''''BirthDate'''': ''''\/Date(978134400000)\/'''',\r\n    ''''LastModified'''': ''''\/Date(978134400000)\/''''\r\n  },\r\n  ''''String!'''',\r\n  -2147483648\r\n]''", span="2453-2473", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeGenericObjectListWithTypeName()", file="JsonSerializerTest.cs"];
m6_1002 [label="List<object> values = (List<object>)JsonConvert.DeserializeObject(json, typeof(List<object>), new JsonSerializerSettings\r\n      {\r\n        TypeNameHandling = TypeNameHandling.Objects\r\n      })", span="2475-2478", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeGenericObjectListWithTypeName()", file="JsonSerializerTest.cs"];
m6_1003 [label="Assert.AreEqual(4, values.Count)", span="2480-2480", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeGenericObjectListWithTypeName()", file="JsonSerializerTest.cs"];
m6_1004 [label="Employee e = (Employee) values[0]", span="2482-2482", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeGenericObjectListWithTypeName()", file="JsonSerializerTest.cs"];
m6_1005 [label="Person p = (Person) values[1]", span="2483-2483", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeGenericObjectListWithTypeName()", file="JsonSerializerTest.cs"];
m6_1011 [label="Assert.AreEqual(''String!'', values[2])", span="2492-2492", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeGenericObjectListWithTypeName()", file="JsonSerializerTest.cs"];
m6_1012 [label="Assert.AreEqual(int.MinValue, values[3])", span="2493-2493", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeGenericObjectListWithTypeName()", file="JsonSerializerTest.cs"];
m6_1006 [label="Assert.AreEqual(''Bob'', e.Name)", span="2485-2485", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeGenericObjectListWithTypeName()", file="JsonSerializerTest.cs"];
m6_1007 [label="Assert.AreEqual(''Frank'', e.Manager.Name)", span="2486-2486", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeGenericObjectListWithTypeName()", file="JsonSerializerTest.cs"];
m6_1008 [label="Assert.AreEqual(null, p.Name)", span="2488-2488", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeGenericObjectListWithTypeName()", file="JsonSerializerTest.cs"];
m6_1009 [label="Assert.AreEqual(new DateTime(2000, 12, 30, 0, 0, 0, DateTimeKind.Utc), p.BirthDate)", span="2489-2489", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeGenericObjectListWithTypeName()", file="JsonSerializerTest.cs"];
m6_1010 [label="Assert.AreEqual(new DateTime(2000, 12, 30, 0, 0, 0, DateTimeKind.Utc), p.LastModified)", span="2490-2490", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeGenericObjectListWithTypeName()", file="JsonSerializerTest.cs"];
m6_1013 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeGenericObjectListWithTypeName()", span="2448-2448", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeGenericObjectListWithTypeName()", file="JsonSerializerTest.cs"];
m6_578 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJaggedArray()", span="1118-1118", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs"];
m6_579 [label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1,2],[2,1],[2,2]],''''After'''':''''After!''''}''", span="1120-1120", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs"];
m6_580 [label="JaggedArray aa = JsonConvert.DeserializeObject<JaggedArray>(json)", span="1122-1122", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs"];
m6_588 [label="Assert.AreEqual(json, after)", span="1133-1133", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs"];
m6_581 [label="Assert.AreEqual(''Before!'', aa.Before)", span="1124-1124", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs"];
m6_582 [label="Assert.AreEqual(''After!'', aa.After)", span="1125-1125", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs"];
m6_583 [label="Assert.AreEqual(4, aa.Coordinates.Length)", span="1126-1126", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs"];
m6_584 [label="Assert.AreEqual(2, aa.Coordinates[0].Length)", span="1127-1127", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs"];
m6_585 [label="Assert.AreEqual(1, aa.Coordinates[0][0])", span="1128-1128", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs"];
m6_586 [label="Assert.AreEqual(2, aa.Coordinates[1][1])", span="1129-1129", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs"];
m6_587 [label="string after = JsonConvert.SerializeObject(aa)", span="1131-1131", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs"];
m6_589 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJaggedArray()", span="1118-1118", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs"];
m6_990 [label="Entry Unk.IsInstanceOfType", span="", cluster="Unk.IsInstanceOfType", file="JsonSerializerTest.cs"];
m6_484 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="499-499", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerTest.cs"];
m6_935 [label="Entry Newtonsoft.Json.Serialization.IReferenceResolver.GetReference(object)", span="43-43", cluster="Newtonsoft.Json.Serialization.IReferenceResolver.GetReference(object)", file="JsonSerializerTest.cs"];
m6_1030 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserializationWithComments()", span="2553-2553", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs"];
m6_1031 [label="string json = @''/*comment*/ { /*comment*/\r\n        ''''Name'''': /*comment*/ ''''Apple'''' /*comment*/, /*comment*/\r\n        ''''ExpiryDate'''': ''''\/Date(1230375600000+1300)\/'''',\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''': /*comment*/ [ /*comment*/\r\n          ''''Small'''', /*comment*/\r\n          ''''Medium'''' /*comment*/,\r\n          /*comment*/ ''''Large''''\r\n        /*comment*/ ] /*comment*/\r\n      } /*comment*/''", span="2555-2564", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs"];
m6_1032 [label="Product deserializedProduct = (Product)JsonConvert.DeserializeObject(json, typeof(Product))", span="2566-2566", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs"];
m6_1033 [label="Assert.AreEqual(''Apple'', deserializedProduct.Name)", span="2568-2568", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs"];
m6_1034 [label="Assert.AreEqual(new DateTime(2008, 12, 28), deserializedProduct.ExpiryDate)", span="2569-2569", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs"];
m6_1035 [label="Assert.AreEqual(3.99, deserializedProduct.Price)", span="2570-2570", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs"];
m6_1036 [label="Assert.AreEqual(''Small'', deserializedProduct.Sizes[0])", span="2571-2571", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs"];
m6_1037 [label="Assert.AreEqual(''Medium'', deserializedProduct.Sizes[1])", span="2572-2572", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs"];
m6_1038 [label="Assert.AreEqual(''Large'', deserializedProduct.Sizes[2])", span="2573-2573", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs"];
m6_1039 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserializationWithComments()", span="2553-2553", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs"];
m6_752 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.SerializeEmployeeReference()", span="1659-1659", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeEmployeeReference()", file="JsonSerializerTest.cs"];
m6_753 [label="Employee mikeManager = new Employee\r\n        {\r\n          Name = ''Mike Manager''\r\n        }", span="1661-1664", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeEmployeeReference()", file="JsonSerializerTest.cs"];
m6_754 [label="Employee joeUser = new Employee\r\n        {\r\n          Name = ''Joe User'',\r\n          Manager = mikeManager\r\n        }", span="1665-1669", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeEmployeeReference()", file="JsonSerializerTest.cs"];
m6_755 [label="List<Employee> employees = new List<Employee>\r\n        {\r\n          mikeManager,\r\n          joeUser\r\n        }", span="1671-1675", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeEmployeeReference()", file="JsonSerializerTest.cs"];
m6_756 [label="string json = JsonConvert.SerializeObject(employees, Formatting.Indented)", span="1677-1677", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeEmployeeReference()", file="JsonSerializerTest.cs"];
m6_757 [label="Assert.AreEqual(@''[\r\n  {\r\n    ''''$id'''': ''''1'''',\r\n    ''''Name'''': ''''Mike Manager'''',\r\n    ''''Manager'''': null\r\n  },\r\n  {\r\n    ''''$id'''': ''''2'''',\r\n    ''''Name'''': ''''Joe User'''',\r\n    ''''Manager'''': {\r\n      ''''$ref'''': ''''1''''\r\n    }\r\n  }\r\n]'', json)", span="1678-1691", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeEmployeeReference()", file="JsonSerializerTest.cs"];
m6_758 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.SerializeEmployeeReference()", span="1659-1659", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeEmployeeReference()", file="JsonSerializerTest.cs"];
m6_867 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.SerializeListsWithPreserveObjectReferences()", span="2038-2038", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeListsWithPreserveObjectReferences()", file="JsonSerializerTest.cs"];
m6_868 [label="CircularList circularList = new CircularList()", span="2040-2040", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeListsWithPreserveObjectReferences()", file="JsonSerializerTest.cs"];
m6_869 [label="circularList.Add(null)", span="2041-2041", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeListsWithPreserveObjectReferences()", file="JsonSerializerTest.cs"];
m6_870 [label="circularList.Add(new CircularList { null })", span="2042-2042", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeListsWithPreserveObjectReferences()", file="JsonSerializerTest.cs"];
m6_871 [label="circularList.Add(new CircularList { new CircularList { circularList }})", span="2043-2043", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeListsWithPreserveObjectReferences()", file="JsonSerializerTest.cs"];
m6_872 [label="string json = JsonConvert.SerializeObject(circularList, Formatting.Indented,\r\n        new JsonSerializerSettings { PreserveReferencesHandling = PreserveReferencesHandling.All })", span="2045-2046", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeListsWithPreserveObjectReferences()", file="JsonSerializerTest.cs"];
m6_873 [label="WriteEscapedJson(json)", span="2048-2048", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeListsWithPreserveObjectReferences()", file="JsonSerializerTest.cs"];
m6_874 [label="Assert.AreEqual(@''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$values'''': [\r\n    null,\r\n    {\r\n      ''''$id'''': ''''2'''',\r\n      ''''$values'''': [\r\n        null\r\n      ]\r\n    },\r\n    {\r\n      ''''$id'''': ''''3'''',\r\n      ''''$values'''': [\r\n        {\r\n          ''''$id'''': ''''4'''',\r\n          ''''$values'''': [\r\n            {\r\n              ''''$ref'''': ''''1''''\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}'', json)", span="2049-2073", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeListsWithPreserveObjectReferences()", file="JsonSerializerTest.cs"];
m6_875 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.SerializeListsWithPreserveObjectReferences()", span="2038-2038", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeListsWithPreserveObjectReferences()", file="JsonSerializerTest.cs"];
m6_120 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyClassSerialize()", span="355-355", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs"];
m6_121 [label="JsonPropertyClass test = new JsonPropertyClass()", span="357-357", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs"];
m6_122 [label="test.Pie = ''Delicious''", span="358-358", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs"];
m6_123 [label="test.SweetCakesCount = int.MaxValue", span="359-359", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs"];
m6_124 [label="string jsonText = JsonConvert.SerializeObject(test)", span="361-361", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs"];
m6_127 [label="Assert.AreEqual(test.Pie, test2.Pie)", span="367-367", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs"];
m6_128 [label="Assert.AreEqual(test.SweetCakesCount, test2.SweetCakesCount)", span="368-368", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs"];
m6_125 [label="Assert.AreEqual(@''{''''pie'''':''''Delicious'''',''''pie1'''':''''PieChart!'''',''''sweet_cakes_count'''':2147483647}'', jsonText)", span="363-363", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs"];
m6_126 [label="JsonPropertyClass test2 = JsonConvert.DeserializeObject<JsonPropertyClass>(jsonText)", span="365-365", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs"];
m6_129 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyClassSerialize()", span="355-355", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs"];
m6_515 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeNullableMember()", span="995-995", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs"];
m6_516 [label="UserNullable userNullablle = new UserNullable\r\n                                    {\r\n                                      Id = new Guid(''AD6205E8-0DF4-465d-AEA6-8BA18E93A7E7''),\r\n                                      FName = ''FirstValue'',\r\n                                      LName = ''LastValue'',\r\n                                      RoleId = 5,\r\n                                      NullableRoleId = 6,\r\n                                      NullRoleId = null,\r\n                                      Active = true\r\n                                    }", span="997-1006", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs"];
m6_517 [label="string json = JsonConvert.SerializeObject(userNullablle)", span="1008-1008", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs"];
m6_518 [label="Assert.AreEqual(@''{''''Id'''':''''ad6205e8-0df4-465d-aea6-8ba18e93a7e7'''',''''FName'''':''''FirstValue'''',''''LName'''':''''LastValue'''',''''RoleId'''':5,''''NullableRoleId'''':6,''''NullRoleId'''':null,''''Active'''':true}'', json)", span="1010-1010", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs"];
m6_519 [label="UserNullable userNullablleDeserialized = JsonConvert.DeserializeObject<UserNullable>(json)", span="1012-1012", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs"];
m6_520 [label="Assert.AreEqual(new Guid(''AD6205E8-0DF4-465d-AEA6-8BA18E93A7E7''), userNullablleDeserialized.Id)", span="1014-1014", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs"];
m6_521 [label="Assert.AreEqual(''FirstValue'', userNullablleDeserialized.FName)", span="1015-1015", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs"];
m6_522 [label="Assert.AreEqual(''LastValue'', userNullablleDeserialized.LName)", span="1016-1016", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs"];
m6_523 [label="Assert.AreEqual(5, userNullablleDeserialized.RoleId)", span="1017-1017", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs"];
m6_524 [label="Assert.AreEqual(6, userNullablleDeserialized.NullableRoleId)", span="1018-1018", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs"];
m6_525 [label="Assert.AreEqual(null, userNullablleDeserialized.NullRoleId)", span="1019-1019", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs"];
m6_526 [label="Assert.AreEqual(true, userNullablleDeserialized.Active)", span="1020-1020", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs"];
m6_527 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeNullableMember()", span="995-995", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs"];
m6_221 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DateTimeOffset()", span="518-518", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DateTimeOffset()", file="JsonSerializerTest.cs"];
m6_222 [label="List<DateTimeOffset> testDates = new List<DateTimeOffset> {\r\n        new DateTimeOffset(new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Utc)),\r\n        new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero),\r\n        new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(13)),\r\n        new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(-3.5)),\r\n      }", span="520-525", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DateTimeOffset()", file="JsonSerializerTest.cs"];
m6_223 [label="string result = JsonConvert.SerializeObject(testDates)", span="527-527", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DateTimeOffset()", file="JsonSerializerTest.cs"];
m6_224 [label="Assert.AreEqual(@''[''''\/Date(-59011455539000+0000)\/'''',''''\/Date(946688461000+0000)\/'''',''''\/Date(946641661000+1300)\/'''',''''\/Date(946701061000-0330)\/'''']'', result)", span="528-528", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DateTimeOffset()", file="JsonSerializerTest.cs"];
m6_225 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.DateTimeOffset()", span="518-518", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DateTimeOffset()", file="JsonSerializerTest.cs"];
m6_403 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="457-457", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="JsonSerializerTest.cs"];
m6_730 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.PopulatePerson()", span="1623-1623", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PopulatePerson()", file="JsonSerializerTest.cs"];
m6_731 [label="Person p = new Person()", span="1625-1625", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PopulatePerson()", file="JsonSerializerTest.cs"];
m6_732 [label="JsonSerializer serializer = new JsonSerializer()", span="1627-1627", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PopulatePerson()", file="JsonSerializerTest.cs"];
m6_733 [label="serializer.Populate(new StringReader(@''{''''Name'''':''''James''''}''), p)", span="1628-1628", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PopulatePerson()", file="JsonSerializerTest.cs"];
m6_734 [label="Assert.AreEqual(''James'', p.Name)", span="1630-1630", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PopulatePerson()", file="JsonSerializerTest.cs"];
m6_735 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.PopulatePerson()", span="1623-1623", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PopulatePerson()", file="JsonSerializerTest.cs"];
m6_897 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DictionaryInterfaceClass.DictionaryInterfaceClass()", span="2169-2169", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DictionaryInterfaceClass.DictionaryInterfaceClass()", file="JsonSerializerTest.cs"];
m6_898 [label="Dictionary = new Dictionary<string, int>\r\n          {\r\n            { ''existing'', 1 }\r\n          }", span="2171-2174", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DictionaryInterfaceClass.DictionaryInterfaceClass()", file="JsonSerializerTest.cs"];
m6_899 [label="Collection = new List<int>\r\n          {\r\n            1,\r\n            2,\r\n            3\r\n          }", span="2175-2180", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DictionaryInterfaceClass.DictionaryInterfaceClass()", file="JsonSerializerTest.cs"];
m6_900 [label="Employee = new Employee\r\n          {\r\n            Name = ''EmployeeName!''\r\n          }", span="2181-2184", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DictionaryInterfaceClass.DictionaryInterfaceClass()", file="JsonSerializerTest.cs"];
m6_901 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.DictionaryInterfaceClass.DictionaryInterfaceClass()", span="2169-2169", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DictionaryInterfaceClass.DictionaryInterfaceClass()", file="JsonSerializerTest.cs"];
m6_440 [label="Entry System.DateTime.DateTime(long, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(long, System.DateTimeKind)", file="JsonSerializerTest.cs"];
m6_569 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.SerializeJaggedArray()", span="1105-1105", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs"];
m6_570 [label="JaggedArray aa = new JaggedArray()", span="1107-1107", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs"];
m6_571 [label="aa.Before = ''Before!''", span="1108-1108", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs"];
m6_572 [label="aa.After = ''After!''", span="1109-1109", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs"];
m6_573 [label="aa.Coordinates = new[] { new[] { 1, 1 }, new[] { 1, 2 }, new[] { 2, 1 }, new[] { 2, 2 } }", span="1110-1110", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs"];
m6_574 [label="string json = JsonConvert.SerializeObject(aa)", span="1112-1112", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs"];
m6_575 [label="Assert.AreEqual(@''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1,2],[2,1],[2,2]],''''After'''':''''After!''''}'', json)", span="1114-1114", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs"];
m6_576 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.SerializeJaggedArray()", span="1105-1105", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs"];
m6_401 [label="Entry Newtonsoft.Json.Tests.TestObjects.Name.Name(string)", span="35-35", cluster="Newtonsoft.Json.Tests.TestObjects.Name.Name(string)", file="JsonSerializerTest.cs"];
m6_301 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", span="652-652", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs"];
m6_302 [label="string json = ''{bar:[1,2,3], foo:'hello'}''", span="654-654", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs"];
m6_303 [label="ClassWithArray wibble = JsonConvert.DeserializeObject<ClassWithArray>(json)", span="655-655", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs"];
m6_304 [label="Assert.AreEqual(''hello'', wibble.Foo)", span="656-656", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs"];
m6_305 [label="Assert.AreEqual(4, wibble.Bar.Count)", span="658-658", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs"];
m6_306 [label="Assert.AreEqual(int.MaxValue, wibble.Bar[0])", span="659-659", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs"];
m6_307 [label="Assert.AreEqual(1, wibble.Bar[1])", span="660-660", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs"];
m6_308 [label="Assert.AreEqual(2, wibble.Bar[2])", span="661-661", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs"];
m6_309 [label="Assert.AreEqual(3, wibble.Bar[3])", span="662-662", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs"];
m6_310 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", span="652-652", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs"];
m6_451 [label="Entry Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.JavaScriptDateTimeConverter()", span="9-9", cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.JavaScriptDateTimeConverter()", file="JsonSerializerTest.cs"];
m6_507 [label="Entry Newtonsoft.Json.JsonRaw.JsonRaw(string)", span="58-58", cluster="Newtonsoft.Json.JsonRaw.JsonRaw(string)", file="JsonSerializerTest.cs"];
m6_166 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", span="615-615", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerTest.cs"];
m6_889 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeArraysWithPreserveObjectReferences()", span="2118-2118", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeArraysWithPreserveObjectReferences()", file="JsonSerializerTest.cs"];
m6_890 [label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$values'''': [\r\n    null,\r\n    {\r\n      ''''$id'''': ''''2'''',\r\n      ''''$values'''': [\r\n        null\r\n      ]\r\n    },\r\n    {\r\n      ''''$id'''': ''''3'''',\r\n      ''''$values'''': [\r\n        {\r\n          ''''$id'''': ''''4'''',\r\n          ''''$values'''': [\r\n            {\r\n              ''''$ref'''': ''''1''''\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}''", span="2120-2144", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeArraysWithPreserveObjectReferences()", file="JsonSerializerTest.cs"];
m6_891 [label="JsonConvert.DeserializeObject<string[][]>(json,\r\n        new JsonSerializerSettings { PreserveReferencesHandling = PreserveReferencesHandling.All })", span="2146-2147", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeArraysWithPreserveObjectReferences()", file="JsonSerializerTest.cs"];
m6_892 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeArraysWithPreserveObjectReferences()", span="2118-2118", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeArraysWithPreserveObjectReferences()", file="JsonSerializerTest.cs"];
m6_902 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionaryInterface()", span="2189-2189", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs"];
m6_903 [label="string json = @''{\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Dictionary'''': {\r\n    ''''Item'''': 11\r\n  }\r\n}''", span="2191-2196", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs"];
m6_904 [label="DictionaryInterfaceClass c = JsonConvert.DeserializeObject<DictionaryInterfaceClass>(json,\r\n        new JsonSerializerSettings { ObjectCreationHandling = ObjectCreationHandling.Replace })", span="2198-2199", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs"];
m6_905 [label="Assert.AreEqual(''Name!'', c.Name)", span="2200-2200", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs"];
m6_906 [label="Assert.AreEqual(1, c.Dictionary.Count)", span="2201-2201", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs"];
m6_907 [label="Assert.AreEqual(11, c.Dictionary[''Item''])", span="2202-2202", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs"];
m6_908 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionaryInterface()", span="2189-2189", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs"];
m6_893 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.UnexpectedEnd()", span="2152-2152", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.UnexpectedEnd()", file="JsonSerializerTest.cs"];
m6_894 [label="string json = @''{\r\n  ''''$id'''':''", span="2154-2155", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.UnexpectedEnd()", file="JsonSerializerTest.cs"];
m6_895 [label="JsonConvert.DeserializeObject<string[][]>(json,\r\n        new JsonSerializerSettings { PreserveReferencesHandling = PreserveReferencesHandling.All })", span="2157-2158", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.UnexpectedEnd()", file="JsonSerializerTest.cs"];
m6_896 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.UnexpectedEnd()", span="2152-2152", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.UnexpectedEnd()", file="JsonSerializerTest.cs"];
m6_357 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.GuidTest()", span="727-727", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs"];
m6_358 [label="Guid guid = new Guid(''BED7F4EA-1A96-11d2-8F08-00A0C9A6186D'')", span="729-729", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs"];
m6_359 [label="string json = JsonConvert.SerializeObject(new ClassWithGuid { GuidField = guid })", span="731-731", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs"];
m6_362 [label="Assert.AreEqual(guid, c.GuidField)", span="735-735", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs"];
m6_360 [label="Assert.AreEqual(@''{''''GuidField'''':''''bed7f4ea-1a96-11d2-8f08-00a0c9a6186d''''}'', json)", span="732-732", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs"];
m6_361 [label="ClassWithGuid c = JsonConvert.DeserializeObject<ClassWithGuid>(json)", span="734-734", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs"];
m6_363 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.GuidTest()", span="727-727", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs"];
m6_37 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJavaScriptDate()", span="129-129", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs"];
m6_38 [label="DateTime dateValue = new DateTime(2000, 3, 30)", span="131-131", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs"];
m6_39 [label="Dictionary<string, object> testDictionary = new Dictionary<string, object>()", span="132-132", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs"];
m6_40 [label="testDictionary[''date''] = dateValue", span="133-133", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs"];
m6_44 [label="Assert.AreEqual(dateValue, deserializedDate)", span="140-140", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs"];
m6_41 [label="string jsonText = JsonConvert.SerializeObject(testDictionary)", span="135-135", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs"];
m6_42 [label="Dictionary<string, object> deserializedDictionary = (Dictionary<string, object>)JsonConvert.DeserializeObject(jsonText, typeof(Dictionary<string, object>))", span="137-137", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs"];
m6_46 [label="Console.WriteLine(jsonText)", span="143-143", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs"];
m6_48 [label="Console.WriteLine(jsonText)", span="145-145", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs"];
m6_43 [label="DateTime deserializedDate = (DateTime)deserializedDictionary[''date'']", span="138-138", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs"];
m6_45 [label="Console.WriteLine(''DeserializeJavaScriptDate'')", span="142-142", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs"];
m6_47 [label="Console.WriteLine()", span="144-144", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs"];
m6_49 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJavaScriptDate()", span="129-129", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs"];
m6_660 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.SubKlass.SubKlass(string)", span="1427-1427", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SubKlass.SubKlass(string)", file="JsonSerializerTest.cs"];
m6_661 [label="SubProp = subprop", span="1427-1427", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SubKlass.SubKlass(string)", file="JsonSerializerTest.cs"];
m6_662 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.SubKlass.SubKlass(string)", span="1427-1427", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SubKlass.SubKlass(string)", file="JsonSerializerTest.cs"];
m6_506 [label="Entry Newtonsoft.Json.Tests.TestObjects.PersonRaw.PersonRaw()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.PersonRaw.PersonRaw()", file="JsonSerializerTest.cs"];
m6_555 [label="Entry Newtonsoft.Json.Tests.TestObjects.TypeClass.TypeClass()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.TypeClass.TypeClass()", file="JsonSerializerTest.cs"];
m6_429 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", span="468-468", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", file="JsonSerializerTest.cs"];
m6_760 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeEmployeeReference()", span="1695-1695", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeEmployeeReference()", file="JsonSerializerTest.cs"];
m6_761 [label="string json = @''[\r\n  {\r\n    ''''$id'''': ''''1'''',\r\n    ''''Name'''': ''''Mike Manager'''',\r\n    ''''Manager'''': null\r\n  },\r\n  {\r\n    ''''$id'''': ''''2'''',\r\n    ''''Name'''': ''''Joe User'''',\r\n    ''''Manager'''': {\r\n      ''''$ref'''': ''''1''''\r\n    }\r\n  }\r\n]''", span="1697-1710", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeEmployeeReference()", file="JsonSerializerTest.cs"];
m6_762 [label="List<Employee> employees = JsonConvert.DeserializeObject<List<Employee>>(json)", span="1712-1712", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeEmployeeReference()", file="JsonSerializerTest.cs"];
m6_763 [label="Assert.AreEqual(2, employees.Count)", span="1714-1714", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeEmployeeReference()", file="JsonSerializerTest.cs"];
m6_764 [label="Assert.AreEqual(''Mike Manager'', employees[0].Name)", span="1715-1715", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeEmployeeReference()", file="JsonSerializerTest.cs"];
m6_765 [label="Assert.AreEqual(''Joe User'', employees[1].Name)", span="1716-1716", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeEmployeeReference()", file="JsonSerializerTest.cs"];
m6_766 [label="Assert.AreEqual(employees[0], employees[1].Manager)", span="1717-1717", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeEmployeeReference()", file="JsonSerializerTest.cs"];
m6_767 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeEmployeeReference()", span="1695-1695", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeEmployeeReference()", file="JsonSerializerTest.cs"];
m6_10 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="JsonSerializerTest.cs"];
m6_27 [label="Entry Newtonsoft.Json.Tests.TestObjects.Product.Product()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.Product.Product()", file="JsonSerializerTest.cs"];
m6_88 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", span="204-204", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="JsonSerializerTest.cs"];
m6_89 [label="string value = JsonConvert.SerializeObject(new SetOnlyPropertyClass())", span="206-206", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="JsonSerializerTest.cs"];
m6_90 [label="SetOnlyPropertyClass c = JsonConvert.DeserializeObject<SetOnlyPropertyClass>(value)", span="208-208", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="JsonSerializerTest.cs"];
m6_91 [label="Assert.AreEqual(c.Field, ''Field'')", span="210-210", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="JsonSerializerTest.cs"];
m6_92 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", span="204-204", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="JsonSerializerTest.cs"];
m6_118 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="JsonSerializerTest.cs"];
m6_219 [label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0", cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="JsonSerializerTest.cs"];
m6_647 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="JsonSerializerTest.cs"];
m6_155 [label="Entry System.Collections.ObjectModel.ReadOnlyCollection<T>.ReadOnlyCollection(System.Collections.Generic.IList<T>)", span="0-0", cluster="System.Collections.ObjectModel.ReadOnlyCollection<T>.ReadOnlyCollection(System.Collections.Generic.IList<T>)", file="JsonSerializerTest.cs"];
m6_264 [label="Entry System.IO.StringWriter.StringWriter()", span="0-0", cluster="System.IO.StringWriter.StringWriter()", file="JsonSerializerTest.cs"];
m6_618 [label="Entry System.IO.StreamWriter.StreamWriter(System.IO.Stream)", span="0-0", cluster="System.IO.StreamWriter.StreamWriter(System.IO.Stream)", file="JsonSerializerTest.cs"];
m6_719 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DataContractPrivateMembers.ToString()", span="1597-1597", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DataContractPrivateMembers.ToString()", file="JsonSerializerTest.cs"];
m6_720 [label="return ''_name: '' + _name + '', _age: '' + Age + '', Rank: '' + Rank + '', JsonTitle: '' + Title;", span="1599-1599", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DataContractPrivateMembers.ToString()", file="JsonSerializerTest.cs"];
m6_721 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.DataContractPrivateMembers.ToString()", span="1597-1597", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DataContractPrivateMembers.ToString()", file="JsonSerializerTest.cs"];
m6_548 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.SerializeTypeProperty()", span="1056-1056", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs"];
m6_549 [label="TypeClass typeClass = new TypeClass {TypeProperty = typeof (bool)}", span="1058-1058", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs"];
m6_550 [label="string json = JsonConvert.SerializeObject(typeClass)", span="1060-1060", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs"];
m6_551 [label="Assert.AreEqual(@''{''''TypeProperty'''':''''System.Boolean''''}'', json)", span="1061-1061", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs"];
m6_552 [label="TypeClass typeClass2 = JsonConvert.DeserializeObject<TypeClass>(json)", span="1063-1063", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs"];
m6_553 [label="Assert.AreEqual(typeof(bool), typeClass2.TypeProperty)", span="1064-1064", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs"];
m6_554 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.SerializeTypeProperty()", span="1056-1056", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs"];
m6_93 [label="Entry Newtonsoft.Json.Tests.TestObjects.SetOnlyPropertyClass.SetOnlyPropertyClass()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.SetOnlyPropertyClass.SetOnlyPropertyClass()", file="JsonSerializerTest.cs"];
m6_951 [label="Entry Newtonsoft.Json.Linq.JObject.Load(Newtonsoft.Json.JsonReader)", span="184-184", cluster="Newtonsoft.Json.Linq.JObject.Load(Newtonsoft.Json.JsonReader)", file="JsonSerializerTest.cs"];
m6_188 [label="Entry System.IO.StringReader.StringReader(string)", span="0-0", cluster="System.IO.StringReader.StringReader(string)", file="JsonSerializerTest.cs"];
m6_253 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.CustomCollectionSerialization()", span="574-574", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CustomCollectionSerialization()", file="JsonSerializerTest.cs"];
m6_254 [label="ProductCollection collection = new ProductCollection()\r\n      {\r\n        new Product() { Name = ''Test1'' },\r\n        new Product() { Name = ''Test2'' },\r\n        new Product() { Name = ''Test3'' }\r\n      }", span="576-581", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CustomCollectionSerialization()", file="JsonSerializerTest.cs"];
m6_255 [label="JsonSerializer jsonSerializer = new JsonSerializer()", span="583-583", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CustomCollectionSerialization()", file="JsonSerializerTest.cs"];
m6_258 [label="jsonSerializer.Serialize(sw, collection)", span="588-588", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CustomCollectionSerialization()", file="JsonSerializerTest.cs"];
m6_261 [label="CollectionAssert.AreEqual(collection, collectionNew)", span="595-595", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CustomCollectionSerialization()", file="JsonSerializerTest.cs"];
m6_256 [label="jsonSerializer.ReferenceLoopHandling = ReferenceLoopHandling.Ignore", span="584-584", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CustomCollectionSerialization()", file="JsonSerializerTest.cs"];
m6_260 [label="ProductCollection collectionNew = (ProductCollection)jsonSerializer.Deserialize(new JsonTextReader(new StringReader(sw.GetStringBuilder().ToString())), typeof(ProductCollection))", span="593-593", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CustomCollectionSerialization()", file="JsonSerializerTest.cs"];
m6_257 [label="StringWriter sw = new StringWriter()", span="586-586", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CustomCollectionSerialization()", file="JsonSerializerTest.cs"];
m6_259 [label="Assert.AreEqual(@''[{''''Name'''':''''Test1'''',''''ExpiryDate'''':''''\/Date(946684800000)\/'''',''''Price'''':0,''''Sizes'''':null},{''''Name'''':''''Test2'''',''''ExpiryDate'''':''''\/Date(946684800000)\/'''',''''Price'''':0,''''Sizes'''':null},{''''Name'''':''''Test3'''',''''ExpiryDate'''':''''\/Date(946684800000)\/'''',''''Price'''':0,''''Sizes'''':null}]'',\r\n        sw.GetStringBuilder().ToString())", span="590-591", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CustomCollectionSerialization()", file="JsonSerializerTest.cs"];
m6_262 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.CustomCollectionSerialization()", span="574-574", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CustomCollectionSerialization()", file="JsonSerializerTest.cs"];
m6_737 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.PopulateListOfPeople()", span="1634-1634", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PopulateListOfPeople()", file="JsonSerializerTest.cs"];
m6_738 [label="List<Person> p = new List<Person>()", span="1636-1636", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PopulateListOfPeople()", file="JsonSerializerTest.cs"];
m6_739 [label="JsonSerializer serializer = new JsonSerializer()", span="1638-1638", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PopulateListOfPeople()", file="JsonSerializerTest.cs"];
m6_740 [label="serializer.Populate(new StringReader(@''[{''''Name'''':''''James''''},{''''Name'''':''''Jim''''}]''), p)", span="1639-1639", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PopulateListOfPeople()", file="JsonSerializerTest.cs"];
m6_741 [label="Assert.AreEqual(2, p.Count)", span="1641-1641", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PopulateListOfPeople()", file="JsonSerializerTest.cs"];
m6_742 [label="Assert.AreEqual(''James'', p[0].Name)", span="1642-1642", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PopulateListOfPeople()", file="JsonSerializerTest.cs"];
m6_743 [label="Assert.AreEqual(''Jim'', p[1].Name)", span="1643-1643", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PopulateListOfPeople()", file="JsonSerializerTest.cs"];
m6_744 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.PopulateListOfPeople()", span="1634-1634", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PopulateListOfPeople()", file="JsonSerializerTest.cs"];
m6_7 [label="Entry Newtonsoft.Json.Tests.TestObjects.Store.Store()", span="44-44", cluster="Newtonsoft.Json.Tests.TestObjects.Store.Store()", file="JsonSerializerTest.cs"];
m6_8 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object)", span="444-444", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", file="JsonSerializerTest.cs"];
m6_590 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeGoogleGeoCode()", span="1203-1203", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeGoogleGeoCode()", file="JsonSerializerTest.cs"];
m6_591 [label="string json = @''{\r\n  ''''name'''': ''''1600 Amphitheatre Parkway, Mountain View, CA, USA'''',\r\n  ''''Status'''': {\r\n    ''''code'''': 200,\r\n    ''''request'''': ''''geocode''''\r\n  },\r\n  ''''Placemark'''': [\r\n    {\r\n      ''''address'''': ''''1600 Amphitheatre Pkwy, Mountain View, CA 94043, USA'''',\r\n      ''''AddressDetails'''': {\r\n        ''''Country'''': {\r\n          ''''CountryNameCode'''': ''''US'''',\r\n          ''''AdministrativeArea'''': {\r\n            ''''AdministrativeAreaName'''': ''''CA'''',\r\n            ''''SubAdministrativeArea'''': {\r\n              ''''SubAdministrativeAreaName'''': ''''Santa Clara'''',\r\n              ''''Locality'''': {\r\n                ''''LocalityName'''': ''''Mountain View'''',\r\n                ''''Thoroughfare'''': {\r\n                  ''''ThoroughfareName'''': ''''1600 Amphitheatre Pkwy''''\r\n                },\r\n                ''''PostalCode'''': {\r\n                  ''''PostalCodeNumber'''': ''''94043''''\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        ''''Accuracy'''': 8\r\n      },\r\n      ''''Point'''': {\r\n        ''''coordinates'''': [-122.083739, 37.423021, 0]\r\n      }\r\n    }\r\n  ]\r\n}''", span="1205-1240", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeGoogleGeoCode()", file="JsonSerializerTest.cs"];
m6_592 [label="GoogleMapGeocoderStructure jsonGoogleMapGeocoder = JsonConvert.DeserializeObject<GoogleMapGeocoderStructure>(json)", span="1245-1245", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeGoogleGeoCode()", file="JsonSerializerTest.cs"];
m6_593 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeGoogleGeoCode()", span="1203-1203", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeGoogleGeoCode()", file="JsonSerializerTest.cs"];
m6_9 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type)", span="530-530", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type)", file="JsonSerializerTest.cs"];
m6_94 [label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.JsonIgnoreAttributeTest()", span="214-214", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonSerializerTest.cs"];
m6_95 [label="string json = JsonConvert.SerializeObject(new JsonIgnoreAttributeTestClass())", span="216-216", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonSerializerTest.cs"];
m6_96 [label="Assert.AreEqual(@''{''''Field'''':0,''''Property'''':21}'', json)", span="218-218", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonSerializerTest.cs"];
m6_97 [label="JsonIgnoreAttributeTestClass c = JsonConvert.DeserializeObject<JsonIgnoreAttributeTestClass>(@''{''''Field'''':99,''''Property'''':-1,''''IgnoredField'''':-1,''''IgnoredObject'''':[1,2,3,4,5]}'')", span="220-220", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonSerializerTest.cs"];
m6_98 [label="Assert.AreEqual(0, c.IgnoredField)", span="222-222", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonSerializerTest.cs"];
m6_99 [label="Assert.AreEqual(99, c.Field)", span="223-223", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonSerializerTest.cs"];
m6_100 [label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.JsonIgnoreAttributeTest()", span="214-214", cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonSerializerTest.cs"];
m6_1040 [label="Newtonsoft.Json.Tests.JsonSerializerTest", span="", file="JsonSerializerTest.cs"];
m6_1041 [label="Newtonsoft.Json.Tests.JsonSerializerTest.SuperKlass", span="", file="JsonSerializerTest.cs"];
m6_1042 [label="Newtonsoft.Json.Tests.JsonSerializerTest.SubKlass", span="", file="JsonSerializerTest.cs"];
m6_1043 [label="Newtonsoft.Json.Tests.JsonSerializerTest.DataContractPrivateMembers", span="", file="JsonSerializerTest.cs"];
m6_1044 [label="Newtonsoft.Json.Tests.JsonSerializerTest.DictionaryInterfaceClass", span="", file="JsonSerializerTest.cs"];
n0 -> n1  [key=0, style=solid, color=red];
n1 -> n2  [key=0, style=solid, color=red];
n1 -> n5  [key=2, style=dotted, color=red];
n1 -> n6  [key=2, style=dotted, color=red];
n1 -> n1  [key=3, color=red, style=bold, label="method methodReturn bool IsNullOrEmpty"];
n2 -> n3  [key=0, style=solid];
n2 -> n7  [key=2, style=dotted];
n2 -> n2  [key=1, style=dashed, color=darkseagreen4, label=p];
n3 -> n4  [key=0, style=solid];
n3 -> n8  [key=2, style=dotted];
n3 -> n9  [key=2, style=dotted];
n4 -> n0  [key=0, style=bold, color=blue];
d1 -> d2  [key=0, style=solid, color=green];
d1 -> d3  [key=2, style=dotted, color=green];
d0 -> d1  [key=0, style=solid, color=green];
d2 -> d0  [key=0, style=bold, color=blue];
m0_110 -> m0_111  [key=0, style=solid];
m0_110 -> m0_114  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_110 -> m0_101  [key=3, color=darkorchid, style=bold, label="Parameter variable object initialValue"];
m0_110 -> m0_122  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type targetType"];
m0_110 -> m0_102  [key=3, color=darkorchid, style=bold, label="Parameter variable object convertedValue"];
m0_110 -> m0_123  [key=3, color=darkorchid, style=bold, label="Parameter variable object convertedValue"];
m0_111 -> m0_112  [key=0, style=solid];
m0_111 -> m0_104  [key=2, style=dotted];
m0_111 -> m0_113  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_111 -> m0_45  [key=3, color=darkorchid, style=bold, label="method methodReturn object "];
m0_112 -> m0_110  [key=0, style=bold, color=blue];
m0_140 -> m0_141  [key=0, style=solid];
m0_140 -> m0_144  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_140 -> m0_132  [key=3, color=darkorchid, style=bold, label="Parameter variable object initialValue"];
m0_140 -> m0_133  [key=3, color=darkorchid, style=bold, label="Parameter variable object convertedValue"];
m0_141 -> m0_142  [key=0, style=solid];
m0_141 -> m0_104  [key=2, style=dotted];
m0_141 -> m0_143  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_141 -> m0_122  [key=3, color=darkorchid, style=bold, label="method methodReturn object "];
m0_142 -> m0_140  [key=0, style=bold, color=blue];
m0_95 -> m0_146  [key=0, style=solid];
m0_95 -> m0_147  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_95 -> m0_148  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_95 -> m0_149  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_95 -> m0_151  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_95 -> m0_76  [key=3, color=darkorchid, style=bold, label="method methodReturn object EnsureTypeAssignable"];
m0_95 -> m0_97  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m0_95 -> m0_122  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type targetType"];
m0_95 -> m0_50  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type initialType"];
m0_95 -> m0_45  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type targetType"];
m0_95 -> m0_95  [key=3, color=darkorchid, style=bold, label="method methodReturn object EnsureTypeAssignable"];
m0_146 -> m0_147  [key=0, style=solid];
m0_146 -> m0_34  [key=2, style=dotted];
m0_147 -> m0_148  [key=0, style=solid];
m0_147 -> m0_149  [key=0, style=solid];
m0_147 -> m0_30  [key=2, style=dotted];
m0_148 -> m0_152  [key=0, style=solid];
m0_149 -> m0_150  [key=0, style=solid];
m0_149 -> m0_151  [key=0, style=solid];
m0_149 -> m0_36  [key=2, style=dotted];
m0_151 -> m0_152  [key=0, style=solid];
m0_151 -> m0_96  [key=2, style=dotted];
m0_151 -> m0_153  [key=2, style=dotted];
m0_151 -> m0_85  [key=2, style=dotted];
m0_150 -> m0_152  [key=0, style=solid];
m0_152 -> m0_95  [key=0, style=bold, color=blue];
m0_129 -> m0_130  [key=0, style=solid];
m0_129 -> m0_132  [key=3, color=darkorchid, style=bold, label="method methodReturn bool TryConvertOrCast"];
m0_130 -> m0_131  [key=0, style=solid];
m0_130 -> m0_132  [key=2, style=dotted];
m0_131 -> m0_129  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid];
m0_0 -> m0_2  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_0 -> m0_3  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_0 -> m0_4  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_0 -> m0_5  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_0 -> m0_7  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_0 -> m0_9  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_0 -> m0_11  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_0 -> m0_13  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_0 -> m0_15  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_0 -> m0_16  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_0 -> m0_17  [key=1, style=dashed, color=darkseagreen4, label=bool];
m0_0 -> m0_19  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_0 -> m0_20  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_0 -> m0_22  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_0 -> m0_23  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_0 -> m0_6  [key=3, color=darkorchid, style=bold, label="method methodReturn bool CanConvertType"];
m0_0 -> m0_25  [key=3, color=darkorchid, style=bold, label="method methodReturn bool CanConvertType"];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_27  [key=2, style=dotted];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_27  [key=2, style=dotted];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_5  [key=0, style=solid];
m0_3 -> m0_28  [key=2, style=dotted];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_29  [key=2, style=dotted];
m0_4 -> m0_4  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_4 -> m0_7  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_4 -> m0_9  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_4 -> m0_11  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_4 -> m0_13  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_4 -> m0_16  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_4 -> m0_19  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_4 -> m0_23  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_7  [key=0, style=solid];
m0_7 -> m0_8  [key=0, style=solid];
m0_7 -> m0_9  [key=0, style=solid];
m0_7 -> m0_30  [key=2, style=dotted];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_11  [key=0, style=solid];
m0_11 -> m0_12  [key=0, style=solid];
m0_11 -> m0_13  [key=0, style=solid];
m0_13 -> m0_14  [key=0, style=solid];
m0_13 -> m0_15  [key=0, style=solid];
m0_15 -> m0_16  [key=0, style=solid];
m0_15 -> m0_31  [key=2, style=dotted];
m0_15 -> m0_17  [key=1, style=dashed, color=darkseagreen4, label=toConverter];
m0_16 -> m0_17  [key=0, style=solid];
m0_16 -> m0_19  [key=0, style=solid];
m0_16 -> m0_32  [key=2, style=dotted];
m0_16 -> m0_33  [key=2, style=dotted];
m0_17 -> m0_18  [key=0, style=solid];
m0_17 -> m0_19  [key=0, style=solid];
m0_17 -> m0_34  [key=2, style=dotted];
m0_19 -> m0_20  [key=0, style=solid];
m0_19 -> m0_31  [key=2, style=dotted];
m0_20 -> m0_21  [key=0, style=solid];
m0_20 -> m0_22  [key=0, style=solid];
m0_20 -> m0_32  [key=2, style=dotted];
m0_20 -> m0_35  [key=2, style=dotted];
m0_22 -> m0_23  [key=0, style=solid];
m0_22 -> m0_25  [key=0, style=solid];
m0_23 -> m0_24  [key=0, style=solid];
m0_23 -> m0_25  [key=0, style=solid];
m0_23 -> m0_36  [key=2, style=dotted];
m0_6 -> m0_26  [key=0, style=solid];
m0_8 -> m0_26  [key=0, style=solid];
m0_10 -> m0_26  [key=0, style=solid];
m0_12 -> m0_26  [key=0, style=solid];
m0_14 -> m0_26  [key=0, style=solid];
m0_18 -> m0_26  [key=0, style=solid];
m0_21 -> m0_26  [key=0, style=solid];
m0_25 -> m0_26  [key=0, style=solid];
m0_24 -> m0_26  [key=0, style=solid];
m0_26 -> m0_0  [key=0, style=bold, color=blue];
m0_32 -> m0_37  [key=0, style=solid];
m0_32 -> m0_15  [key=3, color=darkorchid, style=bold, label="Parameter variable System.ComponentModel.TypeConverter converter"];
m0_32 -> m0_19  [key=3, color=darkorchid, style=bold, label="Parameter variable System.ComponentModel.TypeConverter converter"];
m0_37 -> m0_38  [key=0, style=solid];
m0_38 -> m0_32  [key=0, style=bold, color=blue];
m0_116 -> m0_117  [key=0, style=solid];
m0_116 -> m0_119  [key=3, color=darkorchid, style=bold, label="method methodReturn T ConvertOrCast"];
m0_117 -> m0_118  [key=0, style=solid];
m0_117 -> m0_119  [key=2, style=dotted];
m0_118 -> m0_116  [key=0, style=bold, color=blue];
m0_101 -> m0_102  [key=0, style=solid];
m0_101 -> m0_107  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_101 -> m0_98  [key=3, color=darkorchid, style=bold, label="Parameter variable T convertedValue"];
m0_102 -> m0_103  [key=0, style=solid];
m0_102 -> m0_104  [key=2, style=dotted];
m0_102 -> m0_105  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_102 -> m0_102  [key=3, color=darkorchid, style=bold, label="method methodReturn T "];
m0_103 -> m0_101  [key=0, style=bold, color=blue];
m0_45 -> m0_46  [key=0, style=solid];
m0_45 -> m0_48  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_45 -> m0_49  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_45 -> m0_50  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_45 -> m0_51  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_45 -> m0_52  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_45 -> m0_53  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_45 -> m0_54  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_45 -> m0_55  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_45 -> m0_56  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_45 -> m0_57  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_45 -> m0_58  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_45 -> m0_59  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_45 -> m0_60  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_45 -> m0_61  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_45 -> m0_62  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_45 -> m0_63  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_45 -> m0_64  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_45 -> m0_65  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_45 -> m0_66  [key=1, style=dashed, color=red, label=object];
m0_45 -> m0_67  [key=1, style=dashed, color=red, label=object];
m0_45 -> m0_69  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_45 -> m0_70  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_45 -> m0_71  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_45 -> m0_73  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_45 -> m0_74  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_45 -> m0_75  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_45 -> m0_76  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_45 -> m0_77  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_45 -> m0_78  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_45 -> m0_79  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_45 -> m0_80  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_45 -> m0_42  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Globalization.CultureInfo culture"];
m0_45 -> m0_110  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type targetType"];
m0_45 -> m0_45  [key=3, color=darkorchid, style=bold, label="method methodReturn object Convert"];
m0_45 -> m0_95  [key=3, color=darkorchid, style=bold, label="method methodReturn object Convert"];
m0_46 -> m0_47  [key=0, style=solid];
m0_46 -> m0_48  [key=0, style=solid];
m0_48 -> m0_49  [key=0, style=solid];
m0_48 -> m0_50  [key=0, style=solid];
m0_48 -> m0_28  [key=2, style=dotted];
m0_49 -> m0_50  [key=0, style=solid];
m0_49 -> m0_29  [key=2, style=dotted];
m0_49 -> m0_49  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_49 -> m0_51  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_49 -> m0_53  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_49 -> m0_55  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_49 -> m0_56  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_49 -> m0_57  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_49 -> m0_58  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_49 -> m0_60  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_49 -> m0_62  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_49 -> m0_63  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_49 -> m0_64  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_49 -> m0_66  [key=1, style=dashed, color=red, label="System.Type"];
m0_49 -> m0_69  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_49 -> m0_70  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_49 -> m0_71  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_49 -> m0_75  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_49 -> m0_76  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_49 -> m0_77  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_49 -> m0_79  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_49 -> m0_80  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_50 -> m0_51  [key=0, style=solid];
m0_50 -> m0_34  [key=2, style=dotted];
m0_50 -> m0_68  [key=1, style=dashed, color=darkseagreen4, label=initialType];
m0_50 -> m0_72  [key=1, style=dashed, color=darkseagreen4, label=initialType];
m0_50 -> m0_76  [key=1, style=dashed, color=darkseagreen4, label=initialType];
m0_50 -> m0_77  [key=1, style=dashed, color=darkseagreen4, label=initialType];
m0_50 -> m0_79  [key=1, style=dashed, color=darkseagreen4, label=initialType];
m0_50 -> m0_80  [key=1, style=dashed, color=darkseagreen4, label=initialType];
m0_51 -> m0_52  [key=0, style=solid];
m0_51 -> m0_53  [key=0, style=solid];
m0_52 -> m0_81  [key=0, style=solid];
m0_53 -> m0_54  [key=0, style=solid];
m0_53 -> m0_55  [key=0, style=solid];
m0_53 -> m0_30  [key=2, style=dotted];
m0_54 -> m0_81  [key=0, style=solid];
m0_54 -> m0_83  [key=2, style=dotted];
m0_55 -> m0_56  [key=0, style=solid];
m0_55 -> m0_57  [key=0, style=solid];
m0_56 -> m0_81  [key=0, style=solid];
m0_56 -> m0_84  [key=2, style=dotted];
m0_56 -> m0_85  [key=2, style=dotted];
m0_57 -> m0_58  [key=0, style=solid];
m0_57 -> m0_64  [key=0, style=solid];
m0_57 -> m0_30  [key=2, style=dotted];
m0_58 -> m0_59  [key=0, style=solid];
m0_58 -> m0_63  [key=0, style=solid];
m0_59 -> m0_60  [key=0, style=solid];
m0_59 -> m0_61  [key=0, style=solid];
m0_60 -> m0_81  [key=0, style=solid];
m0_60 -> m0_86  [key=2, style=dotted];
m0_60 -> m0_87  [key=2, style=dotted];
m0_61 -> m0_62  [key=0, style=solid];
m0_61 -> m0_63  [key=0, style=solid];
m0_61 -> m0_88  [key=2, style=dotted];
m0_62 -> m0_81  [key=0, style=solid];
m0_62 -> m0_89  [key=2, style=dotted];
m0_63 -> m0_81  [key=0, style=solid];
m0_63 -> m0_90  [key=2, style=dotted];
m0_64 -> m0_65  [key=0, style=solid];
m0_64 -> m0_66  [key=0, style=solid, color=red];
m0_65 -> m0_81  [key=0, style=solid];
m0_65 -> m0_91  [key=2, style=dotted];
m0_66 -> m0_67  [key=0, style=solid, color=red];
m0_66 -> m0_68  [key=0, style=solid, color=red];
m0_67 -> m0_81  [key=0, style=solid, color=red];
m0_67 -> m0_92  [key=2, style=dotted, color=red];
m0_69 -> m0_70  [key=0, style=solid];
m0_69 -> m0_71  [key=0, style=solid];
m0_69 -> m0_33  [key=2, style=dotted];
m0_70 -> m0_81  [key=0, style=solid];
m0_70 -> m0_93  [key=2, style=dotted];
m0_71 -> m0_72  [key=0, style=solid];
m0_71 -> m0_31  [key=2, style=dotted];
m0_71 -> m0_73  [key=1, style=dashed, color=darkseagreen4, label=fromConverter];
m0_73 -> m0_81  [key=0, style=solid];
m0_73 -> m0_94  [key=2, style=dotted];
m0_74 -> m0_75  [key=0, style=solid];
m0_74 -> m0_78  [key=0, style=solid];
m0_75 -> m0_76  [key=0, style=solid];
m0_75 -> m0_77  [key=0, style=solid];
m0_75 -> m0_36  [key=2, style=dotted];
m0_76 -> m0_81  [key=0, style=solid];
m0_76 -> m0_95  [key=2, style=dotted];
m0_77 -> m0_81  [key=0, style=solid];
m0_77 -> m0_96  [key=2, style=dotted];
m0_77 -> m0_85  [key=2, style=dotted];
m0_78 -> m0_79  [key=0, style=solid];
m0_78 -> m0_80  [key=0, style=solid];
m0_79 -> m0_81  [key=0, style=solid];
m0_79 -> m0_97  [key=2, style=dotted];
m0_79 -> m0_95  [key=2, style=dotted];
m0_80 -> m0_81  [key=0, style=solid];
m0_80 -> m0_96  [key=2, style=dotted];
m0_80 -> m0_85  [key=2, style=dotted];
m0_47 -> m0_81  [key=0, style=solid];
m0_47 -> m0_82  [key=2, style=dotted];
m0_68 -> m0_69  [key=0, style=solid];
m0_68 -> m0_31  [key=2, style=dotted];
m0_68 -> m0_70  [key=1, style=dashed, color=darkseagreen4, label=toConverter];
m0_72 -> m0_73  [key=0, style=solid];
m0_72 -> m0_74  [key=0, style=solid];
m0_72 -> m0_35  [key=2, style=dotted];
m0_81 -> m0_45  [key=0, style=bold, color=blue];
m0_97 -> m0_154  [key=0, style=solid];
m0_97 -> m0_156  [key=1, style=dashed, color=darkseagreen4, label=INullable];
m0_97 -> m0_157  [key=1, style=dashed, color=darkseagreen4, label=INullable];
m0_97 -> m0_158  [key=1, style=dashed, color=darkseagreen4, label=INullable];
m0_97 -> m0_159  [key=1, style=dashed, color=darkseagreen4, label=INullable];
m0_97 -> m0_160  [key=1, style=dashed, color=darkseagreen4, label=INullable];
m0_97 -> m0_161  [key=1, style=dashed, color=darkseagreen4, label=INullable];
m0_97 -> m0_162  [key=1, style=dashed, color=darkseagreen4, label=INullable];
m0_97 -> m0_163  [key=1, style=dashed, color=darkseagreen4, label=INullable];
m0_97 -> m0_164  [key=1, style=dashed, color=darkseagreen4, label=INullable];
m0_97 -> m0_165  [key=1, style=dashed, color=darkseagreen4, label=INullable];
m0_97 -> m0_166  [key=1, style=dashed, color=darkseagreen4, label=INullable];
m0_97 -> m0_45  [key=3, color=darkorchid, style=bold, label="Parameter variable INullable nullableValue"];
m0_97 -> m0_76  [key=3, color=darkorchid, style=bold, label="method methodReturn object ToValue"];
m0_154 -> m0_155  [key=0, style=solid];
m0_154 -> m0_156  [key=0, style=solid];
m0_156 -> m0_157  [key=0, style=solid];
m0_156 -> m0_158  [key=0, style=solid];
m0_157 -> m0_167  [key=0, style=solid];
m0_157 -> m0_168  [key=2, style=dotted];
m0_158 -> m0_159  [key=0, style=solid];
m0_158 -> m0_160  [key=0, style=solid];
m0_159 -> m0_167  [key=0, style=solid];
m0_159 -> m0_168  [key=2, style=dotted];
m0_160 -> m0_161  [key=0, style=solid];
m0_160 -> m0_162  [key=0, style=solid];
m0_161 -> m0_167  [key=0, style=solid];
m0_161 -> m0_168  [key=2, style=dotted];
m0_162 -> m0_163  [key=0, style=solid];
m0_162 -> m0_164  [key=0, style=solid];
m0_163 -> m0_167  [key=0, style=solid];
m0_163 -> m0_168  [key=2, style=dotted];
m0_164 -> m0_165  [key=0, style=solid];
m0_164 -> m0_166  [key=0, style=solid];
m0_165 -> m0_167  [key=0, style=solid];
m0_165 -> m0_168  [key=2, style=dotted];
m0_166 -> m0_167  [key=0, style=solid];
m0_166 -> m0_96  [key=2, style=dotted];
m0_166 -> m0_169  [key=2, style=dotted];
m0_166 -> m0_170  [key=2, style=dotted];
m0_155 -> m0_167  [key=0, style=solid];
m0_167 -> m0_97  [key=0, style=bold, color=blue];
m0_122 -> m0_123  [key=0, style=solid];
m0_122 -> m0_124  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_122 -> m0_126  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_122 -> m0_119  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Globalization.CultureInfo culture"];
m0_122 -> m0_140  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type targetType"];
m0_122 -> m0_95  [key=3, color=darkorchid, style=bold, label="method methodReturn object ConvertOrCast"];
m0_123 -> m0_124  [key=0, style=solid];
m0_124 -> m0_125  [key=0, style=solid];
m0_124 -> m0_126  [key=0, style=solid];
m0_124 -> m0_110  [key=2, style=dotted];
m0_126 -> m0_127  [key=0, style=solid];
m0_126 -> m0_128  [key=2, style=dotted];
m0_126 -> m0_95  [key=2, style=dotted];
m0_125 -> m0_127  [key=0, style=solid];
m0_127 -> m0_122  [key=0, style=bold, color=blue];
m0_98 -> m0_99  [key=0, style=solid];
m0_98 -> m0_101  [key=3, color=darkorchid, style=bold, label="method methodReturn bool TryConvert"];
m0_99 -> m0_100  [key=0, style=solid];
m0_99 -> m0_101  [key=2, style=dotted];
m0_100 -> m0_98  [key=0, style=bold, color=blue];
m0_39 -> m0_40  [key=0, style=solid];
m0_39 -> m0_42  [key=3, color=darkorchid, style=bold, label="method methodReturn T Convert"];
m0_40 -> m0_41  [key=0, style=solid];
m0_40 -> m0_42  [key=2, style=dotted];
m0_41 -> m0_39  [key=0, style=bold, color=blue];
m0_88 -> m0_175  [key=0, style=solid];
m0_88 -> m0_45  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m0_88 -> m0_6  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsInteger"];
m0_88 -> m0_25  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsInteger"];
m0_175 -> m0_176  [key=0, style=solid];
m0_175 -> m0_185  [key=0, style=solid];
m0_175 -> m0_187  [key=2, style=dotted];
m0_176 -> m0_177  [key=0, style=solid];
m0_185 -> m0_186  [key=0, style=solid];
m0_177 -> m0_178  [key=0, style=solid];
m0_178 -> m0_179  [key=0, style=solid];
m0_179 -> m0_180  [key=0, style=solid];
m0_180 -> m0_181  [key=0, style=solid];
m0_181 -> m0_182  [key=0, style=solid];
m0_182 -> m0_183  [key=0, style=solid];
m0_183 -> m0_184  [key=0, style=solid];
m0_184 -> m0_186  [key=0, style=solid];
m0_186 -> m0_88  [key=0, style=bold, color=blue];
m0_119 -> m0_120  [key=0, style=solid];
m0_119 -> m0_116  [key=3, color=darkorchid, style=bold, label="Parameter variable object initialValue"];
m0_119 -> m0_122  [key=3, color=darkorchid, style=bold, label="method methodReturn T ConvertOrCast"];
m0_120 -> m0_121  [key=0, style=solid];
m0_120 -> m0_122  [key=2, style=dotted];
m0_121 -> m0_119  [key=0, style=bold, color=blue];
m0_31 -> m0_171  [key=0, style=solid];
m0_31 -> m0_172  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_31 -> m0_0  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type t"];
m0_31 -> m0_50  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type t"];
m0_31 -> m0_45  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type t"];
m0_171 -> m0_172  [key=0, style=solid];
m0_171 -> m0_27  [key=2, style=dotted];
m0_172 -> m0_173  [key=0, style=solid];
m0_172 -> m0_174  [key=2, style=dotted];
m0_173 -> m0_31  [key=0, style=bold, color=blue];
m0_132 -> m0_133  [key=0, style=solid];
m0_132 -> m0_137  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_132 -> m0_129  [key=3, color=darkorchid, style=bold, label="Parameter variable T convertedValue"];
m0_133 -> m0_134  [key=0, style=solid];
m0_133 -> m0_104  [key=2, style=dotted];
m0_133 -> m0_135  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_133 -> m0_133  [key=3, color=darkorchid, style=bold, label="method methodReturn T "];
m0_134 -> m0_132  [key=0, style=bold, color=blue];
m0_42 -> m0_43  [key=0, style=solid];
m0_42 -> m0_39  [key=3, color=darkorchid, style=bold, label="Parameter variable object initialValue"];
m0_42 -> m0_45  [key=3, color=darkorchid, style=bold, label="method methodReturn T Convert"];
m0_43 -> m0_44  [key=0, style=solid];
m0_43 -> m0_45  [key=2, style=dotted];
m0_44 -> m0_42  [key=0, style=bold, color=blue];
m0_143 -> m0_144  [key=0, style=solid];
m0_107 -> m0_108  [key=0, style=solid];
m0_107 -> m0_110  [key=2, style=dotted];
m0_105 -> m0_106  [key=0, style=solid];
m0_106 -> m0_107  [key=0, style=solid];
m0_108 -> m0_109  [key=0, style=solid];
m0_109 -> m0_105  [key=0, style=bold, color=blue];
m0_114 -> m0_115  [key=0, style=solid];
m0_114 -> m0_45  [key=2, style=dotted];
m0_113 -> m0_114  [key=0, style=solid];
m0_115 -> m0_113  [key=0, style=bold, color=blue];
m0_137 -> m0_138  [key=0, style=solid];
m0_137 -> m0_140  [key=2, style=dotted];
m0_135 -> m0_136  [key=0, style=solid];
m0_136 -> m0_137  [key=0, style=solid];
m0_138 -> m0_139  [key=0, style=solid];
m0_139 -> m0_135  [key=0, style=bold, color=blue];
m0_144 -> m0_145  [key=0, style=solid];
m0_144 -> m0_122  [key=2, style=dotted];
m0_145 -> m0_143  [key=0, style=bold, color=blue];
m0_188 -> m0_107  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_189 -> m0_114  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_190 -> m0_114  [key=1, style=dashed, color=darkseagreen4, label="System.Globalization.CultureInfo"];
m0_191 -> m0_114  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_192 -> m0_137  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_193 -> m0_144  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_194 -> m0_144  [key=1, style=dashed, color=darkseagreen4, label="System.Globalization.CultureInfo"];
m0_195 -> m0_144  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_0 -> m1_1  [key=0, style=solid, color=green];
m1_1 -> m1_2  [key=0, style=solid, color=green];
m1_1 -> m1_3  [key=2, style=dotted, color=red];
m1_1 -> m1_4  [key=1, style=dashed, color=green, label=first];
m1_2 -> m1_0  [key=0, style=bold, color=blue];
m1_2 -> m1_3  [key=0, style=solid];
m1_2 -> m1_5  [key=1, style=dashed, color=darkseagreen4, label=second];
m1_4 -> m1_5  [key=0, style=solid];
m1_4 -> m1_14  [key=2, style=dotted];
m1_4 -> m1_8  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m1_3 -> m1_4  [key=0, style=solid];
m1_3 -> m1_13  [key=2, style=dotted];
m1_3 -> m1_5  [key=1, style=dashed, color=darkseagreen4, label=resolver];
m1_5 -> m1_6  [key=0, style=solid];
m1_5 -> m1_14  [key=2, style=dotted];
m1_5 -> m1_7  [key=1, style=dashed, color=darkseagreen4, label=secondSchema];
m1_5 -> m1_11  [key=2, style=dotted];
m1_5 -> m1_8  [key=1, style=dashed, color=darkseagreen4, label=value];
m1_5 -> m1_9  [key=1, style=dashed, color=darkseagreen4, label=value];
m1_11 -> m1_12  [key=0, style=solid];
m1_11 -> m1_17  [key=2, style=dotted];
m1_11 -> m1_14  [key=0, style=solid];
m1_11 -> m1_4  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type objectType"];
m1_6 -> m1_7  [key=0, style=solid];
m1_6 -> m1_15  [key=2, style=dotted];
m1_6 -> m1_8  [key=0, style=solid];
m1_7 -> m1_11  [key=1, style=dashed, color=darkseagreen4, label=node];
m1_7 -> m1_8  [key=0, style=solid];
m1_7 -> m1_16  [key=2, style=dotted];
m1_7 -> m1_9  [key=1, style=dashed, color=darkseagreen4, label=node];
m1_7 -> m1_10  [key=1, style=dashed, color=darkseagreen4, label=node];
m1_7 -> m1_12  [key=2, style=dotted];
m1_10 -> m1_11  [key=0, style=solid];
m1_10 -> m1_17  [key=2, style=dotted];
m1_10 -> m1_4  [key=0, style=bold, color=blue];
m1_8 -> m1_17  [key=2, style=dotted];
m1_8 -> m1_9  [key=0, style=solid];
m1_8 -> m1_13  [key=2, style=dotted];
m1_9 -> m1_10  [key=0, style=solid];
m1_9 -> m1_17  [key=2, style=dotted];
m1_12 -> m1_0  [key=0, style=bold, color=blue];
m1_16 -> m1_17  [key=0, style=solid];
m1_16 -> m1_18  [key=2, style=dotted];
m1_14 -> m1_11  [key=0, style=bold, color=blue];
m1_15 -> m1_16  [key=0, style=solid];
m1_17 -> m1_15  [key=0, style=bold, color=blue];
m1_18 -> m1_19  [key=0, style=solid];
m1_23 -> m1_17  [key=2, style=dotted];
m1_23 -> m1_24  [key=0, style=solid];
m1_24 -> m1_17  [key=2, style=dotted];
m1_24 -> m1_25  [key=0, style=solid];
m1_21 -> m1_15  [key=2, style=dotted];
m1_21 -> m1_22  [key=0, style=solid];
m1_22 -> m1_16  [key=2, style=dotted];
m1_22 -> m1_23  [key=0, style=solid];
m1_22 -> m1_24  [key=1, style=dashed, color=darkseagreen4, label=node];
m1_20 -> m1_21  [key=0, style=solid];
m1_20 -> m1_22  [key=1, style=dashed, color=darkseagreen4, label=schema];
m1_20 -> m1_26  [key=2, style=dotted];
m1_19 -> m1_20  [key=0, style=solid];
m1_19 -> m1_5  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.CustomCreationConverter<T>"];
m1_25 -> m1_18  [key=0, style=bold, color=blue];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_2  [key=0, style=solid];
m3_1 -> m3_7  [key=2, style=dotted];
m3_1 -> m3_4  [key=1, style=dashed, color=darkseagreen4, label=person];
m3_2 -> m3_3  [key=0, style=solid];
m3_2 -> m3_8  [key=2, style=dotted];
m3_4 -> m3_5  [key=0, style=solid];
m3_4 -> m3_10  [key=2, style=dotted];
m3_4 -> m3_11  [key=2, style=dotted];
m3_3 -> m3_4  [key=0, style=solid];
m3_3 -> n9  [key=2, style=dotted];
m3_5 -> m3_6  [key=0, style=solid];
m3_5 -> n9  [key=2, style=dotted];
m3_6 -> m3_0  [key=0, style=bold, color=blue];
m4_10 -> m4_11  [key=0, style=solid];
m4_11 -> m4_12  [key=0, style=solid];
m4_11 -> m4_13  [key=2, style=dotted];
m4_11 -> m4_14  [key=2, style=dotted];
m4_12 -> m4_10  [key=0, style=bold, color=blue];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_2  [key=0, style=solid];
m4_2 -> m4_3  [key=0, style=solid];
m4_2 -> m4_6  [key=2, style=dotted];
m4_3 -> m4_4  [key=0, style=solid];
m4_3 -> m4_7  [key=2, style=dotted];
m4_3 -> m4_8  [key=2, style=dotted];
m4_3 -> m4_10  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_4 -> m4_5  [key=0, style=solid];
m4_4 -> n9  [key=2, style=dotted];
m4_5 -> m4_0  [key=0, style=bold, color=blue];
m5_0 -> m5_1  [key=0, style=solid];
m5_0 -> m5_2  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m5_0 -> m5_3  [key=1, style=dashed, color=darkseagreen4, label=bool];
m5_0 -> m5_4  [key=1, style=dashed, color=darkseagreen4, label=bool];
m5_0 -> m5_5  [key=1, style=dashed, color=darkseagreen4, label=bool];
m5_0 -> m5_6  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonConverter"];
m5_0 -> m5_7  [key=1, style=dashed, color=darkseagreen4, label=object];
m5_0 -> m5_8  [key=1, style=dashed, color=darkseagreen4, label=bool];
m5_0 -> m5_9  [key=1, style=dashed, color=darkseagreen4, label=bool];
m5_0 -> m5_10  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.NullValueHandling?"];
m5_0 -> m5_11  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.DefaultValueHandling?"];
m5_0 -> m5_12  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.ReferenceLoopHandling?"];
m5_1 -> m5_2  [key=0, style=solid];
m5_2 -> m5_3  [key=0, style=solid];
m5_3 -> m5_4  [key=0, style=solid];
m5_4 -> m5_5  [key=0, style=solid];
m5_5 -> m5_6  [key=0, style=solid];
m5_6 -> m5_7  [key=0, style=solid];
m5_7 -> m5_8  [key=0, style=solid];
m5_8 -> m5_9  [key=0, style=solid];
m5_9 -> m5_10  [key=0, style=solid];
m5_10 -> m5_11  [key=0, style=solid];
m5_11 -> m5_12  [key=0, style=solid];
m5_12 -> m5_13  [key=0, style=solid];
m5_13 -> m5_0  [key=0, style=bold, color=blue];
m5_14 -> m5_1  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonMemberMapping"];
m5_14 -> m5_2  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonMemberMapping"];
m5_14 -> m5_3  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonMemberMapping"];
m5_14 -> m5_4  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonMemberMapping"];
m5_14 -> m5_5  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonMemberMapping"];
m5_14 -> m5_6  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonMemberMapping"];
m5_14 -> m5_7  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonMemberMapping"];
m5_14 -> m5_8  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonMemberMapping"];
m5_14 -> m5_9  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonMemberMapping"];
m5_14 -> m5_10  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonMemberMapping"];
m5_14 -> m5_11  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonMemberMapping"];
m5_14 -> m5_12  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonMemberMapping"];
m6_632 -> m6_633  [key=0, style=solid];
m6_633 -> m6_634  [key=0, style=solid];
m6_633 -> m6_645  [key=2, style=dotted];
m6_633 -> m6_635  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_633 -> m6_636  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_633 -> m6_637  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_633 -> m6_641  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_633 -> m6_642  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_633 -> m6_643  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_634 -> m6_635  [key=0, style=solid];
m6_634 -> m6_50  [key=2, style=dotted];
m6_635 -> m6_636  [key=0, style=solid];
m6_635 -> m6_214  [key=2, style=dotted];
m6_636 -> m6_637  [key=0, style=solid];
m6_636 -> m6_214  [key=2, style=dotted];
m6_637 -> m6_638  [key=0, style=solid];
m6_637 -> m6_403  [key=2, style=dotted];
m6_637 -> m6_639  [key=1, style=dashed, color=darkseagreen4, label=json];
m6_641 -> m6_642  [key=0, style=solid];
m6_641 -> m6_647  [key=2, style=dotted];
m6_641 -> m6_10  [key=2, style=dotted];
m6_642 -> m6_643  [key=0, style=solid];
m6_642 -> m6_647  [key=2, style=dotted];
m6_642 -> m6_10  [key=2, style=dotted];
m6_643 -> m6_644  [key=0, style=solid];
m6_643 -> m6_647  [key=2, style=dotted];
m6_643 -> m6_10  [key=2, style=dotted];
m6_638 -> m6_639  [key=0, style=solid];
m6_638 -> m6_10  [key=2, style=dotted];
m6_639 -> m6_640  [key=0, style=solid];
m6_639 -> m6_87  [key=2, style=dotted];
m6_639 -> m6_641  [key=1, style=dashed, color=darkseagreen4, label=deserializedObject];
m6_639 -> m6_642  [key=1, style=dashed, color=darkseagreen4, label=deserializedObject];
m6_639 -> m6_643  [key=1, style=dashed, color=darkseagreen4, label=deserializedObject];
m6_640 -> m6_641  [key=0, style=solid];
m6_640 -> m6_646  [key=2, style=dotted];
m6_644 -> m6_632  [key=0, style=bold, color=blue];
m6_805 -> m6_806  [key=0, style=solid];
m6_806 -> m6_807  [key=0, style=solid];
m6_806 -> m6_759  [key=2, style=dotted];
m6_806 -> m6_808  [key=1, style=dashed, color=darkseagreen4, label=e1];
m6_807 -> m6_808  [key=0, style=solid];
m6_807 -> m6_759  [key=2, style=dotted];
m6_808 -> m6_809  [key=0, style=solid];
m6_808 -> m6_50  [key=2, style=dotted];
m6_809 -> m6_810  [key=0, style=solid];
m6_809 -> m6_403  [key=2, style=dotted];
m6_810 -> m6_811  [key=0, style=solid];
m6_810 -> m6_10  [key=2, style=dotted];
m6_811 -> m6_805  [key=0, style=bold, color=blue];
m6_149 -> m6_150  [key=0, style=solid];
m6_150 -> m6_151  [key=0, style=solid];
m6_150 -> m6_155  [key=2, style=dotted];
m6_150 -> m6_153  [key=1, style=dashed, color=darkseagreen4, label=r1];
m6_151 -> m6_152  [key=0, style=solid];
m6_151 -> m6_8  [key=2, style=dotted];
m6_153 -> m6_154  [key=0, style=solid];
m6_153 -> m6_10  [key=2, style=dotted];
m6_152 -> m6_153  [key=0, style=solid];
m6_152 -> m6_87  [key=2, style=dotted];
m6_154 -> m6_149  [key=0, style=bold, color=blue];
m6_421 -> m6_422  [key=0, style=solid];
m6_422 -> m6_423  [key=0, style=solid];
m6_422 -> m6_420  [key=2, style=dotted];
m6_423 -> m6_424  [key=0, style=solid];
m6_423 -> m6_428  [key=2, style=dotted];
m6_423 -> m6_429  [key=2, style=dotted];
m6_423 -> m6_425  [key=1, style=dashed, color=darkseagreen4, label=json];
m6_424 -> m6_425  [key=0, style=solid];
m6_424 -> m6_10  [key=2, style=dotted];
m6_425 -> m6_426  [key=0, style=solid];
m6_425 -> m6_428  [key=2, style=dotted];
m6_425 -> m6_430  [key=2, style=dotted];
m6_426 -> m6_427  [key=0, style=solid];
m6_426 -> m6_10  [key=2, style=dotted];
m6_427 -> m6_421  [key=0, style=bold, color=blue];
m6_366 -> m6_367  [key=0, style=solid];
m6_367 -> m6_368  [key=0, style=solid];
m6_367 -> m6_8  [key=2, style=dotted];
m6_367 -> m6_369  [key=1, style=dashed, color=darkseagreen4, label=json];
m6_368 -> m6_369  [key=0, style=solid];
m6_368 -> m6_10  [key=2, style=dotted];
m6_369 -> m6_370  [key=0, style=solid];
m6_369 -> m6_87  [key=2, style=dotted];
m6_370 -> m6_371  [key=0, style=solid];
m6_370 -> m6_10  [key=2, style=dotted];
m6_371 -> m6_366  [key=0, style=bold, color=blue];
m6_452 -> m6_453  [key=0, style=solid];
m6_453 -> m6_454  [key=0, style=solid];
m6_453 -> m6_462  [key=2, style=dotted];
m6_453 -> m6_455  [key=1, style=dashed, color=darkseagreen4, label=c1];
m6_453 -> m6_456  [key=1, style=dashed, color=darkseagreen4, label=c1];
m6_454 -> m6_455  [key=0, style=solid];
m6_454 -> m6_420  [key=2, style=dotted];
m6_455 -> m6_456  [key=0, style=solid];
m6_455 -> m6_420  [key=2, style=dotted];
m6_456 -> m6_457  [key=0, style=solid];
m6_456 -> m6_428  [key=2, style=dotted];
m6_456 -> m6_429  [key=2, style=dotted];
m6_456 -> m6_458  [key=1, style=dashed, color=darkseagreen4, label=json];
m6_457 -> m6_458  [key=0, style=solid];
m6_457 -> m6_10  [key=2, style=dotted];
m6_458 -> m6_459  [key=0, style=solid];
m6_458 -> m6_428  [key=2, style=dotted];
m6_458 -> m6_430  [key=2, style=dotted];
m6_458 -> m6_460  [key=1, style=dashed, color=darkseagreen4, label=c2];
m6_459 -> m6_460  [key=0, style=solid];
m6_459 -> m6_10  [key=2, style=dotted];
m6_460 -> m6_461  [key=0, style=solid];
m6_460 -> m6_10  [key=2, style=dotted];
m6_461 -> m6_452  [key=0, style=bold, color=blue];
m6_787 -> m6_788  [key=0, style=solid];
m6_788 -> m6_789  [key=0, style=solid];
m6_788 -> m6_759  [key=2, style=dotted];
m6_788 -> m6_790  [key=1, style=dashed, color=darkseagreen4, label=e1];
m6_789 -> m6_790  [key=0, style=solid];
m6_789 -> m6_759  [key=2, style=dotted];
m6_790 -> m6_791  [key=0, style=solid];
m6_790 -> m6_214  [key=2, style=dotted];
m6_791 -> m6_792  [key=0, style=solid];
m6_791 -> m6_403  [key=2, style=dotted];
m6_792 -> m6_793  [key=0, style=solid];
m6_792 -> m6_10  [key=2, style=dotted];
m6_793 -> m6_787  [key=0, style=bold, color=blue];
m6_711 -> m6_712  [key=0, style=solid];
m6_712 -> m6_711  [key=0, style=bold, color=blue];
m6_657 -> m6_658  [key=0, style=solid];
m6_658 -> m6_659  [key=0, style=solid];
m6_659 -> m6_657  [key=0, style=bold, color=blue];
m6_794 -> m6_795  [key=0, style=solid];
m6_795 -> m6_796  [key=0, style=solid];
m6_795 -> m6_795  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m6_796 -> m6_797  [key=0, style=solid];
m6_796 -> m6_87  [key=2, style=dotted];
m6_796 -> m6_798  [key=1, style=dashed, color=darkseagreen4, label=employees];
m6_796 -> m6_799  [key=1, style=dashed, color=darkseagreen4, label=employees];
m6_796 -> m6_800  [key=1, style=dashed, color=darkseagreen4, label=employees];
m6_796 -> m6_801  [key=1, style=dashed, color=darkseagreen4, label=employees];
m6_796 -> m6_802  [key=1, style=dashed, color=darkseagreen4, label=employees];
m6_796 -> m6_803  [key=1, style=dashed, color=darkseagreen4, label=employees];
m6_797 -> m6_798  [key=0, style=solid];
m6_797 -> m6_10  [key=2, style=dotted];
m6_798 -> m6_799  [key=0, style=solid];
m6_798 -> m6_10  [key=2, style=dotted];
m6_799 -> m6_800  [key=0, style=solid];
m6_799 -> m6_10  [key=2, style=dotted];
m6_800 -> m6_801  [key=0, style=solid];
m6_800 -> m6_10  [key=2, style=dotted];
m6_801 -> m6_802  [key=0, style=solid];
m6_801 -> m6_10  [key=2, style=dotted];
m6_802 -> m6_803  [key=0, style=solid];
m6_802 -> m6_10  [key=2, style=dotted];
m6_803 -> m6_804  [key=0, style=solid];
m6_803 -> m6_10  [key=2, style=dotted];
m6_804 -> m6_794  [key=0, style=bold, color=blue];
m6_500 -> m6_501  [key=0, style=solid];
m6_501 -> m6_502  [key=0, style=solid];
m6_501 -> m6_506  [key=2, style=dotted];
m6_501 -> m6_507  [key=2, style=dotted];
m6_501 -> m6_503  [key=1, style=dashed, color=darkseagreen4, label=personRaw];
m6_502 -> m6_503  [key=0, style=solid];
m6_503 -> m6_504  [key=0, style=solid];
m6_503 -> m6_8  [key=2, style=dotted];
m6_504 -> m6_505  [key=0, style=solid];
m6_504 -> m6_10  [key=2, style=dotted];
m6_505 -> m6_500  [key=0, style=bold, color=blue];
m6_80 -> m6_81  [key=0, style=solid];
m6_81 -> m6_82  [key=0, style=solid];
m6_81 -> m6_86  [key=2, style=dotted];
m6_81 -> m6_8  [key=2, style=dotted];
m6_82 -> m6_83  [key=0, style=solid];
m6_82 -> m6_87  [key=2, style=dotted];
m6_82 -> m6_84  [key=1, style=dashed, color=darkseagreen4, label=c];
m6_83 -> m6_84  [key=0, style=solid];
m6_83 -> m6_10  [key=2, style=dotted];
m6_84 -> m6_85  [key=0, style=solid];
m6_84 -> m6_10  [key=2, style=dotted];
m6_85 -> m6_80  [key=0, style=bold, color=blue];
m6_347 -> m6_348  [key=0, style=solid];
m6_348 -> m6_349  [key=0, style=solid];
m6_348 -> m6_355  [key=2, style=dotted];
m6_348 -> m6_350  [key=1, style=dashed, color=darkseagreen4, label=s];
m6_348 -> m6_351  [key=1, style=dashed, color=darkseagreen4, label=s];
m6_348 -> m6_352  [key=1, style=dashed, color=darkseagreen4, label=s];
m6_349 -> m6_350  [key=0, style=solid];
m6_349 -> m6_356  [key=2, style=dotted];
m6_350 -> m6_351  [key=0, style=solid];
m6_350 -> m6_356  [key=2, style=dotted];
m6_351 -> m6_352  [key=0, style=solid];
m6_351 -> m6_356  [key=2, style=dotted];
m6_352 -> m6_353  [key=0, style=solid];
m6_352 -> m6_8  [key=2, style=dotted];
m6_353 -> m6_354  [key=0, style=solid];
m6_353 -> m6_10  [key=2, style=dotted];
m6_354 -> m6_347  [key=0, style=bold, color=blue];
m6_565 -> m6_566  [key=0, style=solid];
m6_566 -> m6_567  [key=0, style=solid];
m6_566 -> m6_566  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m6_567 -> m6_568  [key=0, style=solid];
m6_567 -> m6_87  [key=2, style=dotted];
m6_568 -> m6_565  [key=0, style=bold, color=blue];
m6_291 -> m6_292  [key=0, style=solid];
m6_292 -> m6_293  [key=0, style=solid];
m6_292 -> m6_292  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m6_293 -> m6_294  [key=0, style=solid];
m6_293 -> m6_87  [key=2, style=dotted];
m6_293 -> m6_295  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m6_293 -> m6_296  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m6_293 -> m6_297  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m6_293 -> m6_298  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m6_293 -> m6_299  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m6_294 -> m6_295  [key=0, style=solid];
m6_294 -> m6_10  [key=2, style=dotted];
m6_295 -> m6_296  [key=0, style=solid];
m6_295 -> m6_10  [key=2, style=dotted];
m6_296 -> m6_297  [key=0, style=solid];
m6_296 -> m6_10  [key=2, style=dotted];
m6_297 -> m6_298  [key=0, style=solid];
m6_297 -> m6_10  [key=2, style=dotted];
m6_298 -> m6_299  [key=0, style=solid];
m6_298 -> m6_10  [key=2, style=dotted];
m6_299 -> m6_300  [key=0, style=solid];
m6_299 -> m6_10  [key=2, style=dotted];
m6_300 -> m6_291  [key=0, style=bold, color=blue];
m6_485 -> m6_486  [key=0, style=solid];
m6_486 -> m6_487  [key=0, style=solid];
m6_486 -> m6_492  [key=2, style=dotted];
m6_486 -> m6_489  [key=1, style=dashed, color=darkseagreen4, label=invoice];
m6_487 -> m6_488  [key=0, style=solid];
m6_487 -> m6_8  [key=2, style=dotted];
m6_489 -> m6_490  [key=0, style=solid];
m6_489 -> m6_165  [key=2, style=dotted];
m6_489 -> m6_484  [key=2, style=dotted];
m6_488 -> m6_489  [key=0, style=solid];
m6_488 -> n9  [key=2, style=dotted];
m6_490 -> m6_491  [key=0, style=solid];
m6_490 -> n9  [key=2, style=dotted];
m6_491 -> m6_485  [key=0, style=bold, color=blue];
m6_745 -> m6_746  [key=0, style=solid];
m6_746 -> m6_747  [key=0, style=solid];
m6_746 -> m6_50  [key=2, style=dotted];
m6_746 -> m6_748  [key=1, style=dashed, color=darkseagreen4, label=p];
m6_746 -> m6_749  [key=1, style=dashed, color=darkseagreen4, label=p];
m6_746 -> m6_750  [key=1, style=dashed, color=darkseagreen4, label=p];
m6_747 -> m6_748  [key=0, style=solid];
m6_747 -> m6_186  [key=2, style=dotted];
m6_748 -> m6_749  [key=0, style=solid];
m6_748 -> m6_188  [key=2, style=dotted];
m6_748 -> m6_736  [key=2, style=dotted];
m6_749 -> m6_750  [key=0, style=solid];
m6_749 -> m6_10  [key=2, style=dotted];
m6_750 -> m6_751  [key=0, style=solid];
m6_750 -> m6_10  [key=2, style=dotted];
m6_751 -> m6_745  [key=0, style=bold, color=blue];
m6_282 -> m6_283  [key=0, style=solid];
m6_283 -> m6_284  [key=0, style=solid];
m6_283 -> m6_286  [key=2, style=dotted];
m6_283 -> m6_8  [key=2, style=dotted];
m6_284 -> m6_285  [key=0, style=solid];
m6_284 -> m6_10  [key=2, style=dotted];
m6_285 -> m6_282  [key=0, style=bold, color=blue];
m6_135 -> m6_136  [key=0, style=solid];
m6_136 -> m6_137  [key=0, style=solid];
m6_136 -> m6_146  [key=2, style=dotted];
m6_136 -> m6_139  [key=1, style=dashed, color=darkseagreen4, label=a1];
m6_137 -> m6_138  [key=0, style=solid];
m6_137 -> m6_146  [key=2, style=dotted];
m6_137 -> m6_140  [key=1, style=dashed, color=darkseagreen4, label=a2];
m6_139 -> m6_140  [key=0, style=solid];
m6_139 -> m6_148  [key=2, style=dotted];
m6_138 -> m6_139  [key=0, style=solid];
m6_138 -> m6_147  [key=2, style=dotted];
m6_138 -> m6_140  [key=1, style=dashed, color=darkseagreen4, label=articles1];
m6_138 -> m6_141  [key=1, style=dashed, color=darkseagreen4, label=articles1];
m6_138 -> m6_143  [key=1, style=dashed, color=darkseagreen4, label=articles1];
m6_138 -> m6_144  [key=1, style=dashed, color=darkseagreen4, label=articles1];
m6_140 -> m6_141  [key=0, style=solid];
m6_140 -> m6_148  [key=2, style=dotted];
m6_141 -> m6_142  [key=0, style=solid];
m6_141 -> m6_8  [key=2, style=dotted];
m6_143 -> m6_144  [key=0, style=solid];
m6_143 -> m6_10  [key=2, style=dotted];
m6_144 -> m6_145  [key=0, style=solid];
m6_144 -> m6_10  [key=2, style=dotted];
m6_142 -> m6_143  [key=0, style=solid];
m6_142 -> m6_87  [key=2, style=dotted];
m6_142 -> m6_144  [key=1, style=dashed, color=darkseagreen4, label=articles2];
m6_145 -> m6_135  [key=0, style=bold, color=blue];
m6_380 -> m6_381  [key=0, style=solid];
m6_381 -> m6_382  [key=0, style=solid];
m6_381 -> m6_381  [key=3, color=darkorchid, style=bold, label="Local variable string jsonText"];
m6_382 -> m6_383  [key=0, style=solid];
m6_382 -> m6_87  [key=2, style=dotted];
m6_382 -> m6_384  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_382 -> m6_385  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_383 -> m6_384  [key=0, style=solid];
m6_383 -> m6_10  [key=2, style=dotted];
m6_384 -> m6_385  [key=0, style=solid];
m6_384 -> m6_10  [key=2, style=dotted];
m6_385 -> m6_386  [key=0, style=solid];
m6_385 -> m6_10  [key=2, style=dotted];
m6_386 -> m6_380  [key=0, style=bold, color=blue];
m6_473 -> m6_474  [key=0, style=solid];
m6_474 -> m6_475  [key=0, style=solid];
m6_474 -> m6_483  [key=2, style=dotted];
m6_474 -> m6_165  [key=2, style=dotted];
m6_474 -> m6_484  [key=2, style=dotted];
m6_475 -> m6_476  [key=0, style=solid];
m6_475 -> m6_10  [key=2, style=dotted];
m6_476 -> m6_477  [key=0, style=solid];
m6_476 -> m6_483  [key=2, style=dotted];
m6_476 -> m6_165  [key=2, style=dotted];
m6_476 -> m6_484  [key=2, style=dotted];
m6_477 -> m6_478  [key=0, style=solid];
m6_477 -> m6_10  [key=2, style=dotted];
m6_478 -> m6_479  [key=0, style=solid];
m6_478 -> m6_483  [key=2, style=dotted];
m6_478 -> m6_165  [key=2, style=dotted];
m6_478 -> m6_484  [key=2, style=dotted];
m6_479 -> m6_480  [key=0, style=solid];
m6_479 -> m6_10  [key=2, style=dotted];
m6_480 -> m6_481  [key=0, style=solid];
m6_480 -> m6_483  [key=2, style=dotted];
m6_480 -> m6_165  [key=2, style=dotted];
m6_480 -> m6_484  [key=2, style=dotted];
m6_481 -> m6_482  [key=0, style=solid];
m6_481 -> m6_10  [key=2, style=dotted];
m6_482 -> m6_473  [key=0, style=bold, color=blue];
m6_844 -> m6_845  [key=0, style=solid];
m6_845 -> m6_846  [key=0, style=solid];
m6_845 -> m6_845  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m6_846 -> m6_847  [key=0, style=solid];
m6_846 -> m6_165  [key=2, style=dotted];
m6_846 -> m6_547  [key=2, style=dotted];
m6_846 -> m6_848  [key=1, style=dashed, color=darkseagreen4, label=circularDictionary];
m6_846 -> m6_849  [key=1, style=dashed, color=darkseagreen4, label=circularDictionary];
m6_847 -> m6_848  [key=0, style=solid];
m6_847 -> m6_10  [key=2, style=dotted];
m6_848 -> m6_849  [key=0, style=solid];
m6_848 -> m6_10  [key=2, style=dotted];
m6_849 -> m6_850  [key=0, style=solid];
m6_849 -> m6_10  [key=2, style=dotted];
m6_850 -> m6_844  [key=0, style=bold, color=blue];
m6_877 -> m6_878  [key=0, style=solid];
m6_878 -> m6_879  [key=0, style=solid];
m6_878 -> m6_878  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m6_879 -> m6_880  [key=0, style=solid];
m6_879 -> m6_165  [key=2, style=dotted];
m6_879 -> m6_547  [key=2, style=dotted];
m6_879 -> m6_881  [key=1, style=dashed, color=darkseagreen4, label=circularList];
m6_879 -> m6_882  [key=1, style=dashed, color=darkseagreen4, label=circularList];
m6_879 -> m6_883  [key=1, style=dashed, color=darkseagreen4, label=circularList];
m6_879 -> m6_884  [key=1, style=dashed, color=darkseagreen4, label=circularList];
m6_879 -> m6_885  [key=1, style=dashed, color=darkseagreen4, label=circularList];
m6_880 -> m6_881  [key=0, style=solid];
m6_880 -> m6_10  [key=2, style=dotted];
m6_881 -> m6_882  [key=0, style=solid];
m6_881 -> m6_10  [key=2, style=dotted];
m6_882 -> m6_883  [key=0, style=solid];
m6_882 -> m6_10  [key=2, style=dotted];
m6_883 -> m6_884  [key=0, style=solid];
m6_883 -> m6_10  [key=2, style=dotted];
m6_884 -> m6_885  [key=0, style=solid];
m6_884 -> m6_10  [key=2, style=dotted];
m6_885 -> m6_886  [key=0, style=solid];
m6_885 -> m6_887  [key=2, style=dotted];
m6_885 -> m6_888  [key=2, style=dotted];
m6_886 -> m6_877  [key=0, style=bold, color=blue];
m6_0 -> m6_1  [key=0, style=solid];
m6_1 -> m6_2  [key=0, style=solid];
m6_1 -> m6_7  [key=2, style=dotted];
m6_1 -> m6_4  [key=1, style=dashed, color=darkseagreen4, label=store];
m6_2 -> m6_3  [key=0, style=solid];
m6_2 -> m6_8  [key=2, style=dotted];
m6_2 -> m6_5  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m6_4 -> m6_5  [key=0, style=solid];
m6_4 -> m6_10  [key=2, style=dotted];
m6_3 -> m6_4  [key=0, style=solid];
m6_3 -> m6_9  [key=2, style=dotted];
m6_5 -> m6_6  [key=0, style=solid];
m6_5 -> n9  [key=2, style=dotted];
m6_6 -> m6_0  [key=0, style=bold, color=blue];
m6_663 -> m6_664  [key=0, style=solid];
m6_664 -> m6_665  [key=0, style=solid];
m6_664 -> m6_660  [key=2, style=dotted];
m6_664 -> m6_666  [key=1, style=dashed, color=darkseagreen4, label=i];
m6_665 -> m6_666  [key=0, style=solid];
m6_666 -> m6_667  [key=0, style=solid];
m6_666 -> m6_8  [key=2, style=dotted];
m6_666 -> m6_668  [key=1, style=dashed, color=darkseagreen4, label=json];
m6_667 -> m6_668  [key=0, style=solid];
m6_667 -> m6_10  [key=2, style=dotted];
m6_668 -> m6_669  [key=0, style=solid];
m6_668 -> m6_87  [key=2, style=dotted];
m6_669 -> m6_670  [key=0, style=solid];
m6_669 -> m6_8  [key=2, style=dotted];
m6_670 -> m6_671  [key=0, style=solid];
m6_670 -> m6_10  [key=2, style=dotted];
m6_671 -> m6_663  [key=0, style=bold, color=blue];
m6_698 -> m6_699  [key=0, style=solid];
m6_699 -> m6_700  [key=0, style=solid];
m6_699 -> m6_710  [key=2, style=dotted];
m6_699 -> m6_701  [key=1, style=dashed, color=darkseagreen4, label=optInClass];
m6_699 -> m6_702  [key=1, style=dashed, color=darkseagreen4, label=optInClass];
m6_699 -> m6_703  [key=1, style=dashed, color=darkseagreen4, label=optInClass];
m6_700 -> m6_701  [key=0, style=solid];
m6_701 -> m6_702  [key=0, style=solid];
m6_702 -> m6_703  [key=0, style=solid];
m6_703 -> m6_704  [key=0, style=solid];
m6_703 -> m6_403  [key=2, style=dotted];
m6_704 -> m6_705  [key=0, style=solid];
m6_704 -> m6_10  [key=2, style=dotted];
m6_705 -> m6_706  [key=0, style=solid];
m6_705 -> m6_87  [key=2, style=dotted];
m6_705 -> m6_707  [key=1, style=dashed, color=darkseagreen4, label=newOptInClass];
m6_705 -> m6_708  [key=1, style=dashed, color=darkseagreen4, label=newOptInClass];
m6_706 -> m6_707  [key=0, style=solid];
m6_706 -> m6_10  [key=2, style=dotted];
m6_707 -> m6_708  [key=0, style=solid];
m6_707 -> m6_10  [key=2, style=dotted];
m6_708 -> m6_709  [key=0, style=solid];
m6_708 -> m6_10  [key=2, style=dotted];
m6_709 -> m6_698  [key=0, style=bold, color=blue];
m6_722 -> m6_723  [key=0, style=solid];
m6_723 -> m6_724  [key=0, style=solid];
m6_723 -> m6_713  [key=2, style=dotted];
m6_723 -> m6_725  [key=1, style=dashed, color=darkseagreen4, label=c];
m6_724 -> m6_725  [key=0, style=solid];
m6_725 -> m6_726  [key=0, style=solid];
m6_725 -> m6_403  [key=2, style=dotted];
m6_725 -> m6_727  [key=1, style=dashed, color=darkseagreen4, label=json];
m6_726 -> m6_727  [key=0, style=solid];
m6_726 -> m6_10  [key=2, style=dotted];
m6_727 -> m6_728  [key=0, style=solid];
m6_727 -> m6_87  [key=2, style=dotted];
m6_728 -> m6_729  [key=0, style=solid];
m6_728 -> m6_719  [key=2, style=dotted];
m6_728 -> m6_10  [key=2, style=dotted];
m6_729 -> m6_722  [key=0, style=bold, color=blue];
m6_779 -> m6_780  [key=0, style=solid];
m6_780 -> m6_781  [key=0, style=solid];
m6_780 -> m6_780  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m6_781 -> m6_782  [key=0, style=solid];
m6_781 -> m6_165  [key=2, style=dotted];
m6_781 -> m6_547  [key=2, style=dotted];
m6_781 -> m6_783  [key=1, style=dashed, color=darkseagreen4, label=c1];
m6_781 -> m6_784  [key=1, style=dashed, color=darkseagreen4, label=c1];
m6_781 -> m6_785  [key=1, style=dashed, color=darkseagreen4, label=c1];
m6_782 -> m6_783  [key=0, style=solid];
m6_782 -> m6_10  [key=2, style=dotted];
m6_783 -> m6_784  [key=0, style=solid];
m6_783 -> m6_10  [key=2, style=dotted];
m6_784 -> m6_785  [key=0, style=solid];
m6_784 -> m6_10  [key=2, style=dotted];
m6_785 -> m6_786  [key=0, style=solid];
m6_785 -> m6_10  [key=2, style=dotted];
m6_786 -> m6_779  [key=0, style=bold, color=blue];
m6_320 -> m6_321  [key=0, style=solid];
m6_321 -> m6_322  [key=0, style=solid];
m6_321 -> m6_336  [key=2, style=dotted];
m6_321 -> m6_323  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m6_321 -> m6_324  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m6_321 -> m6_325  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m6_321 -> m6_326  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m6_322 -> m6_323  [key=0, style=solid];
m6_323 -> m6_324  [key=0, style=solid];
m6_323 -> m6_337  [key=2, style=dotted];
m6_324 -> m6_325  [key=0, style=solid];
m6_324 -> m6_337  [key=2, style=dotted];
m6_325 -> m6_326  [key=0, style=solid];
m6_325 -> m6_337  [key=2, style=dotted];
m6_326 -> m6_327  [key=0, style=solid];
m6_326 -> m6_8  [key=2, style=dotted];
m6_327 -> m6_328  [key=0, style=solid];
m6_327 -> m6_87  [key=2, style=dotted];
m6_327 -> m6_329  [key=1, style=dashed, color=darkseagreen4, label=wibbleOut];
m6_327 -> m6_330  [key=1, style=dashed, color=darkseagreen4, label=wibbleOut];
m6_327 -> m6_331  [key=1, style=dashed, color=darkseagreen4, label=wibbleOut];
m6_327 -> m6_332  [key=1, style=dashed, color=darkseagreen4, label=wibbleOut];
m6_327 -> m6_333  [key=1, style=dashed, color=darkseagreen4, label=wibbleOut];
m6_327 -> m6_334  [key=1, style=dashed, color=darkseagreen4, label=wibbleOut];
m6_328 -> m6_329  [key=0, style=solid];
m6_328 -> m6_10  [key=2, style=dotted];
m6_329 -> m6_330  [key=0, style=solid];
m6_329 -> m6_10  [key=2, style=dotted];
m6_330 -> m6_331  [key=0, style=solid];
m6_330 -> m6_10  [key=2, style=dotted];
m6_331 -> m6_332  [key=0, style=solid];
m6_331 -> m6_10  [key=2, style=dotted];
m6_332 -> m6_333  [key=0, style=solid];
m6_332 -> m6_10  [key=2, style=dotted];
m6_333 -> m6_334  [key=0, style=solid];
m6_333 -> m6_10  [key=2, style=dotted];
m6_334 -> m6_335  [key=0, style=solid];
m6_334 -> m6_10  [key=2, style=dotted];
m6_335 -> m6_320  [key=0, style=bold, color=blue];
m6_311 -> m6_312  [key=0, style=solid];
m6_312 -> m6_313  [key=0, style=solid];
m6_312 -> m6_315  [key=1, style=dashed, color=darkseagreen4, label=json];
m6_312 -> m6_302  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m6_313 -> m6_314  [key=0, style=solid];
m6_313 -> m6_186  [key=2, style=dotted];
m6_313 -> m6_315  [key=1, style=dashed, color=darkseagreen4, label=s];
m6_315 -> m6_316  [key=0, style=solid];
m6_315 -> m6_188  [key=2, style=dotted];
m6_315 -> m6_319  [key=2, style=dotted];
m6_315 -> m6_317  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m6_314 -> m6_315  [key=0, style=solid];
m6_316 -> m6_317  [key=0, style=solid];
m6_316 -> m6_10  [key=2, style=dotted];
m6_317 -> m6_318  [key=0, style=solid];
m6_317 -> m6_10  [key=2, style=dotted];
m6_318 -> m6_311  [key=0, style=bold, color=blue];
m6_338 -> m6_339  [key=0, style=solid];
m6_339 -> m6_340  [key=0, style=solid];
m6_339 -> m6_346  [key=2, style=dotted];
m6_339 -> m6_8  [key=2, style=dotted];
m6_339 -> m6_341  [key=1, style=dashed, color=darkseagreen4, label=json];
m6_340 -> m6_341  [key=0, style=solid];
m6_340 -> m6_10  [key=2, style=dotted];
m6_341 -> m6_342  [key=0, style=solid];
m6_341 -> m6_87  [key=2, style=dotted];
m6_341 -> m6_343  [key=1, style=dashed, color=darkseagreen4, label=c];
m6_341 -> m6_344  [key=1, style=dashed, color=darkseagreen4, label=c];
m6_342 -> m6_343  [key=0, style=solid];
m6_342 -> m6_10  [key=2, style=dotted];
m6_343 -> m6_344  [key=0, style=solid];
m6_343 -> m6_10  [key=2, style=dotted];
m6_344 -> m6_345  [key=0, style=solid];
m6_344 -> m6_10  [key=2, style=dotted];
m6_345 -> m6_338  [key=0, style=bold, color=blue];
m6_608 -> m6_609  [key=0, style=solid];
m6_609 -> m6_610  [key=0, style=solid];
m6_609 -> m6_603  [key=2, style=dotted];
m6_609 -> m6_615  [key=1, style=dashed, color=darkseagreen4, label=person];
m6_610 -> m6_611  [key=0, style=solid];
m6_610 -> m6_617  [key=2, style=dotted];
m6_615 -> m6_616  [key=0, style=solid];
m6_615 -> m6_620  [key=2, style=dotted];
m6_611 -> m6_612  [key=0, style=solid];
m6_611 -> m6_618  [key=2, style=dotted];
m6_612 -> m6_613  [key=0, style=solid];
m6_612 -> m6_619  [key=2, style=dotted];
m6_612 -> m6_615  [key=1, style=dashed, color=darkseagreen4, label=jw];
m6_613 -> m6_614  [key=0, style=solid];
m6_614 -> m6_615  [key=0, style=solid];
m6_614 -> m6_186  [key=2, style=dotted];
m6_616 -> m6_608  [key=0, style=bold, color=blue];
m6_413 -> m6_414  [key=0, style=solid];
m6_414 -> m6_415  [key=0, style=solid];
m6_414 -> m6_420  [key=2, style=dotted];
m6_415 -> m6_416  [key=0, style=solid];
m6_415 -> m6_8  [key=2, style=dotted];
m6_415 -> m6_417  [key=1, style=dashed, color=darkseagreen4, label=json];
m6_416 -> m6_417  [key=0, style=solid];
m6_416 -> m6_10  [key=2, style=dotted];
m6_417 -> m6_418  [key=0, style=solid];
m6_417 -> m6_87  [key=2, style=dotted];
m6_418 -> m6_419  [key=0, style=solid];
m6_418 -> m6_10  [key=2, style=dotted];
m6_419 -> m6_413  [key=0, style=bold, color=blue];
m6_556 -> m6_557  [key=0, style=solid];
m6_557 -> m6_558  [key=0, style=solid];
m6_557 -> m6_564  [key=2, style=dotted];
m6_557 -> m6_215  [key=2, style=dotted];
m6_558 -> m6_559  [key=0, style=solid];
m6_558 -> m6_403  [key=2, style=dotted];
m6_558 -> m6_560  [key=1, style=dashed, color=darkseagreen4, label=json];
m6_559 -> m6_560  [key=0, style=solid];
m6_559 -> m6_10  [key=2, style=dotted];
m6_560 -> m6_561  [key=0, style=solid];
m6_560 -> m6_87  [key=2, style=dotted];
m6_560 -> m6_562  [key=1, style=dashed, color=darkseagreen4, label=c2];
m6_561 -> m6_562  [key=0, style=solid];
m6_561 -> m6_10  [key=2, style=dotted];
m6_562 -> m6_563  [key=0, style=solid];
m6_562 -> m6_215  [key=2, style=dotted];
m6_562 -> m6_10  [key=2, style=dotted];
m6_563 -> m6_556  [key=0, style=bold, color=blue];
m6_109 -> m6_110  [key=0, style=solid];
m6_110 -> m6_111  [key=0, style=solid];
m6_110 -> m6_110  [key=3, color=darkorchid, style=bold, label="Local variable string jsonText"];
m6_111 -> m6_112  [key=0, style=solid];
m6_111 -> m6_108  [key=2, style=dotted];
m6_111 -> m6_113  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_112 -> m6_113  [key=0, style=solid];
m6_112 -> m6_117  [key=2, style=dotted];
m6_112 -> m6_118  [key=2, style=dotted];
m6_112 -> m6_10  [key=2, style=dotted];
m6_113 -> m6_114  [key=0, style=solid];
m6_114 -> m6_115  [key=0, style=solid];
m6_115 -> m6_116  [key=0, style=solid];
m6_115 -> m6_119  [key=2, style=dotted];
m6_115 -> m6_118  [key=2, style=dotted];
m6_115 -> m6_10  [key=2, style=dotted];
m6_116 -> m6_109  [key=0, style=bold, color=blue];
m6_1019 -> m6_1020  [key=0, style=solid];
m6_1020 -> m6_1021  [key=0, style=solid];
m6_1021 -> m6_1022  [key=0, style=solid];
m6_1022 -> m6_1023  [key=0, style=solid];
m6_1022 -> m6_108  [key=2, style=dotted];
m6_1023 -> m6_1024  [key=0, style=solid];
m6_1023 -> m6_1025  [key=2, style=dotted];
m6_1023 -> m6_10  [key=2, style=dotted];
m6_1024 -> m6_1019  [key=0, style=bold, color=blue];
m6_924 -> m6_925  [key=0, style=solid];
m6_924 -> m6_926  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m6_924 -> m6_929  [key=1, style=dashed, color=darkseagreen4, label=object];
m6_924 -> m6_931  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m6_924 -> m6_933  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m6_925 -> m6_926  [key=0, style=solid];
m6_925 -> m6_930  [key=1, style=dashed, color=darkseagreen4, label=circularReferenceClass];
m6_925 -> m6_931  [key=1, style=dashed, color=darkseagreen4, label=circularReferenceClass];
m6_926 -> m6_927  [key=0, style=solid];
m6_926 -> m6_935  [key=2, style=dotted];
m6_926 -> m6_928  [key=1, style=dashed, color=darkseagreen4, label=reference];
m6_929 -> m6_930  [key=0, style=solid];
m6_929 -> m6_937  [key=2, style=dotted];
m6_929 -> m6_938  [key=2, style=dotted];
m6_931 -> m6_932  [key=0, style=solid];
m6_931 -> m6_939  [key=2, style=dotted];
m6_933 -> m6_934  [key=0, style=solid];
m6_933 -> m6_940  [key=2, style=dotted];
m6_930 -> m6_931  [key=0, style=solid];
m6_930 -> m6_937  [key=2, style=dotted];
m6_927 -> m6_928  [key=0, style=solid];
m6_927 -> m6_936  [key=2, style=dotted];
m6_927 -> m6_929  [key=1, style=dashed, color=darkseagreen4, label=me];
m6_927 -> m6_930  [key=1, style=dashed, color=darkseagreen4, label=me];
m6_927 -> m6_932  [key=1, style=dashed, color=darkseagreen4, label=me];
m6_927 -> m6_933  [key=1, style=dashed, color=darkseagreen4, label=me];
m6_928 -> m6_929  [key=0, style=solid];
m6_928 -> m6_937  [key=2, style=dotted];
m6_932 -> m6_933  [key=0, style=solid];
m6_934 -> m6_924  [key=0, style=bold, color=blue];
m6_969 -> m6_970  [key=0, style=solid];
m6_970 -> m6_971  [key=0, style=solid];
m6_970 -> m6_970  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m6_971 -> m6_972  [key=0, style=solid];
m6_971 -> m6_165  [key=2, style=dotted];
m6_971 -> m6_214  [key=2, style=dotted];
m6_971 -> m6_968  [key=2, style=dotted];
m6_971 -> m6_547  [key=2, style=dotted];
m6_971 -> m6_973  [key=1, style=dashed, color=darkseagreen4, label=c1];
m6_971 -> m6_974  [key=1, style=dashed, color=darkseagreen4, label=c1];
m6_971 -> m6_975  [key=1, style=dashed, color=darkseagreen4, label=c1];
m6_972 -> m6_973  [key=0, style=solid];
m6_972 -> m6_10  [key=2, style=dotted];
m6_973 -> m6_974  [key=0, style=solid];
m6_973 -> m6_10  [key=2, style=dotted];
m6_974 -> m6_975  [key=0, style=solid];
m6_974 -> m6_10  [key=2, style=dotted];
m6_975 -> m6_976  [key=0, style=solid];
m6_975 -> m6_10  [key=2, style=dotted];
m6_976 -> m6_969  [key=0, style=bold, color=blue];
m6_977 -> m6_978  [key=0, style=solid];
m6_978 -> m6_979  [key=0, style=solid];
m6_978 -> m6_981  [key=1, style=dashed, color=darkseagreen4, label=employeeRef];
m6_979 -> m6_980  [key=0, style=solid];
m6_979 -> m6_759  [key=2, style=dotted];
m6_981 -> m6_982  [key=0, style=solid];
m6_981 -> m6_10  [key=2, style=dotted];
m6_980 -> m6_981  [key=0, style=solid];
m6_980 -> m6_165  [key=2, style=dotted];
m6_980 -> m6_484  [key=2, style=dotted];
m6_982 -> m6_977  [key=0, style=bold, color=blue];
m6_543 -> m6_544  [key=0, style=solid];
m6_544 -> m6_545  [key=0, style=solid];
m6_544 -> m6_544  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m6_545 -> m6_546  [key=0, style=solid];
m6_545 -> m6_165  [key=2, style=dotted];
m6_545 -> m6_547  [key=2, style=dotted];
m6_546 -> m6_543  [key=0, style=bold, color=blue];
m6_442 -> m6_443  [key=0, style=solid];
m6_443 -> m6_444  [key=0, style=solid];
m6_443 -> m6_440  [key=2, style=dotted];
m6_443 -> m6_448  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m6_443 -> m6_449  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m6_444 -> m6_445  [key=0, style=solid];
m6_444 -> m6_441  [key=2, style=dotted];
m6_448 -> m6_449  [key=0, style=solid];
m6_448 -> m6_10  [key=2, style=dotted];
m6_449 -> m6_450  [key=0, style=solid];
m6_449 -> m6_10  [key=2, style=dotted];
m6_445 -> m6_446  [key=0, style=solid];
m6_445 -> m6_451  [key=2, style=dotted];
m6_445 -> m6_429  [key=2, style=dotted];
m6_445 -> m6_447  [key=1, style=dashed, color=darkseagreen4, label=json];
m6_446 -> m6_447  [key=0, style=solid];
m6_446 -> m6_10  [key=2, style=dotted];
m6_447 -> m6_448  [key=0, style=solid];
m6_447 -> m6_451  [key=2, style=dotted];
m6_447 -> m6_430  [key=2, style=dotted];
m6_447 -> m6_449  [key=1, style=dashed, color=darkseagreen4, label=m2];
m6_450 -> m6_442  [key=0, style=bold, color=blue];
m6_958 -> m6_959  [key=0, style=solid];
m6_959 -> m6_960  [key=0, style=solid];
m6_959 -> m6_778  [key=2, style=dotted];
m6_959 -> m6_962  [key=1, style=dashed, color=darkseagreen4, label=c1];
m6_959 -> m6_964  [key=1, style=dashed, color=darkseagreen4, label=c1];
m6_959 -> m6_965  [key=1, style=dashed, color=darkseagreen4, label=c1];
m6_960 -> m6_961  [key=0, style=solid];
m6_960 -> m6_778  [key=2, style=dotted];
m6_960 -> m6_962  [key=1, style=dashed, color=darkseagreen4, label=c2];
m6_960 -> m6_963  [key=1, style=dashed, color=darkseagreen4, label=c2];
m6_962 -> m6_963  [key=0, style=solid];
m6_964 -> m6_965  [key=0, style=solid];
m6_965 -> m6_966  [key=0, style=solid];
m6_965 -> m6_165  [key=2, style=dotted];
m6_965 -> m6_214  [key=2, style=dotted];
m6_965 -> m6_968  [key=2, style=dotted];
m6_965 -> m6_484  [key=2, style=dotted];
m6_961 -> m6_962  [key=0, style=solid];
m6_961 -> m6_778  [key=2, style=dotted];
m6_961 -> m6_963  [key=1, style=dashed, color=darkseagreen4, label=c3];
m6_961 -> m6_964  [key=1, style=dashed, color=darkseagreen4, label=c3];
m6_963 -> m6_964  [key=0, style=solid];
m6_966 -> m6_967  [key=0, style=solid];
m6_966 -> m6_10  [key=2, style=dotted];
m6_967 -> m6_958  [key=0, style=bold, color=blue];
m6_768 -> m6_769  [key=0, style=solid];
m6_769 -> m6_770  [key=0, style=solid];
m6_769 -> m6_778  [key=2, style=dotted];
m6_769 -> m6_772  [key=1, style=dashed, color=darkseagreen4, label=c1];
m6_769 -> m6_774  [key=1, style=dashed, color=darkseagreen4, label=c1];
m6_769 -> m6_775  [key=1, style=dashed, color=darkseagreen4, label=c1];
m6_770 -> m6_771  [key=0, style=solid];
m6_770 -> m6_778  [key=2, style=dotted];
m6_770 -> m6_772  [key=1, style=dashed, color=darkseagreen4, label=c2];
m6_770 -> m6_773  [key=1, style=dashed, color=darkseagreen4, label=c2];
m6_772 -> m6_773  [key=0, style=solid];
m6_774 -> m6_775  [key=0, style=solid];
m6_775 -> m6_776  [key=0, style=solid];
m6_775 -> m6_165  [key=2, style=dotted];
m6_775 -> m6_484  [key=2, style=dotted];
m6_771 -> m6_772  [key=0, style=solid];
m6_771 -> m6_778  [key=2, style=dotted];
m6_771 -> m6_773  [key=1, style=dashed, color=darkseagreen4, label=c3];
m6_771 -> m6_774  [key=1, style=dashed, color=darkseagreen4, label=c3];
m6_773 -> m6_774  [key=0, style=solid];
m6_776 -> m6_777  [key=0, style=solid];
m6_776 -> m6_10  [key=2, style=dotted];
m6_777 -> m6_768  [key=0, style=bold, color=blue];
m6_682 -> m6_683  [key=0, style=solid];
m6_683 -> m6_684  [key=0, style=solid];
m6_683 -> m6_681  [key=2, style=dotted];
m6_683 -> m6_685  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_684 -> m6_685  [key=0, style=solid];
m6_685 -> m6_686  [key=0, style=solid];
m6_685 -> m6_165  [key=2, style=dotted];
m6_685 -> m6_484  [key=2, style=dotted];
m6_686 -> m6_682  [key=0, style=bold, color=blue];
m6_131 -> m6_132  [key=0, style=solid];
m6_132 -> m6_133  [key=0, style=solid];
m6_132 -> m6_134  [key=2, style=dotted];
m6_132 -> m6_8  [key=2, style=dotted];
m6_133 -> m6_131  [key=0, style=bold, color=blue];
m6_991 -> m6_992  [key=0, style=solid];
m6_992 -> m6_993  [key=0, style=solid];
m6_992 -> m6_996  [key=1, style=dashed, color=darkseagreen4, label=employeeRef];
m6_993 -> m6_994  [key=0, style=solid];
m6_993 -> m6_996  [key=1, style=dashed, color=darkseagreen4, label=personRef];
m6_996 -> m6_997  [key=0, style=solid];
m6_996 -> m6_10  [key=2, style=dotted];
m6_994 -> m6_995  [key=0, style=solid];
m6_994 -> m6_214  [key=2, style=dotted];
m6_994 -> m6_759  [key=2, style=dotted];
m6_994 -> m6_607  [key=2, style=dotted];
m6_994 -> m6_215  [key=2, style=dotted];
m6_995 -> m6_996  [key=0, style=solid];
m6_995 -> m6_165  [key=2, style=dotted];
m6_995 -> m6_484  [key=2, style=dotted];
m6_997 -> m6_991  [key=0, style=bold, color=blue];
m6_812 -> m6_813  [key=0, style=solid];
m6_813 -> m6_814  [key=0, style=solid];
m6_813 -> m6_813  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m6_814 -> m6_815  [key=0, style=solid];
m6_814 -> m6_87  [key=2, style=dotted];
m6_814 -> m6_816  [key=1, style=dashed, color=darkseagreen4, label=employees];
m6_814 -> m6_817  [key=1, style=dashed, color=darkseagreen4, label=employees];
m6_814 -> m6_820  [key=1, style=dashed, color=darkseagreen4, label=employees];
m6_814 -> m6_821  [key=1, style=dashed, color=darkseagreen4, label=employees];
m6_815 -> m6_816  [key=0, style=solid];
m6_815 -> m6_10  [key=2, style=dotted];
m6_816 -> m6_817  [key=0, style=solid];
m6_816 -> m6_818  [key=1, style=dashed, color=darkseagreen4, label=e1];
m6_816 -> m6_820  [key=1, style=dashed, color=darkseagreen4, label=e1];
m6_817 -> m6_818  [key=0, style=solid];
m6_817 -> m6_819  [key=1, style=dashed, color=darkseagreen4, label=e2];
m6_817 -> m6_821  [key=1, style=dashed, color=darkseagreen4, label=e2];
m6_820 -> m6_821  [key=0, style=solid];
m6_820 -> m6_10  [key=2, style=dotted];
m6_821 -> m6_822  [key=0, style=solid];
m6_821 -> m6_10  [key=2, style=dotted];
m6_818 -> m6_819  [key=0, style=solid];
m6_818 -> m6_10  [key=2, style=dotted];
m6_819 -> m6_820  [key=0, style=solid];
m6_819 -> m6_10  [key=2, style=dotted];
m6_822 -> m6_812  [key=0, style=bold, color=blue];
m6_909 -> m6_910  [key=0, style=solid];
m6_910 -> m6_911  [key=0, style=solid];
m6_910 -> m6_910  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m6_911 -> m6_912  [key=0, style=solid];
m6_911 -> m6_165  [key=2, style=dotted];
m6_911 -> m6_547  [key=2, style=dotted];
m6_911 -> m6_913  [key=1, style=dashed, color=darkseagreen4, label=c];
m6_911 -> m6_914  [key=1, style=dashed, color=darkseagreen4, label=c];
m6_911 -> m6_915  [key=1, style=dashed, color=darkseagreen4, label=c];
m6_911 -> m6_916  [key=1, style=dashed, color=darkseagreen4, label=c];
m6_911 -> m6_917  [key=1, style=dashed, color=darkseagreen4, label=c];
m6_911 -> m6_918  [key=1, style=dashed, color=darkseagreen4, label=c];
m6_911 -> m6_919  [key=1, style=dashed, color=darkseagreen4, label=c];
m6_911 -> m6_920  [key=1, style=dashed, color=darkseagreen4, label=c];
m6_911 -> m6_921  [key=1, style=dashed, color=darkseagreen4, label=c];
m6_912 -> m6_913  [key=0, style=solid];
m6_912 -> m6_10  [key=2, style=dotted];
m6_913 -> m6_914  [key=0, style=solid];
m6_913 -> m6_10  [key=2, style=dotted];
m6_914 -> m6_915  [key=0, style=solid];
m6_914 -> m6_10  [key=2, style=dotted];
m6_915 -> m6_916  [key=0, style=solid];
m6_915 -> m6_10  [key=2, style=dotted];
m6_916 -> m6_917  [key=0, style=solid];
m6_916 -> m6_10  [key=2, style=dotted];
m6_917 -> m6_918  [key=0, style=solid];
m6_917 -> m6_923  [key=2, style=dotted];
m6_917 -> m6_10  [key=2, style=dotted];
m6_918 -> m6_919  [key=0, style=solid];
m6_918 -> m6_923  [key=2, style=dotted];
m6_918 -> m6_10  [key=2, style=dotted];
m6_919 -> m6_920  [key=0, style=solid];
m6_919 -> m6_10  [key=2, style=dotted];
m6_920 -> m6_921  [key=0, style=solid];
m6_920 -> m6_10  [key=2, style=dotted];
m6_921 -> m6_922  [key=0, style=solid];
m6_921 -> m6_646  [key=2, style=dotted];
m6_922 -> m6_909  [key=0, style=bold, color=blue];
m6_672 -> m6_673  [key=0, style=solid];
m6_673 -> m6_674  [key=0, style=solid];
m6_673 -> m6_681  [key=2, style=dotted];
m6_673 -> m6_675  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_673 -> m6_676  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_673 -> m6_678  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_674 -> m6_675  [key=0, style=solid];
m6_675 -> m6_676  [key=0, style=solid];
m6_676 -> m6_677  [key=0, style=solid];
m6_676 -> m6_403  [key=2, style=dotted];
m6_678 -> m6_679  [key=0, style=solid];
m6_678 -> m6_165  [key=2, style=dotted];
m6_678 -> m6_484  [key=2, style=dotted];
m6_677 -> m6_678  [key=0, style=solid];
m6_677 -> m6_10  [key=2, style=dotted];
m6_679 -> m6_680  [key=0, style=solid];
m6_679 -> m6_10  [key=2, style=dotted];
m6_680 -> m6_672  [key=0, style=bold, color=blue];
m6_229 -> m6_230  [key=0, style=solid];
m6_230 -> m6_231  [key=0, style=solid];
m6_230 -> m6_50  [key=2, style=dotted];
m6_230 -> m6_232  [key=1, style=dashed, color=darkseagreen4, label=values];
m6_230 -> m6_233  [key=1, style=dashed, color=darkseagreen4, label=values];
m6_230 -> m6_236  [key=1, style=dashed, color=darkseagreen4, label=values];
m6_231 -> m6_232  [key=0, style=solid];
m6_231 -> m6_238  [key=2, style=dotted];
m6_232 -> m6_233  [key=0, style=solid];
m6_232 -> m6_238  [key=2, style=dotted];
m6_233 -> m6_234  [key=0, style=solid];
m6_233 -> m6_8  [key=2, style=dotted];
m6_233 -> m6_235  [key=1, style=dashed, color=darkseagreen4, label=json];
m6_236 -> m6_237  [key=0, style=solid];
m6_236 -> m6_10  [key=2, style=dotted];
m6_234 -> m6_235  [key=0, style=solid];
m6_234 -> m6_10  [key=2, style=dotted];
m6_235 -> m6_236  [key=0, style=solid];
m6_235 -> m6_87  [key=2, style=dotted];
m6_237 -> m6_229  [key=0, style=bold, color=blue];
m6_622 -> m6_623  [key=0, style=solid];
m6_622 -> m6_630  [key=2, style=dotted];
m6_622 -> m6_215  [key=2, style=dotted];
m6_622 -> m6_624  [key=1, style=dashed, color=darkseagreen4, label=entry];
m6_622 -> m6_625  [key=1, style=dashed, color=darkseagreen4, label=entry];
m6_621 -> m6_622  [key=0, style=solid];
m6_623 -> m6_624  [key=0, style=solid];
m6_623 -> m6_8  [key=2, style=dotted];
m6_623 -> m6_626  [key=1, style=dashed, color=darkseagreen4, label=defaultJson];
m6_624 -> m6_625  [key=0, style=solid];
m6_624 -> m6_631  [key=2, style=dotted];
m6_624 -> m6_429  [key=2, style=dotted];
m6_624 -> m6_627  [key=1, style=dashed, color=darkseagreen4, label=isoJson];
m6_625 -> m6_626  [key=0, style=solid];
m6_625 -> m6_451  [key=2, style=dotted];
m6_625 -> m6_429  [key=2, style=dotted];
m6_625 -> m6_628  [key=1, style=dashed, color=darkseagreen4, label=javascriptJson];
m6_626 -> m6_627  [key=0, style=solid];
m6_626 -> n9  [key=2, style=dotted];
m6_627 -> m6_628  [key=0, style=solid];
m6_627 -> n9  [key=2, style=dotted];
m6_628 -> m6_629  [key=0, style=solid];
m6_628 -> n9  [key=2, style=dotted];
m6_629 -> m6_621  [key=0, style=bold, color=blue];
m6_239 -> m6_240  [key=0, style=solid];
m6_240 -> m6_241  [key=0, style=solid];
m6_240 -> m6_27  [key=2, style=dotted];
m6_240 -> m6_243  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m6_241 -> m6_242  [key=0, style=solid];
m6_241 -> m6_8  [key=2, style=dotted];
m6_241 -> m6_243  [key=1, style=dashed, color=darkseagreen4, label=json];
m6_243 -> m6_244  [key=0, style=solid];
m6_243 -> m6_252  [key=2, style=dotted];
m6_243 -> m6_243  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m6_243 -> m6_245  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m6_243 -> m6_246  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m6_243 -> m6_247  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m6_243 -> m6_248  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m6_243 -> m6_249  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m6_243 -> m6_250  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m6_242 -> m6_243  [key=0, style=solid];
m6_242 -> m6_10  [key=2, style=dotted];
m6_244 -> m6_245  [key=0, style=solid];
m6_244 -> m6_10  [key=2, style=dotted];
m6_245 -> m6_246  [key=0, style=solid];
m6_245 -> m6_10  [key=2, style=dotted];
m6_246 -> m6_247  [key=0, style=solid];
m6_246 -> m6_10  [key=2, style=dotted];
m6_247 -> m6_248  [key=0, style=solid];
m6_247 -> m6_10  [key=2, style=dotted];
m6_248 -> m6_249  [key=0, style=solid];
m6_248 -> m6_10  [key=2, style=dotted];
m6_249 -> m6_250  [key=0, style=solid];
m6_249 -> m6_10  [key=2, style=dotted];
m6_250 -> m6_251  [key=0, style=solid];
m6_250 -> m6_10  [key=2, style=dotted];
m6_251 -> m6_239  [key=0, style=bold, color=blue];
m6_387 -> m6_388  [key=0, style=solid];
m6_388 -> m6_389  [key=0, style=solid];
m6_388 -> m6_401  [key=2, style=dotted];
m6_388 -> m6_391  [key=1, style=dashed, color=darkseagreen4, label=name];
m6_388 -> m6_392  [key=1, style=dashed, color=darkseagreen4, label=name];
m6_388 -> m6_393  [key=1, style=dashed, color=darkseagreen4, label=name];
m6_389 -> m6_390  [key=0, style=solid];
m6_389 -> m6_402  [key=2, style=dotted];
m6_389 -> m6_391  [key=1, style=dashed, color=darkseagreen4, label=p1];
m6_391 -> m6_392  [key=0, style=solid];
m6_391 -> m6_148  [key=2, style=dotted];
m6_392 -> m6_393  [key=0, style=solid];
m6_392 -> m6_148  [key=2, style=dotted];
m6_393 -> m6_394  [key=0, style=solid];
m6_393 -> m6_403  [key=2, style=dotted];
m6_393 -> m6_395  [key=1, style=dashed, color=darkseagreen4, label=json];
m6_390 -> m6_391  [key=0, style=solid];
m6_390 -> m6_402  [key=2, style=dotted];
m6_390 -> m6_392  [key=1, style=dashed, color=darkseagreen4, label=p2];
m6_394 -> m6_395  [key=0, style=solid];
m6_394 -> m6_10  [key=2, style=dotted];
m6_395 -> m6_396  [key=0, style=solid];
m6_395 -> m6_87  [key=2, style=dotted];
m6_395 -> m6_397  [key=1, style=dashed, color=darkseagreen4, label=newName];
m6_395 -> m6_398  [key=1, style=dashed, color=darkseagreen4, label=newName];
m6_395 -> m6_399  [key=1, style=dashed, color=darkseagreen4, label=newName];
m6_396 -> m6_397  [key=0, style=solid];
m6_396 -> m6_10  [key=2, style=dotted];
m6_397 -> m6_398  [key=0, style=solid];
m6_397 -> m6_10  [key=2, style=dotted];
m6_398 -> m6_399  [key=0, style=solid];
m6_398 -> m6_10  [key=2, style=dotted];
m6_399 -> m6_400  [key=0, style=solid];
m6_399 -> m6_10  [key=2, style=dotted];
m6_400 -> m6_387  [key=0, style=bold, color=blue];
m6_955 -> m6_956  [key=0, style=solid];
m6_956 -> m6_957  [key=0, style=solid];
m6_957 -> m6_955  [key=0, style=bold, color=blue];
m6_190 -> m6_191  [key=0, style=solid];
m6_191 -> m6_192  [key=0, style=solid];
m6_191 -> m6_193  [key=1, style=dashed, color=darkseagreen4, label=json];
m6_191 -> m6_194  [key=1, style=dashed, color=darkseagreen4, label=json];
m6_191 -> m6_191  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m6_192 -> m6_193  [key=0, style=solid];
m6_192 -> m6_198  [key=2, style=dotted];
m6_193 -> m6_194  [key=0, style=solid];
m6_193 -> m6_199  [key=2, style=dotted];
m6_193 -> m6_200  [key=2, style=dotted];
m6_193 -> m6_201  [key=2, style=dotted];
m6_193 -> m6_196  [key=1, style=dashed, color=darkseagreen4, label=dataContractResult];
m6_194 -> m6_195  [key=0, style=solid];
m6_194 -> m6_87  [key=2, style=dotted];
m6_194 -> m6_196  [key=1, style=dashed, color=darkseagreen4, label=jsonNetResult];
m6_196 -> m6_197  [key=0, style=solid];
m6_196 -> m6_10  [key=2, style=dotted];
m6_195 -> m6_196  [key=0, style=solid];
m6_195 -> m6_10  [key=2, style=dotted];
m6_197 -> m6_190  [key=0, style=bold, color=blue];
m6_493 -> m6_494  [key=0, style=solid];
m6_494 -> m6_495  [key=0, style=solid];
m6_495 -> m6_496  [key=0, style=solid];
m6_495 -> m6_8  [key=2, style=dotted];
m6_496 -> m6_497  [key=0, style=solid];
m6_496 -> m6_10  [key=2, style=dotted];
m6_497 -> m6_498  [key=0, style=solid];
m6_497 -> m6_8  [key=2, style=dotted];
m6_498 -> m6_499  [key=0, style=solid];
m6_498 -> m6_10  [key=2, style=dotted];
m6_499 -> m6_493  [key=0, style=bold, color=blue];
m6_941 -> m6_942  [key=0, style=solid];
m6_941 -> m6_946  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m6_941 -> m6_949  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m6_941 -> m6_945  [key=3, color=darkorchid, style=bold, label="method methodReturn object ReadJson"];
m6_942 -> m6_943  [key=0, style=solid];
m6_942 -> m6_951  [key=2, style=dotted];
m6_942 -> m6_946  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_942 -> m6_948  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_946 -> m6_947  [key=0, style=solid];
m6_946 -> m6_952  [key=2, style=dotted];
m6_946 -> m6_953  [key=2, style=dotted];
m6_949 -> m6_950  [key=0, style=solid];
m6_949 -> m6_954  [key=2, style=dotted];
m6_943 -> m6_944  [key=0, style=solid];
m6_948 -> m6_949  [key=0, style=solid];
m6_944 -> m6_945  [key=0, style=solid];
m6_944 -> m6_948  [key=0, style=solid];
m6_945 -> m6_946  [key=0, style=solid];
m6_945 -> m6_778  [key=2, style=dotted];
m6_945 -> m6_947  [key=1, style=dashed, color=darkseagreen4, label=circularReferenceClass];
m6_947 -> m6_950  [key=0, style=solid];
m6_950 -> m6_941  [key=0, style=bold, color=blue];
m6_713 -> m6_714  [key=0, style=solid];
m6_713 -> m6_715  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_713 -> m6_716  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_713 -> m6_717  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_714 -> m6_715  [key=0, style=solid];
m6_715 -> m6_716  [key=0, style=solid];
m6_716 -> m6_717  [key=0, style=solid];
m6_717 -> m6_718  [key=0, style=solid];
m6_718 -> m6_713  [key=0, style=bold, color=blue];
m6_596 -> m6_597  [key=0, style=solid];
m6_597 -> m6_598  [key=0, style=solid];
m6_597 -> m6_594  [key=2, style=dotted];
m6_597 -> m6_599  [key=1, style=dashed, color=darkseagreen4, label=testClass];
m6_598 -> m6_599  [key=0, style=solid];
m6_598 -> m6_602  [key=2, style=dotted];
m6_599 -> m6_600  [key=0, style=solid];
m6_599 -> m6_8  [key=2, style=dotted];
m6_600 -> m6_601  [key=0, style=solid];
m6_600 -> m6_9  [key=2, style=dotted];
m6_601 -> m6_596  [key=0, style=bold, color=blue];
m6_687 -> m6_688  [key=0, style=solid];
m6_688 -> m6_689  [key=0, style=solid];
m6_688 -> m6_691  [key=1, style=dashed, color=darkseagreen4, label=json];
m6_688 -> m6_688  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m6_689 -> m6_690  [key=0, style=solid];
m6_689 -> m6_87  [key=2, style=dotted];
m6_691 -> m6_692  [key=0, style=solid];
m6_691 -> m6_87  [key=2, style=dotted];
m6_691 -> m6_693  [key=1, style=dashed, color=darkseagreen4, label=n];
m6_691 -> m6_694  [key=1, style=dashed, color=darkseagreen4, label=n];
m6_691 -> m6_695  [key=1, style=dashed, color=darkseagreen4, label=n];
m6_691 -> m6_696  [key=1, style=dashed, color=darkseagreen4, label=n];
m6_690 -> m6_691  [key=0, style=solid];
m6_690 -> m6_10  [key=2, style=dotted];
m6_692 -> m6_693  [key=0, style=solid];
m6_692 -> m6_364  [key=2, style=dotted];
m6_692 -> m6_10  [key=2, style=dotted];
m6_693 -> m6_694  [key=0, style=solid];
m6_693 -> m6_364  [key=2, style=dotted];
m6_693 -> m6_10  [key=2, style=dotted];
m6_694 -> m6_695  [key=0, style=solid];
m6_694 -> m6_10  [key=2, style=dotted];
m6_695 -> m6_696  [key=0, style=solid];
m6_695 -> m6_10  [key=2, style=dotted];
m6_696 -> m6_697  [key=0, style=solid];
m6_696 -> m6_10  [key=2, style=dotted];
m6_697 -> m6_687  [key=0, style=bold, color=blue];
m6_508 -> m6_509  [key=0, style=solid];
m6_509 -> m6_510  [key=0, style=solid];
m6_509 -> m6_509  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m6_510 -> m6_511  [key=0, style=solid];
m6_510 -> m6_87  [key=2, style=dotted];
m6_510 -> m6_512  [key=1, style=dashed, color=darkseagreen4, label=personRaw];
m6_510 -> m6_513  [key=1, style=dashed, color=darkseagreen4, label=personRaw];
m6_511 -> m6_512  [key=0, style=solid];
m6_511 -> m6_10  [key=2, style=dotted];
m6_512 -> m6_513  [key=0, style=solid];
m6_512 -> m6_10  [key=2, style=dotted];
m6_513 -> m6_514  [key=0, style=solid];
m6_513 -> m6_10  [key=2, style=dotted];
m6_514 -> m6_508  [key=0, style=bold, color=blue];
m6_648 -> m6_649  [key=0, style=solid];
m6_649 -> m6_650  [key=0, style=solid];
m6_649 -> m6_649  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m6_650 -> m6_651  [key=0, style=solid];
m6_650 -> m6_87  [key=2, style=dotted];
m6_650 -> m6_652  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_650 -> m6_653  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_650 -> m6_654  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_650 -> m6_655  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_651 -> m6_652  [key=0, style=solid];
m6_651 -> m6_646  [key=2, style=dotted];
m6_652 -> m6_653  [key=0, style=solid];
m6_652 -> m6_10  [key=2, style=dotted];
m6_653 -> m6_654  [key=0, style=solid];
m6_653 -> m6_10  [key=2, style=dotted];
m6_654 -> m6_655  [key=0, style=solid];
m6_654 -> m6_10  [key=2, style=dotted];
m6_655 -> m6_656  [key=0, style=solid];
m6_655 -> m6_10  [key=2, style=dotted];
m6_656 -> m6_648  [key=0, style=bold, color=blue];
m6_74 -> m6_75  [key=0, style=solid];
m6_75 -> m6_76  [key=0, style=solid];
m6_75 -> m6_75  [key=3, color=darkorchid, style=bold, label="Local variable string value"];
m6_76 -> m6_77  [key=0, style=solid];
m6_76 -> m6_9  [key=2, style=dotted];
m6_76 -> m6_78  [key=1, style=dashed, color=darkseagreen4, label=p];
m6_77 -> m6_78  [key=0, style=solid];
m6_77 -> m6_73  [key=2, style=dotted];
m6_77 -> m6_10  [key=2, style=dotted];
m6_78 -> m6_79  [key=0, style=solid];
m6_78 -> m6_73  [key=2, style=dotted];
m6_78 -> m6_10  [key=2, style=dotted];
m6_79 -> m6_74  [key=0, style=bold, color=blue];
m6_529 -> m6_530  [key=0, style=solid];
m6_530 -> m6_531  [key=0, style=solid];
m6_530 -> m6_186  [key=2, style=dotted];
m6_530 -> m6_533  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m6_531 -> m6_532  [key=0, style=solid];
m6_531 -> m6_451  [key=2, style=dotted];
m6_531 -> m6_537  [key=2, style=dotted];
m6_533 -> m6_534  [key=0, style=solid];
m6_533 -> m6_188  [key=2, style=dotted];
m6_533 -> m6_319  [key=2, style=dotted];
m6_533 -> m6_535  [key=1, style=dashed, color=darkseagreen4, label=myClass];
m6_532 -> m6_533  [key=0, style=solid];
m6_532 -> m6_532  [key=3, color=darkorchid, style=bold, label="Local variable string response"];
m6_534 -> m6_535  [key=0, style=solid];
m6_534 -> m6_10  [key=2, style=dotted];
m6_535 -> m6_536  [key=0, style=solid];
m6_535 -> m6_10  [key=2, style=dotted];
m6_536 -> m6_529  [key=0, style=bold, color=blue];
m6_372 -> m6_373  [key=0, style=solid];
m6_373 -> m6_374  [key=0, style=solid];
m6_373 -> m6_379  [key=2, style=dotted];
m6_373 -> m6_8  [key=2, style=dotted];
m6_374 -> m6_375  [key=0, style=solid];
m6_374 -> m6_10  [key=2, style=dotted];
m6_375 -> m6_376  [key=0, style=solid];
m6_375 -> m6_87  [key=2, style=dotted];
m6_375 -> m6_377  [key=1, style=dashed, color=darkseagreen4, label=c];
m6_376 -> m6_377  [key=0, style=solid];
m6_376 -> m6_10  [key=2, style=dotted];
m6_377 -> m6_378  [key=0, style=solid];
m6_377 -> m6_10  [key=2, style=dotted];
m6_378 -> m6_372  [key=0, style=bold, color=blue];
m6_851 -> m6_852  [key=0, style=solid];
m6_852 -> m6_853  [key=0, style=solid];
m6_852 -> m6_858  [key=2, style=dotted];
m6_852 -> m6_854  [key=1, style=dashed, color=darkseagreen4, label=circularList];
m6_852 -> m6_855  [key=1, style=dashed, color=darkseagreen4, label=circularList];
m6_852 -> m6_856  [key=1, style=dashed, color=darkseagreen4, label=circularList];
m6_853 -> m6_854  [key=0, style=solid];
m6_853 -> m6_148  [key=2, style=dotted];
m6_854 -> m6_855  [key=0, style=solid];
m6_854 -> m6_858  [key=2, style=dotted];
m6_854 -> m6_148  [key=2, style=dotted];
m6_855 -> m6_856  [key=0, style=solid];
m6_855 -> m6_858  [key=2, style=dotted];
m6_855 -> m6_148  [key=2, style=dotted];
m6_856 -> m6_857  [key=0, style=solid];
m6_856 -> m6_403  [key=2, style=dotted];
m6_857 -> m6_851  [key=0, style=bold, color=blue];
m6_156 -> m6_157  [key=0, style=solid];
m6_157 -> m6_158  [key=0, style=solid];
m6_157 -> m6_27  [key=2, style=dotted];
m6_157 -> m6_159  [key=1, style=dashed, color=darkseagreen4, label=product];
m6_157 -> m6_160  [key=1, style=dashed, color=darkseagreen4, label=product];
m6_157 -> m6_161  [key=1, style=dashed, color=darkseagreen4, label=product];
m6_157 -> m6_162  [key=1, style=dashed, color=darkseagreen4, label=product];
m6_158 -> m6_159  [key=0, style=solid];
m6_159 -> m6_160  [key=0, style=solid];
m6_159 -> m6_28  [key=2, style=dotted];
m6_160 -> m6_161  [key=0, style=solid];
m6_161 -> m6_162  [key=0, style=solid];
m6_162 -> m6_163  [key=0, style=solid];
m6_162 -> m6_8  [key=2, style=dotted];
m6_163 -> m6_164  [key=0, style=solid];
m6_163 -> m6_165  [key=2, style=dotted];
m6_163 -> m6_166  [key=2, style=dotted];
m6_164 -> m6_156  [key=0, style=bold, color=blue];
m6_468 -> m6_469  [key=0, style=solid];
m6_469 -> m6_470  [key=0, style=solid];
m6_469 -> m6_472  [key=2, style=dotted];
m6_469 -> m6_8  [key=2, style=dotted];
m6_470 -> m6_471  [key=0, style=solid];
m6_470 -> m6_10  [key=2, style=dotted];
m6_471 -> m6_468  [key=0, style=bold, color=blue];
m6_603 -> m6_604  [key=0, style=solid];
m6_604 -> m6_605  [key=0, style=solid];
m6_604 -> m6_607  [key=2, style=dotted];
m6_604 -> m6_215  [key=2, style=dotted];
m6_605 -> m6_606  [key=0, style=solid];
m6_606 -> m6_603  [key=0, style=bold, color=blue];
m6_52 -> m6_53  [key=0, style=solid];
m6_53 -> m6_54  [key=0, style=solid];
m6_53 -> m6_65  [key=2, style=dotted];
m6_53 -> m6_55  [key=1, style=dashed, color=darkseagreen4, label=executorObject];
m6_53 -> m6_56  [key=1, style=dashed, color=darkseagreen4, label=executorObject];
m6_53 -> m6_57  [key=1, style=dashed, color=darkseagreen4, label=executorObject];
m6_53 -> m6_59  [key=1, style=dashed, color=darkseagreen4, label=executorObject];
m6_54 -> m6_55  [key=0, style=solid];
m6_55 -> m6_56  [key=0, style=solid];
m6_56 -> m6_57  [key=0, style=solid];
m6_57 -> m6_58  [key=0, style=solid];
m6_57 -> m6_8  [key=2, style=dotted];
m6_59 -> m6_60  [key=0, style=solid];
m6_59 -> m6_66  [key=2, style=dotted];
m6_58 -> m6_59  [key=0, style=solid];
m6_58 -> m6_9  [key=2, style=dotted];
m6_58 -> m6_60  [key=1, style=dashed, color=darkseagreen4, label=executorObject2];
m6_58 -> m6_61  [key=1, style=dashed, color=darkseagreen4, label=executorObject2];
m6_58 -> m6_62  [key=1, style=dashed, color=darkseagreen4, label=executorObject2];
m6_58 -> m6_63  [key=1, style=dashed, color=darkseagreen4, label=executorObject2];
m6_60 -> m6_61  [key=0, style=solid];
m6_60 -> m6_10  [key=2, style=dotted];
m6_61 -> m6_62  [key=0, style=solid];
m6_61 -> m6_10  [key=2, style=dotted];
m6_62 -> m6_63  [key=0, style=solid];
m6_62 -> m6_67  [key=2, style=dotted];
m6_63 -> m6_64  [key=0, style=solid];
m6_63 -> m6_10  [key=2, style=dotted];
m6_64 -> m6_52  [key=0, style=bold, color=blue];
m6_12 -> m6_13  [key=0, style=solid];
m6_13 -> m6_14  [key=0, style=solid];
m6_13 -> m6_27  [key=2, style=dotted];
m6_13 -> m6_15  [key=1, style=dashed, color=darkseagreen4, label=product];
m6_13 -> m6_16  [key=1, style=dashed, color=darkseagreen4, label=product];
m6_13 -> m6_17  [key=1, style=dashed, color=darkseagreen4, label=product];
m6_13 -> m6_18  [key=1, style=dashed, color=darkseagreen4, label=product];
m6_14 -> m6_15  [key=0, style=solid];
m6_15 -> m6_16  [key=0, style=solid];
m6_15 -> m6_28  [key=2, style=dotted];
m6_16 -> m6_17  [key=0, style=solid];
m6_17 -> m6_18  [key=0, style=solid];
m6_18 -> m6_19  [key=0, style=solid];
m6_18 -> m6_8  [key=2, style=dotted];
m6_19 -> m6_20  [key=0, style=solid];
m6_19 -> m6_9  [key=2, style=dotted];
m6_19 -> m6_21  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m6_19 -> m6_22  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m6_19 -> m6_23  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m6_19 -> m6_24  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m6_19 -> m6_25  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m6_20 -> m6_21  [key=0, style=solid];
m6_20 -> m6_10  [key=2, style=dotted];
m6_21 -> m6_22  [key=0, style=solid];
m6_21 -> m6_28  [key=2, style=dotted];
m6_21 -> m6_10  [key=2, style=dotted];
m6_22 -> m6_23  [key=0, style=solid];
m6_22 -> m6_10  [key=2, style=dotted];
m6_23 -> m6_24  [key=0, style=solid];
m6_23 -> m6_10  [key=2, style=dotted];
m6_24 -> m6_25  [key=0, style=solid];
m6_24 -> m6_10  [key=2, style=dotted];
m6_25 -> m6_26  [key=0, style=solid];
m6_25 -> m6_10  [key=2, style=dotted];
m6_26 -> m6_12  [key=0, style=bold, color=blue];
m6_830 -> m6_831  [key=0, style=solid];
m6_831 -> m6_832  [key=0, style=solid];
m6_831 -> m6_829  [key=2, style=dotted];
m6_831 -> m6_833  [key=1, style=dashed, color=darkseagreen4, label=circularDictionary];
m6_831 -> m6_834  [key=1, style=dashed, color=darkseagreen4, label=circularDictionary];
m6_832 -> m6_833  [key=0, style=solid];
m6_832 -> m6_829  [key=2, style=dotted];
m6_832 -> m6_238  [key=2, style=dotted];
m6_833 -> m6_834  [key=0, style=solid];
m6_833 -> m6_238  [key=2, style=dotted];
m6_834 -> m6_835  [key=0, style=solid];
m6_834 -> m6_165  [key=2, style=dotted];
m6_834 -> m6_484  [key=2, style=dotted];
m6_835 -> m6_836  [key=0, style=solid];
m6_835 -> m6_10  [key=2, style=dotted];
m6_836 -> m6_830  [key=0, style=bold, color=blue];
m6_404 -> m6_405  [key=0, style=solid];
m6_405 -> m6_406  [key=0, style=solid];
m6_405 -> m6_412  [key=2, style=dotted];
m6_406 -> m6_407  [key=0, style=solid];
m6_406 -> m6_8  [key=2, style=dotted];
m6_407 -> m6_408  [key=0, style=solid];
m6_407 -> m6_87  [key=2, style=dotted];
m6_407 -> m6_409  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m6_407 -> m6_410  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m6_408 -> m6_409  [key=0, style=solid];
m6_408 -> m6_10  [key=2, style=dotted];
m6_409 -> m6_410  [key=0, style=solid];
m6_409 -> m6_10  [key=2, style=dotted];
m6_410 -> m6_411  [key=0, style=solid];
m6_410 -> m6_10  [key=2, style=dotted];
m6_411 -> m6_404  [key=0, style=bold, color=blue];
m6_268 -> m6_269  [key=0, style=solid];
m6_269 -> m6_270  [key=0, style=solid];
m6_269 -> m6_7  [key=2, style=dotted];
m6_269 -> m6_273  [key=1, style=dashed, color=darkseagreen4, label=s1];
m6_269 -> m6_280  [key=1, style=dashed, color=darkseagreen4, label=s1];
m6_270 -> m6_271  [key=0, style=solid];
m6_270 -> m6_186  [key=2, style=dotted];
m6_270 -> m6_273  [key=1, style=dashed, color=darkseagreen4, label=jsonSerializer];
m6_270 -> m6_275  [key=1, style=dashed, color=darkseagreen4, label=jsonSerializer];
m6_270 -> m6_277  [key=1, style=dashed, color=darkseagreen4, label=jsonSerializer];
m6_270 -> m6_279  [key=1, style=dashed, color=darkseagreen4, label=jsonSerializer];
m6_273 -> m6_274  [key=0, style=solid];
m6_273 -> m6_265  [key=2, style=dotted];
m6_280 -> m6_281  [key=0, style=solid];
m6_280 -> m6_10  [key=2, style=dotted];
m6_271 -> m6_272  [key=0, style=solid];
m6_275 -> m6_276  [key=0, style=solid];
m6_275 -> m6_187  [key=2, style=dotted];
m6_275 -> m6_188  [key=2, style=dotted];
m6_275 -> m6_189  [key=2, style=dotted];
m6_277 -> m6_278  [key=0, style=solid];
m6_277 -> m6_187  [key=2, style=dotted];
m6_277 -> m6_188  [key=2, style=dotted];
m6_277 -> m6_189  [key=2, style=dotted];
m6_277 -> m6_280  [key=1, style=dashed, color=darkseagreen4, label=s3];
m6_279 -> m6_280  [key=0, style=solid];
m6_279 -> m6_187  [key=2, style=dotted];
m6_279 -> m6_188  [key=2, style=dotted];
m6_279 -> m6_189  [key=2, style=dotted];
m6_272 -> m6_273  [key=0, style=solid];
m6_272 -> m6_264  [key=2, style=dotted];
m6_272 -> m6_274  [key=1, style=dashed, color=darkseagreen4, label=sw];
m6_274 -> m6_275  [key=0, style=solid];
m6_274 -> m6_266  [key=2, style=dotted];
m6_274 -> m6_267  [key=2, style=dotted];
m6_274 -> m6_10  [key=2, style=dotted];
m6_276 -> m6_277  [key=0, style=solid];
m6_276 -> m6_10  [key=2, style=dotted];
m6_278 -> m6_279  [key=0, style=solid];
m6_278 -> m6_10  [key=2, style=dotted];
m6_281 -> m6_268  [key=0, style=bold, color=blue];
m6_837 -> m6_838  [key=0, style=solid];
m6_838 -> m6_839  [key=0, style=solid];
m6_838 -> m6_829  [key=2, style=dotted];
m6_838 -> m6_840  [key=1, style=dashed, color=darkseagreen4, label=circularDictionary];
m6_838 -> m6_841  [key=1, style=dashed, color=darkseagreen4, label=circularDictionary];
m6_839 -> m6_840  [key=0, style=solid];
m6_839 -> m6_829  [key=2, style=dotted];
m6_839 -> m6_238  [key=2, style=dotted];
m6_840 -> m6_841  [key=0, style=solid];
m6_840 -> m6_238  [key=2, style=dotted];
m6_841 -> m6_842  [key=0, style=solid];
m6_841 -> m6_165  [key=2, style=dotted];
m6_841 -> m6_484  [key=2, style=dotted];
m6_842 -> m6_843  [key=0, style=solid];
m6_842 -> m6_10  [key=2, style=dotted];
m6_843 -> m6_837  [key=0, style=bold, color=blue];
m6_1014 -> m6_1015  [key=0, style=solid];
m6_1015 -> m6_1016  [key=0, style=solid];
m6_1016 -> m6_1017  [key=0, style=solid];
m6_1017 -> m6_1018  [key=0, style=solid];
m6_1017 -> m6_165  [key=2, style=dotted];
m6_1017 -> m6_166  [key=2, style=dotted];
m6_1018 -> m6_1014  [key=0, style=bold, color=blue];
m6_68 -> m6_69  [key=0, style=solid];
m6_69 -> m6_70  [key=0, style=solid];
m6_69 -> m6_30  [key=3, color=darkorchid, style=bold, label="Local variable string value"];
m6_70 -> m6_71  [key=0, style=solid];
m6_70 -> m6_9  [key=2, style=dotted];
m6_71 -> m6_72  [key=0, style=solid];
m6_71 -> m6_73  [key=2, style=dotted];
m6_71 -> m6_10  [key=2, style=dotted];
m6_72 -> m6_68  [key=0, style=bold, color=blue];
m6_859 -> m6_860  [key=0, style=solid];
m6_860 -> m6_861  [key=0, style=solid];
m6_860 -> m6_858  [key=2, style=dotted];
m6_860 -> m6_862  [key=1, style=dashed, color=darkseagreen4, label=circularList];
m6_860 -> m6_863  [key=1, style=dashed, color=darkseagreen4, label=circularList];
m6_860 -> m6_864  [key=1, style=dashed, color=darkseagreen4, label=circularList];
m6_861 -> m6_862  [key=0, style=solid];
m6_861 -> m6_148  [key=2, style=dotted];
m6_862 -> m6_863  [key=0, style=solid];
m6_862 -> m6_858  [key=2, style=dotted];
m6_862 -> m6_148  [key=2, style=dotted];
m6_863 -> m6_864  [key=0, style=solid];
m6_863 -> m6_858  [key=2, style=dotted];
m6_863 -> m6_148  [key=2, style=dotted];
m6_864 -> m6_865  [key=0, style=solid];
m6_864 -> m6_165  [key=2, style=dotted];
m6_864 -> m6_484  [key=2, style=dotted];
m6_865 -> m6_866  [key=0, style=solid];
m6_865 -> m6_10  [key=2, style=dotted];
m6_866 -> m6_859  [key=0, style=bold, color=blue];
m6_431 -> m6_432  [key=0, style=solid];
m6_432 -> m6_433  [key=0, style=solid];
m6_432 -> m6_440  [key=2, style=dotted];
m6_432 -> m6_437  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m6_432 -> m6_438  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m6_433 -> m6_434  [key=0, style=solid];
m6_433 -> m6_441  [key=2, style=dotted];
m6_437 -> m6_438  [key=0, style=solid];
m6_437 -> m6_10  [key=2, style=dotted];
m6_438 -> m6_439  [key=0, style=solid];
m6_438 -> m6_10  [key=2, style=dotted];
m6_434 -> m6_435  [key=0, style=solid];
m6_434 -> m6_8  [key=2, style=dotted];
m6_434 -> m6_436  [key=1, style=dashed, color=darkseagreen4, label=json];
m6_435 -> m6_436  [key=0, style=solid];
m6_435 -> m6_10  [key=2, style=dotted];
m6_436 -> m6_437  [key=0, style=solid];
m6_436 -> m6_87  [key=2, style=dotted];
m6_436 -> m6_438  [key=1, style=dashed, color=darkseagreen4, label=m2];
m6_439 -> m6_431  [key=0, style=bold, color=blue];
m6_167 -> m6_168  [key=0, style=solid];
m6_168 -> m6_169  [key=0, style=solid];
m6_168 -> m6_27  [key=2, style=dotted];
m6_168 -> m6_170  [key=1, style=dashed, color=darkseagreen4, label=product];
m6_168 -> m6_171  [key=1, style=dashed, color=darkseagreen4, label=product];
m6_168 -> m6_172  [key=1, style=dashed, color=darkseagreen4, label=product];
m6_168 -> m6_173  [key=1, style=dashed, color=darkseagreen4, label=product];
m6_169 -> m6_170  [key=0, style=solid];
m6_170 -> m6_171  [key=0, style=solid];
m6_170 -> m6_28  [key=2, style=dotted];
m6_171 -> m6_172  [key=0, style=solid];
m6_172 -> m6_173  [key=0, style=solid];
m6_173 -> m6_174  [key=0, style=solid];
m6_173 -> m6_8  [key=2, style=dotted];
m6_173 -> m6_177  [key=1, style=dashed, color=darkseagreen4, label=output];
m6_174 -> m6_175  [key=0, style=solid];
m6_174 -> m6_186  [key=2, style=dotted];
m6_174 -> m6_178  [key=1, style=dashed, color=darkseagreen4, label=jsonSerializer];
m6_177 -> m6_178  [key=0, style=solid];
m6_177 -> m6_187  [key=2, style=dotted];
m6_177 -> m6_188  [key=2, style=dotted];
m6_175 -> m6_176  [key=0, style=solid];
m6_178 -> m6_179  [key=0, style=solid];
m6_178 -> m6_189  [key=2, style=dotted];
m6_176 -> m6_177  [key=0, style=solid];
m6_179 -> m6_180  [key=0, style=solid];
m6_179 -> m6_181  [key=1, style=dashed, color=darkseagreen4, label=deserializedProductShort];
m6_179 -> m6_182  [key=1, style=dashed, color=darkseagreen4, label=deserializedProductShort];
m6_179 -> m6_183  [key=1, style=dashed, color=darkseagreen4, label=deserializedProductShort];
m6_179 -> m6_184  [key=1, style=dashed, color=darkseagreen4, label=deserializedProductShort];
m6_180 -> m6_181  [key=0, style=solid];
m6_180 -> m6_10  [key=2, style=dotted];
m6_181 -> m6_182  [key=0, style=solid];
m6_181 -> m6_28  [key=2, style=dotted];
m6_181 -> m6_10  [key=2, style=dotted];
m6_182 -> m6_183  [key=0, style=solid];
m6_182 -> m6_10  [key=2, style=dotted];
m6_183 -> m6_184  [key=0, style=solid];
m6_183 -> m6_10  [key=2, style=dotted];
m6_184 -> m6_185  [key=0, style=solid];
m6_184 -> m6_10  [key=2, style=dotted];
m6_185 -> m6_167  [key=0, style=bold, color=blue];
m6_823 -> m6_824  [key=0, style=solid];
m6_824 -> m6_825  [key=0, style=solid];
m6_824 -> m6_829  [key=2, style=dotted];
m6_824 -> m6_826  [key=1, style=dashed, color=darkseagreen4, label=circularDictionary];
m6_824 -> m6_827  [key=1, style=dashed, color=darkseagreen4, label=circularDictionary];
m6_825 -> m6_826  [key=0, style=solid];
m6_825 -> m6_829  [key=2, style=dotted];
m6_825 -> m6_238  [key=2, style=dotted];
m6_826 -> m6_827  [key=0, style=solid];
m6_826 -> m6_238  [key=2, style=dotted];
m6_827 -> m6_828  [key=0, style=solid];
m6_827 -> m6_403  [key=2, style=dotted];
m6_828 -> m6_823  [key=0, style=bold, color=blue];
m6_538 -> m6_539  [key=0, style=solid];
m6_539 -> m6_540  [key=0, style=solid];
m6_539 -> m6_539  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m6_540 -> m6_541  [key=0, style=solid];
m6_540 -> m6_87  [key=2, style=dotted];
m6_541 -> m6_542  [key=0, style=solid];
m6_541 -> m6_10  [key=2, style=dotted];
m6_542 -> m6_538  [key=0, style=bold, color=blue];
m6_287 -> m6_288  [key=0, style=solid];
m6_288 -> m6_289  [key=0, style=solid];
m6_288 -> m6_8  [key=2, style=dotted];
m6_289 -> m6_290  [key=0, style=solid];
m6_289 -> m6_10  [key=2, style=dotted];
m6_290 -> m6_287  [key=0, style=bold, color=blue];
m6_1026 -> m6_1027  [key=0, style=solid];
m6_1027 -> m6_1028  [key=0, style=solid];
m6_1027 -> m6_1027  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m6_1028 -> m6_1029  [key=0, style=solid];
m6_1028 -> m6_165  [key=2, style=dotted];
m6_1028 -> m6_166  [key=2, style=dotted];
m6_1029 -> m6_1026  [key=0, style=bold, color=blue];
m6_202 -> m6_203  [key=0, style=solid];
m6_203 -> m6_204  [key=0, style=solid];
m6_203 -> m6_214  [key=2, style=dotted];
m6_203 -> m6_215  [key=2, style=dotted];
m6_203 -> m6_207  [key=1, style=dashed, color=darkseagreen4, label=testDates];
m6_203 -> m6_211  [key=1, style=dashed, color=darkseagreen4, label=testDates];
m6_204 -> m6_205  [key=0, style=solid];
m6_207 -> m6_208  [key=0, style=solid];
m6_207 -> m6_217  [key=2, style=dotted];
m6_211 -> m6_212  [key=0, style=solid];
m6_211 -> m6_8  [key=2, style=dotted];
m6_205 -> m6_206  [key=0, style=solid];
m6_205 -> m6_216  [key=2, style=dotted];
m6_205 -> m6_207  [key=1, style=dashed, color=darkseagreen4, label=ms];
m6_205 -> m6_208  [key=1, style=dashed, color=darkseagreen4, label=ms];
m6_205 -> m6_209  [key=1, style=dashed, color=darkseagreen4, label=ms];
m6_206 -> m6_207  [key=0, style=solid];
m6_206 -> m6_198  [key=2, style=dotted];
m6_208 -> m6_209  [key=0, style=solid];
m6_208 -> m6_218  [key=2, style=dotted];
m6_209 -> m6_210  [key=0, style=solid];
m6_209 -> m6_219  [key=2, style=dotted];
m6_210 -> m6_211  [key=0, style=solid];
m6_210 -> m6_220  [key=2, style=dotted];
m6_210 -> m6_212  [key=1, style=dashed, color=darkseagreen4, label=expected];
m6_212 -> m6_213  [key=0, style=solid];
m6_212 -> m6_10  [key=2, style=dotted];
m6_213 -> m6_202  [key=0, style=bold, color=blue];
m6_463 -> m6_464  [key=0, style=solid];
m6_464 -> m6_465  [key=0, style=solid];
m6_464 -> m6_467  [key=2, style=dotted];
m6_465 -> m6_466  [key=0, style=solid];
m6_465 -> m6_8  [key=2, style=dotted];
m6_466 -> m6_463  [key=0, style=bold, color=blue];
m6_29 -> m6_30  [key=0, style=solid];
m6_30 -> m6_31  [key=0, style=solid];
m6_30 -> m6_30  [key=3, color=darkorchid, style=bold, label="Local variable string value"];
m6_31 -> m6_32  [key=0, style=solid];
m6_31 -> m6_9  [key=2, style=dotted];
m6_31 -> m6_33  [key=1, style=dashed, color=darkseagreen4, label=p];
m6_31 -> m6_34  [key=1, style=dashed, color=darkseagreen4, label=p];
m6_32 -> m6_33  [key=0, style=solid];
m6_32 -> m6_10  [key=2, style=dotted];
m6_33 -> m6_34  [key=0, style=solid];
m6_33 -> m6_36  [key=2, style=dotted];
m6_33 -> m6_10  [key=2, style=dotted];
m6_34 -> m6_35  [key=0, style=solid];
m6_34 -> m6_10  [key=2, style=dotted];
m6_35 -> m6_29  [key=0, style=bold, color=blue];
m6_102 -> m6_103  [key=0, style=solid];
m6_103 -> m6_104  [key=0, style=solid];
m6_103 -> m6_103  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m6_104 -> m6_105  [key=0, style=solid];
m6_104 -> m6_108  [key=2, style=dotted];
m6_105 -> m6_106  [key=0, style=solid];
m6_105 -> m6_105  [key=3, color=darkorchid, style=bold, label="Local variable string s"];
m6_106 -> m6_107  [key=0, style=solid];
m6_106 -> m6_106  [key=1, style=dashed, color=darkseagreen4, label=s];
m6_107 -> m6_102  [key=0, style=bold, color=blue];
m6_983 -> m6_984  [key=0, style=solid];
m6_984 -> m6_985  [key=0, style=solid];
m6_985 -> m6_986  [key=0, style=solid];
m6_986 -> m6_987  [key=0, style=solid];
m6_986 -> m6_165  [key=2, style=dotted];
m6_986 -> m6_166  [key=2, style=dotted];
m6_986 -> m6_988  [key=1, style=dashed, color=darkseagreen4, label=employee];
m6_987 -> m6_988  [key=0, style=solid];
m6_987 -> m6_990  [key=2, style=dotted];
m6_988 -> m6_989  [key=0, style=solid];
m6_988 -> m6_10  [key=2, style=dotted];
m6_989 -> m6_983  [key=0, style=bold, color=blue];
m6_594 -> m6_595  [key=0, style=solid];
m6_595 -> m6_594  [key=0, style=bold, color=blue];
m6_998 -> m6_999  [key=0, style=solid];
m6_999 -> m6_1000  [key=0, style=solid];
m6_999 -> m6_1001  [key=1, style=dashed, color=darkseagreen4, label=employeeRef];
m6_1000 -> m6_1001  [key=0, style=solid];
m6_1001 -> m6_1002  [key=0, style=solid];
m6_1002 -> m6_1003  [key=0, style=solid];
m6_1002 -> m6_165  [key=2, style=dotted];
m6_1002 -> m6_166  [key=2, style=dotted];
m6_1002 -> m6_1004  [key=1, style=dashed, color=darkseagreen4, label=values];
m6_1002 -> m6_1005  [key=1, style=dashed, color=darkseagreen4, label=values];
m6_1002 -> m6_1011  [key=1, style=dashed, color=darkseagreen4, label=values];
m6_1002 -> m6_1012  [key=1, style=dashed, color=darkseagreen4, label=values];
m6_1003 -> m6_1004  [key=0, style=solid];
m6_1003 -> m6_10  [key=2, style=dotted];
m6_1004 -> m6_1005  [key=0, style=solid];
m6_1004 -> m6_1006  [key=1, style=dashed, color=darkseagreen4, label=e];
m6_1004 -> m6_1007  [key=1, style=dashed, color=darkseagreen4, label=e];
m6_1005 -> m6_1006  [key=0, style=solid];
m6_1005 -> m6_1008  [key=1, style=dashed, color=darkseagreen4, label=p];
m6_1005 -> m6_1009  [key=1, style=dashed, color=darkseagreen4, label=p];
m6_1005 -> m6_1010  [key=1, style=dashed, color=darkseagreen4, label=p];
m6_1011 -> m6_1012  [key=0, style=solid];
m6_1011 -> m6_10  [key=2, style=dotted];
m6_1012 -> m6_1013  [key=0, style=solid];
m6_1012 -> m6_10  [key=2, style=dotted];
m6_1006 -> m6_1007  [key=0, style=solid];
m6_1006 -> m6_10  [key=2, style=dotted];
m6_1007 -> m6_1008  [key=0, style=solid];
m6_1007 -> m6_10  [key=2, style=dotted];
m6_1008 -> m6_1009  [key=0, style=solid];
m6_1008 -> m6_10  [key=2, style=dotted];
m6_1009 -> m6_1010  [key=0, style=solid];
m6_1009 -> m6_215  [key=2, style=dotted];
m6_1009 -> m6_10  [key=2, style=dotted];
m6_1010 -> m6_1011  [key=0, style=solid];
m6_1010 -> m6_215  [key=2, style=dotted];
m6_1010 -> m6_10  [key=2, style=dotted];
m6_1013 -> m6_998  [key=0, style=bold, color=blue];
m6_578 -> m6_579  [key=0, style=solid];
m6_579 -> m6_580  [key=0, style=solid];
m6_579 -> m6_588  [key=1, style=dashed, color=darkseagreen4, label=json];
m6_579 -> m6_579  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m6_580 -> m6_581  [key=0, style=solid];
m6_580 -> m6_87  [key=2, style=dotted];
m6_580 -> m6_582  [key=1, style=dashed, color=darkseagreen4, label=aa];
m6_580 -> m6_583  [key=1, style=dashed, color=darkseagreen4, label=aa];
m6_580 -> m6_584  [key=1, style=dashed, color=darkseagreen4, label=aa];
m6_580 -> m6_585  [key=1, style=dashed, color=darkseagreen4, label=aa];
m6_580 -> m6_586  [key=1, style=dashed, color=darkseagreen4, label=aa];
m6_580 -> m6_587  [key=1, style=dashed, color=darkseagreen4, label=aa];
m6_588 -> m6_589  [key=0, style=solid];
m6_588 -> m6_10  [key=2, style=dotted];
m6_581 -> m6_582  [key=0, style=solid];
m6_581 -> m6_10  [key=2, style=dotted];
m6_582 -> m6_583  [key=0, style=solid];
m6_582 -> m6_10  [key=2, style=dotted];
m6_583 -> m6_584  [key=0, style=solid];
m6_583 -> m6_10  [key=2, style=dotted];
m6_584 -> m6_585  [key=0, style=solid];
m6_584 -> m6_10  [key=2, style=dotted];
m6_585 -> m6_586  [key=0, style=solid];
m6_585 -> m6_10  [key=2, style=dotted];
m6_586 -> m6_587  [key=0, style=solid];
m6_586 -> m6_10  [key=2, style=dotted];
m6_587 -> m6_588  [key=0, style=solid];
m6_587 -> m6_8  [key=2, style=dotted];
m6_589 -> m6_578  [key=0, style=bold, color=blue];
m6_1030 -> m6_1031  [key=0, style=solid];
m6_1031 -> m6_1032  [key=0, style=solid];
m6_1031 -> m6_1031  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m6_1032 -> m6_1033  [key=0, style=solid];
m6_1032 -> m6_9  [key=2, style=dotted];
m6_1032 -> m6_1034  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m6_1032 -> m6_1035  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m6_1032 -> m6_1036  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m6_1032 -> m6_1037  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m6_1032 -> m6_1038  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m6_1033 -> m6_1034  [key=0, style=solid];
m6_1033 -> m6_10  [key=2, style=dotted];
m6_1034 -> m6_1035  [key=0, style=solid];
m6_1034 -> m6_28  [key=2, style=dotted];
m6_1034 -> m6_10  [key=2, style=dotted];
m6_1035 -> m6_1036  [key=0, style=solid];
m6_1035 -> m6_10  [key=2, style=dotted];
m6_1036 -> m6_1037  [key=0, style=solid];
m6_1036 -> m6_10  [key=2, style=dotted];
m6_1037 -> m6_1038  [key=0, style=solid];
m6_1037 -> m6_10  [key=2, style=dotted];
m6_1038 -> m6_1039  [key=0, style=solid];
m6_1038 -> m6_10  [key=2, style=dotted];
m6_1039 -> m6_1030  [key=0, style=bold, color=blue];
m6_752 -> m6_753  [key=0, style=solid];
m6_753 -> m6_754  [key=0, style=solid];
m6_753 -> m6_759  [key=2, style=dotted];
m6_753 -> m6_755  [key=1, style=dashed, color=darkseagreen4, label=mikeManager];
m6_754 -> m6_755  [key=0, style=solid];
m6_754 -> m6_759  [key=2, style=dotted];
m6_755 -> m6_756  [key=0, style=solid];
m6_755 -> m6_214  [key=2, style=dotted];
m6_756 -> m6_757  [key=0, style=solid];
m6_756 -> m6_403  [key=2, style=dotted];
m6_757 -> m6_758  [key=0, style=solid];
m6_757 -> m6_10  [key=2, style=dotted];
m6_758 -> m6_752  [key=0, style=bold, color=blue];
m6_867 -> m6_868  [key=0, style=solid];
m6_868 -> m6_869  [key=0, style=solid];
m6_868 -> m6_858  [key=2, style=dotted];
m6_868 -> m6_870  [key=1, style=dashed, color=darkseagreen4, label=circularList];
m6_868 -> m6_871  [key=1, style=dashed, color=darkseagreen4, label=circularList];
m6_868 -> m6_872  [key=1, style=dashed, color=darkseagreen4, label=circularList];
m6_869 -> m6_870  [key=0, style=solid];
m6_869 -> m6_148  [key=2, style=dotted];
m6_870 -> m6_871  [key=0, style=solid];
m6_870 -> m6_858  [key=2, style=dotted];
m6_870 -> m6_148  [key=2, style=dotted];
m6_871 -> m6_872  [key=0, style=solid];
m6_871 -> m6_858  [key=2, style=dotted];
m6_871 -> m6_148  [key=2, style=dotted];
m6_872 -> m6_873  [key=0, style=solid];
m6_872 -> m6_165  [key=2, style=dotted];
m6_872 -> m6_484  [key=2, style=dotted];
m6_872 -> m6_874  [key=1, style=dashed, color=darkseagreen4, label=json];
m6_873 -> m6_874  [key=0, style=solid];
m6_873 -> m6_876  [key=2, style=dotted];
m6_874 -> m6_875  [key=0, style=solid];
m6_874 -> m6_10  [key=2, style=dotted];
m6_875 -> m6_867  [key=0, style=bold, color=blue];
m6_120 -> m6_121  [key=0, style=solid];
m6_121 -> m6_122  [key=0, style=solid];
m6_121 -> m6_130  [key=2, style=dotted];
m6_121 -> m6_123  [key=1, style=dashed, color=darkseagreen4, label=test];
m6_121 -> m6_124  [key=1, style=dashed, color=darkseagreen4, label=test];
m6_121 -> m6_127  [key=1, style=dashed, color=darkseagreen4, label=test];
m6_121 -> m6_128  [key=1, style=dashed, color=darkseagreen4, label=test];
m6_122 -> m6_123  [key=0, style=solid];
m6_123 -> m6_124  [key=0, style=solid];
m6_124 -> m6_125  [key=0, style=solid];
m6_124 -> m6_8  [key=2, style=dotted];
m6_124 -> m6_126  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m6_127 -> m6_128  [key=0, style=solid];
m6_127 -> m6_10  [key=2, style=dotted];
m6_128 -> m6_129  [key=0, style=solid];
m6_128 -> m6_10  [key=2, style=dotted];
m6_125 -> m6_126  [key=0, style=solid];
m6_125 -> m6_10  [key=2, style=dotted];
m6_126 -> m6_127  [key=0, style=solid];
m6_126 -> m6_87  [key=2, style=dotted];
m6_126 -> m6_128  [key=1, style=dashed, color=darkseagreen4, label=test2];
m6_129 -> m6_120  [key=0, style=bold, color=blue];
m6_515 -> m6_516  [key=0, style=solid];
m6_516 -> m6_517  [key=0, style=solid];
m6_516 -> m6_528  [key=2, style=dotted];
m6_516 -> m6_364  [key=2, style=dotted];
m6_517 -> m6_518  [key=0, style=solid];
m6_517 -> m6_8  [key=2, style=dotted];
m6_517 -> m6_519  [key=1, style=dashed, color=darkseagreen4, label=json];
m6_518 -> m6_519  [key=0, style=solid];
m6_518 -> m6_10  [key=2, style=dotted];
m6_519 -> m6_520  [key=0, style=solid];
m6_519 -> m6_87  [key=2, style=dotted];
m6_519 -> m6_521  [key=1, style=dashed, color=darkseagreen4, label=userNullablleDeserialized];
m6_519 -> m6_522  [key=1, style=dashed, color=darkseagreen4, label=userNullablleDeserialized];
m6_519 -> m6_523  [key=1, style=dashed, color=darkseagreen4, label=userNullablleDeserialized];
m6_519 -> m6_524  [key=1, style=dashed, color=darkseagreen4, label=userNullablleDeserialized];
m6_519 -> m6_525  [key=1, style=dashed, color=darkseagreen4, label=userNullablleDeserialized];
m6_519 -> m6_526  [key=1, style=dashed, color=darkseagreen4, label=userNullablleDeserialized];
m6_520 -> m6_521  [key=0, style=solid];
m6_520 -> m6_364  [key=2, style=dotted];
m6_520 -> m6_10  [key=2, style=dotted];
m6_521 -> m6_522  [key=0, style=solid];
m6_521 -> m6_10  [key=2, style=dotted];
m6_522 -> m6_523  [key=0, style=solid];
m6_522 -> m6_10  [key=2, style=dotted];
m6_523 -> m6_524  [key=0, style=solid];
m6_523 -> m6_10  [key=2, style=dotted];
m6_524 -> m6_525  [key=0, style=solid];
m6_524 -> m6_10  [key=2, style=dotted];
m6_525 -> m6_526  [key=0, style=solid];
m6_525 -> m6_10  [key=2, style=dotted];
m6_526 -> m6_527  [key=0, style=solid];
m6_526 -> m6_10  [key=2, style=dotted];
m6_527 -> m6_515  [key=0, style=bold, color=blue];
m6_221 -> m6_222  [key=0, style=solid];
m6_222 -> m6_223  [key=0, style=solid];
m6_222 -> m6_214  [key=2, style=dotted];
m6_222 -> m6_226  [key=2, style=dotted];
m6_222 -> m6_215  [key=2, style=dotted];
m6_222 -> m6_227  [key=2, style=dotted];
m6_222 -> m6_228  [key=2, style=dotted];
m6_223 -> m6_224  [key=0, style=solid];
m6_223 -> m6_8  [key=2, style=dotted];
m6_224 -> m6_225  [key=0, style=solid];
m6_224 -> m6_10  [key=2, style=dotted];
m6_225 -> m6_221  [key=0, style=bold, color=blue];
m6_730 -> m6_731  [key=0, style=solid];
m6_731 -> m6_732  [key=0, style=solid];
m6_731 -> m6_607  [key=2, style=dotted];
m6_731 -> m6_733  [key=1, style=dashed, color=darkseagreen4, label=p];
m6_731 -> m6_734  [key=1, style=dashed, color=darkseagreen4, label=p];
m6_732 -> m6_733  [key=0, style=solid];
m6_732 -> m6_186  [key=2, style=dotted];
m6_733 -> m6_734  [key=0, style=solid];
m6_733 -> m6_188  [key=2, style=dotted];
m6_733 -> m6_736  [key=2, style=dotted];
m6_734 -> m6_735  [key=0, style=solid];
m6_734 -> m6_10  [key=2, style=dotted];
m6_735 -> m6_730  [key=0, style=bold, color=blue];
m6_897 -> m6_898  [key=0, style=solid];
m6_898 -> m6_899  [key=0, style=solid];
m6_898 -> m6_50  [key=2, style=dotted];
m6_899 -> m6_900  [key=0, style=solid];
m6_899 -> m6_214  [key=2, style=dotted];
m6_900 -> m6_901  [key=0, style=solid];
m6_900 -> m6_759  [key=2, style=dotted];
m6_901 -> m6_897  [key=0, style=bold, color=blue];
m6_569 -> m6_570  [key=0, style=solid];
m6_570 -> m6_571  [key=0, style=solid];
m6_570 -> m6_577  [key=2, style=dotted];
m6_570 -> m6_572  [key=1, style=dashed, color=darkseagreen4, label=aa];
m6_570 -> m6_573  [key=1, style=dashed, color=darkseagreen4, label=aa];
m6_570 -> m6_574  [key=1, style=dashed, color=darkseagreen4, label=aa];
m6_571 -> m6_572  [key=0, style=solid];
m6_572 -> m6_573  [key=0, style=solid];
m6_573 -> m6_574  [key=0, style=solid];
m6_574 -> m6_575  [key=0, style=solid];
m6_574 -> m6_8  [key=2, style=dotted];
m6_575 -> m6_576  [key=0, style=solid];
m6_575 -> m6_10  [key=2, style=dotted];
m6_576 -> m6_569  [key=0, style=bold, color=blue];
m6_301 -> m6_302  [key=0, style=solid];
m6_302 -> m6_303  [key=0, style=solid];
m6_302 -> m6_302  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m6_303 -> m6_304  [key=0, style=solid];
m6_303 -> m6_87  [key=2, style=dotted];
m6_303 -> m6_305  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m6_303 -> m6_306  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m6_303 -> m6_307  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m6_303 -> m6_308  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m6_303 -> m6_309  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m6_304 -> m6_305  [key=0, style=solid];
m6_304 -> m6_10  [key=2, style=dotted];
m6_305 -> m6_306  [key=0, style=solid];
m6_305 -> m6_10  [key=2, style=dotted];
m6_306 -> m6_307  [key=0, style=solid];
m6_306 -> m6_10  [key=2, style=dotted];
m6_307 -> m6_308  [key=0, style=solid];
m6_307 -> m6_10  [key=2, style=dotted];
m6_308 -> m6_309  [key=0, style=solid];
m6_308 -> m6_10  [key=2, style=dotted];
m6_309 -> m6_310  [key=0, style=solid];
m6_309 -> m6_10  [key=2, style=dotted];
m6_310 -> m6_301  [key=0, style=bold, color=blue];
m6_889 -> m6_890  [key=0, style=solid];
m6_890 -> m6_891  [key=0, style=solid];
m6_890 -> m6_878  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m6_891 -> m6_892  [key=0, style=solid];
m6_891 -> m6_165  [key=2, style=dotted];
m6_891 -> m6_547  [key=2, style=dotted];
m6_892 -> m6_889  [key=0, style=bold, color=blue];
m6_902 -> m6_903  [key=0, style=solid];
m6_903 -> m6_904  [key=0, style=solid];
m6_903 -> m6_903  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m6_904 -> m6_905  [key=0, style=solid];
m6_904 -> m6_165  [key=2, style=dotted];
m6_904 -> m6_547  [key=2, style=dotted];
m6_904 -> m6_906  [key=1, style=dashed, color=darkseagreen4, label=c];
m6_904 -> m6_907  [key=1, style=dashed, color=darkseagreen4, label=c];
m6_905 -> m6_906  [key=0, style=solid];
m6_905 -> m6_10  [key=2, style=dotted];
m6_906 -> m6_907  [key=0, style=solid];
m6_906 -> m6_10  [key=2, style=dotted];
m6_907 -> m6_908  [key=0, style=solid];
m6_907 -> m6_10  [key=2, style=dotted];
m6_908 -> m6_902  [key=0, style=bold, color=blue];
m6_893 -> m6_894  [key=0, style=solid];
m6_894 -> m6_895  [key=0, style=solid];
m6_894 -> m6_894  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m6_895 -> m6_896  [key=0, style=solid];
m6_895 -> m6_165  [key=2, style=dotted];
m6_895 -> m6_547  [key=2, style=dotted];
m6_896 -> m6_893  [key=0, style=bold, color=blue];
m6_357 -> m6_358  [key=0, style=solid];
m6_358 -> m6_359  [key=0, style=solid];
m6_358 -> m6_364  [key=2, style=dotted];
m6_358 -> m6_362  [key=1, style=dashed, color=darkseagreen4, label=guid];
m6_359 -> m6_360  [key=0, style=solid];
m6_359 -> m6_365  [key=2, style=dotted];
m6_359 -> m6_8  [key=2, style=dotted];
m6_359 -> m6_361  [key=1, style=dashed, color=darkseagreen4, label=json];
m6_362 -> m6_363  [key=0, style=solid];
m6_362 -> m6_10  [key=2, style=dotted];
m6_360 -> m6_361  [key=0, style=solid];
m6_360 -> m6_10  [key=2, style=dotted];
m6_361 -> m6_362  [key=0, style=solid];
m6_361 -> m6_87  [key=2, style=dotted];
m6_363 -> m6_357  [key=0, style=bold, color=blue];
m6_37 -> m6_38  [key=0, style=solid];
m6_38 -> m6_39  [key=0, style=solid];
m6_38 -> m6_28  [key=2, style=dotted];
m6_38 -> m6_40  [key=1, style=dashed, color=darkseagreen4, label=dateValue];
m6_38 -> m6_44  [key=1, style=dashed, color=darkseagreen4, label=dateValue];
m6_39 -> m6_40  [key=0, style=solid];
m6_39 -> m6_50  [key=2, style=dotted];
m6_39 -> m6_41  [key=1, style=dashed, color=darkseagreen4, label=testDictionary];
m6_40 -> m6_41  [key=0, style=solid];
m6_44 -> m6_45  [key=0, style=solid];
m6_44 -> m6_10  [key=2, style=dotted];
m6_41 -> m6_42  [key=0, style=solid];
m6_41 -> m6_8  [key=2, style=dotted];
m6_41 -> m6_46  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m6_41 -> m6_48  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m6_42 -> m6_43  [key=0, style=solid];
m6_42 -> m6_9  [key=2, style=dotted];
m6_46 -> m6_47  [key=0, style=solid];
m6_46 -> n9  [key=2, style=dotted];
m6_48 -> m6_49  [key=0, style=solid];
m6_48 -> n9  [key=2, style=dotted];
m6_43 -> m6_44  [key=0, style=solid];
m6_45 -> m6_46  [key=0, style=solid];
m6_45 -> n9  [key=2, style=dotted];
m6_47 -> m6_48  [key=0, style=solid];
m6_47 -> m6_51  [key=2, style=dotted];
m6_49 -> m6_37  [key=0, style=bold, color=blue];
m6_660 -> m6_661  [key=0, style=solid];
m6_661 -> m6_662  [key=0, style=solid];
m6_662 -> m6_660  [key=0, style=bold, color=blue];
m6_760 -> m6_761  [key=0, style=solid];
m6_761 -> m6_762  [key=0, style=solid];
m6_761 -> m6_761  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m6_762 -> m6_763  [key=0, style=solid];
m6_762 -> m6_87  [key=2, style=dotted];
m6_762 -> m6_764  [key=1, style=dashed, color=darkseagreen4, label=employees];
m6_762 -> m6_765  [key=1, style=dashed, color=darkseagreen4, label=employees];
m6_762 -> m6_766  [key=1, style=dashed, color=darkseagreen4, label=employees];
m6_763 -> m6_764  [key=0, style=solid];
m6_763 -> m6_10  [key=2, style=dotted];
m6_764 -> m6_765  [key=0, style=solid];
m6_764 -> m6_10  [key=2, style=dotted];
m6_765 -> m6_766  [key=0, style=solid];
m6_765 -> m6_10  [key=2, style=dotted];
m6_766 -> m6_767  [key=0, style=solid];
m6_766 -> m6_10  [key=2, style=dotted];
m6_767 -> m6_760  [key=0, style=bold, color=blue];
m6_88 -> m6_89  [key=0, style=solid];
m6_89 -> m6_90  [key=0, style=solid];
m6_89 -> m6_93  [key=2, style=dotted];
m6_89 -> m6_8  [key=2, style=dotted];
m6_90 -> m6_91  [key=0, style=solid];
m6_90 -> m6_87  [key=2, style=dotted];
m6_91 -> m6_92  [key=0, style=solid];
m6_91 -> m6_10  [key=2, style=dotted];
m6_92 -> m6_88  [key=0, style=bold, color=blue];
m6_719 -> m6_720  [key=0, style=solid];
m6_720 -> m6_721  [key=0, style=solid];
m6_721 -> m6_719  [key=0, style=bold, color=blue];
m6_548 -> m6_549  [key=0, style=solid];
m6_549 -> m6_550  [key=0, style=solid];
m6_549 -> m6_555  [key=2, style=dotted];
m6_550 -> m6_551  [key=0, style=solid];
m6_550 -> m6_8  [key=2, style=dotted];
m6_550 -> m6_552  [key=1, style=dashed, color=darkseagreen4, label=json];
m6_551 -> m6_552  [key=0, style=solid];
m6_551 -> m6_10  [key=2, style=dotted];
m6_552 -> m6_553  [key=0, style=solid];
m6_552 -> m6_87  [key=2, style=dotted];
m6_553 -> m6_554  [key=0, style=solid];
m6_553 -> m6_10  [key=2, style=dotted];
m6_554 -> m6_548  [key=0, style=bold, color=blue];
m6_253 -> m6_254  [key=0, style=solid];
m6_254 -> m6_255  [key=0, style=solid];
m6_254 -> m6_263  [key=2, style=dotted];
m6_254 -> m6_27  [key=2, style=dotted];
m6_254 -> m6_258  [key=1, style=dashed, color=darkseagreen4, label=collection];
m6_254 -> m6_261  [key=1, style=dashed, color=darkseagreen4, label=collection];
m6_255 -> m6_256  [key=0, style=solid];
m6_255 -> m6_186  [key=2, style=dotted];
m6_255 -> m6_258  [key=1, style=dashed, color=darkseagreen4, label=jsonSerializer];
m6_255 -> m6_260  [key=1, style=dashed, color=darkseagreen4, label=jsonSerializer];
m6_258 -> m6_259  [key=0, style=solid];
m6_258 -> m6_265  [key=2, style=dotted];
m6_261 -> m6_262  [key=0, style=solid];
m6_261 -> m6_10  [key=2, style=dotted];
m6_256 -> m6_257  [key=0, style=solid];
m6_260 -> m6_261  [key=0, style=solid];
m6_260 -> m6_187  [key=2, style=dotted];
m6_260 -> m6_188  [key=2, style=dotted];
m6_260 -> m6_266  [key=2, style=dotted];
m6_260 -> m6_267  [key=2, style=dotted];
m6_260 -> m6_189  [key=2, style=dotted];
m6_257 -> m6_258  [key=0, style=solid];
m6_257 -> m6_264  [key=2, style=dotted];
m6_257 -> m6_259  [key=1, style=dashed, color=darkseagreen4, label=sw];
m6_257 -> m6_260  [key=1, style=dashed, color=darkseagreen4, label=sw];
m6_259 -> m6_260  [key=0, style=solid];
m6_259 -> m6_266  [key=2, style=dotted];
m6_259 -> m6_267  [key=2, style=dotted];
m6_259 -> m6_10  [key=2, style=dotted];
m6_262 -> m6_253  [key=0, style=bold, color=blue];
m6_737 -> m6_738  [key=0, style=solid];
m6_738 -> m6_739  [key=0, style=solid];
m6_738 -> m6_214  [key=2, style=dotted];
m6_738 -> m6_740  [key=1, style=dashed, color=darkseagreen4, label=p];
m6_738 -> m6_741  [key=1, style=dashed, color=darkseagreen4, label=p];
m6_738 -> m6_742  [key=1, style=dashed, color=darkseagreen4, label=p];
m6_738 -> m6_743  [key=1, style=dashed, color=darkseagreen4, label=p];
m6_739 -> m6_740  [key=0, style=solid];
m6_739 -> m6_186  [key=2, style=dotted];
m6_740 -> m6_741  [key=0, style=solid];
m6_740 -> m6_188  [key=2, style=dotted];
m6_740 -> m6_736  [key=2, style=dotted];
m6_741 -> m6_742  [key=0, style=solid];
m6_741 -> m6_10  [key=2, style=dotted];
m6_742 -> m6_743  [key=0, style=solid];
m6_742 -> m6_10  [key=2, style=dotted];
m6_743 -> m6_744  [key=0, style=solid];
m6_743 -> m6_10  [key=2, style=dotted];
m6_744 -> m6_737  [key=0, style=bold, color=blue];
m6_590 -> m6_591  [key=0, style=solid];
m6_591 -> m6_592  [key=0, style=solid];
m6_591 -> m6_591  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m6_592 -> m6_593  [key=0, style=solid];
m6_592 -> m6_87  [key=2, style=dotted];
m6_593 -> m6_590  [key=0, style=bold, color=blue];
m6_94 -> m6_95  [key=0, style=solid];
m6_95 -> m6_96  [key=0, style=solid];
m6_95 -> m6_101  [key=2, style=dotted];
m6_95 -> m6_8  [key=2, style=dotted];
m6_96 -> m6_97  [key=0, style=solid];
m6_96 -> m6_10  [key=2, style=dotted];
m6_97 -> m6_98  [key=0, style=solid];
m6_97 -> m6_87  [key=2, style=dotted];
m6_97 -> m6_99  [key=1, style=dashed, color=darkseagreen4, label=c];
m6_98 -> m6_99  [key=0, style=solid];
m6_98 -> m6_10  [key=2, style=dotted];
m6_99 -> m6_100  [key=0, style=solid];
m6_99 -> m6_10  [key=2, style=dotted];
m6_100 -> m6_94  [key=0, style=bold, color=blue];
m6_1040 -> m6_609  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonSerializerTest"];
m6_1040 -> m6_873  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonSerializerTest"];
m6_1041 -> m6_658  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonSerializerTest.SuperKlass"];
m6_1042 -> m6_661  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonSerializerTest.SubKlass"];
m6_1043 -> m6_714  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonSerializerTest.DataContractPrivateMembers"];
m6_1043 -> m6_715  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonSerializerTest.DataContractPrivateMembers"];
m6_1043 -> m6_716  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonSerializerTest.DataContractPrivateMembers"];
m6_1043 -> m6_717  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonSerializerTest.DataContractPrivateMembers"];
m6_1043 -> m6_720  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonSerializerTest.DataContractPrivateMembers"];
m6_1044 -> m6_898  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonSerializerTest.DictionaryInterfaceClass"];
m6_1044 -> m6_899  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonSerializerTest.DictionaryInterfaceClass"];
m6_1044 -> m6_900  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonSerializerTest.DictionaryInterfaceClass"];
}
