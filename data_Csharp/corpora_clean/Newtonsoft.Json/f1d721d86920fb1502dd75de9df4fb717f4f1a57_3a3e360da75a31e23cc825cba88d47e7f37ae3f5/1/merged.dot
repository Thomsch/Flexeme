digraph  {
m1_0 [label="Entry Newtonsoft.Json.Tests.Serialization.FSharpTests.List()", span="40-40", cluster="Newtonsoft.Json.Tests.Serialization.FSharpTests.List()", file="FSharpTests.cs"];
m1_1 [label="FSharpList<int> l = ListModule.OfSeq(new List<int> { 1, 2, 3 })", span="42-42", cluster="Newtonsoft.Json.Tests.Serialization.FSharpTests.List()", file="FSharpTests.cs"];
m1_2 [label="string json = JsonConvert.SerializeObject(l, Formatting.Indented)", span="44-44", cluster="Newtonsoft.Json.Tests.Serialization.FSharpTests.List()", file="FSharpTests.cs"];
m1_5 [label="Assert.AreEqual(l.Length, l2.Length)", span="54-54", cluster="Newtonsoft.Json.Tests.Serialization.FSharpTests.List()", file="FSharpTests.cs"];
m1_6 [label="CollectionAssert.AreEquivalent(l, l2)", span="55-55", cluster="Newtonsoft.Json.Tests.Serialization.FSharpTests.List()", file="FSharpTests.cs"];
m1_3 [label="StringAssert.AreEqual(@''[\r\n  1,\r\n  2,\r\n  3\r\n]'', json)", span="46-50", cluster="Newtonsoft.Json.Tests.Serialization.FSharpTests.List()", file="FSharpTests.cs"];
m1_4 [label="FSharpList<int> l2 = JsonConvert.DeserializeObject<FSharpList<int>>(json)", span="52-52", cluster="Newtonsoft.Json.Tests.Serialization.FSharpTests.List()", file="FSharpTests.cs"];
m1_7 [label="Exit Newtonsoft.Json.Tests.Serialization.FSharpTests.List()", span="40-40", cluster="Newtonsoft.Json.Tests.Serialization.FSharpTests.List()", file="FSharpTests.cs"];
m1_13 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="FSharpTests.cs"];
m1_15 [label="Entry Newtonsoft.Json.Tests.Serialization.FSharpTests.Set()", span="59-59", cluster="Newtonsoft.Json.Tests.Serialization.FSharpTests.Set()", file="FSharpTests.cs"];
m1_16 [label="FSharpSet<int> l = SetModule.OfSeq(new List<int> { 1, 2, 3 })", span="61-61", cluster="Newtonsoft.Json.Tests.Serialization.FSharpTests.Set()", file="FSharpTests.cs"];
m1_17 [label="string json = JsonConvert.SerializeObject(l, Formatting.Indented)", span="63-63", cluster="Newtonsoft.Json.Tests.Serialization.FSharpTests.Set()", file="FSharpTests.cs"];
m1_20 [label="Assert.AreEqual(l.Count, l2.Count)", span="73-73", cluster="Newtonsoft.Json.Tests.Serialization.FSharpTests.Set()", file="FSharpTests.cs"];
m1_21 [label="CollectionAssert.AreEquivalent(l, l2)", span="74-74", cluster="Newtonsoft.Json.Tests.Serialization.FSharpTests.Set()", file="FSharpTests.cs"];
m1_18 [label="StringAssert.AreEqual(@''[\r\n  1,\r\n  2,\r\n  3\r\n]'', json)", span="65-69", cluster="Newtonsoft.Json.Tests.Serialization.FSharpTests.Set()", file="FSharpTests.cs"];
m1_19 [label="FSharpSet<int> l2 = JsonConvert.DeserializeObject<FSharpSet<int>>(json)", span="71-71", cluster="Newtonsoft.Json.Tests.Serialization.FSharpTests.Set()", file="FSharpTests.cs"];
m1_22 [label="Exit Newtonsoft.Json.Tests.Serialization.FSharpTests.Set()", span="59-59", cluster="Newtonsoft.Json.Tests.Serialization.FSharpTests.Set()", file="FSharpTests.cs"];
m1_10 [label="Entry Unk.SerializeObject", span="", cluster="Unk.SerializeObject", file="FSharpTests.cs"];
m1_14 [label="Entry Unk.AreEquivalent", span="", cluster="Unk.AreEquivalent", file="FSharpTests.cs"];
m1_11 [label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="338-338", cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="FSharpTests.cs"];
m1_32 [label="Entry System.Tuple.Create<T1, T2>(T1, T2)", span="0-0", cluster="System.Tuple.Create<T1, T2>(T1, T2)", file="FSharpTests.cs"];
m1_23 [label="Entry Newtonsoft.Json.Tests.Serialization.FSharpTests.Map()", span="78-78", cluster="Newtonsoft.Json.Tests.Serialization.FSharpTests.Map()", file="FSharpTests.cs"];
m1_24 [label="FSharpMap<string, int> m1 = MapModule.OfSeq(new List<Tuple<string, int>> { Tuple.Create(''one'', 1), Tuple.Create(''II'', 2), Tuple.Create(''3'', 3) })", span="80-80", cluster="Newtonsoft.Json.Tests.Serialization.FSharpTests.Map()", file="FSharpTests.cs"];
m1_25 [label="string json = JsonConvert.SerializeObject(m1, Formatting.Indented)", span="82-82", cluster="Newtonsoft.Json.Tests.Serialization.FSharpTests.Map()", file="FSharpTests.cs"];
m1_27 [label="Assert.AreEqual(m1.Count, m2.Count)", span="86-86", cluster="Newtonsoft.Json.Tests.Serialization.FSharpTests.Map()", file="FSharpTests.cs"];
m1_26 [label="FSharpMap<string, int> m2 = JsonConvert.DeserializeObject<FSharpMap<string, int>>(json)", span="84-84", cluster="Newtonsoft.Json.Tests.Serialization.FSharpTests.Map()", file="FSharpTests.cs"];
m1_28 [label="Assert.AreEqual(1, m2[''one''])", span="87-87", cluster="Newtonsoft.Json.Tests.Serialization.FSharpTests.Map()", file="FSharpTests.cs"];
m1_29 [label="Assert.AreEqual(2, m2[''II''])", span="88-88", cluster="Newtonsoft.Json.Tests.Serialization.FSharpTests.Map()", file="FSharpTests.cs"];
m1_30 [label="Assert.AreEqual(3, m2[''3''])", span="89-89", cluster="Newtonsoft.Json.Tests.Serialization.FSharpTests.Map()", file="FSharpTests.cs"];
m1_31 [label="Exit Newtonsoft.Json.Tests.Serialization.FSharpTests.Map()", span="78-78", cluster="Newtonsoft.Json.Tests.Serialization.FSharpTests.Map()", file="FSharpTests.cs"];
m1_12 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="703-703", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="FSharpTests.cs"];
m1_9 [label="Entry Unk.OfSeq", span="", cluster="Unk.OfSeq", file="FSharpTests.cs"];
m1_8 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="FSharpTests.cs"];
m2_134 [label="Entry System.Array.Copy(System.Array, System.Array, int)", span="0-0", cluster="System.Array.Copy(System.Array, System.Array, int)", file="JavaScriptUtils.cs"];
m2_11 [label="Entry Newtonsoft.Json.Utilities.BufferUtils.EnsureBufferSize(Newtonsoft.Json.IArrayPool<char>, int, char[])", span="59-59", cluster="Newtonsoft.Json.Utilities.BufferUtils.EnsureBufferSize(Newtonsoft.Json.IArrayPool<char>, int, char[])", file="JavaScriptUtils.cs"];
m2_9 [label="Exit Newtonsoft.Json.Utilities.BufferUtils.ReturnBuffer(Newtonsoft.Json.IArrayPool<char>, char[])", span="54-54", cluster="Newtonsoft.Json.Utilities.BufferUtils.ReturnBuffer(Newtonsoft.Json.IArrayPool<char>, char[])", file="JavaScriptUtils.cs"];
m2_130 [label="Entry System.IO.TextWriter.Write(char[], int, int)", span="0-0", cluster="System.IO.TextWriter.Write(char[], int, int)", file="JavaScriptUtils.cs"];
m2_31 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="JavaScriptUtils.cs"];
m2_12 [label="bufferPool == null", span="61-61", cluster="Newtonsoft.Json.Utilities.BufferUtils.EnsureBufferSize(Newtonsoft.Json.IArrayPool<char>, int, char[])", file="JavaScriptUtils.cs"];
m2_13 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", span="516-516", cluster="Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", file="JavaScriptUtils.cs"];
m2_14 [label="Entry System.Console.WriteLine(int)", span="0-0", cluster="System.Console.WriteLine(int)", file="JavaScriptUtils.cs"];
m2_15 [label="bufferPool.Return(buffer)", span="68-68", cluster="Newtonsoft.Json.Utilities.BufferUtils.EnsureBufferSize(Newtonsoft.Json.IArrayPool<char>, int, char[])", file="JavaScriptUtils.cs"];
m2_16 [label="return bufferPool.Rent(size);", span="71-71", cluster="Newtonsoft.Json.Utilities.BufferUtils.EnsureBufferSize(Newtonsoft.Json.IArrayPool<char>, int, char[])", file="JavaScriptUtils.cs"];
m2_17 [label="Exit Newtonsoft.Json.Utilities.BufferUtils.EnsureBufferSize(Newtonsoft.Json.IArrayPool<char>, int, char[])", span="59-59", cluster="Newtonsoft.Json.Utilities.BufferUtils.EnsureBufferSize(Newtonsoft.Json.IArrayPool<char>, int, char[])", file="JavaScriptUtils.cs"];
m2_143 [label="Entry Newtonsoft.Json.Utilities.StringUtils.CreateStringWriter(int)", span="106-106", cluster="Newtonsoft.Json.Utilities.StringUtils.CreateStringWriter(int)", file="JavaScriptUtils.cs"];
m2_18 [label="Entry Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", span="83-83", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", file="JavaScriptUtils.cs"];
m2_20 [label="int i = 0", span="89-89", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", file="JavaScriptUtils.cs"];
m2_19 [label="IList<char> escapeChars = new List<char>\r\n            {\r\n                '\n', '\r', '\t', '\\', '\f', '\b',\r\n            }", span="85-88", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", file="JavaScriptUtils.cs"];
m2_21 [label="i < ' '", span="89-89", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", file="JavaScriptUtils.cs"];
m2_22 [label="escapeChars.Add((char)i)", span="91-91", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", file="JavaScriptUtils.cs"];
m2_23 [label="i++", span="89-89", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", file="JavaScriptUtils.cs"];
m2_24 [label="escapeChars.Union(new[] { '\'' })", span="94-94", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", file="JavaScriptUtils.cs"];
m2_26 [label="escapeChars.Union(new[] { '''' })", span="98-98", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", file="JavaScriptUtils.cs"];
m2_28 [label="escapeChars.Union(new[] { '''', '\'', '<', '>', '&' })", span="102-102", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", file="JavaScriptUtils.cs"];
m2_25 [label="SingleQuoteCharEscapeFlags[escapeChar] = true", span="96-96", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", file="JavaScriptUtils.cs"];
m2_27 [label="DoubleQuoteCharEscapeFlags[escapeChar] = true", span="100-100", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", file="JavaScriptUtils.cs"];
m2_29 [label="HtmlCharEscapeFlags[escapeChar] = true", span="104-104", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", file="JavaScriptUtils.cs"];
m2_30 [label="Exit Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", span="83-83", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", file="JavaScriptUtils.cs"];
m2_127 [label="Entry Newtonsoft.Json.Utilities.JavaScriptUtils.FirstCharToEscape(string, bool[], Newtonsoft.Json.StringEscapeHandling)", span="328-328", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.FirstCharToEscape(string, bool[], Newtonsoft.Json.StringEscapeHandling)", file="JavaScriptUtils.cs"];
m2_145 [label="int i = 0", span="330-330", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.FirstCharToEscape(string, bool[], Newtonsoft.Json.StringEscapeHandling)", file="JavaScriptUtils.cs"];
m2_146 [label="i != s.Length", span="330-330", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.FirstCharToEscape(string, bool[], Newtonsoft.Json.StringEscapeHandling)", file="JavaScriptUtils.cs"];
m2_147 [label="char c = s[i]", span="332-332", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.FirstCharToEscape(string, bool[], Newtonsoft.Json.StringEscapeHandling)", file="JavaScriptUtils.cs"];
m2_148 [label="c < charEscapeFlags.Length", span="334-334", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.FirstCharToEscape(string, bool[], Newtonsoft.Json.StringEscapeHandling)", file="JavaScriptUtils.cs"];
m2_149 [label="charEscapeFlags[c]", span="336-336", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.FirstCharToEscape(string, bool[], Newtonsoft.Json.StringEscapeHandling)", file="JavaScriptUtils.cs"];
m2_151 [label="stringEscapeHandling == StringEscapeHandling.EscapeNonAscii", span="341-341", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.FirstCharToEscape(string, bool[], Newtonsoft.Json.StringEscapeHandling)", file="JavaScriptUtils.cs"];
m2_159 [label="return -1;", span="357-357", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.FirstCharToEscape(string, bool[], Newtonsoft.Json.StringEscapeHandling)", file="JavaScriptUtils.cs"];
m2_150 [label="return i;", span="338-338", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.FirstCharToEscape(string, bool[], Newtonsoft.Json.StringEscapeHandling)", file="JavaScriptUtils.cs"];
m2_152 [label="return i;", span="343-343", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.FirstCharToEscape(string, bool[], Newtonsoft.Json.StringEscapeHandling)", file="JavaScriptUtils.cs"];
m2_157 [label="return i;", span="352-352", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.FirstCharToEscape(string, bool[], Newtonsoft.Json.StringEscapeHandling)", file="JavaScriptUtils.cs"];
m2_158 [label="i++", span="330-330", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.FirstCharToEscape(string, bool[], Newtonsoft.Json.StringEscapeHandling)", file="JavaScriptUtils.cs"];
m2_153 [label=c, span="347-347", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.FirstCharToEscape(string, bool[], Newtonsoft.Json.StringEscapeHandling)", file="JavaScriptUtils.cs"];
m2_156 [label="'\u2029'", span="351-351", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.FirstCharToEscape(string, bool[], Newtonsoft.Json.StringEscapeHandling)", file="JavaScriptUtils.cs"];
m2_154 [label="'\u0085'", span="349-349", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.FirstCharToEscape(string, bool[], Newtonsoft.Json.StringEscapeHandling)", file="JavaScriptUtils.cs"];
m2_155 [label="'\u2028'", span="350-350", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.FirstCharToEscape(string, bool[], Newtonsoft.Json.StringEscapeHandling)", file="JavaScriptUtils.cs"];
m2_160 [label="Exit Newtonsoft.Json.Utilities.JavaScriptUtils.FirstCharToEscape(string, bool[], Newtonsoft.Json.StringEscapeHandling)", span="328-328", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.FirstCharToEscape(string, bool[], Newtonsoft.Json.StringEscapeHandling)", file="JavaScriptUtils.cs"];
m2_132 [label="Entry string.Equals(string, string)", span="0-0", cluster="string.Equals(string, string)", file="JavaScriptUtils.cs"];
m2_133 [label="Entry System.Diagnostics.Debug.Assert(bool, string)", span="0-0", cluster="System.Diagnostics.Debug.Assert(bool, string)", file="JavaScriptUtils.cs"];
m2_34 [label="Entry Newtonsoft.Json.Utilities.JavaScriptUtils.GetCharEscapeFlags(Newtonsoft.Json.StringEscapeHandling, char)", span="110-110", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.GetCharEscapeFlags(Newtonsoft.Json.StringEscapeHandling, char)", file="JavaScriptUtils.cs"];
m2_35 [label="stringEscapeHandling == StringEscapeHandling.EscapeHtml", span="112-112", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.GetCharEscapeFlags(Newtonsoft.Json.StringEscapeHandling, char)", file="JavaScriptUtils.cs"];
m2_37 [label="quoteChar == ''''", span="117-117", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.GetCharEscapeFlags(Newtonsoft.Json.StringEscapeHandling, char)", file="JavaScriptUtils.cs"];
m2_36 [label="return HtmlCharEscapeFlags;", span="114-114", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.GetCharEscapeFlags(Newtonsoft.Json.StringEscapeHandling, char)", file="JavaScriptUtils.cs"];
m2_38 [label="return DoubleQuoteCharEscapeFlags;", span="119-119", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.GetCharEscapeFlags(Newtonsoft.Json.StringEscapeHandling, char)", file="JavaScriptUtils.cs"];
m2_39 [label="return SingleQuoteCharEscapeFlags;", span="122-122", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.GetCharEscapeFlags(Newtonsoft.Json.StringEscapeHandling, char)", file="JavaScriptUtils.cs"];
m2_40 [label="Exit Newtonsoft.Json.Utilities.JavaScriptUtils.GetCharEscapeFlags(Newtonsoft.Json.StringEscapeHandling, char)", span="110-110", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.GetCharEscapeFlags(Newtonsoft.Json.StringEscapeHandling, char)", file="JavaScriptUtils.cs"];
m2_33 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="1164-1164", cluster="System.Collections.Generic.IEnumerable<TSource>.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="JavaScriptUtils.cs"];
m2_6 [label="IList<Event> events = serializer.Deserialize<IList<Event>>(reader)", span="31-31", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Bson.DeserializeFromBsonCollection.Example()", file="JavaScriptUtils.cs"];
m2_0 [label="Entry Newtonsoft.Json.Tests.Documentation.Examples.Bson.DeserializeFromBsonCollection.Example()", span="19-19", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Bson.DeserializeFromBsonCollection.Example()", file="JavaScriptUtils.cs"];
m2_1 [label="byte[] data = Convert.FromBase64String(''awAAAAMwADAAAAACTmFtZQAOAAAATW92aWUgcHJlbWllcgAJU3RhcnREYXRlAMDgKWE8AQAAAAMxADAAAAACTmFtZQAOAAAATW92aWUgcHJlbWllcgAJU3RhcnREYXRlAMDgKWE8AQAAAAA='')", span="22-22", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Bson.DeserializeFromBsonCollection.Example()", file="JavaScriptUtils.cs"];
m2_2 [label="MemoryStream ms = new MemoryStream(data)", span="24-24", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Bson.DeserializeFromBsonCollection.Example()", file="JavaScriptUtils.cs"];
m2_3 [label="BsonReader reader = new BsonReader(ms)", span="25-25", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Bson.DeserializeFromBsonCollection.Example()", file="JavaScriptUtils.cs"];
m2_4 [label="reader.ReadRootValueAsArray = true", span="27-27", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Bson.DeserializeFromBsonCollection.Example()", file="JavaScriptUtils.cs"];
m2_5 [label="JsonSerializer serializer = new JsonSerializer()", span="29-29", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Bson.DeserializeFromBsonCollection.Example()", file="JavaScriptUtils.cs"];
m2_10 [label="Entry System.IO.MemoryStream.MemoryStream(byte[])", span="0-0", cluster="System.IO.MemoryStream.MemoryStream(byte[])", file="JavaScriptUtils.cs"];
m2_129 [label="Entry string.CopyTo(int, char[], int, int)", span="0-0", cluster="string.CopyTo(int, char[], int, int)", file="JavaScriptUtils.cs"];
m2_32 [label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="JavaScriptUtils.cs"];
m2_144 [label="Entry System.IO.StringWriter.ToString()", span="0-0", cluster="System.IO.StringWriter.ToString()", file="JavaScriptUtils.cs"];
m2_136 [label="Entry Newtonsoft.Json.Utilities.JavaScriptUtils.ToEscapedJavaScriptString(string, char, bool, Newtonsoft.Json.StringEscapeHandling)", span="316-316", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ToEscapedJavaScriptString(string, char, bool, Newtonsoft.Json.StringEscapeHandling)", file="JavaScriptUtils.cs"];
m2_140 [label="WriteEscapedJavaScriptString(w, value, delimiter, appendDelimiters, charEscapeFlags, stringEscapeHandling, null, ref buffer)", span="323-323", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ToEscapedJavaScriptString(string, char, bool, Newtonsoft.Json.StringEscapeHandling)", file="JavaScriptUtils.cs"];
m2_138 [label="StringWriter w = StringUtils.CreateStringWriter(value?.Length ?? 16)", span="320-320", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ToEscapedJavaScriptString(string, char, bool, Newtonsoft.Json.StringEscapeHandling)", file="JavaScriptUtils.cs"];
m2_137 [label="bool[] charEscapeFlags = GetCharEscapeFlags(stringEscapeHandling, delimiter)", span="318-318", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ToEscapedJavaScriptString(string, char, bool, Newtonsoft.Json.StringEscapeHandling)", file="JavaScriptUtils.cs"];
m2_139 [label="char[] buffer = null", span="322-322", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ToEscapedJavaScriptString(string, char, bool, Newtonsoft.Json.StringEscapeHandling)", file="JavaScriptUtils.cs"];
m2_141 [label="return w.ToString();", span="324-324", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ToEscapedJavaScriptString(string, char, bool, Newtonsoft.Json.StringEscapeHandling)", file="JavaScriptUtils.cs"];
m2_142 [label="Exit Newtonsoft.Json.Utilities.JavaScriptUtils.ToEscapedJavaScriptString(string, char, bool, Newtonsoft.Json.StringEscapeHandling)", span="316-316", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ToEscapedJavaScriptString(string, char, bool, Newtonsoft.Json.StringEscapeHandling)", file="JavaScriptUtils.cs"];
m2_7 [label="Entry Newtonsoft.Json.Utilities.BufferUtils.ReturnBuffer(Newtonsoft.Json.IArrayPool<char>, char[])", span="54-54", cluster="Newtonsoft.Json.Utilities.BufferUtils.ReturnBuffer(Newtonsoft.Json.IArrayPool<char>, char[])", file="JavaScriptUtils.cs"];
m2_8 [label="bufferPool?.Return(buffer)", span="56-56", cluster="Newtonsoft.Json.Utilities.BufferUtils.ReturnBuffer(Newtonsoft.Json.IArrayPool<char>, char[])", file="JavaScriptUtils.cs"];
m2_135 [label="Entry System.Diagnostics.Debug.Assert(bool)", span="0-0", cluster="System.Diagnostics.Debug.Assert(bool)", file="JavaScriptUtils.cs"];
m2_126 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="JavaScriptUtils.cs"];
m2_49 [label="Entry Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", span="143-143", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs"];
m2_104 [label="Debug.Assert(writeBuffer != null, ''Write buffer should never be null because it is set when the escaped unicode text is encountered.'')", span="265-265", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", color=green, community=0, file="JavaScriptUtils.cs"];
m2_58 [label="writeBuffer = BufferUtils.EnsureBufferSize(bufferPool, lastWritePosition, writeBuffer)", span="165-165", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs"];
m2_92 [label="writeBuffer = BufferUtils.EnsureBufferSize(bufferPool, UnicodeTextLength, writeBuffer)", span="229-229", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs"];
m2_103 [label=isEscapedUnicodeText, span="263-263", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs"];
m2_105 [label="Array.Copy(writeBuffer, newBuffer, UnicodeTextLength)", span="267-267", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs"];
m2_50 [label=appendDelimiters, span="147-147", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs"];
m2_51 [label="writer.Write(delimiter)", span="149-149", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs"];
m2_52 [label="!string.IsNullOrEmpty(s)", span="152-152", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs"];
m2_53 [label="int lastWritePosition = FirstCharToEscape(s, charEscapeFlags, stringEscapeHandling)", span="154-154", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs"];
m2_55 [label="writer.Write(s)", span="157-157", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs"];
m2_57 [label="writeBuffer == null || writeBuffer.Length < lastWritePosition", span="163-163", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs"];
m2_59 [label="s.CopyTo(0, writeBuffer, 0, lastWritePosition)", span="169-169", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs"];
m2_60 [label="writer.Write(writeBuffer, 0, lastWritePosition)", span="170-170", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs"];
m2_63 [label="i < s.Length", span="174-174", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs"];
m2_64 [label="char c = s[i]", span="176-176", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs"];
m2_65 [label="c < charEscapeFlags.Length && !charEscapeFlags[c]", span="178-178", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs"];
m2_86 [label="c < charEscapeFlags.Length || stringEscapeHandling == StringEscapeHandling.EscapeNonAscii", span="215-215", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs"];
m2_87 [label="c == '\'' && stringEscapeHandling != StringEscapeHandling.EscapeHtml", span="217-217", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs"];
m2_89 [label="c == '''' && stringEscapeHandling != StringEscapeHandling.EscapeHtml", span="221-221", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs"];
m2_91 [label="writeBuffer == null || writeBuffer.Length < UnicodeTextLength", span="227-227", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs"];
m2_93 [label="StringUtils.ToCharAsUnicode(c, writeBuffer)", span="232-232", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs"];
m2_101 [label="writeBuffer == null || writeBuffer.Length < length", span="257-257", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs"];
m2_102 [label="char[] newBuffer = BufferUtils.RentBuffer(bufferPool, length)", span="259-259", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs"];
m2_106 [label="BufferUtils.ReturnBuffer(bufferPool, writeBuffer)", span="270-270", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs"];
m2_108 [label="s.CopyTo(lastWritePosition, writeBuffer, start, length - start)", span="275-275", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs"];
m2_109 [label="writer.Write(writeBuffer, start, length - start)", span="278-278", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs"];
m2_112 [label="writer.Write(escapedValue)", span="284-284", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs"];
m2_113 [label="writer.Write(writeBuffer, 0, UnicodeTextLength)", span="288-288", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs"];
m2_116 [label="length = s.Length - lastWritePosition", span="293-293", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs"];
m2_118 [label="writeBuffer == null || writeBuffer.Length < length", span="296-296", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs"];
m2_119 [label="writeBuffer = BufferUtils.EnsureBufferSize(bufferPool, length, writeBuffer)", span="298-298", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs"];
m2_120 [label="s.CopyTo(lastWritePosition, writeBuffer, 0, length)", span="301-301", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs"];
m2_121 [label="writer.Write(writeBuffer, 0, length)", span="304-304", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs"];
m2_122 [label=appendDelimiters, span="310-310", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs"];
m2_123 [label="writer.Write(delimiter)", span="312-312", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs"];
m2_97 [label="bool isEscapedUnicodeText = string.Equals(escapedValue, EscapedUnicodeText)", span="250-250", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs"];
m2_107 [label="writeBuffer = newBuffer", span="272-272", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs"];
m2_54 [label="lastWritePosition == -1", span="155-155", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs"];
m2_56 [label="lastWritePosition != 0", span="161-161", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs"];
m2_62 [label="int i = lastWritePosition", span="174-174", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs"];
m2_98 [label="i > lastWritePosition", span="252-252", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs"];
m2_99 [label="length = i - lastWritePosition + ((isEscapedUnicodeText) ? UnicodeTextLength : 0)", span="254-254", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs"];
m2_115 [label="Debug.Assert(lastWritePosition != 0)", span="292-292", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs"];
m2_61 [label="int length", span="173-173", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs"];
m2_114 [label="i++", span="174-174", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs"];
m2_96 [label="escapedValue == null", span="245-245", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs"];
m2_67 [label=c, span="185-185", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs"];
m2_66 [label="string escapedValue", span="183-183", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs"];
m2_95 [label="escapedValue = null", span="240-240", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs"];
m2_88 [label="escapedValue = @''\'''", span="219-219", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs"];
m2_90 [label="escapedValue = @''\''''''", span="223-223", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs"];
m2_94 [label="escapedValue = EscapedUnicodeText", span="235-235", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs"];
m2_100 [label="int start = (isEscapedUnicodeText) ? UnicodeTextLength : 0", span="255-255", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs"];
m2_110 [label="lastWritePosition = i + 1", span="281-281", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs"];
m2_111 [label="!isEscapedUnicodeText", span="282-282", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs"];
m2_117 [label="length > 0", span="294-294", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs"];
m2_69 [label="escapedValue = @''\t''", span="188-188", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs"];
m2_71 [label="escapedValue = @''\n''", span="191-191", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs"];
m2_73 [label="escapedValue = @''\r''", span="194-194", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs"];
m2_75 [label="escapedValue = @''\f''", span="197-197", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs"];
m2_77 [label="escapedValue = @''\b''", span="200-200", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs"];
m2_79 [label="escapedValue = @''\\''", span="203-203", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs"];
m2_81 [label="escapedValue = @''\u0085''", span="206-206", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs"];
m2_83 [label="escapedValue = @''\u2028''", span="209-209", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs"];
m2_85 [label="escapedValue = @''\u2029''", span="212-212", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs"];
m2_68 [label="'\t'", span="187-187", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs"];
m2_70 [label="'\n'", span="190-190", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs"];
m2_72 [label="'\r'", span="193-193", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs"];
m2_74 [label="'\f'", span="196-196", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs"];
m2_76 [label="'\b'", span="199-199", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs"];
m2_78 [label="'\\'", span="202-202", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs"];
m2_80 [label="'\u0085'", span="205-205", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs"];
m2_82 [label="'\u2028'", span="208-208", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs"];
m2_84 [label="'\u2029'", span="211-211", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs"];
m2_124 [label="Exit Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", span="143-143", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs"];
m2_131 [label="Entry Newtonsoft.Json.Utilities.StringUtils.ToCharAsUnicode(char, char[])", span="114-114", cluster="Newtonsoft.Json.Utilities.StringUtils.ToCharAsUnicode(char, char[])", file="JavaScriptUtils.cs"];
m2_128 [label="Entry System.IO.TextWriter.Write(string)", span="0-0", cluster="System.IO.TextWriter.Write(string)", file="JavaScriptUtils.cs"];
m2_125 [label="Entry System.IO.TextWriter.Write(char)", span="0-0", cluster="System.IO.TextWriter.Write(char)", file="JavaScriptUtils.cs"];
m9_10 [label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="245-245", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="Shape.cs"];
m9_8 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="710-710", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="Shape.cs"];
m9_0 [label="Entry Newtonsoft.Json.Tests.Documentation.Examples.Serializer.NullValueHandlingIgnore.Example()", span="19-19", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.NullValueHandlingIgnore.Example()", file="Shape.cs"];
m9_1 [label="Person person = new Person\r\n        {\r\n          Name = ''Nigal Newborn'',\r\n          Age = 1\r\n        }", span="22-26", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.NullValueHandlingIgnore.Example()", color=red, community=0, file="Shape.cs"];
m9_2 [label="string jsonIncludeNullValues = JsonConvert.SerializeObject(person, Formatting.Indented)", span="28-28", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.NullValueHandlingIgnore.Example()", file="Shape.cs"];
m9_4 [label="string jsonIgnoreNullValues = JsonConvert.SerializeObject(person, Formatting.Indented, new JsonSerializerSettings\r\n        {\r\n          NullValueHandling = NullValueHandling.Ignore\r\n        })", span="38-41", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.NullValueHandlingIgnore.Example()", file="Shape.cs"];
m9_3 [label="Console.WriteLine(jsonIncludeNullValues)", span="30-30", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.NullValueHandlingIgnore.Example()", file="Shape.cs"];
m9_5 [label="Console.WriteLine(jsonIgnoreNullValues)", span="43-43", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.NullValueHandlingIgnore.Example()", file="Shape.cs"];
m9_6 [label="Exit Newtonsoft.Json.Tests.Documentation.Examples.Serializer.NullValueHandlingIgnore.Example()", span="19-19", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.NullValueHandlingIgnore.Example()", file="Shape.cs"];
m9_11 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="766-766", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="Shape.cs"];
m9_7 [label="Entry Newtonsoft.Json.Tests.Documentation.Examples.Serializer.NullValueHandlingIgnore.Person.Person()", span="10-10", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.NullValueHandlingIgnore.Person.Person()", file="Shape.cs"];
m9_9 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="Shape.cs"];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_8  [key=2, style=dotted];
m1_1 -> m1_9  [key=2, style=dotted];
m1_1 -> m1_5  [key=1, style=dashed, color=darkseagreen4, label=l];
m1_1 -> m1_6  [key=1, style=dashed, color=darkseagreen4, label=l];
m1_2 -> m1_3  [key=0, style=solid];
m1_2 -> m1_10  [key=2, style=dotted];
m1_2 -> m1_4  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_5 -> m1_6  [key=0, style=solid];
m1_5 -> m1_13  [key=2, style=dotted];
m1_6 -> m1_7  [key=0, style=solid];
m1_6 -> m1_14  [key=2, style=dotted];
m1_3 -> m1_4  [key=0, style=solid];
m1_3 -> m1_11  [key=2, style=dotted];
m1_4 -> m1_5  [key=0, style=solid];
m1_4 -> m1_12  [key=2, style=dotted];
m1_4 -> m1_6  [key=1, style=dashed, color=darkseagreen4, label=l2];
m1_7 -> m1_0  [key=0, style=bold, color=blue];
m1_15 -> m1_16  [key=0, style=solid];
m1_16 -> m1_17  [key=0, style=solid];
m1_16 -> m1_8  [key=2, style=dotted];
m1_16 -> m1_9  [key=2, style=dotted];
m1_16 -> m1_20  [key=1, style=dashed, color=darkseagreen4, label=l];
m1_16 -> m1_21  [key=1, style=dashed, color=darkseagreen4, label=l];
m1_17 -> m1_18  [key=0, style=solid];
m1_17 -> m1_10  [key=2, style=dotted];
m1_17 -> m1_19  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_20 -> m1_21  [key=0, style=solid];
m1_20 -> m1_13  [key=2, style=dotted];
m1_21 -> m1_22  [key=0, style=solid];
m1_21 -> m1_14  [key=2, style=dotted];
m1_18 -> m1_19  [key=0, style=solid];
m1_18 -> m1_11  [key=2, style=dotted];
m1_19 -> m1_20  [key=0, style=solid];
m1_19 -> m1_12  [key=2, style=dotted];
m1_19 -> m1_21  [key=1, style=dashed, color=darkseagreen4, label=l2];
m1_22 -> m1_15  [key=0, style=bold, color=blue];
m1_23 -> m1_24  [key=0, style=solid];
m1_24 -> m1_25  [key=0, style=solid];
m1_24 -> m1_8  [key=2, style=dotted];
m1_24 -> m1_32  [key=2, style=dotted];
m1_24 -> m1_9  [key=2, style=dotted];
m1_24 -> m1_27  [key=1, style=dashed, color=darkseagreen4, label=m1];
m1_25 -> m1_26  [key=0, style=solid];
m1_25 -> m1_10  [key=2, style=dotted];
m1_27 -> m1_28  [key=0, style=solid];
m1_27 -> m1_13  [key=2, style=dotted];
m1_26 -> m1_27  [key=0, style=solid];
m1_26 -> m1_12  [key=2, style=dotted];
m1_26 -> m1_28  [key=1, style=dashed, color=darkseagreen4, label=m2];
m1_26 -> m1_29  [key=1, style=dashed, color=darkseagreen4, label=m2];
m1_26 -> m1_30  [key=1, style=dashed, color=darkseagreen4, label=m2];
m1_28 -> m1_29  [key=0, style=solid];
m1_28 -> m1_13  [key=2, style=dotted];
m1_29 -> m1_30  [key=0, style=solid];
m1_29 -> m1_13  [key=2, style=dotted];
m1_30 -> m1_31  [key=0, style=solid];
m1_30 -> m1_13  [key=2, style=dotted];
m1_31 -> m1_23  [key=0, style=bold, color=blue];
m2_11 -> m2_53  [key=3, color=darkorchid, style=bold, label="Parameter variable int size"];
m2_11 -> m2_12  [key=0, style=solid];
m2_11 -> m2_13  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_11 -> m2_14  [key=1, style=dashed, color=darkseagreen4, label="char[]"];
m2_11 -> m2_15  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.IArrayPool<char>"];
m2_11 -> m2_16  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.IArrayPool<char>"];
m2_11 -> m2_61  [key=3, color=darkorchid, style=bold, label="Parameter variable int size"];
m2_9 -> m2_7  [key=0, style=bold, color=blue];
m2_12 -> m2_13  [key=0, style=solid];
m2_12 -> m2_14  [key=0, style=solid];
m2_13 -> m2_17  [key=0, style=solid];
m2_14 -> m2_15  [key=0, style=solid];
m2_14 -> m2_16  [key=0, style=solid];
m2_15 -> m2_16  [key=0, style=solid];
m2_15 -> m2_10  [key=2, style=dotted];
m2_16 -> m2_17  [key=0, style=solid];
m2_16 -> m2_6  [key=2, style=dotted];
m2_17 -> m2_11  [key=0, style=bold, color=blue];
m2_18 -> m2_19  [key=0, style=solid];
m2_20 -> m2_20  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m2_20 -> m2_21  [key=0, style=solid];
m2_20 -> m2_22  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_20 -> m2_23  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_19 -> m2_20  [key=0, style=solid];
m2_19 -> m2_31  [key=2, style=dotted];
m2_19 -> m2_22  [key=1, style=dashed, color=darkseagreen4, label=escapeChars];
m2_19 -> m2_24  [key=1, style=dashed, color=darkseagreen4, label=escapeChars];
m2_19 -> m2_26  [key=1, style=dashed, color=darkseagreen4, label=escapeChars];
m2_19 -> m2_28  [key=1, style=dashed, color=darkseagreen4, label=escapeChars];
m2_21 -> m2_22  [key=0, style=solid];
m2_21 -> m2_24  [key=0, style=solid];
m2_22 -> m2_23  [key=0, style=solid];
m2_22 -> m2_32  [key=2, style=dotted];
m2_23 -> m2_21  [key=0, style=solid];
m2_23 -> m2_23  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_24 -> m2_25  [key=0, style=solid];
m2_24 -> m2_26  [key=0, style=solid];
m2_24 -> m2_33  [key=2, style=dotted];
m2_26 -> m2_27  [key=0, style=solid];
m2_26 -> m2_28  [key=0, style=solid];
m2_26 -> m2_33  [key=2, style=dotted];
m2_28 -> m2_29  [key=0, style=solid];
m2_28 -> m2_30  [key=0, style=solid];
m2_28 -> m2_33  [key=2, style=dotted];
m2_25 -> m2_24  [key=0, style=solid];
m2_27 -> m2_26  [key=0, style=solid];
m2_29 -> m2_28  [key=0, style=solid];
m2_30 -> m2_18  [key=0, style=bold, color=blue];
m2_127 -> m2_49  [key=3, color=darkorchid, style=bold, label="Parameter variable string s"];
m2_127 -> m2_145  [key=0, style=solid];
m2_127 -> m2_146  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_127 -> m2_147  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_127 -> m2_148  [key=1, style=dashed, color=darkseagreen4, label="bool[]"];
m2_127 -> m2_149  [key=1, style=dashed, color=darkseagreen4, label="bool[]"];
m2_127 -> m2_151  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.StringEscapeHandling"];
m2_127 -> m2_159  [key=3, color=darkorchid, style=bold, label="method methodReturn int FirstCharToEscape"];
m2_145 -> m2_146  [key=0, style=solid];
m2_145 -> m2_147  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_145 -> m2_150  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_145 -> m2_152  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_145 -> m2_157  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_145 -> m2_158  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_145 -> m2_20  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m2_146 -> m2_147  [key=0, style=solid];
m2_146 -> m2_159  [key=0, style=solid];
m2_147 -> m2_148  [key=0, style=solid];
m2_147 -> m2_149  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_147 -> m2_153  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_148 -> m2_149  [key=0, style=solid];
m2_148 -> m2_151  [key=0, style=solid];
m2_149 -> m2_150  [key=0, style=solid];
m2_149 -> m2_158  [key=0, style=solid];
m2_151 -> m2_152  [key=0, style=solid];
m2_151 -> m2_153  [key=0, style=solid];
m2_159 -> m2_160  [key=0, style=solid];
m2_150 -> m2_160  [key=0, style=solid];
m2_152 -> m2_160  [key=0, style=solid];
m2_157 -> m2_160  [key=0, style=solid];
m2_158 -> m2_146  [key=0, style=solid];
m2_158 -> m2_158  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_153 -> m2_154  [key=0, style=solid];
m2_156 -> m2_157  [key=0, style=solid];
m2_154 -> m2_155  [key=0, style=solid];
m2_155 -> m2_156  [key=0, style=solid];
m2_160 -> m2_127  [key=0, style=bold, color=blue];
m2_34 -> m2_136  [key=3, color=darkorchid, style=bold, label="Parameter variable char quoteChar"];
m2_34 -> m2_35  [key=0, style=solid];
m2_34 -> m2_37  [key=1, style=dashed, color=darkseagreen4, label=char];
m2_35 -> m2_36  [key=0, style=solid];
m2_35 -> m2_37  [key=0, style=solid];
m2_37 -> m2_38  [key=0, style=solid];
m2_37 -> m2_39  [key=0, style=solid];
m2_36 -> m2_40  [key=0, style=solid];
m2_38 -> m2_40  [key=0, style=solid];
m2_39 -> m2_40  [key=0, style=solid];
m2_40 -> m2_34  [key=0, style=bold, color=blue];
m2_6 -> m2_7  [key=0, style=solid];
m2_6 -> m2_13  [key=2, style=dotted];
m2_0 -> m2_61  [key=3, color=darkorchid, style=bold, label="Parameter variable int minSize"];
m2_0 -> m2_1  [key=0, style=solid];
m2_0 -> m2_2  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_0 -> m2_3  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.IArrayPool<char>"];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_3  [key=0, style=solid];
m2_1 -> m2_9  [key=2, style=dotted];
m2_2 -> m2_5  [key=0, style=solid];
m2_2 -> m2_3  [key=0, style=solid];
m2_2 -> m2_10  [key=2, style=dotted];
m2_3 -> m2_4  [key=0, style=solid];
m2_3 -> m2_6  [key=2, style=dotted];
m2_3 -> m2_11  [key=2, style=dotted];
m2_4 -> m2_5  [key=0, style=solid];
m2_5 -> m2_0  [key=0, style=bold, color=blue];
m2_5 -> m2_6  [key=0, style=solid];
m2_5 -> m2_12  [key=2, style=dotted];
m2_136 -> m2_140  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_136 -> m2_138  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_136 -> m2_137  [key=0, style=solid];
m2_140 -> m2_49  [key=2, style=dotted];
m2_140 -> m2_140  [key=1, style=dashed, color=darkseagreen4, label=buffer];
m2_140 -> m2_141  [key=0, style=solid];
m2_138 -> m2_140  [key=1, style=dashed, color=darkseagreen4, label=w];
m2_138 -> m2_139  [key=0, style=solid];
m2_138 -> m2_143  [key=2, style=dotted];
m2_138 -> m2_141  [key=1, style=dashed, color=darkseagreen4, label=w];
m2_137 -> m2_140  [key=1, style=dashed, color=darkseagreen4, label=charEscapeFlags];
m2_137 -> m2_138  [key=0, style=solid];
m2_137 -> m2_34  [key=2, style=dotted];
m2_139 -> m2_140  [key=0, style=solid];
m2_139 -> m2_139  [key=3, color=darkorchid, style=bold, label="Local variable char[] buffer"];
m2_141 -> m2_142  [key=0, style=solid];
m2_141 -> m2_144  [key=2, style=dotted];
m2_142 -> m2_136  [key=0, style=bold, color=blue];
m2_7 -> m2_8  [key=0, style=solid];
m2_7 -> m2_14  [key=2, style=dotted];
m2_8 -> m2_0  [key=0, style=bold, color=blue];
m2_8 -> m2_9  [key=0, style=solid];
m2_8 -> m2_10  [key=2, style=dotted];
m2_49 -> m2_104  [key=1, style=dashed, color=green, label="ref char[]"];
m2_49 -> m2_50  [key=0, style=solid];
m2_49 -> m2_51  [key=1, style=dashed, color=darkseagreen4, label="System.IO.TextWriter"];
m2_49 -> m2_52  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_49 -> m2_53  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_49 -> m2_55  [key=1, style=dashed, color=darkseagreen4, label="System.IO.TextWriter"];
m2_49 -> m2_57  [key=1, style=dashed, color=darkseagreen4, label="ref char[]"];
m2_49 -> m2_58  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.IArrayPool<char>"];
m2_49 -> m2_59  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_49 -> m2_60  [key=1, style=dashed, color=darkseagreen4, label="System.IO.TextWriter"];
m2_49 -> m2_63  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_49 -> m2_64  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_49 -> m2_65  [key=1, style=dashed, color=darkseagreen4, label="bool[]"];
m2_49 -> m2_86  [key=1, style=dashed, color=darkseagreen4, label="bool[]"];
m2_49 -> m2_87  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.StringEscapeHandling"];
m2_49 -> m2_89  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.StringEscapeHandling"];
m2_49 -> m2_91  [key=1, style=dashed, color=darkseagreen4, label="ref char[]"];
m2_49 -> m2_92  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.IArrayPool<char>"];
m2_49 -> m2_93  [key=1, style=dashed, color=darkseagreen4, label="ref char[]"];
m2_49 -> m2_101  [key=1, style=dashed, color=darkseagreen4, label="ref char[]"];
m2_49 -> m2_102  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.IArrayPool<char>"];
m2_49 -> m2_105  [key=1, style=dashed, color=darkseagreen4, label="ref char[]"];
m2_49 -> m2_106  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.IArrayPool<char>"];
m2_49 -> m2_108  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_49 -> m2_109  [key=1, style=dashed, color=darkseagreen4, label="System.IO.TextWriter"];
m2_49 -> m2_112  [key=1, style=dashed, color=darkseagreen4, label="System.IO.TextWriter"];
m2_49 -> m2_113  [key=1, style=dashed, color=darkseagreen4, label="System.IO.TextWriter"];
m2_49 -> m2_116  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_49 -> m2_118  [key=1, style=dashed, color=darkseagreen4, label="ref char[]"];
m2_49 -> m2_119  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.IArrayPool<char>"];
m2_49 -> m2_120  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_49 -> m2_121  [key=1, style=dashed, color=darkseagreen4, label="System.IO.TextWriter"];
m2_49 -> m2_122  [key=1, style=dashed, color=darkseagreen4, label=bool];
m2_49 -> m2_123  [key=1, style=dashed, color=darkseagreen4, label="System.IO.TextWriter"];
m2_49 -> m2_124  [key=1, style=dashed, color=darkseagreen4, label="ref char[]"];
m2_49 -> m2_138  [key=3, color=darkorchid, style=bold, label="Parameter variable System.IO.TextWriter writer"];
m2_49 -> m2_136  [key=3, color=darkorchid, style=bold, label="Parameter variable bool appendDelimiters"];
m2_104 -> m2_105  [key=0, style=solid, color=green];
m2_104 -> m2_133  [key=2, style=dotted, color=green];
m2_58 -> m2_104  [key=1, style=dashed, color=green, label="ref char[]"];
m2_58 -> m2_58  [key=1, style=dashed, color=darkseagreen4, label="ref char[]"];
m2_58 -> m2_59  [key=0, style=solid];
m2_58 -> m2_11  [key=2, style=dotted];
m2_58 -> m2_60  [key=1, style=dashed, color=darkseagreen4, label="ref char[]"];
m2_58 -> m2_91  [key=1, style=dashed, color=darkseagreen4, label="ref char[]"];
m2_58 -> m2_92  [key=1, style=dashed, color=darkseagreen4, label="ref char[]"];
m2_58 -> m2_93  [key=1, style=dashed, color=darkseagreen4, label="ref char[]"];
m2_58 -> m2_101  [key=1, style=dashed, color=darkseagreen4, label="ref char[]"];
m2_58 -> m2_105  [key=1, style=dashed, color=darkseagreen4, label="ref char[]"];
m2_58 -> m2_106  [key=1, style=dashed, color=darkseagreen4, label="ref char[]"];
m2_58 -> m2_108  [key=1, style=dashed, color=darkseagreen4, label="ref char[]"];
m2_58 -> m2_109  [key=1, style=dashed, color=darkseagreen4, label="ref char[]"];
m2_58 -> m2_113  [key=1, style=dashed, color=darkseagreen4, label="ref char[]"];
m2_58 -> m2_118  [key=1, style=dashed, color=darkseagreen4, label="ref char[]"];
m2_58 -> m2_119  [key=1, style=dashed, color=darkseagreen4, label="ref char[]"];
m2_58 -> m2_120  [key=1, style=dashed, color=darkseagreen4, label="ref char[]"];
m2_58 -> m2_121  [key=1, style=dashed, color=darkseagreen4, label="ref char[]"];
m2_58 -> m2_124  [key=1, style=dashed, color=darkseagreen4, label="ref char[]"];
m2_92 -> m2_104  [key=1, style=dashed, color=green, label="ref char[]"];
m2_92 -> m2_92  [key=1, style=dashed, color=darkseagreen4, label="ref char[]"];
m2_92 -> m2_93  [key=0, style=solid];
m2_92 -> m2_11  [key=2, style=dotted];
m2_92 -> m2_101  [key=1, style=dashed, color=darkseagreen4, label="ref char[]"];
m2_92 -> m2_105  [key=1, style=dashed, color=darkseagreen4, label="ref char[]"];
m2_92 -> m2_106  [key=1, style=dashed, color=darkseagreen4, label="ref char[]"];
m2_92 -> m2_108  [key=1, style=dashed, color=darkseagreen4, label="ref char[]"];
m2_92 -> m2_109  [key=1, style=dashed, color=darkseagreen4, label="ref char[]"];
m2_92 -> m2_113  [key=1, style=dashed, color=darkseagreen4, label="ref char[]"];
m2_92 -> m2_118  [key=1, style=dashed, color=darkseagreen4, label="ref char[]"];
m2_92 -> m2_119  [key=1, style=dashed, color=darkseagreen4, label="ref char[]"];
m2_92 -> m2_120  [key=1, style=dashed, color=darkseagreen4, label="ref char[]"];
m2_92 -> m2_121  [key=1, style=dashed, color=darkseagreen4, label="ref char[]"];
m2_92 -> m2_124  [key=1, style=dashed, color=darkseagreen4, label="ref char[]"];
m2_103 -> m2_104  [key=0, style=solid, color=green];
m2_103 -> m2_106  [key=0, style=solid];
m2_105 -> m2_106  [key=0, style=solid];
m2_105 -> m2_134  [key=2, style=dotted];
m2_50 -> m2_51  [key=0, style=solid];
m2_50 -> m2_52  [key=0, style=solid];
m2_51 -> m2_52  [key=0, style=solid];
m2_51 -> m2_125  [key=2, style=dotted];
m2_52 -> m2_53  [key=0, style=solid];
m2_52 -> m2_122  [key=0, style=solid];
m2_52 -> m2_126  [key=2, style=dotted];
m2_53 -> m2_58  [key=1, style=dashed, color=darkseagreen4, label=lastWritePosition];
m2_53 -> m2_127  [key=2, style=dotted];
m2_53 -> m2_54  [key=0, style=solid];
m2_53 -> m2_56  [key=1, style=dashed, color=darkseagreen4, label=lastWritePosition];
m2_53 -> m2_57  [key=1, style=dashed, color=darkseagreen4, label=lastWritePosition];
m2_53 -> m2_59  [key=1, style=dashed, color=darkseagreen4, label=lastWritePosition];
m2_53 -> m2_60  [key=1, style=dashed, color=darkseagreen4, label=lastWritePosition];
m2_53 -> m2_62  [key=1, style=dashed, color=darkseagreen4, label=lastWritePosition];
m2_53 -> m2_98  [key=1, style=dashed, color=darkseagreen4, label=lastWritePosition];
m2_53 -> m2_99  [key=1, style=dashed, color=darkseagreen4, label=lastWritePosition];
m2_53 -> m2_108  [key=1, style=dashed, color=darkseagreen4, label=lastWritePosition];
m2_53 -> m2_115  [key=1, style=dashed, color=darkseagreen4, label=lastWritePosition];
m2_53 -> m2_116  [key=1, style=dashed, color=darkseagreen4, label=lastWritePosition];
m2_53 -> m2_120  [key=1, style=dashed, color=darkseagreen4, label=lastWritePosition];
m2_55 -> m2_122  [key=0, style=solid];
m2_55 -> m2_128  [key=2, style=dotted];
m2_57 -> m2_58  [key=0, style=solid];
m2_57 -> m2_59  [key=0, style=solid];
m2_59 -> m2_60  [key=0, style=solid];
m2_59 -> m2_129  [key=2, style=dotted];
m2_60 -> m2_61  [key=0, style=solid];
m2_60 -> m2_130  [key=2, style=dotted];
m2_63 -> m2_53  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m2_63 -> m2_64  [key=0, style=solid];
m2_63 -> m2_115  [key=0, style=solid];
m2_64 -> m2_65  [key=0, style=solid];
m2_64 -> m2_67  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_64 -> m2_86  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_64 -> m2_87  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_64 -> m2_89  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_64 -> m2_93  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_65 -> m2_63  [key=0, style=solid];
m2_65 -> m2_66  [key=0, style=solid];
m2_86 -> m2_87  [key=0, style=solid];
m2_86 -> m2_95  [key=0, style=solid];
m2_87 -> m2_88  [key=0, style=solid];
m2_87 -> m2_89  [key=0, style=solid];
m2_89 -> m2_90  [key=0, style=solid];
m2_89 -> m2_91  [key=0, style=solid];
m2_91 -> m2_92  [key=0, style=solid];
m2_91 -> m2_93  [key=0, style=solid];
m2_93 -> m2_94  [key=0, style=solid];
m2_93 -> m2_131  [key=2, style=dotted];
m2_101 -> m2_102  [key=0, style=solid];
m2_101 -> m2_108  [key=0, style=solid];
m2_102 -> m2_103  [key=0, style=solid];
m2_102 -> m2_105  [key=1, style=dashed, color=darkseagreen4, label=newBuffer];
m2_102 -> m2_0  [key=2, style=dotted];
m2_102 -> m2_107  [key=1, style=dashed, color=darkseagreen4, label=newBuffer];
m2_106 -> m2_107  [key=0, style=solid];
m2_106 -> m2_7  [key=2, style=dotted];
m2_108 -> m2_109  [key=0, style=solid];
m2_108 -> m2_129  [key=2, style=dotted];
m2_109 -> m2_110  [key=0, style=solid];
m2_109 -> m2_130  [key=2, style=dotted];
m2_112 -> m2_114  [key=0, style=solid];
m2_112 -> m2_128  [key=2, style=dotted];
m2_113 -> m2_114  [key=0, style=solid];
m2_113 -> m2_130  [key=2, style=dotted];
m2_116 -> m2_117  [key=0, style=solid];
m2_116 -> m2_118  [key=1, style=dashed, color=darkseagreen4, label=length];
m2_116 -> m2_119  [key=1, style=dashed, color=darkseagreen4, label=length];
m2_116 -> m2_120  [key=1, style=dashed, color=darkseagreen4, label=length];
m2_116 -> m2_121  [key=1, style=dashed, color=darkseagreen4, label=length];
m2_118 -> m2_119  [key=0, style=solid];
m2_118 -> m2_120  [key=0, style=solid];
m2_119 -> m2_124  [key=1, style=dashed, color=darkseagreen4, label="ref char[]"];
m2_119 -> m2_119  [key=1, style=dashed, color=darkseagreen4, label="ref char[]"];
m2_119 -> m2_120  [key=0, style=solid];
m2_119 -> m2_11  [key=2, style=dotted];
m2_119 -> m2_121  [key=1, style=dashed, color=darkseagreen4, label="ref char[]"];
m2_120 -> m2_121  [key=0, style=solid];
m2_120 -> m2_129  [key=2, style=dotted];
m2_121 -> m2_122  [key=0, style=solid];
m2_121 -> m2_130  [key=2, style=dotted];
m2_122 -> m2_124  [key=0, style=solid];
m2_122 -> m2_123  [key=0, style=solid];
m2_123 -> m2_124  [key=0, style=solid];
m2_123 -> m2_125  [key=2, style=dotted];
m2_97 -> m2_103  [key=1, style=dashed, color=darkseagreen4, label=isEscapedUnicodeText];
m2_97 -> m2_98  [key=0, style=solid];
m2_97 -> m2_132  [key=2, style=dotted];
m2_97 -> m2_99  [key=1, style=dashed, color=darkseagreen4, label=isEscapedUnicodeText];
m2_97 -> m2_100  [key=1, style=dashed, color=darkseagreen4, label=isEscapedUnicodeText];
m2_97 -> m2_111  [key=1, style=dashed, color=darkseagreen4, label=isEscapedUnicodeText];
m2_107 -> m2_124  [key=1, style=dashed, color=darkseagreen4, label="ref char[]"];
m2_107 -> m2_108  [key=0, style=solid];
m2_107 -> m2_109  [key=1, style=dashed, color=darkseagreen4, label="ref char[]"];
m2_107 -> m2_113  [key=1, style=dashed, color=darkseagreen4, label="ref char[]"];
m2_107 -> m2_118  [key=1, style=dashed, color=darkseagreen4, label="ref char[]"];
m2_107 -> m2_119  [key=1, style=dashed, color=darkseagreen4, label="ref char[]"];
m2_107 -> m2_120  [key=1, style=dashed, color=darkseagreen4, label="ref char[]"];
m2_107 -> m2_121  [key=1, style=dashed, color=darkseagreen4, label="ref char[]"];
m2_54 -> m2_55  [key=0, style=solid];
m2_54 -> m2_56  [key=0, style=solid];
m2_56 -> m2_57  [key=0, style=solid];
m2_56 -> m2_61  [key=0, style=solid];
m2_62 -> m2_63  [key=0, style=solid];
m2_62 -> m2_64  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_62 -> m2_98  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_62 -> m2_99  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_62 -> m2_110  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_62 -> m2_114  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_98 -> m2_99  [key=0, style=solid];
m2_98 -> m2_110  [key=0, style=solid];
m2_99 -> m2_101  [key=1, style=dashed, color=darkseagreen4, label=length];
m2_99 -> m2_102  [key=1, style=dashed, color=darkseagreen4, label=length];
m2_99 -> m2_108  [key=1, style=dashed, color=darkseagreen4, label=length];
m2_99 -> m2_109  [key=1, style=dashed, color=darkseagreen4, label=length];
m2_99 -> m2_100  [key=0, style=solid];
m2_115 -> m2_116  [key=0, style=solid];
m2_115 -> m2_135  [key=2, style=dotted];
m2_61 -> m2_62  [key=0, style=solid];
m2_114 -> m2_63  [key=0, style=solid];
m2_114 -> m2_114  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_96 -> m2_63  [key=0, style=solid];
m2_96 -> m2_97  [key=0, style=solid];
m2_67 -> m2_86  [key=0, style=solid];
m2_67 -> m2_68  [key=0, style=solid];
m2_67 -> m2_70  [key=0, style=solid];
m2_67 -> m2_72  [key=0, style=solid];
m2_67 -> m2_74  [key=0, style=solid];
m2_67 -> m2_76  [key=0, style=solid];
m2_67 -> m2_78  [key=0, style=solid];
m2_67 -> m2_80  [key=0, style=solid];
m2_67 -> m2_82  [key=0, style=solid];
m2_67 -> m2_84  [key=0, style=solid];
m2_66 -> m2_67  [key=0, style=solid];
m2_95 -> m2_112  [key=1, style=dashed, color=darkseagreen4, label=escapedValue];
m2_95 -> m2_97  [key=1, style=dashed, color=darkseagreen4, label=escapedValue];
m2_95 -> m2_96  [key=0, style=solid];
m2_88 -> m2_112  [key=1, style=dashed, color=darkseagreen4, label=escapedValue];
m2_88 -> m2_97  [key=1, style=dashed, color=darkseagreen4, label=escapedValue];
m2_88 -> m2_96  [key=0, style=solid];
m2_90 -> m2_112  [key=1, style=dashed, color=darkseagreen4, label=escapedValue];
m2_90 -> m2_97  [key=1, style=dashed, color=darkseagreen4, label=escapedValue];
m2_90 -> m2_96  [key=0, style=solid];
m2_94 -> m2_112  [key=1, style=dashed, color=darkseagreen4, label=escapedValue];
m2_94 -> m2_97  [key=1, style=dashed, color=darkseagreen4, label=escapedValue];
m2_94 -> m2_96  [key=0, style=solid];
m2_100 -> m2_101  [key=0, style=solid];
m2_100 -> m2_108  [key=1, style=dashed, color=darkseagreen4, label=start];
m2_100 -> m2_109  [key=1, style=dashed, color=darkseagreen4, label=start];
m2_110 -> m2_116  [key=1, style=dashed, color=darkseagreen4, label=lastWritePosition];
m2_110 -> m2_120  [key=1, style=dashed, color=darkseagreen4, label=lastWritePosition];
m2_110 -> m2_115  [key=1, style=dashed, color=darkseagreen4, label=lastWritePosition];
m2_110 -> m2_111  [key=0, style=solid];
m2_111 -> m2_112  [key=0, style=solid];
m2_111 -> m2_113  [key=0, style=solid];
m2_117 -> m2_118  [key=0, style=solid];
m2_117 -> m2_122  [key=0, style=solid];
m2_69 -> m2_96  [key=0, style=solid];
m2_71 -> m2_96  [key=0, style=solid];
m2_73 -> m2_96  [key=0, style=solid];
m2_75 -> m2_96  [key=0, style=solid];
m2_77 -> m2_96  [key=0, style=solid];
m2_79 -> m2_96  [key=0, style=solid];
m2_81 -> m2_96  [key=0, style=solid];
m2_83 -> m2_96  [key=0, style=solid];
m2_85 -> m2_96  [key=0, style=solid];
m2_68 -> m2_69  [key=0, style=solid];
m2_70 -> m2_71  [key=0, style=solid];
m2_72 -> m2_73  [key=0, style=solid];
m2_74 -> m2_75  [key=0, style=solid];
m2_76 -> m2_77  [key=0, style=solid];
m2_78 -> m2_79  [key=0, style=solid];
m2_80 -> m2_81  [key=0, style=solid];
m2_82 -> m2_83  [key=0, style=solid];
m2_84 -> m2_85  [key=0, style=solid];
m2_124 -> m2_49  [key=0, style=bold, color=blue];
m9_0 -> m9_1  [key=0, style=solid, color=red];
m9_1 -> m9_2  [key=0, style=solid, color=red];
m9_1 -> m9_7  [key=2, style=dotted, color=red];
m9_1 -> m9_4  [key=1, style=dashed, color=red, label=person];
m9_2 -> m9_3  [key=0, style=solid];
m9_2 -> m9_8  [key=2, style=dotted];
m9_4 -> m9_5  [key=0, style=solid];
m9_4 -> m9_10  [key=2, style=dotted];
m9_4 -> m9_11  [key=2, style=dotted];
m9_3 -> m9_4  [key=0, style=solid];
m9_3 -> m9_9  [key=2, style=dotted];
m9_5 -> m9_6  [key=0, style=solid];
m9_5 -> m9_9  [key=2, style=dotted];
m9_6 -> m9_0  [key=0, style=bold, color=blue];
}
