digraph  {
m0_13 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DefaultValueWithConstructorTest()", color=green, community=0, file="DefaultValueHandlingTests.cs", label="1: DefaultValueWithConstructor myObject = JsonConvert.DeserializeObject<DefaultValueWithConstructor>(''{}'')", span="86-86"];
m0_5 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DefaultValueWithConstructorAndRenameTest()", color=green, community=0, file="DefaultValueHandlingTests.cs", label="2: Assert.AreEqual(DefaultValueWithConstructorAndRename.DefaultText, myObject.Text)", span="66-66"];
m0_85 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DefaultValueHandlingPropertyTest()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DefaultValueHandlingPropertyTest()", span="292-292"];
m0_86 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DefaultValueHandlingPropertyTest()", file="DefaultValueHandlingTests.cs", label="DefaultValueHandlingPropertyClass c = new DefaultValueHandlingPropertyClass()", span="294-294"];
m0_87 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DefaultValueHandlingPropertyTest()", file="DefaultValueHandlingTests.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="296-296"];
m0_89 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DefaultValueHandlingPropertyTest()", file="DefaultValueHandlingTests.cs", label="json = JsonConvert.SerializeObject(c, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DefaultValueHandling = DefaultValueHandling.Ignore\r\n            })", span="303-306"];
m0_91 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DefaultValueHandlingPropertyTest()", file="DefaultValueHandlingTests.cs", label="json = JsonConvert.SerializeObject(c, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DefaultValueHandling = DefaultValueHandling.Include\r\n            })", span="312-315"];
m0_88 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DefaultValueHandlingPropertyTest()", file="DefaultValueHandlingTests.cs", label="StringAssert.AreEqual(@''{\r\n  ''''IntInclude'''': 0,\r\n  ''''IntDefault'''': 0\r\n}'', json)", span="298-301"];
m0_90 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DefaultValueHandlingPropertyTest()", file="DefaultValueHandlingTests.cs", label="StringAssert.AreEqual(@''{\r\n  ''''IntInclude'''': 0\r\n}'', json)", span="308-310"];
m0_92 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DefaultValueHandlingPropertyTest()", file="DefaultValueHandlingTests.cs", label="StringAssert.AreEqual(@''{\r\n  ''''IntInclude'''': 0,\r\n  ''''IntDefault'''': 0\r\n}'', json)", span="317-320"];
m0_93 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DefaultValueHandlingPropertyTest()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DefaultValueHandlingPropertyTest()", span="292-292"];
m0_127 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.EmitDefaultValueIgnoreAndPopulate()", file="DefaultValueHandlingTests.cs", label="string str = ''{}''", span="400-400"];
m0_128 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.FieldExportFormat.FieldExportFormat(string, Newtonsoft.Json.Tests.Serialization.ExportFormat?)", file="DefaultValueHandlingTests.cs", label="exportFormat.HasValue", span="430-430"];
m0_129 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.FieldExportFormat.FieldExportFormat(string, Newtonsoft.Json.Tests.Serialization.ExportFormat?)", file="DefaultValueHandlingTests.cs", label="ExportFormat = exportFormat", span="432-432"];
m0_130 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.FieldExportFormat.FieldExportFormat(string, Newtonsoft.Json.Tests.Serialization.ExportFormat?)", file="DefaultValueHandlingTests.cs", label="Format = format", span="436-436"];
m0_131 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.FieldExportFormat.FieldExportFormat(string, Newtonsoft.Json.Tests.Serialization.ExportFormat?)", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.FieldExportFormat.FieldExportFormat(string, Newtonsoft.Json.Tests.Serialization.ExportFormat?)", span="428-428"];
m0_3 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.PopulateWithJsonIgnoreAttribute()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(MyEnum.Other, result.Status)", span="82-82"];
m0_4 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.PopulateWithJsonIgnoreAttribute()", color=green, community=0, file="DefaultValueHandlingTests.cs", label="0: Exit Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.PopulateWithJsonIgnoreAttribute()", span="76-76"];
m0_6 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="766-766"];
m0_66 [cluster="Newtonsoft.Json.Utilities.MathUtils.ApproxEquals(double, double)", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Utilities.MathUtils.ApproxEquals(double, double)", span="171-171"];
m0_8 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.Include()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.Include()", span="86-86"];
m0_9 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DefaultValueWithConstructor.DefaultValueWithConstructor(string)", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DefaultValueWithConstructor.DefaultValueWithConstructor(string)", span="77-77"];
m0_10 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DefaultValueWithConstructor.DefaultValueWithConstructor(string)", color=green, community=0, file="DefaultValueHandlingTests.cs", label="1: Text = text", span="79-79"];
m0_11 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DefaultValueWithConstructor.DefaultValueWithConstructor(string)", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DefaultValueWithConstructor.DefaultValueWithConstructor(string)", span="77-77"];
m0_12 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DefaultValueWithConstructorTest()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DefaultValueWithConstructorTest()", span="84-84"];
m0_82 [cluster="System.IO.MemoryStream.ToArray()", file="DefaultValueHandlingTests.cs", label="Entry System.IO.MemoryStream.ToArray()", span="0-0"];
m0_124 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.FieldExportFormat.FieldExportFormat(Newtonsoft.Json.Tests.Serialization.ExportFormat)", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.FieldExportFormat.FieldExportFormat(Newtonsoft.Json.Tests.Serialization.ExportFormat)", span="422-422"];
m0_125 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.FieldExportFormat.FieldExportFormat(Newtonsoft.Json.Tests.Serialization.ExportFormat)", file="DefaultValueHandlingTests.cs", label="ExportFormat = exportFormat", span="424-424"];
m0_126 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.FieldExportFormat.FieldExportFormat(Newtonsoft.Json.Tests.Serialization.ExportFormat)", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.FieldExportFormat.FieldExportFormat(Newtonsoft.Json.Tests.Serialization.ExportFormat)", span="422-422"];
m0_138 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingDeserializeHolder.DefaultValueHandlingDeserializeHolder()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingDeserializeHolder.DefaultValueHandlingDeserializeHolder()", span="474-474"];
m0_139 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingDeserializeHolder.DefaultValueHandlingDeserializeHolder()", file="DefaultValueHandlingTests.cs", label="ClassValue = new DefaultValueHandlingDeserialize\r\n            {\r\n                Derp = ''Derp!''\r\n            }", span="476-479"];
m0_140 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingDeserializeHolder.DefaultValueHandlingDeserializeHolder()", file="DefaultValueHandlingTests.cs", label="IntValue1 = int.MaxValue", span="480-480"];
m0_141 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingDeserializeHolder.DefaultValueHandlingDeserializeHolder()", file="DefaultValueHandlingTests.cs", label="IntValue2 = int.MinValue", span="481-481"];
m0_142 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingDeserializeHolder.DefaultValueHandlingDeserializeHolder()", file="DefaultValueHandlingTests.cs", label="IntValue3 = int.MaxValue", span="482-482"];
m0_143 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingDeserializeHolder.DefaultValueHandlingDeserializeHolder()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingDeserializeHolder.DefaultValueHandlingDeserializeHolder()", span="474-474"];
m0_14 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DefaultValueWithConstructorTest()", color=green, community=0, file="DefaultValueHandlingTests.cs", label="1: Assert.AreEqual(DefaultValueWithConstructor.DefaultText, myObject.Text)", span="87-87"];
m0_60 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.ApproxEquals()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.ApproxEquals()", span="261-261"];
m0_61 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.ApproxEquals()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(MathUtils.ApproxEquals(0.0, 0.0))", span="263-263"];
m0_62 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.ApproxEquals()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(MathUtils.ApproxEquals(1000.0, 1000.0000000000001))", span="264-264"];
m0_63 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.ApproxEquals()", file="DefaultValueHandlingTests.cs", label="Assert.IsFalse(MathUtils.ApproxEquals(1000.0, 1000.000000000001))", span="266-266"];
m0_64 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.ApproxEquals()", file="DefaultValueHandlingTests.cs", label="Assert.IsFalse(MathUtils.ApproxEquals(0.0, 0.00001))", span="267-267"];
m0_65 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.ApproxEquals()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.ApproxEquals()", span="261-261"];
m0_23 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.SerializeDefaultValueAttributeTest()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.SerializeDefaultValueAttributeTest()", span="149-149"];
m0_24 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.SerializeDefaultValueAttributeTest()", file="DefaultValueHandlingTests.cs", label="string json = JsonConvert.SerializeObject(new DefaultValueAttributeTestClass(),\r\n                Formatting.None, new JsonSerializerSettings { DefaultValueHandling = DefaultValueHandling.Ignore })", span="151-152"];
m0_25 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.SerializeDefaultValueAttributeTest()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(@''{''''TestField1'''':0,''''TestProperty1'''':null}'', json)", span="153-153"];
m0_26 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.SerializeDefaultValueAttributeTest()", file="DefaultValueHandlingTests.cs", label="json = JsonConvert.SerializeObject(new DefaultValueAttributeTestClass { TestField1 = int.MinValue, TestProperty1 = ''NotDefault'' },\r\n                Formatting.None, new JsonSerializerSettings { DefaultValueHandling = DefaultValueHandling.Ignore })", span="155-156"];
m0_27 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.SerializeDefaultValueAttributeTest()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(@''{''''TestField1'''':-2147483648,''''TestProperty1'''':''''NotDefault''''}'', json)", span="157-157"];
m0_28 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.SerializeDefaultValueAttributeTest()", file="DefaultValueHandlingTests.cs", label="json = JsonConvert.SerializeObject(new DefaultValueAttributeTestClass { TestField1 = 21, TestProperty1 = ''NotDefault'' },\r\n                Formatting.None, new JsonSerializerSettings { DefaultValueHandling = DefaultValueHandling.Ignore })", span="159-160"];
m0_29 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.SerializeDefaultValueAttributeTest()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(@''{''''TestProperty1'''':''''NotDefault''''}'', json)", span="161-161"];
m0_30 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.SerializeDefaultValueAttributeTest()", file="DefaultValueHandlingTests.cs", label="json = JsonConvert.SerializeObject(new DefaultValueAttributeTestClass { TestField1 = 21, TestProperty1 = ''TestProperty1Value'' },\r\n                Formatting.None, new JsonSerializerSettings { DefaultValueHandling = DefaultValueHandling.Ignore })", span="163-164"];
m0_31 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.SerializeDefaultValueAttributeTest()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(@''{}'', json)", span="165-165"];
m0_32 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.SerializeDefaultValueAttributeTest()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.SerializeDefaultValueAttributeTest()", span="149-149"];
m0_78 [cluster="Newtonsoft.Json.Tests.Serialization.EmitDefaultValueClass.EmitDefaultValueClass()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.EmitDefaultValueClass.EmitDefaultValueClass()", span="534-534"];
m0_67 [cluster="Unk.IsTrue", file="DefaultValueHandlingTests.cs", label="Entry Unk.IsTrue", span=""];
m0_83 [cluster="System.Text.Encoding.GetString(byte[])", file="DefaultValueHandlingTests.cs", label="Entry System.Text.Encoding.GetString(byte[])", span="0-0"];
m0_68 [cluster="Unk.IsFalse", file="DefaultValueHandlingTests.cs", label="Entry Unk.IsFalse", span=""];
m0_116 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.PopulateTest()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.PopulateTest()", span="369-369"];
m0_117 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.PopulateTest()", file="DefaultValueHandlingTests.cs", label="var test = JsonConvert.DeserializeObject<PopulateWithNullJsonTest>(''{\''IntValue\'':null}'')", span="371-371"];
m0_118 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.PopulateTest()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(0, test.IntValue)", span="372-372"];
m0_119 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.PopulateTest()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.PopulateTest()", span="369-369"];
m0_34 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeDefaultValueAttributeTest()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeDefaultValueAttributeTest()", span="169-169"];
m0_35 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeDefaultValueAttributeTest()", file="DefaultValueHandlingTests.cs", label="string json = ''{}''", span="171-171"];
m0_36 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeDefaultValueAttributeTest()", file="DefaultValueHandlingTests.cs", label="DefaultValueAttributeTestClass c = JsonConvert.DeserializeObject<DefaultValueAttributeTestClass>(json, new JsonSerializerSettings\r\n            {\r\n                DefaultValueHandling = DefaultValueHandling.Populate\r\n            })", span="173-176"];
m0_38 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeDefaultValueAttributeTest()", file="DefaultValueHandlingTests.cs", label="c = JsonConvert.DeserializeObject<DefaultValueAttributeTestClass>(json, new JsonSerializerSettings\r\n            {\r\n                DefaultValueHandling = DefaultValueHandling.IgnoreAndPopulate\r\n            })", span="179-182"];
m0_37 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeDefaultValueAttributeTest()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(''TestProperty1Value'', c.TestProperty1)", span="177-177"];
m0_39 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeDefaultValueAttributeTest()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(''TestProperty1Value'', c.TestProperty1)", span="183-183"];
m0_50 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.NetworkUser.NetworkUser()", file="DefaultValueHandlingTests.cs", label="GlobalId = -1", span="240-240"];
m0_40 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeDefaultValueAttributeTest()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeDefaultValueAttributeTest()", span="169-169"];
m0_144 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingDeserialize.DefaultValueHandlingDeserialize()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingDeserialize.DefaultValueHandlingDeserialize()", span="467-467"];
m0_94 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingPropertyClass.DefaultValueHandlingPropertyClass()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingPropertyClass.DefaultValueHandlingPropertyClass()", span="520-520"];
m0_7 [cluster="Unk.AreEqual", file="DefaultValueHandlingTests.cs", label="Entry Unk.AreEqual", span=""];
m0_80 [cluster="System.IO.MemoryStream.MemoryStream()", file="DefaultValueHandlingTests.cs", label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0"];
m0_55 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.IgnoreNumberTypeDifferencesWithDefaultValue()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.IgnoreNumberTypeDifferencesWithDefaultValue()", span="248-248"];
m0_56 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.IgnoreNumberTypeDifferencesWithDefaultValue()", file="DefaultValueHandlingTests.cs", label="NetworkUser user = new NetworkUser\r\n            {\r\n                Firstname = ''blub''\r\n            }", span="250-253"];
m0_57 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.IgnoreNumberTypeDifferencesWithDefaultValue()", file="DefaultValueHandlingTests.cs", label="string json = JsonConvert.SerializeObject(user, Formatting.None, new JsonSerializerSettings { DefaultValueHandling = DefaultValueHandling.Ignore, NullValueHandling = NullValueHandling.Ignore })", span="255-255"];
m0_58 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.IgnoreNumberTypeDifferencesWithDefaultValue()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(@''{''''firstName'''':''''blub''''}'', json)", span="257-257"];
m0_59 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.IgnoreNumberTypeDifferencesWithDefaultValue()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.IgnoreNumberTypeDifferencesWithDefaultValue()", span="248-248"];
m0_95 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="537-537"];
m0_121 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.FieldExportFormat.FieldExportFormat(string)", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.FieldExportFormat.FieldExportFormat(string)", span="417-417"];
m0_122 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.FieldExportFormat.FieldExportFormat(string)", file="DefaultValueHandlingTests.cs", label="Format = format", span="419-419"];
m0_123 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.FieldExportFormat.FieldExportFormat(string)", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.FieldExportFormat.FieldExportFormat(string)", span="417-417"];
m0_81 [cluster="Unk.WriteObject", file="DefaultValueHandlingTests.cs", label="Entry Unk.WriteObject", span=""];
m0_84 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object)", span="524-524"];
m0_0 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.PopulateWithJsonIgnoreAttribute()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.PopulateWithJsonIgnoreAttribute()", span="76-76"];
m0_1 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.PopulateWithJsonIgnoreAttribute()", color=green, community=0, file="DefaultValueHandlingTests.cs", label="2: string json = ''{\''Data\'':\''Other with some more text\''}''", span="78-78"];
m0_2 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.PopulateWithJsonIgnoreAttribute()", file="DefaultValueHandlingTests.cs", label="MyClass result = JsonConvert.DeserializeObject<MyClass>(json, new JsonSerializerSettings() { DefaultValueHandling = DefaultValueHandling.IgnoreAndPopulate })", span="80-80"];
m0_15 [cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="328-328"];
m0_120 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeWithPopulate()", file="DefaultValueHandlingTests.cs", label="string json = @''{}''", span="384-384"];
m0_49 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.NetworkUser.NetworkUser()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.NetworkUser.NetworkUser()", span="238-238"];
m0_51 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.NetworkUser.NetworkUser()", file="DefaultValueHandlingTests.cs", label="FloatGlobalId = -1.0f", span="241-241"];
m0_52 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.NetworkUser.NetworkUser()", file="DefaultValueHandlingTests.cs", label="Amount = 0.0m", span="242-242"];
m0_53 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.NetworkUser.NetworkUser()", file="DefaultValueHandlingTests.cs", label="Age = 0", span="243-243"];
m0_54 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.NetworkUser.NetworkUser()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.NetworkUser.NetworkUser()", span="238-238"];
m0_145 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingDeserializePopulate.DefaultValueHandlingDeserializePopulate()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingDeserializePopulate.DefaultValueHandlingDeserializePopulate()", span="498-498"];
m0_146 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingDeserializePopulate.DefaultValueHandlingDeserializePopulate()", file="DefaultValueHandlingTests.cs", label="ClassValue = new DefaultValueHandlingDeserialize\r\n            {\r\n                Derp = ''Derp!''\r\n            }", span="500-503"];
m0_147 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingDeserializePopulate.DefaultValueHandlingDeserializePopulate()", file="DefaultValueHandlingTests.cs", label="IntValue1 = int.MaxValue", span="504-504"];
m0_148 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingDeserializePopulate.DefaultValueHandlingDeserializePopulate()", file="DefaultValueHandlingTests.cs", label="IntValue2 = int.MinValue", span="505-505"];
m0_149 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingDeserializePopulate.DefaultValueHandlingDeserializePopulate()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingDeserializePopulate.DefaultValueHandlingDeserializePopulate()", span="498-498"];
m0_41 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeIgnoreAndPopulate()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeIgnoreAndPopulate()", span="196-196"];
m0_42 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeIgnoreAndPopulate()", file="DefaultValueHandlingTests.cs", label="DefaultHandler c1 = JsonConvert.DeserializeObject<DefaultHandler>(''{}'', new JsonSerializerSettings\r\n            {\r\n                DefaultValueHandling = DefaultValueHandling.IgnoreAndPopulate\r\n            })", span="198-201"];
m0_43 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeIgnoreAndPopulate()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(-1, c1.field1)", span="202-202"];
m0_44 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeIgnoreAndPopulate()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(''default'', c1.field2)", span="203-203"];
m0_45 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeIgnoreAndPopulate()", file="DefaultValueHandlingTests.cs", label="DefaultHandler c2 = JsonConvert.DeserializeObject<DefaultHandler>(''{'field1':-1,'field2':'default'}'', new JsonSerializerSettings\r\n            {\r\n                DefaultValueHandling = DefaultValueHandling.IgnoreAndPopulate\r\n            })", span="205-208"];
m0_46 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeIgnoreAndPopulate()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(-1, c2.field1)", span="209-209"];
m0_47 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeIgnoreAndPopulate()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(''default'', c2.field2)", span="210-210"];
m0_48 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeIgnoreAndPopulate()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeIgnoreAndPopulate()", span="196-196"];
m0_69 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.EmitDefaultValueTest()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.EmitDefaultValueTest()", span="272-272"];
m0_70 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.EmitDefaultValueTest()", file="DefaultValueHandlingTests.cs", label="EmitDefaultValueClass c = new EmitDefaultValueClass()", span="274-274"];
m0_71 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.EmitDefaultValueTest()", file="DefaultValueHandlingTests.cs", label="DataContractJsonSerializer jsonSerializer = new DataContractJsonSerializer(typeof(EmitDefaultValueClass))", span="277-277"];
m0_73 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.EmitDefaultValueTest()", file="DefaultValueHandlingTests.cs", label="jsonSerializer.WriteObject(ms, c)", span="280-280"];
m0_75 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.EmitDefaultValueTest()", file="DefaultValueHandlingTests.cs", label="string json = JsonConvert.SerializeObject(c)", span="285-285"];
m0_72 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.EmitDefaultValueTest()", file="DefaultValueHandlingTests.cs", label="MemoryStream ms = new MemoryStream()", span="279-279"];
m0_74 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.EmitDefaultValueTest()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(''{}'', Encoding.UTF8.GetString(ms.ToArray()))", span="282-282"];
m0_76 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.EmitDefaultValueTest()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(''{}'', json)", span="287-287"];
m0_77 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.EmitDefaultValueTest()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.EmitDefaultValueTest()", span="272-272"];
m0_111 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.EmitDefaultValueIgnoreAndPopulate()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.EmitDefaultValueIgnoreAndPopulate()", span="356-356"];
m0_112 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.EmitDefaultValueIgnoreAndPopulate()", file="DefaultValueHandlingTests.cs", label="string str = ''{}''", span="358-358"];
m0_113 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.EmitDefaultValueIgnoreAndPopulate()", file="DefaultValueHandlingTests.cs", label="TestClass obj = JsonConvert.DeserializeObject<TestClass>(str, new JsonSerializerSettings\r\n            {\r\n                DefaultValueHandling = DefaultValueHandling.IgnoreAndPopulate\r\n            })", span="359-362"];
m0_114 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.EmitDefaultValueIgnoreAndPopulate()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(''fff'', obj.Field1)", span="364-364"];
m0_115 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.EmitDefaultValueIgnoreAndPopulate()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.EmitDefaultValueIgnoreAndPopulate()", span="356-356"];
m0_16 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.SerializeInvoice()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.SerializeInvoice()", span="113-113"];
m0_17 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.SerializeInvoice()", file="DefaultValueHandlingTests.cs", label="Invoice invoice = new Invoice\r\n            {\r\n                Company = ''Acme Ltd.'',\r\n                Amount = 50.0m,\r\n                Paid = false,\r\n                FollowUpDays = 30,\r\n                FollowUpEmailAddress = string.Empty,\r\n                PaidDate = null\r\n            }", span="115-123"];
m0_18 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.SerializeInvoice()", file="DefaultValueHandlingTests.cs", label="string included = JsonConvert.SerializeObject(invoice,\r\n                Formatting.Indented,\r\n                new JsonSerializerSettings { })", span="125-127"];
m0_20 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.SerializeInvoice()", file="DefaultValueHandlingTests.cs", label="string ignored = JsonConvert.SerializeObject(invoice,\r\n                Formatting.Indented,\r\n                new JsonSerializerSettings { DefaultValueHandling = DefaultValueHandling.Ignore })", span="138-140"];
m0_19 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.SerializeInvoice()", file="DefaultValueHandlingTests.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Company'''': ''''Acme Ltd.'''',\r\n  ''''Amount'''': 50.0,\r\n  ''''Paid'''': false,\r\n  ''''PaidDate'''': null,\r\n  ''''FollowUpDays'''': 30,\r\n  ''''FollowUpEmailAddress'''': ''''''''\r\n}'', included)", span="129-136"];
m0_21 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.SerializeInvoice()", file="DefaultValueHandlingTests.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Company'''': ''''Acme Ltd.'''',\r\n  ''''Amount'''': 50.0\r\n}'', ignored)", span="142-145"];
m0_22 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.SerializeInvoice()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.SerializeInvoice()", span="113-113"];
m0_79 [cluster="DataContractJsonSerializer.cstr", file="DefaultValueHandlingTests.cs", label="Entry DataContractJsonSerializer.cstr", span=""];
m0_104 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeWithPopulate()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeWithPopulate()", span="340-340"];
m0_105 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeWithPopulate()", file="DefaultValueHandlingTests.cs", label="string json = @''{}''", span="342-342"];
m0_106 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeWithPopulate()", file="DefaultValueHandlingTests.cs", label="var o = JsonConvert.DeserializeObject<DefaultValueHandlingDeserializePopulate>(json, new JsonSerializerSettings\r\n            {\r\n                DefaultValueHandling = DefaultValueHandling.Populate\r\n            })", span="344-347"];
m0_107 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeWithPopulate()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(1, o.IntValue1)", span="349-349"];
m0_108 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeWithPopulate()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(0, o.IntValue2)", span="350-350"];
m0_109 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeWithPopulate()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(null, o.ClassValue)", span="351-351"];
m0_110 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeWithPopulate()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeWithPopulate()", span="340-340"];
m0_33 [cluster="Newtonsoft.Json.Tests.TestObjects.DefaultValueAttributeTestClass.DefaultValueAttributeTestClass()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.DefaultValueAttributeTestClass.DefaultValueAttributeTestClass()", span="32-32"];
m0_132 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DontSetPropertiesDefaultValueUsedInConstructor()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DontSetPropertiesDefaultValueUsedInConstructor()", span="442-442"];
m0_133 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DontSetPropertiesDefaultValueUsedInConstructor()", file="DefaultValueHandlingTests.cs", label="string json = @''{''''ExportFormat'''':0}''", span="444-444"];
m0_134 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DontSetPropertiesDefaultValueUsedInConstructor()", file="DefaultValueHandlingTests.cs", label="FieldExportFormat o = JsonConvert.DeserializeObject<FieldExportFormat>(json, new JsonSerializerSettings\r\n            {\r\n                DefaultValueHandling = DefaultValueHandling.Populate\r\n            })", span="446-449"];
m0_135 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DontSetPropertiesDefaultValueUsedInConstructor()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(ExportFormat.Default, o.ExportFormat)", span="451-451"];
m0_136 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DontSetPropertiesDefaultValueUsedInConstructor()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(null, o.Format)", span="452-452"];
m0_137 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DontSetPropertiesDefaultValueUsedInConstructor()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DontSetPropertiesDefaultValueUsedInConstructor()", span="442-442"];
m0_96 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeWithIgnore()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeWithIgnore()", span="324-324"];
m0_97 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeWithIgnore()", file="DefaultValueHandlingTests.cs", label="string json = @''{'Value':null,'IntValue1':1,'IntValue2':0,'IntValue3':null}''", span="326-326"];
m0_98 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeWithIgnore()", file="DefaultValueHandlingTests.cs", label="var o = JsonConvert.DeserializeObject<DefaultValueHandlingDeserializeHolder>(json, new JsonSerializerSettings\r\n            {\r\n                DefaultValueHandling = DefaultValueHandling.Ignore\r\n            })", span="328-331"];
m0_99 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeWithIgnore()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(int.MaxValue, o.IntValue1)", span="333-333"];
m0_100 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeWithIgnore()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(int.MinValue, o.IntValue2)", span="334-334"];
m0_101 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeWithIgnore()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(int.MaxValue, o.IntValue3)", span="335-335"];
m0_102 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeWithIgnore()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(''Derp!'', o.ClassValue.Derp)", span="336-336"];
m0_103 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeWithIgnore()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeWithIgnore()", span="324-324"];
m0_150 [file="DefaultValueHandlingTests.cs", label="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.NetworkUser", span=""];
m0_151 [file="DefaultValueHandlingTests.cs", label="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.FieldExportFormat", span=""];
m0_152 [file="DefaultValueHandlingTests.cs", label="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingDeserializeHolder", span=""];
m0_153 [file="DefaultValueHandlingTests.cs", label="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingDeserializePopulate", span=""];
m0_164 [file="DefaultValueHandlingTests.cs", label="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DefaultValueWithConstructorAndRename", span=""];
m0_165 [file="DefaultValueHandlingTests.cs", label="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DefaultValueWithConstructor", span=""];
m1_803 [cluster="char.ToString()", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry char.ToString()", span="0-0"];
m1_56 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIConvertable()", file="DynamicReflectionDelegateFactoryTests.cs", label="var sw = new StringWriter()", span="127-127"];
m1_20 [cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.ConstructorWithRefStringAndOutBool()", file="DynamicReflectionDelegateFactoryTests.cs", label="ConstructorInfo constructor = typeof(OutAndRefTestClass).GetConstructors().Single(c => c.GetParameters().Count() == 2)", span="69-69"];
m1_34 [cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.ConstructorWithRefStringAndRefBoolAndRefBool()", file="DynamicReflectionDelegateFactoryTests.cs", label="object[] args = new object[] { ''Input'', true, null }", span="87-87"];
m1_157 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", span="221-221"];
m1_166 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", file="DynamicReflectionDelegateFactoryTests.cs", label="Assert.AreEqual(expected, json)", span="236-236"];
m1_159 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", file="DynamicReflectionDelegateFactoryTests.cs", label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="224-224"];
m1_164 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", file="DynamicReflectionDelegateFactoryTests.cs", label="string json = sw.ToString()", span="233-233"];
m1_165 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", file="DynamicReflectionDelegateFactoryTests.cs", label="string expected = @''[''''c'''']''", span="234-234"];
m1_158 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", file="DynamicReflectionDelegateFactoryTests.cs", label="StringWriter sw = new StringWriter()", span="223-223"];
m1_160 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", file="DynamicReflectionDelegateFactoryTests.cs", label="char? value = 'c'", span="226-226"];
m1_161 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteStartArray()", span="228-228"];
m1_162 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue((object)value)", span="229-229"];
m1_163 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteEndArray()", span="230-230"];
m1_167 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", file="DynamicReflectionDelegateFactoryTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", span="221-221"];
m1_149 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(ulong?)", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(ulong?)", span="1025-1025"];
m1_16 [cluster="lambda expression", file="DynamicReflectionDelegateFactoryTests.cs", label="Exit lambda expression", span="56-56"];
m1_18 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m1_440 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.Read()", span="304-304"];
m1_869 [cluster="System.IO.TextWriter.Write(char[], int, int)", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry System.IO.TextWriter.Write(char[], int, int)", span="0-0"];
m1_91 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(bool)", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(bool)", span="884-884"];
m1_92 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(int)", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(int)", span="828-828"];
m1_93 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(double)", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(double)", span="875-875"];
m1_94 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(decimal)", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(decimal)", span="940-940"];
m1_95 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(object)", span="1222-1222"];
m1_96 [cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteNull()", span="781-781"];
m1_97 [cluster="Newtonsoft.Json.JsonWriter.WriteUndefined()", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteUndefined()", span="789-789"];
m1_98 [cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="381-381"];
m1_99 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", span="167-167"];
m1_0 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NewLine()", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.NewLine()", span="62-62"];
m1_1 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NewLine()", file="DynamicReflectionDelegateFactoryTests.cs", label="MemoryStream ms = new MemoryStream()", span="64-64"];
m1_2 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NewLine()", file="DynamicReflectionDelegateFactoryTests.cs", label="var streamWriter = new StreamWriter(ms, new UTF8Encoding(false)) { NewLine = ''\n'' }", span="66-66"];
m1_3 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NewLine()", file="DynamicReflectionDelegateFactoryTests.cs", label="var jsonWriter = new JsonTextWriter(streamWriter)\r\n            {\r\n                CloseOutput = true,\r\n                Indentation = 2,\r\n                Formatting = Formatting.Indented\r\n            }", span="67-72"];
m1_4 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NewLine()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteStartObject()", span="74-74"];
m1_5 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NewLine()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WritePropertyName(''prop'')", span="75-75"];
m1_6 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NewLine()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue(true)", span="76-76"];
m1_7 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NewLine()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteEndObject()", span="77-77"];
m1_241 [cluster="Newtonsoft.Json.JsonWriter.Close()", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.JsonWriter.Close()", span="349-349"];
m1_89 [cluster="lambda expression", file="DynamicReflectionDelegateFactoryTests.cs", label="Exit lambda expression", span="149-156"];
m1_14 [cluster="lambda expression", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry lambda expression", span="56-56"];
m1_456 [cluster="Newtonsoft.Json.JsonWriter.WriteRawValue(string)", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteRawValue(string)", span="807-807"];
m1_100 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="DynamicReflectionDelegateFactoryTests.cs", label="StringWriter sw = new StringWriter()", span="169-169"];
m1_788 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
m1_904 [cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", span="485-485"];
m1_52 [cluster="lambda expression", file="DynamicReflectionDelegateFactoryTests.cs", label="setter(p)", span="105-105"];
m1_155 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.DateTimeOffset?)", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.DateTimeOffset?)", span="1160-1160"];
m1_242 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", span="356-356"];
m1_262 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="DynamicReflectionDelegateFactoryTests.cs", label="string result = sb.ToString()", span="402-402"];
m1_260 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="DynamicReflectionDelegateFactoryTests.cs", label="Assert.AreEqual(WriteState.Start, jsonWriter.WriteState)", span="378-378"];
m1_245 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="DynamicReflectionDelegateFactoryTests.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="361-361"];
m1_249 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue(''Intel'')", span="367-367"];
m1_251 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue(''500W'')", span="369-369"];
m1_254 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue(''DVD read/writer'')", span="372-372"];
m1_256 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue(''500 gigabyte hard drive'')", span="374-374"];
m1_257 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue(''200 gigabype hard drive'')", span="375-375"];
m1_243 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="DynamicReflectionDelegateFactoryTests.cs", label="StringBuilder sb = new StringBuilder()", span="358-358"];
m1_261 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="DynamicReflectionDelegateFactoryTests.cs", label="string expected = @''{\r\n  ''''CPU'''': ''''Intel'''',\r\n  ''''PSU'''': ''''500W'''',\r\n  ''''Drives'''': [\r\n    ''''DVD read/writer''''\r\n    /*(broken)*/,\r\n    ''''500 gigabyte hard drive'''',\r\n    ''''200 gigabype hard drive''''\r\n  ]\r\n}''", span="392-401"];
m1_263 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="DynamicReflectionDelegateFactoryTests.cs", label="StringAssert.AreEqual(expected, result)", span="404-404"];
m1_259 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteEndObject()", span="377-377"];
m1_244 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="DynamicReflectionDelegateFactoryTests.cs", label="StringWriter sw = new StringWriter(sb)", span="359-359"];
m1_246 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.Formatting = Formatting.Indented", span="363-363"];
m1_247 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteStartObject()", span="365-365"];
m1_248 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WritePropertyName(''CPU'')", span="366-366"];
m1_250 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WritePropertyName(''PSU'')", span="368-368"];
m1_252 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WritePropertyName(''Drives'')", span="370-370"];
m1_253 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteStartArray()", span="371-371"];
m1_255 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteComment(''(broken)'')", span="373-373"];
m1_258 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteEnd()", span="376-376"];
m1_264 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="DynamicReflectionDelegateFactoryTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", span="356-356"];
m1_712 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.HtmlStringEscapeHandling()", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.HtmlStringEscapeHandling()", span="1122-1122"];
m1_720 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.HtmlStringEscapeHandling()", file="DynamicReflectionDelegateFactoryTests.cs", label="Assert.AreEqual(script, reader.ReadAsString())", span="1140-1140"];
m1_718 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.HtmlStringEscapeHandling()", file="DynamicReflectionDelegateFactoryTests.cs", label="Assert.AreEqual(@''''''\u003cscript type=\u0022text/javascript\u0022\u003ealert(\u0027hi\u0027);\u003c/script\u003e'''''', json)", span="1136-1136"];
m1_714 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.HtmlStringEscapeHandling()", file="DynamicReflectionDelegateFactoryTests.cs", label="JsonTextWriter writer = new JsonTextWriter(sw)\r\n            {\r\n                StringEscapeHandling = StringEscapeHandling.EscapeHtml\r\n            }", span="1125-1128"];
m1_715 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.HtmlStringEscapeHandling()", file="DynamicReflectionDelegateFactoryTests.cs", label="string script = @''<script type=''''text/javascript''''>alert('hi');</script>''", span="1130-1130"];
m1_719 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.HtmlStringEscapeHandling()", file="DynamicReflectionDelegateFactoryTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1138-1138"];
m1_717 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.HtmlStringEscapeHandling()", file="DynamicReflectionDelegateFactoryTests.cs", label="string json = sw.ToString()", span="1134-1134"];
m1_713 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.HtmlStringEscapeHandling()", file="DynamicReflectionDelegateFactoryTests.cs", label="StringWriter sw = new StringWriter()", span="1124-1124"];
m1_716 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.HtmlStringEscapeHandling()", file="DynamicReflectionDelegateFactoryTests.cs", label="writer.WriteValue(script)", span="1132-1132"];
m1_721 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.HtmlStringEscapeHandling()", file="DynamicReflectionDelegateFactoryTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.HtmlStringEscapeHandling()", span="1122-1122"];
m1_804 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", span="99-99"];
m1_62 [cluster="lambda expression", file="DynamicReflectionDelegateFactoryTests.cs", label="Movie m = new Movie()", span="115-115"];
m1_947 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ConvertibleInt(int)", file="DynamicReflectionDelegateFactoryTests.cs", label="_value = value", span="1561-1561"];
m1_948 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ConvertibleInt(int)", file="DynamicReflectionDelegateFactoryTests.cs", label="Exit Newtonsoft.Json.Tests.ConvertibleInt.ConvertibleInt(int)", span="1559-1559"];
m1_21 [cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.ConstructorWithRefStringAndOutBool()", file="DynamicReflectionDelegateFactoryTests.cs", label="var creator = DynamicReflectionDelegateFactory.Instance.CreateParameterizedConstructor(constructor)", span="71-71"];
m1_314 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(float)", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(float)", span="866-866"];
m1_123 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue((double?)null)", span="193-193"];
m1_124 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue((double?)1.1)", span="194-194"];
m1_125 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", color=green, community=0, file="DynamicReflectionDelegateFactoryTests.cs", label="1: jsonWriter.WriteValue((float?)null)", span="195-195"];
m1_702 [cluster="Newtonsoft.Json.JsonWriter.BuildStateArray()", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.JsonWriter.BuildStateArray()", span="78-78"];
m1_498 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", span="782-782"];
m1_514 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="DynamicReflectionDelegateFactoryTests.cs", label="Console.WriteLine(sb.ToString())", span="805-805"];
m1_515 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="DynamicReflectionDelegateFactoryTests.cs", label="StringAssert.AreEqual(@''[\r\n  2147483647,\r\n  -2147483648,\r\n  0,\r\n  0,\r\n  9,\r\n  9,\r\n  9223372036854775807,\r\n  -9223372036854775808,\r\n  18446744073709551615,\r\n  0\r\n]'', sb.ToString())", span="807-818"];
m1_501 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="DynamicReflectionDelegateFactoryTests.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw) { Formatting = Formatting.Indented }", span="787-787"];
m1_499 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="DynamicReflectionDelegateFactoryTests.cs", label="StringBuilder sb = new StringBuilder()", span="784-784"];
m1_513 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteEndArray()", span="802-802"];
m1_500 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="DynamicReflectionDelegateFactoryTests.cs", label="StringWriter sw = new StringWriter(sb)", span="785-785"];
m1_502 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteStartArray()", span="789-789"];
m1_503 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue(int.MaxValue)", span="791-791"];
m1_504 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue(int.MinValue)", span="792-792"];
m1_505 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue(0)", span="793-793"];
m1_506 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue(-0)", span="794-794"];
m1_507 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue(9L)", span="795-795"];
m1_508 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue(9UL)", span="796-796"];
m1_509 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue(long.MaxValue)", span="797-797"];
m1_510 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue(long.MinValue)", span="798-798"];
m1_511 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue(ulong.MaxValue)", span="799-799"];
m1_512 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue(ulong.MinValue)", span="800-800"];
m1_516 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="DynamicReflectionDelegateFactoryTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", span="782-782"];
m1_144 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(short?)", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(short?)", span="1073-1073"];
m1_891 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteEndObject()", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteEndObject()", span="1540-1540"];
m1_939 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteEndObject()", file="DynamicReflectionDelegateFactoryTests.cs", label="SetWriteState(JsonToken.EndObject, null)", span="1542-1542"];
m1_940 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteEndObject()", file="DynamicReflectionDelegateFactoryTests.cs", label="Exit Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteEndObject()", span="1540-1540"];
m1_10 [cluster="Unk.CreateParameterizedConstructor", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Unk.CreateParameterizedConstructor", span=""];
m1_9 [cluster="Unk.Single", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Unk.Single", span=""];
m1_8 [cluster="System.Type.GetConstructors()", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry System.Type.GetConstructors()", span="0-0"];
m1_11 [cluster="Unk.creator", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Unk.creator", span=""];
m1_55 [cluster="System.Type.GetProperty(string)", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry System.Type.GetProperty(string)", span="0-0"];
m1_59 [cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.CreateSetWithBadObjectTarget()", file="DynamicReflectionDelegateFactoryTests.cs", label="Exit Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.CreateSetWithBadObjectTarget()", span="110-110"];
m1_57 [cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.CreateSetWithBadObjectTarget()", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.CreateSetWithBadObjectTarget()", span="110-110"];
m1_58 [cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.CreateSetWithBadObjectTarget()", color=red, community=0, file="DynamicReflectionDelegateFactoryTests.cs", label="1: ExceptionAssert.Throws<InvalidCastException>(() =>\r\n            {\r\n                Person p = new Person();\r\n                Movie m = new Movie();\r\n\r\n                Action<object, object> setter = DynamicReflectionDelegateFactory.Instance.CreateSet<object>(typeof(Movie).GetProperty(''Name''));\r\n\r\n                setter(m, ''Hi'');\r\n\r\n                Assert.AreEqual(m.Name, ''Hi'');\r\n\r\n                setter(p, ''Hi'');\r\n\r\n                Assert.AreEqual(p.Name, ''Hi'');\r\n            }, ''Unable to cast object of type 'Newtonsoft.Json.Tests.TestObjects.Organization.Person' to type 'Newtonsoft.Json.Tests.TestObjects.Movie'.'')", span="112-126"];
m1_60 [cluster="lambda expression", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry lambda expression", span="112-126"];
m1_888 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteStartObject()", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteStartObject()", span="1533-1533"];
m1_936 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteStartObject()", file="DynamicReflectionDelegateFactoryTests.cs", label="SetWriteState(JsonToken.StartObject, null)", span="1535-1535"];
m1_937 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteStartObject()", file="DynamicReflectionDelegateFactoryTests.cs", label="_writer.Write(''{{{'')", span="1537-1537"];
m1_938 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteStartObject()", file="DynamicReflectionDelegateFactoryTests.cs", label="Exit Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteStartObject()", span="1533-1533"];
m1_151 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(float?)", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(float?)", span="439-439"];
m1_400 [cluster="Newtonsoft.Json.JsonWriter.WriteWhitespace(string)", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteWhitespace(string)", span="1255-1255"];
m1_722 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsString()", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsString()", span="349-349"];
m1_775 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", span="1237-1237"];
m1_777 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", file="DynamicReflectionDelegateFactoryTests.cs", label="JsonTextWriter writer = new JsonTextWriter(sw)", span="1240-1240"];
m1_776 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", file="DynamicReflectionDelegateFactoryTests.cs", label="StringWriter sw = new StringWriter()", span="1239-1239"];
m1_778 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", file="DynamicReflectionDelegateFactoryTests.cs", label="writer.Formatting = Formatting.Indented", span="1241-1241"];
m1_779 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", file="DynamicReflectionDelegateFactoryTests.cs", label="writer.DateFormatString = ''yyyy tt''", span="1242-1242"];
m1_780 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", file="DynamicReflectionDelegateFactoryTests.cs", label="writer.Culture = new CultureInfo(''en-NZ'')", span="1243-1243"];
m1_781 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", file="DynamicReflectionDelegateFactoryTests.cs", label="writer.QuoteChar = '\''", span="1244-1244"];
m1_782 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", file="DynamicReflectionDelegateFactoryTests.cs", label="writer.WriteStartArray()", span="1246-1246"];
m1_783 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", file="DynamicReflectionDelegateFactoryTests.cs", label="writer.WriteValue(new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc))", span="1248-1248"];
m1_784 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", file="DynamicReflectionDelegateFactoryTests.cs", label="writer.WriteValue(new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero))", span="1249-1249"];
m1_785 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", file="DynamicReflectionDelegateFactoryTests.cs", label="writer.WriteEnd()", span="1251-1251"];
m1_786 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", file="DynamicReflectionDelegateFactoryTests.cs", label="StringAssert.AreEqual(@''[\r\n  '2000 a.m.',\r\n  '2000 a.m.'\r\n]'', sw.ToString())", span="1253-1256"];
m1_787 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", file="DynamicReflectionDelegateFactoryTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", span="1237-1237"];
m1_154 [cluster="System.DateTime.DateTime(long, System.DateTimeKind)", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry System.DateTime.DateTime(long, System.DateTimeKind)", span="0-0"];
m1_315 [cluster="Newtonsoft.Json.JsonWriter.Flush()", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.JsonWriter.Flush()", span="344-344"];
m1_343 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", span="535-535"];
m1_359 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="DynamicReflectionDelegateFactoryTests.cs", label="string result = sb.ToString()", span="565-565"];
m1_346 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="DynamicReflectionDelegateFactoryTests.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="540-540"];
m1_344 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="DynamicReflectionDelegateFactoryTests.cs", label="StringBuilder sb = new StringBuilder()", span="537-537"];
m1_358 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="DynamicReflectionDelegateFactoryTests.cs", label="string expected = @''[\r\n  ''''NaN'''',\r\n  ''''Infinity'''',\r\n  ''''-Infinity'''',\r\n  ''''NaN'''',\r\n  ''''Infinity'''',\r\n  ''''-Infinity''''\r\n]''", span="557-564"];
m1_360 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="DynamicReflectionDelegateFactoryTests.cs", label="StringAssert.AreEqual(expected, result)", span="567-567"];
m1_345 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="DynamicReflectionDelegateFactoryTests.cs", label="StringWriter sw = new StringWriter(sb)", span="538-538"];
m1_347 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.Formatting = Formatting.Indented", span="542-542"];
m1_348 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.FloatFormatHandling = FloatFormatHandling.String", span="543-543"];
m1_349 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteStartArray()", span="545-545"];
m1_350 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue(double.NaN)", span="546-546"];
m1_351 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue(double.PositiveInfinity)", span="547-547"];
m1_352 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue(double.NegativeInfinity)", span="548-548"];
m1_353 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue(float.NaN)", span="549-549"];
m1_354 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue(float.PositiveInfinity)", span="550-550"];
m1_355 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue(float.NegativeInfinity)", span="551-551"];
m1_356 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteEndArray()", span="552-552"];
m1_357 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.Flush()", span="554-554"];
m1_361 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="DynamicReflectionDelegateFactoryTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", span="535-535"];
m1_64 [cluster="lambda expression", file="DynamicReflectionDelegateFactoryTests.cs", label="setter(m, ''Hi'')", span="119-119"];
m1_17 [cluster="System.Reflection.MethodBase.GetParameters()", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
m1_36 [cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.ConstructorWithRefStringAndRefBoolAndRefBool()", file="DynamicReflectionDelegateFactoryTests.cs", label="Assert.IsNotNull(o)", span="89-89"];
m1_773 [cluster="System.Uri.Uri(string)", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry System.Uri.Uri(string)", span="0-0"];
m1_180 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", span="255-255"];
m1_191 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="DynamicReflectionDelegateFactoryTests.cs", label="string result = sb.ToString()", span="271-271"];
m1_192 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="DynamicReflectionDelegateFactoryTests.cs", label="Assert.AreEqual(expected, result)", span="273-273"];
m1_183 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="DynamicReflectionDelegateFactoryTests.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="260-260"];
m1_185 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue(@''''''These pretzels are making me thirsty!'''''')", span="263-263"];
m1_186 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue(''Jeff's house was burninated.'')", span="264-264"];
m1_187 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue(''1. You don't talk about fight club.\r\n2. You don't talk about fight club.'')", span="265-265"];
m1_188 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue(''35% of\t statistics\n are made\r up.'')", span="266-266"];
m1_181 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="DynamicReflectionDelegateFactoryTests.cs", label="StringBuilder sb = new StringBuilder()", span="257-257"];
m1_190 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="DynamicReflectionDelegateFactoryTests.cs", label="string expected = @''[''''\''''These pretzels are making me thirsty!\'''''''',''''Jeff's house was burninated.'''',''''1. You don't talk about fight club.\r\n2. You don't talk about fight club.'''',''''35% of\t statistics\n are made\r up.'''']''", span="270-270"];
m1_182 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="DynamicReflectionDelegateFactoryTests.cs", label="StringWriter sw = new StringWriter(sb)", span="258-258"];
m1_184 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteStartArray()", span="262-262"];
m1_189 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteEndArray()", span="267-267"];
m1_193 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="DynamicReflectionDelegateFactoryTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", span="255-255"];
m1_417 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", span="662-662"];
m1_426 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="DynamicReflectionDelegateFactoryTests.cs", label="string result = sb.ToString()", span="677-677"];
m1_427 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="DynamicReflectionDelegateFactoryTests.cs", label="Assert.AreEqual(expected, result)", span="679-679"];
m1_420 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="DynamicReflectionDelegateFactoryTests.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="667-667"];
m1_418 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="DynamicReflectionDelegateFactoryTests.cs", label="StringBuilder sb = new StringBuilder()", span="664-664"];
m1_425 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="DynamicReflectionDelegateFactoryTests.cs", label="string expected = @''{''''PropertyName'''':[1,2,3,4,5]}''", span="676-676"];
m1_419 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="DynamicReflectionDelegateFactoryTests.cs", label="StringWriter sw = new StringWriter(sb)", span="665-665"];
m1_421 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.Formatting = Formatting.Indented", span="669-669"];
m1_422 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteStartObject()", span="671-671"];
m1_423 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteRaw(@''''''PropertyName'''':[1,2,3,4,5]'')", span="672-672"];
m1_424 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteEnd()", span="673-673"];
m1_428 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="DynamicReflectionDelegateFactoryTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", span="662-662"];
m1_771 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTimeOffset)", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTimeOffset)", span="604-604"];
m1_534 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonToken, object)", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonToken, object)", span="459-459"];
m1_517 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(long)", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(long)", span="847-847"];
m1_518 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(ulong)", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(ulong)", span="857-857"];
m1_806 [cluster="System.Exception.Exception(string)", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m1_872 [cluster="System.IO.TextWriter.Write(char[])", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry System.IO.TextWriter.Write(char[])", span="0-0"];
m1_903 [cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="382-382"];
m1_101 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="DynamicReflectionDelegateFactoryTests.cs", label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="170-170"];
m1_931 [cluster="System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", span="0-0"];
m1_441 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", span="434-434"];
m1_711 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTime)", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTime)", span="555-555"];
m1_619 [cluster="System.Convert.FromBase64String(string)", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry System.Convert.FromBase64String(string)", span="0-0"];
m1_35 [cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.ConstructorWithRefStringAndRefBoolAndRefBool()", file="DynamicReflectionDelegateFactoryTests.cs", label="OutAndRefTestClass o = (OutAndRefTestClass)creator(args)", span="88-88"];
m1_618 [cluster="string.Trim(params char[])", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry string.Trim(params char[])", span="0-0"];
m1_31 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteNameAndStrings()", file="DynamicReflectionDelegateFactoryTests.cs", label="writer.Flush()", span="100-100"];
m1_32 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteNameAndStrings()", color=green, community=0, file="DynamicReflectionDelegateFactoryTests.cs", label="0: Assert.AreEqual(@''{name:''''value''''}'', sb.ToString())", span="102-102"];
m1_33 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteNameAndStrings()", file="DynamicReflectionDelegateFactoryTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteNameAndStrings()", span="88-88"];
m1_37 [cluster="Newtonsoft.Json.JsonTextWriter.Flush()", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.JsonTextWriter.Flush()", span="141-141"];
m1_38 [cluster="System.Text.StringBuilder.ToString()", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m1_39 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", span="106-106"];
m1_40 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="DynamicReflectionDelegateFactoryTests.cs", label="MemoryStream ms = new MemoryStream()", span="108-108"];
m1_142 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(byte?)", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(byte?)", span="1110-1110"];
m1_789 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", span="1261-1261"];
m1_796 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="DynamicReflectionDelegateFactoryTests.cs", label="string newText = swNew.ToString()", span="1274-1274"];
m1_797 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="DynamicReflectionDelegateFactoryTests.cs", label="string oldText = swOld.ToString()", span="1275-1275"];
m1_791 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="DynamicReflectionDelegateFactoryTests.cs", label="StringWriter swNew = new StringWriter()", span="1267-1267"];
m1_794 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="DynamicReflectionDelegateFactoryTests.cs", label="StringWriter swOld = new StringWriter()", span="1271-1271"];
m1_795 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="DynamicReflectionDelegateFactoryTests.cs", label="WriteEscapedJavaScriptStringOld(swOld, c.ToString(), '''', true)", span="1272-1272"];
m1_798 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="DynamicReflectionDelegateFactoryTests.cs", label="newText != oldText", span="1277-1277"];
m1_799 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="DynamicReflectionDelegateFactoryTests.cs", label="throw new Exception(''Difference for char '{0}' (value {1}). Old text: {2}, New text: {3}''.FormatWith(CultureInfo.InvariantCulture, c, (int)c, oldText, newText));", span="1278-1278"];
m1_790 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="DynamicReflectionDelegateFactoryTests.cs", label="char c = (char)0", span="1263-1263"];
m1_792 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="DynamicReflectionDelegateFactoryTests.cs", label="char[] buffer = null", span="1268-1268"];
m1_793 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="DynamicReflectionDelegateFactoryTests.cs", label="JavaScriptUtils.WriteEscapedJavaScriptString(swNew, c.ToString(), '''', true, JavaScriptUtils.DoubleQuoteCharEscapeFlags, StringEscapeHandling.Default, ref buffer)", span="1269-1269"];
m1_800 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="DynamicReflectionDelegateFactoryTests.cs", label="c++", span="1280-1280"];
m1_801 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="DynamicReflectionDelegateFactoryTests.cs", label="c != char.MaxValue", span="1281-1281"];
m1_802 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="DynamicReflectionDelegateFactoryTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", span="1261-1261"];
m1_152 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(decimal?)", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(decimal?)", span="1135-1135"];
m1_932 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m1_150 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(double?)", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(double?)", span="466-466"];
m1_126 [cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.StructMethod(Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.TestStruct)", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.StructMethod(Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.TestStruct)", span="215-215"];
m1_129 [cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.CreateStructMethodCall()", color=green, community=0, file="DynamicReflectionDelegateFactoryTests.cs", label="1: Entry Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.CreateStructMethodCall()", span="221-221"];
m1_128 [cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.StructMethod(Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.TestStruct)", file="DynamicReflectionDelegateFactoryTests.cs", label="Exit Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.StructMethod(Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.TestStruct)", span="215-215"];
m1_130 [cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.CreateStructMethodCall()", file="DynamicReflectionDelegateFactoryTests.cs", label="MethodInfo methodInfo = typeof(DynamicReflectionDelegateFactoryTests).GetMethod(nameof(StructMethod), new[] { typeof(TestStruct) })", span="223-223"];
m1_137 [cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.CreateStructMethodCall()", file="DynamicReflectionDelegateFactoryTests.cs", label="Exit Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.CreateStructMethodCall()", span="221-221"];
m1_102 [cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.CreatePropertyGetter()", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.CreatePropertyGetter()", span="176-176"];
m1_103 [cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.CreatePropertyGetter()", file="DynamicReflectionDelegateFactoryTests.cs", label="PropertyInfo namePropertyInfo = typeof(Person).GetProperty(nameof(Person.Name))", span="178-178"];
m1_104 [cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.CreatePropertyGetter()", file="DynamicReflectionDelegateFactoryTests.cs", label="Assert.IsNotNull(namePropertyInfo)", span="180-180"];
m1_105 [cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.CreatePropertyGetter()", file="DynamicReflectionDelegateFactoryTests.cs", label="var call = DynamicReflectionDelegateFactory.Instance.CreateGet<Person>(namePropertyInfo)", span="182-182"];
m1_106 [cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.CreatePropertyGetter()", file="DynamicReflectionDelegateFactoryTests.cs", label="Person p = new Person()", span="184-184"];
m1_107 [cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.CreatePropertyGetter()", file="DynamicReflectionDelegateFactoryTests.cs", label="p.Name = ''Name!''", span="185-185"];
m1_108 [cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.CreatePropertyGetter()", file="DynamicReflectionDelegateFactoryTests.cs", label="object result = call(p)", span="187-187"];
m1_109 [cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.CreatePropertyGetter()", file="DynamicReflectionDelegateFactoryTests.cs", label="Assert.IsNotNull(result)", span="188-188"];
m1_110 [cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.CreatePropertyGetter()", file="DynamicReflectionDelegateFactoryTests.cs", label="Assert.AreEqual(''Name!'', (string)result)", span="190-190"];
m1_111 [cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.CreatePropertyGetter()", file="DynamicReflectionDelegateFactoryTests.cs", label="Exit Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.CreatePropertyGetter()", span="176-176"];
m1_112 [cluster="Unk.nameof", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Unk.nameof", span=""];
m1_113 [cluster="Unk.call", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Unk.call", span=""];
m1_114 [cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.ConstructorStruct()", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.ConstructorStruct()", span="194-194"];
m1_115 [cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.ConstructorStruct()", color=red, community=0, file="DynamicReflectionDelegateFactoryTests.cs", label="1: Func<object> creator1 = DynamicReflectionDelegateFactory.Instance.CreateDefaultConstructor<object>(typeof(MyStruct))", span="196-196"];
m1_116 [cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.ConstructorStruct()", file="DynamicReflectionDelegateFactoryTests.cs", label="MyStruct myStruct1 = (MyStruct)creator1.Invoke()", span="197-197"];
m1_117 [cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.ConstructorStruct()", file="DynamicReflectionDelegateFactoryTests.cs", label="Assert.AreEqual(0, myStruct1.IntProperty)", span="198-198"];
m1_118 [cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.ConstructorStruct()", color=red, community=0, file="DynamicReflectionDelegateFactoryTests.cs", label="1: Func<MyStruct> creator2 = DynamicReflectionDelegateFactory.Instance.CreateDefaultConstructor<MyStruct>(typeof(MyStruct))", span="200-200"];
m1_119 [cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.ConstructorStruct()", file="DynamicReflectionDelegateFactoryTests.cs", label="MyStruct myStruct2 = creator2.Invoke()", span="201-201"];
m1_120 [cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.ConstructorStruct()", file="DynamicReflectionDelegateFactoryTests.cs", label="Assert.AreEqual(0, myStruct2.IntProperty)", span="202-202"];
m1_121 [cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.ConstructorStruct()", file="DynamicReflectionDelegateFactoryTests.cs", label="Exit Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.ConstructorStruct()", span="194-194"];
m1_122 [cluster="Unk.Invoke", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Unk.Invoke", span=""];
m1_127 [cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.StructMethod(Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.TestStruct)", file="DynamicReflectionDelegateFactoryTests.cs", label="return new TestStruct(s.Value + s.Value);", span="217-217"];
m1_131 [cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.CreateStructMethodCall()", file="DynamicReflectionDelegateFactoryTests.cs", label="Assert.IsNotNull(methodInfo)", span="225-225"];
m1_132 [cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.CreateStructMethodCall()", file="DynamicReflectionDelegateFactoryTests.cs", label="MethodCall<object, object> call = DynamicReflectionDelegateFactory.Instance.CreateMethodCall<object>(methodInfo)", span="227-227"];
m1_133 [cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.CreateStructMethodCall()", file="DynamicReflectionDelegateFactoryTests.cs", label="object result = call(null, new TestStruct(123))", span="229-229"];
m1_134 [cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.CreateStructMethodCall()", file="DynamicReflectionDelegateFactoryTests.cs", label="Assert.IsNotNull(result)", span="230-230"];
m1_136 [cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.CreateStructMethodCall()", file="DynamicReflectionDelegateFactoryTests.cs", label="Assert.AreEqual(246, s.Value)", span="233-233"];
m1_135 [cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.CreateStructMethodCall()", file="DynamicReflectionDelegateFactoryTests.cs", label="TestStruct s = (TestStruct)result", span="232-232"];
m1_138 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="DynamicReflectionDelegateFactoryTests.cs", label="out Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.TestStruct", span=""];
m1_44 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="DynamicReflectionDelegateFactoryTests.cs", label="Assert.IsFalse(ms.CanRead)", span="113-113"];
m1_45 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", color=red, community=0, file="DynamicReflectionDelegateFactoryTests.cs", label="0: ms = new MemoryStream()", span="115-115"];
m1_46 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", color=green, community=0, file="DynamicReflectionDelegateFactoryTests.cs", label="1: writer = new JsonTextWriter(new StreamWriter(ms)) { CloseOutput = false }", span="116-116"];
m1_54 [cluster="Newtonsoft.Json.Tests.TestObjects.Organization.Person.Person()", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Organization.Person.Person()", span="34-34"];
m1_382 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(double)", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(double)", span="456-456"];
m1_620 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", span="975-975"];
m1_636 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="DynamicReflectionDelegateFactoryTests.cs", label="string result = sb.ToString()", span="1004-1004"];
m1_627 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="DynamicReflectionDelegateFactoryTests.cs", label="Assert.AreEqual(Formatting.Indented, jsonWriter.Formatting)", span="986-986"];
m1_625 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="DynamicReflectionDelegateFactoryTests.cs", label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="983-983"];
m1_621 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="DynamicReflectionDelegateFactoryTests.cs", label="StringBuilder sb = new StringBuilder()", span="977-977"];
m1_635 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="DynamicReflectionDelegateFactoryTests.cs", label="string expected = @''[\r\n  ''''SGVsbG8gd29ybGQu'''',\r\n  ''''SGVsbG8gd29ybGQu'''',\r\n  ''''SGVsbG8gd29ybGQu'''',\r\n  null,\r\n  null\r\n]''", span="997-1003"];
m1_637 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="DynamicReflectionDelegateFactoryTests.cs", label="StringAssert.AreEqual(expected, result)", span="1006-1006"];
m1_626 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.Formatting = Formatting.Indented", span="985-985"];
m1_628 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteStartArray()", span="988-988"];
m1_622 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="DynamicReflectionDelegateFactoryTests.cs", label="StringWriter sw = new StringWriter(sb)", span="978-978"];
m1_624 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="DynamicReflectionDelegateFactoryTests.cs", label="byte[] data = Encoding.UTF8.GetBytes(text)", span="981-981"];
m1_629 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue(data)", span="989-989"];
m1_630 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue(data)", span="990-990"];
m1_631 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue((object)data)", span="991-991"];
m1_632 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue((byte[])null)", span="992-992"];
m1_633 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue((Uri)null)", span="993-993"];
m1_634 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteEndArray()", span="994-994"];
m1_623 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="DynamicReflectionDelegateFactoryTests.cs", label="string text = ''Hello world.''", span="980-980"];
m1_638 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="DynamicReflectionDelegateFactoryTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", span="975-975"];
m1_383 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(float)", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(float)", span="429-429"];
m1_12 [cluster="Unk.IsNotNull", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Unk.IsNotNull", span=""];
m1_639 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.Uri)", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(System.Uri)", span="673-673"];
m1_772 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.TimeSpan)", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(System.TimeSpan)", span="653-653"];
m1_946 [cluster="Newtonsoft.Json.JsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", span="198-198"];
m1_533 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonToken)", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonToken)", span="468-468"];
m1_571 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", span="901-901"];
m1_597 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="DynamicReflectionDelegateFactoryTests.cs", label="string result = sb.ToString()", span="942-942"];
m1_577 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="DynamicReflectionDelegateFactoryTests.cs", label="Assert.AreEqual(Formatting.Indented, jsonWriter.Formatting)", span="911-911"];
m1_579 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="DynamicReflectionDelegateFactoryTests.cs", label="Assert.AreEqual(5, jsonWriter.Indentation)", span="914-914"];
m1_581 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="DynamicReflectionDelegateFactoryTests.cs", label="Assert.AreEqual('_', jsonWriter.IndentChar)", span="916-916"];
m1_583 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="DynamicReflectionDelegateFactoryTests.cs", label="Assert.AreEqual(true, jsonWriter.QuoteName)", span="918-918"];
m1_585 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="DynamicReflectionDelegateFactoryTests.cs", label="Assert.AreEqual('\'', jsonWriter.QuoteChar)", span="920-920"];
m1_590 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="DynamicReflectionDelegateFactoryTests.cs", label="Assert.AreEqual('?', jsonWriter.IndentChar)", span="928-928"];
m1_592 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="DynamicReflectionDelegateFactoryTests.cs", label="Assert.AreEqual(6, jsonWriter.Indentation)", span="930-930"];
m1_574 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="DynamicReflectionDelegateFactoryTests.cs", label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="906-906"];
m1_572 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="DynamicReflectionDelegateFactoryTests.cs", label="StringBuilder sb = new StringBuilder()", span="903-903"];
m1_596 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="DynamicReflectionDelegateFactoryTests.cs", label="string expected = @''{\r\n_____'propertyName': NaN,\r\n??????'prop2': 123\r\n}''", span="938-941"];
m1_598 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="DynamicReflectionDelegateFactoryTests.cs", label="StringAssert.AreEqual(expected, result)", span="944-944"];
m1_576 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.FloatFormatHandling = FloatFormatHandling.Symbol", span="909-909"];
m1_578 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.Indentation = 5", span="913-913"];
m1_580 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.IndentChar = '_'", span="915-915"];
m1_582 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.QuoteName = true", span="917-917"];
m1_584 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.QuoteChar = '\''", span="919-919"];
m1_586 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteStartObject()", span="922-922"];
m1_589 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.IndentChar = '?'", span="927-927"];
m1_591 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.Indentation = 6", span="929-929"];
m1_593 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WritePropertyName(''prop2'')", span="932-932"];
m1_573 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="DynamicReflectionDelegateFactoryTests.cs", label="StringWriter sw = new StringWriter(sb)", span="904-904"];
m1_575 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.Formatting = Formatting.Indented", span="908-908"];
m1_587 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WritePropertyName(''propertyName'')", span="924-924"];
m1_588 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue(double.NaN)", span="925-925"];
m1_594 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue(123)", span="933-933"];
m1_595 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteEndObject()", span="935-935"];
m1_599 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="DynamicReflectionDelegateFactoryTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", span="901-901"];
m1_141 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(bool?)", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(bool?)", span="1061-1061"];
m1_362 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", span="571-571"];
m1_379 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="DynamicReflectionDelegateFactoryTests.cs", label="string result = sb.ToString()", span="602-602"];
m1_365 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="DynamicReflectionDelegateFactoryTests.cs", label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="576-576"];
m1_363 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="DynamicReflectionDelegateFactoryTests.cs", label="StringBuilder sb = new StringBuilder()", span="573-573"];
m1_377 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.Flush()", span="591-591"];
m1_378 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="DynamicReflectionDelegateFactoryTests.cs", label="string expected = @''[\r\n  'NaN',\r\n  'Infinity',\r\n  '-Infinity',\r\n  'NaN',\r\n  'Infinity',\r\n  '-Infinity'\r\n]''", span="594-601"];
m1_380 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="DynamicReflectionDelegateFactoryTests.cs", label="StringAssert.AreEqual(expected, result)", span="604-604"];
m1_364 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="DynamicReflectionDelegateFactoryTests.cs", label="StringWriter sw = new StringWriter(sb)", span="574-574"];
m1_366 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.Formatting = Formatting.Indented", span="578-578"];
m1_367 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.FloatFormatHandling = FloatFormatHandling.String", span="579-579"];
m1_368 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.QuoteChar = '\''", span="580-580"];
m1_369 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteStartArray()", span="582-582"];
m1_370 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue(double.NaN)", span="583-583"];
m1_371 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue(double.PositiveInfinity)", span="584-584"];
m1_372 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue(double.NegativeInfinity)", span="585-585"];
m1_373 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue(float.NaN)", span="586-586"];
m1_374 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue(float.PositiveInfinity)", span="587-587"];
m1_375 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue(float.NegativeInfinity)", span="588-588"];
m1_376 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteEndArray()", span="589-589"];
m1_381 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="DynamicReflectionDelegateFactoryTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", span="571-571"];
m1_148 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(long?)", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(long?)", span="1012-1012"];
m1_438 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="72-72"];
m1_930 [cluster="string.String(char[])", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry string.String(char[])", span="0-0"];
m1_915 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, bool)", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, bool)", span="444-444"];
m1_805 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", span="1286-1286"];
m1_808 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="DynamicReflectionDelegateFactoryTests.cs", label=appendDelimiters, span="1289-1289"];
m1_809 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="DynamicReflectionDelegateFactoryTests.cs", label="writer.Write(delimiter)", span="1290-1290"];
m1_810 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="DynamicReflectionDelegateFactoryTests.cs", label="s != null", span="1292-1292"];
m1_815 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="DynamicReflectionDelegateFactoryTests.cs", label="i < s.Length", span="1298-1298"];
m1_816 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="DynamicReflectionDelegateFactoryTests.cs", label="var c = s[i]", span="1300-1300"];
m1_817 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="DynamicReflectionDelegateFactoryTests.cs", label="c >= ' ' && c < 128 && c != '\\' && c != delimiter", span="1303-1303"];
m1_851 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="DynamicReflectionDelegateFactoryTests.cs", label="chars = s.ToCharArray()", span="1369-1369"];
m1_852 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="DynamicReflectionDelegateFactoryTests.cs", label="writer.Write(chars, lastWritePosition, i - lastWritePosition)", span="1372-1372"];
m1_855 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="DynamicReflectionDelegateFactoryTests.cs", label="writer.Write(escapedValue)", span="1377-1377"];
m1_856 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="DynamicReflectionDelegateFactoryTests.cs", label="writer.Write(unicodeBuffer)", span="1379-1379"];
m1_859 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="DynamicReflectionDelegateFactoryTests.cs", label="writer.Write(s)", span="1385-1385"];
m1_861 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="DynamicReflectionDelegateFactoryTests.cs", label="chars = s.ToCharArray()", span="1390-1390"];
m1_862 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="DynamicReflectionDelegateFactoryTests.cs", label="writer.Write(chars, lastWritePosition, s.Length - lastWritePosition)", span="1393-1393"];
m1_863 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="DynamicReflectionDelegateFactoryTests.cs", label=appendDelimiters, span="1398-1398"];
m1_864 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="DynamicReflectionDelegateFactoryTests.cs", label="writer.Write(delimiter)", span="1399-1399"];
m1_811 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="DynamicReflectionDelegateFactoryTests.cs", label="char[] chars = null", span="1294-1294"];
m1_814 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="DynamicReflectionDelegateFactoryTests.cs", label="int i = 0", span="1298-1298"];
m1_857 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="DynamicReflectionDelegateFactoryTests.cs", label="i++", span="1298-1298"];
m1_848 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="DynamicReflectionDelegateFactoryTests.cs", label="escapedValue == null", span="1363-1363"];
m1_858 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="DynamicReflectionDelegateFactoryTests.cs", label="lastWritePosition == 0", span="1382-1382"];
m1_819 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="DynamicReflectionDelegateFactoryTests.cs", label=c, span="1308-1308"];
m1_842 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="DynamicReflectionDelegateFactoryTests.cs", label="c <= '\u001f'", span="1346-1346"];
m1_845 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="DynamicReflectionDelegateFactoryTests.cs", label="StringUtils.ToCharAsUnicode(c, unicodeBuffer)", span="1351-1351"];
m1_818 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="DynamicReflectionDelegateFactoryTests.cs", label="string escapedValue", span="1306-1306"];
m1_850 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="DynamicReflectionDelegateFactoryTests.cs", label="chars == null", span="1368-1368"];
m1_860 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="DynamicReflectionDelegateFactoryTests.cs", label="chars == null", span="1389-1389"];
m1_813 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="DynamicReflectionDelegateFactoryTests.cs", label="int lastWritePosition = 0", span="1296-1296"];
m1_853 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="DynamicReflectionDelegateFactoryTests.cs", label="lastWritePosition = i + 1", span="1375-1375"];
m1_847 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="DynamicReflectionDelegateFactoryTests.cs", label="escapedValue = null", span="1358-1358"];
m1_846 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="DynamicReflectionDelegateFactoryTests.cs", label="escapedValue = EscapedUnicodeText", span="1354-1354"];
m1_854 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="DynamicReflectionDelegateFactoryTests.cs", label="!string.Equals(escapedValue, EscapedUnicodeText)", span="1376-1376"];
m1_812 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="DynamicReflectionDelegateFactoryTests.cs", label="char[] unicodeBuffer = null", span="1295-1295"];
m1_844 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="DynamicReflectionDelegateFactoryTests.cs", label="unicodeBuffer = new char[6]", span="1349-1349"];
m1_849 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="DynamicReflectionDelegateFactoryTests.cs", label="i > lastWritePosition", span="1366-1366"];
m1_821 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="DynamicReflectionDelegateFactoryTests.cs", label="escapedValue = @''\t''", span="1311-1311"];
m1_823 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="DynamicReflectionDelegateFactoryTests.cs", label="escapedValue = @''\n''", span="1314-1314"];
m1_825 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="DynamicReflectionDelegateFactoryTests.cs", label="escapedValue = @''\r''", span="1317-1317"];
m1_827 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="DynamicReflectionDelegateFactoryTests.cs", label="escapedValue = @''\f''", span="1320-1320"];
m1_829 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="DynamicReflectionDelegateFactoryTests.cs", label="escapedValue = @''\b''", span="1323-1323"];
m1_831 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="DynamicReflectionDelegateFactoryTests.cs", label="escapedValue = @''\\''", span="1326-1326"];
m1_833 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="DynamicReflectionDelegateFactoryTests.cs", label="escapedValue = @''\u0085''", span="1329-1329"];
m1_835 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="DynamicReflectionDelegateFactoryTests.cs", label="escapedValue = @''\u2028''", span="1332-1332"];
m1_837 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="DynamicReflectionDelegateFactoryTests.cs", label="escapedValue = @''\u2029''", span="1335-1335"];
m1_839 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="DynamicReflectionDelegateFactoryTests.cs", label="escapedValue = @''\'''", span="1339-1339"];
m1_841 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="DynamicReflectionDelegateFactoryTests.cs", label="escapedValue = ''\\\''''", span="1343-1343"];
m1_820 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="DynamicReflectionDelegateFactoryTests.cs", label="'\t'", span="1310-1310"];
m1_822 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="DynamicReflectionDelegateFactoryTests.cs", label="'\n'", span="1313-1313"];
m1_824 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="DynamicReflectionDelegateFactoryTests.cs", label="'\r'", span="1316-1316"];
m1_826 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="DynamicReflectionDelegateFactoryTests.cs", label="'\f'", span="1319-1319"];
m1_828 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="DynamicReflectionDelegateFactoryTests.cs", label="'\b'", span="1322-1322"];
m1_830 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="DynamicReflectionDelegateFactoryTests.cs", label="'\\'", span="1325-1325"];
m1_832 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="DynamicReflectionDelegateFactoryTests.cs", label="'\u0085'", span="1328-1328"];
m1_834 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="DynamicReflectionDelegateFactoryTests.cs", label="'\u2028'", span="1331-1331"];
m1_836 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="DynamicReflectionDelegateFactoryTests.cs", label="'\u2029'", span="1334-1334"];
m1_838 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="DynamicReflectionDelegateFactoryTests.cs", label="'\''", span="1337-1337"];
m1_840 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="DynamicReflectionDelegateFactoryTests.cs", label="''''", span="1341-1341"];
m1_843 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="DynamicReflectionDelegateFactoryTests.cs", label="unicodeBuffer == null", span="1348-1348"];
m1_865 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="DynamicReflectionDelegateFactoryTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", span="1286-1286"];
m1_69 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteStartArray()", span="143-143"];
m1_473 [cluster="Newtonsoft.Json.JsonWriter.WriteEndConstructor()", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndConstructor()", span="398-398"];
m1_866 [cluster="System.IO.TextWriter.Write(char)", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry System.IO.TextWriter.Write(char)", span="0-0"];
m1_295 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", span="451-451"];
m1_311 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="DynamicReflectionDelegateFactoryTests.cs", label="string result = sb.ToString()", span="481-481"];
m1_298 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="DynamicReflectionDelegateFactoryTests.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="456-456"];
m1_296 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="DynamicReflectionDelegateFactoryTests.cs", label="StringBuilder sb = new StringBuilder()", span="453-453"];
m1_310 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="DynamicReflectionDelegateFactoryTests.cs", label="string expected = @''[\r\n  NaN,\r\n  Infinity,\r\n  -Infinity,\r\n  NaN,\r\n  Infinity,\r\n  -Infinity\r\n]''", span="473-480"];
m1_312 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="DynamicReflectionDelegateFactoryTests.cs", label="StringAssert.AreEqual(expected, result)", span="483-483"];
m1_297 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="DynamicReflectionDelegateFactoryTests.cs", label="StringWriter sw = new StringWriter(sb)", span="454-454"];
m1_299 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.Formatting = Formatting.Indented", span="458-458"];
m1_300 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.FloatFormatHandling = FloatFormatHandling.Symbol", span="459-459"];
m1_301 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteStartArray()", span="461-461"];
m1_302 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue(double.NaN)", span="462-462"];
m1_303 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue(double.PositiveInfinity)", span="463-463"];
m1_304 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue(double.NegativeInfinity)", span="464-464"];
m1_305 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue(float.NaN)", span="465-465"];
m1_306 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue(float.PositiveInfinity)", span="466-466"];
m1_307 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue(float.NegativeInfinity)", span="467-467"];
m1_308 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteEndArray()", span="468-468"];
m1_309 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.Flush()", span="470-470"];
m1_313 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="DynamicReflectionDelegateFactoryTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", span="451-451"];
m1_342 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(float?)", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(float?)", span="1037-1037"];
m1_63 [cluster="lambda expression", color=red, community=0, file="DynamicReflectionDelegateFactoryTests.cs", label="1: Action<object, object> setter = DynamicReflectionDelegateFactory.Instance.CreateSet<object>(typeof(Movie).GetProperty(''Name''))", span="117-117"];
m1_686 [cluster="Newtonsoft.Json.JsonTextWriter.WriteNull()", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteNull()", span="337-337"];
m1_868 [cluster="string.ToCharArray()", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry string.ToCharArray()", span="0-0"];
m1_140 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(char?)", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(char?)", span="1098-1098"];
m1_47 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="DynamicReflectionDelegateFactoryTests.cs", label="Assert.IsTrue(ms.CanRead)", span="118-118"];
m1_265 [cluster="Newtonsoft.Json.JsonWriter.WriteEnd()", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEnd()", span="425-425"];
m1_53 [cluster="lambda expression", file="DynamicReflectionDelegateFactoryTests.cs", label="Exit lambda expression", span="98-106"];
m1_929 [cluster="Newtonsoft.Json.JsonWriter.SetWriteState(Newtonsoft.Json.JsonToken, object)", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.JsonWriter.SetWriteState(Newtonsoft.Json.JsonToken, object)", span="1440-1440"];
m1_685 [cluster="Newtonsoft.Json.JsonTextWriter.WriteStartConstructor(string)", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteStartConstructor(string)", span="185-185"];
m1_774 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.Guid)", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(System.Guid)", span="632-632"];
m1_740 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEndOnProperty()", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEndOnProperty()", span="1180-1180"];
m1_747 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEndOnProperty()", file="DynamicReflectionDelegateFactoryTests.cs", label="Assert.AreEqual(''{'Blah':null}'', sw.ToString())", span="1190-1190"];
m1_742 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEndOnProperty()", file="DynamicReflectionDelegateFactoryTests.cs", label="JsonTextWriter writer = new JsonTextWriter(sw)", span="1183-1183"];
m1_741 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEndOnProperty()", file="DynamicReflectionDelegateFactoryTests.cs", label="StringWriter sw = new StringWriter()", span="1182-1182"];
m1_746 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEndOnProperty()", file="DynamicReflectionDelegateFactoryTests.cs", label="writer.WriteEnd()", span="1188-1188"];
m1_743 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEndOnProperty()", file="DynamicReflectionDelegateFactoryTests.cs", label="writer.QuoteChar = '\''", span="1184-1184"];
m1_744 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEndOnProperty()", file="DynamicReflectionDelegateFactoryTests.cs", label="writer.WriteStartObject()", span="1186-1186"];
m1_745 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEndOnProperty()", file="DynamicReflectionDelegateFactoryTests.cs", label="writer.WritePropertyName(''Blah'')", span="1187-1187"];
m1_748 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEndOnProperty()", file="DynamicReflectionDelegateFactoryTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEndOnProperty()", span="1180-1180"];
m1_600 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(int)", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(int)", span="387-387"];
m1_905 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="874-874"];
m1_146 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(int?)", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(int?)", span="987-987"];
m1_145 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(ushort?)", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(ushort?)", span="1086-1086"];
m1_13 [cluster="Unk.AreEqual", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Unk.AreEqual", span=""];
m1_218 [cluster="Newtonsoft.Json.JsonWriter.WriteComment(string)", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteComment(string)", span="1246-1246"];
m1_70 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue('@')", span="144-144"];
m1_71 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", color=red, community=0, file="DynamicReflectionDelegateFactoryTests.cs", label="1: jsonWriter.WriteValue(''\r\n\t\f\b?{\\r\\n\''\''')", span="145-145"];
m1_72 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue(true)", span="146-146"];
m1_90 [cluster="System.Version.Version(string)", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry System.Version.Version(string)", span="0-0"];
m1_519 [cluster="System.Console.WriteLine(string)", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m1_902 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m1_887 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.CustomJsonTextWriter(System.IO.TextWriter)", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.Tests.CustomJsonTextWriter.CustomJsonTextWriter(System.IO.TextWriter)", span="1501-1501"];
m1_916 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.CustomJsonTextWriter(System.IO.TextWriter)", file="DynamicReflectionDelegateFactoryTests.cs", label="_writer = textWriter", span="1503-1503"];
m1_917 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.CustomJsonTextWriter(System.IO.TextWriter)", file="DynamicReflectionDelegateFactoryTests.cs", label="Exit Newtonsoft.Json.Tests.CustomJsonTextWriter.CustomJsonTextWriter(System.IO.TextWriter)", span="1501-1501"];
m1_920 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string, bool)", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string, bool)", span="1511-1511"];
m1_921 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string, bool)", file="DynamicReflectionDelegateFactoryTests.cs", label="SetWriteState(JsonToken.PropertyName, name)", span="1513-1513"];
m1_922 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string, bool)", file="DynamicReflectionDelegateFactoryTests.cs", label=QuoteName, span="1515-1515"];
m1_923 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string, bool)", file="DynamicReflectionDelegateFactoryTests.cs", label="_writer.Write(QuoteChar)", span="1516-1516"];
m1_924 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string, bool)", file="DynamicReflectionDelegateFactoryTests.cs", label="_writer.Write(new string(name.ToCharArray().Reverse().ToArray()))", span="1518-1518"];
m1_925 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string, bool)", file="DynamicReflectionDelegateFactoryTests.cs", label=QuoteName, span="1520-1520"];
m1_926 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string, bool)", file="DynamicReflectionDelegateFactoryTests.cs", label="_writer.Write(QuoteChar)", span="1521-1521"];
m1_927 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string, bool)", file="DynamicReflectionDelegateFactoryTests.cs", label="_writer.Write(':')", span="1523-1523"];
m1_928 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string, bool)", file="DynamicReflectionDelegateFactoryTests.cs", label="Exit Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string, bool)", span="1511-1511"];
m1_22 [cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.ConstructorWithRefStringAndOutBool()", file="DynamicReflectionDelegateFactoryTests.cs", label="object[] args = new object[] { ''Input'', false }", span="73-73"];
m1_23 [cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.ConstructorWithRefStringAndOutBool()", file="DynamicReflectionDelegateFactoryTests.cs", label="OutAndRefTestClass o = (OutAndRefTestClass)creator(args)", span="74-74"];
m1_24 [cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.ConstructorWithRefStringAndOutBool()", file="DynamicReflectionDelegateFactoryTests.cs", label="Assert.IsNotNull(o)", span="75-75"];
m1_25 [cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.ConstructorWithRefStringAndOutBool()", file="DynamicReflectionDelegateFactoryTests.cs", label="Assert.AreEqual(''Input'', o.Input)", span="76-76"];
m1_26 [cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.ConstructorWithRefStringAndOutBool()", file="DynamicReflectionDelegateFactoryTests.cs", label="Assert.AreEqual(true, o.B1)", span="77-77"];
m1_30 [cluster="lambda expression", file="DynamicReflectionDelegateFactoryTests.cs", label="Exit lambda expression", span="69-69"];
m1_27 [cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.ConstructorWithRefStringAndOutBool()", file="DynamicReflectionDelegateFactoryTests.cs", label="Exit Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.ConstructorWithRefStringAndOutBool()", span="67-67"];
m1_28 [cluster="lambda expression", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry lambda expression", span="69-69"];
m1_29 [cluster="lambda expression", file="DynamicReflectionDelegateFactoryTests.cs", label="c.GetParameters().Count() == 2", span="69-69"];
m1_217 [cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="407-407"];
m1_474 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", span="748-748"];
m1_496 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="DynamicReflectionDelegateFactoryTests.cs", label="Assert.AreEqual(@''[0.0,0.0,0.1,1.0,1.000001,1E-06,4.94065645841247E-324,Infinity,-Infinity,NaN,1.7976931348623157E+308,-1.7976931348623157E+308,Infinity,-Infinity,NaN]'', sb.ToString())", span="778-778"];
m1_477 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="DynamicReflectionDelegateFactoryTests.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="753-753"];
m1_475 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="DynamicReflectionDelegateFactoryTests.cs", label="StringBuilder sb = new StringBuilder()", span="750-750"];
m1_495 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteEndArray()", span="775-775"];
m1_476 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="DynamicReflectionDelegateFactoryTests.cs", label="StringWriter sw = new StringWriter(sb)", span="751-751"];
m1_478 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.FloatFormatHandling = FloatFormatHandling.Symbol", span="755-755"];
m1_479 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteStartArray()", span="757-757"];
m1_480 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue(0.0)", span="759-759"];
m1_481 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue(0f)", span="760-760"];
m1_482 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue(0.1)", span="761-761"];
m1_483 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue(1.0)", span="762-762"];
m1_484 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue(1.000001)", span="763-763"];
m1_485 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue(0.000001)", span="764-764"];
m1_486 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue(double.Epsilon)", span="765-765"];
m1_487 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue(double.PositiveInfinity)", span="766-766"];
m1_488 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue(double.NegativeInfinity)", span="767-767"];
m1_489 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue(double.NaN)", span="768-768"];
m1_490 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue(double.MaxValue)", span="769-769"];
m1_491 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue(double.MinValue)", span="770-770"];
m1_492 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue(float.PositiveInfinity)", span="771-771"];
m1_493 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue(float.NegativeInfinity)", span="772-772"];
m1_494 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue(float.NaN)", span="773-773"];
m1_497 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="DynamicReflectionDelegateFactoryTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", span="748-748"];
m1_941 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", span="1545-1545"];
m1_943 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="DynamicReflectionDelegateFactoryTests.cs", label="_writer.Write(''}}}'')", span="1548-1548"];
m1_944 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="DynamicReflectionDelegateFactoryTests.cs", label="base.WriteEnd(token)", span="1550-1550"];
m1_942 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="DynamicReflectionDelegateFactoryTests.cs", label="token == JsonToken.EndObject", span="1547-1547"];
m1_945 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="DynamicReflectionDelegateFactoryTests.cs", label="Exit Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", span="1545-1545"];
m1_892 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteDictionaryNames()", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteDictionaryNames()", span="1423-1423"];
m1_897 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteDictionaryNames()", file="DynamicReflectionDelegateFactoryTests.cs", label="var writer = new JsonTextWriter(stringWriter) { QuoteName = false }", span="1436-1436"];
m1_896 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteDictionaryNames()", file="DynamicReflectionDelegateFactoryTests.cs", label="var stringWriter = new StringWriter()", span="1434-1434"];
m1_898 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteDictionaryNames()", file="DynamicReflectionDelegateFactoryTests.cs", label="serializer.Serialize(writer, d)", span="1438-1438"];
m1_899 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteDictionaryNames()", file="DynamicReflectionDelegateFactoryTests.cs", label="writer.Close()", span="1439-1439"];
m1_900 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteDictionaryNames()", file="DynamicReflectionDelegateFactoryTests.cs", label="StringAssert.AreEqual(@''{\r\n  a: 1\r\n}'', stringWriter.ToString())", span="1442-1444"];
m1_895 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteDictionaryNames()", file="DynamicReflectionDelegateFactoryTests.cs", label="var serializer = JsonSerializer.Create(jsonSerializerSettings)", span="1433-1433"];
m1_893 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteDictionaryNames()", file="DynamicReflectionDelegateFactoryTests.cs", label="var d = new Dictionary<string, int>\r\n            {\r\n                { ''a'', 1 },\r\n            }", span="1425-1428"];
m1_894 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteDictionaryNames()", file="DynamicReflectionDelegateFactoryTests.cs", label="var jsonSerializerSettings = new JsonSerializerSettings\r\n            {\r\n                Formatting = Formatting.Indented,\r\n            }", span="1429-1432"];
m1_901 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteDictionaryNames()", file="DynamicReflectionDelegateFactoryTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteDictionaryNames()", span="1423-1423"];
m1_561 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.InvalidQuoteChar()", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.InvalidQuoteChar()", span="885-885"];
m1_562 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.InvalidQuoteChar()", file="DynamicReflectionDelegateFactoryTests.cs", label="ExceptionAssert.Throws<ArgumentException>(() =>\r\n            {\r\n                StringBuilder sb = new StringBuilder();\r\n                StringWriter sw = new StringWriter(sb);\r\n\r\n                using (JsonTextWriter jsonWriter = new JsonTextWriter(sw))\r\n                {\r\n                    jsonWriter.Formatting = Formatting.Indented;\r\n                    jsonWriter.QuoteChar = '*';\r\n                }\r\n            }, @''Invalid JavaScript string quote character. Valid quote characters are ' and ''''.'')", span="887-897"];
m1_563 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.InvalidQuoteChar()", file="DynamicReflectionDelegateFactoryTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.InvalidQuoteChar()", span="885-885"];
m1_890 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteNull()", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteNull()", span="1526-1526"];
m1_933 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteNull()", file="DynamicReflectionDelegateFactoryTests.cs", label="SetWriteState(JsonToken.Null, null)", span="1528-1528"];
m1_934 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteNull()", file="DynamicReflectionDelegateFactoryTests.cs", label="_writer.Write(''NULL!!!'')", span="1530-1530"];
m1_935 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteNull()", file="DynamicReflectionDelegateFactoryTests.cs", label="Exit Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteNull()", span="1526-1526"];
m1_770 [cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", span="0-0"];
m1_153 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.DateTime?)", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.DateTime?)", span="1147-1147"];
m1_15 [cluster="lambda expression", file="DynamicReflectionDelegateFactoryTests.cs", label="c.GetParameters().Count() == 1", span="56-56"];
m1_399 [cluster="Newtonsoft.Json.JsonWriter.WriteRaw(string)", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteRaw(string)", span="798-798"];
m1_219 [cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="327-327"];
m1_546 [cluster="lambda expression", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry lambda expression", span="856-859"];
m1_41 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="DynamicReflectionDelegateFactoryTests.cs", label="JsonTextWriter writer = new JsonTextWriter(new StreamWriter(ms))", span="109-109"];
m1_42 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="DynamicReflectionDelegateFactoryTests.cs", label="Assert.IsTrue(ms.CanRead)", span="111-111"];
m1_43 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="DynamicReflectionDelegateFactoryTests.cs", label="writer.Close()", span="112-112"];
m1_48 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="DynamicReflectionDelegateFactoryTests.cs", label="writer.Close()", span="119-119"];
m1_49 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="DynamicReflectionDelegateFactoryTests.cs", label="Assert.IsTrue(ms.CanRead)", span="120-120"];
m1_50 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="DynamicReflectionDelegateFactoryTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", span="106-106"];
m1_51 [cluster="System.IO.StreamWriter.StreamWriter(System.IO.Stream)", color=red, community=0, file="DynamicReflectionDelegateFactoryTests.cs", label="0: Entry System.IO.StreamWriter.StreamWriter(System.IO.Stream)", span="0-0"];
m1_61 [cluster="System.IO.StringWriter.StringWriter()", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m1_66 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="DynamicReflectionDelegateFactoryTests.cs", label="StringBuilder sb = new StringBuilder()", span="138-138"];
m1_67 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="DynamicReflectionDelegateFactoryTests.cs", label="StringWriter sw = new StringWriter(sb)", span="139-139"];
m1_65 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", span="136-136"];
m1_68 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="DynamicReflectionDelegateFactoryTests.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="141-141"];
m1_73 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue(10)", span="147-147"];
m1_74 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue(10.99)", span="148-148"];
m1_75 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", color=red, community=0, file="DynamicReflectionDelegateFactoryTests.cs", label="1: jsonWriter.WriteValue(0.99)", span="149-149"];
m1_76 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue(0.000000000000000001d)", span="150-150"];
m1_77 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue(0.000000000000000001m)", span="151-151"];
m1_78 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", color=green, community=0, file="DynamicReflectionDelegateFactoryTests.cs", label="1: jsonWriter.WriteValue((string)null)", span="152-152"];
m1_79 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue((object)null)", span="153-153"];
m1_85 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="DynamicReflectionDelegateFactoryTests.cs", label="string result = sb.ToString()", span="161-161"];
m1_86 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="DynamicReflectionDelegateFactoryTests.cs", label="Assert.AreEqual(expected, result)", span="163-163"];
m1_87 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", color=red, community=0, file="DynamicReflectionDelegateFactoryTests.cs", label="1: Exit Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", span="136-136"];
m1_88 [cluster="Newtonsoft.Json.JsonWriter.WriteStartArray()", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartArray()", span="373-373"];
m1_174 [cluster="lambda expression", file="DynamicReflectionDelegateFactoryTests.cs", label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="245-245"];
m1_555 [cluster="lambda expression", file="DynamicReflectionDelegateFactoryTests.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="872-872"];
m1_567 [cluster="lambda expression", file="DynamicReflectionDelegateFactoryTests.cs", label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="892-892"];
m1_553 [cluster="lambda expression", file="DynamicReflectionDelegateFactoryTests.cs", label="StringBuilder sb = new StringBuilder()", span="869-869"];
m1_565 [cluster="lambda expression", file="DynamicReflectionDelegateFactoryTests.cs", label="StringBuilder sb = new StringBuilder()", span="889-889"];
m1_173 [cluster="lambda expression", file="DynamicReflectionDelegateFactoryTests.cs", label="StringWriter sw = new StringWriter()", span="244-244"];
m1_175 [cluster="lambda expression", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteStartArray()", span="247-247"];
m1_176 [cluster="lambda expression", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue(new Version(1, 1, 1, 1))", span="248-248"];
m1_177 [cluster="lambda expression", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteEndArray()", span="249-249"];
m1_544 [cluster="lambda expression", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteToken(JsonToken.Integer, ''three'')", span="853-853"];
m1_547 [cluster="lambda expression", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteToken(JsonToken.Integer)", span="858-858"];
m1_554 [cluster="lambda expression", file="DynamicReflectionDelegateFactoryTests.cs", label="StringWriter sw = new StringWriter(sb)", span="870-870"];
m1_556 [cluster="lambda expression", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteStartArray()", span="874-874"];
m1_557 [cluster="lambda expression", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue(0.0)", span="876-876"];
m1_558 [cluster="lambda expression", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteEndArray()", span="878-878"];
m1_559 [cluster="lambda expression", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteEndArray()", span="879-879"];
m1_566 [cluster="lambda expression", file="DynamicReflectionDelegateFactoryTests.cs", label="StringWriter sw = new StringWriter(sb)", span="890-890"];
m1_568 [cluster="lambda expression", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.Formatting = Formatting.Indented", span="894-894"];
m1_569 [cluster="lambda expression", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.QuoteChar = '*'", span="895-895"];
m1_552 [cluster="lambda expression", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry lambda expression", span="867-881"];
m1_564 [cluster="lambda expression", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry lambda expression", span="887-897"];
m1_172 [cluster="lambda expression", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry lambda expression", span="242-251"];
m1_178 [cluster="lambda expression", file="DynamicReflectionDelegateFactoryTests.cs", label="Exit lambda expression", span="242-251"];
m1_543 [cluster="lambda expression", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry lambda expression", span="851-854"];
m1_545 [cluster="lambda expression", file="DynamicReflectionDelegateFactoryTests.cs", label="Exit lambda expression", span="851-854"];
m1_548 [cluster="lambda expression", file="DynamicReflectionDelegateFactoryTests.cs", label="Exit lambda expression", span="856-859"];
m1_560 [cluster="lambda expression", file="DynamicReflectionDelegateFactoryTests.cs", label="Exit lambda expression", span="867-881"];
m1_570 [cluster="lambda expression", file="DynamicReflectionDelegateFactoryTests.cs", label="Exit lambda expression", span="887-897"];
m1_156 [cluster="System.DateTimeOffset.DateTimeOffset(long, System.TimeSpan)", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry System.DateTimeOffset.DateTimeOffset(long, System.TimeSpan)", span="0-0"];
m1_889 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string)", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string)", span="1506-1506"];
m1_918 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string)", file="DynamicReflectionDelegateFactoryTests.cs", label="WritePropertyName(name, true)", span="1508-1508"];
m1_919 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string)", file="DynamicReflectionDelegateFactoryTests.cs", label="Exit Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string)", span="1506-1506"];
m1_316 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", span="487-487"];
m1_338 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="DynamicReflectionDelegateFactoryTests.cs", label="string result = sb.ToString()", span="529-529"];
m1_319 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="DynamicReflectionDelegateFactoryTests.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="492-492"];
m1_317 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="DynamicReflectionDelegateFactoryTests.cs", label="StringBuilder sb = new StringBuilder()", span="489-489"];
m1_337 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="DynamicReflectionDelegateFactoryTests.cs", label="string expected = @''[\r\n  0.0,\r\n  0.0,\r\n  0.0,\r\n  0.0,\r\n  0.0,\r\n  0.0,\r\n  null,\r\n  null,\r\n  null,\r\n  null,\r\n  null,\r\n  null\r\n]''", span="515-528"];
m1_339 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="DynamicReflectionDelegateFactoryTests.cs", label="StringAssert.AreEqual(expected, result)", span="531-531"];
m1_318 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="DynamicReflectionDelegateFactoryTests.cs", label="StringWriter sw = new StringWriter(sb)", span="490-490"];
m1_320 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.Formatting = Formatting.Indented", span="494-494"];
m1_321 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.FloatFormatHandling = FloatFormatHandling.DefaultValue", span="495-495"];
m1_322 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteStartArray()", span="497-497"];
m1_323 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue(double.NaN)", span="498-498"];
m1_324 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue(double.PositiveInfinity)", span="499-499"];
m1_325 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue(double.NegativeInfinity)", span="500-500"];
m1_326 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue(float.NaN)", span="501-501"];
m1_327 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue(float.PositiveInfinity)", span="502-502"];
m1_328 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue(float.NegativeInfinity)", span="503-503"];
m1_329 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue((double?)double.NaN)", span="504-504"];
m1_330 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue((double?)double.PositiveInfinity)", span="505-505"];
m1_331 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue((double?)double.NegativeInfinity)", span="506-506"];
m1_332 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue((float?)float.NaN)", span="507-507"];
m1_333 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue((float?)float.PositiveInfinity)", span="508-508"];
m1_334 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue((float?)float.NegativeInfinity)", span="509-509"];
m1_335 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteEndArray()", span="510-510"];
m1_336 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.Flush()", span="512-512"];
m1_340 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="DynamicReflectionDelegateFactoryTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", span="487-487"];
m1_401 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", span="634-634"];
m1_414 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="DynamicReflectionDelegateFactoryTests.cs", label="string result = sb.ToString()", span="656-656"];
m1_404 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="DynamicReflectionDelegateFactoryTests.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="639-639"];
m1_402 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="DynamicReflectionDelegateFactoryTests.cs", label="StringBuilder sb = new StringBuilder()", span="636-636"];
m1_413 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="DynamicReflectionDelegateFactoryTests.cs", label="string expected = @''[\r\n  NaN,[1,2,3,4,5],[1,2,3,4,5],\r\n  NaN\r\n]''", span="652-655"];
m1_415 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="DynamicReflectionDelegateFactoryTests.cs", label="StringAssert.AreEqual(expected, result)", span="658-658"];
m1_403 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="DynamicReflectionDelegateFactoryTests.cs", label="StringWriter sw = new StringWriter(sb)", span="637-637"];
m1_405 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.Formatting = Formatting.Indented", span="641-641"];
m1_406 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.FloatFormatHandling = FloatFormatHandling.Symbol", span="642-642"];
m1_407 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteStartArray()", span="644-644"];
m1_408 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue(double.NaN)", span="645-645"];
m1_409 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteRaw('',[1,2,3,4,5]'')", span="646-646"];
m1_410 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteRaw('',[1,2,3,4,5]'')", span="647-647"];
m1_411 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue(float.NaN)", span="648-648"];
m1_412 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteEndArray()", span="649-649"];
m1_416 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="DynamicReflectionDelegateFactoryTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", span="634-634"];
m1_703 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetValues(System.Type)", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.Utilities.EnumUtils.GetValues(System.Type)", span="140-140"];
m1_220 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", span="317-317"];
m1_238 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="DynamicReflectionDelegateFactoryTests.cs", label="string result = sb.ToString()", span="350-350"];
m1_223 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="DynamicReflectionDelegateFactoryTests.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="322-322"];
m1_227 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue(''Intel'')", span="328-328"];
m1_229 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue(''500W'')", span="330-330"];
m1_232 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue(''DVD read/writer'')", span="333-333"];
m1_234 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue(''500 gigabyte hard drive'')", span="335-335"];
m1_235 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue(''200 gigabype hard drive'')", span="336-336"];
m1_221 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="DynamicReflectionDelegateFactoryTests.cs", label="StringBuilder sb = new StringBuilder()", span="319-319"];
m1_237 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="DynamicReflectionDelegateFactoryTests.cs", label="string expected = @''{\r\n  ''''CPU'''': ''''Intel'''',\r\n  ''''PSU'''': ''''500W'''',\r\n  ''''Drives'''': [\r\n    ''''DVD read/writer''''\r\n    /*(broken)*/,\r\n    ''''500 gigabyte hard drive'''',\r\n    ''''200 gigabype hard drive''''\r\n  ]\r\n}''", span="340-349"];
m1_239 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="DynamicReflectionDelegateFactoryTests.cs", label="StringAssert.AreEqual(expected, result)", span="352-352"];
m1_222 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="DynamicReflectionDelegateFactoryTests.cs", label="StringWriter sw = new StringWriter(sb)", span="320-320"];
m1_224 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.Formatting = Formatting.Indented", span="324-324"];
m1_225 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteStartObject()", span="326-326"];
m1_226 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WritePropertyName(''CPU'')", span="327-327"];
m1_228 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WritePropertyName(''PSU'')", span="329-329"];
m1_230 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WritePropertyName(''Drives'')", span="331-331"];
m1_231 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteStartArray()", span="332-332"];
m1_233 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteComment(''(broken)'')", span="334-334"];
m1_236 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.Close()", span="337-337"];
m1_240 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="DynamicReflectionDelegateFactoryTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", span="317-317"];
m1_216 [cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="357-357"];
m1_81 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteNull()", span="155-155"];
m1_439 [cluster="System.IO.StringReader.StringReader(string)", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry System.IO.StringReader.StringReader(string)", span="0-0"];
m1_749 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", span="1195-1195"];
m1_751 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="DynamicReflectionDelegateFactoryTests.cs", label="JsonTextWriter writer = new JsonTextWriter(sw)", span="1198-1198"];
m1_750 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="DynamicReflectionDelegateFactoryTests.cs", label="StringWriter sw = new StringWriter()", span="1197-1197"];
m1_752 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="DynamicReflectionDelegateFactoryTests.cs", label="writer.Formatting = Formatting.Indented", span="1199-1199"];
m1_753 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="DynamicReflectionDelegateFactoryTests.cs", label="writer.QuoteChar = '\''", span="1200-1200"];
m1_754 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="DynamicReflectionDelegateFactoryTests.cs", label="writer.WriteStartArray()", span="1202-1202"];
m1_755 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="DynamicReflectionDelegateFactoryTests.cs", label="writer.WriteValue(new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc))", span="1204-1204"];
m1_756 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="DynamicReflectionDelegateFactoryTests.cs", label="writer.WriteValue(new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero))", span="1205-1205"];
m1_757 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="DynamicReflectionDelegateFactoryTests.cs", label="writer.DateFormatHandling = DateFormatHandling.MicrosoftDateFormat", span="1207-1207"];
m1_758 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="DynamicReflectionDelegateFactoryTests.cs", label="writer.WriteValue(new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc))", span="1208-1208"];
m1_759 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="DynamicReflectionDelegateFactoryTests.cs", label="writer.WriteValue(new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero))", span="1209-1209"];
m1_760 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="DynamicReflectionDelegateFactoryTests.cs", label="writer.DateFormatString = ''yyyy gg''", span="1211-1211"];
m1_761 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="DynamicReflectionDelegateFactoryTests.cs", label="writer.WriteValue(new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc))", span="1212-1212"];
m1_762 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="DynamicReflectionDelegateFactoryTests.cs", label="writer.WriteValue(new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero))", span="1213-1213"];
m1_763 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="DynamicReflectionDelegateFactoryTests.cs", label="writer.WriteValue(new byte[] { 1, 2, 3 })", span="1215-1215"];
m1_764 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="DynamicReflectionDelegateFactoryTests.cs", label="writer.WriteValue(TimeSpan.Zero)", span="1216-1216"];
m1_765 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="DynamicReflectionDelegateFactoryTests.cs", label="writer.WriteValue(new Uri(''http://www.google.com/''))", span="1217-1217"];
m1_766 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="DynamicReflectionDelegateFactoryTests.cs", label="writer.WriteValue(Guid.Empty)", span="1218-1218"];
m1_767 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="DynamicReflectionDelegateFactoryTests.cs", label="writer.WriteEnd()", span="1220-1220"];
m1_768 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="DynamicReflectionDelegateFactoryTests.cs", label="StringAssert.AreEqual(@''[\r\n  '2000-01-01T01:01:01Z',\r\n  '2000-01-01T01:01:01+00:00',\r\n  '\/Date(946688461000)\/',\r\n  '\/Date(946688461000+0000)\/',\r\n  '2000 A.D.',\r\n  '2000 A.D.',\r\n  'AQID',\r\n  '00:00:00',\r\n  'http://www.google.com/',\r\n  '00000000-0000-0000-0000-000000000000'\r\n]'', sw.ToString())", span="1222-1233"];
m1_769 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="DynamicReflectionDelegateFactoryTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", span="1195-1195"];
m1_179 [cluster="System.Version.Version(int, int, int, int)", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry System.Version.Version(int, int, int, int)", span="0-0"];
m1_384 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", span="608-608"];
m1_396 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="DynamicReflectionDelegateFactoryTests.cs", label="string result = sb.ToString()", span="628-628"];
m1_387 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="DynamicReflectionDelegateFactoryTests.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="613-613"];
m1_385 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="DynamicReflectionDelegateFactoryTests.cs", label="StringBuilder sb = new StringBuilder()", span="610-610"];
m1_395 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="DynamicReflectionDelegateFactoryTests.cs", label="string expected = @''[1,2,3,4,5]  [\r\n  NaN\r\n]''", span="625-627"];
m1_397 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="DynamicReflectionDelegateFactoryTests.cs", label="StringAssert.AreEqual(expected, result)", span="630-630"];
m1_386 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="DynamicReflectionDelegateFactoryTests.cs", label="StringWriter sw = new StringWriter(sb)", span="611-611"];
m1_388 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.Formatting = Formatting.Indented", span="615-615"];
m1_389 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.FloatFormatHandling = FloatFormatHandling.Symbol", span="616-616"];
m1_390 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteRaw(''[1,2,3,4,5]'')", span="618-618"];
m1_391 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteWhitespace(''  '')", span="619-619"];
m1_392 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteStartArray()", span="620-620"];
m1_393 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue(double.NaN)", span="621-621"];
m1_394 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteEndArray()", span="622-622"];
m1_398 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="DynamicReflectionDelegateFactoryTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", span="608-608"];
m1_80 [cluster="Newtonsoft.Json.Tests.TestObjects.StructTest.StructTest()", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.StructTest.StructTest()", span="27-27"];
m1_82 [cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.CreateSetWithBadObjectValue()", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.CreateSetWithBadObjectValue()", span="147-147"];
m1_83 [cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.CreateSetWithBadObjectValue()", color=red, community=0, file="DynamicReflectionDelegateFactoryTests.cs", label="1: ExceptionAssert.Throws<InvalidCastException>(() =>\r\n            {\r\n                Movie m = new Movie();\r\n\r\n                Action<object, object> setter = DynamicReflectionDelegateFactory.Instance.CreateSet<object>(typeof(Movie).GetProperty(''Name''));\r\n\r\n                setter(m, new Version(''1.1.1.1''));\r\n            }, ''Unable to cast object of type 'System.Version' to type 'System.String'.'')", span="149-156"];
m1_84 [cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.CreateSetWithBadObjectValue()", file="DynamicReflectionDelegateFactoryTests.cs", label="Exit Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.CreateSetWithBadObjectValue()", span="147-147"];
m1_266 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.State()", span="408-408"];
m1_270 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="DynamicReflectionDelegateFactoryTests.cs", label="Assert.AreEqual(WriteState.Start, jsonWriter.WriteState)", span="415-415"];
m1_272 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="DynamicReflectionDelegateFactoryTests.cs", label="Assert.AreEqual(WriteState.Object, jsonWriter.WriteState)", span="418-418"];
m1_273 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="DynamicReflectionDelegateFactoryTests.cs", label="Assert.AreEqual('''', jsonWriter.Path)", span="419-419"];
m1_275 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="DynamicReflectionDelegateFactoryTests.cs", label="Assert.AreEqual(WriteState.Property, jsonWriter.WriteState)", span="422-422"];
m1_276 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="DynamicReflectionDelegateFactoryTests.cs", label="Assert.AreEqual(''CPU'', jsonWriter.Path)", span="423-423"];
m1_278 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="DynamicReflectionDelegateFactoryTests.cs", label="Assert.AreEqual(WriteState.Object, jsonWriter.WriteState)", span="426-426"];
m1_279 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="DynamicReflectionDelegateFactoryTests.cs", label="Assert.AreEqual(''CPU'', jsonWriter.Path)", span="427-427"];
m1_281 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="DynamicReflectionDelegateFactoryTests.cs", label="Assert.AreEqual(WriteState.Property, jsonWriter.WriteState)", span="430-430"];
m1_282 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="DynamicReflectionDelegateFactoryTests.cs", label="Assert.AreEqual(''Drives'', jsonWriter.Path)", span="431-431"];
m1_284 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="DynamicReflectionDelegateFactoryTests.cs", label="Assert.AreEqual(WriteState.Array, jsonWriter.WriteState)", span="434-434"];
m1_286 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="DynamicReflectionDelegateFactoryTests.cs", label="Assert.AreEqual(WriteState.Array, jsonWriter.WriteState)", span="437-437"];
m1_287 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="DynamicReflectionDelegateFactoryTests.cs", label="Assert.AreEqual(''Drives[0]'', jsonWriter.Path)", span="438-438"];
m1_289 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="DynamicReflectionDelegateFactoryTests.cs", label="Assert.AreEqual(WriteState.Object, jsonWriter.WriteState)", span="441-441"];
m1_290 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="DynamicReflectionDelegateFactoryTests.cs", label="Assert.AreEqual(''Drives'', jsonWriter.Path)", span="442-442"];
m1_292 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="DynamicReflectionDelegateFactoryTests.cs", label="Assert.AreEqual(WriteState.Start, jsonWriter.WriteState)", span="445-445"];
m1_293 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="DynamicReflectionDelegateFactoryTests.cs", label="Assert.AreEqual('''', jsonWriter.Path)", span="446-446"];
m1_269 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="DynamicReflectionDelegateFactoryTests.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="413-413"];
m1_277 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue(''Intel'')", span="425-425"];
m1_285 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue(''DVD read/writer'')", span="436-436"];
m1_267 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="DynamicReflectionDelegateFactoryTests.cs", label="StringBuilder sb = new StringBuilder()", span="410-410"];
m1_271 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteStartObject()", span="417-417"];
m1_274 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WritePropertyName(''CPU'')", span="421-421"];
m1_280 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WritePropertyName(''Drives'')", span="429-429"];
m1_283 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteStartArray()", span="433-433"];
m1_288 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteEnd()", span="440-440"];
m1_291 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteEndObject()", span="444-444"];
m1_268 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="DynamicReflectionDelegateFactoryTests.cs", label="StringWriter sw = new StringWriter(sb)", span="411-411"];
m1_294 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="DynamicReflectionDelegateFactoryTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.State()", span="408-408"];
m1_535 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect_BadValue()", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect_BadValue()", span="842-842"];
m1_538 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect_BadValue()", file="DynamicReflectionDelegateFactoryTests.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="847-847"];
m1_536 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect_BadValue()", file="DynamicReflectionDelegateFactoryTests.cs", label="StringBuilder sb = new StringBuilder()", span="844-844"];
m1_537 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect_BadValue()", file="DynamicReflectionDelegateFactoryTests.cs", label="StringWriter sw = new StringWriter(sb)", span="845-845"];
m1_539 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect_BadValue()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteToken(JsonToken.StartArray)", span="849-849"];
m1_540 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect_BadValue()", file="DynamicReflectionDelegateFactoryTests.cs", label="ExceptionAssert.Throws<FormatException>(() =>\r\n                {\r\n                    jsonWriter.WriteToken(JsonToken.Integer, ''three'');\r\n                }, ''Input string was not in a correct format.'')", span="851-854"];
m1_541 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect_BadValue()", file="DynamicReflectionDelegateFactoryTests.cs", label="ExceptionAssert.Throws<ArgumentNullException>(() =>\r\n                {\r\n                    jsonWriter.WriteToken(JsonToken.Integer);\r\n                }, @''Value cannot be null.\r\nParameter name: value'')", span="856-860"];
m1_542 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect_BadValue()", file="DynamicReflectionDelegateFactoryTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect_BadValue()", span="842-842"];
m1_341 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(double?)", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(double?)", span="1049-1049"];
m1_704 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.DateTimeZoneHandling()", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.DateTimeZoneHandling()", span="1108-1108"];
m1_708 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.DateTimeZoneHandling()", file="DynamicReflectionDelegateFactoryTests.cs", label="Assert.AreEqual(@''''''2000-01-01T01:01:01Z'''''', sw.ToString())", span="1118-1118"];
m1_706 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.DateTimeZoneHandling()", file="DynamicReflectionDelegateFactoryTests.cs", label="JsonTextWriter writer = new JsonTextWriter(sw)\r\n            {\r\n                DateTimeZoneHandling = Json.DateTimeZoneHandling.Utc\r\n            }", span="1111-1114"];
m1_705 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.DateTimeZoneHandling()", file="DynamicReflectionDelegateFactoryTests.cs", label="StringWriter sw = new StringWriter()", span="1110-1110"];
m1_707 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.DateTimeZoneHandling()", file="DynamicReflectionDelegateFactoryTests.cs", label="writer.WriteValue(new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Unspecified))", span="1116-1116"];
m1_709 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.DateTimeZoneHandling()", file="DynamicReflectionDelegateFactoryTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.DateTimeZoneHandling()", span="1108-1108"];
m1_601 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", span="948-948"];
m1_611 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="DynamicReflectionDelegateFactoryTests.cs", label="string result = sb.ToString()", span="965-965"];
m1_614 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="DynamicReflectionDelegateFactoryTests.cs", label="Assert.AreEqual(text, Encoding.UTF8.GetString(d2, 0, d2.Length))", span="971-971"];
m1_608 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="DynamicReflectionDelegateFactoryTests.cs", label="Assert.AreEqual(Formatting.Indented, jsonWriter.Formatting)", span="959-959"];
m1_612 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="DynamicReflectionDelegateFactoryTests.cs", label="Assert.AreEqual(expected, result)", span="967-967"];
m1_606 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="DynamicReflectionDelegateFactoryTests.cs", label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="956-956"];
m1_602 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="DynamicReflectionDelegateFactoryTests.cs", label="StringBuilder sb = new StringBuilder()", span="950-950"];
m1_610 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="DynamicReflectionDelegateFactoryTests.cs", label="string expected = @''''''SGVsbG8gd29ybGQu''''''", span="964-964"];
m1_613 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="DynamicReflectionDelegateFactoryTests.cs", label="byte[] d2 = Convert.FromBase64String(result.Trim(''''))", span="969-969"];
m1_604 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="DynamicReflectionDelegateFactoryTests.cs", label="string text = ''Hello world.''", span="953-953"];
m1_607 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.Formatting = Formatting.Indented", span="958-958"];
m1_609 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue(data)", span="961-961"];
m1_603 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="DynamicReflectionDelegateFactoryTests.cs", label="StringWriter sw = new StringWriter(sb)", span="951-951"];
m1_605 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="DynamicReflectionDelegateFactoryTests.cs", label="byte[] data = Encoding.UTF8.GetBytes(text)", span="954-954"];
m1_615 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="DynamicReflectionDelegateFactoryTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", span="948-948"];
m1_687 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", span="1083-1083"];
m1_700 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="DynamicReflectionDelegateFactoryTests.cs", label="Assert.AreEqual(valueStates, stateArray[(int)valueToken], ''Error for '' + valueToken + '' states.'')", span="1101-1101"];
m1_688 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="DynamicReflectionDelegateFactoryTests.cs", label="JsonWriter.State[][] stateArray = JsonWriter.BuildStateArray()", span="1085-1085"];
m1_689 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="DynamicReflectionDelegateFactoryTests.cs", label="var valueStates = JsonWriter.StateArrayTempate[7]", span="1087-1087"];
m1_690 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="DynamicReflectionDelegateFactoryTests.cs", label="EnumUtils.GetValues(typeof(JsonToken))", span="1089-1089"];
m1_699 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="DynamicReflectionDelegateFactoryTests.cs", label="JsonToken.Bytes", span="1100-1100"];
m1_691 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="DynamicReflectionDelegateFactoryTests.cs", label=valueToken, span="1091-1091"];
m1_698 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="DynamicReflectionDelegateFactoryTests.cs", label="JsonToken.Date", span="1099-1099"];
m1_692 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="DynamicReflectionDelegateFactoryTests.cs", label="JsonToken.Integer", span="1093-1093"];
m1_697 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="DynamicReflectionDelegateFactoryTests.cs", label="JsonToken.Undefined", span="1098-1098"];
m1_693 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="DynamicReflectionDelegateFactoryTests.cs", label="JsonToken.Float", span="1094-1094"];
m1_696 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="DynamicReflectionDelegateFactoryTests.cs", label="JsonToken.Null", span="1097-1097"];
m1_694 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="DynamicReflectionDelegateFactoryTests.cs", label="JsonToken.String", span="1095-1095"];
m1_695 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="DynamicReflectionDelegateFactoryTests.cs", label="JsonToken.Boolean", span="1096-1096"];
m1_701 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="DynamicReflectionDelegateFactoryTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", span="1083-1083"];
m1_873 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", span="1403-1403"];
m1_877 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="DynamicReflectionDelegateFactoryTests.cs", label="Assert.AreEqual(WriteState.Object, writer.WriteState)", span="1408-1408"];
m1_879 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="DynamicReflectionDelegateFactoryTests.cs", label="Assert.AreEqual(WriteState.Property, writer.WriteState)", span="1410-1410"];
m1_880 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="DynamicReflectionDelegateFactoryTests.cs", label="Assert.AreEqual(''Property1'', writer.Path)", span="1411-1411"];
m1_882 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="DynamicReflectionDelegateFactoryTests.cs", label="Assert.AreEqual(WriteState.Object, writer.WriteState)", span="1413-1413"];
m1_884 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="DynamicReflectionDelegateFactoryTests.cs", label="Assert.AreEqual(WriteState.Start, writer.WriteState)", span="1415-1415"];
m1_875 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="DynamicReflectionDelegateFactoryTests.cs", label="CustomJsonTextWriter writer = new CustomJsonTextWriter(sw) { Formatting = Formatting.Indented }", span="1406-1406"];
m1_876 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="DynamicReflectionDelegateFactoryTests.cs", label="writer.WriteStartObject()", span="1407-1407"];
m1_878 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="DynamicReflectionDelegateFactoryTests.cs", label="writer.WritePropertyName(''Property1'')", span="1409-1409"];
m1_881 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="DynamicReflectionDelegateFactoryTests.cs", label="writer.WriteNull()", span="1412-1412"];
m1_883 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="DynamicReflectionDelegateFactoryTests.cs", label="writer.WriteEndObject()", span="1414-1414"];
m1_885 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="DynamicReflectionDelegateFactoryTests.cs", label="StringAssert.AreEqual(@''{{{\r\n  ''''1ytreporP'''': NULL!!!\r\n}}}'', sw.ToString())", span="1417-1419"];
m1_874 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="DynamicReflectionDelegateFactoryTests.cs", label="StringWriter sw = new StringWriter()", span="1405-1405"];
m1_886 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="DynamicReflectionDelegateFactoryTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", span="1403-1403"];
m1_807 [cluster="string.FormatWith(System.IFormatProvider, object, object, object, object)", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry string.FormatWith(System.IFormatProvider, object, object, object, object)", span="62-62"];
m1_472 [cluster="Newtonsoft.Json.JsonWriter.WriteStartConstructor(string)", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartConstructor(string)", span="390-390"];
m1_906 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteComments()", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteComments()", span="1449-1449"];
m1_910 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteComments()", file="DynamicReflectionDelegateFactoryTests.cs", label="JsonTextWriter w = new JsonTextWriter(sw)", span="1475-1475"];
m1_909 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteComments()", file="DynamicReflectionDelegateFactoryTests.cs", label="StringWriter sw = new StringWriter()", span="1474-1474"];
m1_911 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteComments()", file="DynamicReflectionDelegateFactoryTests.cs", label="w.Formatting = Formatting.Indented", span="1476-1476"];
m1_912 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteComments()", file="DynamicReflectionDelegateFactoryTests.cs", label="w.WriteToken(r, true)", span="1478-1478"];
m1_913 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteComments()", file="DynamicReflectionDelegateFactoryTests.cs", label="StringAssert.AreEqual(@''/*comment*//*hi*/*/{/*comment*/\r\n  ''''Name'''': /*comment*/ true/*comment after true*//*comment after comma*/,\r\n  ''''ExpiryDate'''': /*comment*/ new Constructor(\r\n    /*comment*/,\r\n    null\r\n    /*comment*/\r\n  ),\r\n  ''''Price'''': 3.99,\r\n  ''''Sizes'''': /*comment*/ [\r\n    /*comment*/\r\n    ''''Small''''\r\n    /*comment*/\r\n  ]/*comment*/\r\n}/*comment *//*comment 1 */'', sw.ToString())", span="1480-1493"];
m1_908 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteComments()", file="DynamicReflectionDelegateFactoryTests.cs", label="JsonTextReader r = new JsonTextReader(new StringReader(json))", span="1472-1472"];
m1_907 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteComments()", file="DynamicReflectionDelegateFactoryTests.cs", label="string json = @''//comment*//*hi*/\r\n{//comment\r\nName://comment\r\ntrue//comment after true'' + StringUtils.CarriageReturn + @''\r\n,//comment after comma'' + StringUtils.CarriageReturnLineFeed + @''\r\n''''ExpiryDate''''://comment'' + StringUtils.LineFeed + @''\r\nnew\r\n'' + StringUtils.LineFeed +\r\n                  @''Constructor\r\n(//comment\r\nnull//comment\r\n),\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''': //comment\r\n[//comment\r\n\r\n          ''''Small''''//comment\r\n]//comment\r\n}//comment \r\n//comment 1 ''", span="1451-1470"];
m1_914 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteComments()", file="DynamicReflectionDelegateFactoryTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteComments()", span="1449-1449"];
m1_442 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", span="697-697"];
m1_454 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="DynamicReflectionDelegateFactoryTests.cs", label="Assert.AreEqual(@''{''''d0'''':[1,2],''''d1'''':[1,2],''''d2'''':[1,2]}'', sb.ToString())", span="720-720"];
m1_445 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="DynamicReflectionDelegateFactoryTests.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="702-702"];
m1_443 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="DynamicReflectionDelegateFactoryTests.cs", label="StringBuilder sb = new StringBuilder()", span="699-699"];
m1_453 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteEndObject()", span="717-717"];
m1_444 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="DynamicReflectionDelegateFactoryTests.cs", label="StringWriter sw = new StringWriter(sb)", span="700-700"];
m1_446 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="DynamicReflectionDelegateFactoryTests.cs", label="int i = 0", span="704-704"];
m1_448 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteStartObject()", span="707-707"];
m1_450 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WritePropertyName(''d'' + i)", span="711-711"];
m1_451 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteRawValue(rawJson)", span="712-712"];
m1_449 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="DynamicReflectionDelegateFactoryTests.cs", label="i < 3", span="709-709"];
m1_447 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="DynamicReflectionDelegateFactoryTests.cs", label="string rawJson = ''[1,2]''", span="705-705"];
m1_452 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="DynamicReflectionDelegateFactoryTests.cs", label="i++", span="714-714"];
m1_455 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="DynamicReflectionDelegateFactoryTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", span="697-697"];
m1_19 [cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.ConstructorWithRefStringAndOutBool()", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.ConstructorWithRefStringAndOutBool()", span="67-67"];
m1_147 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(uint?)", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(uint?)", span="1000-1000"];
m1_989 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToType(System.Type, System.IFormatProvider)", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.Tests.ConvertibleInt.ToType(System.Type, System.IFormatProvider)", span="1629-1629"];
m1_992 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToType(System.Type, System.IFormatProvider)", file="DynamicReflectionDelegateFactoryTests.cs", label="throw new Exception(''Type not supported: '' + conversionType.FullName);", span="1634-1634"];
m1_990 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToType(System.Type, System.IFormatProvider)", file="DynamicReflectionDelegateFactoryTests.cs", label="conversionType == typeof(int)", span="1631-1631"];
m1_991 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToType(System.Type, System.IFormatProvider)", file="DynamicReflectionDelegateFactoryTests.cs", label="return _value;", span="1632-1632"];
m1_993 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToType(System.Type, System.IFormatProvider)", file="DynamicReflectionDelegateFactoryTests.cs", label="Exit Newtonsoft.Json.Tests.ConvertibleInt.ToType(System.Type, System.IFormatProvider)", span="1629-1629"];
m1_870 [cluster="string.Equals(string, string)", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry string.Equals(string, string)", span="0-0"];
m1_723 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", span="1144-1144"];
m1_732 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="DynamicReflectionDelegateFactoryTests.cs", label="Assert.AreEqual(unicode, reader.ReadAsString())", span="1163-1163"];
m1_729 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="DynamicReflectionDelegateFactoryTests.cs", label="Assert.AreEqual(8, json.Length)", span="1158-1158"];
m1_730 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="DynamicReflectionDelegateFactoryTests.cs", label="Assert.AreEqual(@''''''\u5f20'''''', json)", span="1159-1159"];
m1_737 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="DynamicReflectionDelegateFactoryTests.cs", label="Assert.AreEqual(3, json.Length)", span="1175-1175"];
m1_738 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="DynamicReflectionDelegateFactoryTests.cs", label="Assert.AreEqual(''\''\u5f20\'''', json)", span="1176-1176"];
m1_725 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="DynamicReflectionDelegateFactoryTests.cs", label="JsonTextWriter writer = new JsonTextWriter(sw)\r\n            {\r\n                StringEscapeHandling = StringEscapeHandling.EscapeNonAscii\r\n            }", span="1147-1150"];
m1_734 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="DynamicReflectionDelegateFactoryTests.cs", label="writer = new JsonTextWriter(sw)\r\n            {\r\n                StringEscapeHandling = StringEscapeHandling.Default\r\n            }", span="1166-1169"];
m1_726 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="DynamicReflectionDelegateFactoryTests.cs", label="string unicode = ''\u5f20''", span="1152-1152"];
m1_731 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="DynamicReflectionDelegateFactoryTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1161-1161"];
m1_733 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="DynamicReflectionDelegateFactoryTests.cs", label="sw = new StringWriter()", span="1165-1165"];
m1_728 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="DynamicReflectionDelegateFactoryTests.cs", label="string json = sw.ToString()", span="1156-1156"];
m1_736 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="DynamicReflectionDelegateFactoryTests.cs", label="json = sw.ToString()", span="1173-1173"];
m1_724 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="DynamicReflectionDelegateFactoryTests.cs", label="StringWriter sw = new StringWriter()", span="1146-1146"];
m1_727 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="DynamicReflectionDelegateFactoryTests.cs", label="writer.WriteValue(unicode)", span="1154-1154"];
m1_735 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="DynamicReflectionDelegateFactoryTests.cs", label="writer.WriteValue(unicode)", span="1171-1171"];
m1_739 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="DynamicReflectionDelegateFactoryTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", span="1144-1144"];
m1_429 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteToken()", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteToken()", span="683-683"];
m1_436 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteToken()", file="DynamicReflectionDelegateFactoryTests.cs", label="Assert.AreEqual(''1'', sw.ToString())", span="693-693"];
m1_434 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteToken()", file="DynamicReflectionDelegateFactoryTests.cs", label="JsonTextWriter writer = new JsonTextWriter(sw)", span="690-690"];
m1_435 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteToken()", file="DynamicReflectionDelegateFactoryTests.cs", label="writer.WriteToken(reader)", span="691-691"];
m1_433 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteToken()", file="DynamicReflectionDelegateFactoryTests.cs", label="StringWriter sw = new StringWriter()", span="689-689"];
m1_430 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteToken()", file="DynamicReflectionDelegateFactoryTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(''[1,2,3,4,5]''))", span="685-685"];
m1_432 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteToken()", file="DynamicReflectionDelegateFactoryTests.cs", label="reader.Read()", span="687-687"];
m1_431 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteToken()", file="DynamicReflectionDelegateFactoryTests.cs", label="reader.Read()", span="686-686"];
m1_437 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteToken()", file="DynamicReflectionDelegateFactoryTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteToken()", span="683-683"];
m1_168 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithUnsupportedValue()", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithUnsupportedValue()", span="240-240"];
m1_169 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithUnsupportedValue()", file="DynamicReflectionDelegateFactoryTests.cs", label="ExceptionAssert.Throws<JsonWriterException>(() =>\r\n            {\r\n                StringWriter sw = new StringWriter();\r\n                using (JsonTextWriter jsonWriter = new JsonTextWriter(sw))\r\n                {\r\n                    jsonWriter.WriteStartArray();\r\n                    jsonWriter.WriteValue(new Version(1, 1, 1, 1));\r\n                    jsonWriter.WriteEndArray();\r\n                }\r\n            }, @''Unsupported type: System.Version. Use the JsonSerializer class to get the object's JSON representation. Path ''.'')", span="242-251"];
m1_170 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithUnsupportedValue()", file="DynamicReflectionDelegateFactoryTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithUnsupportedValue()", span="240-240"];
m1_143 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(sbyte?)", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(sbyte?)", span="1123-1123"];
m1_139 [cluster="Newtonsoft.Json.JsonTextWriter.WriteStartArray()", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteStartArray()", span="174-174"];
m1_710 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m1_520 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", span="822-822"];
m1_531 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", file="DynamicReflectionDelegateFactoryTests.cs", label="Assert.AreEqual(@''[1,{''''string'''':2147483647}]'', sb.ToString())", span="838-838"];
m1_523 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", file="DynamicReflectionDelegateFactoryTests.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="827-827"];
m1_521 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", file="DynamicReflectionDelegateFactoryTests.cs", label="StringBuilder sb = new StringBuilder()", span="824-824"];
m1_530 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteToken(JsonToken.EndArray)", span="835-835"];
m1_522 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", file="DynamicReflectionDelegateFactoryTests.cs", label="StringWriter sw = new StringWriter(sb)", span="825-825"];
m1_524 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteToken(JsonToken.StartArray)", span="829-829"];
m1_525 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteToken(JsonToken.Integer, 1)", span="830-830"];
m1_526 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteToken(JsonToken.StartObject)", span="831-831"];
m1_527 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteToken(JsonToken.PropertyName, ''string'')", span="832-832"];
m1_528 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteToken(JsonToken.Integer, int.MaxValue)", span="833-833"];
m1_529 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteToken(JsonToken.EndObject)", span="834-834"];
m1_532 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", file="DynamicReflectionDelegateFactoryTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", span="822-822"];
m1_549 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BadWriteEndArray()", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.BadWriteEndArray()", span="865-865"];
m1_550 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BadWriteEndArray()", file="DynamicReflectionDelegateFactoryTests.cs", label="ExceptionAssert.Throws<JsonWriterException>(() =>\r\n            {\r\n                StringBuilder sb = new StringBuilder();\r\n                StringWriter sw = new StringWriter(sb);\r\n\r\n                using (JsonWriter jsonWriter = new JsonTextWriter(sw))\r\n                {\r\n                    jsonWriter.WriteStartArray();\r\n\r\n                    jsonWriter.WriteValue(0.0);\r\n\r\n                    jsonWriter.WriteEndArray();\r\n                    jsonWriter.WriteEndArray();\r\n                }\r\n            }, ''No token to close. Path ''.'')", span="867-881"];
m1_551 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BadWriteEndArray()", file="DynamicReflectionDelegateFactoryTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.BadWriteEndArray()", span="865-865"];
m1_617 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(byte[])", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(byte[])", span="583-583"];
m1_616 [cluster="System.Text.Encoding.GetBytes(string)", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m1_867 [cluster="Newtonsoft.Json.Utilities.StringUtils.ToCharAsUnicode(char, char[])", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.ToCharAsUnicode(char, char[])", span="126-126"];
m1_640 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", span="1010-1010"];
m1_683 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="DynamicReflectionDelegateFactoryTests.cs", label="StringAssert.AreEqual(@''[\r\n  {\r\n    ''''Property1'''': [\r\n      1,\r\n      [\r\n        [\r\n          []\r\n        ]\r\n      ]\r\n    ]\r\n  },\r\n  {\r\n    ''''Property2'''': new Constructor1(\r\n      null,\r\n      [\r\n        1\r\n      ]\r\n    )\r\n  }\r\n]'', sb.ToString())", span="1060-1079"];
m1_648 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="DynamicReflectionDelegateFactoryTests.cs", label="Assert.AreEqual('''', writer.Path)", span="1023-1023"];
m1_650 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="DynamicReflectionDelegateFactoryTests.cs", label="Assert.AreEqual(''[0]'', writer.Path)", span="1025-1025"];
m1_652 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="DynamicReflectionDelegateFactoryTests.cs", label="Assert.AreEqual(''[0].Property1'', writer.Path)", span="1027-1027"];
m1_654 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="DynamicReflectionDelegateFactoryTests.cs", label="Assert.AreEqual(''[0].Property1'', writer.Path)", span="1029-1029"];
m1_656 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="DynamicReflectionDelegateFactoryTests.cs", label="Assert.AreEqual(''[0].Property1[0]'', writer.Path)", span="1031-1031"];
m1_658 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="DynamicReflectionDelegateFactoryTests.cs", label="Assert.AreEqual(''[0].Property1[1]'', writer.Path)", span="1033-1033"];
m1_660 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="DynamicReflectionDelegateFactoryTests.cs", label="Assert.AreEqual(''[0].Property1[1][0]'', writer.Path)", span="1035-1035"];
m1_662 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="DynamicReflectionDelegateFactoryTests.cs", label="Assert.AreEqual(''[0].Property1[1][0][0]'', writer.Path)", span="1037-1037"];
m1_664 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="DynamicReflectionDelegateFactoryTests.cs", label="Assert.AreEqual(''[0]'', writer.Path)", span="1039-1039"];
m1_666 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="DynamicReflectionDelegateFactoryTests.cs", label="Assert.AreEqual(''[1]'', writer.Path)", span="1041-1041"];
m1_668 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="DynamicReflectionDelegateFactoryTests.cs", label="Assert.AreEqual(''[1].Property2'', writer.Path)", span="1043-1043"];
m1_670 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="DynamicReflectionDelegateFactoryTests.cs", label="Assert.AreEqual(''[1].Property2'', writer.Path)", span="1045-1045"];
m1_672 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="DynamicReflectionDelegateFactoryTests.cs", label="Assert.AreEqual(''[1].Property2[0]'', writer.Path)", span="1047-1047"];
m1_674 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="DynamicReflectionDelegateFactoryTests.cs", label="Assert.AreEqual(''[1].Property2[1]'', writer.Path)", span="1049-1049"];
m1_676 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="DynamicReflectionDelegateFactoryTests.cs", label="Assert.AreEqual(''[1].Property2[1][0]'', writer.Path)", span="1051-1051"];
m1_678 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="DynamicReflectionDelegateFactoryTests.cs", label="Assert.AreEqual(''[1].Property2[1]'', writer.Path)", span="1053-1053"];
m1_680 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="DynamicReflectionDelegateFactoryTests.cs", label="Assert.AreEqual(''[1]'', writer.Path)", span="1055-1055"];
m1_682 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="DynamicReflectionDelegateFactoryTests.cs", label="Assert.AreEqual('''', writer.Path)", span="1057-1057"];
m1_645 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="DynamicReflectionDelegateFactoryTests.cs", label="JsonTextWriter writer = new JsonTextWriter(sw)", span="1018-1018"];
m1_641 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="DynamicReflectionDelegateFactoryTests.cs", label="StringBuilder sb = new StringBuilder()", span="1012-1012"];
m1_647 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="DynamicReflectionDelegateFactoryTests.cs", label="writer.WriteStartArray()", span="1022-1022"];
m1_649 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="DynamicReflectionDelegateFactoryTests.cs", label="writer.WriteStartObject()", span="1024-1024"];
m1_651 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="DynamicReflectionDelegateFactoryTests.cs", label="writer.WritePropertyName(''Property1'')", span="1026-1026"];
m1_653 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="DynamicReflectionDelegateFactoryTests.cs", label="writer.WriteStartArray()", span="1028-1028"];
m1_655 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="DynamicReflectionDelegateFactoryTests.cs", label="writer.WriteValue(1)", span="1030-1030"];
m1_657 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="DynamicReflectionDelegateFactoryTests.cs", label="writer.WriteStartArray()", span="1032-1032"];
m1_659 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="DynamicReflectionDelegateFactoryTests.cs", label="writer.WriteStartArray()", span="1034-1034"];
m1_661 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="DynamicReflectionDelegateFactoryTests.cs", label="writer.WriteStartArray()", span="1036-1036"];
m1_663 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="DynamicReflectionDelegateFactoryTests.cs", label="writer.WriteEndObject()", span="1038-1038"];
m1_665 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="DynamicReflectionDelegateFactoryTests.cs", label="writer.WriteStartObject()", span="1040-1040"];
m1_667 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="DynamicReflectionDelegateFactoryTests.cs", label="writer.WritePropertyName(''Property2'')", span="1042-1042"];
m1_669 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="DynamicReflectionDelegateFactoryTests.cs", label="writer.WriteStartConstructor(''Constructor1'')", span="1044-1044"];
m1_671 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="DynamicReflectionDelegateFactoryTests.cs", label="writer.WriteNull()", span="1046-1046"];
m1_673 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="DynamicReflectionDelegateFactoryTests.cs", label="writer.WriteStartArray()", span="1048-1048"];
m1_675 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="DynamicReflectionDelegateFactoryTests.cs", label="writer.WriteValue(1)", span="1050-1050"];
m1_677 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="DynamicReflectionDelegateFactoryTests.cs", label="writer.WriteEnd()", span="1052-1052"];
m1_679 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="DynamicReflectionDelegateFactoryTests.cs", label="writer.WriteEndObject()", span="1054-1054"];
m1_681 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="DynamicReflectionDelegateFactoryTests.cs", label="writer.WriteEndArray()", span="1056-1056"];
m1_642 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="DynamicReflectionDelegateFactoryTests.cs", label="StringWriter sw = new StringWriter(sb)", span="1013-1013"];
m1_644 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="DynamicReflectionDelegateFactoryTests.cs", label="byte[] data = Encoding.UTF8.GetBytes(text)", span="1016-1016"];
m1_646 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="DynamicReflectionDelegateFactoryTests.cs", label="writer.Formatting = Formatting.Indented", span="1020-1020"];
m1_643 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="DynamicReflectionDelegateFactoryTests.cs", label="string text = ''Hello world.''", span="1015-1015"];
m1_684 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="DynamicReflectionDelegateFactoryTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", span="1010-1010"];
m1_871 [cluster="System.IO.TextWriter.Write(string)", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry System.IO.TextWriter.Write(string)", span="0-0"];
m1_171 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="354-354"];
m1_194 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", span="277-277"];
m1_213 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="DynamicReflectionDelegateFactoryTests.cs", label="string result = sb.ToString()", span="311-311"];
m1_211 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="DynamicReflectionDelegateFactoryTests.cs", label="Assert.AreEqual(WriteState.Start, jsonWriter.WriteState)", span="298-298"];
m1_197 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="DynamicReflectionDelegateFactoryTests.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="282-282"];
m1_201 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue(''Intel'')", span="288-288"];
m1_203 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue(''500W'')", span="290-290"];
m1_206 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue(''DVD read/writer'')", span="293-293"];
m1_208 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue(''500 gigabyte hard drive'')", span="295-295"];
m1_209 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue(''200 gigabype hard drive'')", span="296-296"];
m1_195 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="DynamicReflectionDelegateFactoryTests.cs", label="StringBuilder sb = new StringBuilder()", span="279-279"];
m1_212 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="DynamicReflectionDelegateFactoryTests.cs", label="string expected = @''{\r\n  ''''CPU'''': ''''Intel'''',\r\n  ''''PSU'''': ''''500W'''',\r\n  ''''Drives'''': [\r\n    ''''DVD read/writer''''\r\n    /*(broken)*/,\r\n    ''''500 gigabyte hard drive'''',\r\n    ''''200 gigabype hard drive''''\r\n  ]\r\n}''", span="301-310"];
m1_214 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="DynamicReflectionDelegateFactoryTests.cs", label="StringAssert.AreEqual(expected, result)", span="313-313"];
m1_210 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteEndObject()", span="297-297"];
m1_196 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="DynamicReflectionDelegateFactoryTests.cs", label="StringWriter sw = new StringWriter(sb)", span="280-280"];
m1_198 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.Formatting = Formatting.Indented", span="284-284"];
m1_199 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteStartObject()", span="286-286"];
m1_200 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WritePropertyName(''CPU'')", span="287-287"];
m1_202 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WritePropertyName(''PSU'')", span="289-289"];
m1_204 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WritePropertyName(''Drives'')", span="291-291"];
m1_205 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteStartArray()", span="292-292"];
m1_207 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteComment(''(broken)'')", span="294-294"];
m1_215 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="DynamicReflectionDelegateFactoryTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", span="277-277"];
m1_457 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="DynamicReflectionDelegateFactoryTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", span="724-724"];
m1_470 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="DynamicReflectionDelegateFactoryTests.cs", label="Assert.AreEqual(@''{''''con'''':new Ext.data.JsonStore({''''aa'''':''''aa''''})}'', sb.ToString())", span="744-744"];
m1_460 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="DynamicReflectionDelegateFactoryTests.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="729-729"];
m1_466 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteValue(''aa'')", span="737-737"];
m1_458 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="DynamicReflectionDelegateFactoryTests.cs", label="StringBuilder sb = new StringBuilder()", span="726-726"];
m1_469 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteEndObject()", span="741-741"];
m1_459 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="DynamicReflectionDelegateFactoryTests.cs", label="StringWriter sw = new StringWriter(sb)", span="727-727"];
m1_461 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteStartObject()", span="731-731"];
m1_462 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WritePropertyName(''con'')", span="732-732"];
m1_463 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteStartConstructor(''Ext.data.JsonStore'')", span="734-734"];
m1_464 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteStartObject()", span="735-735"];
m1_465 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WritePropertyName(''aa'')", span="736-736"];
m1_467 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteEndObject()", span="738-738"];
m1_468 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="DynamicReflectionDelegateFactoryTests.cs", label="jsonWriter.WriteEndConstructor()", span="739-739"];
m1_471 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="DynamicReflectionDelegateFactoryTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", span="724-724"];
m1_1003 [file="DynamicReflectionDelegateFactoryTests.cs", label=jsonWriter, span=""];
m1_1005 [file="DynamicReflectionDelegateFactoryTests.cs", label="out Newtonsoft.Json.Tests.ConvertibleInt", span=""];
m1_1004 [file="DynamicReflectionDelegateFactoryTests.cs", label="Newtonsoft.Json.Tests.CustomJsonTextWriter", span=""];
m1_1006 [file="DynamicReflectionDelegateFactoryTests.cs", label="Newtonsoft.Json.Tests.ConvertibleInt", span=""];
m2_73 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JsonConvertTest.cs", label="objA is BigInteger", span="267-267"];
m2_74 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JsonConvertTest.cs", label="return CompareBigInteger((BigInteger)objA, objB);", span="269-269"];
m2_75 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JsonConvertTest.cs", label="objB is BigInteger", span="271-271"];
m2_76 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JsonConvertTest.cs", label="return -CompareBigInteger((BigInteger)objB, objA);", span="273-273"];
m2_79 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JsonConvertTest.cs", label="objA is float || objB is float || objA is double || objB is double", span="280-280"];
m2_80 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JsonConvertTest.cs", label="return CompareFloat(objA, objB);", span="282-282"];
m2_77 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JsonConvertTest.cs", label="objA is ulong || objB is ulong || objA is decimal || objB is decimal", span="276-276"];
m2_78 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JsonConvertTest.cs", label="return Convert.ToDecimal(objA, CultureInfo.InvariantCulture).CompareTo(Convert.ToDecimal(objB, CultureInfo.InvariantCulture));", span="278-278"];
m2_81 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JsonConvertTest.cs", label="return Convert.ToInt64(objA, CultureInfo.InvariantCulture).CompareTo(Convert.ToInt64(objB, CultureInfo.InvariantCulture));", span="286-286"];
m2_82 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JsonConvertTest.cs", label="JTokenType.Float", span="288-288"];
m2_746 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.OverloadsJsonConverterer.OverloadsJsonConverterer(long)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.OverloadsJsonConverterer.OverloadsJsonConverterer(long)", span="1272-1272"];
m2_747 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.OverloadsJsonConverterer.OverloadsJsonConverterer(long)", file="JsonConvertTest.cs", label="_type = ''long''", span="1274-1274"];
m2_748 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.OverloadsJsonConverterer.OverloadsJsonConverterer(long)", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.OverloadsJsonConverterer.OverloadsJsonConverterer(long)", span="1272-1272"];
m2_59 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.NameTableTestClassConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonConvertTest.cs", label="Assert.IsNotNull(jsonTextReader.NameTable)", span="174-174"];
m2_142 [cluster="Newtonsoft.Json.JsonSerializer.CreateDefault()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.CreateDefault()", span="596-596"];
m2_778 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.OverloadWithTypeParameter.OverloadWithTypeParameter()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.OverloadWithTypeParameter.OverloadWithTypeParameter()", span="1323-1323"];
m2_551 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt16(System.IFormatProvider)", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt16(System.IFormatProvider)", span="1136-1136"];
m2_262 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JsonConvertTest.cs", label="ExpressionType.Divide", span="554-554"];
m2_515 [cluster="Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", color=green, community=0, file="JsonConvertTest.cs", label="2: obj == null", span="1055-1055"];
m2_602 [cluster="Newtonsoft.Json.JsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="54-54"];
m2_356 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonConvertTest.cs", label="writer.WriteValue(Convert.ToInt64(_value, CultureInfo.InvariantCulture))", span="778-778"];
m2_357 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonConvertTest.cs", label="return;", span="780-780"];
m2_358 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonConvertTest.cs", label="JTokenType.Float", span="781-781"];
m2_359 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonConvertTest.cs", label="_value is decimal", span="782-782"];
m2_360 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonConvertTest.cs", label="writer.WriteValue((decimal)_value)", span="784-784"];
m2_361 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonConvertTest.cs", label="_value is double", span="786-786"];
m2_362 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonConvertTest.cs", label="writer.WriteValue((double)_value)", span="788-788"];
m2_363 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonConvertTest.cs", label="_value is float", span="790-790"];
m2_364 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonConvertTest.cs", label="writer.WriteValue((float)_value)", span="792-792"];
m2_365 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonConvertTest.cs", label="writer.WriteValue(Convert.ToDouble(_value, CultureInfo.InvariantCulture))", span="796-796"];
m2_366 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonConvertTest.cs", label="return;", span="798-798"];
m2_367 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonConvertTest.cs", label="JTokenType.String", span="799-799"];
m2_368 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonConvertTest.cs", label="writer.WriteValue((_value != null) ? _value.ToString() : null)", span="800-800"];
m2_369 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonConvertTest.cs", label="return;", span="801-801"];
m2_370 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonConvertTest.cs", label="JTokenType.Boolean", span="802-802"];
m2_371 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonConvertTest.cs", label="writer.WriteValue(Convert.ToBoolean(_value, CultureInfo.InvariantCulture))", span="803-803"];
m2_638 [cluster="System.DateTimeOffset.AddTicks(long)", file="JsonConvertTest.cs", label="Entry System.DateTimeOffset.AddTicks(long)", span="0-0"];
m2_695 [cluster="System.Text.StringBuilder.StringBuilder()", file="JsonConvertTest.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m2_110 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JsonConvertTest.cs", label="date2 = new DateTimeOffset(Convert.ToDateTime(objB, CultureInfo.InvariantCulture))", span="345-345"];
m2_111 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JsonConvertTest.cs", label="return date1.CompareTo(date2);", span="348-348"];
m2_112 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JsonConvertTest.cs", label="JTokenType.Bytes", span="351-351"];
m2_113 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JsonConvertTest.cs", label="!(objB is byte[])", span="352-352"];
m2_114 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JsonConvertTest.cs", label="throw new ArgumentException(''Object must be of type byte[].'');", span="354-354"];
m2_733 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.OverloadsJsonConverterer.OverloadsJsonConverterer(object)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.OverloadsJsonConverterer.OverloadsJsonConverterer(object)", span="1250-1250"];
m2_734 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.OverloadsJsonConverterer.OverloadsJsonConverterer(object)", file="JsonConvertTest.cs", label="_type = string.Format(''object({0})'', objectParam.GetType().FullName)", span="1252-1252"];
m2_735 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.OverloadsJsonConverterer.OverloadsJsonConverterer(object)", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.OverloadsJsonConverterer.OverloadsJsonConverterer(object)", span="1250-1250"];
m2_537 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs", label="s.WriteObject(ms, value)", span="919-919"];
m2_538 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs", label="string json = Encoding.UTF8.GetString(ms.ToArray(), 0, Convert.ToInt32(ms.Length))", span="920-920"];
m2_539 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs", label="Console.WriteLine(json)", span="921-921"];
m2_555 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTimeFormat<T>(T, Newtonsoft.Json.DateFormatHandling, Newtonsoft.Json.DateTimeZoneHandling)", file="JsonConvertTest.cs", label="string date = null", span="931-931"];
m2_556 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTimeFormat<T>(T, Newtonsoft.Json.DateFormatHandling, Newtonsoft.Json.DateTimeZoneHandling)", file="JsonConvertTest.cs", label="value is DateTime", span="933-933"];
m2_557 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTimeFormat<T>(T, Newtonsoft.Json.DateFormatHandling, Newtonsoft.Json.DateTimeZoneHandling)", file="JsonConvertTest.cs", label="date = JsonConvert.ToString((DateTime)(object)value, format, timeZoneHandling)", span="935-935"];
m2_116 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JsonConvertTest.cs", label="byte[] bytes2 = objB as byte[]", span="358-358"];
m2_719 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ClobberingJsonConverter.CanConvert(System.Type)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.ClobberingJsonConverter.CanConvert(System.Type)", span="1214-1214"];
m2_720 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ClobberingJsonConverter.CanConvert(System.Type)", file="JsonConvertTest.cs", label="return objectType == typeof(string);", span="1216-1216"];
m2_721 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ClobberingJsonConverter.CanConvert(System.Type)", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.ClobberingJsonConverter.CanConvert(System.Type)", span="1214-1214"];
m2_85 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JsonConvertTest.cs", label="objB is BigInteger", span="294-294"];
m2_828 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.OverloadWithUShortParameter.OverloadWithUShortParameter()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.OverloadWithUShortParameter.OverloadWithUShortParameter()", span="1383-1383"];
m2_276 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(''1.1'', JsonConvert.ToString(value))", span="566-566"];
m2_277 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="value = (float)1.1", span="568-568"];
m2_278 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(''1.1'', JsonConvert.ToString(value))", span="569-569"];
m2_784 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.OverloadWithUnhandledParameter.OverloadWithUnhandledParameter()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.OverloadWithUnhandledParameter.OverloadWithUnhandledParameter()", span="1338-1338"];
m2_413 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="localToUtcDate = millisecondsLocal.ToUniversalTime().ToString(''yyyy-MM-ddTHH:mm:ss.FFFFFFFK'')", span="752-752"];
m2_156 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_CreateWithSettings()", file="JsonConvertTest.cs", label="sw = new StringWriter()", span="377-377"];
m2_326 [cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", span="678-678"];
m2_327 [cluster="System.Nullable<T>.GetValueOrDefault()", file="JsonConvertTest.cs", label="Entry System.Nullable<T>.GetValueOrDefault()", span="0-0"];
m2_328 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", span="731-731"];
m2_329 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonConvertTest.cs", label="converters != null && converters.Length > 0 && _value != null", span="733-733"];
m2_330 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonConvertTest.cs", label="JsonConverter matchingConverter = JsonSerializer.GetMatchingConverter(converters, _value.GetType())", span="735-735"];
m2_331 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonConvertTest.cs", label="matchingConverter != null && matchingConverter.CanWrite", span="736-736"];
m2_332 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonConvertTest.cs", label="matchingConverter.WriteJson(writer, _value, JsonSerializer.CreateDefault())", span="738-738"];
m2_333 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonConvertTest.cs", label="return;", span="739-739"];
m2_334 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonConvertTest.cs", label=_valueType, span="743-743"];
m2_335 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonConvertTest.cs", label="JTokenType.Comment", span="745-745"];
m2_336 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonConvertTest.cs", label="writer.WriteComment((_value != null) ? _value.ToString() : null)", span="746-746"];
m2_337 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonConvertTest.cs", label="return;", span="747-747"];
m2_168 [cluster="Newtonsoft.Json.Utilities.MathUtils.ApproxEquals(double, double)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Utilities.MathUtils.ApproxEquals(double, double)", span="171-171"];
m2_316 [cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", span="678-678"];
m2_317 [cluster="object.GetType()", file="JsonConvertTest.cs", label="Entry object.GetType()", span="0-0"];
m2_318 [cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="JsonConvertTest.cs", label="current == null", span="680-680"];
m2_603 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.SerializeObjectDateTimeZoneHandling()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.SerializeObjectDateTimeZoneHandling()", span="1015-1015"];
m2_604 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.SerializeObjectDateTimeZoneHandling()", file="JsonConvertTest.cs", label="string json = JsonConvert.SerializeObject(\r\n                new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Unspecified),\r\n                new JsonSerializerSettings\r\n                {\r\n                    DateTimeZoneHandling = DateTimeZoneHandling.Utc\r\n                })", span="1017-1022"];
m2_605 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.SerializeObjectDateTimeZoneHandling()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''''''2000-01-01T01:01:01Z'''''', json)", span="1024-1024"];
m2_606 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.SerializeObjectDateTimeZoneHandling()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.SerializeObjectDateTimeZoneHandling()", span="1015-1015"];
m2_678 [cluster="Unk.IsTrue", file="JsonConvertTest.cs", label="Entry Unk.IsTrue", span=""];
m2_726 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.IncorrectJsonConvertParameters.IncorrectJsonConvertParameters()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.IncorrectJsonConvertParameters.IncorrectJsonConvertParameters()", span="1228-1228"];
m2_773 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.JsonConverterConstructor_OverloadWithTypeParam()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.JsonConverterConstructor_OverloadWithTypeParam()", span="1330-1330"];
m2_774 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.JsonConverterConstructor_OverloadWithTypeParam()", file="JsonConvertTest.cs", label="OverloadWithTypeParameter value = new OverloadWithTypeParameter()", span="1332-1332"];
m2_775 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.JsonConverterConstructor_OverloadWithTypeParam()", file="JsonConvertTest.cs", label="string json = JsonConvert.SerializeObject(value)", span="1333-1333"];
m2_776 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.JsonConverterConstructor_OverloadWithTypeParam()", file="JsonConvertTest.cs", label="Assert.AreEqual(''{\''Overload\'':\''Type\''}'', json)", span="1335-1335"];
m2_777 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.JsonConverterConstructor_OverloadWithTypeParam()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.JsonConverterConstructor_OverloadWithTypeParam()", span="1330-1330"];
m2_256 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JsonConvertTest.cs", label="result = l1 - l2", span="548-548"];
m2_392 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="result = TestDateTime(''DateTime Max'', DateTime.MaxValue)", span="728-728"];
m2_667 [cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Linq.JObject.Parse(string)", span="404-404"];
m2_403 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="result = TestDateTime(''DateTime Local'', year2000local)", span="741-741"];
m2_561 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTimeFormat<T>(T, Newtonsoft.Json.DateFormatHandling, Newtonsoft.Json.DateTimeZoneHandling)", file="JsonConvertTest.cs", label="T parsed = JsonConvert.DeserializeObject<T>(date)", span="948-948"];
m2_562 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTimeFormat<T>(T, Newtonsoft.Json.DateFormatHandling, Newtonsoft.Json.DateTimeZoneHandling)", color=red, community=0, file="JsonConvertTest.cs", label="1: Assert.AreEqual(value, parsed)", span="951-951"];
m2_563 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTimeFormat<T>(T, Newtonsoft.Json.DateFormatHandling, Newtonsoft.Json.DateTimeZoneHandling)", color=red, community=0, file="JsonConvertTest.cs", label="0: Exception", span="953-953"];
m2_419 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date('' + DateTimeUtils.ConvertDateTimeToJavaScriptTicks(millisecondsLocal) + GetOffset(millisecondsLocal, DateFormatHandling.MicrosoftDateFormat) + @'')\/'', result.MsDateRoundtrip)", span="759-759"];
m2_172 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JsonConvertTest.cs", label="result = ((objA != null) ? objA.ToString() : null) + ((objB != null) ? objB.ToString() : null)", span="425-425"];
m2_173 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JsonConvertTest.cs", label="return true;", span="426-426"];
m2_174 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JsonConvertTest.cs", label="objA is BigInteger || objB is BigInteger", span="431-431"];
m2_175 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JsonConvertTest.cs", label="objA == null || objB == null", span="433-433"];
m2_100 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JsonConvertTest.cs", label="DateTime date1 = (DateTime)objA", span="317-317"];
m2_553 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt32(System.IFormatProvider)", file="JsonConvertTest.cs", label="return (int)this;", span="1143-1143"];
m2_405 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(''2000-01-01T01:01:01'' + GetOffset(year2000local, DateFormatHandling.IsoDateFormat), result.IsoDateLocal)", span="743-743"];
m2_525 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs", label="result.IsoDateUtc = TestDateTimeFormat(value, DateFormatHandling.IsoDateFormat, DateTimeZoneHandling.Utc)", span="894-894"];
m2_529 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", color=green, community=0, file="JsonConvertTest.cs", label="1: result.MsDateUnspecified = TestDateTimeFormat(value, DateFormatHandling.MicrosoftDateFormat, DateTimeZoneHandling.Unspecified)", span="901-901"];
m2_528 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs", label="result.MsDateLocal = TestDateTimeFormat(value, DateFormatHandling.MicrosoftDateFormat, DateTimeZoneHandling.Local)", span="900-900"];
m2_530 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", color=green, community=0, file="JsonConvertTest.cs", label="1: result.MsDateUtc = TestDateTimeFormat(value, DateFormatHandling.MicrosoftDateFormat, DateTimeZoneHandling.Utc)", span="902-902"];
m2_531 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs", label="TestDateTimeFormat(value, new IsoDateTimeConverter())", span="905-905"];
m2_526 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs", label="result.MsDateRoundtrip = TestDateTimeFormat(value, DateFormatHandling.MicrosoftDateFormat, DateTimeZoneHandling.RoundtripKind)", span="897-897"];
m2_527 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs", label="value is DateTime", span="898-898"];
m2_532 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs", label="value is DateTime", span="907-907"];
m2_378 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonConvertTest.cs", label="JTokenType.Bytes", span="817-817"];
m2_4 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ToStringEnsureEscapedArrayLength()", file="JsonConvertTest.cs", label="string convertedValue = JsonConvert.ToString((object)value)", span="68-68"];
m2_5 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ToStringEnsureEscapedArrayLength()", file="JsonConvertTest.cs", label="Assert.AreEqual(@'''''''' + nonAsciiChar + @''\\\u0000'''''', convertedValue)", span="69-69"];
m2_269 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", span="555-555"];
m2_714 [cluster="object.ToString()", file="JsonConvertTest.cs", label="Entry object.ToString()", span="0-0"];
m2_713 [cluster="int.ToString()", file="JsonConvertTest.cs", label="Entry int.ToString()", span="0-0"];
m2_628 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.MaximumDateTimeOffsetLength()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.MaximumDateTimeOffsetLength()", span="1069-1069"];
m2_629 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.MaximumDateTimeOffsetLength()", file="JsonConvertTest.cs", label="DateTimeOffset dt = new DateTimeOffset(2000, 12, 31, 20, 59, 59, new TimeSpan(0, 11, 33, 0, 0))", span="1071-1071"];
m2_630 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.MaximumDateTimeOffsetLength()", file="JsonConvertTest.cs", label="dt = dt.AddTicks(9999999)", span="1072-1072"];
m2_631 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.MaximumDateTimeOffsetLength()", file="JsonConvertTest.cs", label="StringWriter sw = new StringWriter()", span="1074-1074"];
m2_633 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.MaximumDateTimeOffsetLength()", file="JsonConvertTest.cs", label="writer.WriteValue(dt)", span="1077-1077"];
m2_632 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.MaximumDateTimeOffsetLength()", file="JsonConvertTest.cs", label="JsonTextWriter writer = new JsonTextWriter(sw)", span="1075-1075"];
m2_635 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.MaximumDateTimeOffsetLength()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''''''2000-12-31T20:59:59.9999999+11:33'''''', sw.ToString())", span="1080-1080"];
m2_634 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.MaximumDateTimeOffsetLength()", file="JsonConvertTest.cs", label="writer.Flush()", span="1078-1078"];
m2_636 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.MaximumDateTimeOffsetLength()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.MaximumDateTimeOffsetLength()", span="1069-1069"];
m2_388 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonConvertTest.cs", label="writer.WriteValue((Uri)_value)", span="827-827"];
m2_650 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.MaximumDateTimeMicrosoftDateFormatLength()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.MaximumDateTimeMicrosoftDateFormatLength()", span="1098-1098"];
m2_651 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.MaximumDateTimeMicrosoftDateFormatLength()", file="JsonConvertTest.cs", label="DateTime dt = DateTime.MaxValue", span="1100-1100"];
m2_652 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.MaximumDateTimeMicrosoftDateFormatLength()", file="JsonConvertTest.cs", label="StringWriter sw = new StringWriter()", span="1102-1102"];
m2_655 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.MaximumDateTimeMicrosoftDateFormatLength()", file="JsonConvertTest.cs", label="writer.WriteValue(dt)", span="1106-1106"];
m2_653 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.MaximumDateTimeMicrosoftDateFormatLength()", color=red, community=0, file="JsonConvertTest.cs", label="1: JsonTextWriter writer = new JsonTextWriter(sw)", span="1103-1103"];
m2_654 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.MaximumDateTimeMicrosoftDateFormatLength()", color=red, community=0, file="JsonConvertTest.cs", label="1: writer.DateFormatHandling = DateFormatHandling.MicrosoftDateFormat", span="1104-1104"];
m2_656 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.MaximumDateTimeMicrosoftDateFormatLength()", file="JsonConvertTest.cs", label="writer.Flush()", span="1107-1107"];
m2_657 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.MaximumDateTimeMicrosoftDateFormatLength()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.MaximumDateTimeMicrosoftDateFormatLength()", span="1098-1098"];
m2_857 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.RoundingJsonConverter.RoundingJsonConverter(int, System.MidpointRounding)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.RoundingJsonConverter.RoundingJsonConverter(int, System.MidpointRounding)", span="1584-1584"];
m2_858 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.RoundingJsonConverter.RoundingJsonConverter(int, System.MidpointRounding)", file="JsonConvertTest.cs", label="_precision = precision", span="1586-1586"];
m2_859 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.RoundingJsonConverter.RoundingJsonConverter(int, System.MidpointRounding)", file="JsonConvertTest.cs", label="_rounding = rounding", span="1587-1587"];
m2_860 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.RoundingJsonConverter.RoundingJsonConverter(int, System.MidpointRounding)", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.RoundingJsonConverter.RoundingJsonConverter(int, System.MidpointRounding)", span="1584-1584"];
m2_477 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(''0001-01-01T00:00:00'' + GetOffset(default(DateTime), DateFormatHandling.IsoDateFormat), result.IsoDateLocal)", span="827-827"];
m2_601 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsString()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsString()", span="460-460"];
m2_668 [cluster="Unk.Parse", file="JsonConvertTest.cs", label="Entry Unk.Parse", span=""];
m2_143 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", span="999-999"];
m2_162 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_CreateWithSettings()", file="JsonConvertTest.cs", label="serializer.Serialize(sw, l)", span="389-389"];
m2_163 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_CreateWithSettings()", file="JsonConvertTest.cs", label="StringAssert.AreEqual(@''[\r\n  1,\r\n  2,\r\n  3\r\n]'', sw.ToString())", span="391-395"];
m2_164 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_CreateWithSettings()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_CreateWithSettings()", span="353-353"];
m2_166 [cluster="Newtonsoft.Json.JsonSerializer.CreateDefault(Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.CreateDefault(Newtonsoft.Json.JsonSerializerSettings)", span="615-615"];
m2_165 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.IntConverter.IntConverter()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.IntConverter.IntConverter()", span="403-403"];
m2_167 [cluster="System.Collections.ObjectModel.Collection<T>.Clear()", file="JsonConvertTest.cs", label="Entry System.Collections.ObjectModel.Collection<T>.Clear()", span="0-0"];
m2_312 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JsonConvertTest.cs", label="value is TimeSpan", span="670-670"];
m2_250 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JsonConvertTest.cs", label="ExpressionType.Add", span="542-542"];
m2_251 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JsonConvertTest.cs", label="ExpressionType.AddAssign", span="543-543"];
m2_252 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JsonConvertTest.cs", label="result = l1 + l2", span="544-544"];
m2_679 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.StackOverflowTest()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.StackOverflowTest()", span="1137-1137"];
m2_680 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.StackOverflowTest()", file="JsonConvertTest.cs", label="StringBuilder sb = new StringBuilder()", span="1139-1139"];
m2_681 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.StackOverflowTest()", file="JsonConvertTest.cs", label="int depth = 900", span="1141-1141"];
m2_684 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.StackOverflowTest()", file="JsonConvertTest.cs", label="sb.Append(''{'A':'')", span="1144-1144"];
m2_686 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.StackOverflowTest()", file="JsonConvertTest.cs", label="sb.Append(''{***}'')", span="1148-1148"];
m2_689 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.StackOverflowTest()", file="JsonConvertTest.cs", label="sb.Append(''}'')", span="1151-1151"];
m2_691 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.StackOverflowTest()", file="JsonConvertTest.cs", label="string json = sb.ToString()", span="1154-1154"];
m2_682 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.StackOverflowTest()", file="JsonConvertTest.cs", label="int i = 0", span="1142-1142"];
m2_683 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.StackOverflowTest()", file="JsonConvertTest.cs", label="i < depth", span="1142-1142"];
m2_688 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.StackOverflowTest()", file="JsonConvertTest.cs", label="i < depth", span="1149-1149"];
m2_685 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.StackOverflowTest()", file="JsonConvertTest.cs", label="i++", span="1142-1142"];
m2_687 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.StackOverflowTest()", file="JsonConvertTest.cs", label="int i = 0", span="1149-1149"];
m2_690 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.StackOverflowTest()", file="JsonConvertTest.cs", label="i++", span="1149-1149"];
m2_692 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.StackOverflowTest()", file="JsonConvertTest.cs", label="JsonSerializer serializer = new JsonSerializer() { }", span="1155-1155"];
m2_693 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.StackOverflowTest()", file="JsonConvertTest.cs", label="serializer.Deserialize<Nest>(new JsonTextReader(new StringReader(json)))", span="1156-1156"];
m2_694 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.StackOverflowTest()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.StackOverflowTest()", span="1137-1137"];
m2_144 [cluster="System.Convert.ToInt64(object, System.IFormatProvider)", file="JsonConvertTest.cs", label="Entry System.Convert.ToInt64(object, System.IFormatProvider)", span="0-0"];
m2_752 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.OverloadsJsonConverterer.OverloadsJsonConverterer(params int[])", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.OverloadsJsonConverterer.OverloadsJsonConverterer(params int[])", span="1284-1284"];
m2_753 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.OverloadsJsonConverterer.OverloadsJsonConverterer(params int[])", file="JsonConvertTest.cs", label="_type = ''int[]''", span="1286-1286"];
m2_754 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.OverloadsJsonConverterer.OverloadsJsonConverterer(params int[])", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.OverloadsJsonConverterer.OverloadsJsonConverterer(params int[])", span="1284-1284"];
m2_145 [cluster="Newtonsoft.Json.JsonSerializer.Create()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Create()", span="558-558"];
m2_637 [cluster="System.TimeSpan.TimeSpan(int, int, int, int, int)", file="JsonConvertTest.cs", label="Entry System.TimeSpan.TimeSpan(int, int, int, int, int)", span="0-0"];
m2_710 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ClobberingJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.ClobberingJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="1204-1204"];
m2_711 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ClobberingJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonConvertTest.cs", label="writer.WriteValue(ClobberValueString + ''-'' + ClobberValueInt.ToString() + ''-'' + value.ToString())", span="1206-1206"];
m2_712 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ClobberingJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.ClobberingJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="1204-1204"];
m2_567 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTimeFormat<T>(T, Newtonsoft.Json.DateFormatHandling, Newtonsoft.Json.DateTimeZoneHandling)", file="JsonConvertTest.cs", label="Assert.AreEqual(valueTicks, parsedTicks)", span="960-960"];
m2_568 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTimeFormat<T>(T, Newtonsoft.Json.DateFormatHandling, Newtonsoft.Json.DateTimeZoneHandling)", file="JsonConvertTest.cs", label="return date.Trim('''');", span="964-964"];
m2_569 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTimeFormat<T>(T, Newtonsoft.Json.DateFormatHandling, Newtonsoft.Json.DateTimeZoneHandling)", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.TestDateTimeFormat<T>(T, Newtonsoft.Json.DateFormatHandling, Newtonsoft.Json.DateTimeZoneHandling)", span="929-929"];
m2_422 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date('' + DateTimeUtils.ConvertDateTimeToJavaScriptTicks(millisecondsLocal) + @'')\/'', result.MsDateUtc)", span="762-762"];
m2_425 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="result = TestDateTime(''DateTime Local with ticks'', ticksLocal)", span="767-767"];
m2_423 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="DateTime ticksLocal = new DateTime(634663873826822481, DateTimeKind.Local)", span="764-764"];
m2_424 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="localToUtcDate = ticksLocal.ToUniversalTime().ToString(''yyyy-MM-ddTHH:mm:ss.FFFFFFFK'')", span="765-765"];
m2_426 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(''2012-03-03T16:03:02.6822481'' + GetOffset(ticksLocal, DateFormatHandling.IsoDateFormat), result.IsoDateRoundtrip)", span="768-768"];
m2_150 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_CreateWithSettings()", file="JsonConvertTest.cs", label="JsonConvert.DefaultSettings = () => new JsonSerializerSettings\r\n                {\r\n                    Formatting = Formatting.Indented\r\n                }", span="357-360"];
m2_95 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JsonConvertTest.cs", label="bool b1 = Convert.ToBoolean(objA, CultureInfo.InvariantCulture)", span="308-308"];
m2_372 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonConvertTest.cs", label="return;", span="804-804"];
m2_564 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTimeFormat<T>(T, Newtonsoft.Json.DateFormatHandling, Newtonsoft.Json.DateTimeZoneHandling)", file="JsonConvertTest.cs", label="long valueTicks = GetTicks(value)", span="955-955"];
m2_565 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTimeFormat<T>(T, Newtonsoft.Json.DateFormatHandling, Newtonsoft.Json.DateTimeZoneHandling)", file="JsonConvertTest.cs", label="long parsedTicks = GetTicks(parsed)", span="956-956"];
m2_566 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTimeFormat<T>(T, Newtonsoft.Json.DateFormatHandling, Newtonsoft.Json.DateTimeZoneHandling)", file="JsonConvertTest.cs", label="valueTicks = (valueTicks / 10000) * 10000", span="958-958"];
m2_268 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", span="419-419"];
m2_61 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.NameTableTestClassConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonConvertTest.cs", label="Assert.AreEqual(''hi'', s)", span="177-177"];
m2_257 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JsonConvertTest.cs", label="return true;", span="549-549"];
m2_258 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JsonConvertTest.cs", label="ExpressionType.Multiply", span="550-550"];
m2_259 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JsonConvertTest.cs", label="ExpressionType.MultiplyAssign", span="551-551"];
m2_260 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JsonConvertTest.cs", label="result = l1 * l2", span="552-552"];
m2_261 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JsonConvertTest.cs", label="return true;", span="553-553"];
m2_400 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date(253402300799999)\/'', result.MsDateUtc)", span="736-736"];
m2_401 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="DateTime year2000local = new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Local)", span="738-738"];
m2_552 [cluster="System.Convert.ToInt32(long)", file="JsonConvertTest.cs", label="Entry System.Convert.ToInt32(long)", span="0-0"];
m2_554 [cluster="System.Console.WriteLine()", file="JsonConvertTest.cs", label="Entry System.Console.WriteLine()", span="0-0"];
m2_736 [cluster="string.Format(string, object)", file="JsonConvertTest.cs", label="Entry string.Format(string, object)", span="0-0"];
m2_389 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonConvertTest.cs", label="return;", span="828-828"];
m2_313 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JsonConvertTest.cs", label="return JTokenType.TimeSpan;", span="672-672"];
m2_64 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.NameTableTestClassConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonConvertTest.cs", label="return o;", span="185-185"];
m2_68 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", span="838-838"];
m2_67 [cluster="Unk.IsNotNull", file="JsonConvertTest.cs", label="Entry Unk.IsNotNull", span=""];
m2_65 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.NameTableTestClassConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.NameTableTestClassConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="168-168"];
m2_69 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.NameTableTestClass.NameTableTestClass()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.NameTableTestClass.NameTableTestClass()", span="156-156"];
m2_71 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.NameTableTestClassConverter.CanConvert(System.Type)", file="JsonConvertTest.cs", label="return objectType == typeof(NameTableTestClass);", span="190-190"];
m2_83 [cluster="System.IO.StringReader.StringReader(string)", file="JsonConvertTest.cs", label="Entry System.IO.StringReader.StringReader(string)", span="0-0"];
m2_84 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="75-75"];
m2_86 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="530-530"];
m2_87 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.NameTableTestClassConverter.NameTableTestClassConverter()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.NameTableTestClassConverter.NameTableTestClassConverter()", span="161-161"];
m2_91 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_Example()", file="JsonConvertTest.cs", label="Employee e = new Employee\r\n                {\r\n                    FirstName = ''Eric'',\r\n                    LastName = ''Example'',\r\n                    BirthDate = new DateTime(1980, 4, 20, 0, 0, 0, DateTimeKind.Utc),\r\n                    Department = ''IT'',\r\n                    JobTitle = ''Web Dude''\r\n                }", span="221-228"];
m2_92 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_Example()", file="JsonConvertTest.cs", label="string json = JsonConvert.SerializeObject(e)", span="230-230"];
m2_96 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="JsonConvertTest.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m2_99 [cluster="lambda expression", file="JsonConvertTest.cs", label="Exit lambda expression", span="215-219"];
m2_102 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_Override()", file="JsonConvertTest.cs", label="JsonConvert.DefaultSettings = () => new JsonSerializerSettings\r\n                {\r\n                    Formatting = Formatting.Indented\r\n                }", span="258-261"];
m2_103 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_Override()", file="JsonConvertTest.cs", label="string json = JsonConvert.SerializeObject(new { test = new[] { 1, 2, 3 } }, new JsonSerializerSettings\r\n                {\r\n                    Formatting = Formatting.None\r\n                })", span="263-266"];
m2_104 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_Override()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''{''''test'''':[1,2,3]}'', json)", span="268-268"];
m2_106 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", span="582-582"];
m2_108 [cluster="lambda expression", file="JsonConvertTest.cs", label="new JsonSerializerSettings\r\n                {\r\n                    Formatting = Formatting.Indented\r\n                }", span="258-261"];
m2_109 [cluster="lambda expression", file="JsonConvertTest.cs", label="Exit lambda expression", span="258-261"];
m2_115 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.JavaScriptDateTimeConverter()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.JavaScriptDateTimeConverter()", span="34-34"];
m2_123 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_Create()", file="JsonConvertTest.cs", label="StringWriter sw = new StringWriter()", span="318-318"];
m2_125 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_Create()", file="JsonConvertTest.cs", label="serializer.Serialize(sw, l)", span="320-320"];
m2_126 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_Create()", file="JsonConvertTest.cs", label="StringAssert.AreEqual(@''[\r\n  1,\r\n  2,\r\n  3\r\n]'', sw.ToString())", span="322-326"];
m2_129 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_Create()", file="JsonConvertTest.cs", label="serializer.Serialize(sw, l)", span="330-330"];
m2_131 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_Create()", file="JsonConvertTest.cs", label="sw = new StringWriter()", span="334-334"];
m2_132 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_Create()", file="JsonConvertTest.cs", label="serializer = new JsonSerializer()", span="335-335"];
m2_135 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_Create()", file="JsonConvertTest.cs", label="sw = new StringWriter()", span="340-340"];
m2_137 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_Create()", file="JsonConvertTest.cs", label="serializer.Serialize(sw, l)", span="342-342"];
m2_138 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_Create()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''[1,2,3]'', sw.ToString())", span="344-344"];
m2_140 [cluster="System.Collections.Generic.List<T>.List()", file="JsonConvertTest.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m2_66 [cluster="Newtonsoft.Json.JsonReader.Read()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonReader.Read()", span="409-409"];
m2_70 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.NameTableTestClassConverter.CanConvert(System.Type)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.NameTableTestClassConverter.CanConvert(System.Type)", span="188-188"];
m2_93 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_Example()", file="JsonConvertTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''firstName'''': ''''Eric'''',\r\n  ''''lastName'''': ''''Example'''',\r\n  ''''birthDate'''': ''''1980-04-20T00:00:00Z'''',\r\n  ''''department'''': ''''IT'''',\r\n  ''''jobTitle'''': ''''Web Dude''''\r\n}'', json)", span="239-245"];
m2_97 [cluster="lambda expression", file="JsonConvertTest.cs", label="Entry lambda expression", span="215-219"];
m2_105 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_Override()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_Override()", span="254-254"];
m2_121 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_Create()", file="JsonConvertTest.cs", label="JsonConvert.DefaultSettings = () => new JsonSerializerSettings\r\n                {\r\n                    Formatting = Formatting.Indented\r\n                }", span="311-314"];
m2_118 [cluster="lambda expression", file="JsonConvertTest.cs", label="new JsonSerializerSettings\r\n                {\r\n                    Formatting = Formatting.Indented,\r\n                    Converters = { new IsoDateTimeConverter { DateTimeFormat = ''yyyy'' } }\r\n                }", span="281-285"];
m2_120 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_Create()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_Create()", span="307-307"];
m2_124 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_Create()", file="JsonConvertTest.cs", label="JsonSerializer serializer = JsonSerializer.CreateDefault()", span="319-319"];
m2_127 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_Create()", file="JsonConvertTest.cs", label="sw = new StringWriter()", span="328-328"];
m2_130 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_Create()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''[1,2,3]'', sw.ToString())", span="332-332"];
m2_133 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_Create()", file="JsonConvertTest.cs", label="serializer.Serialize(sw, l)", span="336-336"];
m2_136 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_Create()", file="JsonConvertTest.cs", label="serializer = JsonSerializer.Create()", span="341-341"];
m2_139 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_Create()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_Create()", span="307-307"];
m2_72 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.NameTableTestClassConverter.CanConvert(System.Type)", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.NameTableTestClassConverter.CanConvert(System.Type)", span="188-188"];
m2_88 [cluster="System.Collections.ObjectModel.Collection<T>.Add(T)", file="JsonConvertTest.cs", label="Entry System.Collections.ObjectModel.Collection<T>.Add(T)", span="0-0"];
m2_94 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_Example()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_Example()", span="211-211"];
m2_98 [cluster="lambda expression", file="JsonConvertTest.cs", label="new JsonSerializerSettings\r\n                {\r\n                    Formatting = Formatting.Indented,\r\n                    ContractResolver = new CamelCasePropertyNamesContractResolver()\r\n                }", span="215-219"];
m2_122 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_Create()", file="JsonConvertTest.cs", label="IList<int> l = new List<int> { 1, 2, 3 }", span="316-316"];
m2_128 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_Create()", file="JsonConvertTest.cs", label="serializer.Formatting = Formatting.None", span="329-329"];
m2_134 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_Create()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''[1,2,3]'', sw.ToString())", span="338-338"];
m2_90 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_Example()", file="JsonConvertTest.cs", label="JsonConvert.DefaultSettings = () => new JsonSerializerSettings\r\n                {\r\n                    Formatting = Formatting.Indented,\r\n                    ContractResolver = new CamelCasePropertyNamesContractResolver()\r\n                }", span="215-219"];
m2_101 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_Override()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_Override()", span="254-254"];
m2_107 [cluster="lambda expression", file="JsonConvertTest.cs", label="Entry lambda expression", span="258-261"];
m2_117 [cluster="lambda expression", file="JsonConvertTest.cs", label="Entry lambda expression", span="281-285"];
m2_119 [cluster="lambda expression", file="JsonConvertTest.cs", label="Exit lambda expression", span="281-285"];
m2_89 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_Example()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_Example()", span="211-211"];
m2_141 [cluster="System.IO.StringWriter.StringWriter()", file="JsonConvertTest.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m2_50 [cluster="Newtonsoft.Json.Linq.JValue.CompareBigInteger(BigInteger, object)", file="JsonConvertTest.cs", label="i2 is double || i2 is float", span="238-238"];
m2_285 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="value = (uint)1", span="580-580"];
m2_314 [cluster="System.DateTimeOffset.DateTimeOffset(long, System.TimeSpan)", file="JsonConvertTest.cs", label="Entry System.DateTimeOffset.DateTimeOffset(long, System.TimeSpan)", span="0-0"];
m2_286 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(''1'', JsonConvert.ToString(value))", span="581-581"];
m2_288 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(''1'', JsonConvert.ToString(value))", span="584-584"];
m2_290 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(''1'', JsonConvert.ToString(value))", span="587-587"];
m2_291 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="value = (ulong)1", span="589-589"];
m2_292 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(''1'', JsonConvert.ToString(value))", span="590-590"];
m2_294 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''''''1970-01-01T00:00:00Z'''''', JsonConvert.ToString(value))", span="593-593"];
m2_296 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''''''\/Date(0)\/'''''', JsonConvert.ToString((DateTime)value, DateFormatHandling.MicrosoftDateFormat, DateTimeZoneHandling.RoundtripKind))", span="596-596"];
m2_298 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''''''1970-01-01T00:00:00+00:00'''''', JsonConvert.ToString(value))", span="600-600"];
m2_300 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''''''\/Date(0+0000)\/'''''', JsonConvert.ToString((DateTimeOffset)value, DateFormatHandling.MicrosoftDateFormat))", span="603-603"];
m2_302 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(''null'', JsonConvert.ToString(value))", span="607-607"];
m2_304 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(''null'', JsonConvert.ToString(value))", span="611-611"];
m2_306 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''''''I am a string'''''', JsonConvert.ToString(value))", span="615-615"];
m2_308 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(''true'', JsonConvert.ToString(value))", span="618-618"];
m2_310 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''''''c'''''', JsonConvert.ToString(value))", span="621-621"];
m2_287 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="value = (ushort)1", span="583-583"];
m2_293 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="value = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="592-592"];
m2_299 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="value = new DateTimeOffset(DateTimeUtils.InitialJavaScriptDateTicks, TimeSpan.Zero)", span="602-602"];
m2_301 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="value = null", span="606-606"];
m2_305 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="value = ''I am a string''", span="614-614"];
m2_307 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="value = true", span="617-617"];
m2_309 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="value = 'c'", span="620-620"];
m2_311 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", span="555-555"];
m2_289 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="value = (sbyte)1", span="586-586"];
m2_295 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="value = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="595-595"];
m2_297 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="value = new DateTimeOffset(DateTimeUtils.InitialJavaScriptDateTicks, TimeSpan.Zero)", span="599-599"];
m2_303 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="value = DBNull.Value", span="610-610"];
m2_315 [cluster="Unk.ToString", file="JsonConvertTest.cs", label="Entry Unk.ToString", span=""];
m2_460 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(''1970-01-01T00:00:00'', result.IsoDateUnspecified)", span="808-808"];
m2_187 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JsonConvertTest.cs", label="result = i1 - i2", span="452-452"];
m2_613 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestJsonDateTimeOffsetRoundtrip()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.TestJsonDateTimeOffsetRoundtrip()", span="1049-1049"];
m2_614 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestJsonDateTimeOffsetRoundtrip()", file="JsonConvertTest.cs", label="var now = DateTimeOffset.Now", span="1051-1051"];
m2_615 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestJsonDateTimeOffsetRoundtrip()", file="JsonConvertTest.cs", label="var dict = new Dictionary<string, object> { { ''foo'', now } }", span="1052-1052"];
m2_624 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestJsonDateTimeOffsetRoundtrip()", file="JsonConvertTest.cs", label="Assert.AreEqual(date, now)", span="1065-1065"];
m2_616 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestJsonDateTimeOffsetRoundtrip()", color=red, community=0, file="JsonConvertTest.cs", label="1: var settings = new JsonSerializerSettings()", span="1054-1054"];
m2_620 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestJsonDateTimeOffsetRoundtrip()", file="JsonConvertTest.cs", label="var json = JsonConvert.SerializeObject(dict, settings)", span="1058-1058"];
m2_617 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestJsonDateTimeOffsetRoundtrip()", color=red, community=0, file="JsonConvertTest.cs", label="2: settings.DateFormatHandling = DateFormatHandling.IsoDateFormat", span="1055-1055"];
m2_618 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestJsonDateTimeOffsetRoundtrip()", color=red, community=0, file="JsonConvertTest.cs", label="2: settings.DateParseHandling = DateParseHandling.DateTimeOffset", span="1056-1056"];
m2_619 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestJsonDateTimeOffsetRoundtrip()", color=red, community=0, file="JsonConvertTest.cs", label="1: settings.DateTimeZoneHandling = DateTimeZoneHandling.RoundtripKind", span="1057-1057"];
m2_622 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestJsonDateTimeOffsetRoundtrip()", file="JsonConvertTest.cs", label="JsonConvert.PopulateObject(json, newDict, settings)", span="1061-1061"];
m2_621 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestJsonDateTimeOffsetRoundtrip()", file="JsonConvertTest.cs", label="var newDict = new Dictionary<string, object>()", span="1060-1060"];
m2_623 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestJsonDateTimeOffsetRoundtrip()", file="JsonConvertTest.cs", label="var date = newDict[''foo'']", span="1063-1063"];
m2_625 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestJsonDateTimeOffsetRoundtrip()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.TestJsonDateTimeOffsetRoundtrip()", span="1049-1049"];
m2_516 [cluster="Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", color=green, community=0, file="JsonConvertTest.cs", label="1: return 1;", span="1057-1057"];
m2_649 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTime)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTime)", span="629-629"];
m2_511 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JsonConvertTest.cs", label="result = null", span="1047-1047"];
m2_761 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.OverloadsJsonConverterer.OverloadsJsonConverterer(System.Collections.Generic.IList<string>)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.OverloadsJsonConverterer.OverloadsJsonConverterer(System.Collections.Generic.IList<string>)", span="1301-1301"];
m2_762 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.OverloadsJsonConverterer.OverloadsJsonConverterer(System.Collections.Generic.IList<string>)", file="JsonConvertTest.cs", label="_type = ''IList<string>''", span="1303-1303"];
m2_763 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.OverloadsJsonConverterer.OverloadsJsonConverterer(System.Collections.Generic.IList<string>)", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.OverloadsJsonConverterer.OverloadsJsonConverterer(System.Collections.Generic.IList<string>)", span="1301-1301"];
m2_449 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(''2000-01-01T01:01:01'', result.IsoDateUnspecified)", span="795-795"];
m2_453 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date('' + DateTimeUtils.ConvertDateTimeToJavaScriptTicks(DateTime.SpecifyKind(year2000Utc, DateTimeKind.Unspecified)) + GetOffset(year2000Utc, DateFormatHandling.MicrosoftDateFormat) + @'')\/'', result.MsDateUnspecified)", span="799-799"];
m2_455 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="DateTime unixEpoc = new DateTime(621355968000000000, DateTimeKind.Utc)", span="802-802"];
m2_458 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(''1970-01-01T00:00:00Z'', result.IsoDateRoundtrip)", span="806-806"];
m2_454 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date(946688461000)\/'', result.MsDateUtc)", span="800-800"];
m2_456 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="utcTolocalDate = unixEpoc.ToLocalTime().ToString(''yyyy-MM-ddTHH:mm:ss'')", span="803-803"];
m2_457 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="result = TestDateTime(''DateTime Unix Epoc'', unixEpoc)", span="805-805"];
m2_459 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(utcTolocalDate + GetOffset(unixEpoc, DateFormatHandling.IsoDateFormat), result.IsoDateLocal)", span="807-807"];
m2_201 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JsonConvertTest.cs", label="decimal d1 = Convert.ToDecimal(objA, CultureInfo.InvariantCulture)", span="474-474"];
m2_202 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JsonConvertTest.cs", label="decimal d2 = Convert.ToDecimal(objB, CultureInfo.InvariantCulture)", span="475-475"];
m2_203 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JsonConvertTest.cs", label=operation, span="477-477"];
m2_204 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JsonConvertTest.cs", label="ExpressionType.Add", span="479-479"];
m2_847 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.CustomDoubleRounding()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.CustomDoubleRounding()", span="1543-1543"];
m2_848 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.CustomDoubleRounding()", file="JsonConvertTest.cs", label="var measurements = new Measurements\r\n            {\r\n                Loads = new List<double> { 23283.567554707258, 23224.849899771067, 23062.5, 22846.272519910868, 22594.281246368635 },\r\n                Positions = new List<double> { 57.724227689317019, 60.440934405753069, 63.444192925248643, 66.813119113482557, 70.4496501404433 },\r\n                Gain = 12345.67895111213\r\n            }", span="1545-1550"];
m2_849 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.CustomDoubleRounding()", file="JsonConvertTest.cs", label="string json = JsonConvert.SerializeObject(measurements)", span="1552-1552"];
m2_850 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.CustomDoubleRounding()", file="JsonConvertTest.cs", label="Assert.AreEqual(''{\''Positions\'':[57.72,60.44,63.44,66.81,70.45],\''Loads\'':[23284.0,23225.0,23062.0,22846.0,22594.0],\''Gain\'':12345.679}'', json)", span="1554-1554"];
m2_851 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.CustomDoubleRounding()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.CustomDoubleRounding()", span="1543-1543"];
m2_263 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JsonConvertTest.cs", label="ExpressionType.DivideAssign", span="555-555"];
m2_572 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDecimal(System.IFormatProvider)", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDecimal(System.IFormatProvider)", span="1171-1171"];
m2_627 [cluster="Newtonsoft.Json.JsonConvert.PopulateObject(string, object, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonConvert.PopulateObject(string, object, Newtonsoft.Json.JsonSerializerSettings)", span="836-836"];
m2_570 [cluster="System.Enum.ToString(string)", file="JsonConvertTest.cs", label="Entry System.Enum.ToString(string)", span="0-0"];
m2_571 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.GetTicks(object)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.GetTicks(object)", span="991-991"];
m2_749 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.OverloadsJsonConverterer.OverloadsJsonConverterer(double)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.OverloadsJsonConverterer.OverloadsJsonConverterer(double)", span="1277-1277"];
m2_750 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.OverloadsJsonConverterer.OverloadsJsonConverterer(double)", file="JsonConvertTest.cs", label="_type = ''double''", span="1279-1279"];
m2_751 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.OverloadsJsonConverterer.OverloadsJsonConverterer(double)", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.OverloadsJsonConverterer.OverloadsJsonConverterer(double)", span="1277-1277"];
m2_320 [cluster="lambda expression", file="JsonConvertTest.cs", label="string orig = @''this is a string ''''that has quotes'''' ''", span="629-629"];
m2_324 [cluster="lambda expression", file="JsonConvertTest.cs", label="Exit lambda expression", span="627-637"];
m2_319 [cluster="lambda expression", file="JsonConvertTest.cs", label="Entry lambda expression", span="627-637"];
m2_325 [cluster="string.Replace(string, string)", file="JsonConvertTest.cs", label="Entry string.Replace(string, string)", span="0-0"];
m2_321 [cluster="lambda expression", file="JsonConvertTest.cs", label="string serialized = JsonConvert.SerializeObject(orig)", span="631-631"];
m2_323 [cluster="lambda expression", file="JsonConvertTest.cs", label="JsonConvert.DeserializeObject<string>(serialized)", span="636-636"];
m2_322 [cluster="lambda expression", file="JsonConvertTest.cs", label="serialized = serialized.Replace(@''\'''''', ''\'''')", span="634-634"];
m2_408 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date('' + DateTimeUtils.ConvertDateTimeToJavaScriptTicks(year2000local) + GetOffset(year2000local, DateFormatHandling.MicrosoftDateFormat) + @'')\/'', result.MsDateRoundtrip)", span="746-746"];
m2_159 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_CreateWithSettings()", file="JsonConvertTest.cs", label="StringAssert.AreEqual(@''[\r\n  1,\r\n  2,\r\n  3\r\n]'', sw.ToString())", span="381-385"];
m2_152 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_CreateWithSettings()", file="JsonConvertTest.cs", label="StringWriter sw = new StringWriter()", span="364-364"];
m2_338 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonConvertTest.cs", label="JTokenType.Raw", span="748-748"];
m2_60 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.NameTableTestClassConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonConvertTest.cs", label="string s = serializer.Deserialize<string>(reader)", span="176-176"];
m2_436 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(''2000-01-01T01:01:01'', result.IsoDateRoundtrip)", span="780-780"];
m2_437 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(''2000-01-01T01:01:01'' + GetOffset(year2000Unspecified, DateFormatHandling.IsoDateFormat), result.IsoDateLocal)", span="781-781"];
m2_439 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(''2000-01-01T01:01:01Z'', result.IsoDateUtc)", span="783-783"];
m2_438 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(''2000-01-01T01:01:01'', result.IsoDateUnspecified)", span="782-782"];
m2_440 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date('' + DateTimeUtils.ConvertDateTimeToJavaScriptTicks(year2000Unspecified) + GetOffset(year2000Unspecified, DateFormatHandling.MicrosoftDateFormat) + @'')\/'', result.MsDateRoundtrip)", span="784-784"];
m2_55 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", span="314-314"];
m2_56 [cluster="Unk.CompareTo", file="JsonConvertTest.cs", label="Entry Unk.CompareTo", span=""];
m2_57 [cluster="System.Math.Truncate(decimal)", file="JsonConvertTest.cs", label="Entry System.Math.Truncate(decimal)", span="0-0"];
m2_58 [cluster="System.Math.Abs(decimal)", file="JsonConvertTest.cs", label="Entry System.Math.Abs(decimal)", span="0-0"];
m2_62 [cluster="System.Math.Abs(double)", file="JsonConvertTest.cs", label="Entry System.Math.Abs(double)", span="0-0"];
m2_63 [cluster="double.CompareTo(double)", file="JsonConvertTest.cs", label="Entry double.CompareTo(double)", span="0-0"];
m2_177 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JsonConvertTest.cs", label="return true;", span="436-436"];
m2_178 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JsonConvertTest.cs", label="BigInteger i1 = ConvertUtils.ToBigInteger(objA)", span="441-441"];
m2_179 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JsonConvertTest.cs", label="BigInteger i2 = ConvertUtils.ToBigInteger(objB)", span="442-442"];
m2_149 [cluster="bool.CompareTo(bool)", file="JsonConvertTest.cs", label="Entry bool.CompareTo(bool)", span="0-0"];
m2_151 [cluster="System.DateTime.CompareTo(System.DateTime)", file="JsonConvertTest.cs", label="Entry System.DateTime.CompareTo(System.DateTime)", span="0-0"];
m2_154 [cluster="System.ArgumentException.ArgumentException(string)", file="JsonConvertTest.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m2_158 [cluster="System.Collections.Generic.Comparer<T>.Compare(T, T)", file="JsonConvertTest.cs", label="Entry System.Collections.Generic.Comparer<T>.Compare(T, T)", span="0-0"];
m2_153 [cluster="System.DateTimeOffset.CompareTo(System.DateTimeOffset)", file="JsonConvertTest.cs", label="Entry System.DateTimeOffset.CompareTo(System.DateTimeOffset)", span="0-0"];
m2_155 [cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.ByteArrayCompare(byte[], byte[])", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Utilities.MiscellaneousUtils.ByteArrayCompare(byte[], byte[])", span="92-92"];
m2_157 [cluster="System.Uri.ToString()", file="JsonConvertTest.cs", label="Entry System.Uri.ToString()", span="0-0"];
m2_160 [cluster="string.FormatWith(System.IFormatProvider, object)", file="JsonConvertTest.cs", label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47"];
m2_161 [cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.CreateArgumentOutOfRangeException(string, object, string)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Utilities.MiscellaneousUtils.CreateArgumentOutOfRangeException(string, object, string)", span="75-75"];
m2_640 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.MaximumDateTimeLength()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.MaximumDateTimeLength()", span="1085-1085"];
m2_641 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.MaximumDateTimeLength()", file="JsonConvertTest.cs", label="DateTime dt = new DateTime(2000, 12, 31, 20, 59, 59, DateTimeKind.Local)", span="1087-1087"];
m2_642 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.MaximumDateTimeLength()", file="JsonConvertTest.cs", label="dt = dt.AddTicks(9999999)", span="1088-1088"];
m2_643 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.MaximumDateTimeLength()", file="JsonConvertTest.cs", label="StringWriter sw = new StringWriter()", span="1090-1090"];
m2_645 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.MaximumDateTimeLength()", file="JsonConvertTest.cs", label="writer.WriteValue(dt)", span="1093-1093"];
m2_644 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.MaximumDateTimeLength()", file="JsonConvertTest.cs", label="JsonTextWriter writer = new JsonTextWriter(sw)", span="1091-1091"];
m2_646 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.MaximumDateTimeLength()", file="JsonConvertTest.cs", label="writer.Flush()", span="1094-1094"];
m2_647 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.MaximumDateTimeLength()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.MaximumDateTimeLength()", span="1085-1085"];
m2_7 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(object)", span="454-454"];
m2_15 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.PopulateTestObject.PopulateTestObject()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.PopulateTestObject.PopulateTestObject()", span="72-72"];
m2_546 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt16(System.IFormatProvider)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt16(System.IFormatProvider)", span="1131-1131"];
m2_573 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDateTime(System.IFormatProvider)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDateTime(System.IFormatProvider)", span="1176-1176"];
m2_574 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDateTime(System.IFormatProvider)", file="JsonConvertTest.cs", label="return (DateTime)this;", span="1178-1178"];
m2_575 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDateTime(System.IFormatProvider)", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDateTime(System.IFormatProvider)", span="1176-1176"];
m2_576 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToType(System.Type, System.IFormatProvider)", span="1181-1181"];
m2_578 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToType(System.Type, System.IFormatProvider)", span="1181-1181"];
m2_579 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", span="1931-1931"];
m2_577 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonConvertTest.cs", label="return ToObject(conversionType);", span="1183-1183"];
m2_580 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTimeFormat<T>(T, Newtonsoft.Json.JsonConverter)", file="JsonConvertTest.cs", label="Newtonsoft.Json.Linq.JValue", span=""];
m2_581 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTimeFormat<T>(T, Newtonsoft.Json.JsonConverter)", file="JsonConvertTest.cs", label="Assert.AreEqual(valueTicks, parsedTicks)", span="987-987"];
m2_582 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTimeFormat<T>(T, Newtonsoft.Json.JsonConverter)", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.TestDateTimeFormat<T>(T, Newtonsoft.Json.JsonConverter)", span="967-967"];
m2_544 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToByte(System.IFormatProvider)", file="JsonConvertTest.cs", label="return (byte)this;", span="1128-1128"];
m2_545 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToByte(System.IFormatProvider)", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToByte(System.IFormatProvider)", span="1126-1126"];
m2_558 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt64(System.IFormatProvider)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt64(System.IFormatProvider)", span="1151-1151"];
m2_559 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt64(System.IFormatProvider)", file="JsonConvertTest.cs", label="return (long)this;", span="1153-1153"];
m2_560 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt64(System.IFormatProvider)", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt64(System.IFormatProvider)", span="1151-1151"];
m2_16 [cluster="Newtonsoft.Json.JsonConvert.PopulateObject(string, object)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonConvert.PopulateObject(string, object)", span="822-822"];
m2_716 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ClobberingJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.ClobberingJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="1209-1209"];
m2_717 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ClobberingJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonConvertTest.cs", label="throw new NotImplementedException();", span="1211-1211"];
m2_718 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ClobberingJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.ClobberingJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="1209-1209"];
m2_841 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.JsonConverterConstructor_OverloadsWithBaseTypes()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.JsonConverterConstructor_OverloadsWithBaseTypes()", span="1533-1533"];
m2_842 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.JsonConverterConstructor_OverloadsWithBaseTypes()", file="JsonConvertTest.cs", label="OverloadWithBaseType value = new OverloadWithBaseType()", span="1535-1535"];
m2_843 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.JsonConverterConstructor_OverloadsWithBaseTypes()", file="JsonConvertTest.cs", label="string json = JsonConvert.SerializeObject(value)", span="1536-1536"];
m2_844 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.JsonConverterConstructor_OverloadsWithBaseTypes()", file="JsonConvertTest.cs", label="Assert.AreEqual(''{\''Overload\'':\''IList<string>\''}'', json)", span="1538-1538"];
m2_845 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.JsonConverterConstructor_OverloadsWithBaseTypes()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.JsonConverterConstructor_OverloadsWithBaseTypes()", span="1533-1533"];
m2_461 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(''1970-01-01T00:00:00Z'', result.IsoDateUtc)", span="809-809"];
m2_462 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date(0)\/'', result.MsDateRoundtrip)", span="810-810"];
m2_463 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date(0'' + GetOffset(unixEpoc, DateFormatHandling.MicrosoftDateFormat) + @'')\/'', result.MsDateLocal)", span="811-811"];
m2_42 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings()", file="JsonConvertTest.cs", label="string json = JsonConvert.SerializeObject(new { test = new[] { 1, 2, 3 } })", span="140-140"];
m2_420 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date('' + DateTimeUtils.ConvertDateTimeToJavaScriptTicks(millisecondsLocal) + GetOffset(millisecondsLocal, DateFormatHandling.MicrosoftDateFormat) + @'')\/'', result.MsDateLocal)", span="760-760"];
m2_421 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date('' + DateTimeUtils.ConvertDateTimeToJavaScriptTicks(millisecondsLocal) + GetOffset(millisecondsLocal, DateFormatHandling.MicrosoftDateFormat) + @'')\/'', result.MsDateUnspecified)", span="761-761"];
m2_464 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date('' + DateTimeUtils.ConvertDateTimeToJavaScriptTicks(DateTime.SpecifyKind(unixEpoc, DateTimeKind.Unspecified)) + GetOffset(unixEpoc, DateFormatHandling.MicrosoftDateFormat) + @'')\/'', result.MsDateUnspecified)", span="812-812"];
m2_148 [cluster="lambda expression", file="JsonConvertTest.cs", label="Exit lambda expression", span="311-314"];
m2_548 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt16(System.IFormatProvider)", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt16(System.IFormatProvider)", span="1131-1131"];
m2_658 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.IntegerLengthOverflows()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.IntegerLengthOverflows()", span="1112-1112"];
m2_659 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.IntegerLengthOverflows()", file="JsonConvertTest.cs", label="JObject o = JObject.Parse(@''{''''biginteger'''':'' + new String('9', 380) + ''}'')", span="1115-1115"];
m2_660 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.IntegerLengthOverflows()", file="JsonConvertTest.cs", label="JValue v = (JValue)o[''biginteger'']", span="1116-1116"];
m2_661 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.IntegerLengthOverflows()", file="JsonConvertTest.cs", label="Assert.AreEqual(JTokenType.Integer, v.Type)", span="1117-1117"];
m2_662 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.IntegerLengthOverflows()", file="JsonConvertTest.cs", label="Assert.AreEqual(typeof(BigInteger), v.Value.GetType())", span="1118-1118"];
m2_663 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.IntegerLengthOverflows()", file="JsonConvertTest.cs", label="Assert.AreEqual(BigInteger.Parse(new String('9', 380)), (BigInteger)v.Value)", span="1119-1119"];
m2_664 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.IntegerLengthOverflows()", file="JsonConvertTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => JObject.Parse(@''{''''biginteger'''':'' + new String('9', 381) + ''}''), ''JSON integer '' + new String('9', 381) + '' is too large to parse. Path 'biginteger', line 1, position 395.'')", span="1121-1121"];
m2_665 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.IntegerLengthOverflows()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.IntegerLengthOverflows()", span="1112-1112"];
m2_607 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DeserializeObject()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.DeserializeObject()", span="1028-1028"];
m2_608 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DeserializeObject()", file="JsonConvertTest.cs", label="string json = @''{\r\n        'Name': 'Bad Boys',\r\n        'ReleaseDate': '1995-4-7T00:00:00',\r\n        'Genres': [\r\n          'Action',\r\n          'Comedy'\r\n        ]\r\n      }''", span="1030-1037"];
m2_609 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DeserializeObject()", file="JsonConvertTest.cs", label="Movie m = JsonConvert.DeserializeObject<Movie>(json)", span="1039-1039"];
m2_610 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DeserializeObject()", file="JsonConvertTest.cs", label="string name = m.Name", span="1041-1041"];
m2_611 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DeserializeObject()", file="JsonConvertTest.cs", label="Assert.AreEqual(''Bad Boys'', m.Name)", span="1044-1044"];
m2_612 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DeserializeObject()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.DeserializeObject()", span="1028-1028"];
m2_583 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Write(object, Newtonsoft.Json.JsonConverter)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.Write(object, Newtonsoft.Json.JsonConverter)", span="996-996"];
m2_588 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Write(object, Newtonsoft.Json.JsonConverter)", file="JsonConvertTest.cs", label="StringWriter sw = new StringWriter()", span="998-998"];
m2_590 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Write(object, Newtonsoft.Json.JsonConverter)", file="JsonConvertTest.cs", label="converter.WriteJson(writer, value, null)", span="1000-1000"];
m2_589 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Write(object, Newtonsoft.Json.JsonConverter)", file="JsonConvertTest.cs", label="JsonTextWriter writer = new JsonTextWriter(sw)", span="999-999"];
m2_592 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Write(object, Newtonsoft.Json.JsonConverter)", file="JsonConvertTest.cs", label="return sw.ToString();", span="1003-1003"];
m2_591 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Write(object, Newtonsoft.Json.JsonConverter)", file="JsonConvertTest.cs", label="writer.Flush()", span="1002-1002"];
m2_593 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Write(object, Newtonsoft.Json.JsonConverter)", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.Write(object, Newtonsoft.Json.JsonConverter)", span="996-996"];
m2_379 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonConvertTest.cs", label="writer.WriteValue((byte[])_value)", span="818-818"];
m2_380 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonConvertTest.cs", label="return;", span="819-819"];
m2_381 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonConvertTest.cs", label="JTokenType.Guid", span="820-820"];
m2_383 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonConvertTest.cs", label="return;", span="822-822"];
m2_385 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonConvertTest.cs", label="writer.WriteValue((_value != null) ? (TimeSpan?)_value : null)", span="824-824"];
m2_382 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonConvertTest.cs", label="writer.WriteValue((_value != null) ? (Guid?)_value : null)", span="821-821"];
m2_384 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonConvertTest.cs", label="JTokenType.TimeSpan", span="823-823"];
m2_386 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonConvertTest.cs", label="return;", span="825-825"];
m2_387 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonConvertTest.cs", label="JTokenType.Uri", span="826-826"];
m2_870 [cluster="System.Math.Round(double, int, System.MidpointRounding)", file="JsonConvertTest.cs", label="Entry System.Math.Round(double, int, System.MidpointRounding)", span="0-0"];
m2_240 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JsonConvertTest.cs", label="ExpressionType.DivideAssign", span="523-523"];
m2_390 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", span="731-731"];
m2_391 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonConvertTest.cs", label="throw MiscellaneousUtils.CreateArgumentOutOfRangeException(''TokenType'', _valueType, ''Unexpected token type.'');", span="831-831"];
m2_393 [cluster="Newtonsoft.Json.JsonSerializer.CreateDefault()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.CreateDefault()", span="544-544"];
m2_394 [cluster="Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="44-44"];
m2_395 [cluster="Newtonsoft.Json.JsonWriter.WriteComment(string)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteComment(string)", span="1417-1417"];
m2_396 [cluster="Newtonsoft.Json.JsonWriter.WriteRawValue(string)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteRawValue(string)", span="900-900"];
m2_397 [cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteNull()", span="874-874"];
m2_398 [cluster="Newtonsoft.Json.JsonWriter.WriteUndefined()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteUndefined()", span="882-882"];
m2_399 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(int)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(int)", span="921-921"];
m2_402 [cluster="Unk.WriteValue", file="JsonConvertTest.cs", label="Entry Unk.WriteValue", span=""];
m2_404 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(double)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(double)", span="968-968"];
m2_409 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.DateTime)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.DateTime)", span="1042-1042"];
m2_410 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(byte[])", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(byte[])", span="1358-1358"];
m2_411 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.Guid?)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.Guid?)", span="1326-1326"];
m2_407 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(bool)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(bool)", span="977-977"];
m2_406 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="912-912"];
m2_412 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.TimeSpan?)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.TimeSpan?)", span="1342-1342"];
m2_414 [cluster="Newtonsoft.Json.Linq.JValue.GetDeepHashCode()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Linq.JValue.GetDeepHashCode()", span="834-834"];
m2_415 [cluster="Newtonsoft.Json.Linq.JValue.GetDeepHashCode()", file="JsonConvertTest.cs", label="int valueHashCode = (_value != null) ? _value.GetHashCode() : 0", span="836-836"];
m2_416 [cluster="Newtonsoft.Json.Linq.JValue.GetDeepHashCode()", file="JsonConvertTest.cs", label="return ((int)_valueType).GetHashCode() ^ valueHashCode;", span="839-839"];
m2_418 [cluster="object.GetHashCode()", file="JsonConvertTest.cs", label="Entry object.GetHashCode()", span="0-0"];
m2_417 [cluster="Newtonsoft.Json.Linq.JValue.GetDeepHashCode()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Linq.JValue.GetDeepHashCode()", span="834-834"];
m2_427 [cluster="Newtonsoft.Json.Linq.JValue.Equals(object)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Linq.JValue.Equals(object)", span="874-874"];
m2_430 [cluster="Newtonsoft.Json.Linq.JValue.Equals(object)", file="JsonConvertTest.cs", label="JValue otherValue = obj as JValue", span="881-881"];
m2_431 [cluster="Newtonsoft.Json.Linq.JValue.Equals(object)", file="JsonConvertTest.cs", label="otherValue != null", span="882-882"];
m2_432 [cluster="Newtonsoft.Json.Linq.JValue.Equals(object)", file="JsonConvertTest.cs", label="return Equals(otherValue);", span="884-884"];
m2_433 [cluster="Newtonsoft.Json.Linq.JValue.Equals(object)", color=green, community=0, file="JsonConvertTest.cs", label="0: return base.Equals(obj);", span="887-887"];
m2_429 [cluster="Newtonsoft.Json.Linq.JValue.Equals(object)", file="JsonConvertTest.cs", label="return false;", span="878-878"];
m2_428 [cluster="Newtonsoft.Json.Linq.JValue.Equals(object)", file="JsonConvertTest.cs", label="obj == null", span="876-876"];
m2_434 [cluster="Newtonsoft.Json.Linq.JValue.Equals(object)", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Linq.JValue.Equals(object)", span="874-874"];
m2_435 [cluster="object.Equals(object)", file="JsonConvertTest.cs", label="Entry object.Equals(object)", span="0-0"];
m2_441 [cluster="Newtonsoft.Json.Linq.JValue.ToString()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Linq.JValue.ToString()", span="912-912"];
m2_442 [cluster="Newtonsoft.Json.Linq.JValue.ToString()", file="JsonConvertTest.cs", label="_value == null", span="914-914"];
m2_443 [cluster="Newtonsoft.Json.Linq.JValue.ToString()", file="JsonConvertTest.cs", label="return string.Empty;", span="916-916"];
m2_444 [cluster="Newtonsoft.Json.Linq.JValue.ToString()", file="JsonConvertTest.cs", label="return _value.ToString();", span="919-919"];
m2_445 [cluster="Newtonsoft.Json.Linq.JValue.ToString()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Linq.JValue.ToString()", span="912-912"];
m2_446 [cluster="Newtonsoft.Json.Linq.JValue.ToString(string)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Linq.JValue.ToString(string)", span="929-929"];
m2_448 [cluster="Newtonsoft.Json.Linq.JValue.ToString(string)", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Linq.JValue.ToString(string)", span="929-929"];
m2_452 [cluster="Newtonsoft.Json.Linq.JValue.ToString(System.IFormatProvider)", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Linq.JValue.ToString(System.IFormatProvider)", span="941-941"];
m2_447 [cluster="Newtonsoft.Json.Linq.JValue.ToString(string)", file="JsonConvertTest.cs", label="return ToString(format, CultureInfo.CurrentCulture);", span="931-931"];
m2_450 [cluster="Newtonsoft.Json.Linq.JValue.ToString(System.IFormatProvider)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Linq.JValue.ToString(System.IFormatProvider)", span="941-941"];
m2_451 [cluster="Newtonsoft.Json.Linq.JValue.ToString(System.IFormatProvider)", file="JsonConvertTest.cs", label="return ToString(null, formatProvider);", span="943-943"];
m2_465 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.JValueDynamicProxy()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.JValueDynamicProxy()", span="985-985"];
m2_466 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", span="987-987"];
m2_467 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="JsonConvertTest.cs", label="binder.Type == typeof(JValue) || binder.Type == typeof(JToken)", span="989-989"];
m2_468 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="JsonConvertTest.cs", label="result = instance", span="991-991"];
m2_469 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="JsonConvertTest.cs", label="return true;", span="992-992"];
m2_470 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="JsonConvertTest.cs", label="object value = instance.Value", span="995-995"];
m2_471 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="JsonConvertTest.cs", label="value == null", span="997-997"];
m2_472 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="JsonConvertTest.cs", label="result = null", span="999-999"];
m2_473 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="JsonConvertTest.cs", label="return ReflectionUtils.IsNullable(binder.Type);", span="1000-1000"];
m2_474 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="JsonConvertTest.cs", label="result = ConvertUtils.Convert(value, CultureInfo.InvariantCulture, binder.Type)", span="1003-1003"];
m2_475 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="JsonConvertTest.cs", label="return true;", span="1004-1004"];
m2_476 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", span="987-987"];
m2_478 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", span="403-403"];
m2_479 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", span="1007-1007"];
m2_480 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JsonConvertTest.cs", label="object compareValue = (arg is JValue) ? ((JValue)arg).Value : arg", span="1009-1009"];
m2_481 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JsonConvertTest.cs", label="binder.Operation", span="1011-1011"];
m2_482 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JsonConvertTest.cs", label="ExpressionType.Equal", span="1013-1013"];
m2_483 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JsonConvertTest.cs", label="result = (Compare(instance.Type, instance.Value, compareValue) == 0)", span="1014-1014"];
m2_484 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JsonConvertTest.cs", label="return true;", span="1015-1015"];
m2_485 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JsonConvertTest.cs", label="ExpressionType.NotEqual", span="1016-1016"];
m2_486 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JsonConvertTest.cs", label="result = (Compare(instance.Type, instance.Value, compareValue) != 0)", span="1017-1017"];
m2_487 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JsonConvertTest.cs", label="return true;", span="1018-1018"];
m2_488 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JsonConvertTest.cs", label="ExpressionType.GreaterThan", span="1019-1019"];
m2_489 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JsonConvertTest.cs", label="result = (Compare(instance.Type, instance.Value, compareValue) > 0)", span="1020-1020"];
m2_490 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JsonConvertTest.cs", label="return true;", span="1021-1021"];
m2_491 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JsonConvertTest.cs", label="ExpressionType.GreaterThanOrEqual", span="1022-1022"];
m2_492 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JsonConvertTest.cs", label="result = (Compare(instance.Type, instance.Value, compareValue) >= 0)", span="1023-1023"];
m2_493 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JsonConvertTest.cs", label="return true;", span="1024-1024"];
m2_494 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JsonConvertTest.cs", label="ExpressionType.LessThan", span="1025-1025"];
m2_495 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JsonConvertTest.cs", label="result = (Compare(instance.Type, instance.Value, compareValue) < 0)", span="1026-1026"];
m2_496 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JsonConvertTest.cs", label="return true;", span="1027-1027"];
m2_497 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JsonConvertTest.cs", label="ExpressionType.LessThanOrEqual", span="1028-1028"];
m2_498 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JsonConvertTest.cs", label="result = (Compare(instance.Type, instance.Value, compareValue) <= 0)", span="1029-1029"];
m2_499 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JsonConvertTest.cs", label="return true;", span="1030-1030"];
m2_500 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JsonConvertTest.cs", label="ExpressionType.Add", span="1031-1031"];
m2_501 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JsonConvertTest.cs", label="ExpressionType.AddAssign", span="1032-1032"];
m2_502 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JsonConvertTest.cs", label="ExpressionType.Subtract", span="1033-1033"];
m2_503 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JsonConvertTest.cs", label="ExpressionType.SubtractAssign", span="1034-1034"];
m2_504 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JsonConvertTest.cs", label="ExpressionType.Multiply", span="1035-1035"];
m2_505 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JsonConvertTest.cs", label="ExpressionType.MultiplyAssign", span="1036-1036"];
m2_506 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JsonConvertTest.cs", label="ExpressionType.Divide", span="1037-1037"];
m2_507 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JsonConvertTest.cs", label="ExpressionType.DivideAssign", span="1038-1038"];
m2_508 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JsonConvertTest.cs", label="Operation(binder.Operation, instance.Value, compareValue, out result)", span="1039-1039"];
m2_648 [cluster="System.DateTime.AddTicks(long)", file="JsonConvertTest.cs", label="Entry System.DateTime.AddTicks(long)", span="0-0"];
m2_827 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.OverloadWithShortParameter.OverloadWithShortParameter()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.OverloadWithShortParameter.OverloadWithShortParameter()", span="1377-1377"];
m2_826 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.OverloadWithULongParameter.OverloadWithULongParameter()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.OverloadWithULongParameter.OverloadWithULongParameter()", span="1371-1371"];
m2_270 [cluster="Newtonsoft.Json.Linq.JValue.CloneToken()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Linq.JValue.CloneToken()", span="566-566"];
m2_271 [cluster="Newtonsoft.Json.Linq.JValue.CloneToken()", file="JsonConvertTest.cs", label="return new JValue(this);", span="568-568"];
m2_272 [cluster="Newtonsoft.Json.Linq.JValue.CloneToken()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Linq.JValue.CloneToken()", span="566-566"];
m2_273 [cluster="Newtonsoft.Json.Linq.JValue.CreateComment(string)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Linq.JValue.CreateComment(string)", span="576-576"];
m2_274 [cluster="Newtonsoft.Json.Linq.JValue.CreateComment(string)", file="JsonConvertTest.cs", label="return new JValue(value, JTokenType.Comment);", span="578-578"];
m2_275 [cluster="Newtonsoft.Json.Linq.JValue.CreateComment(string)", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Linq.JValue.CreateComment(string)", span="576-576"];
m2_279 [cluster="Newtonsoft.Json.Linq.JValue.CreateNull()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Linq.JValue.CreateNull()", span="595-595"];
m2_280 [cluster="Newtonsoft.Json.Linq.JValue.CreateNull()", file="JsonConvertTest.cs", label="return new JValue(null, JTokenType.Null);", span="597-597"];
m2_281 [cluster="Newtonsoft.Json.Linq.JValue.CreateNull()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Linq.JValue.CreateNull()", span="595-595"];
m2_282 [cluster="Newtonsoft.Json.Linq.JValue.CreateUndefined()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Linq.JValue.CreateUndefined()", span="604-604"];
m2_283 [cluster="Newtonsoft.Json.Linq.JValue.CreateUndefined()", file="JsonConvertTest.cs", label="return new JValue(null, JTokenType.Undefined);", span="606-606"];
m2_284 [cluster="Newtonsoft.Json.Linq.JValue.CreateUndefined()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Linq.JValue.CreateUndefined()", span="604-604"];
m2_846 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.OverloadWithBaseType.OverloadWithBaseType()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.OverloadWithBaseType.OverloadWithBaseType()", span="1526-1526"];
m2_0 [cluster="Newtonsoft.Json.Linq.JValue.JValue(object, Newtonsoft.Json.Linq.JTokenType)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(object, Newtonsoft.Json.Linq.JTokenType)", span="51-51"];
m2_1 [cluster="Newtonsoft.Json.Linq.JValue.JValue(object, Newtonsoft.Json.Linq.JTokenType)", file="JsonConvertTest.cs", label="_value = value", span="53-53"];
m2_2 [cluster="Newtonsoft.Json.Linq.JValue.JValue(object, Newtonsoft.Json.Linq.JTokenType)", file="JsonConvertTest.cs", label="_valueType = type", span="54-54"];
m2_3 [cluster="Newtonsoft.Json.Linq.JValue.JValue(object, Newtonsoft.Json.Linq.JTokenType)", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Linq.JValue.JValue(object, Newtonsoft.Json.Linq.JTokenType)", span="51-51"];
m2_6 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ToStringEnsureEscapedArrayLength()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.ToStringEnsureEscapedArrayLength()", span="61-61"];
m2_264 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JsonConvertTest.cs", label="result = l1 / l2", span="556-556"];
m2_265 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JsonConvertTest.cs", label="return true;", span="557-557"];
m2_266 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JsonConvertTest.cs", label="result = null", span="561-561"];
m2_267 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JsonConvertTest.cs", label="return false;", span="562-562"];
m2_639 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(object)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(object)", span="389-389"];
m2_872 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.GenericBaseClassSerialization()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.GenericBaseClassSerialization()", span="1612-1612"];
m2_873 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.GenericBaseClassSerialization()", file="JsonConvertTest.cs", label="string json = JsonConvert.SerializeObject(new NonGenericChildClass())", span="1614-1614"];
m2_874 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.GenericBaseClassSerialization()", file="JsonConvertTest.cs", label="Assert.AreEqual(''{\''Data\'':null}'', json)", span="1615-1615"];
m2_875 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.GenericBaseClassSerialization()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.GenericBaseClassSerialization()", span="1612-1612"];
m2_549 [cluster="DataContractSerializer.cstr", file="JsonConvertTest.cs", label="Entry DataContractSerializer.cstr", span=""];
m2_550 [cluster="Unk.WriteObject", file="JsonConvertTest.cs", label="Entry Unk.WriteObject", span=""];
m2_534 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs", label="Console.WriteLine(XmlConvert.ToString((DateTimeOffset)(object)value))", span="913-913"];
m2_535 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs", label="MemoryStream ms = new MemoryStream()", span="917-917"];
m2_536 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs", label="DataContractSerializer s = new DataContractSerializer(typeof(T))", span="918-918"];
m2_824 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.OverloadWithUIntParameter.OverloadWithUIntParameter()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.OverloadWithUIntParameter.OverloadWithUIntParameter()", span="1359-1359"];
m2_32 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.PopulateObjectWithOnlyComment()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.PopulateObjectWithOnlyComment()", span="119-119"];
m2_33 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.PopulateObjectWithOnlyComment()", file="JsonConvertTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                string json = @''// file header'';\r\n\r\n                PopulateTestObject o = new PopulateTestObject();\r\n                JsonConvert.PopulateObject(json, o);\r\n            }, ''No JSON content found. Path '', line 1, position 14.'')", span="121-127"];
m2_17 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.PopulateObjectWithMultipleHeaderComment()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.PopulateObjectWithMultipleHeaderComment()", span="92-92"];
m2_18 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.PopulateObjectWithMultipleHeaderComment()", file="JsonConvertTest.cs", label="string json = @''// file header\r\n// another file header?\r\n{\r\n  ''''prop'''': 1.0\r\n}''", span="94-98"];
m2_19 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.PopulateObjectWithMultipleHeaderComment()", file="JsonConvertTest.cs", label="PopulateTestObject o = new PopulateTestObject()", span="100-100"];
m2_20 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.PopulateObjectWithMultipleHeaderComment()", file="JsonConvertTest.cs", label="JsonConvert.PopulateObject(json, o)", span="101-101"];
m2_21 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.PopulateObjectWithMultipleHeaderComment()", file="JsonConvertTest.cs", label="Assert.AreEqual(1m, o.Prop)", span="103-103"];
m2_22 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.PopulateObjectWithMultipleHeaderComment()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.PopulateObjectWithMultipleHeaderComment()", span="92-92"];
m2_764 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.OverloadsJsonConverterer.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.OverloadsJsonConverterer.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="1306-1306"];
m2_765 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.OverloadsJsonConverterer.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonConvertTest.cs", label="writer.WriteValue(_type)", span="1308-1308"];
m2_766 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.OverloadsJsonConverterer.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.OverloadsJsonConverterer.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="1306-1306"];
m2_169 [cluster="lambda expression", file="JsonConvertTest.cs", label="Entry lambda expression", span="357-360"];
m2_247 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString_UnicodeLinefeeds()", file="JsonConvertTest.cs", label="result = JavaScriptUtils.ToEscapedJavaScriptString(''before'' + '\u2029' + ''after'', '''', true, StringEscapeHandling.Default)", span="529-529"];
m2_248 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString_UnicodeLinefeeds()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''''''before\u2029after'''''', result)", span="530-530"];
m2_224 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''''''^_`abcdefghijklmnopqrstuvwxyz{|}~'''''', result)", span="492-492"];
m2_225 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs", label="string data =\r\n                ''\u0000\u0001\u0002\u0003\u0004\u0005\u0006\u0007\b\t\n\u000b\f\r\u000e\u000f\u0010\u0011\u0012\u0013\u0014\u0015\u0016\u0017\u0018\u0019\u001a\u001b\u001c\u001d\u001e\u001f !\''#$%&\u0027()*+,-./0123456789:;\u003c=\u003e?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~''", span="494-495"];
m2_170 [cluster="lambda expression", file="JsonConvertTest.cs", label="new JsonSerializerSettings\r\n                {\r\n                    Formatting = Formatting.Indented\r\n                }", span="357-360"];
m2_171 [cluster="lambda expression", file="JsonConvertTest.cs", label="Exit lambda expression", span="357-360"];
m2_180 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.IntConverter.CanConvert(System.Type)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.IntConverter.CanConvert(System.Type)", span="416-416"];
m2_197 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DeserializeObject_Decimal_EmptyString()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.DeserializeObject_Decimal_EmptyString()", span="444-444"];
m2_198 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DeserializeObject_Decimal_EmptyString()", file="JsonConvertTest.cs", label="decimal? value = JsonConvert.DeserializeObject<decimal?>('''')", span="446-446"];
m2_220 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''''''\u0014\u0015\u0016\u0017\u0018\u0019\u001a\u001b\u001c\u001d\u001e\u001f '''''', result)", span="484-484"];
m2_221 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs", label="result =\r\n                JavaScriptUtils.ToEscapedJavaScriptString(\r\n                    ''!\''#$%&\u0027()*+,-./0123456789:;\u003c=\u003e?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]'', '''', true, StringEscapeHandling.Default)", span="486-488"];
m2_226 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs", label="string expected =\r\n                @''''''\u0000\u0001\u0002\u0003\u0004\u0005\u0006\u0007\b\t\n\u000b\f\r\u000e\u000f\u0010\u0011\u0012\u0013\u0014\u0015\u0016\u0017\u0018\u0019\u001a\u001b\u001c\u001d\u001e\u001f !\''''#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~''''''", span="496-497"];
m2_243 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString_UnicodeLinefeeds()", file="JsonConvertTest.cs", label="result = JavaScriptUtils.ToEscapedJavaScriptString(''before'' + '\u0085' + ''after'', '''', true, StringEscapeHandling.Default)", span="523-523"];
m2_244 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString_UnicodeLinefeeds()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''''''before\u0085after'''''', result)", span="524-524"];
m2_249 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString_UnicodeLinefeeds()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString_UnicodeLinefeeds()", span="519-519"];
m2_229 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs", label="result = JavaScriptUtils.ToEscapedJavaScriptString(''Fred's cat.'', '\'', true, StringEscapeHandling.Default)", span="502-502"];
m2_233 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs", label="result = JavaScriptUtils.ToEscapedJavaScriptString(@''''''How are' you gentlemen?'''' said Cats.'', '''', true, StringEscapeHandling.Default)", span="508-508"];
m2_237 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs", label="result = JavaScriptUtils.ToEscapedJavaScriptString(''\u001farray\u003caddress'', '''', true, StringEscapeHandling.Default)", span="514-514"];
m2_241 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString_UnicodeLinefeeds()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString_UnicodeLinefeeds()", span="519-519"];
m2_184 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DeserializeObject_EmptyString()", file="JsonConvertTest.cs", label="object result = JsonConvert.DeserializeObject(string.Empty)", span="425-425"];
m2_188 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DeserializeObject_Integer()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.DeserializeObject_Integer()", span="430-430"];
m2_192 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DeserializeObject_Integer_EmptyString()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.DeserializeObject_Integer_EmptyString()", span="437-437"];
m2_196 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="703-703"];
m2_200 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DeserializeObject_Decimal_EmptyString()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.DeserializeObject_Decimal_EmptyString()", span="444-444"];
m2_207 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs", label="result = JavaScriptUtils.ToEscapedJavaScriptString(''How now brown cow?'', '''', true, StringEscapeHandling.Default)", span="462-462"];
m2_211 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs", label="result = JavaScriptUtils.ToEscapedJavaScriptString(''How now <brown> cow?'', '''', true, StringEscapeHandling.Default)", span="468-468"];
m2_215 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs", label="result = JavaScriptUtils.ToEscapedJavaScriptString(''\u0000\u0001\u0002\u0003\u0004\u0005\u0006\u0007'', '''', true, StringEscapeHandling.Default)", span="474-474"];
m2_219 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs", label="result =\r\n                JavaScriptUtils.ToEscapedJavaScriptString(\r\n                    ''\u0014\u0015\u0016\u0017\u0018\u0019\u001a\u001b\u001c\u001d\u001e\u001f '', '''', true, StringEscapeHandling.Default)", span="481-483"];
m2_223 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs", label="result = JavaScriptUtils.ToEscapedJavaScriptString(''^_`abcdefghijklmnopqrstuvwxyz{|}~'', '''', true, StringEscapeHandling.Default)", span="491-491"];
m2_230 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs", label="Assert.AreEqual(result, @'''Fred\'s cat.''')", span="503-503"];
m2_234 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs", label="Assert.AreEqual(result, @''''''\''''How are' you gentlemen?\'''' said Cats.'''''')", span="509-509"];
m2_238 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs", label="Assert.AreEqual(result, @''''''\u001farray<address'''''')", span="515-515"];
m2_242 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString_UnicodeLinefeeds()", file="JsonConvertTest.cs", label="string result", span="521-521"];
m2_246 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString_UnicodeLinefeeds()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''''''before\u2028after'''''', result)", span="527-527"];
m2_253 [cluster="lambda expression", file="JsonConvertTest.cs", label="Entry lambda expression", span="536-536"];
m2_176 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(int)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(int)", span="938-938"];
m2_183 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DeserializeObject_EmptyString()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.DeserializeObject_EmptyString()", span="423-423"];
m2_191 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DeserializeObject_Integer()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.DeserializeObject_Integer()", span="430-430"];
m2_195 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DeserializeObject_Integer_EmptyString()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.DeserializeObject_Integer_EmptyString()", span="437-437"];
m2_181 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.IntConverter.CanConvert(System.Type)", file="JsonConvertTest.cs", label="return objectType == typeof(int);", span="418-418"];
m2_185 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DeserializeObject_EmptyString()", file="JsonConvertTest.cs", label="Assert.IsNull(result)", span="426-426"];
m2_189 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DeserializeObject_Integer()", file="JsonConvertTest.cs", label="object result = JsonConvert.DeserializeObject(''1'')", span="432-432"];
m2_193 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DeserializeObject_Integer_EmptyString()", file="JsonConvertTest.cs", label="int? value = JsonConvert.DeserializeObject<int?>('''')", span="439-439"];
m2_199 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DeserializeObject_Decimal_EmptyString()", file="JsonConvertTest.cs", label="Assert.IsNull(value)", span="447-447"];
m2_206 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs", label="string result", span="460-460"];
m2_210 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''''''How now 'brown' cow?'''''', result)", span="466-466"];
m2_214 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''''''How \r\nnow brown cow?'''''', result)", span="472-472"];
m2_218 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''''''\b\t\n\u000b\f\r\u000e\u000f\u0010\u0011\u0012\u0013'''''', result)", span="479-479"];
m2_208 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''''''How now brown cow?'''''', result)", span="463-463"];
m2_212 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''''''How now <brown> cow?'''''', result)", span="469-469"];
m2_216 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''''''\u0000\u0001\u0002\u0003\u0004\u0005\u0006\u0007'''''', result)", span="475-475"];
m2_222 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''''''!\''''#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]'''''', result)", span="489-489"];
m2_227 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs", label="result = JavaScriptUtils.ToEscapedJavaScriptString(data, '''', true, StringEscapeHandling.Default)", span="499-499"];
m2_231 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs", label="result = JavaScriptUtils.ToEscapedJavaScriptString(@''''''How are you gentlemen?'''' said Cats.'', '''', true, StringEscapeHandling.Default)", span="505-505"];
m2_235 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs", label="result = JavaScriptUtils.ToEscapedJavaScriptString(@''Fred's ''''cat''''.'', '\'', true, StringEscapeHandling.Default)", span="511-511"];
m2_239 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", span="458-458"];
m2_245 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString_UnicodeLinefeeds()", file="JsonConvertTest.cs", label="result = JavaScriptUtils.ToEscapedJavaScriptString(''before'' + '\u2028' + ''after'', '''', true, StringEscapeHandling.Default)", span="526-526"];
m2_254 [cluster="lambda expression", file="JsonConvertTest.cs", label="JsonConvert.ToString(new Version(1, 0))", span="536-536"];
m2_255 [cluster="lambda expression", file="JsonConvertTest.cs", label="Exit lambda expression", span="536-536"];
m2_228 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs", label="Assert.AreEqual(expected, result)", span="500-500"];
m2_232 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs", label="Assert.AreEqual(result, @''''''\''''How are you gentlemen?\'''' said Cats.'''''')", span="506-506"];
m2_236 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs", label="Assert.AreEqual(result, @'''Fred\'s ''''cat''''.''')", span="512-512"];
m2_182 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.IntConverter.CanConvert(System.Type)", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.IntConverter.CanConvert(System.Type)", span="416-416"];
m2_186 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DeserializeObject_EmptyString()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.DeserializeObject_EmptyString()", span="423-423"];
m2_190 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DeserializeObject_Integer()", file="JsonConvertTest.cs", label="Assert.AreEqual(1L, result)", span="433-433"];
m2_194 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DeserializeObject_Integer_EmptyString()", file="JsonConvertTest.cs", label="Assert.IsNull(value)", span="440-440"];
m2_205 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", span="458-458"];
m2_209 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs", label="result = JavaScriptUtils.ToEscapedJavaScriptString(''How now 'brown' cow?'', '''', true, StringEscapeHandling.Default)", span="465-465"];
m2_213 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs", label="result = JavaScriptUtils.ToEscapedJavaScriptString(''How \r\nnow brown cow?'', '''', true, StringEscapeHandling.Default)", span="471-471"];
m2_217 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs", label="result =\r\n                JavaScriptUtils.ToEscapedJavaScriptString(''\b\t\n\u000b\f\r\u000e\u000f\u0010\u0011\u0012\u0013'', '''', true, StringEscapeHandling.Default)", span="477-478"];
m2_512 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JsonConvertTest.cs", label="return false;", span="1048-1048"];
m2_703 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ClobberMyProperties.ClobberMyProperties()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.ClobberMyProperties.ClobberMyProperties()", span="1173-1173"];
m2_704 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ClobberingJsonConverter.ClobberingJsonConverter(string, int)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.ClobberingJsonConverter.ClobberingJsonConverter(string, int)", span="1193-1193"];
m2_705 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ClobberingJsonConverter.ClobberingJsonConverter(string, int)", file="JsonConvertTest.cs", label="ClobberValueString = clobberValueString", span="1195-1195"];
m2_706 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ClobberingJsonConverter.ClobberingJsonConverter(string, int)", file="JsonConvertTest.cs", label="ClobberValueInt = clobberValueInt", span="1196-1196"];
m2_707 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ClobberingJsonConverter.ClobberingJsonConverter(string, int)", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.ClobberingJsonConverter.ClobberingJsonConverter(string, int)", span="1193-1193"];
m2_672 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ParseIsoDate()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.ParseIsoDate()", span="1126-1126"];
m2_673 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ParseIsoDate()", file="JsonConvertTest.cs", label="StringReader sr = new StringReader(@''''''2014-02-14T14:25:02-13:00'''''')", span="1128-1128"];
m2_674 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ParseIsoDate()", file="JsonConvertTest.cs", label="JsonReader jsonReader = new JsonTextReader(sr)", span="1130-1130"];
m2_675 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ParseIsoDate()", file="JsonConvertTest.cs", label="Assert.IsTrue(jsonReader.Read())", span="1132-1132"];
m2_676 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ParseIsoDate()", file="JsonConvertTest.cs", label="Assert.AreEqual(typeof(DateTime), jsonReader.ValueType)", span="1133-1133"];
m2_677 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ParseIsoDate()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.ParseIsoDate()", span="1126-1126"];
m2_595 [cluster="Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="44-44"];
m2_825 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.OverloadWithLongParameter.OverloadWithLongParameter()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.OverloadWithLongParameter.OverloadWithLongParameter()", span="1365-1365"];
m2_864 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.RoundingJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.RoundingJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="1600-1600"];
m2_865 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.RoundingJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonConvertTest.cs", label="throw new NotImplementedException();", span="1602-1602"];
m2_866 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.RoundingJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.RoundingJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="1600-1600"];
m2_540 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs", label="Console.WriteLine()", span="924-924"];
m2_541 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs", label="return result;", span="926-926"];
m2_542 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", span="883-883"];
m2_543 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToByte(System.IFormatProvider)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToByte(System.IFormatProvider)", span="1126-1126"];
m2_715 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="929-929"];
m2_626 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JsonConvertTest.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m2_8 [cluster="Unk.AreEqual", file="JsonConvertTest.cs", label="Entry Unk.AreEqual", span=""];
m2_833 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.OverloadWithFloatParameter.OverloadWithFloatParameter()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.OverloadWithFloatParameter.OverloadWithFloatParameter()", span="1413-1413"];
m2_596 [cluster="Newtonsoft.Json.JsonTextWriter.Flush()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonTextWriter.Flush()", span="172-172"];
m2_830 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.OverloadWithByteParameter.OverloadWithByteParameter()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.OverloadWithByteParameter.OverloadWithByteParameter()", span="1395-1395"];
m2_54 [cluster="Newtonsoft.Json.Linq.JValue.CompareBigInteger(BigInteger, object)", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Linq.JValue.CompareBigInteger(BigInteger, object)", span="222-222"];
m2_755 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.OverloadsJsonConverterer.OverloadsJsonConverterer(bool[])", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.OverloadsJsonConverterer.OverloadsJsonConverterer(bool[])", span="1289-1289"];
m2_756 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.OverloadsJsonConverterer.OverloadsJsonConverterer(bool[])", file="JsonConvertTest.cs", label="_type = ''bool[]''", span="1291-1291"];
m2_757 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.OverloadsJsonConverterer.OverloadsJsonConverterer(bool[])", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.OverloadsJsonConverterer.OverloadsJsonConverterer(bool[])", span="1289-1289"];
m2_339 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.FloatToString()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.FloatToString()", span="662-662"];
m2_348 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.FloatToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(''-1.0'', JsonConvert.ToString(-1d))", span="672-672"];
m2_349 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.FloatToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(''1.01'', JsonConvert.ToString(1.01))", span="673-673"];
m2_350 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.FloatToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(''1.001'', JsonConvert.ToString(1.001))", span="674-674"];
m2_351 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.FloatToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonConvert.PositiveInfinity, JsonConvert.ToString(Double.PositiveInfinity))", span="675-675"];
m2_352 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.FloatToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonConvert.NegativeInfinity, JsonConvert.ToString(Double.NegativeInfinity))", span="676-676"];
m2_353 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.FloatToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonConvert.NaN, JsonConvert.ToString(Double.NaN))", span="677-677"];
m2_354 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.FloatToString()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.FloatToString()", span="662-662"];
m2_355 [cluster="Newtonsoft.Json.JsonConvert.ToString(double)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(double)", span="290-290"];
m2_374 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.StringEscaping()", file="JsonConvertTest.cs", label="string v = ''It's a good day\r\n\''sunshine\''''", span="702-702"];
m2_375 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.StringEscaping()", file="JsonConvertTest.cs", label="string json = JsonConvert.ToString(v)", span="704-704"];
m2_376 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.StringEscaping()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''''''It's a good day\r\n\''''sunshine\'''''''''', json)", span="705-705"];
m2_341 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.FloatToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(''1.11'', JsonConvert.ToString(1.11))", span="665-665"];
m2_344 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.FloatToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(''1.11111'', JsonConvert.ToString(1.11111))", span="668-668"];
m2_347 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.FloatToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(''1.0'', JsonConvert.ToString(1d))", span="671-671"];
m2_373 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.StringEscaping()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.StringEscaping()", span="700-700"];
m2_340 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.FloatToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(''1.1'', JsonConvert.ToString(1.1))", span="664-664"];
m2_377 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.StringEscaping()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.StringEscaping()", span="700-700"];
m2_342 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.FloatToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(''1.111'', JsonConvert.ToString(1.111))", span="666-666"];
m2_345 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.FloatToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(''1.111111'', JsonConvert.ToString(1.111111))", span="669-669"];
m2_343 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.FloatToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(''1.1111'', JsonConvert.ToString(1.1111))", span="667-667"];
m2_346 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.FloatToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(''1.0'', JsonConvert.ToString(1.0))", span="670-670"];
m2_770 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.OverloadsJsonConverterer.CanConvert(System.Type)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.OverloadsJsonConverterer.CanConvert(System.Type)", span="1316-1316"];
m2_771 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.OverloadsJsonConverterer.CanConvert(System.Type)", file="JsonConvertTest.cs", label="return objectType == typeof(int);", span="1318-1318"];
m2_772 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.OverloadsJsonConverterer.CanConvert(System.Type)", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.OverloadsJsonConverterer.CanConvert(System.Type)", span="1316-1316"];
m2_547 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt16(System.IFormatProvider)", file="JsonConvertTest.cs", label="return (short)this;", span="1133-1133"];
m2_509 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", span="883-883"];
m2_510 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.GetOffset(System.DateTime, Newtonsoft.Json.DateFormatHandling)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.TestFixtureBase.GetOffset(System.DateTime, Newtonsoft.Json.DateFormatHandling)", span="211-211"];
m2_513 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ConvertDateTimeToJavaScriptTicks(System.DateTime)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.ConvertDateTimeToJavaScriptTicks(System.DateTime)", span="186-186"];
m2_533 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs", label="Console.WriteLine(XmlConvert.ToString((DateTime)(object)value, XmlDateTimeSerializationMode.RoundtripKind))", span="909-909"];
m2_831 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.OverloadWithCharParameter.OverloadWithCharParameter()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.OverloadWithCharParameter.OverloadWithCharParameter()", span="1401-1401"];
m2_9 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.PopulateObjectWithHeaderComment()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.PopulateObjectWithHeaderComment()", span="78-78"];
m2_10 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.PopulateObjectWithHeaderComment()", file="JsonConvertTest.cs", label="string json = @''// file header\r\n{\r\n  ''''prop'''': 1.0\r\n}''", span="80-83"];
m2_11 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.PopulateObjectWithHeaderComment()", file="JsonConvertTest.cs", label="PopulateTestObject o = new PopulateTestObject()", span="85-85"];
m2_12 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.PopulateObjectWithHeaderComment()", file="JsonConvertTest.cs", label="JsonConvert.PopulateObject(json, o)", span="86-86"];
m2_13 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.PopulateObjectWithHeaderComment()", file="JsonConvertTest.cs", label="Assert.AreEqual(1m, o.Prop)", span="88-88"];
m2_14 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.PopulateObjectWithHeaderComment()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.PopulateObjectWithHeaderComment()", span="78-78"];
m2_517 [cluster="Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", file="JsonConvertTest.cs", label="object otherValue = (obj is JValue) ? ((JValue)obj).Value : obj", span="1060-1060"];
m2_594 [cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="149-149"];
m2_730 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.OverloadsJsonConverterer.OverloadsJsonConverterer(System.Type)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.OverloadsJsonConverterer.OverloadsJsonConverterer(System.Type)", span="1245-1245"];
m2_731 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.OverloadsJsonConverterer.OverloadsJsonConverterer(System.Type)", file="JsonConvertTest.cs", label="_type = ''Type''", span="1247-1247"];
m2_732 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.OverloadsJsonConverterer.OverloadsJsonConverterer(System.Type)", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.OverloadsJsonConverterer.OverloadsJsonConverterer(System.Type)", span="1245-1245"];
m2_46 [cluster="Newtonsoft.Json.Linq.JValue.CompareBigInteger(BigInteger, object)", file="JsonConvertTest.cs", label="return result;", span="228-228"];
m2_727 [cluster="lambda expression", file="JsonConvertTest.cs", label="Entry lambda expression", span="1225-1225"];
m2_27 [cluster="lambda expression", file="JsonConvertTest.cs", label="Entry lambda expression", span="109-115"];
m2_28 [cluster="lambda expression", file="JsonConvertTest.cs", label="string json = @''''", span="111-111"];
m2_29 [cluster="lambda expression", file="JsonConvertTest.cs", label="PopulateTestObject o = new PopulateTestObject()", span="113-113"];
m2_30 [cluster="lambda expression", file="JsonConvertTest.cs", label="JsonConvert.PopulateObject(json, o)", span="114-114"];
m2_31 [cluster="lambda expression", file="JsonConvertTest.cs", label="Exit lambda expression", span="109-115"];
m2_35 [cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JsonConvertTest.cs", label="JValue other = node as JValue", span="197-197"];
m2_36 [cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JsonConvertTest.cs", label="other == null", span="198-198"];
m2_37 [cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JsonConvertTest.cs", label="return false;", span="200-200"];
m2_38 [cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JsonConvertTest.cs", label="other == this", span="202-202"];
m2_39 [cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JsonConvertTest.cs", label="return true;", span="204-204"];
m2_47 [cluster="Newtonsoft.Json.Linq.JValue.CompareBigInteger(BigInteger, object)", file="JsonConvertTest.cs", label="i2 is decimal", span="233-233"];
m2_48 [cluster="Newtonsoft.Json.Linq.JValue.CompareBigInteger(BigInteger, object)", file="JsonConvertTest.cs", label="decimal d = (decimal)i2", span="235-235"];
m2_49 [cluster="Newtonsoft.Json.Linq.JValue.CompareBigInteger(BigInteger, object)", file="JsonConvertTest.cs", label="return (0m).CompareTo(Math.Abs(d - Math.Truncate(d)));", span="236-236"];
m2_146 [cluster="System.Convert.ToString(object, System.IFormatProvider)", file="JsonConvertTest.cs", label="Entry System.Convert.ToString(object, System.IFormatProvider)", span="0-0"];
m2_147 [cluster="string.CompareOrdinal(string, string)", file="JsonConvertTest.cs", label="Entry string.CompareOrdinal(string, string)", span="0-0"];
m2_669 [cluster="lambda expression", file="JsonConvertTest.cs", label="Entry lambda expression", span="1121-1121"];
m2_670 [cluster="lambda expression", file="JsonConvertTest.cs", label="JObject.Parse(@''{''''biginteger'''':'' + new String('9', 381) + ''}'')", span="1121-1121"];
m2_671 [cluster="lambda expression", file="JsonConvertTest.cs", label="Exit lambda expression", span="1121-1121"];
m2_728 [cluster="lambda expression", file="JsonConvertTest.cs", label="JsonConvert.SerializeObject(value)", span="1225-1225"];
m2_729 [cluster="lambda expression", file="JsonConvertTest.cs", label="Exit lambda expression", span="1225-1225"];
m2_584 [cluster="object.GetType()", file="JsonConvertTest.cs", label="Entry object.GetType()", span="0-0"];
m2_585 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Read<T>(string, Newtonsoft.Json.JsonConverter)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.Read<T>(string, Newtonsoft.Json.JsonConverter)", span="1006-1006"];
m2_597 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Read<T>(string, Newtonsoft.Json.JsonConverter)", file="JsonConvertTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(text))", span="1008-1008"];
m2_599 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Read<T>(string, Newtonsoft.Json.JsonConverter)", file="JsonConvertTest.cs", label="return (T)converter.ReadJson(reader, typeof(T), null, null);", span="1011-1011"];
m2_598 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Read<T>(string, Newtonsoft.Json.JsonConverter)", file="JsonConvertTest.cs", label="reader.ReadAsString()", span="1009-1009"];
m2_600 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Read<T>(string, Newtonsoft.Json.JsonConverter)", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.Read<T>(string, Newtonsoft.Json.JsonConverter)", span="1006-1006"];
m2_823 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.OverloadWithIntParameter.OverloadWithIntParameter()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.OverloadWithIntParameter.OverloadWithIntParameter()", span="1353-1353"];
m2_840 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.OverloadWithArrayParameters.OverloadWithArrayParameters()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.OverloadWithArrayParameters.OverloadWithArrayParameters()", span="1508-1508"];
m2_34 [cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", span="195-195"];
m2_43 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings()", file="JsonConvertTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''test'''': [\r\n    1,\r\n    2,\r\n    3\r\n  ]\r\n}'', json)", span="142-148"];
m2_51 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.NameTableTestClassConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.NameTableTestClassConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="163-163"];
m2_44 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings()", span="131-131"];
m2_52 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.NameTableTestClassConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonConvertTest.cs", label="throw new NotImplementedException();", span="165-165"];
m2_53 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.NameTableTestClassConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.NameTableTestClassConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="163-163"];
m2_45 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object)", span="524-524"];
m2_767 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.OverloadsJsonConverterer.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.OverloadsJsonConverterer.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="1311-1311"];
m2_768 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.OverloadsJsonConverterer.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonConvertTest.cs", label="throw new NotImplementedException();", span="1313-1313"];
m2_769 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.OverloadsJsonConverterer.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.OverloadsJsonConverterer.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="1311-1311"];
m2_779 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.JsonConverterConstructor_OverloadWithUnhandledParam_FallbackToObject()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.JsonConverterConstructor_OverloadWithUnhandledParam_FallbackToObject()", span="1345-1345"];
m2_780 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.JsonConverterConstructor_OverloadWithUnhandledParam_FallbackToObject()", file="JsonConvertTest.cs", label="OverloadWithUnhandledParameter value = new OverloadWithUnhandledParameter()", span="1347-1347"];
m2_781 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.JsonConverterConstructor_OverloadWithUnhandledParam_FallbackToObject()", file="JsonConvertTest.cs", label="string json = JsonConvert.SerializeObject(value)", span="1348-1348"];
m2_782 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.JsonConverterConstructor_OverloadWithUnhandledParam_FallbackToObject()", file="JsonConvertTest.cs", label="Assert.AreEqual(''{\''Overload\'':\''object(System.String)\''}'', json)", span="1350-1350"];
m2_783 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.JsonConverterConstructor_OverloadWithUnhandledParam_FallbackToObject()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.JsonConverterConstructor_OverloadWithUnhandledParam_FallbackToObject()", span="1345-1345"];
m2_698 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ParametersPassedToJsonConverterConstructor()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.ParametersPassedToJsonConverterConstructor()", span="1165-1165"];
m2_699 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ParametersPassedToJsonConverterConstructor()", file="JsonConvertTest.cs", label="ClobberMyProperties clobber = new ClobberMyProperties { One = ''Red'', Two = ''Green'', Three = ''Yellow'', Four = ''Black'' }", span="1167-1167"];
m2_700 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ParametersPassedToJsonConverterConstructor()", file="JsonConvertTest.cs", label="string json = JsonConvert.SerializeObject(clobber)", span="1168-1168"];
m2_701 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ParametersPassedToJsonConverterConstructor()", file="JsonConvertTest.cs", label="Assert.AreEqual(''{\''One\'':\''Uno-1-Red\'',\''Two\'':\''Dos-2-Green\'',\''Three\'':\''Tres-1337-Yellow\'',\''Four\'':\''Black\''}'', json)", span="1170-1170"];
m2_702 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ParametersPassedToJsonConverterConstructor()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.ParametersPassedToJsonConverterConstructor()", span="1165-1165"];
m2_758 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.OverloadsJsonConverterer.OverloadsJsonConverterer(System.Collections.Generic.IEnumerable<string>)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.OverloadsJsonConverterer.OverloadsJsonConverterer(System.Collections.Generic.IEnumerable<string>)", span="1296-1296"];
m2_759 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.OverloadsJsonConverterer.OverloadsJsonConverterer(System.Collections.Generic.IEnumerable<string>)", file="JsonConvertTest.cs", label="_type = ''IEnumerable<string>''", span="1298-1298"];
m2_760 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.OverloadsJsonConverterer.OverloadsJsonConverterer(System.Collections.Generic.IEnumerable<string>)", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.OverloadsJsonConverterer.OverloadsJsonConverterer(System.Collections.Generic.IEnumerable<string>)", span="1296-1296"];
m2_519 [cluster="Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", span="1053-1053"];
m2_521 [cluster="Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", color=red, community=0, file="JsonConvertTest.cs", label="1: obj == null", span="1085-1085"];
m2_522 [cluster="Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", file="JsonConvertTest.cs", label="return 1;", span="1087-1087"];
m2_523 [cluster="Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", file="JsonConvertTest.cs", label="return Compare(_valueType, _value, obj._value);", span="1090-1090"];
m2_524 [cluster="Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", span="1083-1083"];
m2_520 [cluster="Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", color=red, community=0, file="JsonConvertTest.cs", label="0: Entry Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", span="1083-1083"];
m2_518 [cluster="Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", file="JsonConvertTest.cs", label="return Compare(_valueType, _value, otherValue);", span="1062-1062"];
m2_834 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.OverloadWithDoubleParameter.OverloadWithDoubleParameter()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.OverloadWithDoubleParameter.OverloadWithDoubleParameter()", span="1419-1419"];
m2_23 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.PopulateObjectWithNoContent()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.PopulateObjectWithNoContent()", span="107-107"];
m2_24 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.PopulateObjectWithNoContent()", file="JsonConvertTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                string json = @'''';\r\n\r\n                PopulateTestObject o = new PopulateTestObject();\r\n                JsonConvert.PopulateObject(json, o);\r\n            }, ''No JSON content found. Path '', line 0, position 0.'')", span="109-115"];
m2_25 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.PopulateObjectWithNoContent()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.PopulateObjectWithNoContent()", span="107-107"];
m2_785 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.JsonConverterConstructor_OverloadsWithPrimitiveParams()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.JsonConverterConstructor_OverloadsWithPrimitiveParams()", span="1426-1426"];
m2_786 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.JsonConverterConstructor_OverloadsWithPrimitiveParams()", file="JsonConvertTest.cs", label="OverloadWithIntParameter value = new OverloadWithIntParameter()", span="1429-1429"];
m2_787 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.JsonConverterConstructor_OverloadsWithPrimitiveParams()", file="JsonConvertTest.cs", label="string json = JsonConvert.SerializeObject(value)", span="1430-1430"];
m2_788 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.JsonConverterConstructor_OverloadsWithPrimitiveParams()", file="JsonConvertTest.cs", label="Assert.AreEqual(''{\''Overload\'':\''int\''}'', json)", span="1431-1431"];
m2_789 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.JsonConverterConstructor_OverloadsWithPrimitiveParams()", file="JsonConvertTest.cs", label="OverloadWithUIntParameter value = new OverloadWithUIntParameter()", span="1436-1436"];
m2_790 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.JsonConverterConstructor_OverloadsWithPrimitiveParams()", file="JsonConvertTest.cs", label="string json = JsonConvert.SerializeObject(value)", span="1437-1437"];
m2_791 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.JsonConverterConstructor_OverloadsWithPrimitiveParams()", file="JsonConvertTest.cs", label="Assert.AreEqual(''{\''Overload\'':\''long\''}'', json)", span="1438-1438"];
m2_792 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.JsonConverterConstructor_OverloadsWithPrimitiveParams()", file="JsonConvertTest.cs", label="OverloadWithLongParameter value = new OverloadWithLongParameter()", span="1442-1442"];
m2_793 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.JsonConverterConstructor_OverloadsWithPrimitiveParams()", file="JsonConvertTest.cs", label="string json = JsonConvert.SerializeObject(value)", span="1443-1443"];
m2_794 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.JsonConverterConstructor_OverloadsWithPrimitiveParams()", file="JsonConvertTest.cs", label="Assert.AreEqual(''{\''Overload\'':\''long\''}'', json)", span="1444-1444"];
m2_795 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.JsonConverterConstructor_OverloadsWithPrimitiveParams()", file="JsonConvertTest.cs", label="OverloadWithULongParameter value = new OverloadWithULongParameter()", span="1449-1449"];
m2_796 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.JsonConverterConstructor_OverloadsWithPrimitiveParams()", file="JsonConvertTest.cs", label="string json = JsonConvert.SerializeObject(value)", span="1450-1450"];
m2_797 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.JsonConverterConstructor_OverloadsWithPrimitiveParams()", file="JsonConvertTest.cs", label="Assert.AreEqual(''{\''Overload\'':\''double\''}'', json)", span="1451-1451"];
m2_798 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.JsonConverterConstructor_OverloadsWithPrimitiveParams()", file="JsonConvertTest.cs", label="OverloadWithShortParameter value = new OverloadWithShortParameter()", span="1455-1455"];
m2_799 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.JsonConverterConstructor_OverloadsWithPrimitiveParams()", file="JsonConvertTest.cs", label="string json = JsonConvert.SerializeObject(value)", span="1456-1456"];
m2_800 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.JsonConverterConstructor_OverloadsWithPrimitiveParams()", file="JsonConvertTest.cs", label="Assert.AreEqual(''{\''Overload\'':\''short\''}'', json)", span="1457-1457"];
m2_801 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.JsonConverterConstructor_OverloadsWithPrimitiveParams()", file="JsonConvertTest.cs", label="OverloadWithUShortParameter value = new OverloadWithUShortParameter()", span="1462-1462"];
m2_802 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.JsonConverterConstructor_OverloadsWithPrimitiveParams()", file="JsonConvertTest.cs", label="string json = JsonConvert.SerializeObject(value)", span="1463-1463"];
m2_803 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.JsonConverterConstructor_OverloadsWithPrimitiveParams()", file="JsonConvertTest.cs", label="Assert.AreEqual(''{\''Overload\'':\''int\''}'', json)", span="1464-1464"];
m2_804 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.JsonConverterConstructor_OverloadsWithPrimitiveParams()", file="JsonConvertTest.cs", label="OverloadWithSByteParameter value = new OverloadWithSByteParameter()", span="1469-1469"];
m2_805 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.JsonConverterConstructor_OverloadsWithPrimitiveParams()", file="JsonConvertTest.cs", label="string json = JsonConvert.SerializeObject(value)", span="1470-1470"];
m2_806 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.JsonConverterConstructor_OverloadsWithPrimitiveParams()", file="JsonConvertTest.cs", label="Assert.AreEqual(''{\''Overload\'':\''short\''}'', json)", span="1471-1471"];
m2_807 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.JsonConverterConstructor_OverloadsWithPrimitiveParams()", file="JsonConvertTest.cs", label="OverloadWithByteParameter value = new OverloadWithByteParameter()", span="1475-1475"];
m2_808 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.JsonConverterConstructor_OverloadsWithPrimitiveParams()", file="JsonConvertTest.cs", label="string json = JsonConvert.SerializeObject(value)", span="1476-1476"];
m2_809 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.JsonConverterConstructor_OverloadsWithPrimitiveParams()", file="JsonConvertTest.cs", label="Assert.AreEqual(''{\''Overload\'':\''byte\''}'', json)", span="1477-1477"];
m2_810 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.JsonConverterConstructor_OverloadsWithPrimitiveParams()", file="JsonConvertTest.cs", label="OverloadWithCharParameter value = new OverloadWithCharParameter()", span="1482-1482"];
m2_811 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.JsonConverterConstructor_OverloadsWithPrimitiveParams()", file="JsonConvertTest.cs", label="string json = JsonConvert.SerializeObject(value)", span="1483-1483"];
m2_812 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.JsonConverterConstructor_OverloadsWithPrimitiveParams()", file="JsonConvertTest.cs", label="Assert.AreEqual(''{\''Overload\'':\''int\''}'', json)", span="1484-1484"];
m2_813 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.JsonConverterConstructor_OverloadsWithPrimitiveParams()", file="JsonConvertTest.cs", label="OverloadWithBoolParameter value = new OverloadWithBoolParameter()", span="1489-1489"];
m2_814 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.JsonConverterConstructor_OverloadsWithPrimitiveParams()", file="JsonConvertTest.cs", label="var json = JsonConvert.SerializeObject(value)", span="1490-1490"];
m2_815 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.JsonConverterConstructor_OverloadsWithPrimitiveParams()", file="JsonConvertTest.cs", label="Assert.AreEqual(''{\''Overload\'':\''object(System.Boolean)\''}'', json)", span="1491-1491"];
m2_816 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.JsonConverterConstructor_OverloadsWithPrimitiveParams()", file="JsonConvertTest.cs", label="OverloadWithFloatParameter value = new OverloadWithFloatParameter()", span="1496-1496"];
m2_817 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.JsonConverterConstructor_OverloadsWithPrimitiveParams()", file="JsonConvertTest.cs", label="string json = JsonConvert.SerializeObject(value)", span="1497-1497"];
m2_818 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.JsonConverterConstructor_OverloadsWithPrimitiveParams()", file="JsonConvertTest.cs", label="Assert.AreEqual(''{\''Overload\'':\''double\''}'', json)", span="1498-1498"];
m2_819 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.JsonConverterConstructor_OverloadsWithPrimitiveParams()", file="JsonConvertTest.cs", label="OverloadWithDoubleParameter value = new OverloadWithDoubleParameter()", span="1502-1502"];
m2_820 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.JsonConverterConstructor_OverloadsWithPrimitiveParams()", file="JsonConvertTest.cs", label="var json = JsonConvert.SerializeObject(value)", span="1503-1503"];
m2_821 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.JsonConverterConstructor_OverloadsWithPrimitiveParams()", file="JsonConvertTest.cs", label="Assert.AreEqual(''{\''Overload\'':\''double\''}'', json)", span="1504-1504"];
m2_822 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.JsonConverterConstructor_OverloadsWithPrimitiveParams()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.JsonConverterConstructor_OverloadsWithPrimitiveParams()", span="1426-1426"];
m2_708 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ClobberingJsonConverter.ClobberingJsonConverter(string)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.ClobberingJsonConverter.ClobberingJsonConverter(string)", span="1199-1199"];
m2_709 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ClobberingJsonConverter.ClobberingJsonConverter(string)", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.ClobberingJsonConverter.ClobberingJsonConverter(string)", span="1199-1199"];
m2_829 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.OverloadWithSByteParameter.OverloadWithSByteParameter()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.OverloadWithSByteParameter.OverloadWithSByteParameter()", span="1389-1389"];
m2_855 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.RoundingJsonConverter.RoundingJsonConverter(int)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.RoundingJsonConverter.RoundingJsonConverter(int)", span="1579-1579"];
m2_856 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.RoundingJsonConverter.RoundingJsonConverter(int)", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.RoundingJsonConverter.RoundingJsonConverter(int)", span="1579-1579"];
m2_876 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.NonGenericChildClass.NonGenericChildClass()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.NonGenericChildClass.NonGenericChildClass()", span="1628-1628"];
m2_832 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.OverloadWithBoolParameter.OverloadWithBoolParameter()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.OverloadWithBoolParameter.OverloadWithBoolParameter()", span="1407-1407"];
m2_861 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.RoundingJsonConverter.CanConvert(System.Type)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.RoundingJsonConverter.CanConvert(System.Type)", span="1595-1595"];
m2_862 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.RoundingJsonConverter.CanConvert(System.Type)", file="JsonConvertTest.cs", label="return objectType == typeof(double);", span="1597-1597"];
m2_863 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.RoundingJsonConverter.CanConvert(System.Type)", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.RoundingJsonConverter.CanConvert(System.Type)", span="1595-1595"];
m2_737 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.OverloadsJsonConverterer.OverloadsJsonConverterer(byte)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.OverloadsJsonConverterer.OverloadsJsonConverterer(byte)", span="1257-1257"];
m2_738 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.OverloadsJsonConverterer.OverloadsJsonConverterer(byte)", file="JsonConvertTest.cs", label="_type = ''byte''", span="1259-1259"];
m2_739 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.OverloadsJsonConverterer.OverloadsJsonConverterer(byte)", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.OverloadsJsonConverterer.OverloadsJsonConverterer(byte)", span="1257-1257"];
m2_743 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.OverloadsJsonConverterer.OverloadsJsonConverterer(int)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.OverloadsJsonConverterer.OverloadsJsonConverterer(int)", span="1267-1267"];
m2_744 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.OverloadsJsonConverterer.OverloadsJsonConverterer(int)", file="JsonConvertTest.cs", label="_type = ''int''", span="1269-1269"];
m2_745 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.OverloadsJsonConverterer.OverloadsJsonConverterer(int)", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.OverloadsJsonConverterer.OverloadsJsonConverterer(int)", span="1267-1267"];
m2_722 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WrongParametersPassedToJsonConvertConstructorShouldThrow()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.WrongParametersPassedToJsonConvertConstructorShouldThrow()", span="1221-1221"];
m2_723 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WrongParametersPassedToJsonConvertConstructorShouldThrow()", file="JsonConvertTest.cs", label="IncorrectJsonConvertParameters value = new IncorrectJsonConvertParameters { One = ''Boom'' }", span="1223-1223"];
m2_724 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WrongParametersPassedToJsonConvertConstructorShouldThrow()", file="JsonConvertTest.cs", label="ExceptionAssert.Throws<JsonException>(() => { JsonConvert.SerializeObject(value); })", span="1225-1225"];
m2_725 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WrongParametersPassedToJsonConvertConstructorShouldThrow()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.WrongParametersPassedToJsonConvertConstructorShouldThrow()", span="1221-1221"];
m2_666 [cluster="string.String(char, int)", file="JsonConvertTest.cs", label="Entry string.String(char, int)", span="0-0"];
m2_586 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.GetTicks(object)", file="JsonConvertTest.cs", label="return (value is DateTime) ? ((DateTime)value).Ticks : ((DateTimeOffset)value).Ticks;", span="993-993"];
m2_587 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.GetTicks(object)", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.GetTicks(object)", span="991-991"];
m2_835 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.JsonConverterConstructor_OverloadsWithArrayParams()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.JsonConverterConstructor_OverloadsWithArrayParams()", span="1518-1518"];
m2_836 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.JsonConverterConstructor_OverloadsWithArrayParams()", file="JsonConvertTest.cs", label="OverloadWithArrayParameters value = new OverloadWithArrayParameters()", span="1520-1520"];
m2_837 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.JsonConverterConstructor_OverloadsWithArrayParams()", file="JsonConvertTest.cs", label="string json = JsonConvert.SerializeObject(value)", span="1521-1521"];
m2_838 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.JsonConverterConstructor_OverloadsWithArrayParams()", file="JsonConvertTest.cs", label="Assert.AreEqual(''{\''WithParams\'':\''int[]\'',\''WithoutParams\'':\''bool[]\''}'', json)", span="1523-1523"];
m2_839 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.JsonConverterConstructor_OverloadsWithArrayParams()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.JsonConverterConstructor_OverloadsWithArrayParams()", span="1518-1518"];
m2_40 [cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JsonConvertTest.cs", label="return ValuesEquals(this, other);", span="207-207"];
m2_41 [cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", span="195-195"];
m2_853 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.RoundingJsonConverter.RoundingJsonConverter()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.RoundingJsonConverter.RoundingJsonConverter()", span="1574-1574"];
m2_854 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.RoundingJsonConverter.RoundingJsonConverter()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.RoundingJsonConverter.RoundingJsonConverter()", span="1574-1574"];
m2_871 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(double)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(double)", span="985-985"];
m2_696 [cluster="System.Text.StringBuilder.Append(string)", file="JsonConvertTest.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m2_514 [cluster="Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", span="1053-1053"];
m2_697 [cluster="System.Text.StringBuilder.ToString()", file="JsonConvertTest.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m2_740 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.OverloadsJsonConverterer.OverloadsJsonConverterer(short)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.OverloadsJsonConverterer.OverloadsJsonConverterer(short)", span="1262-1262"];
m2_741 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.OverloadsJsonConverterer.OverloadsJsonConverterer(short)", file="JsonConvertTest.cs", label="_type = ''short''", span="1264-1264"];
m2_742 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.OverloadsJsonConverterer.OverloadsJsonConverterer(short)", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.OverloadsJsonConverterer.OverloadsJsonConverterer(short)", span="1262-1262"];
m2_852 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Measurements.Measurements()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.Measurements.Measurements()", span="1557-1557"];
m2_26 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="357-357"];
m2_867 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.RoundingJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.RoundingJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="1605-1605"];
m2_868 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.RoundingJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonConvertTest.cs", label="writer.WriteValue(Math.Round((double)value, _precision, _rounding))", span="1607-1607"];
m2_869 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.RoundingJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.RoundingJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="1605-1605"];
m2_877 [file="JsonConvertTest.cs", label="Newtonsoft.Json.Tests.JsonConvertTest", span=""];
m2_878 [file="JsonConvertTest.cs", label="Newtonsoft.Json.Tests.JsonConvertTest.ClobberingJsonConverter", span=""];
m2_879 [file="JsonConvertTest.cs", label=value, span=""];
m2_880 [file="JsonConvertTest.cs", label="Newtonsoft.Json.Tests.JsonConvertTest.OverloadsJsonConverterer", span=""];
m2_881 [file="JsonConvertTest.cs", label="Newtonsoft.Json.Tests.JsonConvertTest.RoundingJsonConverter", span=""];
m3_13 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="JsonSchemaSpecTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m3_14 [cluster="string.Join(string, params string[])", file="JsonSchemaSpecTests.cs", label="Entry string.Join(string, params string[])", span="0-0"];
m3_15 [cluster="Unk.AreEqual", file="JsonSchemaSpecTests.cs", label="Entry Unk.AreEqual", span=""];
m3_47 [cluster="Unk.ToList", file="JsonSchemaSpecTests.cs", label="Entry Unk.ToList", span=""];
m3_16 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()", file="JsonSchemaSpecTests.cs", label="Entry Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()", span="74-74"];
m3_17 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()", file="JsonSchemaSpecTests.cs", label="IList<JsonSchemaSpecTest> specTests = new List<JsonSchemaSpecTest>()", span="76-76"];
m3_18 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()", file="JsonSchemaSpecTests.cs", label="string baseDirectory = AppDomain.CurrentDomain.BaseDirectory", span="79-79"];
m3_33 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()", file="JsonSchemaSpecTests.cs", label="jsonSchemaSpecTest.TestNumber = specTests.Count + 1", span="104-104"];
m3_34 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()", file="JsonSchemaSpecTests.cs", label="specTests.Add(jsonSchemaSpecTest)", span="106-106"];
m3_35 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()", file="JsonSchemaSpecTests.cs", label="specTests = specTests.Where(s => s.FileName != ''dependencies.json''\r\n                                             && s.TestCaseDescription != ''multiple disallow subschema''\r\n                                             && s.TestCaseDescription != ''types from separate schemas are merged''\r\n                                             && s.TestCaseDescription != ''when types includes a schema it should fully validate the schema''\r\n                                             && s.TestCaseDescription != ''types can include schemas'').ToList()", span="111-115"];
m3_19 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()", file="JsonSchemaSpecTests.cs", label="string baseTestPath = Path.Combine(baseDirectory, Path.Combine(''Schema'', ''Specs''))", span="80-80"];
m3_20 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()", file="JsonSchemaSpecTests.cs", label="string[] testFiles = Directory.GetFiles(baseTestPath, ''*.json'', SearchOption.AllDirectories)", span="82-82"];
m3_21 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()", file="JsonSchemaSpecTests.cs", label=testFiles, span="85-85"];
m3_22 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()", file="JsonSchemaSpecTests.cs", label="string testJson = System.IO.File.ReadAllText(testFile)", span="87-87"];
m3_27 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()", file="JsonSchemaSpecTests.cs", label="jsonSchemaSpecTest.FileName = Path.GetFileName(testFile)", span="97-97"];
m3_23 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()", file="JsonSchemaSpecTests.cs", label="JArray a = JArray.Parse(testJson)", span="89-89"];
m3_24 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()", file="JsonSchemaSpecTests.cs", label=a, span="91-91"];
m3_25 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()", file="JsonSchemaSpecTests.cs", label="testCase[''tests'']", span="93-93"];
m3_28 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()", file="JsonSchemaSpecTests.cs", label="jsonSchemaSpecTest.TestCaseDescription = (string)testCase[''description'']", span="98-98"];
m3_29 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()", file="JsonSchemaSpecTests.cs", label="jsonSchemaSpecTest.Schema = (JObject)testCase[''schema'']", span="99-99"];
m3_26 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()", file="JsonSchemaSpecTests.cs", label="JsonSchemaSpecTest jsonSchemaSpecTest = new JsonSchemaSpecTest()", span="95-95"];
m3_30 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()", file="JsonSchemaSpecTests.cs", label="jsonSchemaSpecTest.TestDescription = (string)test[''description'']", span="101-101"];
m3_31 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()", file="JsonSchemaSpecTests.cs", label="jsonSchemaSpecTest.Data = test[''data'']", span="102-102"];
m3_32 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()", file="JsonSchemaSpecTests.cs", label="jsonSchemaSpecTest.IsValid = (bool)test[''valid'']", span="103-103"];
m3_36 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()", file="JsonSchemaSpecTests.cs", label="return specTests;", span="117-117"];
m3_37 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()", file="JsonSchemaSpecTests.cs", label="Exit Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()", span="74-74"];
m3_44 [cluster="System.IO.Path.GetFileName(string)", file="JsonSchemaSpecTests.cs", label="Entry System.IO.Path.GetFileName(string)", span="0-0"];
m3_3 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.SpecTest(Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTest)", file="JsonSchemaSpecTests.cs", label="Entry Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.SpecTest(Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTest)", span="63-63"];
m3_4 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.SpecTest(Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTest)", file="JsonSchemaSpecTests.cs", label="JsonSchema s = JsonSchema.Read(jsonSchemaSpecTest.Schema.CreateReader())", span="65-65"];
m3_6 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.SpecTest(Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTest)", file="JsonSchemaSpecTests.cs", label="bool v = jsonSchemaSpecTest.Data.IsValid(s, out e)", span="68-68"];
m3_8 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.SpecTest(Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTest)", file="JsonSchemaSpecTests.cs", label="Assert.AreEqual(jsonSchemaSpecTest.IsValid, v, jsonSchemaSpecTest.TestCaseDescription + '' - '' + jsonSchemaSpecTest.TestDescription + '' - errors: '' + string.Join('', '', errorMessages))", span="71-71"];
m3_5 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.SpecTest(Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTest)", file="JsonSchemaSpecTests.cs", label="IList<string> e", span="67-67"];
m3_7 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.SpecTest(Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTest)", file="JsonSchemaSpecTests.cs", label="string[] errorMessages = ((e != null) ? e.ToArray() : null) ?? new string[0]", span="69-69"];
m3_9 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.SpecTest(Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTest)", file="JsonSchemaSpecTests.cs", label="Exit Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.SpecTest(Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTest)", span="63-63"];
m3_10 [cluster="Newtonsoft.Json.Linq.JToken.CreateReader()", file="JsonSchemaSpecTests.cs", label="Entry Newtonsoft.Json.Linq.JToken.CreateReader()", span="1886-1886"];
m3_11 [cluster="Newtonsoft.Json.Schema.JsonSchema.Read(Newtonsoft.Json.JsonReader)", file="JsonSchemaSpecTests.cs", label="Entry Newtonsoft.Json.Schema.JsonSchema.Read(Newtonsoft.Json.JsonReader)", span="269-269"];
m3_46 [cluster="Unk.Where", file="JsonSchemaSpecTests.cs", label="Entry Unk.Where", span=""];
m3_48 [cluster="lambda expression", file="JsonSchemaSpecTests.cs", label="Entry lambda expression", span="111-115"];
m3_49 [cluster="lambda expression", file="JsonSchemaSpecTests.cs", label="s.FileName != ''dependencies.json''\r\n                                             && s.TestCaseDescription != ''multiple disallow subschema''\r\n                                             && s.TestCaseDescription != ''types from separate schemas are merged''\r\n                                             && s.TestCaseDescription != ''when types includes a schema it should fully validate the schema''\r\n                                             && s.TestCaseDescription != ''types can include schemas''", span="111-115"];
m3_50 [cluster="lambda expression", file="JsonSchemaSpecTests.cs", label="Exit lambda expression", span="111-115"];
m3_43 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTest.JsonSchemaSpecTest()", file="JsonSchemaSpecTests.cs", label="Entry Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTest.JsonSchemaSpecTest()", span="43-43"];
m3_39 [cluster="System.IO.Path.Combine(string, string)", file="JsonSchemaSpecTests.cs", label="Entry System.IO.Path.Combine(string, string)", span="0-0"];
m3_45 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="JsonSchemaSpecTests.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m3_12 [cluster="Newtonsoft.Json.Linq.JToken.IsValid(Newtonsoft.Json.Schema.JsonSchema, out System.Collections.Generic.IList<string>)", file="JsonSchemaSpecTests.cs", label="Entry Newtonsoft.Json.Linq.JToken.IsValid(Newtonsoft.Json.Schema.JsonSchema, out System.Collections.Generic.IList<string>)", span="79-79"];
m3_42 [cluster="Newtonsoft.Json.Linq.JArray.Parse(string)", file="JsonSchemaSpecTests.cs", label="Entry Newtonsoft.Json.Linq.JArray.Parse(string)", span="157-157"];
m3_0 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTest.ToString()", file="JsonSchemaSpecTests.cs", label="Entry Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTest.ToString()", span="53-53"];
m3_1 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTest.ToString()", file="JsonSchemaSpecTests.cs", label="return FileName + '' - '' + TestCaseDescription + '' - '' + TestDescription;", span="55-55"];
m3_2 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTest.ToString()", file="JsonSchemaSpecTests.cs", label="Exit Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTest.ToString()", span="53-53"];
m3_38 [cluster="System.Collections.Generic.List<T>.List()", file="JsonSchemaSpecTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m3_41 [cluster="System.IO.File.ReadAllText(string)", file="JsonSchemaSpecTests.cs", label="Entry System.IO.File.ReadAllText(string)", span="0-0"];
m3_40 [cluster="System.IO.Directory.GetFiles(string, string, System.IO.SearchOption)", file="JsonSchemaSpecTests.cs", label="Entry System.IO.Directory.GetFiles(string, string, System.IO.SearchOption)", span="0-0"];
m3_51 [file="JsonSchemaSpecTests.cs", label="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTest", span=""];
m4_8 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_ReadAsString()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''9223372036854775807'', reader.Value)", span="76-76"];
m4_9 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_ReadAsString()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''1.7976931348623157E+308'', reader.ReadAsString())", span="78-78"];
m4_10 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_ReadAsString()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="79-79"];
m4_11 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_ReadAsString()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''1.7976931348623157E+308'', reader.Value)", span="80-80"];
m4_12 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_ReadAsString()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''792281625142643375935439503.35'', reader.ReadAsString())", span="82-82"];
m4_13 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_ReadAsString()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="83-83"];
m4_118 [cluster="System.Guid.Guid(string)", file="JsonSerializerTest.cs", label="Entry System.Guid.Guid(string)", span="0-0"];
m4_839 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", span="1360-1360"];
m4_840 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", file="JsonSerializerTest.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''true''))", span="1362-1362"];
m4_841 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBytes(); }, ''Unexpected character encountered while parsing value: t. Path '', line 1, position 1.'')", span="1364-1364"];
m4_842 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", span="1360-1360"];
m4_1869 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Boolean()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Boolean()", span="2878-2878"];
m4_1874 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Boolean()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''false'', s)", span="2886-2886"];
m4_1870 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Boolean()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(''{\''Test1\'':false}''))", span="2880-2880"];
m4_1873 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Boolean()", file="JsonSerializerTest.cs", label="string s = reader.ReadAsString()", span="2885-2885"];
m4_1875 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Boolean()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2888-2888"];
m4_1871 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Boolean()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2882-2882"];
m4_1872 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Boolean()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2883-2883"];
m4_1876 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Boolean()", file="JsonSerializerTest.cs", label="Assert.IsFalse(reader.Read())", span="2889-2889"];
m4_1877 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Boolean()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Boolean()", span="2878-2878"];
m4_1148 [cluster="System.Text.StringBuilder.StringBuilder()", file="JsonSerializerTest.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m4_215 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", span="378-378"];
m4_219 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.StartObject, jsonTextReader.TokenType)", span="387-387"];
m4_221 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, jsonTextReader.TokenType)", span="390-390"];
m4_223 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.String, jsonTextReader.TokenType)", span="393-393"];
m4_224 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''/Date(9467082_PIE_340000-0631)/'', jsonTextReader.Value)", span="394-394"];
m4_226 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.EndObject, jsonTextReader.TokenType)", span="397-397"];
m4_217 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonSerializerTest.cs", label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="384-384"];
m4_218 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonSerializerTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="386-386"];
m4_220 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonSerializerTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="389-389"];
m4_222 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonSerializerTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="392-392"];
m4_225 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonSerializerTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="396-396"];
m4_227 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonSerializerTest.cs", label="Assert.IsFalse(jsonTextReader.Read())", span="399-399"];
m4_216 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonSerializerTest.cs", label="string json = @''{\r\n    ChildId: '\/Date(9467082_PIE_340000-0631)\/'\r\n}''", span="380-382"];
m4_228 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", span="378-378"];
m4_1163 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", span="1810-1810"];
m4_1168 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonSerializerTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.StartArray)", span="1823-1823"];
m4_1170 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonSerializerTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.Float)", span="1826-1826"];
m4_1171 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonSerializerTest.cs", label="Assert.AreEqual(jsonReader.Value, double.NaN)", span="1827-1827"];
m4_1173 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonSerializerTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.Float)", span="1830-1830"];
m4_1174 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonSerializerTest.cs", label="Assert.AreEqual(jsonReader.Value, double.PositiveInfinity)", span="1831-1831"];
m4_1176 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonSerializerTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.Float)", span="1834-1834"];
m4_1177 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonSerializerTest.cs", label="Assert.AreEqual(jsonReader.Value, double.NegativeInfinity)", span="1835-1835"];
m4_1179 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonSerializerTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.EndArray)", span="1838-1838"];
m4_1166 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonSerializerTest.cs", label="JsonReader jsonReader = new JsonTextReader(sr)", span="1820-1820"];
m4_1165 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonSerializerTest.cs", label="StringReader sr = new StringReader(input)", span="1818-1818"];
m4_1167 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonSerializerTest.cs", label="jsonReader.Read()", span="1822-1822"];
m4_1169 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonSerializerTest.cs", label="jsonReader.Read()", span="1825-1825"];
m4_1172 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonSerializerTest.cs", label="jsonReader.Read()", span="1829-1829"];
m4_1175 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonSerializerTest.cs", label="jsonReader.Read()", span="1833-1833"];
m4_1178 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonSerializerTest.cs", label="jsonReader.Read()", span="1837-1837"];
m4_1164 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonSerializerTest.cs", label="string input = @''[\r\n  NaN,\r\n  Infinity,\r\n  -Infinity\r\n]''", span="1812-1816"];
m4_1180 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", span="1810-1810"];
m4_674 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndAfterReadingN()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndAfterReadingN()", span="1097-1097"];
m4_675 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndAfterReadingN()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(''n''))", span="1099-1099"];
m4_676 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndAfterReadingN()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => reader.Read(), ''Unexpected end when reading JSON. Path '', line 1, position 1.'')", span="1100-1100"];
m4_677 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndAfterReadingN()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndAfterReadingN()", span="1097-1097"];
m4_1543 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", span="2369-2369"];
m4_1547 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2376-2376"];
m4_1549 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2379-2379"];
m4_1551 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2382-2382"];
m4_1552 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2383-2383"];
m4_1553 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2011, 8, 1, 21, 25, 0, DateTimeKind.Utc), TimeSpan.Zero), reader.Value)", span="2384-2384"];
m4_1555 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2387-2387"];
m4_1545 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2373-2373"];
m4_1546 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2375-2375"];
m4_1548 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2378-2378"];
m4_1550 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonSerializerTest.cs", label="reader.ReadAsDateTimeOffset()", span="2381-2381"];
m4_1554 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2386-2386"];
m4_1544 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonSerializerTest.cs", label="string json = @''{''''Offset'''':''''2011-08-01T21:25Z''''}''", span="2371-2371"];
m4_1556 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", span="2369-2369"];
m4_23 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.Read()", span="366-366"];
m4_1541 [cluster="System.TimeSpan.FromMinutes(double)", file="JsonSerializerTest.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m4_871 [cluster="Unk.IsNull", file="JsonSerializerTest.cs", label="Entry Unk.IsNull", span=""];
m4_880 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", span="1406-1406"];
m4_892 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSerializerTest.cs", label="Assert.AreEqual(newLinesText + ''name1'' + newLinesText, reader.Value)", span="1451-1451"];
m4_907 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSerializerTest.cs", label="Assert.AreEqual(newLinesText + ''blah comment'' + newLinesText, reader.Value)", span="1471-1471"];
m4_889 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSerializerTest.cs", label="Assert.AreEqual(7, reader.LineNumber)", span="1447-1447"];
m4_891 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSerializerTest.cs", label="Assert.AreEqual(31, reader.LineNumber)", span="1450-1450"];
m4_894 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSerializerTest.cs", label="Assert.AreEqual(37, reader.LineNumber)", span="1454-1454"];
m4_896 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSerializerTest.cs", label="Assert.AreEqual(55, reader.LineNumber)", span="1457-1457"];
m4_897 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="1458-1458"];
m4_898 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Date'', reader.Value)", span="1459-1459"];
m4_900 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSerializerTest.cs", label="Assert.AreEqual(61, reader.LineNumber)", span="1462-1462"];
m4_901 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1L, reader.Value)", span="1463-1463"];
m4_903 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSerializerTest.cs", label="Assert.AreEqual(73, reader.LineNumber)", span="1466-1466"];
m4_904 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, reader.Value)", span="1467-1467"];
m4_906 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSerializerTest.cs", label="Assert.AreEqual(91, reader.LineNumber)", span="1470-1470"];
m4_909 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSerializerTest.cs", label="Assert.AreEqual(97, reader.LineNumber)", span="1474-1474"];
m4_911 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSerializerTest.cs", label="Assert.AreEqual(109, reader.LineNumber)", span="1477-1477"];
m4_913 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSerializerTest.cs", label="Assert.AreEqual(115, reader.LineNumber)", span="1480-1480"];
m4_915 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSerializerTest.cs", label="Assert.AreEqual(133, reader.LineNumber)", span="1483-1483"];
m4_916 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''name2'', reader.Value)", span="1484-1484"];
m4_918 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSerializerTest.cs", label="Assert.AreEqual(139, reader.LineNumber)", span="1487-1487"];
m4_920 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSerializerTest.cs", label="Assert.AreEqual(145, reader.LineNumber)", span="1490-1490"];
m4_922 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSerializerTest.cs", label="Assert.AreEqual(151, reader.LineNumber)", span="1493-1493"];
m4_887 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="1445-1445"];
m4_884 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSerializerTest.cs", label="StringReader sr = new StringReader(newLinesText)", span="1439-1439"];
m4_881 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSerializerTest.cs", label="string newLinesText = StringUtils.CarriageReturn + StringUtils.CarriageReturnLineFeed + StringUtils.LineFeed + StringUtils.CarriageReturnLineFeed + '' '' + StringUtils.CarriageReturn + StringUtils.CarriageReturnLineFeed", span="1408-1408"];
m4_893 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="1453-1453"];
m4_908 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="1473-1473"];
m4_888 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="1446-1446"];
m4_890 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="1449-1449"];
m4_895 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="1456-1456"];
m4_899 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="1461-1461"];
m4_902 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="1465-1465"];
m4_905 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="1469-1469"];
m4_910 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="1476-1476"];
m4_912 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="1479-1479"];
m4_914 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="1482-1482"];
m4_917 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="1486-1486"];
m4_919 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="1489-1489"];
m4_921 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="1492-1492"];
m4_882 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSerializerTest.cs", label="string json =\r\n                newLinesText\r\n                + ''{'' + newLinesText\r\n                + ''''' + newLinesText\r\n                + ''name1'' + newLinesText\r\n                + ''''' + newLinesText\r\n                + '':'' + newLinesText\r\n                + ''['' + newLinesText\r\n                + ''new'' + newLinesText\r\n                + ''Date'' + newLinesText\r\n                + ''('' + newLinesText\r\n                + ''1'' + newLinesText\r\n                + '','' + newLinesText\r\n                + ''null'' + newLinesText\r\n                + ''/*'' + newLinesText\r\n                + ''blah comment'' + newLinesText\r\n                + ''*/'' + newLinesText\r\n                + '')'' + newLinesText\r\n                + '','' + newLinesText\r\n                + ''1.1111'' + newLinesText\r\n                + '']'' + newLinesText\r\n                + '','' + newLinesText\r\n                + ''name2'' + newLinesText\r\n                + '':'' + newLinesText\r\n                + ''{'' + newLinesText\r\n                + ''}'' + newLinesText\r\n                + ''}'' + newLinesText", span="1410-1436"];
m4_885 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSerializerTest.cs", label="sr.ReadLine() != null", span="1440-1440"];
m4_883 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSerializerTest.cs", label="int count = 0", span="1438-1438"];
m4_886 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSerializerTest.cs", label="count++", span="1442-1442"];
m4_923 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", span="1406-1406"];
m4_14 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_ReadAsString()", color=green, community=0, file="JsonSerializerTest.cs", label="1: Assert.AreEqual(''792281625142643375935439503.35'', reader.Value)", span="84-84"];
m4_15 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_ReadAsString()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''792281625142643375935555555555555555555555555555555555555555555555555439503.35'', reader.ReadAsString())", span="86-86"];
m4_16 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_ReadAsString()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="87-87"];
m4_17 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_ReadAsString()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''792281625142643375935555555555555555555555555555555555555555555555555439503.35'', reader.Value)", span="88-88"];
m4_2790 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DisposeSupressesFinalization()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.DisposeSupressesFinalization()", span="4239-4239"];
m4_2794 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DisposeSupressesFinalization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, UnmanagedResourceFakingJsonReader.DisposalCalls)", span="4244-4244"];
m4_2793 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DisposeSupressesFinalization()", file="JsonSerializerTest.cs", label="GC.WaitForPendingFinalizers()", span="4243-4243"];
m4_2792 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DisposeSupressesFinalization()", file="JsonSerializerTest.cs", label="GC.Collect()", span="4242-4242"];
m4_2791 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DisposeSupressesFinalization()", file="JsonSerializerTest.cs", label="UnmanagedResourceFakingJsonReader.CreateAndDispose()", span="4241-4241"];
m4_2795 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DisposeSupressesFinalization()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.DisposeSupressesFinalization()", span="4239-4239"];
m4_1902 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", span="2927-2927"];
m4_1904 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2930-2930"];
m4_1903 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="JsonSerializerTest.cs", label="string json = ''new Date,()''", span="2929-2929"];
m4_1905 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { Assert.IsTrue(reader.Read()); }, ''Unexpected character while parsing constructor: ,. Path '', line 1, position 8.'')", span="2932-2932"];
m4_1906 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", span="2927-2927"];
m4_2423 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_UnexpectedEnd()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_UnexpectedEnd()", span="3730-3730"];
m4_2425 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_UnexpectedEnd()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3734-3734"];
m4_2424 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_UnexpectedEnd()", file="JsonSerializerTest.cs", label="string json = @''tru''", span="3732-3732"];
m4_2426 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_UnexpectedEnd()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsString(); }, ''Unexpected end when reading JSON. Path '', line 1, position 3.'')", span="3736-3736"];
m4_2427 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_UnexpectedEnd()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_UnexpectedEnd()", span="3730-3730"];
m4_135 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", span="259-259"];
m4_139 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.StartObject, jsonTextReader.TokenType)", span="269-269"];
m4_141 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, jsonTextReader.TokenType)", span="272-272"];
m4_143 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Integer, jsonTextReader.TokenType)", span="275-275"];
m4_145 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, jsonTextReader.TokenType)", span="278-278"];
m4_147 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Integer, jsonTextReader.TokenType)", span="281-281"];
m4_148 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(BigInteger), jsonTextReader.ValueType)", span="282-282"];
m4_149 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonSerializerTest.cs", label="Assert.AreEqual(BigInteger.Parse(''333333333333333333333333333333333333333''), jsonTextReader.Value)", span="283-283"];
m4_151 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.EndObject, jsonTextReader.TokenType)", span="286-286"];
m4_155 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonSerializerTest.cs", label="Assert.AreEqual(BigInteger.Parse(''333333333333333333333333333333333333333''), i)", span="292-292"];
m4_137 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonSerializerTest.cs", label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="266-266"];
m4_138 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonSerializerTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="268-268"];
m4_140 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonSerializerTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="271-271"];
m4_142 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonSerializerTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="274-274"];
m4_144 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonSerializerTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="277-277"];
m4_146 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonSerializerTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="280-280"];
m4_150 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonSerializerTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="285-285"];
m4_152 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonSerializerTest.cs", label="Assert.IsFalse(jsonTextReader.Read())", span="288-288"];
m4_154 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonSerializerTest.cs", label="var i = (BigInteger)((JValue)o[''ChildId'']).Value", span="291-291"];
m4_136 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonSerializerTest.cs", label="string json = @''{\r\n    ParentId: 1,\r\n    ChildId: 333333333333333333333333333333333333333,\r\n}''", span="261-264"];
m4_153 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonSerializerTest.cs", label="JObject o = JObject.Parse(json)", span="290-290"];
m4_156 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", span="259-259"];
m4_1591 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", span="2442-2442"];
m4_1595 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2449-2449"];
m4_1597 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2452-2452"];
m4_1599 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2455-2455"];
m4_1600 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="2456-2456"];
m4_1601 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1m, reader.Value)", span="2457-2457"];
m4_1593 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2446-2446"];
m4_1594 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2448-2448"];
m4_1596 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2451-2451"];
m4_1598 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonSerializerTest.cs", label="reader.ReadAsDecimal()", span="2454-2454"];
m4_1592 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonSerializerTest.cs", label="string json = @''{''''Name'''':1}''", span="2444-2444"];
m4_1602 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", span="2442-2442"];
m4_861 [cluster="System.Convert.ToBase64String(byte[])", file="JsonSerializerTest.cs", label="Entry System.Convert.ToBase64String(byte[])", span="0-0"];
m4_1150 [cluster="Newtonsoft.Json.JsonWriter.WriteStartArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartArray()", span="422-422"];
m4_373 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", span="609-609"];
m4_375 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", file="JsonSerializerTest.cs", label="JsonReader jsonReader = new JsonTextReader(new StringReader(input))", span="632-632"];
m4_374 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", file="JsonSerializerTest.cs", label="string input = @''{\r\n''''matches'''' : [\r\n{''''t'''':''''C'''', ''''n'''':''''Citigroup Inc.'''', ''''e'''':''''NYSE'''', ''''id'''':''''662713''''}\r\n,{''''t'''':''''CHL'''', ''''n'''':''''China Mobile Ltd. (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''660998''''}\r\n,{''''t'''':''''PTR'''', ''''n'''':''''PetroChina Company Limited (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''664536''''}\r\n,{''''t'''':''''RIO'''', ''''n'''':''''Companhia Vale do Rio Doce (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''671472''''}\r\n,{''''t'''':''''RIOPR'''', ''''n'''':''''Companhia Vale do Rio Doce (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''3512643''''}\r\n,{''''t'''':''''CSCO'''', ''''n'''':''''Cisco Systems, Inc.'''', ''''e'''':''''NASDAQ'''', ''''id'''':''''99624''''}\r\n,{''''t'''':''''CVX'''', ''''n'''':''''Chevron Corporation'''', ''''e'''':''''NYSE'''', ''''id'''':''''667226''''}\r\n,{''''t'''':''''TM'''', ''''n'''':''''Toyota Motor Corporation (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''655880''''}\r\n,{''''t'''':''''JPM'''', ''''n'''':''''JPMorgan Chase \\x26 Co.'''', ''''e'''':''''NYSE'''', ''''id'''':''''665639''''}\r\n,{''''t'''':''''COP'''', ''''n'''':''''ConocoPhillips'''', ''''e'''':''''NYSE'''', ''''id'''':''''1691168''''}\r\n,{''''t'''':''''LFC'''', ''''n'''':''''China Life Insurance Company Ltd. (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''688679''''}\r\n,{''''t'''':''''NOK'''', ''''n'''':''''Nokia Corporation (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''657729''''}\r\n,{''''t'''':''''KO'''', ''''n'''':''''The Coca-Cola Company'''', ''''e'''':''''NYSE'''', ''''id'''':''''6550''''}\r\n,{''''t'''':''''VZ'''', ''''n'''':''''Verizon Communications Inc.'''', ''''e'''':''''NYSE'''', ''''id'''':''''664887''''}\r\n,{''''t'''':''''AMX'''', ''''n'''':''''America Movil S.A.B de C.V. (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''665834''''}],\r\n''''all'''' : false\r\n}\r\n''", span="611-630"];
m4_376 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", file="JsonSerializerTest.cs", label="jsonReader.Read()", span="634-634"];
m4_377 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", span="609-609"];
m4_397 [cluster="System.Text.UTF8Encoding.UTF8Encoding(bool)", file="JsonSerializerTest.cs", label="Entry System.Text.UTF8Encoding.UTF8Encoding(bool)", span="0-0"];
m4_2361 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean_NullChar()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean_NullChar()", span="3649-3649"];
m4_2364 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean_NullChar()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, reader.ReadAsBoolean())", span="3655-3655"];
m4_2365 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean_NullChar()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, reader.ReadAsBoolean())", span="3656-3656"];
m4_2363 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean_NullChar()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3653-3653"];
m4_2362 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean_NullChar()", file="JsonSerializerTest.cs", label="string json = '\0' + @''true'' + '\0' + '\0'", span="3651-3651"];
m4_2366 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean_NullChar()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean_NullChar()", span="3649-3649"];
m4_1574 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="JsonSerializerTest.cs", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
m4_1542 [cluster="System.TimeSpan.Add(System.TimeSpan)", file="JsonSerializerTest.cs", label="Entry System.TimeSpan.Add(System.TimeSpan)", span="0-0"];
m4_2501 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", span="3839-3839"];
m4_2503 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))\r\n            {\r\n                MaxDepth = 1\r\n            }", span="3843-3846"];
m4_2502 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="JsonSerializerTest.cs", label="string json = ''[[]]''", span="3841-3841"];
m4_2504 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3848-3848"];
m4_2505 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { Assert.IsTrue(reader.Read()); }, ''The reader's MaxDepth of 1 has been exceeded. Path '[0]', line 1, position 2.'')", span="3850-3850"];
m4_2506 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", span="3839-3839"];
m4_24 [cluster="Unk.IsTrue", file="JsonSerializerTest.cs", label="Entry Unk.IsTrue", span=""];
m4_1156 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(decimal)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(decimal)", span="1033-1033"];
m4_159 [cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JObject.Parse(string)", span="400-400"];
m4_1209 [cluster="System.Convert.ToInt32(char)", file="JsonSerializerTest.cs", label="Entry System.Convert.ToInt32(char)", span="0-0"];
m4_1435 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", span="2208-2208"];
m4_1436 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[1.0]''))", span="2210-2210"];
m4_1437 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBytes(); }, ''Unexpected token when reading bytes: Float. Path '[0]', line 1, position 4.'')", span="2212-2212"];
m4_1438 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", span="2208-2208"];
m4_1295 [cluster="System.Text.Encoding.GetString(byte[], int, int)", file="JsonSerializerTest.cs", label="Entry System.Text.Encoding.GetString(byte[], int, int)", span="0-0"];
m4_2641 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", span="4032-4032"];
m4_2650 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''first'', jsonTextReader.Value)", span="4047-4047"];
m4_2655 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1L, jsonTextReader.Value)", span="4056-4056"];
m4_2643 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonSerializerTest.cs", label="JsonTextReader jsonTextReader = new JsonTextReader(toggleReaderError)", span="4035-4035"];
m4_2642 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonSerializerTest.cs", label="ToggleReaderError toggleReaderError = new ToggleReaderError(new StringReader(''{'first':1,'second':2,'third':3}''))", span="4034-4034"];
m4_2645 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonSerializerTest.cs", label="toggleReaderError.Error = true", span="4039-4039"];
m4_2649 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonSerializerTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="4046-4046"];
m4_2651 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonSerializerTest.cs", label="toggleReaderError.Error = true", span="4049-4049"];
m4_2654 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonSerializerTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="4055-4055"];
m4_2656 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonSerializerTest.cs", label="toggleReaderError.Error = true", span="4058-4058"];
m4_2644 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonSerializerTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="4037-4037"];
m4_2646 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<Exception>(() => jsonTextReader.Read(), ''Read error'')", span="4041-4041"];
m4_2647 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<Exception>(() => jsonTextReader.Read(), ''Read error'')", span="4042-4042"];
m4_2652 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<Exception>(() => jsonTextReader.Read(), ''Read error'')", span="4051-4051"];
m4_2657 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<Exception>(() => jsonTextReader.Read(), ''Read error'')", span="4060-4060"];
m4_2658 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<Exception>(() => jsonTextReader.Read(), ''Read error'')", span="4061-4061"];
m4_2659 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<Exception>(() => jsonTextReader.Read(), ''Read error'')", span="4062-4062"];
m4_2648 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonSerializerTest.cs", label="toggleReaderError.Error = false", span="4044-4044"];
m4_2653 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonSerializerTest.cs", label="toggleReaderError.Error = false", span="4053-4053"];
m4_2660 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonSerializerTest.cs", label="toggleReaderError.Error = false", span="4064-4064"];
m4_2661 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", span="4032-4032"];
m4_333 [cluster="object.ToString()", file="JsonSerializerTest.cs", label="Entry object.ToString()", span="0-0"];
m4_1028 [cluster="int.ToString()", file="JsonSerializerTest.cs", label="Entry int.ToString()", span="0-0"];
m4_2353 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean_UnexpectedEnd()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean_UnexpectedEnd()", span="3639-3639"];
m4_2355 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean_UnexpectedEnd()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3643-3643"];
m4_2354 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean_UnexpectedEnd()", file="JsonSerializerTest.cs", label="string json = @''tru''", span="3641-3641"];
m4_2356 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean_UnexpectedEnd()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBoolean(); }, ''Unexpected end when reading JSON. Path '', line 1, position 3.'')", span="3645-3645"];
m4_2357 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean_UnexpectedEnd()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean_UnexpectedEnd()", span="3639-3639"];
m4_2499 [cluster="double.ToString(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry double.ToString(System.IFormatProvider)", span="0-0"];
m4_2782 [cluster="System.Net.Sockets.TcpListener.TcpListener(System.Net.IPAddress, int)", file="JsonSerializerTest.cs", label="Entry System.Net.Sockets.TcpListener.TcpListener(System.Net.IPAddress, int)", span="0-0"];
m4_1335 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", span="2068-2068"];
m4_1339 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.StartArray, jsonReader.TokenType)", span="2074-2074"];
m4_1341 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="2077-2077"];
m4_1342 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(int), jsonReader.ValueType)", span="2078-2078"];
m4_1343 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonSerializerTest.cs", label="Assert.AreEqual(250, jsonReader.Value)", span="2079-2079"];
m4_1345 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="2082-2082"];
m4_1346 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(int), jsonReader.ValueType)", span="2083-2083"];
m4_1347 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonSerializerTest.cs", label="Assert.AreEqual(250, jsonReader.Value)", span="2084-2084"];
m4_1349 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="2087-2087"];
m4_1350 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(int), jsonReader.ValueType)", span="2088-2088"];
m4_1351 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonSerializerTest.cs", label="Assert.AreEqual(250, jsonReader.Value)", span="2089-2089"];
m4_1353 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.EndArray, jsonReader.TokenType)", span="2092-2092"];
m4_1337 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonSerializerTest.cs", label="JsonTextReader jsonReader = new JsonTextReader(s)", span="2071-2071"];
m4_1336 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonSerializerTest.cs", label="StringReader s = new StringReader(@''[0372, 0xFA, 0XFA]'')", span="2070-2070"];
m4_1338 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonSerializerTest.cs", label="Assert.IsTrue(jsonReader.Read())", span="2073-2073"];
m4_1340 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonSerializerTest.cs", label="jsonReader.ReadAsInt32()", span="2076-2076"];
m4_1344 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonSerializerTest.cs", label="jsonReader.ReadAsInt32()", span="2081-2081"];
m4_1348 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonSerializerTest.cs", label="jsonReader.ReadAsInt32()", span="2086-2086"];
m4_1352 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonSerializerTest.cs", label="Assert.IsTrue(jsonReader.Read())", span="2091-2091"];
m4_1354 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonSerializerTest.cs", label="Assert.IsFalse(jsonReader.Read())", span="2094-2094"];
m4_1355 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", span="2068-2068"];
m4_832 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", span="1352-1352"];
m4_833 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", file="JsonSerializerTest.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@'''h\''))", span="1354-1354"];
m4_834 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unterminated string. Expected delimiter: '. Path '', line 1, position 3.'')", span="1356-1356"];
m4_835 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", span="1352-1352"];
m4_1911 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", span="2936-2936"];
m4_1915 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2942-2942"];
m4_1917 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2945-2945"];
m4_1919 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2948-2948"];
m4_1921 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="2951-2951"];
m4_1923 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2954-2954"];
m4_1925 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2957-2957"];
m4_1927 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2960-2960"];
m4_1929 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2963-2963"];
m4_1931 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2966-2966"];
m4_1913 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="2939-2939"];
m4_1914 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2941-2941"];
m4_1916 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2944-2944"];
m4_1918 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2947-2947"];
m4_1920 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2950-2950"];
m4_1922 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2953-2953"];
m4_1924 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2956-2956"];
m4_1926 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2959-2959"];
m4_1928 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2962-2962"];
m4_1930 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2965-2965"];
m4_1932 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonSerializerTest.cs", label="Assert.IsFalse(reader.Read())", span="2968-2968"];
m4_1912 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonSerializerTest.cs", label="string json = ''\x00a0{\x00a0'h\x00a0i\x00a0'\x00a0:\x00a0[\x00a0true\x00a0,\x00a0new\x00a0Date\x00a0(\x00a0)\x00a0]\x00a0/*\x00a0comment\x00a0*/\x00a0}\x00a0''", span="2938-2938"];
m4_1933 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", span="2936-2936"];
m4_2662 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", span="4317-4317"];
m4_2835 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", file="JsonSerializerTest.cs", label="_inner = inner", span="4319-4319"];
m4_2836 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", span="4317-4317"];
m4_1689 [cluster="System.DateTime.DateTime(long)", file="JsonSerializerTest.cs", label="Entry System.DateTime.DateTime(long)", span="0-0"];
m4_1987 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_CommaErrors_Multiple()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_CommaErrors_Multiple()", span="3051-3051"];
m4_1988 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_CommaErrors_Multiple()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(''['',,'']''))", span="3053-3053"];
m4_1989 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_CommaErrors_Multiple()", file="JsonSerializerTest.cs", label="reader.Read()", span="3054-3054"];
m4_1990 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_CommaErrors_Multiple()", file="JsonSerializerTest.cs", label="CollectionAssert.AreEquivalent(new byte[0], reader.ReadAsBytes())", span="3055-3055"];
m4_1991 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_CommaErrors_Multiple()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                reader.ReadAsBytes();\r\n            }, ''Unexpected character encountered while parsing value: ,. Path '[1]', line 1, position 5.'')", span="3057-3060"];
m4_1992 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_CommaErrors_Multiple()", file="JsonSerializerTest.cs", label="CollectionAssert.AreEquivalent(new byte[0], reader.ReadAsBytes())", span="3062-3062"];
m4_1993 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_CommaErrors_Multiple()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3063-3063"];
m4_1994 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_CommaErrors_Multiple()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_CommaErrors_Multiple()", span="3051-3051"];
m4_26 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsString()", span="439-439"];
m4_157 [cluster="Unk.Parse", file="JsonSerializerTest.cs", label="Entry Unk.Parse", span=""];
m4_2739 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFromNetworkStream()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFromNetworkStream()", span="4176-4176"];
m4_2753 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFromNetworkStream()", file="JsonSerializerTest.cs", label="var jsonTextReader = new JsonTextReader(sr)", span="4215-4215"];
m4_2752 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFromNetworkStream()", file="JsonSerializerTest.cs", label="var sr = new StreamReader(stream, new UTF8Encoding(), false)", span="4214-4214"];
m4_2754 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFromNetworkStream()", file="JsonSerializerTest.cs", label="jsonTextReader.Read()", span="4217-4217"];
m4_2758 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFromNetworkStream()", file="JsonSerializerTest.cs", label="Console.WriteLine($''{i} - {jsonTextReader.TokenType} - {jsonTextReader.Value}'')", span="4226-4226"];
m4_2749 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFromNetworkStream()", file="JsonSerializerTest.cs", label="var stream = new NetworkStream(socket)", span="4210-4210"];
m4_2751 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFromNetworkStream()", file="JsonSerializerTest.cs", label="int i = 0", span="4213-4213"];
m4_2755 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFromNetworkStream()", file="JsonSerializerTest.cs", label="i++", span="4219-4219"];
m4_2759 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFromNetworkStream()", file="JsonSerializerTest.cs", label="clientReceivedEvent.Set()", span="4232-4232"];
m4_2756 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFromNetworkStream()", file="JsonSerializerTest.cs", label="i == 193", span="4221-4221"];
m4_2757 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFromNetworkStream()", file="JsonSerializerTest.cs", label="string s = string.Empty", span="4223-4223"];
m4_2750 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFromNetworkStream()", file="JsonSerializerTest.cs", label="var serializer = new JsonSerializer()", span="4211-4211"];
m4_2748 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFromNetworkStream()", file="JsonSerializerTest.cs", label="socket.Connect(''127.0.0.1'', port)", span="4208-4208"];
m4_2746 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFromNetworkStream()", file="JsonSerializerTest.cs", label="var socket = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp)", span="4206-4206"];
m4_2743 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFromNetworkStream()", file="JsonSerializerTest.cs", label="var clientReceivedEvent = new ManualResetEvent(false)", span="4182-4182"];
m4_2760 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFromNetworkStream()", file="JsonSerializerTest.cs", label="Console.WriteLine(''Done'')", span="4234-4234"];
m4_2740 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFromNetworkStream()", file="JsonSerializerTest.cs", label="int port = 11999", span="4178-4178"];
m4_2747 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFromNetworkStream()", file="JsonSerializerTest.cs", label="socket.Blocking = false", span="4207-4207"];
m4_2745 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFromNetworkStream()", file="JsonSerializerTest.cs", label="serverStartedEvent.WaitOne()", span="4203-4203"];
m4_2742 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFromNetworkStream()", file="JsonSerializerTest.cs", label="var serverStartedEvent = new ManualResetEvent(false)", span="4181-4181"];
m4_2744 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFromNetworkStream()", file="JsonSerializerTest.cs", label="ThreadPool.QueueUserWorkItem(work =>\r\n            {\r\n                var server = new TcpListener(IPAddress.Parse(''0.0.0.0''), port);\r\n                server.Start();\r\n\r\n                serverStartedEvent.Set();\r\n\r\n                var serverSocket = server.AcceptSocket();\r\n\r\n                var jsonString = ''[\r\n'' + String.Join('','', Enumerable.Repeat(''  \''testdata\''\r\n'', jsonArrayElementsCount).ToArray()) + '']'';\r\n                var bytes = new UTF8Encoding().GetBytes(jsonString);\r\n                serverSocket.Send(bytes);\r\n                Console.WriteLine(''server send: '' + bytes.Length);\r\n\r\n\r\n                clientReceivedEvent.WaitOne();\r\n\r\n            })", span="4184-4201"];
m4_2741 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFromNetworkStream()", file="JsonSerializerTest.cs", label="int jsonArrayElementsCount = 193", span="4179-4179"];
m4_2761 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFromNetworkStream()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFromNetworkStream()", span="4176-4176"];
m4_695 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", span="1118-1118"];
m4_699 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(long), reader.ValueType)", span="1124-1124"];
m4_697 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(i.ToString(CultureInfo.InvariantCulture)))", span="1122-1122"];
m4_698 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonSerializerTest.cs", label="reader.Read()", span="1123-1123"];
m4_700 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonSerializerTest.cs", label="int j = 1", span="1126-1126"];
m4_696 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonSerializerTest.cs", label="long i = int.MaxValue", span="1120-1120"];
m4_703 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n                {\r\n                    reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)));\r\n                    reader.ReadAsInt32();\r\n                }, ''JSON integer '' + total + '' is too large or small for an Int32. Path '', line 1, position 10.'')", span="1129-1133"];
m4_702 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonSerializerTest.cs", label="long total = j + i", span="1128-1128"];
m4_701 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonSerializerTest.cs", label="j < 1000", span="1126-1126"];
m4_704 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonSerializerTest.cs", label="j++", span="1126-1126"];
m4_705 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", span="1118-1118"];
m4_1400 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent_SecondLine()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent_SecondLine()", span="2162-2162"];
m4_1401 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent_SecondLine()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''\r\nnew Date()''))", span="2164-2165"];
m4_1402 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent_SecondLine()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsDecimal(); }, ''Unexpected character encountered while parsing value: e. Path '', line 2, position 2.'')", span="2167-2167"];
m4_1403 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent_SecondLine()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent_SecondLine()", span="2162-2162"];
m4_2639 [cluster="System.DateTime.DateTime(long, System.DateTimeKind)", file="JsonSerializerTest.cs", label="Entry System.DateTime.DateTime(long, System.DateTimeKind)", span="0-0"];
m4_2770 [cluster="System.Threading.EventWaitHandle.Set()", file="JsonSerializerTest.cs", label="Entry System.Threading.EventWaitHandle.Set()", span="0-0"];
m4_379 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", span="641-641"];
m4_385 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="650-650"];
m4_386 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Date'', reader.Value)", span="651-651"];
m4_388 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0L, reader.Value)", span="654-654"];
m4_390 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''hi'', reader.Value)", span="657-657"];
m4_392 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="660-660"];
m4_394 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''MemberConverter'', reader.Value)", span="663-663"];
m4_381 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonSerializerTest.cs", label="JsonReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="645-645"];
m4_384 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="649-649"];
m4_387 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="653-653"];
m4_389 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="656-656"];
m4_391 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="659-659"];
m4_393 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="662-662"];
m4_380 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonSerializerTest.cs", label="string json = @''{''''DefaultConverter'''':new Date(0, ''''hi''''),''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}''", span="643-643"];
m4_382 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="647-647"];
m4_383 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="648-648"];
m4_395 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", span="641-641"];
m4_1181 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", span="1843-1843"];
m4_1186 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="1851-1851"];
m4_1188 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="1854-1854"];
m4_1189 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(string), reader.ValueType)", span="1855-1855"];
m4_1190 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(20000, reader.Value.ToString().Length)", span="1856-1856"];
m4_1192 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="1859-1859"];
m4_1194 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="1862-1862"];
m4_1184 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1848-1848"];
m4_1185 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonSerializerTest.cs", label="reader.Read()", span="1850-1850"];
m4_1187 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonSerializerTest.cs", label="reader.Read()", span="1853-1853"];
m4_1191 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="1858-1858"];
m4_1193 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonSerializerTest.cs", label="Assert.IsFalse(reader.Read())", span="1861-1861"];
m4_1183 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonSerializerTest.cs", label="string json = @''['''''' + new string(' ', length) + @'''''']''", span="1846-1846"];
m4_1182 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonSerializerTest.cs", label="int length = 20000", span="1845-1845"];
m4_1195 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", span="1843-1843"];
m4_872 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", span="1397-1397"];
m4_873 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", file="JsonSerializerTest.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''{aww''))", span="1399-1399"];
m4_874 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="1400-1400"];
m4_875 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected end while parsing unquoted property name. Path '', line 1, position 4.'')", span="1402-1402"];
m4_876 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", span="1397-1397"];
m4_2037 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValue_EmptyString_Position()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValue_EmptyString_Position()", span="3124-3124"];
m4_2042 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValue_EmptyString_Position()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''[0]'', reader.Path)", span="3132-3132"];
m4_2044 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValue_EmptyString_Position()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''[1]'', reader.Path)", span="3134-3134"];
m4_2046 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValue_EmptyString_Position()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''[2]'', reader.Path)", span="3136-3136"];
m4_2048 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValue_EmptyString_Position()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''[3]'', reader.Path)", span="3138-3138"];
m4_2050 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValue_EmptyString_Position()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''[4]'', reader.Path)", span="3140-3140"];
m4_2052 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValue_EmptyString_Position()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''[5]'', reader.Path)", span="3142-3142"];
m4_2054 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValue_EmptyString_Position()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''[6]'', reader.Path)", span="3144-3144"];
m4_2056 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValue_EmptyString_Position()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="3147-3147"];
m4_2058 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValue_EmptyString_Position()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="3150-3150"];
m4_2060 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValue_EmptyString_Position()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="3153-3153"];
m4_2039 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValue_EmptyString_Position()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3128-3128"];
m4_2049 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValue_EmptyString_Position()", file="JsonSerializerTest.cs", label="reader.ReadAsString()", span="3139-3139"];
m4_2055 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValue_EmptyString_Position()", file="JsonSerializerTest.cs", label="Assert.IsNull(reader.ReadAsString())", span="3146-3146"];
m4_2057 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValue_EmptyString_Position()", file="JsonSerializerTest.cs", label="Assert.IsNull(reader.ReadAsString())", span="3149-3149"];
m4_2041 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValue_EmptyString_Position()", file="JsonSerializerTest.cs", label="reader.ReadAsInt32()", span="3131-3131"];
m4_2043 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValue_EmptyString_Position()", file="JsonSerializerTest.cs", label="reader.ReadAsDecimal()", span="3133-3133"];
m4_2045 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValue_EmptyString_Position()", file="JsonSerializerTest.cs", label="reader.ReadAsDateTime()", span="3135-3135"];
m4_2047 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValue_EmptyString_Position()", file="JsonSerializerTest.cs", label="reader.ReadAsDateTimeOffset()", span="3137-3137"];
m4_2051 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValue_EmptyString_Position()", file="JsonSerializerTest.cs", label="reader.ReadAsBytes()", span="3141-3141"];
m4_2053 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValue_EmptyString_Position()", file="JsonSerializerTest.cs", label="reader.ReadAsDouble()", span="3143-3143"];
m4_2059 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValue_EmptyString_Position()", file="JsonSerializerTest.cs", label="Assert.IsNull(reader.ReadAsBytes())", span="3152-3152"];
m4_2038 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValue_EmptyString_Position()", file="JsonSerializerTest.cs", label="string json = @''['','','','','','','']''", span="3126-3126"];
m4_2040 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValue_EmptyString_Position()", file="JsonSerializerTest.cs", label="reader.Read()", span="3130-3130"];
m4_2061 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValue_EmptyString_Position()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValue_EmptyString_Position()", span="3124-3124"];
m4_1855 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_AllowThousands()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_AllowThousands()", span="2856-2856"];
m4_1857 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_AllowThousands()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1112.34d, reader.ReadAsDouble())", span="2859-2859"];
m4_1856 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_AllowThousands()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader('''1,112.34'''))", span="2858-2858"];
m4_1858 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_AllowThousands()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_AllowThousands()", span="2856-2856"];
m4_632 [cluster="System.IO.StringWriter.ToString()", file="JsonSerializerTest.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m4_2329 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Null_AdditionalBadData()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Null_AdditionalBadData()", span="3609-3609"];
m4_2331 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Null_AdditionalBadData()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3613-3613"];
m4_2330 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Null_AdditionalBadData()", file="JsonSerializerTest.cs", label="string json = @''nullllll''", span="3611-3611"];
m4_2332 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Null_AdditionalBadData()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsString(); }, ''Error parsing null value. Path '', line 1, position 4.'')", span="3615-3615"];
m4_2333 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Null_AdditionalBadData()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Null_AdditionalBadData()", span="3609-3609"];
m4_2699 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedPathInExceptionMessage()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedPathInExceptionMessage()", span="4098-4098"];
m4_2700 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedPathInExceptionMessage()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''frameworks'''': {\r\n    ''''dnxcore50'''': {\r\n      ''''dependencies'''': {\r\n        ''''System.Xml.ReaderWriter'''': {\r\n          ''''source'''': !!! !!!\r\n        }\r\n      }\r\n    }\r\n  }\r\n}''", span="4100-4110"];
m4_2701 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedPathInExceptionMessage()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                () =>\r\n                {\r\n                    JsonTextReader reader = new JsonTextReader(new StringReader(json));\r\n                    while (reader.Read())\r\n                    {\r\n                    }\r\n                },\r\n                ''Unexpected character encountered while parsing value: !. Path 'frameworks.dnxcore50.dependencies['System.Xml.ReaderWriter'].source', line 6, position 20.'')", span="4112-4120"];
m4_2702 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedPathInExceptionMessage()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedPathInExceptionMessage()", span="4098-4098"];
m4_372 [cluster="Newtonsoft.Json.JsonTextReader.Close()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.Close()", span="2349-2349"];
m4_83 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", span="172-172"];
m4_87 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.StartObject, jsonTextReader.TokenType)", span="184-184"];
m4_89 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, jsonTextReader.TokenType)", span="187-187"];
m4_91 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.StartArray, jsonTextReader.TokenType)", span="190-190"];
m4_93 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.String, jsonTextReader.TokenType)", span="193-193"];
m4_94 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''src'', jsonTextReader.Value)", span="194-194"];
m4_96 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Comment, jsonTextReader.TokenType)", span="197-197"];
m4_97 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@'''''''', jsonTextReader.Value)", span="198-198"];
m4_99 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.String, jsonTextReader.TokenType)", span="201-201"];
m4_100 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''test'', jsonTextReader.Value)", span="202-202"];
m4_102 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.EndArray, jsonTextReader.TokenType)", span="205-205"];
m4_104 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.EndObject, jsonTextReader.TokenType)", span="208-208"];
m4_85 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonSerializerTest.cs", label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="182-182"];
m4_86 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonSerializerTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="183-183"];
m4_88 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonSerializerTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="186-186"];
m4_90 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonSerializerTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="189-189"];
m4_92 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonSerializerTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="192-192"];
m4_95 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonSerializerTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="196-196"];
m4_98 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonSerializerTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="200-200"];
m4_101 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonSerializerTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="204-204"];
m4_103 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonSerializerTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="207-207"];
m4_84 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonSerializerTest.cs", label="string json = @''{\r\n    ''''projects'''': [\r\n        ''''src'''',\r\n        //''''\r\n        ''''test''''\r\n    ]\r\n}''", span="174-180"];
m4_105 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", span="172-172"];
m4_1846 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDouble()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDouble()", span="943-943"];
m4_1001 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", span="1631-1631"];
m4_1004 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, reader.ReadAsInt32())", span="1636-1636"];
m4_1006 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonSerializerTest.cs", label="Assert.AreEqual(-1, reader.ReadAsInt32())", span="1639-1639"];
m4_1008 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, reader.ReadAsInt32())", span="1642-1642"];
m4_1010 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, reader.ReadAsInt32())", span="1645-1645"];
m4_1012 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonSerializerTest.cs", label="Assert.AreEqual(int.MaxValue, reader.ReadAsInt32())", span="1648-1648"];
m4_1014 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonSerializerTest.cs", label="Assert.AreEqual(int.MinValue, reader.ReadAsInt32())", span="1651-1651"];
m4_1024 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, reader.ReadAsInt32())", span="1666-1666"];
m4_1003 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonSerializerTest.cs", label="reader = new JsonTextReader(new StringReader(''1''))", span="1635-1635"];
m4_1005 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonSerializerTest.cs", label="reader = new JsonTextReader(new StringReader(''-1''))", span="1638-1638"];
m4_1007 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonSerializerTest.cs", label="reader = new JsonTextReader(new StringReader(''0''))", span="1641-1641"];
m4_1009 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonSerializerTest.cs", label="reader = new JsonTextReader(new StringReader(''-0''))", span="1644-1644"];
m4_1011 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonSerializerTest.cs", label="reader = new JsonTextReader(new StringReader(int.MaxValue.ToString()))", span="1647-1647"];
m4_1013 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonSerializerTest.cs", label="reader = new JsonTextReader(new StringReader(int.MinValue.ToString()))", span="1650-1650"];
m4_1015 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonSerializerTest.cs", label="reader = new JsonTextReader(new StringReader(long.MaxValue.ToString()))", span="1653-1653"];
m4_1017 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonSerializerTest.cs", label="reader = new JsonTextReader(new StringReader(''9999999999999999999999999999999999999999999999999999999999999999999999999999asdasdasd''))", span="1656-1656"];
m4_1019 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonSerializerTest.cs", label="reader = new JsonTextReader(new StringReader(''1E-06''))", span="1659-1659"];
m4_1021 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonSerializerTest.cs", label="reader = new JsonTextReader(new StringReader(''1.1''))", span="1662-1662"];
m4_1023 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonSerializerTest.cs", label="reader = new JsonTextReader(new StringReader(''''))", span="1665-1665"];
m4_1025 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonSerializerTest.cs", label="reader = new JsonTextReader(new StringReader(''-''))", span="1668-1668"];
m4_1002 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonSerializerTest.cs", label="JsonTextReader reader = null", span="1633-1633"];
m4_1016 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => reader.ReadAsInt32(), ''JSON integer 9223372036854775807 is too large or small for an Int32. Path '', line 1, position 19.'')", span="1654-1654"];
m4_1018 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => reader.ReadAsInt32(), ''Unexpected character encountered while parsing number: s. Path '', line 1, position 77.'')", span="1657-1657"];
m4_1020 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => reader.ReadAsInt32(), ''Input string '1E-06' is not a valid integer. Path '', line 1, position 5.'')", span="1660-1660"];
m4_1022 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => reader.ReadAsInt32(), ''Input string '1.1' is not a valid integer. Path '', line 1, position 3.'')", span="1663-1663"];
m4_1026 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => reader.ReadAsInt32(), ''Input string '-' is not a valid integer. Path '', line 1, position 1.'')", span="1669-1669"];
m4_1027 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", span="1631-1631"];
m4_2446 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", span="3764-3764"];
m4_2447 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="JsonSerializerTest.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''{}}''))", span="3766-3766"];
m4_2448 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3767-3767"];
m4_2449 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3768-3768"];
m4_2450 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Additional text encountered after finished reading JSON content: }. Path '', line 1, position 2.'')", span="3770-3770"];
m4_2451 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", span="3764-3764"];
m4_321 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", span="524-524"];
m4_327 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="534-534"];
m4_329 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, s.Length)", span="537-537"];
m4_331 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, stringInfo.LengthInTextElements)", span="540-540"];
m4_323 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="528-528"];
m4_326 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="533-533"];
m4_328 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonSerializerTest.cs", label="string s = reader.Value.ToString()", span="536-536"];
m4_330 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonSerializerTest.cs", label="StringInfo stringInfo = new StringInfo(s)", span="539-539"];
m4_322 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonSerializerTest.cs", label="string json = @''{ ''''MATHEMATICAL ITALIC CAPITAL ALPHA'''': ''''\uD835\uDEE2'''' }''", span="526-526"];
m4_324 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="530-530"];
m4_325 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="531-531"];
m4_332 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", span="524-524"];
m4_1314 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", span="2038-2038"];
m4_1318 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.StartArray, jsonReader.TokenType)", span="2044-2044"];
m4_1320 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="2047-2047"];
m4_1321 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(long), jsonReader.ValueType)", span="2048-2048"];
m4_1322 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonSerializerTest.cs", label="Assert.AreEqual((long)250, (long)jsonReader.Value)", span="2049-2049"];
m4_1324 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="2052-2052"];
m4_1325 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(long), jsonReader.ValueType)", span="2053-2053"];
m4_1326 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonSerializerTest.cs", label="Assert.AreEqual((long)250, (long)jsonReader.Value)", span="2054-2054"];
m4_1328 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="2057-2057"];
m4_1329 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(long), jsonReader.ValueType)", span="2058-2058"];
m4_1330 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonSerializerTest.cs", label="Assert.AreEqual((long)250, (long)jsonReader.Value)", span="2059-2059"];
m4_1332 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.EndArray, jsonReader.TokenType)", span="2062-2062"];
m4_1316 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonSerializerTest.cs", label="JsonTextReader jsonReader = new JsonTextReader(s)", span="2041-2041"];
m4_1315 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonSerializerTest.cs", label="StringReader s = new StringReader(@''[0372, 0xFA, 0XFA]'')", span="2040-2040"];
m4_1317 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonSerializerTest.cs", label="Assert.IsTrue(jsonReader.Read())", span="2043-2043"];
m4_1319 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonSerializerTest.cs", label="jsonReader.Read()", span="2046-2046"];
m4_1323 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonSerializerTest.cs", label="jsonReader.Read()", span="2051-2051"];
m4_1327 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonSerializerTest.cs", label="jsonReader.Read()", span="2056-2056"];
m4_1331 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonSerializerTest.cs", label="Assert.IsTrue(jsonReader.Read())", span="2061-2061"];
m4_1333 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonSerializerTest.cs", label="Assert.IsFalse(jsonReader.Read())", span="2064-2064"];
m4_1334 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", span="2038-2038"];
m4_1969 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_InvalidEndArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_InvalidEndArray()", span="3024-3024"];
m4_1970 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_InvalidEndArray()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader('']''))", span="3026-3026"];
m4_1971 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_InvalidEndArray()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                reader.ReadAsBytes();\r\n            }, ''Unexpected character encountered while parsing value: ]. Path '', line 1, position 1.'')", span="3028-3031"];
m4_1972 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_InvalidEndArray()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_InvalidEndArray()", span="3024-3024"];
m4_116 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsBytes()", span="448-448"];
m4_1364 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", span="2108-2108"];
m4_1367 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="2113-2113"];
m4_1365 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''''))", span="2110-2110"];
m4_1366 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="JsonSerializerTest.cs", label="Assert.IsNull(reader.ReadAsDecimal())", span="2112-2112"];
m4_1368 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", span="2108-2108"];
m4_756 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", span="1201-1201"];
m4_764 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1229-1229"];
m4_765 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''type'', reader.Value)", span="1230-1230"];
m4_758 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1218-1218"];
m4_763 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="1228-1228"];
m4_757 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonSerializerTest.cs", label="string json = @''\r\n{\r\n  ''''description'''': ''''A person'''',\r\n  ''''type'''': ''''object'''',\r\n  ''''properties'''':\r\n  {\r\n    ''''name'''': {''''type'''':''''string''''},\r\n    ''''hobbies'''': {\r\n      ''''type'''': ''''array'''',\r\n      ''''items'''': {''''type'''':''''string''''}\r\n    }\r\n  }\r\n}\r\n''", span="1203-1216"];
m4_759 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonSerializerTest.cs", label="int i = 0", span="1223-1223"];
m4_761 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="1225-1225"];
m4_760 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonSerializerTest.cs", label="i < 14", span="1223-1223"];
m4_762 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonSerializerTest.cs", label="i++", span="1223-1223"];
m4_766 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", span="1201-1201"];
m4_1210 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", span="1889-1889"];
m4_1214 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.StartArray, jsonReader.TokenType)", span="1897-1897"];
m4_1216 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1900-1900"];
m4_1217 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0.0, jsonReader.Value)", span="1901-1901"];
m4_1219 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1904-1904"];
m4_1220 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0.0, jsonReader.Value)", span="1905-1905"];
m4_1222 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1908-1908"];
m4_1223 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0.1, jsonReader.Value)", span="1909-1909"];
m4_1225 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1912-1912"];
m4_1226 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1.0, jsonReader.Value)", span="1913-1913"];
m4_1228 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1916-1916"];
m4_1229 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1.000001, jsonReader.Value)", span="1917-1917"];
m4_1231 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1920-1920"];
m4_1232 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1E-06, jsonReader.Value)", span="1921-1921"];
m4_1234 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1924-1924"];
m4_1235 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4.94065645841247E-324, jsonReader.Value)", span="1925-1925"];
m4_1237 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1928-1928"];
m4_1238 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerTest.cs", label="Assert.AreEqual(double.PositiveInfinity, jsonReader.Value)", span="1929-1929"];
m4_1240 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1932-1932"];
m4_1241 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerTest.cs", label="Assert.AreEqual(double.NegativeInfinity, jsonReader.Value)", span="1933-1933"];
m4_1243 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1936-1936"];
m4_1244 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerTest.cs", label="Assert.AreEqual(double.NaN, jsonReader.Value)", span="1937-1937"];
m4_1246 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1940-1940"];
m4_1247 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerTest.cs", label="Assert.AreEqual(double.MaxValue, jsonReader.Value)", span="1941-1941"];
m4_1249 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1944-1944"];
m4_1250 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerTest.cs", label="Assert.AreEqual(double.MinValue, jsonReader.Value)", span="1945-1945"];
m4_1252 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1948-1948"];
m4_1253 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerTest.cs", label="Assert.AreEqual(double.PositiveInfinity, jsonReader.Value)", span="1949-1949"];
m4_1255 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1952-1952"];
m4_1256 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerTest.cs", label="Assert.AreEqual(double.NegativeInfinity, jsonReader.Value)", span="1953-1953"];
m4_1258 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1956-1956"];
m4_1259 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerTest.cs", label="Assert.AreEqual(double.NaN, jsonReader.Value)", span="1957-1957"];
m4_1261 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1960-1960"];
m4_1262 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0d, jsonReader.Value)", span="1961-1961"];
m4_1264 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1964-1964"];
m4_1265 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0.0000025d, jsonReader.Value)", span="1965-1965"];
m4_1267 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1968-1968"];
m4_1268 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3000000000d, jsonReader.Value)", span="1969-1969"];
m4_1270 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.EndArray, jsonReader.TokenType)", span="1972-1972"];
m4_1212 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerTest.cs", label="JsonReader jsonReader = new JsonTextReader(new StringReader(json))", span="1894-1894"];
m4_1213 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerTest.cs", label="jsonReader.Read()", span="1896-1896"];
m4_1215 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerTest.cs", label="jsonReader.Read()", span="1899-1899"];
m4_1218 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerTest.cs", label="jsonReader.Read()", span="1903-1903"];
m4_1221 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerTest.cs", label="jsonReader.Read()", span="1907-1907"];
m4_1224 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerTest.cs", label="jsonReader.Read()", span="1911-1911"];
m4_1227 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerTest.cs", label="jsonReader.Read()", span="1915-1915"];
m4_1230 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerTest.cs", label="jsonReader.Read()", span="1919-1919"];
m4_1233 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerTest.cs", label="jsonReader.Read()", span="1923-1923"];
m4_1236 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerTest.cs", label="jsonReader.Read()", span="1927-1927"];
m4_1239 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerTest.cs", label="jsonReader.Read()", span="1931-1931"];
m4_1242 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerTest.cs", label="jsonReader.Read()", span="1935-1935"];
m4_1245 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerTest.cs", label="jsonReader.Read()", span="1939-1939"];
m4_1248 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerTest.cs", label="jsonReader.Read()", span="1943-1943"];
m4_1251 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerTest.cs", label="jsonReader.Read()", span="1947-1947"];
m4_1254 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerTest.cs", label="jsonReader.Read()", span="1951-1951"];
m4_1257 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerTest.cs", label="jsonReader.Read()", span="1955-1955"];
m4_1260 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerTest.cs", label="jsonReader.Read()", span="1959-1959"];
m4_1263 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerTest.cs", label="jsonReader.Read()", span="1963-1963"];
m4_1266 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerTest.cs", label="jsonReader.Read()", span="1967-1967"];
m4_1269 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerTest.cs", label="jsonReader.Read()", span="1971-1971"];
m4_1211 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerTest.cs", label="string json =\r\n                @''[0.0,0.0,0.1,1.0,1.000001,1E-06,4.94065645841247E-324,Infinity,-Infinity,NaN,1.7976931348623157E+308,-1.7976931348623157E+308,Infinity,-Infinity,NaN,0e-10,0.25e-5,0.3e10]''", span="1891-1892"];
m4_1271 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", span="1889-1889"];
m4_1575 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", span="2416-2416"];
m4_1580 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2424-2424"];
m4_1582 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2427-2427"];
m4_1584 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2430-2430"];
m4_1585 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2431-2431"];
m4_1589 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2437-2437"];
m4_1587 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTime(2011, 1, 30, 0, 0, 0, DateTimeKind.Unspecified), dt.DateTime)", span="2434-2434"];
m4_1577 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2420-2420"];
m4_1579 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2423-2423"];
m4_1581 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2426-2426"];
m4_1583 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonSerializerTest.cs", label="reader.ReadAsDateTimeOffset()", span="2429-2429"];
m4_1586 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonSerializerTest.cs", label="DateTimeOffset dt = (DateTimeOffset)reader.Value", span="2433-2433"];
m4_1588 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2436-2436"];
m4_1576 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonSerializerTest.cs", label="string json = @''{''''Offset'''':''''30/1/2011''''}''", span="2418-2418"];
m4_1578 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonSerializerTest.cs", label="reader.Culture = new CultureInfo(''en-NZ'')", span="2421-2421"];
m4_1590 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", span="2416-2416"];
m4_2785 [cluster="System.Net.Sockets.TcpListener.AcceptSocket()", file="JsonSerializerTest.cs", label="Entry System.Net.Sockets.TcpListener.AcceptSocket()", span="0-0"];
m4_27 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", span="95-95"];
m4_31 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.StartObject, jsonTextReader.TokenType)", span="102-102"];
m4_32 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, jsonTextReader.LineNumber)", span="103-103"];
m4_33 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, jsonTextReader.LinePosition)", span="104-104"];
m4_35 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.EndObject, jsonTextReader.TokenType)", span="108-108"];
m4_36 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, jsonTextReader.LineNumber)", span="109-109"];
m4_37 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, jsonTextReader.LinePosition)", span="110-110"];
m4_41 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.StartObject, jsonTextReader.TokenType)", span="117-117"];
m4_42 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, jsonTextReader.LineNumber)", span="118-118"];
m4_43 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, jsonTextReader.LinePosition)", span="119-119"];
m4_45 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, jsonTextReader.TokenType)", span="122-122"];
m4_46 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, jsonTextReader.LineNumber)", span="123-123"];
m4_47 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonSerializerTest.cs", label="Assert.AreEqual(5, jsonTextReader.LinePosition)", span="124-124"];
m4_49 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.String, jsonTextReader.TokenType)", span="127-127"];
m4_50 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, jsonTextReader.LineNumber)", span="128-128"];
m4_51 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonSerializerTest.cs", label="Assert.AreEqual(9, jsonTextReader.LinePosition)", span="129-129"];
m4_53 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.EndObject, jsonTextReader.TokenType)", span="132-132"];
m4_54 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, jsonTextReader.LineNumber)", span="133-133"];
m4_55 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonSerializerTest.cs", label="Assert.AreEqual(10, jsonTextReader.LinePosition)", span="134-134"];
m4_59 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.StartObject, jsonTextReader.TokenType)", span="141-141"];
m4_60 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, jsonTextReader.LineNumber)", span="142-142"];
m4_61 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, jsonTextReader.LinePosition)", span="143-143"];
m4_63 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, jsonTextReader.TokenType)", span="146-146"];
m4_64 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, jsonTextReader.LineNumber)", span="147-147"];
m4_65 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonSerializerTest.cs", label="Assert.AreEqual(5, jsonTextReader.LinePosition)", span="148-148"];
m4_67 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.String, jsonTextReader.TokenType)", span="151-151"];
m4_68 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, jsonTextReader.LineNumber)", span="152-152"];
m4_69 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4, jsonTextReader.LinePosition)", span="153-153"];
m4_71 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, jsonTextReader.TokenType)", span="156-156"];
m4_72 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, jsonTextReader.LineNumber)", span="157-157"];
m4_73 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonSerializerTest.cs", label="Assert.AreEqual(9, jsonTextReader.LinePosition)", span="158-158"];
m4_75 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Boolean, jsonTextReader.TokenType)", span="161-161"];
m4_76 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, jsonTextReader.LineNumber)", span="162-162"];
m4_77 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonSerializerTest.cs", label="Assert.AreEqual(13, jsonTextReader.LinePosition)", span="163-163"];
m4_79 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.EndObject, jsonTextReader.TokenType)", span="166-166"];
m4_80 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4, jsonTextReader.LineNumber)", span="167-167"];
m4_81 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, jsonTextReader.LinePosition)", span="168-168"];
m4_29 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonSerializerTest.cs", label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="99-99"];
m4_39 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonSerializerTest.cs", label="jsonTextReader = new JsonTextReader(new StringReader(json))", span="114-114"];
m4_57 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonSerializerTest.cs", label="jsonTextReader = new JsonTextReader(new StringReader(json))", span="138-138"];
m4_30 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonSerializerTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="101-101"];
m4_34 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonSerializerTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="106-106"];
m4_38 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonSerializerTest.cs", label="json = ''\n{\''a\'':\''bc\''}''", span="112-112"];
m4_40 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonSerializerTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="116-116"];
m4_44 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonSerializerTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="121-121"];
m4_48 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonSerializerTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="126-126"];
m4_52 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonSerializerTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="131-131"];
m4_56 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonSerializerTest.cs", label="json = ''\n{\''a\'':\n\''bc\'',\''d\'':true\n}''", span="136-136"];
m4_58 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonSerializerTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="140-140"];
m4_62 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonSerializerTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="145-145"];
m4_66 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonSerializerTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="150-150"];
m4_70 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonSerializerTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="155-155"];
m4_74 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonSerializerTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="160-160"];
m4_78 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonSerializerTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="165-165"];
m4_28 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonSerializerTest.cs", label="string json = ''{}''", span="97-97"];
m4_82 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", span="95-95"];
m4_2842 [cluster="System.Exception.Exception(string)", file="JsonSerializerTest.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m4_177 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", span="320-320"];
m4_181 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.StartArray, jsonTextReader.TokenType)", span="332-332"];
m4_187 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.EndArray, jsonTextReader.TokenType)", span="343-343"];
m4_179 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JsonSerializerTest.cs", label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="329-329"];
m4_180 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JsonSerializerTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="331-331"];
m4_182 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => jsonTextReader.ReadAsInt32(), ''JSON integer 333333333333333333333333333333333333333 is too large or small for an Int32. Path '[0]', line 2, position 41.'')", span="334-334"];
m4_186 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JsonSerializerTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="342-342"];
m4_188 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JsonSerializerTest.cs", label="Assert.IsFalse(jsonTextReader.Read())", span="345-345"];
m4_178 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JsonSerializerTest.cs", label="string json = @''[\r\n  333333333333333333333333333333333333333,\r\n  3.3,\r\n  ,\r\n  0f\r\n]''", span="322-327"];
m4_183 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => jsonTextReader.ReadAsInt32(), ''Input string '3.3' is not a valid integer. Path '[1]', line 3, position 5.'')", span="336-336"];
m4_184 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => jsonTextReader.ReadAsInt32(), ''Unexpected character encountered while parsing value: ,. Path '[2]', line 4, position 3.'')", span="338-338"];
m4_185 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => jsonTextReader.ReadAsInt32(), ''Input string '0f' is not a valid integer. Path '[3]', line 5, position 4.'')", span="340-340"];
m4_189 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", span="320-320"];
m4_1780 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", span="2747-2747"];
m4_1782 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2750-2750"];
m4_1781 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JsonSerializerTest.cs", label="string json = ''[true ''", span="2749-2749"];
m4_1783 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2752-2752"];
m4_1784 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2753-2753"];
m4_1785 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JsonSerializerTest.cs", label="Assert.IsFalse(reader.Read())", span="2754-2754"];
m4_1786 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", span="2747-2747"];
m4_2802 [cluster="System.IDisposable.Dispose()", file="JsonSerializerTest.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m4_825 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", span="1344-1344"];
m4_826 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", file="JsonSerializerTest.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@'''h\u123''))", span="1346-1346"];
m4_827 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected end while parsing unicode character. Path '', line 1, position 4.'')", span="1348-1348"];
m4_828 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", span="1344-1344"];
m4_290 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", span="478-478"];
m4_295 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="486-486"];
m4_292 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="482-482"];
m4_294 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="485-485"];
m4_296 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => reader.Read(), ''Cannot read NaN as a decimal.'')", span="488-488"];
m4_291 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="JsonSerializerTest.cs", label="string json = ''[NaN]''", span="480-480"];
m4_293 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="JsonSerializerTest.cs", label="reader.FloatParseHandling = Json.FloatParseHandling.Decimal", span="483-483"];
m4_297 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", span="478-478"];
m4_854 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsInt32()", span="416-416"];
m4_633 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", span="1014-1014"];
m4_637 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1020-1020"];
m4_639 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1023-1023"];
m4_641 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="1026-1026"];
m4_643 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="1029-1029"];
m4_645 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="1032-1032"];
m4_647 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="1035-1035"];
m4_649 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="1038-1038"];
m4_651 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1041-1041"];
m4_653 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="1044-1044"];
m4_655 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1047-1047"];
m4_657 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="1050-1050"];
m4_658 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''\0sd\0f\0'', reader.Value)", span="1051-1051"];
m4_660 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="1054-1054"];
m4_661 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''\0sd\0f\0'', reader.Value)", span="1055-1055"];
m4_635 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="1017-1017"];
m4_636 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="1019-1019"];
m4_638 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="1022-1022"];
m4_640 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="1025-1025"];
m4_642 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="1028-1028"];
m4_644 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="1031-1031"];
m4_646 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="1034-1034"];
m4_648 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="1037-1037"];
m4_650 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="1040-1040"];
m4_652 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="1043-1043"];
m4_654 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="1046-1046"];
m4_656 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="1049-1049"];
m4_659 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="1053-1053"];
m4_662 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonSerializerTest.cs", label="Assert.IsFalse(reader.Read())", span="1057-1057"];
m4_634 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonSerializerTest.cs", label="string json = ''\0{\0'\0h\0i\0'\0:\0[\01\0,\0'\0'\0\0,\0null\0]\0,\0do\0:true\0}\0\0/*\0sd\0f\0*/\0/*\0sd\0f\0*/ \0''", span="1016-1016"];
m4_663 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", span="1014-1014"];
m4_248 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", span="421-421"];
m4_252 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="428-428"];
m4_254 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="431-431"];
m4_256 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="434-434"];
m4_258 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="437-437"];
m4_250 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="425-425"];
m4_251 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="427-427"];
m4_253 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="430-430"];
m4_255 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="433-433"];
m4_257 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="436-436"];
m4_259 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected content while parsing JSON. Path 'u', line 1, position 29.'')", span="439-439"];
m4_249 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonSerializerTest.cs", label="string json = @''{ ''''ItemName'''': ''''value'''', ''''u'''':netanelsalinger,''''r'''':9 }''", span="423-423"];
m4_260 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", span="421-421"];
m4_996 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", span="1600-1600"];
m4_998 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1624-1624"];
m4_997 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", file="JsonSerializerTest.cs", label="string json = @''[\r\n  true,\r\n  {\r\n    ''''integer'''': 99,\r\n    ''''string'''': ''''how now brown cow?'''',\r\n    ''''array'''': [\r\n      0,\r\n      1,\r\n      2,\r\n      3,\r\n      4,\r\n      {\r\n        ''''decimal'''': 990.00990099\r\n      },\r\n      5\r\n    ]\r\n  },\r\n  ''''This is a string.'''',\r\n  null,\r\n  null\r\n]''", span="1602-1622"];
m4_999 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", file="JsonSerializerTest.cs", label="reader.Read()", span="1625-1625"];
m4_1000 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", span="1600-1600"];
m4_117 [cluster="System.Convert.FromBase64String(string)", file="JsonSerializerTest.cs", label="Entry System.Convert.FromBase64String(string)", span="0-0"];
m4_1149 [cluster="System.IO.StringWriter.StringWriter(System.Text.StringBuilder)", file="JsonSerializerTest.cs", label="Entry System.IO.StringWriter.StringWriter(System.Text.StringBuilder)", span="0-0"];
m4_1803 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", span="2776-2776"];
m4_1805 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2779-2779"];
m4_1804 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JsonSerializerTest.cs", label="string json = ''{hi:1, ''", span="2778-2778"];
m4_1806 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2781-2781"];
m4_1807 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2782-2782"];
m4_1808 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2783-2783"];
m4_1809 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JsonSerializerTest.cs", label="Assert.IsFalse(reader.Read())", span="2784-2784"];
m4_1810 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", span="2776-2776"];
m4_1392 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", span="689-689"];
m4_2391 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Boolean()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Boolean()", span="3690-3690"];
m4_2393 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Boolean()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3694-3694"];
m4_2392 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Boolean()", file="JsonSerializerTest.cs", label="string json = @''true''", span="3692-3692"];
m4_2394 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Boolean()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsDouble(); }, ''Unexpected character encountered while parsing value: t. Path '', line 1, position 1.'')", span="3696-3696"];
m4_2395 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Boolean()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Boolean()", span="3690-3690"];
m4_1629 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", span="2493-2493"];
m4_1630 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''nullz''))", span="2495-2495"];
m4_1631 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Error parsing null value. Path '', line 1, position 4.'')", span="2497-2497"];
m4_1632 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", span="2493-2493"];
m4_2784 [cluster="System.Net.Sockets.TcpListener.Start()", file="JsonSerializerTest.cs", label="Entry System.Net.Sockets.TcpListener.Start()", span="0-0"];
m4_2767 [cluster="System.Net.Sockets.NetworkStream.NetworkStream(System.Net.Sockets.Socket)", file="JsonSerializerTest.cs", label="Entry System.Net.Sockets.NetworkStream.NetworkStream(System.Net.Sockets.Socket)", span="0-0"];
m4_586 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullTextReader()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.NullTextReader()", span="958-958"];
m4_587 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullTextReader()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<ArgumentNullException>(\r\n                () => { new JsonTextReader(null); },\r\n                new string[]\r\n                {\r\n                    ''Value cannot be null.'' + Environment.NewLine + ''Parameter name: reader'',\r\n                    ''Argument cannot be null.'' + Environment.NewLine + ''Parameter name: reader'' // Mono\r\n                })", span="960-966"];
m4_588 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullTextReader()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.NullTextReader()", span="958-958"];
m4_865 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", span="1387-1387"];
m4_869 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="1393-1393"];
m4_866 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="JsonSerializerTest.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''[  ''))", span="1389-1389"];
m4_868 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="JsonSerializerTest.cs", label="Assert.IsNull(reader.ReadAsBytes())", span="1392-1392"];
m4_867 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="1390-1390"];
m4_870 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", span="1387-1387"];
m4_2787 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m4_424 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Whitespace()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Whitespace()", span="718-718"];
m4_426 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Whitespace()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="728-728"];
m4_425 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Whitespace()", file="JsonSerializerTest.cs", label="string json = @''[\r\n''''Small'''',\r\n''''Medium'''',\r\n''''Large''''\r\n]   \r\n\r\n''", span="720-726"];
m4_427 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Whitespace()", file="JsonSerializerTest.cs", label="reader.Read()", span="729-729"];
m4_428 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Whitespace()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Whitespace()", span="718-718"];
m4_924 [cluster="System.IO.StringReader.ReadLine()", file="JsonSerializerTest.cs", label="Entry System.IO.StringReader.ReadLine()", span="0-0"];
m4_1045 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", span="1673-1673"];
m4_1048 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1.1m, reader.ReadAsDecimal())", span="1678-1678"];
m4_1050 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonSerializerTest.cs", label="Assert.AreEqual(-1.1m, reader.ReadAsDecimal())", span="1681-1681"];
m4_1052 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0.0m, reader.ReadAsDecimal())", span="1684-1684"];
m4_1054 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, reader.ReadAsDecimal())", span="1687-1687"];
m4_1061 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0.000001m, reader.ReadAsDecimal())", span="1697-1697"];
m4_1063 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, reader.ReadAsDecimal())", span="1700-1700"];
m4_1047 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonSerializerTest.cs", label="reader = new JsonTextReader(new StringReader(''1.1''))", span="1677-1677"];
m4_1049 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonSerializerTest.cs", label="reader = new JsonTextReader(new StringReader(''-1.1''))", span="1680-1680"];
m4_1051 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonSerializerTest.cs", label="reader = new JsonTextReader(new StringReader(''0.0''))", span="1683-1683"];
m4_1053 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonSerializerTest.cs", label="reader = new JsonTextReader(new StringReader(''-0.0''))", span="1686-1686"];
m4_1055 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonSerializerTest.cs", label="reader = new JsonTextReader(new StringReader(''9999999999999999999999999999999999999999999999999999999999999999999999999999asdasdasd''))", span="1689-1689"];
m4_1057 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonSerializerTest.cs", label="reader = new JsonTextReader(new StringReader(''9999999999999999999999999999999999999999999999999999999999999999999999999999asdasdasd''))", span="1692-1692"];
m4_1060 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonSerializerTest.cs", label="reader = new JsonTextReader(new StringReader(''1E-06''))", span="1696-1696"];
m4_1062 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonSerializerTest.cs", label="reader = new JsonTextReader(new StringReader(''''))", span="1699-1699"];
m4_1064 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonSerializerTest.cs", label="reader = new JsonTextReader(new StringReader(''-''))", span="1702-1702"];
m4_1046 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonSerializerTest.cs", label="JsonTextReader reader = null", span="1675-1675"];
m4_1056 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => reader.ReadAsDecimal(), ''Unexpected character encountered while parsing number: s. Path '', line 1, position 77.'')", span="1690-1690"];
m4_1058 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonSerializerTest.cs", label="reader.FloatParseHandling = Json.FloatParseHandling.Decimal", span="1693-1693"];
m4_1059 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => reader.Read(), ''Unexpected character encountered while parsing number: s. Path '', line 1, position 77.'')", span="1694-1694"];
m4_1065 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => reader.ReadAsDecimal(), ''Input string '-' is not a valid decimal. Path '', line 1, position 1.'')", span="1703-1703"];
m4_1066 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", span="1673-1673"];
m4_437 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", span="750-750"];
m4_441 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSerializerTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.None)", span="768-768"];
m4_442 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, jsonReader.LineNumber)", span="769-769"];
m4_443 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, jsonReader.LinePosition)", span="770-770"];
m4_445 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSerializerTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.StartObject)", span="773-773"];
m4_446 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, jsonReader.LineNumber)", span="774-774"];
m4_447 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, jsonReader.LinePosition)", span="775-775"];
m4_449 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSerializerTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.PropertyName)", span="778-778"];
m4_450 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSerializerTest.cs", label="Assert.AreEqual(jsonReader.Value, ''CPU'')", span="779-779"];
m4_451 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, jsonReader.LineNumber)", span="780-780"];
m4_452 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSerializerTest.cs", label="Assert.AreEqual(6, jsonReader.LinePosition)", span="781-781"];
m4_454 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.String, jsonReader.TokenType)", span="784-784"];
m4_455 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Intel'', jsonReader.Value)", span="785-785"];
m4_456 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, jsonReader.LineNumber)", span="786-786"];
m4_457 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSerializerTest.cs", label="Assert.AreEqual(14, jsonReader.LinePosition)", span="787-787"];
m4_459 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSerializerTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.PropertyName)", span="790-790"];
m4_460 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSerializerTest.cs", label="Assert.AreEqual(jsonReader.Value, ''Drives'')", span="791-791"];
m4_461 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, jsonReader.LineNumber)", span="792-792"];
m4_462 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSerializerTest.cs", label="Assert.AreEqual(9, jsonReader.LinePosition)", span="793-793"];
m4_464 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSerializerTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.StartArray)", span="796-796"];
m4_465 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, jsonReader.LineNumber)", span="797-797"];
m4_466 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSerializerTest.cs", label="Assert.AreEqual(11, jsonReader.LinePosition)", span="798-798"];
m4_468 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSerializerTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.String)", span="801-801"];
m4_469 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSerializerTest.cs", label="Assert.AreEqual(jsonReader.Value, ''DVD read/writer'')", span="802-802"];
m4_470 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSerializerTest.cs", label="Assert.AreEqual(jsonReader.QuoteChar, '\'')", span="803-803"];
m4_471 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4, jsonReader.LineNumber)", span="804-804"];
m4_472 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSerializerTest.cs", label="Assert.AreEqual(21, jsonReader.LinePosition)", span="805-805"];
m4_474 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSerializerTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.String)", span="808-808"];
m4_475 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSerializerTest.cs", label="Assert.AreEqual(jsonReader.Value, ''500 gigabyte hard drive'')", span="809-809"];
m4_476 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSerializerTest.cs", label="Assert.AreEqual(jsonReader.QuoteChar, '''')", span="810-810"];
m4_477 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSerializerTest.cs", label="Assert.AreEqual(5, jsonReader.LineNumber)", span="811-811"];
m4_478 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSerializerTest.cs", label="Assert.AreEqual(29, jsonReader.LinePosition)", span="812-812"];
m4_480 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSerializerTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.EndArray)", span="815-815"];
m4_481 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSerializerTest.cs", label="Assert.AreEqual(6, jsonReader.LineNumber)", span="816-816"];
m4_482 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, jsonReader.LinePosition)", span="817-817"];
m4_484 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSerializerTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.EndObject)", span="820-820"];
m4_485 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSerializerTest.cs", label="Assert.AreEqual(7, jsonReader.LineNumber)", span="821-821"];
m4_486 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, jsonReader.LinePosition)", span="822-822"];
m4_440 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSerializerTest.cs", label="JsonTextReader jsonReader = new JsonTextReader(sr)", span="762-762"];
m4_439 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSerializerTest.cs", label="StringReader sr = new StringReader(input)", span="760-760"];
m4_444 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSerializerTest.cs", label="jsonReader.Read()", span="772-772"];
m4_448 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSerializerTest.cs", label="jsonReader.Read()", span="777-777"];
m4_453 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSerializerTest.cs", label="jsonReader.Read()", span="783-783"];
m4_458 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSerializerTest.cs", label="jsonReader.Read()", span="789-789"];
m4_463 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSerializerTest.cs", label="jsonReader.Read()", span="795-795"];
m4_467 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSerializerTest.cs", label="jsonReader.Read()", span="800-800"];
m4_473 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSerializerTest.cs", label="jsonReader.Read()", span="807-807"];
m4_479 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSerializerTest.cs", label="jsonReader.Read()", span="814-814"];
m4_483 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSerializerTest.cs", label="jsonReader.Read()", span="819-819"];
m4_487 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSerializerTest.cs", label="Assert.IsFalse(jsonReader.Read())", span="824-824"];
m4_438 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSerializerTest.cs", label="string input = @''{\r\n  CPU: 'Intel',\r\n  Drives: [\r\n    'DVD read/writer',\r\n    ''''500 gigabyte hard drive''''\r\n  ]\r\n}''", span="752-758"];
m4_488 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", span="750-750"];
m4_398 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", span="667-667"];
m4_400 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="675-675"];
m4_399 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", file="JsonSerializerTest.cs", label="string json = @''[\r\n''''Small'''',\r\n''''Medium'''',\r\n''''Large''''\r\n],''", span="669-673"];
m4_401 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                while (reader.Read())\r\n                {\r\n                }\r\n            }, ''Additional text encountered after finished reading JSON content: ,. Path '', line 5, position 1.'')", span="677-682"];
m4_402 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", span="667-667"];
m4_1643 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", span="2509-2509"];
m4_1644 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''/sdf''))", span="2511-2511"];
m4_1645 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Error parsing comment. Expected: *, got s. Path '', line 1, position 1.'')", span="2513-2513"];
m4_1646 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", span="2509-2509"];
m4_1664 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", span="2539-2539"];
m4_1669 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2547-2547"];
m4_1671 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2550-2550"];
m4_1673 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2553-2553"];
m4_1674 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="2554-2554"];
m4_1677 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2558-2558"];
m4_1675 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonSerializerTest.cs", label="Assert.AreEqual(9.99m, d)", span="2555-2555"];
m4_1666 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2543-2543"];
m4_1668 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2546-2546"];
m4_1670 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2549-2549"];
m4_1672 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonSerializerTest.cs", label="decimal? d = reader.ReadAsDecimal()", span="2552-2552"];
m4_1676 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2557-2557"];
m4_1665 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonSerializerTest.cs", label="string json = @''{''''decimal'''':''''9,99''''}''", span="2541-2541"];
m4_1667 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonSerializerTest.cs", label="reader.Culture = new CultureInfo(''fr-FR'')", span="2544-2544"];
m4_1678 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", span="2539-2539"];
m4_1679 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", span="2562-2562"];
m4_1687 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTime(631136448000000000), reader.Value)", span="2588-2588"];
m4_1681 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2577-2577"];
m4_1686 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2587-2587"];
m4_1680 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonSerializerTest.cs", label="string json = @''[\r\n  {\r\n    ''''Name'''': ''''Jim'''',\r\n    ''''BirthDate'''': ''''\/Date(978048000000)\/'''',\r\n    ''''LastModified'''': ''''\/Date(978048000000)\/''''\r\n  },\r\n  {\r\n    ''''Name'''': ''''Jim'''',\r\n    ''''BirthDate'''': ''''\/Date(978048000000)\/'''',\r\n    ''''LastModified'''': ''''\/Date(978048000000)\/''''\r\n  }\r\n]''", span="2564-2575"];
m4_1682 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonSerializerTest.cs", label="int i = 0", span="2582-2582"];
m4_1684 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonSerializerTest.cs", label="reader.Read()", span="2584-2584"];
m4_1683 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonSerializerTest.cs", label="i < 13", span="2582-2582"];
m4_1685 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonSerializerTest.cs", label="i++", span="2582-2582"];
m4_1688 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", span="2562-2562"];
m4_2510 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", span="3854-3854"];
m4_2514 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, reader.Depth)", span="3864-3864"];
m4_2516 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, reader.Depth)", span="3867-3867"];
m4_2518 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, reader.Depth)", span="3870-3870"];
m4_2520 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, reader.Depth)", span="3873-3873"];
m4_2522 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, reader.Depth)", span="3876-3876"];
m4_2524 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, reader.Depth)", span="3879-3879"];
m4_2526 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, reader.Depth)", span="3882-3882"];
m4_2528 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, reader.Depth)", span="3885-3885"];
m4_2530 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, reader.Depth)", span="3888-3888"];
m4_2532 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, reader.Depth)", span="3891-3891"];
m4_2534 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, reader.Depth)", span="3894-3894"];
m4_2536 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, reader.Depth)", span="3897-3897"];
m4_2512 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))\r\n            {\r\n                MaxDepth = 1\r\n            }", span="3858-3861"];
m4_2513 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3863-3863"];
m4_2515 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { Assert.IsTrue(reader.Read()); }, ''The reader's MaxDepth of 1 has been exceeded. Path '[0]', line 1, position 2.'')", span="3866-3866"];
m4_2517 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3869-3869"];
m4_2519 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3872-3872"];
m4_2521 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3875-3875"];
m4_2523 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3878-3878"];
m4_2525 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3881-3881"];
m4_2527 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { Assert.IsTrue(reader.Read()); }, ''The reader's MaxDepth of 1 has been exceeded. Path '[1]', line 1, position 9.'')", span="3884-3884"];
m4_2529 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3887-3887"];
m4_2531 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3890-3890"];
m4_2533 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3893-3893"];
m4_2535 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3896-3896"];
m4_2537 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonSerializerTest.cs", label="Assert.IsFalse(reader.Read())", span="3899-3899"];
m4_2511 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonSerializerTest.cs", label="string json = ''[[[[]]],[[]]]''", span="3856-3856"];
m4_2538 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", span="3854-3854"];
m4_1636 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", span="2501-2501"];
m4_1637 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''/* sdf''))", span="2503-2503"];
m4_1638 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected end while parsing comment. Path '', line 1, position 6.'')", span="2505-2505"];
m4_1639 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", span="2501-2501"];
m4_244 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", span="934-934"];
m4_158 [cluster="Unk.IsFalse", file="JsonSerializerTest.cs", label="Entry Unk.IsFalse", span=""];
m4_1386 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", span="924-924"];
m4_2765 [cluster="System.Net.Sockets.Socket.Socket(System.Net.Sockets.AddressFamily, System.Net.Sockets.SocketType, System.Net.Sockets.ProtocolType)", file="JsonSerializerTest.cs", label="Entry System.Net.Sockets.Socket.Socket(System.Net.Sockets.AddressFamily, System.Net.Sockets.SocketType, System.Net.Sockets.ProtocolType)", span="0-0"];
m4_2786 [cluster="System.Linq.Enumerable.Repeat<TResult>(TResult, int)", file="JsonSerializerTest.cs", label="Entry System.Linq.Enumerable.Repeat<TResult>(TResult, int)", span="0-0"];
m4_229 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", span="403-403"];
m4_231 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="407-407"];
m4_233 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="JsonSerializerTest.cs", label="reader = new JsonTextReader(new StringReader(json))", span="411-411"];
m4_235 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="JsonSerializerTest.cs", label="reader = new JsonTextReader(new StringReader(json))", span="415-415"];
m4_230 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="JsonSerializerTest.cs", label="string json = ''0aq2dun13.hod''", span="405-405"];
m4_232 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected character encountered while parsing number: q. Path '', line 1, position 2.'')", span="409-409"];
m4_234 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsDecimal(); }, ''Unexpected character encountered while parsing number: q. Path '', line 1, position 2.'')", span="413-413"];
m4_236 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsInt32(); }, ''Unexpected character encountered while parsing number: q. Path '', line 1, position 2.'')", span="417-417"];
m4_237 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", span="403-403"];
m4_1414 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", span="2180-2180"];
m4_1415 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''new Date()''))", span="2182-2182"];
m4_1416 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsDateTimeOffset(); }, ''Unexpected character encountered while parsing value: e. Path '', line 1, position 2.'')", span="2184-2184"];
m4_1417 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", span="2180-2180"];
m4_349 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", span="578-578"];
m4_351 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(ms))", span="582-582"];
m4_350 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="JsonSerializerTest.cs", label="MemoryStream ms = new MemoryStream(Encoding.UTF8.GetBytes(@'''''''' + input + @''''''''))", span="580-580"];
m4_352 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="JsonSerializerTest.cs", label="reader.Read()", span="583-583"];
m4_353 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="JsonSerializerTest.cs", label="string s = (string)reader.Value", span="585-585"];
m4_354 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="JsonSerializerTest.cs", label="return s;", span="587-587"];
m4_355 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", span="578-578"];
m4_1650 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", span="2517-2517"];
m4_1654 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2524-2524"];
m4_1656 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2527-2527"];
m4_1658 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2530-2530"];
m4_1659 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="2531-2531"];
m4_1662 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2535-2535"];
m4_1660 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonSerializerTest.cs", label="Assert.AreEqual(-79228162514264300000000000000m, d)", span="2532-2532"];
m4_1652 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2521-2521"];
m4_1653 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2523-2523"];
m4_1655 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2526-2526"];
m4_1657 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonSerializerTest.cs", label="decimal? d = reader.ReadAsDecimal()", span="2529-2529"];
m4_1661 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2534-2534"];
m4_1651 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonSerializerTest.cs", label="string json = @''{''''decimal'''':-7.92281625142643E+28}''", span="2519-2519"];
m4_1663 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", span="2517-2517"];
m4_1111 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", span="1747-1747"];
m4_1146 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSerializerTest.cs", label="Assert.AreEqual(json, sb.ToString())", span="1806-1806"];
m4_1141 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSerializerTest.cs", label="object jsonObject = serializer.Deserialize(new JsonTextReader(new StringReader(json)))", span="1793-1793"];
m4_1139 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSerializerTest.cs", label="string json = sb.ToString()", span="1789-1789"];
m4_1145 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSerializerTest.cs", label="serializer.Serialize(jsonWriter, jsonObject)", span="1803-1803"];
m4_1142 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSerializerTest.cs", label="sb = new StringBuilder()", span="1795-1795"];
m4_1140 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSerializerTest.cs", label="JsonSerializer serializer = new JsonSerializer()", span="1791-1791"];
m4_1112 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSerializerTest.cs", label="StringBuilder sb = new StringBuilder()", span="1749-1749"];
m4_1138 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSerializerTest.cs", label="jsonWriter.WriteEndArray()", span="1786-1786"];
m4_1144 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSerializerTest.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)\r\n            {\r\n                Formatting = Formatting.Indented\r\n            }", span="1798-1801"];
m4_1143 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSerializerTest.cs", label="sw = new StringWriter(sb)", span="1796-1796"];
m4_1113 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSerializerTest.cs", label="StringWriter sw = new StringWriter(sb)", span="1750-1750"];
m4_1114 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSerializerTest.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)\r\n            {\r\n                Formatting = Formatting.Indented\r\n            }", span="1752-1755"];
m4_1137 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSerializerTest.cs", label="jsonWriter.WriteNull()", span="1785-1785"];
m4_1115 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSerializerTest.cs", label="jsonWriter.WriteStartArray()", span="1757-1757"];
m4_1116 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(true)", span="1758-1758"];
m4_1117 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSerializerTest.cs", label="jsonWriter.WriteStartObject()", span="1760-1760"];
m4_1118 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSerializerTest.cs", label="jsonWriter.WritePropertyName(''integer'')", span="1761-1761"];
m4_1119 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(99)", span="1762-1762"];
m4_1120 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSerializerTest.cs", label="jsonWriter.WritePropertyName(''string'')", span="1763-1763"];
m4_1121 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(''how now brown cow?'')", span="1764-1764"];
m4_1122 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSerializerTest.cs", label="jsonWriter.WritePropertyName(''array'')", span="1765-1765"];
m4_1123 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSerializerTest.cs", label="jsonWriter.WriteStartArray()", span="1767-1767"];
m4_1126 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(i)", span="1770-1770"];
m4_1128 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSerializerTest.cs", label="jsonWriter.WriteStartObject()", span="1773-1773"];
m4_1129 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSerializerTest.cs", label="jsonWriter.WritePropertyName(''decimal'')", span="1774-1774"];
m4_1130 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(990.00990099m)", span="1775-1775"];
m4_1131 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSerializerTest.cs", label="jsonWriter.WriteEndObject()", span="1776-1776"];
m4_1132 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(5)", span="1778-1778"];
m4_1133 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSerializerTest.cs", label="jsonWriter.WriteEndArray()", span="1779-1779"];
m4_1134 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSerializerTest.cs", label="jsonWriter.WriteEndObject()", span="1781-1781"];
m4_1135 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSerializerTest.cs", label="jsonWriter.WriteValue(''This is a string.'')", span="1783-1783"];
m4_1136 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSerializerTest.cs", label="jsonWriter.WriteNull()", span="1784-1784"];
m4_1124 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSerializerTest.cs", label="int i = 0", span="1768-1768"];
m4_1125 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSerializerTest.cs", label="i < 5", span="1768-1768"];
m4_1127 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSerializerTest.cs", label="i++", span="1768-1768"];
m4_1147 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", span="1747-1747"];
m4_371 [cluster="System.IO.MemoryStream.MemoryStream()", file="JsonSerializerTest.cs", label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0"];
m4_2367 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean_BadData()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean_BadData()", span="3660-3660"];
m4_2369 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean_BadData()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3664-3664"];
m4_2368 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean_BadData()", file="JsonSerializerTest.cs", label="string json = @''pie''", span="3662-3662"];
m4_2370 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean_BadData()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBoolean(); }, ''Unexpected character encountered while parsing value: p. Path '', line 1, position 1.'')", span="3666-3666"];
m4_2371 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean_BadData()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean_BadData()", span="3660-3660"];
m4_2545 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", span="3903-3903"];
m4_2550 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSerializerTest.cs", label="Assert.AreEqual(false, reader.Value)", span="3912-3912"];
m4_2552 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="3915-3915"];
m4_2553 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, reader.Value)", span="3916-3916"];
m4_2555 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="3919-3919"];
m4_2556 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, reader.Value)", span="3920-3920"];
m4_2558 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="3923-3923"];
m4_2559 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSerializerTest.cs", label="Assert.AreEqual(false, reader.Value)", span="3924-3924"];
m4_2561 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="3927-3927"];
m4_2562 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''test!'', reader.Value)", span="3928-3928"];
m4_2564 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3931-3931"];
m4_2565 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1.11d, reader.Value)", span="3932-3932"];
m4_2567 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3935-3935"];
m4_2568 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0d, reader.Value)", span="3936-3936"];
m4_2570 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3939-3939"];
m4_2571 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0d, reader.Value)", span="3940-3940"];
m4_2573 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3943-3943"];
m4_2574 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0.0000025d, reader.Value)", span="3944-3944"];
m4_2576 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3947-3947"];
m4_2577 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3000000000d, reader.Value)", span="3948-3948"];
m4_2579 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3951-3951"];
m4_2580 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSerializerTest.cs", label="Assert.AreEqual(602214180000000000000000d, reader.Value)", span="3952-3952"];
m4_2582 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="3955-3955"];
m4_2583 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSerializerTest.cs", label="Assert.AreEqual(reader.Value, ''Purple\r \n monkey's:\tdishwasher'')", span="3956-3956"];
m4_2547 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="3907-3907"];
m4_2549 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3911-3911"];
m4_2551 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3914-3914"];
m4_2554 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3918-3918"];
m4_2557 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3922-3922"];
m4_2560 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3926-3926"];
m4_2563 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3930-3930"];
m4_2566 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3934-3934"];
m4_2569 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3938-3938"];
m4_2572 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3942-3942"];
m4_2575 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3946-3946"];
m4_2578 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3950-3950"];
m4_2581 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3954-3954"];
m4_2584 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3958-3958"];
m4_2546 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSerializerTest.cs", label="string json = ''[false, true, true, false, 'test!', 1.11, 0e-10, 0E-10, 0.25e-5, 0.3e10, 6.0221418e23, 'Purple\\r \\n monkey\\'s:\\tdishwasher']''", span="3905-3905"];
m4_2548 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3909-3909"];
m4_2585 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", span="3903-3903"];
m4_2843 [cluster="System.IO.TextReader.Read(char[], int, int)", file="JsonSerializerTest.cs", label="Entry System.IO.TextReader.Read(char[], int, int)", span="0-0"];
m4_289 [cluster="System.Convert.ToDecimal(double)", file="JsonSerializerTest.cs", label="Entry System.Convert.ToDecimal(double)", span="0-0"];
m4_1701 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", span="2622-2622"];
m4_1705 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Date'', reader.Value)", span="2631-2631"];
m4_1706 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2632-2632"];
m4_1708 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2635-2635"];
m4_1703 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2625-2625"];
m4_1704 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2630-2630"];
m4_1707 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2634-2634"];
m4_1702 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonSerializerTest.cs", label="string json = ''new Date\0()''", span="2624-2624"];
m4_1709 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", span="2622-2622"];
m4_1622 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", span="2485-2485"];
m4_1623 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''nulz''))", span="2487-2487"];
m4_1624 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Error parsing null value. Path '', line 1, position 3.'')", span="2489-2489"];
m4_1625 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", span="2485-2485"];
m4_1076 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", span="1707-1707"];
m4_1080 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(double), reader.ValueType)", span="1713-1713"];
m4_1081 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1.1d, reader.Value)", span="1714-1714"];
m4_1084 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(double), reader.ValueType)", span="1718-1718"];
m4_1085 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonSerializerTest.cs", label="Assert.AreEqual(-1.1d, reader.Value)", span="1719-1719"];
m4_1088 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(double), reader.ValueType)", span="1723-1723"];
m4_1089 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0.0d, reader.Value)", span="1724-1724"];
m4_1092 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(double), reader.ValueType)", span="1728-1728"];
m4_1093 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonSerializerTest.cs", label="Assert.AreEqual(-0.0d, reader.Value)", span="1729-1729"];
m4_1098 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(double), reader.ValueType)", span="1736-1736"];
m4_1099 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0.000001d, reader.Value)", span="1737-1737"];
m4_1078 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonSerializerTest.cs", label="reader = new JsonTextReader(new StringReader(''1.1''))", span="1711-1711"];
m4_1082 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonSerializerTest.cs", label="reader = new JsonTextReader(new StringReader(''-1.1''))", span="1716-1716"];
m4_1086 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonSerializerTest.cs", label="reader = new JsonTextReader(new StringReader(''0.0''))", span="1721-1721"];
m4_1090 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonSerializerTest.cs", label="reader = new JsonTextReader(new StringReader(''-0.0''))", span="1726-1726"];
m4_1094 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonSerializerTest.cs", label="reader = new JsonTextReader(new StringReader(''9999999999999999999999999999999999999999999999999999999999999999999999999999asdasdasd''))", span="1731-1731"];
m4_1096 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonSerializerTest.cs", label="reader = new JsonTextReader(new StringReader(''1E-06''))", span="1734-1734"];
m4_1100 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonSerializerTest.cs", label="reader = new JsonTextReader(new StringReader(''''))", span="1739-1739"];
m4_1102 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonSerializerTest.cs", label="reader = new JsonTextReader(new StringReader(''-''))", span="1742-1742"];
m4_1079 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="1712-1712"];
m4_1083 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="1717-1717"];
m4_1087 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="1722-1722"];
m4_1091 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="1727-1727"];
m4_1097 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="1735-1735"];
m4_1077 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonSerializerTest.cs", label="JsonTextReader reader = null", span="1709-1709"];
m4_1095 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => reader.Read(), ''Unexpected character encountered while parsing number: s. Path '', line 1, position 77.'')", span="1732-1732"];
m4_1101 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonSerializerTest.cs", label="Assert.IsFalse(reader.Read())", span="1740-1740"];
m4_1103 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => reader.Read(), ''Input string '-' is not a valid number. Path '', line 1, position 1.'')", span="1743-1743"];
m4_1104 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", span="1707-1707"];
m4_820 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", span="1335-1335"];
m4_823 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''h\0i'', reader.Value)", span="1340-1340"];
m4_821 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="JsonSerializerTest.cs", label="JsonReader reader = new JsonTextReader(new StringReader('''h\0i'''))", span="1337-1337"];
m4_822 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="1338-1338"];
m4_824 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", span="1335-1335"];
m4_0 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_ReadAsString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_ReadAsString()", span="64-64"];
m4_1 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_ReadAsString()", file="JsonSerializerTest.cs", label="string json = ''[9223372036854775807, 1.7976931348623157E+308, 792281625142643375935439503.35, 792281625142643375935555555555555555555555555555555555555555555555555439503.35]''", span="66-66"];
m4_406 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", span="686-686"];
m4_410 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, reader.LineNumber)", span="700-700"];
m4_412 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, reader.LineNumber)", span="703-703"];
m4_414 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, reader.LineNumber)", span="706-706"];
m4_416 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4, reader.LineNumber)", span="709-709"];
m4_418 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonSerializerTest.cs", label="Assert.AreEqual(5, reader.LineNumber)", span="712-712"];
m4_408 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="694-694"];
m4_409 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonSerializerTest.cs", label="reader.Read()", span="699-699"];
m4_411 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonSerializerTest.cs", label="reader.Read()", span="702-702"];
m4_413 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonSerializerTest.cs", label="reader.Read()", span="705-705"];
m4_415 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonSerializerTest.cs", label="reader.Read()", span="708-708"];
m4_417 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonSerializerTest.cs", label="reader.Read()", span="711-711"];
m4_419 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Additional text encountered after finished reading JSON content: c. Path '', line 5, position 1.'')", span="714-714"];
m4_407 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonSerializerTest.cs", label="string json = @''[\r\n''''Small'''',\r\n''''Medium'''',\r\n''''Large''''\r\n]content''", span="688-692"];
m4_420 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", span="686-686"];
m4_1196 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", span="1866-1866"];
m4_1200 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="1876-1876"];
m4_1202 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''<'', reader.Value)", span="1879-1879"];
m4_1204 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonSerializerTest.cs", label="Assert.AreEqual(24352, Convert.ToInt32(Convert.ToChar((string)reader.Value)))", span="1882-1882"];
m4_1206 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="1885-1885"];
m4_1198 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1870-1870"];
m4_1199 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonSerializerTest.cs", label="reader.Read()", span="1875-1875"];
m4_1201 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonSerializerTest.cs", label="reader.Read()", span="1878-1878"];
m4_1203 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonSerializerTest.cs", label="reader.Read()", span="1881-1881"];
m4_1205 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonSerializerTest.cs", label="reader.Read()", span="1884-1884"];
m4_1197 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonSerializerTest.cs", label="string json = @''[''''\u003c'''',''''\u5f20'''']''", span="1868-1868"];
m4_1207 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", span="1866-1866"];
m4_2415 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTime_Boolean()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTime_Boolean()", span="3720-3720"];
m4_2417 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTime_Boolean()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3724-3724"];
m4_2416 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTime_Boolean()", file="JsonSerializerTest.cs", label="string json = @''true''", span="3722-3722"];
m4_2418 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTime_Boolean()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsDateTime(); }, ''Unexpected character encountered while parsing value: t. Path '', line 1, position 1.'')", span="3726-3726"];
m4_2419 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTime_Boolean()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTime_Boolean()", span="3720-3720"];
m4_819 [cluster="Unk.Fail", file="JsonSerializerTest.cs", label="Entry Unk.Fail", span=""];
m4_1158 [cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteNull()", span="874-874"];
m4_120 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", span="228-228"];
m4_126 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''Forest's Bakery And Cafe'', jsonTextReader.Value)", span="237-237"];
m4_122 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", file="JsonSerializerTest.cs", label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="232-232"];
m4_125 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", file="JsonSerializerTest.cs", label="jsonTextReader.Read()", span="235-235"];
m4_121 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", file="JsonSerializerTest.cs", label="string json = @''{''''NameOfStore'''':''''Forest's Bakery And Cafe''''}''", span="230-230"];
m4_123 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", file="JsonSerializerTest.cs", label="jsonTextReader.Read()", span="233-233"];
m4_124 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", file="JsonSerializerTest.cs", label="jsonTextReader.Read()", span="234-234"];
m4_127 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", span="228-228"];
m4_160 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", span="297-297"];
m4_164 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.StartObject, jsonTextReader.TokenType)", span="306-306"];
m4_166 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, jsonTextReader.TokenType)", span="309-309"];
m4_169 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.EndObject, jsonTextReader.TokenType)", span="314-314"];
m4_162 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JsonSerializerTest.cs", label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="303-303"];
m4_163 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JsonSerializerTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="305-305"];
m4_165 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JsonSerializerTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="308-308"];
m4_167 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => jsonTextReader.ReadAsInt32(), ''JSON integer 333333333333333333333333333333333333333 is too large or small for an Int32. Path 'ChildId', line 2, position 52.'')", span="311-311"];
m4_168 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JsonSerializerTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="313-313"];
m4_170 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JsonSerializerTest.cs", label="Assert.IsFalse(jsonTextReader.Read())", span="316-316"];
m4_161 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JsonSerializerTest.cs", label="string json = @''{\r\n    ChildId: 333333333333333333333333333333333333333\r\n}''", span="299-301"];
m4_171 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", span="297-297"];
m4_489 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", span="829-829"];
m4_493 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, reader.Depth)", span="841-841"];
m4_495 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.StartObject)", span="844-844"];
m4_496 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, reader.Depth)", span="845-845"];
m4_497 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="Assert.AreEqual('''', reader.Path)", span="846-846"];
m4_499 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.PropertyName)", span="849-849"];
m4_500 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, reader.Depth)", span="850-850"];
m4_501 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''value'', reader.Path)", span="851-851"];
m4_503 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.String)", span="854-854"];
m4_504 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="Assert.AreEqual(reader.Value, @''Purple'')", span="855-855"];
m4_505 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="Assert.AreEqual(reader.QuoteChar, '\'')", span="856-856"];
m4_506 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, reader.Depth)", span="857-857"];
m4_507 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''value'', reader.Path)", span="858-858"];
m4_509 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.PropertyName)", span="861-861"];
m4_510 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, reader.Depth)", span="862-862"];
m4_511 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''array'', reader.Path)", span="863-863"];
m4_513 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.StartArray)", span="866-866"];
m4_514 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, reader.Depth)", span="867-867"];
m4_515 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''array'', reader.Path)", span="868-868"];
m4_517 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.Integer)", span="871-871"];
m4_518 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1L, reader.Value)", span="872-872"];
m4_519 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, reader.Depth)", span="873-873"];
m4_520 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''array[0]'', reader.Path)", span="874-874"];
m4_522 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.Integer)", span="877-877"];
m4_523 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2L, reader.Value)", span="878-878"];
m4_524 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, reader.Depth)", span="879-879"];
m4_525 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''array[1]'', reader.Path)", span="880-880"];
m4_527 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.StartConstructor)", span="883-883"];
m4_528 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Date'', reader.Value)", span="884-884"];
m4_529 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, reader.Depth)", span="885-885"];
m4_530 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''array[2]'', reader.Path)", span="886-886"];
m4_532 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.Integer)", span="889-889"];
m4_533 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1L, reader.Value)", span="890-890"];
m4_534 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, reader.Depth)", span="891-891"];
m4_535 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''array[2][0]'', reader.Path)", span="892-892"];
m4_537 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.EndConstructor)", span="895-895"];
m4_538 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, reader.Value)", span="896-896"];
m4_539 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, reader.Depth)", span="897-897"];
m4_540 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''array[2]'', reader.Path)", span="898-898"];
m4_542 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.EndArray)", span="901-901"];
m4_543 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, reader.Depth)", span="902-902"];
m4_544 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''array'', reader.Path)", span="903-903"];
m4_546 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.PropertyName)", span="906-906"];
m4_547 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, reader.Depth)", span="907-907"];
m4_548 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''subobject'', reader.Path)", span="908-908"];
m4_550 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.StartObject)", span="911-911"];
m4_551 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, reader.Depth)", span="912-912"];
m4_552 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''subobject'', reader.Path)", span="913-913"];
m4_554 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.PropertyName)", span="916-916"];
m4_555 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, reader.Depth)", span="917-917"];
m4_556 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''subobject.prop'', reader.Path)", span="918-918"];
m4_558 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.Integer)", span="921-921"];
m4_559 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, reader.Depth)", span="922-922"];
m4_560 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''subobject.prop'', reader.Path)", span="923-923"];
m4_562 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.PropertyName)", span="926-926"];
m4_563 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, reader.Depth)", span="927-927"];
m4_564 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''subobject.proparray'', reader.Path)", span="928-928"];
m4_566 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.StartArray)", span="931-931"];
m4_567 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, reader.Depth)", span="932-932"];
m4_568 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''subobject.proparray'', reader.Path)", span="933-933"];
m4_570 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.Integer)", span="936-936"];
m4_571 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, reader.Depth)", span="937-937"];
m4_572 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''subobject.proparray[0]'', reader.Path)", span="938-938"];
m4_574 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.EndArray)", span="941-941"];
m4_575 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, reader.Depth)", span="942-942"];
m4_576 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''subobject.proparray'', reader.Path)", span="943-943"];
m4_578 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.EndObject)", span="946-946"];
m4_579 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, reader.Depth)", span="947-947"];
m4_580 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''subobject'', reader.Path)", span="948-948"];
m4_582 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.EndObject)", span="951-951"];
m4_583 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, reader.Depth)", span="952-952"];
m4_584 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="Assert.AreEqual('''', reader.Path)", span="953-953"];
m4_492 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="JsonReader reader = new JsonTextReader(sr)", span="839-839"];
m4_491 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="StringReader sr = new StringReader(input)", span="837-837"];
m4_490 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="string input = @''{\r\n  value:'Purple',\r\n  array:[1,2,new Date(1)],\r\n  subobject:{prop:1,proparray:[1]}\r\n}''", span="831-835"];
m4_494 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="reader.Read()", span="843-843"];
m4_498 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="reader.Read()", span="848-848"];
m4_502 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="reader.Read()", span="853-853"];
m4_508 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="reader.Read()", span="860-860"];
m4_512 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="reader.Read()", span="865-865"];
m4_516 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="reader.Read()", span="870-870"];
m4_521 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="reader.Read()", span="876-876"];
m4_526 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="reader.Read()", span="882-882"];
m4_531 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="reader.Read()", span="888-888"];
m4_536 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="reader.Read()", span="894-894"];
m4_541 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="reader.Read()", span="900-900"];
m4_545 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="reader.Read()", span="905-905"];
m4_549 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="reader.Read()", span="910-910"];
m4_553 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="reader.Read()", span="915-915"];
m4_557 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="reader.Read()", span="920-920"];
m4_561 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="reader.Read()", span="925-925"];
m4_565 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="reader.Read()", span="930-930"];
m4_569 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="reader.Read()", span="935-935"];
m4_573 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="reader.Read()", span="940-940"];
m4_577 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="reader.Read()", span="945-945"];
m4_581 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="reader.Read()", span="950-950"];
m4_585 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", span="829-829"];
m4_21 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="78-78"];
m4_1954 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNumberValue_InvalidEndArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNumberValue_InvalidEndArray()", span="3002-3002"];
m4_1955 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNumberValue_InvalidEndArray()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader('']''))", span="3004-3004"];
m4_1956 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNumberValue_InvalidEndArray()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                reader.ReadAsInt32();\r\n            }, ''Unexpected character encountered while parsing value: ]. Path '', line 1, position 1.'')", span="3006-3009"];
m4_1957 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNumberValue_InvalidEndArray()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNumberValue_InvalidEndArray()", span="3002-3002"];
m4_688 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndAfterReadingNe()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndAfterReadingNe()", span="1111-1111"];
m4_689 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndAfterReadingNe()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(''ne''))", span="1113-1113"];
m4_690 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndAfterReadingNe()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => reader.Read(), ''Unexpected end when reading JSON. Path '', line 1, position 2.'')", span="1114-1114"];
m4_691 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndAfterReadingNe()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndAfterReadingNe()", span="1111-1111"];
m4_855 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", span="1376-1376"];
m4_858 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="JsonSerializerTest.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''''' + Convert.ToBase64String(helloWorldData)))", span="1381-1381"];
m4_857 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="JsonSerializerTest.cs", label="byte[] helloWorldData = Encoding.UTF8.GetBytes(helloWorld)", span="1379-1379"];
m4_859 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBytes(); }, ''Unterminated string. Expected delimiter: '. Path '', line 1, position 17.'')", span="1383-1383"];
m4_856 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="JsonSerializerTest.cs", label="string helloWorld = ''Hello world!''", span="1378-1378"];
m4_860 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", span="1376-1376"];
m4_2431 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Null_UnexpectedEnd()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Null_UnexpectedEnd()", span="3740-3740"];
m4_2433 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Null_UnexpectedEnd()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3744-3744"];
m4_2432 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Null_UnexpectedEnd()", file="JsonSerializerTest.cs", label="string json = @''nul''", span="3742-3742"];
m4_2434 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Null_UnexpectedEnd()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsString(); }, ''Unexpected end when reading JSON. Path '', line 1, position 3.'')", span="3746-3746"];
m4_2435 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Null_UnexpectedEnd()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Null_UnexpectedEnd()", span="3740-3740"];
m4_2766 [cluster="System.Net.Sockets.Socket.Connect(string, int)", file="JsonSerializerTest.cs", label="Entry System.Net.Sockets.Socket.Connect(string, int)", span="0-0"];
m4_1834 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", span="2822-2822"];
m4_1838 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2828-2828"];
m4_1840 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2831-2831"];
m4_1836 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2825-2825"];
m4_1837 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2827-2827"];
m4_1839 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2830-2830"];
m4_1835 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JsonSerializerTest.cs", label="string json = ''new Date()''", span="2824-2824"];
m4_1841 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", span="2822-2822"];
m4_727 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", span="1160-1160"];
m4_731 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(long), reader.ValueType)", span="1166-1166"];
m4_737 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(BigInteger), reader.ValueType)", span="1175-1175"];
m4_729 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(i.ToString(CultureInfo.InvariantCulture)))", span="1164-1164"];
m4_735 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonSerializerTest.cs", label="reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)))", span="1172-1172"];
m4_730 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonSerializerTest.cs", label="reader.Read()", span="1165-1165"];
m4_732 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonSerializerTest.cs", label="int j = 1", span="1168-1168"];
m4_736 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonSerializerTest.cs", label="reader.Read()", span="1173-1173"];
m4_738 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonSerializerTest.cs", label="j++", span="1168-1168"];
m4_728 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonSerializerTest.cs", label="BigInteger i = new BigInteger(long.MaxValue)", span="1162-1162"];
m4_734 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonSerializerTest.cs", label="BigInteger total = i + j", span="1170-1170"];
m4_733 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonSerializerTest.cs", label="j < 1000", span="1168-1168"];
m4_739 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", span="1160-1160"];
m4_1470 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", span="2265-2265"];
m4_1474 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2272-2272"];
m4_1476 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2275-2275"];
m4_1478 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2278-2278"];
m4_1479 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2279-2279"];
m4_1480 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6)), reader.Value)", span="2280-2280"];
m4_1482 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2283-2283"];
m4_1472 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2269-2269"];
m4_1473 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2271-2271"];
m4_1475 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2274-2274"];
m4_1477 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonSerializerTest.cs", label="reader.ReadAsDateTimeOffset()", span="2277-2277"];
m4_1481 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2282-2282"];
m4_1471 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonSerializerTest.cs", label="string json = ''{\''Offset\'':\''\\/Date(946663200000+0600)\\/\''}''", span="2267-2267"];
m4_1483 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", span="2265-2265"];
m4_971 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", span="1555-1555"];
m4_975 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, jsonReader.Depth)", span="1563-1563"];
m4_977 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.StartObject, jsonReader.TokenType)", span="1566-1566"];
m4_978 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, jsonReader.Depth)", span="1567-1567"];
m4_980 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, jsonReader.TokenType)", span="1570-1570"];
m4_981 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, jsonReader.Depth)", span="1571-1571"];
m4_983 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonSerializerTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.String)", span="1574-1574"];
m4_984 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Purple\r \n monkey's:\tdishwasher'', jsonReader.Value)", span="1575-1575"];
m4_985 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonSerializerTest.cs", label="Assert.AreEqual('\'', jsonReader.QuoteChar)", span="1576-1576"];
m4_986 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, jsonReader.Depth)", span="1577-1577"];
m4_988 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.EndObject, jsonReader.TokenType)", span="1580-1580"];
m4_989 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, jsonReader.Depth)", span="1581-1581"];
m4_974 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonSerializerTest.cs", label="JsonReader jsonReader = new JsonTextReader(sr)", span="1561-1561"];
m4_973 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonSerializerTest.cs", label="StringReader sr = new StringReader(input)", span="1559-1559"];
m4_976 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonSerializerTest.cs", label="jsonReader.Read()", span="1565-1565"];
m4_979 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonSerializerTest.cs", label="jsonReader.Read()", span="1569-1569"];
m4_982 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonSerializerTest.cs", label="jsonReader.Read()", span="1573-1573"];
m4_987 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonSerializerTest.cs", label="jsonReader.Read()", span="1579-1579"];
m4_972 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonSerializerTest.cs", label="string input = ''{value:'Purple\\r \\n monkey\\'s:\\tdishwasher'}''", span="1557-1557"];
m4_990 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", span="1555-1555"];
m4_2264 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", span="3484-3484"];
m4_2268 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3491-3491"];
m4_2269 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JsonSerializerTest.cs", label="Assert.AreEqual(32m, reader.Value)", span="3492-3492"];
m4_2266 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3488-3488"];
m4_2267 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JsonSerializerTest.cs", label="reader.ReadAsDecimal()", span="3490-3490"];
m4_2265 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JsonSerializerTest.cs", label="string json = @''0x20''", span="3486-3486"];
m4_2270 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", span="3484-3484"];
m4_6 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_ReadAsString()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''9223372036854775807'', reader.ReadAsString())", span="74-74"];
m4_7 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_ReadAsString()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="75-75"];
m4_711 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", span="1138-1138"];
m4_716 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonSerializerTest.cs", label="Assert.AreEqual(i, reader.Value)", span="1145-1145"];
m4_715 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(long), reader.ValueType)", span="1144-1144"];
m4_713 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(i.ToString(CultureInfo.InvariantCulture)))", span="1142-1142"];
m4_712 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonSerializerTest.cs", label="long i = int.MinValue", span="1140-1140"];
m4_717 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonSerializerTest.cs", label="int j = 1", span="1147-1147"];
m4_714 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonSerializerTest.cs", label="reader.Read()", span="1143-1143"];
m4_720 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n                {\r\n                    reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)));\r\n                    reader.ReadAsInt32();\r\n                }, ''JSON integer '' + total + '' is too large or small for an Int32. Path '', line 1, position 11.'')", span="1150-1154"];
m4_719 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonSerializerTest.cs", label="long total = -j + i", span="1149-1149"];
m4_718 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonSerializerTest.cs", label="j < 1000", span="1147-1147"];
m4_721 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonSerializerTest.cs", label="j++", span="1147-1147"];
m4_722 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", span="1138-1138"];
m4_1961 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_InvalidEndArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_InvalidEndArray()", span="3013-3013"];
m4_1962 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_InvalidEndArray()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader('']''))", span="3015-3015"];
m4_1963 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_InvalidEndArray()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                reader.ReadAsDateTime();\r\n            }, ''Unexpected character encountered while parsing value: ]. Path '', line 1, position 1.'')", span="3017-3020"];
m4_1964 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_InvalidEndArray()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_InvalidEndArray()", span="3013-3013"];
m4_681 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndAfterReadingNu()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndAfterReadingNu()", span="1104-1104"];
m4_682 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndAfterReadingNu()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(''nu''))", span="1106-1106"];
m4_683 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndAfterReadingNu()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => reader.Read(), ''Unexpected end when reading JSON. Path '', line 1, position 2.'')", span="1107-1107"];
m4_684 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndAfterReadingNu()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndAfterReadingNu()", span="1104-1104"];
m4_18 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_ReadAsString()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="90-90"];
m4_2837 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", span="4322-4322"];
m4_2838 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="JsonSerializerTest.cs", label=Error, span="4324-4324"];
m4_2840 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="JsonSerializerTest.cs", label="return _inner.Read(buffer, index, 1);", span="4329-4329"];
m4_2839 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="JsonSerializerTest.cs", label="throw new Exception(''Read error'');", span="4326-4326"];
m4_2841 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", span="4322-4322"];
m4_1151 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(bool)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(bool)", span="977-977"];
m4_1907 [cluster="Unk.>", file="JsonSerializerTest.cs", label="Entry Unk.>", span=""];
m4_1998 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_CommaErrors()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_CommaErrors()", span="3067-3067"];
m4_2002 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_CommaErrors()", file="JsonSerializerTest.cs", label="Assert.AreEqual(string.Empty, reader.ReadAsString())", span="3077-3077"];
m4_1999 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_CommaErrors()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(''[,'']''))", span="3069-3069"];
m4_2001 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_CommaErrors()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                reader.ReadAsString();\r\n            }, ''Unexpected character encountered while parsing value: ,. Path '[0]', line 1, position 2.'')", span="3072-3075"];
m4_2003 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_CommaErrors()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3078-3078"];
m4_2000 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_CommaErrors()", file="JsonSerializerTest.cs", label="reader.Read()", span="3070-3070"];
m4_2004 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_CommaErrors()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_CommaErrors()", span="3067-3067"];
m4_925 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", span="1497-1497"];
m4_929 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1502-1502"];
m4_930 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''hi\r\nbye'', reader.Value)", span="1503-1503"];
m4_932 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="1505-1505"];
m4_933 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1L, reader.Value)", span="1506-1506"];
m4_935 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1508-1508"];
m4_926 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonSerializerTest.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''{'hi\r\nbye':1}''))", span="1499-1499"];
m4_928 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="1501-1501"];
m4_931 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="1504-1504"];
m4_934 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="1507-1507"];
m4_936 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonSerializerTest.cs", label="Assert.IsFalse(reader.Read())", span="1509-1509"];
m4_927 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="1500-1500"];
m4_937 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", span="1497-1497"];
m4_1811 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", span="2788-2788"];
m4_1815 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2794-2794"];
m4_1817 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2797-2797"];
m4_1813 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2791-2791"];
m4_1814 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2793-2793"];
m4_1816 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2796-2796"];
m4_1812 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JsonSerializerTest.cs", label="string json = ''[]''", span="2790-2790"];
m4_1818 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", span="2788-2788"];
m4_1795 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", span="2767-2767"];
m4_1797 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2770-2770"];
m4_1796 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="JsonSerializerTest.cs", label="string json = ''new Date !''", span="2769-2769"];
m4_1798 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected character while parsing constructor: !. Path '', line 1, position 9.'')", span="2772-2772"];
m4_1799 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", span="2767-2767"];
m4_396 [cluster="Newtonsoft.Json.Tests.SlowStream.SlowStream(string, System.Text.Encoding, int)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.SlowStream.SlowStream(string, System.Text.Encoding, int)", span="4346-4346"];
m4_2849 [cluster="Newtonsoft.Json.Tests.SlowStream.SlowStream(string, System.Text.Encoding, int)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.SlowStream.SlowStream(string, System.Text.Encoding, int)", span="4346-4346"];
m4_2768 [cluster="System.IO.StreamReader.StreamReader(System.IO.Stream, System.Text.Encoding, bool)", file="JsonSerializerTest.cs", label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream, System.Text.Encoding, bool)", span="0-0"];
m4_1944 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_CommaErrors()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_CommaErrors()", span="2987-2987"];
m4_1945 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_CommaErrors()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(''[,'']''))", span="2989-2989"];
m4_1946 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_CommaErrors()", file="JsonSerializerTest.cs", label="reader.Read()", span="2990-2990"];
m4_1947 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_CommaErrors()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                reader.ReadAsBytes();\r\n            }, ''Unexpected character encountered while parsing value: ,. Path '[0]', line 1, position 2.'')", span="2992-2995"];
m4_1948 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_CommaErrors()", file="JsonSerializerTest.cs", label="CollectionAssert.AreEquivalent(new byte[0], reader.ReadAsBytes())", span="2997-2997"];
m4_1949 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_CommaErrors()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2998-2998"];
m4_1950 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_CommaErrors()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_CommaErrors()", span="2987-2987"];
m4_2375 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_BadData()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_BadData()", span="3670-3670"];
m4_2377 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_BadData()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3674-3674"];
m4_2376 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_BadData()", file="JsonSerializerTest.cs", label="string json = @''pie''", span="3672-3672"];
m4_2378 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_BadData()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsString(); }, ''Unexpected character encountered while parsing value: p. Path '', line 1, position 1.'')", span="3676-3676"];
m4_2379 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_BadData()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_BadData()", span="3670-3670"];
m4_1878 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Read_Boolean_Failure()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.Read_Boolean_Failure()", span="2893-2893"];
m4_1879 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Read_Boolean_Failure()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(''{\''Test1\'':false1}''))", span="2895-2895"];
m4_1880 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Read_Boolean_Failure()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2897-2897"];
m4_1881 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Read_Boolean_Failure()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2898-2898"];
m4_1882 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Read_Boolean_Failure()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                () => { reader.Read(); },\r\n                ''Error parsing boolean value. Path 'Test1', line 1, position 14.'')", span="2900-2902"];
m4_1883 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Read_Boolean_Failure()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2904-2904"];
m4_1884 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Read_Boolean_Failure()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2905-2905"];
m4_1885 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Read_Boolean_Failure()", file="JsonSerializerTest.cs", label="Assert.IsFalse(reader.Read())", span="2906-2906"];
m4_1886 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Read_Boolean_Failure()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.Read_Boolean_Failure()", span="2893-2893"];
m4_664 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", span="1061-1061"];
m4_672 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="1093-1093"];
m4_666 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1082-1082"];
m4_671 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonSerializerTest.cs", label="reader.Read()", span="1092-1092"];
m4_665 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonSerializerTest.cs", label="string json = @''[\r\n  {\r\n    ''''$id'''': ''''1'''',\r\n    ''''Name'''': ''''e1'''',\r\n    ''''Manager'''': null\r\n  },\r\n  {\r\n    ''''$id'''': ''''2'''',\r\n    ''''Name'''': ''''e2'''',\r\n    ''''Manager'''': null\r\n  },\r\n  {\r\n    ''''$ref'''': ''''1''''\r\n  },\r\n  {\r\n    ''''$ref'''': ''''2''''\r\n  }\r\n]''", span="1063-1080"];
m4_667 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonSerializerTest.cs", label="int i = 0", span="1087-1087"];
m4_669 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonSerializerTest.cs", label="reader.Read()", span="1089-1089"];
m4_668 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonSerializerTest.cs", label="i < 15", span="1087-1087"];
m4_670 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonSerializerTest.cs", label="i++", span="1087-1087"];
m4_673 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", span="1061-1061"];
m4_847 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32WithBadCharacter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32WithBadCharacter()", span="1368-1368"];
m4_848 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32WithBadCharacter()", file="JsonSerializerTest.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''true''))", span="1370-1370"];
m4_849 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32WithBadCharacter()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsInt32(); }, ''Unexpected character encountered while parsing value: t. Path '', line 1, position 1.'')", span="1372-1372"];
m4_850 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32WithBadCharacter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32WithBadCharacter()", span="1368-1368"];
m4_1603 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", span="2461-2461"];
m4_1607 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2468-2468"];
m4_1609 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2471-2471"];
m4_1605 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2465-2465"];
m4_1606 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2467-2467"];
m4_1608 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2470-2470"];
m4_1610 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsInt32(); }, ''Input string '1.1' is not a valid integer. Path 'Name', line 1, position 12.'')", span="2473-2473"];
m4_1604 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonSerializerTest.cs", label="string json = @''{''''Name'''': 1.1}''", span="2463-2463"];
m4_1611 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", span="2461-2461"];
m4_1387 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBooleanNoContent()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBooleanNoContent()", span="2145-2145"];
m4_1390 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBooleanNoContent()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="2150-2150"];
m4_1388 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBooleanNoContent()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''''))", span="2147-2147"];
m4_1389 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBooleanNoContent()", file="JsonSerializerTest.cs", label="Assert.IsNull(reader.ReadAsBoolean())", span="2149-2149"];
m4_1391 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBooleanNoContent()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBooleanNoContent()", span="2145-2145"];
m4_1737 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", span="2681-2681"];
m4_1741 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2687-2687"];
m4_1743 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2690-2690"];
m4_1745 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2693-2693"];
m4_1747 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2696-2696"];
m4_1749 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2699-2699"];
m4_1751 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2702-2702"];
m4_1753 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2705-2705"];
m4_1755 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2708-2708"];
m4_1757 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="2711-2711"];
m4_1759 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2714-2714"];
m4_1761 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2717-2717"];
m4_1763 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2720-2720"];
m4_1765 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2723-2723"];
m4_1767 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="2726-2726"];
m4_1769 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2729-2729"];
m4_1771 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2732-2732"];
m4_1773 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2735-2735"];
m4_1775 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2738-2738"];
m4_1777 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2741-2741"];
m4_1738 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''{'prop1':[1]} 1 2 ''''name'''' [][]null {}{} 1.1''))", span="2683-2683"];
m4_1740 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2686-2686"];
m4_1742 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2689-2689"];
m4_1744 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2692-2692"];
m4_1746 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2695-2695"];
m4_1748 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2698-2698"];
m4_1750 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2701-2701"];
m4_1752 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2704-2704"];
m4_1754 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2707-2707"];
m4_1756 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2710-2710"];
m4_1758 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2713-2713"];
m4_1760 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2716-2716"];
m4_1762 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2719-2719"];
m4_1764 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2722-2722"];
m4_1766 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2725-2725"];
m4_1768 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2728-2728"];
m4_1770 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2731-2731"];
m4_1772 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2734-2734"];
m4_1774 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2737-2737"];
m4_1776 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2740-2740"];
m4_1778 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSerializerTest.cs", label="Assert.IsFalse(reader.Read())", span="2743-2743"];
m4_1739 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSerializerTest.cs", label="reader.SupportMultipleContent = true", span="2684-2684"];
m4_1779 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", span="2681-2681"];
m4_2439 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes()", span="3750-3750"];
m4_2442 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3756-3756"];
m4_2441 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes()", file="JsonSerializerTest.cs", label="string json = @'''''''' + Convert.ToBase64String(data) + @''''''''", span="3754-3754"];
m4_2443 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes()", file="JsonSerializerTest.cs", label="byte[] result = reader.ReadAsBytes()", span="3758-3758"];
m4_2440 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes()", file="JsonSerializerTest.cs", label="byte[] data = Encoding.UTF8.GetBytes(''Hello world'')", span="3752-3752"];
m4_2444 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes()", file="JsonSerializerTest.cs", label="CollectionAssert.AreEquivalent(data, result)", span="3760-3760"];
m4_2445 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes()", span="3750-3750"];
m4_1029 [cluster="long.ToString()", file="JsonSerializerTest.cs", label="Entry long.ToString()", span="0-0"];
m4_378 [cluster="Newtonsoft.Json.JsonReader.Read()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonReader.Read()", span="410-410"];
m4_741 [cluster="StringReader.cstr", file="JsonSerializerTest.cs", label="Entry StringReader.cstr", span=""];
m4_2762 [cluster="System.Threading.ManualResetEvent.ManualResetEvent(bool)", file="JsonSerializerTest.cs", label="Entry System.Threading.ManualResetEvent.ManualResetEvent(bool)", span="0-0"];
m4_630 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(int)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(int)", span="431-431"];
m4_2241 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", span="3448-3448"];
m4_2245 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="3455-3455"];
m4_2246 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''comment'', reader.Value)", span="3456-3456"];
m4_2243 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="3452-3452"];
m4_2244 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3454-3454"];
m4_2247 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="JsonSerializerTest.cs", label="Assert.IsFalse(reader.Read())", span="3458-3458"];
m4_2242 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="JsonSerializerTest.cs", label="string json = @''//comment''", span="3450-3450"];
m4_2248 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", span="3448-3448"];
m4_1847 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Success()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Success()", span="2842-2842"];
m4_1849 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Success()", file="JsonSerializerTest.cs", label="Assert.AreEqual(12.34d, reader.ReadAsDouble())", span="2845-2845"];
m4_1848 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Success()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader('''12.34'''))", span="2844-2844"];
m4_1850 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Success()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Success()", span="2842-2842"];
m4_706 [cluster="long.ToString(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry long.ToString(System.IFormatProvider)", span="0-0"];
m4_1162 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="991-991"];
m4_2801 [cluster="Newtonsoft.Json.Tests.UnmanagedResourceFakingJsonReader.UnmanagedResourceFakingJsonReader()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.UnmanagedResourceFakingJsonReader.UnmanagedResourceFakingJsonReader()", span="4257-4257"];
m4_2803 [cluster="Newtonsoft.Json.Tests.UnmanagedResourceFakingJsonReader.UnmanagedResourceFakingJsonReader()", file="JsonSerializerTest.cs", label="DisposalCalls = 0", span="4259-4259"];
m4_2804 [cluster="Newtonsoft.Json.Tests.UnmanagedResourceFakingJsonReader.UnmanagedResourceFakingJsonReader()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.UnmanagedResourceFakingJsonReader.UnmanagedResourceFakingJsonReader()", span="4257-4257"];
m4_2769 [cluster="System.Text.UTF8Encoding.UTF8Encoding()", file="JsonSerializerTest.cs", label="Entry System.Text.UTF8Encoding.UTF8Encoding()", span="0-0"];
m4_1160 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="478-478"];
m4_809 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest_WithError()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest_WithError()", span="1304-1304"];
m4_816 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest_WithError()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, arrayPool.UsedArrays.Count)", span="1330-1330"];
m4_817 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest_WithError()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, arrayPool.FreeArrays.Count)", span="1331-1331"];
m4_812 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest_WithError()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1315-1315"];
m4_811 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest_WithError()", file="JsonSerializerTest.cs", label="FakeArrayPool arrayPool = new FakeArrayPool()", span="1310-1310"];
m4_815 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest_WithError()", file="JsonSerializerTest.cs", label="Assert.Fail()", span="1324-1324"];
m4_810 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest_WithError()", file="JsonSerializerTest.cs", label="string json = @''{\r\n              ''''CPU'''': ''''Intel?\nYes'''',\r\n              ''''Description'''': ''''Amazin''", span="1306-1308"];
m4_813 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest_WithError()", file="JsonSerializerTest.cs", label="reader.ArrayPool = arrayPool", span="1317-1317"];
m4_814 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest_WithError()", file="JsonSerializerTest.cs", label="reader.Read()", span="1319-1319"];
m4_818 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest_WithError()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest_WithError()", span="1304-1304"];
m4_2257 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", span="3472-3472"];
m4_2261 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3479-3479"];
m4_2262 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JsonSerializerTest.cs", label="Assert.AreEqual(8m, reader.Value)", span="3480-3480"];
m4_2259 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3476-3476"];
m4_2260 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JsonSerializerTest.cs", label="reader.ReadAsDecimal()", span="3478-3478"];
m4_2258 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JsonSerializerTest.cs", label="string json = @''010''", span="3474-3474"];
m4_2263 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", span="3472-3472"];
m4_2498 [cluster="System.Convert.ToDouble(string, System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry System.Convert.ToDouble(string, System.IFormatProvider)", span="0-0"];
m4_2783 [cluster="System.Net.IPAddress.Parse(string)", file="JsonSerializerTest.cs", label="Entry System.Net.IPAddress.Parse(string)", span="0-0"];
m4_807 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FakeArrayPool.FakeArrayPool()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.FakeArrayPool.FakeArrayPool()", span="1233-1233"];
m4_808 [cluster="System.Console.WriteLine(string)", file="JsonSerializerTest.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m4_1155 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="912-912"];
m4_1272 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", span="1977-1977"];
m4_1276 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1986-1986"];
m4_1278 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1989-1989"];
m4_1280 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="1992-1992"];
m4_1274 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1983-1983"];
m4_1275 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonSerializerTest.cs", label="reader.Read()", span="1985-1985"];
m4_1277 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonSerializerTest.cs", label="reader.Read()", span="1988-1988"];
m4_1279 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonSerializerTest.cs", label="reader.Read()", span="1991-1991"];
m4_1281 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, @''Invalid character after parsing property name. Expected ':' but got: ''''. Path 'A', line 3, position 8.'')", span="1994-1994"];
m4_1273 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonSerializerTest.cs", label="string json = @''{\r\n    ''''A'''' : true,\r\n    ''''B'''' ''''''", span="1979-1981"];
m4_1282 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", span="1977-1977"];
m4_1819 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", span="2801-2801"];
m4_1823 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2807-2807"];
m4_1825 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2810-2810"];
m4_1821 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2804-2804"];
m4_1822 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2806-2806"];
m4_1824 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2809-2809"];
m4_1820 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JsonSerializerTest.cs", label="string json = ''{}''", span="2803-2803"];
m4_1826 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", span="2801-2801"];
m4_2764 [cluster="System.Threading.WaitHandle.WaitOne()", file="JsonSerializerTest.cs", label="Entry System.Threading.WaitHandle.WaitOne()", span="0-0"];
m4_25 [cluster="Unk.AreEqual", file="JsonSerializerTest.cs", label="Entry Unk.AreEqual", span=""];
m4_1286 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", span="1998-1998"];
m4_1292 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Hello world.'', text)", span="2007-2007"];
m4_1288 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(s)", span="2001-2001"];
m4_1287 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonSerializerTest.cs", label="StringReader s = new StringReader(@''''''SGVsbG8gd29ybGQu'''''')", span="2000-2000"];
m4_1291 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonSerializerTest.cs", label="string text = Encoding.UTF8.GetString(data, 0, data.Length)", span="2006-2006"];
m4_1289 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonSerializerTest.cs", label="byte[] data = reader.ReadAsBytes()", span="2003-2003"];
m4_1290 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(data)", span="2004-2004"];
m4_1293 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", span="1998-1998"];
m4_2698 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(decimal)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(decimal)", span="589-589"];
m4_1153 [cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="456-456"];
m4_953 [cluster="Unk.AreEquivalent", file="JsonSerializerTest.cs", label="Entry Unk.AreEquivalent", span=""];
m4_742 [cluster="Unk.ToString", file="JsonSerializerTest.cs", label="Entry Unk.ToString", span=""];
m4_599 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", span="978-978"];
m4_603 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", file="JsonSerializerTest.cs", label="Assert.AreEqual(s, reader.Value)", span="984-984"];
m4_601 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", file="JsonSerializerTest.cs", label="JsonReader reader = new JsonTextReader(new StringReader(''''' + s + '''''))", span="981-981"];
m4_600 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", file="JsonSerializerTest.cs", label="string s = new string('a', 10000)", span="980-980"];
m4_602 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", file="JsonSerializerTest.cs", label="reader.Read()", span="982-982"];
m4_604 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", span="978-978"];
m4_1485 [cluster="System.DateTime.DateTime(int, int, int)", file="JsonSerializerTest.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m4_1374 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", span="2126-2126"];
m4_1375 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''{''))", span="2128-2128"];
m4_1376 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBytes(); }, ''Unexpected end when reading JSON. Path '', line 1, position 1.'')", span="2130-2130"];
m4_1377 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", span="2126-2126"];
m4_1294 [cluster="Unk.IsNotNull", file="JsonSerializerTest.cs", label="Entry Unk.IsNotNull", span=""];
m4_631 [cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="430-430"];
m4_2 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_ReadAsString()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="68-68"];
m4_3 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_ReadAsString()", file="JsonSerializerTest.cs", label="reader.FloatParseHandling = Json.FloatParseHandling.Decimal", span="69-69"];
m4_1827 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", span="2814-2814"];
m4_1828 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(''true/''))", span="2816-2816"];
m4_1829 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Error parsing boolean value. Path '', line 1, position 4.'')", span="2818-2818"];
m4_1830 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", span="2814-2814"];
m4_2707 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", span="4125-4125"];
m4_2711 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, r.LineNumber)", span="4132-4132"];
m4_2712 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, r.LinePosition)", span="4133-4133"];
m4_2714 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, r.LineNumber)", span="4136-4136"];
m4_2715 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonSerializerTest.cs", label="Assert.AreEqual(5, r.LinePosition)", span="4137-4137"];
m4_2717 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, r.LineNumber)", span="4140-4140"];
m4_2718 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonSerializerTest.cs", label="Assert.AreEqual(9, r.LinePosition)", span="4141-4141"];
m4_2720 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, r.LineNumber)", span="4144-4144"];
m4_2721 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonSerializerTest.cs", label="Assert.AreEqual(10, r.LinePosition)", span="4145-4145"];
m4_2726 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, r.LineNumber)", span="4154-4154"];
m4_2727 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, r.LinePosition)", span="4155-4155"];
m4_2729 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, r.LineNumber)", span="4158-4158"];
m4_2730 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonSerializerTest.cs", label="Assert.AreEqual(5, r.LinePosition)", span="4159-4159"];
m4_2732 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, r.LineNumber)", span="4162-4162"];
m4_2733 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonSerializerTest.cs", label="Assert.AreEqual(9, r.LinePosition)", span="4163-4163"];
m4_2735 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, r.LineNumber)", span="4166-4166"];
m4_2736 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonSerializerTest.cs", label="Assert.AreEqual(10, r.LinePosition)", span="4167-4167"];
m4_2709 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonSerializerTest.cs", label="JsonTextReader r = new JsonTextReader(new StringReader(json1))", span="4129-4129"];
m4_2724 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonSerializerTest.cs", label="r = new JsonTextReader(new StringReader(json2))", span="4151-4151"];
m4_2710 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonSerializerTest.cs", label="Assert.IsTrue(r.Read())", span="4131-4131"];
m4_2713 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonSerializerTest.cs", label="Assert.IsTrue(r.Read())", span="4135-4135"];
m4_2716 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonSerializerTest.cs", label="Assert.IsTrue(r.Read())", span="4139-4139"];
m4_2719 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonSerializerTest.cs", label="Assert.IsTrue(r.Read())", span="4143-4143"];
m4_2722 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonSerializerTest.cs", label="Assert.IsFalse(r.Read())", span="4147-4147"];
m4_2725 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonSerializerTest.cs", label="Assert.IsTrue(r.Read())", span="4153-4153"];
m4_2728 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonSerializerTest.cs", label="Assert.IsTrue(r.Read())", span="4157-4157"];
m4_2731 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonSerializerTest.cs", label="Assert.IsTrue(r.Read())", span="4161-4161"];
m4_2734 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonSerializerTest.cs", label="Assert.IsTrue(r.Read())", span="4165-4165"];
m4_2737 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonSerializerTest.cs", label="Assert.IsFalse(r.Read())", span="4169-4169"];
m4_2708 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonSerializerTest.cs", label="string json1 = ''{'a':'bc'}''", span="4127-4127"];
m4_2723 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonSerializerTest.cs", label="string json2 = ''\n{'a':'bc'}''", span="4149-4149"];
m4_2738 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", span="4125-4125"];
m4_938 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", span="1513-1513"];
m4_943 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="1520-1520"];
m4_945 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="1522-1522"];
m4_948 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Bytes, reader.TokenType)", span="1525-1525"];
m4_950 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="1527-1527"];
m4_941 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonSerializerTest.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''[1,''' + Convert.ToBase64String(helloWorldData) + @''']''))", span="1518-1518"];
m4_942 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="1519-1519"];
m4_944 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="1521-1521"];
m4_946 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonSerializerTest.cs", label="byte[] data = reader.ReadAsBytes()", span="1523-1523"];
m4_947 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonSerializerTest.cs", label="CollectionAssert.AreEquivalent(helloWorldData, data)", span="1524-1524"];
m4_949 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="1526-1526"];
m4_951 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonSerializerTest.cs", label="Assert.IsFalse(reader.Read())", span="1529-1529"];
m4_940 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonSerializerTest.cs", label="byte[] helloWorldData = Encoding.UTF8.GetBytes(helloWorld)", span="1516-1516"];
m4_939 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonSerializerTest.cs", label="string helloWorld = ''Hello world!''", span="1515-1515"];
m4_952 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", span="1513-1513"];
m4_301 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", span="492-492"];
m4_305 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="499-499"];
m4_307 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="502-502"];
m4_309 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="505-505"];
m4_311 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="508-508"];
m4_313 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="511-511"];
m4_315 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="514-514"];
m4_316 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''recipe_text'', reader.Value)", span="515-515"];
m4_318 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="518-518"];
m4_319 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''#C16------------------------------\r\n#C12Ingredients #C20\r\n#C16------------------------------\r\n\r\na piece of Leather Armor\r\n( ie #L \''Enhanced Leather Armor Boots\'' \''85644\'' )\r\n<img src=rdb://13264>\r\n\r\n#L \''Hacker Tool\'' \''87814\''\r\n<img src=rdb://99282>\r\n\r\n#L \''Clanalizer\'' \''208313\''\r\n<img src=rdb://156479>\r\n\r\n#C16------------------------------\r\n#C12Recipe #C16\r\n#C16------------------------------#C20\r\n\r\nHacker Tool\r\n#C15+#C20\r\na piece of Leather Armor\r\n#C15=#C20\r\n<img src=rdb://13264>\r\na piece of Hacked Leather Armor\r\n( ie : #L \''Hacked Leather Armor Boots\'' \''245979\'' )\r\n#C16Skills: |  BE  |#C20\r\n\r\n#C14------------------------------#C20\r\n\r\nClanalizer\r\n#C15+#C20\r\na piece of Hacked Leather Armor\r\n#C15=#C20\r\n<img src=rdb://13264>\r\na piece of Apocalypse Leather Armor\r\n( ie : #L \''Apocalypse Leather Armor Boots\'' \''245966\'' )\r\n#C16Skills: |  ??  |#C20\r\n\r\n#C16------------------------------\r\n#C12Details#C16\r\n#C16------------------------------#C20\r\n\r\n#L \''Apocalypse Leather Armor Boots\'' \''245967\''\r\n#L \''Apocalypse Leather Armor Gloves\'' \''245969\''\r\n#L \''Apocalypse Leather Armor Helmet\'' \''245975\''\r\n#L \''Apocalypse Leather Armor Pants\'' \''245971\''\r\n#L \''Apocalypse Leather Armor Sleeves\'' \''245973\''\r\n#L \''Apocalypse Leather Body Armor\'' \''245965\''\r\n\r\n#C16------------------------------\r\n#C12Comments#C16\r\n#C16------------------------------#C20\r\n\r\nNice froob armor.. but ugleh!\r\n\r\n'', reader.Value)", span="520-520"];
m4_303 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="496-496"];
m4_304 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="498-498"];
m4_306 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="501-501"];
m4_308 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="504-504"];
m4_310 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="507-507"];
m4_312 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="510-510"];
m4_314 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="513-513"];
m4_317 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="517-517"];
m4_302 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonSerializerTest.cs", label="string json = @''{''''recipe_id'''':''''12'''',''''recipe_name'''':''''Apocalypse Leather Armors'''',''''recipe_text'''':''''#C16------------------------------\r\n#C12Ingredients #C20\r\n#C16------------------------------\r\n\r\na piece of Leather Armor\r\n( ie #L \''''Enhanced Leather Armor Boots\'''' \''''85644\'''' )\r\n<img src=rdb:\/\/13264>\r\n\r\n#L \''''Hacker Tool\'''' \''''87814\''''\r\n<img src=rdb:\/\/99282>\r\n\r\n#L \''''Clanalizer\'''' \''''208313\''''\r\n<img src=rdb:\/\/156479>\r\n\r\n#C16------------------------------\r\n#C12Recipe #C16\r\n#C16------------------------------#C20\r\n\r\nHacker Tool\r\n#C15+#C20\r\na piece of Leather Armor\r\n#C15=#C20\r\n<img src=rdb:\/\/13264>\r\na piece of Hacked Leather Armor\r\n( ie : #L \''''Hacked Leather Armor Boots\'''' \''''245979\'''' )\r\n#C16Skills: |  BE  |#C20\r\n\r\n#C14------------------------------#C20\r\n\r\nClanalizer\r\n#C15+#C20\r\na piece of Hacked Leather Armor\r\n#C15=#C20\r\n<img src=rdb:\/\/13264>\r\na piece of Apocalypse Leather Armor\r\n( ie : #L \''''Apocalypse Leather Armor Boots\'''' \''''245966\'''' )\r\n#C16Skills: |  ??  |#C20\r\n\r\n#C16------------------------------\r\n#C12Details#C16\r\n#C16------------------------------#C20\r\n\r\n#L \''''Apocalypse Leather Armor Boots\'''' \''''245967\''''\r\n#L \''''Apocalypse Leather Armor Gloves\'''' \''''245969\''''\r\n#L \''''Apocalypse Leather Armor Helmet\'''' \''''245975\''''\r\n#L \''''Apocalypse Leather Armor Pants\'''' \''''245971\''''\r\n#L \''''Apocalypse Leather Armor Sleeves\'''' \''''245973\''''\r\n#L \''''Apocalypse Leather Body Armor\'''' \''''245965\''''\r\n\r\n#C16------------------------------\r\n#C12Comments#C16\r\n#C16------------------------------#C20\r\n\r\nNice froob armor.. but ugleh!\r\n\r\n'''',''''recipe_author'''':null}''", span="494-494"];
m4_320 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", span="492-492"];
m4_793 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest()", span="1268-1268"];
m4_804 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, arrayPool.UsedArrays.Count)", span="1299-1299"];
m4_805 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(6, arrayPool.FreeArrays.Count)", span="1300-1300"];
m4_798 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1284-1284"];
m4_795 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest()", file="JsonSerializerTest.cs", label="FakeArrayPool arrayPool = new FakeArrayPool()", span="1280-1280"];
m4_797 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest()", file="JsonSerializerTest.cs", label="i < 1000", span="1282-1282"];
m4_794 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest()", file="JsonSerializerTest.cs", label="string json = @''{\r\n              ''''CPU'''': ''''Intel'''',\r\n              ''''Description'''': ''''Amazing!\nBuy now!'''',\r\n              ''''Drives'''': [\r\n                ''''DVD read/writer'''',\r\n                ''''500 gigabyte hard drive'''',\r\n                ''''Amazing Drive'' + new string('!', 9000) + @''''''\r\n              ]\r\n            }''", span="1270-1278"];
m4_799 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest()", file="JsonSerializerTest.cs", label="reader.ArrayPool = arrayPool", span="1286-1286"];
m4_800 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest()", file="JsonSerializerTest.cs", label="reader.Read()", span="1288-1288"];
m4_796 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest()", file="JsonSerializerTest.cs", label="int i = 0", span="1282-1282"];
m4_802 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest()", file="JsonSerializerTest.cs", label="Console.WriteLine(''Allocated buffers: '' + arrayPool.FreeArrays.Count)", span="1295-1295"];
m4_803 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest()", file="JsonSerializerTest.cs", label="i++", span="1282-1282"];
m4_801 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest()", file="JsonSerializerTest.cs", label="(i + 1) % 100 == 0", span="1293-1293"];
m4_806 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest()", span="1268-1268"];
m4_2681 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", span="4071-4071"];
m4_2693 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonSerializerTest.cs", label="Assert.AreEqual(decimal.MaxValue, max)", span="4089-4089"];
m4_2695 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonSerializerTest.cs", label="Assert.AreEqual(decimal.MinValue, min)", span="4092-4092"];
m4_2690 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(sr)", span="4084-4084"];
m4_2689 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonSerializerTest.cs", label="StringReader sr = new StringReader(json)", span="4083-4083"];
m4_2692 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonSerializerTest.cs", label="decimal? max = reader.ReadAsDecimal()", span="4088-4088"];
m4_2694 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonSerializerTest.cs", label="decimal? min = reader.ReadAsDecimal()", span="4091-4091"];
m4_2696 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="4094-4094"];
m4_2691 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="4086-4086"];
m4_2688 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonSerializerTest.cs", label="string json = sw.ToString()", span="4081-4081"];
m4_2682 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonSerializerTest.cs", label="StringWriter sw = new StringWriter()", span="4073-4073"];
m4_2687 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonSerializerTest.cs", label="writer.WriteEndArray()", span="4079-4079"];
m4_2683 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonSerializerTest.cs", label="JsonTextWriter writer = new JsonTextWriter(sw)", span="4074-4074"];
m4_2686 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonSerializerTest.cs", label="writer.WriteValue(decimal.MinValue)", span="4078-4078"];
m4_2684 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonSerializerTest.cs", label="writer.WriteStartArray()", span="4076-4076"];
m4_2685 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonSerializerTest.cs", label="writer.WriteValue(decimal.MaxValue)", span="4077-4077"];
m4_2697 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", span="4071-4071"];
m4_4 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_ReadAsString()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="71-71"];
m4_5 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_ReadAsString()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="72-72"];
m4_628 [cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="148-148"];
m4_19 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_ReadAsString()", file="JsonSerializerTest.cs", label="Newtonsoft.Json.JsonWriterException", span=""];
m4_20 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_ReadAsString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_ReadAsString()", span="64-64"];
m4_1208 [cluster="System.Convert.ToChar(string)", file="JsonSerializerTest.cs", label="Entry System.Convert.ToChar(string)", span="0-0"];
m4_2771 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="4184-4201"];
m4_590 [cluster="lambda expression", file="JsonSerializerTest.cs", label="new JsonTextReader(null)", span="961-961"];
m4_708 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)))", span="1131-1131"];
m4_724 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)))", span="1152-1152"];
m4_2704 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="4115-4115"];
m4_1900 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.ReadAsString()", span="2918-2918"];
m4_2006 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.ReadAsString()", span="3074-3074"];
m4_2017 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.ReadAsString()", span="3090-3090"];
m4_2335 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.ReadAsString()", span="3615-3615"];
m4_2351 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.ReadAsString()", span="3635-3635"];
m4_2381 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.ReadAsString()", span="3676-3676"];
m4_2429 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.ReadAsString()", span="3736-3736"];
m4_2437 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.ReadAsString()", span="3746-3746"];
m4_174 [cluster="lambda expression", file="JsonSerializerTest.cs", label="jsonTextReader.ReadAsInt32()", span="311-311"];
m4_191 [cluster="lambda expression", file="JsonSerializerTest.cs", label="jsonTextReader.ReadAsInt32()", span="334-334"];
m4_194 [cluster="lambda expression", file="JsonSerializerTest.cs", label="jsonTextReader.ReadAsInt32()", span="336-336"];
m4_197 [cluster="lambda expression", file="JsonSerializerTest.cs", label="jsonTextReader.ReadAsInt32()", span="338-338"];
m4_200 [cluster="lambda expression", file="JsonSerializerTest.cs", label="jsonTextReader.ReadAsInt32()", span="340-340"];
m4_239 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.Read()", span="409-409"];
m4_242 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.ReadAsDecimal()", span="413-413"];
m4_246 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.ReadAsInt32()", span="417-417"];
m4_262 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.Read()", span="439-439"];
m4_299 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.Read()", span="488-488"];
m4_404 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.Read()", span="679-679"];
m4_422 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.Read()", span="714-714"];
m4_435 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.Read()", span="743-743"];
m4_589 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="961-961"];
m4_591 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="961-961"];
m4_597 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.Read()", span="974-974"];
m4_679 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.Read()", span="1100-1100"];
m4_686 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.Read()", span="1107-1107"];
m4_693 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.Read()", span="1114-1114"];
m4_707 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="1129-1133"];
m4_709 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.ReadAsInt32()", span="1132-1132"];
m4_723 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="1150-1154"];
m4_725 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.ReadAsInt32()", span="1153-1153"];
m4_830 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.Read()", span="1348-1348"];
m4_837 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.Read()", span="1356-1356"];
m4_844 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.ReadAsBytes()", span="1364-1364"];
m4_852 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.ReadAsInt32()", span="1372-1372"];
m4_863 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.ReadAsBytes()", span="1383-1383"];
m4_878 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.Read()", span="1402-1402"];
m4_1031 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.ReadAsInt32()", span="1654-1654"];
m4_1034 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.ReadAsInt32()", span="1657-1657"];
m4_1037 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.ReadAsInt32()", span="1660-1660"];
m4_1040 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.ReadAsInt32()", span="1663-1663"];
m4_1043 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.ReadAsInt32()", span="1669-1669"];
m4_1068 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.ReadAsDecimal()", span="1690-1690"];
m4_1071 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.Read()", span="1694-1694"];
m4_1074 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.ReadAsDecimal()", span="1703-1703"];
m4_1106 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.Read()", span="1732-1732"];
m4_1109 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.Read()", span="1743-1743"];
m4_1284 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.Read()", span="1994-1994"];
m4_1362 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.Read()", span="2104-2104"];
m4_1379 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.ReadAsBytes()", span="2130-2130"];
m4_1398 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.ReadAsDecimal()", span="2158-2158"];
m4_1405 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.ReadAsDecimal()", span="2167-2167"];
m4_1412 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.ReadAsBytes()", span="2175-2175"];
m4_1419 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.ReadAsDateTimeOffset()", span="2184-2184"];
m4_1433 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.ReadAsBytes()", span="2204-2204"];
m4_1440 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.ReadAsBytes()", span="2212-2212"];
m4_1511 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.ReadAsDateTimeOffset()", span="2321-2321"];
m4_1613 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.ReadAsInt32()", span="2473-2473"];
m4_1620 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.Read()", span="2481-2481"];
m4_1627 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.Read()", span="2489-2489"];
m4_1634 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.Read()", span="2497-2497"];
m4_1641 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.Read()", span="2505-2505"];
m4_1648 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.Read()", span="2513-2513"];
m4_1793 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.Read()", span="2763-2763"];
m4_1801 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.Read()", span="2772-2772"];
m4_1832 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.Read()", span="2818-2818"];
m4_1867 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.ReadAsDouble()", span="2870-2870"];
m4_1888 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.Read()", span="2901-2901"];
m4_1909 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2932-2932"];
m4_1942 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.ReadAsInt32()", span="2979-2979"];
m4_1952 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.ReadAsBytes()", span="2994-2994"];
m4_1959 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.ReadAsInt32()", span="3008-3008"];
m4_1966 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.ReadAsDateTime()", span="3019-3019"];
m4_1974 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.ReadAsBytes()", span="3030-3030"];
m4_1985 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.ReadAsInt32()", span="3043-3043"];
m4_1996 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.ReadAsBytes()", span="3059-3059"];
m4_2029 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.ReadAsDateTime()", span="3105-3105"];
m4_2032 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.ReadAsDateTime()", span="3110-3110"];
m4_2035 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.ReadAsDateTime()", span="3115-3115"];
m4_2255 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.Read()", span="3468-3468"];
m4_2343 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.ReadAsBoolean()", span="3625-3625"];
m4_2359 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.ReadAsBoolean()", span="3645-3645"];
m4_2373 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.ReadAsBoolean()", span="3666-3666"];
m4_2389 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.ReadAsDouble()", span="3686-3686"];
m4_2397 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.ReadAsDouble()", span="3696-3696"];
m4_2405 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.ReadAsBytes()", span="3706-3706"];
m4_2413 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.ReadAsDateTime()", span="3716-3716"];
m4_2421 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.ReadAsDateTime()", span="3726-3726"];
m4_2453 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.Read()", span="3770-3770"];
m4_2508 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3850-3850"];
m4_2540 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3866-3866"];
m4_2543 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3884-3884"];
m4_2664 [cluster="lambda expression", file="JsonSerializerTest.cs", label="jsonTextReader.Read()", span="4041-4041"];
m4_2667 [cluster="lambda expression", file="JsonSerializerTest.cs", label="jsonTextReader.Read()", span="4042-4042"];
m4_2670 [cluster="lambda expression", file="JsonSerializerTest.cs", label="jsonTextReader.Read()", span="4051-4051"];
m4_2673 [cluster="lambda expression", file="JsonSerializerTest.cs", label="jsonTextReader.Read()", span="4060-4060"];
m4_2676 [cluster="lambda expression", file="JsonSerializerTest.cs", label="jsonTextReader.Read()", span="4061-4061"];
m4_2679 [cluster="lambda expression", file="JsonSerializerTest.cs", label="jsonTextReader.Read()", span="4062-4062"];
m4_2703 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="4113-4119"];
m4_2705 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.Read()", span="4116-4116"];
m4_1899 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="2918-2918"];
m4_1901 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="2918-2918"];
m4_2005 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="3072-3075"];
m4_2007 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="3072-3075"];
m4_2016 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="3088-3091"];
m4_2018 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="3088-3091"];
m4_2334 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="3615-3615"];
m4_2336 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="3615-3615"];
m4_2350 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="3635-3635"];
m4_2352 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="3635-3635"];
m4_2380 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="3676-3676"];
m4_2382 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="3676-3676"];
m4_2428 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="3736-3736"];
m4_2430 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="3736-3736"];
m4_2436 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="3746-3746"];
m4_2438 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="3746-3746"];
m4_173 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="311-311"];
m4_190 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="334-334"];
m4_261 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="439-439"];
m4_298 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="488-488"];
m4_421 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="714-714"];
m4_1283 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="1994-1994"];
m4_1510 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="2321-2321"];
m4_1612 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="2473-2473"];
m4_1866 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="2870-2870"];
m4_1941 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="2977-2980"];
m4_1984 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="3041-3044"];
m4_2034 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="3113-3116"];
m4_2539 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="3866-3866"];
m4_2542 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="3884-3884"];
m4_175 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="311-311"];
m4_192 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="334-334"];
m4_193 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="336-336"];
m4_195 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="336-336"];
m4_196 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="338-338"];
m4_198 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="338-338"];
m4_199 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="340-340"];
m4_201 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="340-340"];
m4_238 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="409-409"];
m4_240 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="409-409"];
m4_241 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="413-413"];
m4_243 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="413-413"];
m4_245 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="417-417"];
m4_247 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="417-417"];
m4_263 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="439-439"];
m4_300 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="488-488"];
m4_403 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="677-682"];
m4_405 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="677-682"];
m4_423 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="714-714"];
m4_434 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="741-746"];
m4_436 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="741-746"];
m4_596 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="974-974"];
m4_598 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="974-974"];
m4_678 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="1100-1100"];
m4_680 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="1100-1100"];
m4_685 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="1107-1107"];
m4_687 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="1107-1107"];
m4_692 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="1114-1114"];
m4_694 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="1114-1114"];
m4_710 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="1129-1133"];
m4_726 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="1150-1154"];
m4_829 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="1348-1348"];
m4_831 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="1348-1348"];
m4_836 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="1356-1356"];
m4_838 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="1356-1356"];
m4_843 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="1364-1364"];
m4_845 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="1364-1364"];
m4_851 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="1372-1372"];
m4_853 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="1372-1372"];
m4_862 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="1383-1383"];
m4_864 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="1383-1383"];
m4_877 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="1402-1402"];
m4_879 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="1402-1402"];
m4_1030 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="1654-1654"];
m4_1032 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="1654-1654"];
m4_1033 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="1657-1657"];
m4_1035 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="1657-1657"];
m4_1036 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="1660-1660"];
m4_1038 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="1660-1660"];
m4_1039 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="1663-1663"];
m4_1041 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="1663-1663"];
m4_1042 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="1669-1669"];
m4_1044 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="1669-1669"];
m4_1067 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="1690-1690"];
m4_1069 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="1690-1690"];
m4_1070 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="1694-1694"];
m4_1072 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="1694-1694"];
m4_1073 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="1703-1703"];
m4_1075 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="1703-1703"];
m4_1105 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="1732-1732"];
m4_1107 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="1732-1732"];
m4_1108 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="1743-1743"];
m4_1110 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="1743-1743"];
m4_1285 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="1994-1994"];
m4_1361 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="2104-2104"];
m4_1363 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="2104-2104"];
m4_1378 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="2130-2130"];
m4_1380 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="2130-2130"];
m4_1397 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="2158-2158"];
m4_1399 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="2158-2158"];
m4_1404 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="2167-2167"];
m4_1406 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="2167-2167"];
m4_1411 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="2175-2175"];
m4_1413 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="2175-2175"];
m4_1418 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="2184-2184"];
m4_1420 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="2184-2184"];
m4_1432 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="2204-2204"];
m4_1434 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="2204-2204"];
m4_1439 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="2212-2212"];
m4_1441 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="2212-2212"];
m4_1512 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="2321-2321"];
m4_1614 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="2473-2473"];
m4_1619 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="2481-2481"];
m4_1621 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="2481-2481"];
m4_1626 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="2489-2489"];
m4_1628 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="2489-2489"];
m4_1633 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="2497-2497"];
m4_1635 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="2497-2497"];
m4_1640 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="2505-2505"];
m4_1642 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="2505-2505"];
m4_1647 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="2513-2513"];
m4_1649 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="2513-2513"];
m4_1792 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="2763-2763"];
m4_1794 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="2763-2763"];
m4_1800 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="2772-2772"];
m4_1802 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="2772-2772"];
m4_1831 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="2818-2818"];
m4_1833 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="2818-2818"];
m4_1868 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="2870-2870"];
m4_1887 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="2901-2901"];
m4_1889 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="2901-2901"];
m4_1908 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="2932-2932"];
m4_1910 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="2932-2932"];
m4_1943 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="2977-2980"];
m4_1951 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="2992-2995"];
m4_1953 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="2992-2995"];
m4_1958 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="3006-3009"];
m4_1960 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="3006-3009"];
m4_1965 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="3017-3020"];
m4_1967 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="3017-3020"];
m4_1973 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="3028-3031"];
m4_1975 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="3028-3031"];
m4_1986 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="3041-3044"];
m4_1995 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="3057-3060"];
m4_1997 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="3057-3060"];
m4_2028 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="3103-3106"];
m4_2030 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="3103-3106"];
m4_2031 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="3108-3111"];
m4_2033 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="3108-3111"];
m4_2036 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="3113-3116"];
m4_2254 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="3468-3468"];
m4_2256 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="3468-3468"];
m4_2342 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="3625-3625"];
m4_2344 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="3625-3625"];
m4_2358 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="3645-3645"];
m4_2360 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="3645-3645"];
m4_2372 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="3666-3666"];
m4_2374 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="3666-3666"];
m4_2388 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="3686-3686"];
m4_2390 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="3686-3686"];
m4_2396 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="3696-3696"];
m4_2398 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="3696-3696"];
m4_2404 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="3706-3706"];
m4_2406 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="3706-3706"];
m4_2412 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="3716-3716"];
m4_2414 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="3716-3716"];
m4_2420 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="3726-3726"];
m4_2422 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="3726-3726"];
m4_2452 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="3770-3770"];
m4_2454 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="3770-3770"];
m4_2507 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="3850-3850"];
m4_2509 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="3850-3850"];
m4_2541 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="3866-3866"];
m4_2544 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="3884-3884"];
m4_2663 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="4041-4041"];
m4_2665 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="4041-4041"];
m4_2666 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="4042-4042"];
m4_2668 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="4042-4042"];
m4_2669 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="4051-4051"];
m4_2671 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="4051-4051"];
m4_2672 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="4060-4060"];
m4_2674 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="4060-4060"];
m4_2675 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="4061-4061"];
m4_2677 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="4061-4061"];
m4_2678 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="4062-4062"];
m4_2680 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="4062-4062"];
m4_2706 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="4113-4119"];
m4_2777 [cluster="lambda expression", file="JsonSerializerTest.cs", label="var bytes = new UTF8Encoding().GetBytes(jsonString)", span="4194-4194"];
m4_2779 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Console.WriteLine(''server send: '' + bytes.Length)", span="4196-4196"];
m4_2776 [cluster="lambda expression", file="JsonSerializerTest.cs", label="var jsonString = ''[\r\n'' + String.Join('','', Enumerable.Repeat(''  \''testdata\''\r\n'', jsonArrayElementsCount).ToArray()) + '']''", span="4193-4193"];
m4_2778 [cluster="lambda expression", file="JsonSerializerTest.cs", label="serverSocket.Send(bytes)", span="4195-4195"];
m4_2780 [cluster="lambda expression", file="JsonSerializerTest.cs", label="clientReceivedEvent.WaitOne()", span="4199-4199"];
m4_2774 [cluster="lambda expression", file="JsonSerializerTest.cs", label="serverStartedEvent.Set()", span="4189-4189"];
m4_2775 [cluster="lambda expression", file="JsonSerializerTest.cs", label="var serverSocket = server.AcceptSocket()", span="4191-4191"];
m4_2772 [cluster="lambda expression", file="JsonSerializerTest.cs", label="var server = new TcpListener(IPAddress.Parse(''0.0.0.0''), port)", span="4186-4186"];
m4_2773 [cluster="lambda expression", file="JsonSerializerTest.cs", label="server.Start()", span="4187-4187"];
m4_2781 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="4184-4201"];
m4_2640 [cluster="System.DateTimeOffset.DateTimeOffset(long, System.TimeSpan)", file="JsonSerializerTest.cs", label="Entry System.DateTimeOffset.DateTimeOffset(long, System.TimeSpan)", span="0-0"];
m4_1690 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", span="2592-2592"];
m4_1698 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2616-2616"];
m4_1692 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2605-2605"];
m4_1697 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2615-2615"];
m4_1699 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonSerializerTest.cs", label="Assert.IsFalse(reader.Read())", span="2618-2618"];
m4_1691 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonSerializerTest.cs", label="string json = @''/*comment*/ { /*comment*/\r\n        ''''Name'''': /*comment*/ ''''Apple'''' /*comment*/, /*comment*/\r\n        ''''ExpiryDate'''': ''''\/Date(1230422400000)\/'''',\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''': /*comment*/ [ /*comment*/\r\n          ''''Small'''', /*comment*/\r\n          ''''Medium'''' /*comment*/,\r\n          /*comment*/ ''''Large''''\r\n        /*comment*/ ] /*comment*/\r\n      } /*comment*/''", span="2594-2603"];
m4_1693 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonSerializerTest.cs", label="int i = 0", span="2610-2610"];
m4_1695 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2612-2612"];
m4_1694 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonSerializerTest.cs", label="i < 26", span="2610-2610"];
m4_1696 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonSerializerTest.cs", label="i++", span="2610-2610"];
m4_1700 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", span="2592-2592"];
m4_2094 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", span="3208-3208"];
m4_2098 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="3222-3222"];
m4_2100 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="3225-3225"];
m4_2102 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="3228-3228"];
m4_2104 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="3231-3231"];
m4_2105 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Name'', reader.Value)", span="3232-3232"];
m4_2107 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="3235-3235"];
m4_2109 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="3238-3238"];
m4_2110 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, reader.Value)", span="3239-3239"];
m4_2112 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="3242-3242"];
m4_2114 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="3245-3245"];
m4_2116 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="3248-3248"];
m4_2117 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''ExpiryDate'', reader.Value)", span="3249-3249"];
m4_2119 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="3252-3252"];
m4_2121 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="3255-3255"];
m4_2122 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(5, reader.LineNumber)", span="3256-3256"];
m4_2123 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Date'', reader.Value)", span="3257-3257"];
m4_2125 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="3260-3260"];
m4_2127 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="3263-3263"];
m4_2129 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="3266-3266"];
m4_2131 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="3269-3269"];
m4_2096 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="3219-3219"];
m4_2097 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3221-3221"];
m4_2099 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3224-3224"];
m4_2101 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3227-3227"];
m4_2103 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3230-3230"];
m4_2106 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3234-3234"];
m4_2108 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3237-3237"];
m4_2111 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3241-3241"];
m4_2113 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3244-3244"];
m4_2115 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3247-3247"];
m4_2118 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3251-3251"];
m4_2120 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3254-3254"];
m4_2124 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3259-3259"];
m4_2126 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3262-3262"];
m4_2128 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3265-3265"];
m4_2130 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3268-3268"];
m4_2095 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSerializerTest.cs", label="string json = @''/*comment*/{/*comment*/Name:/*comment*/true/*comment*/,/*comment*/\r\n        ''''ExpiryDate'''':/*comment*/new\r\n'' + StringUtils.LineFeed +\r\n                          @''Date\r\n(/*comment*/null/*comment*/),\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''':/*comment*/[/*comment*/\r\n          ''''Small''''/*comment*/]/*comment*/}/*comment*/''", span="3210-3217"];
m4_2132 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", span="3208-3208"];
m4_2455 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", span="3774-3774"];
m4_2458 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''6,0221418E+23'', d.ToString(new CultureInfo(''fr-FR'')))", span="3780-3780"];
m4_2459 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''602214180000000000000000'', d.ToString(''0.#############################################################################''))", span="3781-3781"];
m4_2464 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3790-3790"];
m4_2465 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0d, reader.Value)", span="3791-3791"];
m4_2467 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3794-3794"];
m4_2468 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0d, reader.Value)", span="3795-3795"];
m4_2470 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3798-3798"];
m4_2471 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0.0000025d, reader.Value)", span="3799-3799"];
m4_2473 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3802-3802"];
m4_2474 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3000000000d, reader.Value)", span="3803-3803"];
m4_2476 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3806-3806"];
m4_2477 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSerializerTest.cs", label="Assert.AreEqual(602214180000000000000000d, reader.Value)", span="3807-3807"];
m4_2482 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3816-3816"];
m4_2483 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0m, reader.Value)", span="3817-3817"];
m4_2485 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3820-3820"];
m4_2486 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0m, reader.Value)", span="3821-3821"];
m4_2488 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3824-3824"];
m4_2489 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0.0000025m, reader.Value)", span="3825-3825"];
m4_2491 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3828-3828"];
m4_2492 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3000000000m, reader.Value)", span="3829-3829"];
m4_2494 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3832-3832"];
m4_2495 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSerializerTest.cs", label="Assert.AreEqual(602214180000000000000000m, reader.Value)", span="3833-3833"];
m4_2461 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3785-3785"];
m4_2479 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSerializerTest.cs", label="reader = new JsonTextReader(new StringReader(json))", span="3811-3811"];
m4_2457 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSerializerTest.cs", label="d = Convert.ToDouble(''6.0221418e23'', CultureInfo.InvariantCulture)", span="3778-3778"];
m4_2460 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSerializerTest.cs", label="string json = @''[0e-10,0E-10,0.25e-5,0.3e10,6.0221418e23]''", span="3783-3783"];
m4_2463 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSerializerTest.cs", label="reader.Read()", span="3789-3789"];
m4_2466 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSerializerTest.cs", label="reader.Read()", span="3793-3793"];
m4_2469 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSerializerTest.cs", label="reader.Read()", span="3797-3797"];
m4_2472 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSerializerTest.cs", label="reader.Read()", span="3801-3801"];
m4_2475 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSerializerTest.cs", label="reader.Read()", span="3805-3805"];
m4_2478 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSerializerTest.cs", label="reader.Read()", span="3809-3809"];
m4_2481 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSerializerTest.cs", label="reader.ReadAsDecimal()", span="3815-3815"];
m4_2484 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSerializerTest.cs", label="reader.ReadAsDecimal()", span="3819-3819"];
m4_2487 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSerializerTest.cs", label="reader.ReadAsDecimal()", span="3823-3823"];
m4_2490 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSerializerTest.cs", label="reader.ReadAsDecimal()", span="3827-3827"];
m4_2493 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSerializerTest.cs", label="reader.ReadAsDecimal()", span="3831-3831"];
m4_2496 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSerializerTest.cs", label="reader.Read()", span="3835-3835"];
m4_2462 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSerializerTest.cs", label="reader.Read()", span="3787-3787"];
m4_2480 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSerializerTest.cs", label="reader.Read()", span="3813-3813"];
m4_2456 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSerializerTest.cs", label="double d", span="3776-3776"];
m4_2497 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", span="3774-3774"];
m4_1428 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", span="2200-2200"];
m4_1429 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[1''))", span="2202-2202"];
m4_1430 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBytes(); }, ''Unexpected end when reading bytes. Path '[0]', line 1, position 2.'')", span="2204-2204"];
m4_1431 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", span="2200-2200"];
m4_2796 [cluster="Newtonsoft.Json.Tests.UnmanagedResourceFakingJsonReader.CreateAndDispose()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.UnmanagedResourceFakingJsonReader.CreateAndDispose()", span="4252-4252"];
m4_2799 [cluster="Newtonsoft.Json.Tests.UnmanagedResourceFakingJsonReader.CreateAndDispose()", file="JsonSerializerTest.cs", label="((IDisposable)new UnmanagedResourceFakingJsonReader()).Dispose()", span="4254-4254"];
m4_2800 [cluster="Newtonsoft.Json.Tests.UnmanagedResourceFakingJsonReader.CreateAndDispose()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.UnmanagedResourceFakingJsonReader.CreateAndDispose()", span="4252-4252"];
m4_1859 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Failure()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Failure()", span="2863-2863"];
m4_1863 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Failure()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1d, reader.ReadAsDouble())", span="2873-2873"];
m4_1860 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Failure()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(''['Trump',1]''))", span="2865-2865"];
m4_1862 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Failure()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                () => { reader.ReadAsDouble(); },\r\n                ''Could not convert string to double: Trump. Path '[0]', line 1, position 8.'')", span="2869-2871"];
m4_1864 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Failure()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2874-2874"];
m4_1861 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Failure()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2867-2867"];
m4_1865 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Failure()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Failure()", span="2863-2863"];
m4_1934 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNumberValue_CommaErrors()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNumberValue_CommaErrors()", span="2972-2972"];
m4_1938 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNumberValue_CommaErrors()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, reader.ReadAsInt32())", span="2982-2982"];
m4_1935 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNumberValue_CommaErrors()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(''[,1]''))", span="2974-2974"];
m4_1937 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNumberValue_CommaErrors()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                reader.ReadAsInt32();\r\n            }, ''Unexpected character encountered while parsing value: ,. Path '[0]', line 1, position 2.'')", span="2977-2980"];
m4_1939 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNumberValue_CommaErrors()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2983-2983"];
m4_1936 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNumberValue_CommaErrors()", file="JsonSerializerTest.cs", label="reader.Read()", span="2975-2975"];
m4_1940 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNumberValue_CommaErrors()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNumberValue_CommaErrors()", span="2972-2972"];
m4_1152 [cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="406-406"];
m4_1356 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", span="2098-2098"];
m4_1357 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[}''))", span="2100-2100"];
m4_1358 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="JsonSerializerTest.cs", label="reader.Read()", span="2102-2102"];
m4_1359 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected character encountered while parsing value: }. Path '', line 1, position 1.'')", span="2104-2104"];
m4_1360 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", span="2098-2098"];
m4_2383 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_BadData()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_BadData()", span="3680-3680"];
m4_2385 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_BadData()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3684-3684"];
m4_2384 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_BadData()", file="JsonSerializerTest.cs", label="string json = @''pie''", span="3682-3682"];
m4_2386 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_BadData()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsDouble(); }, ''Unexpected character encountered while parsing value: p. Path '', line 1, position 1.'')", span="3686-3686"];
m4_2387 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_BadData()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_BadData()", span="3680-3680"];
m4_334 [cluster="System.Globalization.StringInfo.StringInfo(string)", file="JsonSerializerTest.cs", label="Entry System.Globalization.StringInfo.StringInfo(string)", span="0-0"];
m4_22 [cluster="System.IO.StringReader.StringReader(string)", file="JsonSerializerTest.cs", label="Entry System.IO.StringReader.StringReader(string)", span="0-0"];
m4_1527 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", span="2347-2347"];
m4_1531 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2354-2354"];
m4_1533 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2357-2357"];
m4_1535 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2360-2360"];
m4_1536 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2361-2361"];
m4_1537 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(-6).Add(TimeSpan.FromMinutes(-31))), reader.Value)", span="2362-2362"];
m4_1539 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2365-2365"];
m4_1529 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2351-2351"];
m4_1530 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2353-2353"];
m4_1532 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2356-2356"];
m4_1534 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonSerializerTest.cs", label="reader.ReadAsDateTimeOffset()", span="2359-2359"];
m4_1538 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2364-2364"];
m4_1528 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonSerializerTest.cs", label="string json = @''{''''Offset'''':''''\/Date(946708260000-0631)\/''''}''", span="2349-2349"];
m4_1540 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", span="2347-2347"];
m4_429 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", span="735-735"];
m4_431 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="739-739"];
m4_430 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", file="JsonSerializerTest.cs", label="string json = @'''hi' a''", span="737-737"];
m4_432 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                while (reader.Read())\r\n                {\r\n                }\r\n            }, ''Additional text encountered after finished reading JSON content: a. Path '', line 1, position 5.'')", span="741-746"];
m4_433 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", span="735-735"];
m4_606 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", span="988-988"];
m4_622 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual((long)i, reader.Value)", span="1007-1007"];
m4_617 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1002-1002"];
m4_621 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="1006-1006"];
m4_619 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonSerializerTest.cs", label="int i = 0", span="1004-1004"];
m4_623 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonSerializerTest.cs", label="i++", span="1004-1004"];
m4_616 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonSerializerTest.cs", label="string json = sw.ToString()", span="1000-1000"];
m4_618 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="1003-1003"];
m4_624 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="1009-1009"];
m4_625 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonSerializerTest.cs", label="Assert.IsFalse(reader.Read())", span="1010-1010"];
m4_620 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonSerializerTest.cs", label="i < valueCount", span="1004-1004"];
m4_608 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonSerializerTest.cs", label="StringWriter sw = new StringWriter()", span="991-991"];
m4_615 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonSerializerTest.cs", label="writer.WriteEndArray()", span="998-998"];
m4_607 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonSerializerTest.cs", label="int valueCount = 10000", span="990-990"];
m4_609 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonSerializerTest.cs", label="JsonTextWriter writer = new JsonTextWriter(sw)", span="992-992"];
m4_612 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonSerializerTest.cs", label="i < valueCount", span="994-994"];
m4_610 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonSerializerTest.cs", label="writer.WriteStartArray()", span="993-993"];
m4_613 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonSerializerTest.cs", label="writer.WriteValue(i)", span="996-996"];
m4_611 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonSerializerTest.cs", label="int i = 0", span="994-994"];
m4_614 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonSerializerTest.cs", label="i++", span="994-994"];
m4_626 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", span="988-988"];
m4_1484 [cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime, System.TimeSpan)", file="JsonSerializerTest.cs", label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime, System.TimeSpan)", span="0-0"];
m4_1501 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", span="2309-2309"];
m4_1505 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2316-2316"];
m4_1507 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2319-2319"];
m4_1503 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2313-2313"];
m4_1504 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2315-2315"];
m4_1506 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2318-2318"];
m4_1508 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsDateTimeOffset(); }, ''Could not convert string to DateTimeOffset: blablahbla. Path 'Offset', line 1, position 22.'')", span="2321-2321"];
m4_1502 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonSerializerTest.cs", label="string json = @''{''''Offset'''':''''blablahbla''''}''", span="2311-2311"];
m4_1509 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", span="2309-2309"];
m4_1457 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", span="2243-2243"];
m4_1461 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2250-2250"];
m4_1463 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2253-2253"];
m4_1465 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2256-2256"];
m4_1466 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonSerializerTest.cs", label="Assert.AreEqual(11806310474565, reader.Value)", span="2257-2257"];
m4_1468 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2260-2260"];
m4_1459 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2247-2247"];
m4_1460 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2249-2249"];
m4_1462 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2252-2252"];
m4_1464 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2255-2255"];
m4_1467 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2259-2259"];
m4_1458 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonSerializerTest.cs", label="string json = @''{''''text'''':0xabcdef12345}''", span="2245-2245"];
m4_1469 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", span="2243-2243"];
m4_1513 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", span="2325-2325"];
m4_1517 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2332-2332"];
m4_1519 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2335-2335"];
m4_1521 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2338-2338"];
m4_1522 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2339-2339"];
m4_1523 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6)), reader.Value)", span="2340-2340"];
m4_1525 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2343-2343"];
m4_1515 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2329-2329"];
m4_1516 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2331-2331"];
m4_1518 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2334-2334"];
m4_1520 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonSerializerTest.cs", label="reader.ReadAsDateTimeOffset()", span="2337-2337"];
m4_1524 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2342-2342"];
m4_1514 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonSerializerTest.cs", label="string json = ''{\''Offset\'':\''\\/Date(946663200000+06)\\/\''}''", span="2327-2327"];
m4_1526 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", span="2325-2325"];
m4_106 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_Base64AndGuid()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_Base64AndGuid()", span="212-212"];
m4_110 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_Base64AndGuid()", file="JsonSerializerTest.cs", label="CollectionAssert.AreEqual(expected, data)", span="218-218"];
m4_114 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_Base64AndGuid()", file="JsonSerializerTest.cs", label="CollectionAssert.AreEqual(expected, data)", span="224-224"];
m4_107 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_Base64AndGuid()", file="JsonSerializerTest.cs", label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader('''AAAAAAAAAAAAAAAAAAAAAAAAAAABAAAA'''))", span="214-214"];
m4_111 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_Base64AndGuid()", file="JsonSerializerTest.cs", label="jsonTextReader = new JsonTextReader(new StringReader('''AAAAAAAA-AAAA-AAAA-AAAA-AAAAAAABAAAA'''))", span="220-220"];
m4_108 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_Base64AndGuid()", file="JsonSerializerTest.cs", label="byte[] data = jsonTextReader.ReadAsBytes()", span="215-215"];
m4_109 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_Base64AndGuid()", file="JsonSerializerTest.cs", label="byte[] expected = Convert.FromBase64String(''AAAAAAAAAAAAAAAAAAAAAAAAAAABAAAA'')", span="216-216"];
m4_112 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_Base64AndGuid()", file="JsonSerializerTest.cs", label="data = jsonTextReader.ReadAsBytes()", span="221-221"];
m4_113 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_Base64AndGuid()", file="JsonSerializerTest.cs", label="expected = new Guid(''AAAAAAAA-AAAA-AAAA-AAAA-AAAAAAABAAAA'').ToByteArray()", span="222-222"];
m4_115 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_Base64AndGuid()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_Base64AndGuid()", span="212-212"];
m4_359 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", span="591-591"];
m4_361 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(ms))", span="594-594"];
m4_366 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonSerializerTest.cs", label="reader = new JsonTextReader(new StreamReader(ms)) { CloseInput = false }", span="601-601"];
m4_360 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonSerializerTest.cs", label="MemoryStream ms = new MemoryStream()", span="593-593"];
m4_362 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonSerializerTest.cs", label="Assert.IsTrue(ms.CanRead)", span="596-596"];
m4_363 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonSerializerTest.cs", label="reader.Close()", span="597-597"];
m4_365 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonSerializerTest.cs", label="ms = new MemoryStream()", span="600-600"];
m4_367 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonSerializerTest.cs", label="Assert.IsTrue(ms.CanRead)", span="603-603"];
m4_368 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonSerializerTest.cs", label="reader.Close()", span="604-604"];
m4_369 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonSerializerTest.cs", label="Assert.IsTrue(ms.CanRead)", span="605-605"];
m4_364 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonSerializerTest.cs", label="Assert.IsFalse(ms.CanRead)", span="598-598"];
m4_370 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", span="591-591"];
m4_1393 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", span="2154-2154"];
m4_1394 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''new Date()''))", span="2156-2156"];
m4_1395 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsDecimal(); }, ''Unexpected character encountered while parsing value: e. Path '', line 1, position 2.'')", span="2158-2158"];
m4_1396 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", span="2154-2154"];
m4_2586 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", span="3962-3962"];
m4_2592 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc), reader.Value)", span="3971-3971"];
m4_2593 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(DateTime), reader.ValueType)", span="3972-3972"];
m4_2595 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc), reader.Value)", span="3974-3974"];
m4_2596 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(DateTime), reader.ValueType)", span="3975-3975"];
m4_2602 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTimeOffset(DateTimeUtils.InitialJavaScriptDateTicks, TimeSpan.Zero), reader.Value)", span="3984-3984"];
m4_2603 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="3985-3985"];
m4_2605 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTimeOffset(DateTimeUtils.InitialJavaScriptDateTicks, TimeSpan.Zero), reader.Value)", span="3987-3987"];
m4_2606 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="3988-3988"];
m4_2612 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''1970-01-01T00:00:00Z'', reader.Value)", span="3997-3997"];
m4_2613 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(string), reader.ValueType)", span="3998-3998"];
m4_2615 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''/Date(0)/'', reader.Value)", span="4000-4000"];
m4_2616 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(string), reader.ValueType)", span="4001-4001"];
m4_2622 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTimeOffset(DateTimeUtils.InitialJavaScriptDateTicks, TimeSpan.Zero), reader.Value)", span="4010-4010"];
m4_2623 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="4011-4011"];
m4_2625 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTimeOffset(DateTimeUtils.InitialJavaScriptDateTicks, TimeSpan.Zero), reader.Value)", span="4013-4013"];
m4_2626 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="4014-4014"];
m4_2632 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc), reader.Value)", span="4022-4022"];
m4_2633 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(DateTime), reader.ValueType)", span="4023-4023"];
m4_2635 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc), reader.Value)", span="4025-4025"];
m4_2636 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(DateTime), reader.ValueType)", span="4026-4026"];
m4_2588 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3966-3966"];
m4_2598 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerTest.cs", label="reader = new JsonTextReader(new StringReader(json))", span="3979-3979"];
m4_2608 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerTest.cs", label="reader = new JsonTextReader(new StringReader(json))", span="3992-3992"];
m4_2618 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerTest.cs", label="reader = new JsonTextReader(new StringReader(json))", span="4005-4005"];
m4_2628 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerTest.cs", label="reader = new JsonTextReader(new StringReader(json))", span="4017-4017"];
m4_2589 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerTest.cs", label="reader.DateParseHandling = Json.DateParseHandling.DateTime", span="3967-3967"];
m4_2591 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3970-3970"];
m4_2594 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3973-3973"];
m4_2597 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3976-3976"];
m4_2601 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3983-3983"];
m4_2604 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3986-3986"];
m4_2607 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3989-3989"];
m4_2611 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3996-3996"];
m4_2614 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3999-3999"];
m4_2617 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="4002-4002"];
m4_2621 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerTest.cs", label="reader.ReadAsDateTimeOffset()", span="4009-4009"];
m4_2624 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerTest.cs", label="reader.ReadAsDateTimeOffset()", span="4012-4012"];
m4_2627 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="4015-4015"];
m4_2631 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerTest.cs", label="reader.ReadAsDateTime()", span="4021-4021"];
m4_2634 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerTest.cs", label="reader.ReadAsDateTime()", span="4024-4024"];
m4_2637 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="4027-4027"];
m4_2587 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerTest.cs", label="string json = @''[''''1970-01-01T00:00:00Z'''',''''\/Date(0)\/'''']''", span="3964-3964"];
m4_2590 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3969-3969"];
m4_2599 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerTest.cs", label="reader.DateParseHandling = Json.DateParseHandling.DateTimeOffset", span="3980-3980"];
m4_2600 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3982-3982"];
m4_2609 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerTest.cs", label="reader.DateParseHandling = Json.DateParseHandling.None", span="3993-3993"];
m4_2610 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3995-3995"];
m4_2619 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerTest.cs", label="reader.DateParseHandling = Json.DateParseHandling.DateTime", span="4006-4006"];
m4_2620 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="4008-4008"];
m4_2629 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerTest.cs", label="reader.DateParseHandling = Json.DateParseHandling.DateTimeOffset", span="4018-4018"];
m4_2630 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="4020-4020"];
m4_2638 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", span="3962-3962"];
m4_592 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfString()", span="970-970"];
m4_593 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfString()", file="JsonSerializerTest.cs", label="JsonReader reader = new JsonTextReader(new StringReader('''hi''))", span="972-972"];
m4_594 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfString()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unterminated string. Expected delimiter: '. Path '', line 1, position 3.'')", span="974-974"];
m4_595 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfString()", span="970-970"];
m4_1787 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", span="2758-2758"];
m4_1789 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2761-2761"];
m4_1788 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="JsonSerializerTest.cs", label="string json = ''new Dat''", span="2760-2760"];
m4_1790 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected end while parsing constructor. Path '', line 1, position 7.'')", span="2763-2763"];
m4_1791 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", span="2758-2758"];
m4_2062 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", span="3158-3158"];
m4_2066 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="3165-3165"];
m4_2068 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="3168-3168"];
m4_2069 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, reader.ReadAsInt32())", span="3170-3170"];
m4_2070 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="3171-3171"];
m4_2071 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, reader.ReadAsInt32())", span="3173-3173"];
m4_2072 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="3174-3174"];
m4_2073 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''three'', reader.ReadAsString())", span="3176-3176"];
m4_2074 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="3177-3177"];
m4_2075 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''four'', reader.ReadAsString())", span="3179-3179"];
m4_2076 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="3180-3180"];
m4_2077 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, reader.ReadAsString())", span="3182-3182"];
m4_2078 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="3183-3183"];
m4_2079 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, reader.ReadAsInt32())", span="3185-3185"];
m4_2080 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="3186-3186"];
m4_2081 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3.99m, reader.ReadAsDecimal())", span="3188-3188"];
m4_2082 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3189-3189"];
m4_2083 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1.1m, reader.ReadAsDecimal())", span="3191-3191"];
m4_2084 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3192-3192"];
m4_2086 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Bytes, reader.TokenType)", span="3195-3195"];
m4_2088 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="3198-3198"];
m4_2090 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="3201-3201"];
m4_2091 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, reader.ReadAsInt32())", span="3203-3203"];
m4_2092 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="3204-3204"];
m4_2064 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="3162-3162"];
m4_2065 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3164-3164"];
m4_2067 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3167-3167"];
m4_2085 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonSerializerTest.cs", label="CollectionAssert.AreEquivalent(new byte[0], reader.ReadAsBytes())", span="3194-3194"];
m4_2087 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3197-3197"];
m4_2089 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3200-3200"];
m4_2063 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonSerializerTest.cs", label="string json = @''/*comment*/[/*comment*/1/*comment*/,2,/*comment*//*comment*/''''three''''/*comment*/,''''four''''/*comment*/,null,/*comment*/null,3.99,1.1/*comment*/,''/*comment*/]/*comment*/''", span="3160-3160"];
m4_2093 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", span="3158-3158"];
m4_1486 [cluster="System.TimeSpan.FromHours(double)", file="JsonSerializerTest.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m4_335 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", span="544-544"];
m4_336 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''ABC \ud800\udc00 DEF'', ReadString(''ABC \\ud800\\udc00 DEF''))", span="547-547"];
m4_337 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''ABC \ufffd\ufffd DEF'', ReadString(''ABC \\ud800\\ud800 DEF''))", span="550-550"];
m4_338 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''ABC \ufffd\ufffd\u1234 DEF'', ReadString(''ABC \\ud800\\ud800\\u1234 DEF''))", span="553-553"];
m4_339 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''ABC \ufffd\ufffd\ufffd DEF'', ReadString(''ABC \\ud800\\ud800\\ud800 DEF''))", span="556-556"];
m4_340 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''ABC \ufffd\ud800\udc00 DEF'', ReadString(''ABC \\ud800\\ud800\\udc00 DEF''))", span="559-559"];
m4_341 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''ABC \ufffd'', ReadString(''ABC \\ud800''))", span="562-562"];
m4_342 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''ABC \ufffd DEF'', ReadString(''ABC \\ud800 DEF''))", span="565-565"];
m4_343 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''ABC \ufffd\ufffd DEF'', ReadString(''ABC \\udc00\\ud800 DEF''))", span="568-568"];
m4_344 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''\ufffd\ufffd\ufffd'', ReadString(''\udc00\ud800\ud800''))", span="571-571"];
m4_345 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''ABC \ufffd\b'', ReadString(''ABC \\ud800\\b''))", span="573-573"];
m4_346 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''ABC \ufffd '', ReadString(''ABC \\ud800 ''))", span="574-574"];
m4_347 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''ABC \b\ufffd'', ReadString(''ABC \\b\\ud800''))", span="575-575"];
m4_348 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", span="544-544"];
m4_1381 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", span="2135-2135"];
m4_1384 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="2140-2140"];
m4_1382 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''''))", span="2137-2137"];
m4_1383 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="JsonSerializerTest.cs", label="Assert.IsNull(reader.ReadAsDateTimeOffset())", span="2139-2139"];
m4_1385 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", span="2135-2135"];
m4_2798 [cluster="System.GC.WaitForPendingFinalizers()", file="JsonSerializerTest.cs", label="Entry System.GC.WaitForPendingFinalizers()", span="0-0"];
m4_2271 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", span="3496-3496"];
m4_2275 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="3503-3503"];
m4_2277 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="3506-3506"];
m4_2279 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="3509-3509"];
m4_2281 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="3512-3512"];
m4_2283 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="3515-3515"];
m4_2285 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="3518-3518"];
m4_2273 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3500-3500"];
m4_2274 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonSerializerTest.cs", label="reader.Read()", span="3502-3502"];
m4_2276 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonSerializerTest.cs", label="reader.Read()", span="3505-3505"];
m4_2278 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonSerializerTest.cs", label="reader.Read()", span="3508-3508"];
m4_2280 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonSerializerTest.cs", label="reader.Read()", span="3511-3511"];
m4_2282 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonSerializerTest.cs", label="reader.Read()", span="3514-3514"];
m4_2284 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonSerializerTest.cs", label="reader.Read()", span="3517-3517"];
m4_2272 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonSerializerTest.cs", label="string json = @''[0,1,2 , 3]''", span="3498-3498"];
m4_2286 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", span="3496-3496"];
m4_264 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", span="443-443"];
m4_269 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="451-451"];
m4_271 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1.0m, reader.Value)", span="454-454"];
m4_272 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="455-455"];
m4_273 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="456-456"];
m4_275 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1L, reader.Value)", span="459-459"];
m4_276 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(long), reader.ValueType)", span="460-460"];
m4_277 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="461-461"];
m4_279 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonSerializerTest.cs", label="Assert.AreEqual(9.9m, reader.Value)", span="464-464"];
m4_280 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="465-465"];
m4_281 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="466-466"];
m4_283 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonSerializerTest.cs", label="Assert.AreEqual(Convert.ToDecimal(1E-06), reader.Value)", span="469-469"];
m4_284 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="470-470"];
m4_285 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="471-471"];
m4_287 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="474-474"];
m4_266 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="447-447"];
m4_268 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="450-450"];
m4_270 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="453-453"];
m4_274 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="458-458"];
m4_278 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="463-463"];
m4_282 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="468-468"];
m4_286 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="473-473"];
m4_265 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonSerializerTest.cs", label="string json = ''[1.0,1,9.9,1E-06]''", span="445-445"];
m4_267 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonSerializerTest.cs", label="reader.FloatParseHandling = Json.FloatParseHandling.Decimal", span="448-448"];
m4_288 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", span="443-443"];
m4_1421 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", span="2189-2189"];
m4_1424 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, data.Length)", span="2194-2194"];
m4_1425 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, data[0])", span="2195-2195"];
m4_1426 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, data[1])", span="2196-2196"];
m4_1422 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[/*hi*/1/*hi*/,2/*hi*/]''))", span="2191-2191"];
m4_1423 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JsonSerializerTest.cs", label="byte[] data = reader.ReadAsBytes()", span="2193-2193"];
m4_1427 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", span="2189-2189"];
m4_2019 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_Numbers_NotString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_Numbers_NotString()", span="3098-3098"];
m4_2025 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_Numbers_NotString()", file="JsonSerializerTest.cs", label="Assert.AreEqual(56, reader.ReadAsInt32())", span="3118-3118"];
m4_2020 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_Numbers_NotString()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(''[56,56]''))", span="3100-3100"];
m4_2024 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_Numbers_NotString()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                reader.ReadAsDateTime();\r\n            }, ''Unexpected character encountered while parsing value: ,. Path '[0]', line 1, position 4.'')", span="3113-3116"];
m4_2026 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_Numbers_NotString()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3119-3119"];
m4_2021 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_Numbers_NotString()", file="JsonSerializerTest.cs", label="reader.Read()", span="3101-3101"];
m4_2022 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_Numbers_NotString()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                reader.ReadAsDateTime();\r\n            }, ''Unexpected character encountered while parsing value: 5. Path '', line 1, position 2.'')", span="3103-3106"];
m4_2023 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_Numbers_NotString()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                reader.ReadAsDateTime();\r\n            }, ''Unexpected character encountered while parsing value: 6. Path '', line 1, position 3.'')", span="3108-3111"];
m4_2027 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_Numbers_NotString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_Numbers_NotString()", span="3098-3098"];
m4_1976 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNumberValue_CommaErrors_Multiple()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNumberValue_CommaErrors_Multiple()", span="3035-3035"];
m4_1981 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNumberValue_CommaErrors_Multiple()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, reader.ReadAsInt32())", span="3046-3046"];
m4_1977 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNumberValue_CommaErrors_Multiple()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(''[1,,1]''))", span="3037-3037"];
m4_1980 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNumberValue_CommaErrors_Multiple()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                reader.ReadAsInt32();\r\n            }, ''Unexpected character encountered while parsing value: ,. Path '[1]', line 1, position 4.'')", span="3041-3044"];
m4_1982 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNumberValue_CommaErrors_Multiple()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3047-3047"];
m4_1978 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNumberValue_CommaErrors_Multiple()", file="JsonSerializerTest.cs", label="reader.Read()", span="3038-3038"];
m4_1979 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNumberValue_CommaErrors_Multiple()", file="JsonSerializerTest.cs", label="reader.ReadAsInt32()", span="3039-3039"];
m4_1983 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNumberValue_CommaErrors_Multiple()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNumberValue_CommaErrors_Multiple()", span="3035-3035"];
m4_2788 [cluster="string.Join(string, params string[])", file="JsonSerializerTest.cs", label="Entry string.Join(string, params string[])", span="0-0"];
m4_1710 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", span="2639-2639"];
m4_1714 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Date'', reader.Value)", span="2645-2645"];
m4_1715 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2646-2646"];
m4_1717 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2649-2649"];
m4_1712 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2642-2642"];
m4_1713 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2644-2644"];
m4_1716 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2648-2648"];
m4_1711 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonSerializerTest.cs", label="string json = ''new Date\n()''", span="2641-2641"];
m4_1718 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", span="2639-2639"];
m4_1296 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", span="2011-2011"];
m4_1300 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.StartArray, jsonReader.TokenType)", span="2017-2017"];
m4_1302 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="2020-2020"];
m4_1303 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonSerializerTest.cs", label="Assert.AreEqual(250L, jsonReader.Value)", span="2021-2021"];
m4_1305 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="2024-2024"];
m4_1306 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonSerializerTest.cs", label="Assert.AreEqual(250L, jsonReader.Value)", span="2025-2025"];
m4_1308 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="2028-2028"];
m4_1309 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonSerializerTest.cs", label="Assert.AreEqual(250L, jsonReader.Value)", span="2029-2029"];
m4_1311 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.EndArray, jsonReader.TokenType)", span="2032-2032"];
m4_1298 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonSerializerTest.cs", label="JsonTextReader jsonReader = new JsonTextReader(s)", span="2014-2014"];
m4_1297 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonSerializerTest.cs", label="StringReader s = new StringReader(@''[0372, 0xFA, 0XFA]'')", span="2013-2013"];
m4_1299 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonSerializerTest.cs", label="Assert.IsTrue(jsonReader.Read())", span="2016-2016"];
m4_1301 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonSerializerTest.cs", label="Assert.IsTrue(jsonReader.Read())", span="2019-2019"];
m4_1304 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonSerializerTest.cs", label="Assert.IsTrue(jsonReader.Read())", span="2023-2023"];
m4_1307 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonSerializerTest.cs", label="Assert.IsTrue(jsonReader.Read())", span="2027-2027"];
m4_1310 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonSerializerTest.cs", label="Assert.IsTrue(jsonReader.Read())", span="2031-2031"];
m4_1312 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonSerializerTest.cs", label="Assert.IsFalse(jsonReader.Read())", span="2034-2034"];
m4_1313 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", span="2011-2011"];
m4_358 [cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="JsonSerializerTest.cs", label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0"];
m4_954 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", span="1533-1533"];
m4_959 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1540-1540"];
m4_962 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="1543-1543"];
m4_966 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Bytes, reader.TokenType)", span="1547-1547"];
m4_968 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1549-1549"];
m4_957 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonSerializerTest.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''{num:1,data:''' + Convert.ToBase64String(helloWorldData) + @'''}''))", span="1538-1538"];
m4_958 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="1539-1539"];
m4_960 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="1541-1541"];
m4_961 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="1542-1542"];
m4_963 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="1544-1544"];
m4_965 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonSerializerTest.cs", label="CollectionAssert.AreEquivalent(helloWorldData, data)", span="1546-1546"];
m4_967 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="1548-1548"];
m4_969 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonSerializerTest.cs", label="Assert.IsFalse(reader.Read())", span="1551-1551"];
m4_956 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonSerializerTest.cs", label="byte[] helloWorldData = Encoding.UTF8.GetBytes(helloWorld)", span="1536-1536"];
m4_964 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonSerializerTest.cs", label="byte[] data = reader.ReadAsBytes()", span="1545-1545"];
m4_955 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonSerializerTest.cs", label="string helloWorld = ''Hello world!''", span="1535-1535"];
m4_970 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", span="1533-1533"];
m4_743 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", span="1180-1180"];
m4_747 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(long), reader.ValueType)", span="1186-1186"];
m4_753 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(BigInteger), reader.ValueType)", span="1195-1195"];
m4_745 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(i.ToString(CultureInfo.InvariantCulture)))", span="1184-1184"];
m4_751 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonSerializerTest.cs", label="reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)))", span="1192-1192"];
m4_746 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonSerializerTest.cs", label="reader.Read()", span="1185-1185"];
m4_748 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonSerializerTest.cs", label="int j = 1", span="1188-1188"];
m4_752 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonSerializerTest.cs", label="reader.Read()", span="1193-1193"];
m4_754 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonSerializerTest.cs", label="j++", span="1188-1188"];
m4_744 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonSerializerTest.cs", label="BigInteger i = new BigInteger(long.MinValue)", span="1182-1182"];
m4_750 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonSerializerTest.cs", label="BigInteger total = i + -j", span="1190-1190"];
m4_749 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonSerializerTest.cs", label="j < 1000", span="1188-1188"];
m4_755 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", span="1180-1180"];
m4_627 [cluster="System.IO.StringWriter.StringWriter()", file="JsonSerializerTest.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m4_2763 [cluster="System.Threading.ThreadPool.QueueUserWorkItem(System.Threading.WaitCallback)", file="JsonSerializerTest.cs", label="Entry System.Threading.ThreadPool.QueueUserWorkItem(System.Threading.WaitCallback)", span="0-0"];
m4_740 [cluster="BigInteger.cstr", file="JsonSerializerTest.cs", label="Entry BigInteger.cstr", span=""];
m4_1369 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", span="2117-2117"];
m4_1372 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="2122-2122"];
m4_1370 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''''))", span="2119-2119"];
m4_1371 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="JsonSerializerTest.cs", label="Assert.IsNull(reader.ReadAsBytes())", span="2121-2121"];
m4_1373 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", span="2117-2117"];
m4_1161 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", span="763-763"];
m4_2337 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean_AdditionalBadData()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean_AdditionalBadData()", span="3619-3619"];
m4_2339 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean_AdditionalBadData()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3623-3623"];
m4_2338 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean_AdditionalBadData()", file="JsonSerializerTest.cs", label="string json = @''falseeeee''", span="3621-3621"];
m4_2340 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean_AdditionalBadData()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBoolean(); }, ''Unexpected character encountered while parsing value: e. Path '', line 1, position 5.'')", span="3625-3625"];
m4_2341 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean_AdditionalBadData()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean_AdditionalBadData()", span="3619-3619"];
m4_1890 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Boolean_Failure()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Boolean_Failure()", span="2910-2910"];
m4_1891 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Boolean_Failure()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(''{\''Test1\'':false1}''))", span="2912-2912"];
m4_1892 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Boolean_Failure()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2914-2914"];
m4_1893 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Boolean_Failure()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2915-2915"];
m4_1894 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Boolean_Failure()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                () => { reader.ReadAsString(); },\r\n                ''Unexpected character encountered while parsing value: 1. Path 'Test1', line 1, position 14.'')", span="2917-2919"];
m4_1895 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Boolean_Failure()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2921-2921"];
m4_1896 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Boolean_Failure()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2922-2922"];
m4_1897 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Boolean_Failure()", file="JsonSerializerTest.cs", label="Assert.IsFalse(reader.Read())", span="2923-2923"];
m4_1898 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Boolean_Failure()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Boolean_Failure()", span="2910-2910"];
m4_1157 [cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="414-414"];
m4_2399 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_BadData()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_BadData()", span="3700-3700"];
m4_2401 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_BadData()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3704-3704"];
m4_2400 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_BadData()", file="JsonSerializerTest.cs", label="string json = @''pie''", span="3702-3702"];
m4_2402 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_BadData()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBytes(); }, ''Unexpected character encountered while parsing value: p. Path '', line 1, position 1.'')", span="3706-3706"];
m4_2403 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_BadData()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_BadData()", span="3700-3700"];
m4_846 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsBytes()", span="511-511"];
m4_1968 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", span="430-430"];
m4_605 [cluster="string.String(char, int)", file="JsonSerializerTest.cs", label="Entry string.String(char, int)", span="0-0"];
m4_1719 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", span="2653-2653"];
m4_1723 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2659-2659"];
m4_1725 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2662-2662"];
m4_1727 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2665-2665"];
m4_1729 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2668-2668"];
m4_1731 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2671-2671"];
m4_1733 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2674-2674"];
m4_1735 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2677-2677"];
m4_1721 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2656-2656"];
m4_1722 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2658-2658"];
m4_1724 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2661-2661"];
m4_1726 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2664-2664"];
m4_1728 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2667-2667"];
m4_1730 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2670-2670"];
m4_1732 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2673-2673"];
m4_1734 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2676-2676"];
m4_1720 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonSerializerTest.cs", label="string json = ''[,,, \n\r\n \0   \r  , ,    ]''", span="2655-2655"];
m4_1736 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", span="2653-2653"];
m4_2008 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_CommaErrors_Multiple()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_CommaErrors_Multiple()", span="3082-3082"];
m4_2013 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_CommaErrors_Multiple()", file="JsonSerializerTest.cs", label="Assert.AreEqual(string.Empty, reader.ReadAsString())", span="3093-3093"];
m4_2009 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_CommaErrors_Multiple()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(''['',,'']''))", span="3084-3084"];
m4_2012 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_CommaErrors_Multiple()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                reader.ReadAsString();\r\n            }, ''Unexpected character encountered while parsing value: ,. Path '[1]', line 1, position 5.'')", span="3088-3091"];
m4_2014 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_CommaErrors_Multiple()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3094-3094"];
m4_2010 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_CommaErrors_Multiple()", file="JsonSerializerTest.cs", label="reader.Read()", span="3085-3085"];
m4_2011 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_CommaErrors_Multiple()", file="JsonSerializerTest.cs", label="reader.ReadAsInt32()", span="3086-3086"];
m4_2015 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_CommaErrors_Multiple()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_CommaErrors_Multiple()", span="3082-3082"];
m4_119 [cluster="System.Guid.ToByteArray()", file="JsonSerializerTest.cs", label="Entry System.Guid.ToByteArray()", span="0-0"];
m4_2249 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", span="3462-3462"];
m4_2251 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="3466-3466"];
m4_2250 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", file="JsonSerializerTest.cs", label="string json = @''/''", span="3464-3464"];
m4_2252 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected end while parsing comment. Path '', line 1, position 1.'')", span="3468-3468"];
m4_2253 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", span="3462-3462"];
m4_1842 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Null()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Null()", span="2835-2835"];
m4_1844 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Null()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, reader.ReadAsDouble())", span="2838-2838"];
m4_1843 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Null()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(''null''))", span="2837-2837"];
m4_1845 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Null()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Null()", span="2835-2835"];
m4_2407 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTime_BadData()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTime_BadData()", span="3710-3710"];
m4_2409 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTime_BadData()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3714-3714"];
m4_2408 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTime_BadData()", file="JsonSerializerTest.cs", label="string json = @''pie''", span="3712-3712"];
m4_2410 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTime_BadData()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsDateTime(); }, ''Unexpected character encountered while parsing value: p. Path '', line 1, position 1.'')", span="3716-3716"];
m4_2411 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTime_BadData()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTime_BadData()", span="3710-3710"];
m4_2797 [cluster="System.GC.Collect()", file="JsonSerializerTest.cs", label="Entry System.GC.Collect()", span="0-0"];
m4_2133 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", span="3273-3273"];
m4_2137 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="3298-3298"];
m4_2138 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''comment*//*hi*/'', reader.Value)", span="3299-3299"];
m4_2139 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, reader.LineNumber)", span="3300-3300"];
m4_2141 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, reader.LineNumber)", span="3303-3303"];
m4_2142 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="3304-3304"];
m4_2144 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="3307-3307"];
m4_2145 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, reader.LineNumber)", span="3308-3308"];
m4_2147 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="3311-3311"];
m4_2148 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Name'', reader.Value)", span="3312-3312"];
m4_2149 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, reader.LineNumber)", span="3313-3313"];
m4_2151 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="3316-3316"];
m4_2152 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, reader.LineNumber)", span="3317-3317"];
m4_2154 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="3320-3320"];
m4_2155 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, reader.Value)", span="3321-3321"];
m4_2156 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4, reader.LineNumber)", span="3322-3322"];
m4_2158 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="3325-3325"];
m4_2159 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''comment after true'', reader.Value)", span="3326-3326"];
m4_2160 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4, reader.LineNumber)", span="3327-3327"];
m4_2162 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="3330-3330"];
m4_2163 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''comment after comma'', reader.Value)", span="3331-3331"];
m4_2164 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(5, reader.LineNumber)", span="3332-3332"];
m4_2166 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="3335-3335"];
m4_2167 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''ExpiryDate'', reader.Value)", span="3336-3336"];
m4_2168 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(6, reader.LineNumber)", span="3337-3337"];
m4_2170 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="3340-3340"];
m4_2171 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(6, reader.LineNumber)", span="3341-3341"];
m4_2173 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="3344-3344"];
m4_2174 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(9, reader.LineNumber)", span="3345-3345"];
m4_2175 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Date'', reader.Value)", span="3346-3346"];
m4_2177 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="3349-3349"];
m4_2179 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="3352-3352"];
m4_2180 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(10, reader.LineNumber)", span="3353-3353"];
m4_2182 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="3356-3356"];
m4_2183 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(10, reader.LineNumber)", span="3357-3357"];
m4_2185 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="3360-3360"];
m4_2186 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(11, reader.LineNumber)", span="3361-3361"];
m4_2188 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="3364-3364"];
m4_2189 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Price'', reader.Value)", span="3365-3365"];
m4_2191 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3368-3368"];
m4_2193 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="3371-3371"];
m4_2194 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Sizes'', reader.Value)", span="3372-3372"];
m4_2196 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="3375-3375"];
m4_2198 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="3378-3378"];
m4_2200 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="3381-3381"];
m4_2202 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="3384-3384"];
m4_2204 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="3387-3387"];
m4_2206 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="3390-3390"];
m4_2208 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="3393-3393"];
m4_2210 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="3396-3396"];
m4_2212 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="3399-3399"];
m4_2213 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''comment '', reader.Value)", span="3400-3400"];
m4_2215 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="3403-3403"];
m4_2216 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''comment 1 '', reader.Value)", span="3404-3404"];
m4_2135 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="3295-3295"];
m4_2136 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3297-3297"];
m4_2140 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3302-3302"];
m4_2143 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3306-3306"];
m4_2146 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3310-3310"];
m4_2150 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3315-3315"];
m4_2153 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3319-3319"];
m4_2157 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3324-3324"];
m4_2161 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3329-3329"];
m4_2165 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3334-3334"];
m4_2169 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3339-3339"];
m4_2172 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3343-3343"];
m4_2176 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3348-3348"];
m4_2178 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3351-3351"];
m4_2181 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3355-3355"];
m4_2184 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3359-3359"];
m4_2187 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3363-3363"];
m4_2190 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3367-3367"];
m4_2192 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3370-3370"];
m4_2195 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3374-3374"];
m4_2197 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3377-3377"];
m4_2199 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3380-3380"];
m4_2201 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3383-3383"];
m4_2203 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3386-3386"];
m4_2205 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3389-3389"];
m4_2207 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3392-3392"];
m4_2209 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3395-3395"];
m4_2211 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3398-3398"];
m4_2214 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3402-3402"];
m4_2217 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerTest.cs", label="Assert.IsFalse(reader.Read())", span="3406-3406"];
m4_2134 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerTest.cs", label="string json = @''//comment*//*hi*/\r\n{//comment\r\nName://comment\r\ntrue//comment after true'' + StringUtils.CarriageReturn +\r\n                          @'',//comment after comma'' + StringUtils.CarriageReturnLineFeed +\r\n                          @''''''ExpiryDate''''://comment'' + StringUtils.LineFeed +\r\n                          @''new '' + StringUtils.LineFeed +\r\n                          @''Date\r\n(//comment\r\nnull//comment\r\n),\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''': //comment\r\n[//comment\r\n\r\n          ''''Small''''//comment\r\n]//comment\r\n}//comment \r\n//comment 1 ''", span="3275-3293"];
m4_2218 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", span="3273-3273"];
m4_1558 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", span="2391-2391"];
m4_1563 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2399-2399"];
m4_1565 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2402-2402"];
m4_1567 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2405-2405"];
m4_1568 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2406-2406"];
m4_1572 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2412-2412"];
m4_1570 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTime(2011, 1, 30, 0, 0, 0, DateTimeKind.Unspecified), dt.DateTime)", span="2409-2409"];
m4_1560 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2395-2395"];
m4_1562 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2398-2398"];
m4_1564 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2401-2401"];
m4_1566 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonSerializerTest.cs", label="reader.ReadAsDateTimeOffset()", span="2404-2404"];
m4_1569 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonSerializerTest.cs", label="DateTimeOffset dt = (DateTimeOffset)reader.Value", span="2408-2408"];
m4_1571 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2411-2411"];
m4_1559 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonSerializerTest.cs", label="string json = @''{''''Offset'''':''''1/30/2011''''}''", span="2393-2393"];
m4_1561 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonSerializerTest.cs", label="reader.Culture = new CultureInfo(''en-US'')", span="2396-2396"];
m4_1573 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", span="2391-2391"];
m4_629 [cluster="Newtonsoft.Json.JsonTextWriter.WriteStartArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteStartArray()", span="208-208"];
m4_128 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadMultilineString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadMultilineString()", span="241-241"];
m4_132 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadMultilineString()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.String, jsonTextReader.TokenType)", span="250-250"];
m4_133 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadMultilineString()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''first line\r\nsecond line\r\nthird line'', jsonTextReader.Value)", span="252-254"];
m4_130 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadMultilineString()", file="JsonSerializerTest.cs", label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="247-247"];
m4_131 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadMultilineString()", file="JsonSerializerTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="249-249"];
m4_129 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadMultilineString()", file="JsonSerializerTest.cs", label="string json = @''''''first line\r\nsecond line\r\nthird line''''''", span="243-245"];
m4_134 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadMultilineString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadMultilineString()", span="241-241"];
m4_1557 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="JsonSerializerTest.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m4_1159 [cluster="System.Text.StringBuilder.ToString()", file="JsonSerializerTest.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m4_202 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", span="349-349"];
m4_206 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.StartObject, jsonTextReader.TokenType)", span="358-358"];
m4_208 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, jsonTextReader.TokenType)", span="361-361"];
m4_212 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.EndObject, jsonTextReader.TokenType)", span="372-372"];
m4_204 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JsonSerializerTest.cs", label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="355-355"];
m4_205 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JsonSerializerTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="357-357"];
m4_207 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JsonSerializerTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="360-360"];
m4_209 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JsonSerializerTest.cs", label="jsonTextReader.ReadAsBytes()", span="365-365"];
m4_211 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JsonSerializerTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="371-371"];
m4_213 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JsonSerializerTest.cs", label="Assert.IsFalse(jsonTextReader.Read())", span="374-374"];
m4_203 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JsonSerializerTest.cs", label="string json = @''{\r\n    ChildId: '123'\r\n}''", span="351-353"];
m4_210 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JsonSerializerTest.cs", label=FormatException, span="367-367"];
m4_214 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", span="349-349"];
m4_176 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsInt32()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsInt32()", span="421-421"];
m4_356 [cluster="System.IO.MemoryStream.MemoryStream(byte[])", file="JsonSerializerTest.cs", label="Entry System.IO.MemoryStream.MemoryStream(byte[])", span="0-0"];
m4_2287 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", span="3523-3523"];
m4_2291 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonSerializerTest.cs", label="Assert.AreEqual('''', reader.Path)", span="3551-3551"];
m4_2292 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, reader.ReadAsBoolean())", span="3553-3553"];
m4_2293 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''[0]'', reader.Path)", span="3554-3554"];
m4_2294 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonSerializerTest.cs", label="Assert.AreEqual(false, reader.ReadAsBoolean())", span="3556-3556"];
m4_2295 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''[1]'', reader.Path)", span="3557-3557"];
m4_2296 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, reader.ReadAsBoolean())", span="3559-3559"];
m4_2297 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''[2]'', reader.Path)", span="3560-3560"];
m4_2298 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonSerializerTest.cs", label="Assert.AreEqual(false, reader.ReadAsBoolean())", span="3562-3562"];
m4_2299 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''[3]'', reader.Path)", span="3563-3563"];
m4_2300 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, reader.ReadAsBoolean())", span="3565-3565"];
m4_2301 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''[4]'', reader.Path)", span="3566-3566"];
m4_2302 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, reader.ReadAsBoolean())", span="3568-3568"];
m4_2303 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''[5]'', reader.Path)", span="3569-3569"];
m4_2304 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, reader.ReadAsBoolean())", span="3571-3571"];
m4_2305 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''[6]'', reader.Path)", span="3572-3572"];
m4_2306 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, reader.ReadAsBoolean())", span="3574-3574"];
m4_2307 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''[7]'', reader.Path)", span="3575-3575"];
m4_2308 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, reader.ReadAsBoolean())", span="3577-3577"];
m4_2309 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''[8]'', reader.Path)", span="3578-3578"];
m4_2310 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, reader.ReadAsBoolean())", span="3580-3580"];
m4_2311 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''[9]'', reader.Path)", span="3581-3581"];
m4_2312 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, reader.ReadAsBoolean())", span="3583-3583"];
m4_2313 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''[10]'', reader.Path)", span="3584-3584"];
m4_2314 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonSerializerTest.cs", label="Assert.AreEqual(false, reader.ReadAsBoolean())", span="3586-3586"];
m4_2315 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''[11]'', reader.Path)", span="3587-3587"];
m4_2316 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonSerializerTest.cs", label="Assert.AreEqual(false, reader.ReadAsBoolean())", span="3589-3589"];
m4_2317 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''[12]'', reader.Path)", span="3590-3590"];
m4_2318 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, reader.ReadAsBoolean())", span="3592-3592"];
m4_2319 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''[13]'', reader.Path)", span="3593-3593"];
m4_2320 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, reader.ReadAsBoolean())", span="3595-3595"];
m4_2321 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''[14]'', reader.Path)", span="3596-3596"];
m4_2322 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, reader.ReadAsBoolean())", span="3598-3598"];
m4_2323 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="3599-3599"];
m4_2324 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonSerializerTest.cs", label="Assert.AreEqual('''', reader.Path)", span="3600-3600"];
m4_2325 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, reader.ReadAsBoolean())", span="3602-3602"];
m4_2326 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="3603-3603"];
m4_2327 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonSerializerTest.cs", label="Assert.AreEqual('''', reader.Path)", span="3604-3604"];
m4_2289 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3545-3545"];
m4_2290 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="3550-3550"];
m4_2288 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonSerializerTest.cs", label="string json = @''[\r\n  1,\r\n  0,\r\n  1.1,\r\n  0.0,\r\n  0.000000000001,\r\n  9999999999,\r\n  -9999999999,\r\n  9999999999999999999999999999999999999999999999999999999999999999999999,\r\n  -9999999999999999999999999999999999999999999999999999999999999999999999,\r\n  'true',\r\n  'TRUE',\r\n  'false',\r\n  'FALSE',\r\n  // comment!\r\n  /* comment! */\r\n  '',\r\n  null\r\n]''", span="3525-3543"];
m4_2328 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", span="3523-3523"];
m4_1407 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", span="2171-2171"];
m4_1408 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''new Date()''))", span="2173-2173"];
m4_1409 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBytes(); }, ''Unexpected character encountered while parsing value: e. Path '', line 1, position 2.'')", span="2175-2175"];
m4_1410 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", span="2171-2171"];
m4_357 [cluster="System.Text.Encoding.GetBytes(string)", file="JsonSerializerTest.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m4_1851 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Hex()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Hex()", span="2849-2849"];
m4_1853 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Hex()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3405691582d, reader.ReadAsDouble())", span="2852-2852"];
m4_1852 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Hex()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(''0XCAFEBABE''))", span="2851-2851"];
m4_1854 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Hex()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Hex()", span="2849-2849"];
m4_1487 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", span="2287-2287"];
m4_1491 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2294-2294"];
m4_1493 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2297-2297"];
m4_1495 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2300-2300"];
m4_1496 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2301-2301"];
m4_1497 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(-6)), reader.Value)", span="2302-2302"];
m4_1499 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2305-2305"];
m4_1489 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2291-2291"];
m4_1490 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2293-2293"];
m4_1492 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2296-2296"];
m4_1494 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonSerializerTest.cs", label="reader.ReadAsDateTimeOffset()", span="2299-2299"];
m4_1498 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2304-2304"];
m4_1488 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonSerializerTest.cs", label="string json = @''{''''Offset'''':''''\/Date(946706400000-0600)\/''''}''", span="2289-2289"];
m4_1500 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", span="2287-2287"];
m4_1615 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", span="2477-2477"];
m4_1616 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''nul''))", span="2479-2479"];
m4_1617 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected end when reading JSON. Path '', line 1, position 3.'')", span="2481-2481"];
m4_1618 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", span="2477-2477"];
m4_1154 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(int)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(int)", span="921-921"];
m4_172 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="369-369"];
m4_2789 [cluster="System.Net.Sockets.Socket.Send(byte[])", file="JsonSerializerTest.cs", label="Entry System.Net.Sockets.Socket.Send(byte[])", span="0-0"];
m4_2345 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_AdditionalBadData()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_AdditionalBadData()", span="3629-3629"];
m4_2347 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_AdditionalBadData()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3633-3633"];
m4_2346 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_AdditionalBadData()", file="JsonSerializerTest.cs", label="string json = @''falseeeee''", span="3631-3631"];
m4_2348 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_AdditionalBadData()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsString(); }, ''Unexpected character encountered while parsing value: e. Path '', line 1, position 5.'')", span="3635-3635"];
m4_2349 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_AdditionalBadData()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_AdditionalBadData()", span="3629-3629"];
m4_2500 [cluster="double.ToString(string)", file="JsonSerializerTest.cs", label="Entry double.ToString(string)", span="0-0"];
m4_2219 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullIntLineNumberAndPosition()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullIntLineNumberAndPosition()", span="3410-3410"];
m4_2223 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullIntLineNumberAndPosition()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, reader.LineNumber)", span="3422-3422"];
m4_2225 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullIntLineNumberAndPosition()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, reader.LineNumber)", span="3425-3425"];
m4_2226 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullIntLineNumberAndPosition()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''[0]'', reader.Path)", span="3426-3426"];
m4_2228 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullIntLineNumberAndPosition()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, reader.LineNumber)", span="3429-3429"];
m4_2229 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullIntLineNumberAndPosition()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''[1]'', reader.Path)", span="3430-3430"];
m4_2231 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullIntLineNumberAndPosition()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4, reader.LineNumber)", span="3433-3433"];
m4_2232 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullIntLineNumberAndPosition()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''[2]'', reader.Path)", span="3434-3434"];
m4_2234 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullIntLineNumberAndPosition()", file="JsonSerializerTest.cs", label="Assert.AreEqual(5, reader.LineNumber)", span="3437-3437"];
m4_2235 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullIntLineNumberAndPosition()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''[3]'', reader.Path)", span="3438-3438"];
m4_2237 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullIntLineNumberAndPosition()", file="JsonSerializerTest.cs", label="Assert.AreEqual(6, reader.LineNumber)", span="3441-3441"];
m4_2238 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullIntLineNumberAndPosition()", file="JsonSerializerTest.cs", label="Assert.AreEqual(string.Empty, reader.Path)", span="3442-3442"];
m4_2221 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullIntLineNumberAndPosition()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="3419-3419"];
m4_2222 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullIntLineNumberAndPosition()", file="JsonSerializerTest.cs", label="reader.Read()", span="3421-3421"];
m4_2224 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullIntLineNumberAndPosition()", file="JsonSerializerTest.cs", label="reader.ReadAsInt32()", span="3424-3424"];
m4_2227 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullIntLineNumberAndPosition()", file="JsonSerializerTest.cs", label="reader.ReadAsInt32()", span="3428-3428"];
m4_2230 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullIntLineNumberAndPosition()", file="JsonSerializerTest.cs", label="reader.ReadAsInt32()", span="3432-3432"];
m4_2233 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullIntLineNumberAndPosition()", file="JsonSerializerTest.cs", label="reader.ReadAsInt32()", span="3436-3436"];
m4_2236 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullIntLineNumberAndPosition()", file="JsonSerializerTest.cs", label="reader.Read()", span="3440-3440"];
m4_2239 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullIntLineNumberAndPosition()", file="JsonSerializerTest.cs", label="Assert.IsFalse(reader.Read())", span="3444-3444"];
m4_2220 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullIntLineNumberAndPosition()", file="JsonSerializerTest.cs", label="string json = @''[\r\n  1,\r\n  2,\r\n  3,\r\n  null\r\n]''", span="3412-3417"];
m4_2240 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullIntLineNumberAndPosition()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullIntLineNumberAndPosition()", span="3410-3410"];
m4_1442 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", span="2216-2216"];
m4_1446 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2226-2226"];
m4_1448 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2229-2229"];
m4_1449 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Message'', reader.Value)", span="2230-2230"];
m4_1451 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="2233-2233"];
m4_1452 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''Hi,I'' + '\u0092' + ''ve send you smth'', reader.Value)", span="2234-2234"];
m4_1454 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2237-2237"];
m4_1444 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2220-2220"];
m4_1445 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2225-2225"];
m4_1447 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2228-2228"];
m4_1450 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2232-2232"];
m4_1453 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonSerializerTest.cs", label="Assert.IsTrue(reader.Read())", span="2236-2236"];
m4_1455 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonSerializerTest.cs", label="Assert.IsFalse(reader.Read())", span="2239-2239"];
m4_1443 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonSerializerTest.cs", label="string json = @''{''''Message'''':''''Hi,I\u0092ve send you smth''''}''", span="2218-2218"];
m4_1456 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", span="2216-2216"];
m4_2877 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.JsonTextReaderTest", span=""];
m4_2885 [file="JsonSerializerTest.cs", label=total, span=""];
m4_2886 [file="JsonSerializerTest.cs", label=total, span=""];
m4_2949 [file="JsonSerializerTest.cs", label=json, span=""];
m4_2919 [file="JsonSerializerTest.cs", label=reader, span=""];
m4_2928 [file="JsonSerializerTest.cs", label=reader, span=""];
m4_2929 [file="JsonSerializerTest.cs", label=reader, span=""];
m4_2932 [file="JsonSerializerTest.cs", label=reader, span=""];
m4_2934 [file="JsonSerializerTest.cs", label=reader, span=""];
m4_2937 [file="JsonSerializerTest.cs", label=reader, span=""];
m4_2943 [file="JsonSerializerTest.cs", label=reader, span=""];
m4_2944 [file="JsonSerializerTest.cs", label=reader, span=""];
m4_2872 [file="JsonSerializerTest.cs", label=jsonTextReader, span=""];
m4_2873 [file="JsonSerializerTest.cs", label=jsonTextReader, span=""];
m4_2874 [file="JsonSerializerTest.cs", label=reader, span=""];
m4_2875 [file="JsonSerializerTest.cs", label=reader, span=""];
m4_2876 [file="JsonSerializerTest.cs", label=reader, span=""];
m4_2878 [file="JsonSerializerTest.cs", label=reader, span=""];
m4_2879 [file="JsonSerializerTest.cs", label=reader, span=""];
m4_2880 [file="JsonSerializerTest.cs", label=reader, span=""];
m4_2881 [file="JsonSerializerTest.cs", label=reader, span=""];
m4_2882 [file="JsonSerializerTest.cs", label=reader, span=""];
m4_2883 [file="JsonSerializerTest.cs", label=reader, span=""];
m4_2884 [file="JsonSerializerTest.cs", label=reader, span=""];
m4_2889 [file="JsonSerializerTest.cs", label=reader, span=""];
m4_2890 [file="JsonSerializerTest.cs", label=reader, span=""];
m4_2891 [file="JsonSerializerTest.cs", label=reader, span=""];
m4_2892 [file="JsonSerializerTest.cs", label=reader, span=""];
m4_2893 [file="JsonSerializerTest.cs", label=reader, span=""];
m4_2894 [file="JsonSerializerTest.cs", label=reader, span=""];
m4_2895 [file="JsonSerializerTest.cs", label=reader, span=""];
m4_2896 [file="JsonSerializerTest.cs", label=reader, span=""];
m4_2897 [file="JsonSerializerTest.cs", label=reader, span=""];
m4_2898 [file="JsonSerializerTest.cs", label=reader, span=""];
m4_2899 [file="JsonSerializerTest.cs", label=reader, span=""];
m4_2900 [file="JsonSerializerTest.cs", label=reader, span=""];
m4_2901 [file="JsonSerializerTest.cs", label=reader, span=""];
m4_2902 [file="JsonSerializerTest.cs", label=reader, span=""];
m4_2903 [file="JsonSerializerTest.cs", label=reader, span=""];
m4_2904 [file="JsonSerializerTest.cs", label=reader, span=""];
m4_2905 [file="JsonSerializerTest.cs", label=reader, span=""];
m4_2906 [file="JsonSerializerTest.cs", label=reader, span=""];
m4_2907 [file="JsonSerializerTest.cs", label=reader, span=""];
m4_2908 [file="JsonSerializerTest.cs", label=reader, span=""];
m4_2909 [file="JsonSerializerTest.cs", label=reader, span=""];
m4_2910 [file="JsonSerializerTest.cs", label=reader, span=""];
m4_2911 [file="JsonSerializerTest.cs", label=reader, span=""];
m4_2912 [file="JsonSerializerTest.cs", label=reader, span=""];
m4_2913 [file="JsonSerializerTest.cs", label=reader, span=""];
m4_2914 [file="JsonSerializerTest.cs", label=reader, span=""];
m4_2915 [file="JsonSerializerTest.cs", label=reader, span=""];
m4_2916 [file="JsonSerializerTest.cs", label=reader, span=""];
m4_2917 [file="JsonSerializerTest.cs", label=reader, span=""];
m4_2918 [file="JsonSerializerTest.cs", label=reader, span=""];
m4_2920 [file="JsonSerializerTest.cs", label=reader, span=""];
m4_2921 [file="JsonSerializerTest.cs", label=reader, span=""];
m4_2922 [file="JsonSerializerTest.cs", label=reader, span=""];
m4_2923 [file="JsonSerializerTest.cs", label=reader, span=""];
m4_2924 [file="JsonSerializerTest.cs", label=reader, span=""];
m4_2925 [file="JsonSerializerTest.cs", label=reader, span=""];
m4_2926 [file="JsonSerializerTest.cs", label=reader, span=""];
m4_2927 [file="JsonSerializerTest.cs", label=reader, span=""];
m4_2930 [file="JsonSerializerTest.cs", label=reader, span=""];
m4_2931 [file="JsonSerializerTest.cs", label=reader, span=""];
m4_2933 [file="JsonSerializerTest.cs", label=reader, span=""];
m4_2935 [file="JsonSerializerTest.cs", label=reader, span=""];
m4_2936 [file="JsonSerializerTest.cs", label=reader, span=""];
m4_2938 [file="JsonSerializerTest.cs", label=reader, span=""];
m4_2939 [file="JsonSerializerTest.cs", label=reader, span=""];
m4_2940 [file="JsonSerializerTest.cs", label=reader, span=""];
m4_2941 [file="JsonSerializerTest.cs", label=reader, span=""];
m4_2942 [file="JsonSerializerTest.cs", label=reader, span=""];
m4_2945 [file="JsonSerializerTest.cs", label=reader, span=""];
m4_2946 [file="JsonSerializerTest.cs", label=reader, span=""];
m4_2947 [file="JsonSerializerTest.cs", label=reader, span=""];
m4_2948 [file="JsonSerializerTest.cs", label=jsonTextReader, span=""];
m4_2955 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.ToggleReaderError", span=""];
m4_2952 [file="JsonSerializerTest.cs", label=jsonArrayElementsCount, span=""];
m4_2953 [file="JsonSerializerTest.cs", label=clientReceivedEvent, span=""];
m4_2951 [file="JsonSerializerTest.cs", label=serverStartedEvent, span=""];
m4_2950 [file="JsonSerializerTest.cs", label=port, span=""];
m5_511 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", span="931-931"];
m5_512 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", file="ReadAsyncTests.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''true''))", span="933-933"];
m5_513 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", file="ReadAsyncTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n        ''Error reading bytes. Unexpected token: Boolean. Path '', line 1, position 4.'',\r\n        () =>\r\n          {\r\n            reader.ReadAsBytes();\r\n          })", span="935-940"];
m5_514 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", span="931-931"];
m5_741 [cluster="System.Text.StringBuilder.StringBuilder()", file="ReadAsyncTests.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m5_756 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", span="1313-1313"];
m5_757 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="ReadAsyncTests.cs", label="string input = @''[\r\n  NaN,\r\n  Infinity,\r\n  -Infinity\r\n]''", span="1315-1319"];
m5_758 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="ReadAsyncTests.cs", label="StringReader sr = new StringReader(input)", span="1321-1321"];
m5_759 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="ReadAsyncTests.cs", label="JsonReader jsonReader = new JsonTextReader(sr)", span="1323-1323"];
m5_760 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="ReadAsyncTests.cs", label="jsonReader.Read()", span="1325-1325"];
m5_761 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="ReadAsyncTests.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.StartArray)", span="1326-1326"];
m5_762 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="ReadAsyncTests.cs", label="jsonReader.Read()", span="1328-1328"];
m5_763 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="ReadAsyncTests.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.Float)", span="1329-1329"];
m5_764 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="ReadAsyncTests.cs", label="Assert.AreEqual(jsonReader.Value, double.NaN)", span="1330-1330"];
m5_765 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="ReadAsyncTests.cs", label="jsonReader.Read()", span="1332-1332"];
m5_766 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="ReadAsyncTests.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.Float)", span="1333-1333"];
m5_767 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="ReadAsyncTests.cs", label="Assert.AreEqual(jsonReader.Value, double.PositiveInfinity)", span="1334-1334"];
m5_768 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="ReadAsyncTests.cs", label="jsonReader.Read()", span="1336-1336"];
m5_769 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="ReadAsyncTests.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.Float)", span="1337-1337"];
m5_770 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="ReadAsyncTests.cs", label="Assert.AreEqual(jsonReader.Value, double.NegativeInfinity)", span="1338-1338"];
m5_771 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="ReadAsyncTests.cs", label="jsonReader.Read()", span="1340-1340"];
m5_772 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="ReadAsyncTests.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.EndArray)", span="1341-1341"];
m5_773 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", span="1313-1313"];
m5_1125 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", span="1899-1899"];
m5_1126 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="ReadAsyncTests.cs", label="string json = @''{''''Offset'''':''''2011-08-01T21:25Z''''}''", span="1901-1901"];
m5_1127 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="ReadAsyncTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1903-1903"];
m5_1128 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="1905-1905"];
m5_1129 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1906-1906"];
m5_1130 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="1908-1908"];
m5_1131 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1909-1909"];
m5_1132 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="ReadAsyncTests.cs", label="reader.ReadAsDateTimeOffset()", span="1911-1911"];
m5_1133 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="1912-1912"];
m5_1134 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="ReadAsyncTests.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="1913-1913"];
m5_1135 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="ReadAsyncTests.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2011, 8, 1, 21, 25, 0, DateTimeKind.Utc), TimeSpan.Zero), reader.Value)", span="1914-1914"];
m5_1136 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="1916-1916"];
m5_1137 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1917-1917"];
m5_1138 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", span="1899-1899"];
m5_27 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.Read()", span="300-300"];
m5_1123 [cluster="System.TimeSpan.FromMinutes(double)", file="ReadAsyncTests.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m5_535 [cluster="Unk.IsNull", file="ReadAsyncTests.cs", label="Entry Unk.IsNull", span=""];
m5_544 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", span="984-984"];
m5_545 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="ReadAsyncTests.cs", label="string newLinesText = StringUtils.CarriageReturn + StringUtils.CarriageReturnLineFeed + StringUtils.LineFeed + StringUtils.CarriageReturnLineFeed + '' '' + StringUtils.CarriageReturn + StringUtils.CarriageReturnLineFeed", span="986-986"];
m5_546 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="ReadAsyncTests.cs", label="string json =\r\n        newLinesText\r\n        + ''{'' + newLinesText\r\n        + ''''' + newLinesText\r\n        + ''name1'' + newLinesText\r\n        + ''''' + newLinesText\r\n        + '':'' + newLinesText\r\n        + ''['' + newLinesText\r\n        + ''new'' + newLinesText\r\n        + ''Date'' + newLinesText\r\n        + ''('' + newLinesText\r\n        + ''1'' + newLinesText\r\n        + '','' + newLinesText\r\n        + ''null'' + newLinesText\r\n        + ''/*'' + newLinesText\r\n        + ''blah comment'' + newLinesText\r\n        + ''*/'' + newLinesText\r\n        + '')'' + newLinesText\r\n        + '','' + newLinesText\r\n        + ''1.1111'' + newLinesText\r\n        + '']'' + newLinesText\r\n        + '','' + newLinesText\r\n        + ''name2'' + newLinesText\r\n        + '':'' + newLinesText\r\n        + ''{'' + newLinesText\r\n        + ''}'' + newLinesText\r\n        + ''}'' + newLinesText", span="988-1014"];
m5_548 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="ReadAsyncTests.cs", label="StringReader sr = new StringReader(newLinesText)", span="1017-1017"];
m5_556 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="ReadAsyncTests.cs", label="Assert.AreEqual(newLinesText + ''name1'' + newLinesText, reader.Value)", span="1029-1029"];
m5_571 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="ReadAsyncTests.cs", label="Assert.AreEqual(newLinesText + ''blah comment'' + newLinesText, reader.Value)", span="1049-1049"];
m5_547 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="ReadAsyncTests.cs", label="int count = 0", span="1016-1016"];
m5_551 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="ReadAsyncTests.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="1023-1023"];
m5_550 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="ReadAsyncTests.cs", label="count++", span="1020-1020"];
m5_549 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="ReadAsyncTests.cs", label="sr.ReadLine() != null", span="1018-1018"];
m5_552 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="1024-1024"];
m5_553 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="ReadAsyncTests.cs", label="Assert.AreEqual(7, reader.LineNumber)", span="1025-1025"];
m5_554 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="1027-1027"];
m5_555 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", color=red, community=0, file="ReadAsyncTests.cs", label="1: Assert.AreEqual(31, reader.LineNumber)", span="1028-1028"];
m5_557 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="1031-1031"];
m5_558 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="ReadAsyncTests.cs", label="Assert.AreEqual(37, reader.LineNumber)", span="1032-1032"];
m5_559 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="1034-1034"];
m5_560 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="ReadAsyncTests.cs", label="Assert.AreEqual(55, reader.LineNumber)", span="1035-1035"];
m5_561 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="1036-1036"];
m5_562 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="ReadAsyncTests.cs", label="Assert.AreEqual(''Date'', reader.Value)", span="1037-1037"];
m5_563 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="1039-1039"];
m5_564 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="ReadAsyncTests.cs", label="Assert.AreEqual(61, reader.LineNumber)", span="1040-1040"];
m5_565 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="ReadAsyncTests.cs", label="Assert.AreEqual(1L, reader.Value)", span="1041-1041"];
m5_566 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="1043-1043"];
m5_567 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="ReadAsyncTests.cs", label="Assert.AreEqual(73, reader.LineNumber)", span="1044-1044"];
m5_568 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="ReadAsyncTests.cs", label="Assert.AreEqual(null, reader.Value)", span="1045-1045"];
m5_569 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="1047-1047"];
m5_570 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="ReadAsyncTests.cs", label="Assert.AreEqual(91, reader.LineNumber)", span="1048-1048"];
m5_572 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="1051-1051"];
m5_573 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="ReadAsyncTests.cs", label="Assert.AreEqual(97, reader.LineNumber)", span="1052-1052"];
m5_574 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="1054-1054"];
m5_575 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="ReadAsyncTests.cs", label="Assert.AreEqual(109, reader.LineNumber)", span="1055-1055"];
m5_576 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="1057-1057"];
m5_577 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="ReadAsyncTests.cs", label="Assert.AreEqual(115, reader.LineNumber)", span="1058-1058"];
m5_578 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="1060-1060"];
m5_579 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="ReadAsyncTests.cs", label="Assert.AreEqual(133, reader.LineNumber)", span="1061-1061"];
m5_580 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="ReadAsyncTests.cs", label="Assert.AreEqual(''name2'', reader.Value)", span="1062-1062"];
m5_581 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="1064-1064"];
m5_582 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="ReadAsyncTests.cs", label="Assert.AreEqual(139, reader.LineNumber)", span="1065-1065"];
m5_583 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="1067-1067"];
m5_584 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="ReadAsyncTests.cs", label="Assert.AreEqual(145, reader.LineNumber)", span="1068-1068"];
m5_585 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="1070-1070"];
m5_586 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="ReadAsyncTests.cs", label="Assert.AreEqual(151, reader.LineNumber)", span="1071-1071"];
m5_587 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", span="984-984"];
m5_525 [cluster="System.Convert.ToBase64String(byte[])", file="ReadAsyncTests.cs", label="Entry System.Convert.ToBase64String(byte[])", span="0-0"];
m5_1381 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", span="2344-2344"];
m5_1382 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="ReadAsyncTests.cs", label="string json = ''new Date,()''", span="2346-2346"];
m5_1383 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="ReadAsyncTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2347-2347"];
m5_1384 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="ReadAsyncTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n        ''Unexpected character while parsing constructor: ,. Path '', line 1, position 8.'',\r\n        () =>\r\n          {\r\n            Assert.IsTrue(reader.Read());\r\n          })", span="2349-2354"];
m5_1385 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", span="2344-2344"];
m5_1173 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", span="1972-1972"];
m5_1174 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="ReadAsyncTests.cs", label="string json = @''{''''Name'''':1}''", span="1974-1974"];
m5_1175 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="ReadAsyncTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1976-1976"];
m5_1176 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="1978-1978"];
m5_1177 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1979-1979"];
m5_1178 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="1981-1981"];
m5_1179 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1982-1982"];
m5_1180 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="ReadAsyncTests.cs", label="reader.ReadAsDecimal()", span="1984-1984"];
m5_1181 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="1985-1985"];
m5_1182 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="ReadAsyncTests.cs", label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="1986-1986"];
m5_1183 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="ReadAsyncTests.cs", label="Assert.AreEqual(1m, reader.Value)", span="1987-1987"];
m5_1184 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", span="1972-1972"];
m5_116 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", span="273-273"];
m5_117 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", file="ReadAsyncTests.cs", label="string input = @''{\r\n''''matches'''' : [\r\n{''''t'''':''''C'''', ''''n'''':''''Citigroup Inc.'''', ''''e'''':''''NYSE'''', ''''id'''':''''662713''''}\r\n,{''''t'''':''''CHL'''', ''''n'''':''''China Mobile Ltd. (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''660998''''}\r\n,{''''t'''':''''PTR'''', ''''n'''':''''PetroChina Company Limited (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''664536''''}\r\n,{''''t'''':''''RIO'''', ''''n'''':''''Companhia Vale do Rio Doce (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''671472''''}\r\n,{''''t'''':''''RIOPR'''', ''''n'''':''''Companhia Vale do Rio Doce (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''3512643''''}\r\n,{''''t'''':''''CSCO'''', ''''n'''':''''Cisco Systems, Inc.'''', ''''e'''':''''NASDAQ'''', ''''id'''':''''99624''''}\r\n,{''''t'''':''''CVX'''', ''''n'''':''''Chevron Corporation'''', ''''e'''':''''NYSE'''', ''''id'''':''''667226''''}\r\n,{''''t'''':''''TM'''', ''''n'''':''''Toyota Motor Corporation (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''655880''''}\r\n,{''''t'''':''''JPM'''', ''''n'''':''''JPMorgan Chase \\x26 Co.'''', ''''e'''':''''NYSE'''', ''''id'''':''''665639''''}\r\n,{''''t'''':''''COP'''', ''''n'''':''''ConocoPhillips'''', ''''e'''':''''NYSE'''', ''''id'''':''''1691168''''}\r\n,{''''t'''':''''LFC'''', ''''n'''':''''China Life Insurance Company Ltd. (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''688679''''}\r\n,{''''t'''':''''NOK'''', ''''n'''':''''Nokia Corporation (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''657729''''}\r\n,{''''t'''':''''KO'''', ''''n'''':''''The Coca-Cola Company'''', ''''e'''':''''NYSE'''', ''''id'''':''''6550''''}\r\n,{''''t'''':''''VZ'''', ''''n'''':''''Verizon Communications Inc.'''', ''''e'''':''''NYSE'''', ''''id'''':''''664887''''}\r\n,{''''t'''':''''AMX'''', ''''n'''':''''America Movil S.A.B de C.V. (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''665834''''}],\r\n''''all'''' : false\r\n}\r\n''", span="275-294"];
m5_118 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", file="ReadAsyncTests.cs", label="JsonReader jsonReader = new JsonTextReader(new StringReader(input))", span="296-296"];
m5_119 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", file="ReadAsyncTests.cs", label="jsonReader.Read()", span="298-298"];
m5_120 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", file="ReadAsyncTests.cs", label="Console.WriteLine(jsonReader.Value)", span="300-300"];
m5_121 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", span="273-273"];
m5_142 [cluster="System.Text.UTF8Encoding.UTF8Encoding(bool)", file="ReadAsyncTests.cs", label="Entry System.Text.UTF8Encoding.UTF8Encoding(bool)", span="0-0"];
m5_1156 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="ReadAsyncTests.cs", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
m5_1124 [cluster="System.TimeSpan.Add(System.TimeSpan)", file="ReadAsyncTests.cs", label="Entry System.TimeSpan.Add(System.TimeSpan)", span="0-0"];
m5_28 [cluster="Unk.IsTrue", file="ReadAsyncTests.cs", label="Entry Unk.IsTrue", span=""];
m5_1538 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", span="2592-2592"];
m5_1539 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="ReadAsyncTests.cs", label="string json = ''[[]]''", span="2594-2594"];
m5_1540 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="ReadAsyncTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))\r\n        {\r\n          MaxDepth = 1\r\n        }", span="2596-2599"];
m5_1541 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2601-2601"];
m5_1542 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="ReadAsyncTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n        ''The reader's MaxDepth of 1 has been exceeded. Path '[0]', line 1, position 2.'',\r\n        () =>\r\n          {\r\n            Assert.IsTrue(reader.Read());\r\n          })", span="2603-2608"];
m5_1543 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", span="2592-2592"];
m5_749 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(decimal)", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(decimal)", span="930-930"];
m5_802 [cluster="System.Convert.ToInt32(char)", file="ReadAsyncTests.cs", label="Entry System.Convert.ToInt32(char)", span="0-0"];
m5_1017 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", span="1728-1728"];
m5_1018 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", file="ReadAsyncTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[1.0]''))", span="1730-1730"];
m5_1019 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", file="ReadAsyncTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n        ''Unexpected token when reading bytes: Float. Path '[0]', line 1, position 4.'',\r\n        () =>\r\n        {\r\n          reader.ReadAsBytes();\r\n        })", span="1732-1737"];
m5_1020 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", span="1728-1728"];
m5_889 [cluster="System.Text.Encoding.GetString(byte[], int, int)", file="ReadAsyncTests.cs", label="Entry System.Text.Encoding.GetString(byte[], int, int)", span="0-0"];
m5_1679 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", span="2801-2801"];
m5_1680 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="ReadAsyncTests.cs", label="ToggleReaderError toggleReaderError = new ToggleReaderError(new StringReader(''{'first':1,'second':2,'third':3}''))", span="2803-2803"];
m5_1681 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="ReadAsyncTests.cs", label="JsonTextReader jsonTextReader = new JsonTextReader(toggleReaderError)", span="2804-2804"];
m5_1683 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="ReadAsyncTests.cs", label="toggleReaderError.Error = true", span="2808-2808"];
m5_1686 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="ReadAsyncTests.cs", label="toggleReaderError.Error = false", span="2817-2817"];
m5_1689 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="ReadAsyncTests.cs", label="toggleReaderError.Error = true", span="2822-2822"];
m5_1691 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="ReadAsyncTests.cs", label="toggleReaderError.Error = false", span="2828-2828"];
m5_1694 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="ReadAsyncTests.cs", label="toggleReaderError.Error = true", span="2833-2833"];
m5_1698 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="ReadAsyncTests.cs", label="toggleReaderError.Error = false", span="2845-2845"];
m5_1682 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="ReadAsyncTests.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="2806-2806"];
m5_1684 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="ReadAsyncTests.cs", label="ExceptionAssert.Throws<Exception>(\r\n        ''Read error'',\r\n        () => jsonTextReader.Read())", span="2810-2812"];
m5_1685 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="ReadAsyncTests.cs", label="ExceptionAssert.Throws<Exception>(\r\n        ''Read error'',\r\n        () => jsonTextReader.Read())", span="2813-2815"];
m5_1687 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="ReadAsyncTests.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="2819-2819"];
m5_1688 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="ReadAsyncTests.cs", label="Assert.AreEqual(''first'', jsonTextReader.Value)", span="2820-2820"];
m5_1690 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="ReadAsyncTests.cs", label="ExceptionAssert.Throws<Exception>(\r\n        ''Read error'',\r\n        () => jsonTextReader.Read())", span="2824-2826"];
m5_1692 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="ReadAsyncTests.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="2830-2830"];
m5_1693 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="ReadAsyncTests.cs", label="Assert.AreEqual(1L, jsonTextReader.Value)", span="2831-2831"];
m5_1695 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="ReadAsyncTests.cs", label="ExceptionAssert.Throws<Exception>(\r\n        ''Read error'',\r\n        () => jsonTextReader.Read())", span="2835-2837"];
m5_1696 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="ReadAsyncTests.cs", label="ExceptionAssert.Throws<Exception>(\r\n        ''Read error'',\r\n        () => jsonTextReader.Read())", span="2838-2840"];
m5_1697 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="ReadAsyncTests.cs", label="ExceptionAssert.Throws<Exception>(\r\n        ''Read error'',\r\n        () => jsonTextReader.Read())", span="2841-2843"];
m5_1699 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", span="2801-2801"];
m5_75 [cluster="object.ToString()", file="ReadAsyncTests.cs", label="Entry object.ToString()", span="0-0"];
m5_690 [cluster="int.ToString()", file="ReadAsyncTests.cs", label="Entry int.ToString()", span="0-0"];
m5_1535 [cluster="double.ToString(System.IFormatProvider)", file="ReadAsyncTests.cs", label="Entry double.ToString(System.IFormatProvider)", span="0-0"];
m5_504 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", span="918-918"];
m5_505 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", file="ReadAsyncTests.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@'''h\''))", span="920-920"];
m5_506 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", file="ReadAsyncTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n        ''Unterminated string. Expected delimiter: '. Path '', line 1, position 3.'',\r\n        () =>\r\n          {\r\n            reader.Read();\r\n          })", span="922-927"];
m5_507 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", span="918-918"];
m5_929 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", span="1576-1576"];
m5_930 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="ReadAsyncTests.cs", label="StringReader s = new StringReader(@''[0372, 0xFA, 0XFA]'')", span="1578-1578"];
m5_931 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="ReadAsyncTests.cs", label="JsonTextReader jsonReader = new JsonTextReader(s)", span="1579-1579"];
m5_932 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="ReadAsyncTests.cs", label="Assert.IsTrue(jsonReader.Read())", span="1581-1581"];
m5_933 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.StartArray, jsonReader.TokenType)", span="1582-1582"];
m5_934 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="ReadAsyncTests.cs", label="jsonReader.ReadAsInt32()", span="1584-1584"];
m5_935 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1585-1585"];
m5_936 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="ReadAsyncTests.cs", label="Assert.AreEqual(typeof(int), jsonReader.ValueType)", span="1586-1586"];
m5_937 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="ReadAsyncTests.cs", label="Assert.AreEqual(250, jsonReader.Value)", span="1587-1587"];
m5_938 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="ReadAsyncTests.cs", label="jsonReader.ReadAsInt32()", span="1589-1589"];
m5_939 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1590-1590"];
m5_940 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="ReadAsyncTests.cs", label="Assert.AreEqual(typeof(int), jsonReader.ValueType)", span="1591-1591"];
m5_941 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="ReadAsyncTests.cs", label="Assert.AreEqual(250, jsonReader.Value)", span="1592-1592"];
m5_942 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="ReadAsyncTests.cs", label="jsonReader.ReadAsInt32()", span="1594-1594"];
m5_943 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1595-1595"];
m5_944 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="ReadAsyncTests.cs", label="Assert.AreEqual(typeof(int), jsonReader.ValueType)", span="1596-1596"];
m5_945 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="ReadAsyncTests.cs", label="Assert.AreEqual(250, jsonReader.Value)", span="1597-1597"];
m5_946 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="ReadAsyncTests.cs", label="Assert.IsTrue(jsonReader.Read())", span="1599-1599"];
m5_947 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.EndArray, jsonReader.TokenType)", span="1600-1600"];
m5_948 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="ReadAsyncTests.cs", label="Assert.IsFalse(jsonReader.Read())", span="1602-1602"];
m5_949 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", span="1576-1576"];
m5_1390 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", span="2358-2358"];
m5_1391 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="ReadAsyncTests.cs", label="string json = ''\x00a0{\x00a0'h\x00a0i\x00a0'\x00a0:\x00a0[\x00a0true\x00a0,\x00a0new\x00a0Date\x00a0(\x00a0)\x00a0]\x00a0/*\x00a0comment\x00a0*/\x00a0}\x00a0''", span="2360-2360"];
m5_1392 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="ReadAsyncTests.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="2361-2361"];
m5_1393 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2363-2363"];
m5_1394 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2364-2364"];
m5_1395 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2366-2366"];
m5_1396 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2367-2367"];
m5_1397 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2369-2369"];
m5_1398 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2370-2370"];
m5_1399 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2372-2372"];
m5_1400 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="2373-2373"];
m5_1401 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2375-2375"];
m5_1402 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2376-2376"];
m5_1403 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2378-2378"];
m5_1404 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2379-2379"];
m5_1405 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2381-2381"];
m5_1406 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2382-2382"];
m5_1407 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2384-2384"];
m5_1408 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2385-2385"];
m5_1409 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2387-2387"];
m5_1410 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2388-2388"];
m5_1411 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="ReadAsyncTests.cs", label="Assert.IsFalse(reader.Read())", span="2390-2390"];
m5_1412 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", span="2358-2358"];
m5_1700 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", span="2885-2885"];
m5_1737 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", file="ReadAsyncTests.cs", label="_inner = inner", span="2887-2887"];
m5_1738 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", span="2885-2885"];
m5_1271 [cluster="System.DateTime.DateTime(long)", file="ReadAsyncTests.cs", label="Entry System.DateTime.DateTime(long)", span="0-0"];
m5_419 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", span="776-776"];
m5_420 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="ReadAsyncTests.cs", label="long i = int.MaxValue", span="778-778"];
m5_421 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="ReadAsyncTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(i.ToString(CultureInfo.InvariantCulture)))", span="780-780"];
m5_426 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="ReadAsyncTests.cs", label="long total = j + i", span="786-786"];
m5_422 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="ReadAsyncTests.cs", label="reader.Read()", span="781-781"];
m5_423 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="ReadAsyncTests.cs", label="Assert.AreEqual(typeof(long), reader.ValueType)", span="782-782"];
m5_427 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="ReadAsyncTests.cs", label="ExceptionAssert.Throws<OverflowException>(\r\n          ''Arithmetic operation resulted in an overflow.'',\r\n          () =>\r\n            {\r\n              reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)));\r\n              reader.ReadAsInt32();\r\n            })", span="787-793"];
m5_424 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="ReadAsyncTests.cs", label="int j = 1", span="784-784"];
m5_425 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="ReadAsyncTests.cs", label="j < 1000", span="784-784"];
m5_428 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="ReadAsyncTests.cs", label="j++", span="784-784"];
m5_429 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", span="776-776"];
m5_1676 [cluster="System.DateTime.DateTime(long, System.DateTimeKind)", file="ReadAsyncTests.cs", label="Entry System.DateTime.DateTime(long, System.DateTimeKind)", span="0-0"];
m5_124 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", span="306-306"];
m5_125 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="ReadAsyncTests.cs", label="string json = @''{''''DefaultConverter'''':new Date(0, ''''hi''''),''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}''", span="308-308"];
m5_126 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="ReadAsyncTests.cs", label="JsonReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="310-310"];
m5_127 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="312-312"];
m5_128 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="313-313"];
m5_129 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="314-314"];
m5_130 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="315-315"];
m5_131 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="ReadAsyncTests.cs", label="Assert.AreEqual(''Date'', reader.Value)", span="316-316"];
m5_132 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="318-318"];
m5_133 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="ReadAsyncTests.cs", label="Assert.AreEqual(0L, reader.Value)", span="319-319"];
m5_134 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="321-321"];
m5_135 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="ReadAsyncTests.cs", label="Assert.AreEqual(''hi'', reader.Value)", span="322-322"];
m5_136 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="324-324"];
m5_137 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="325-325"];
m5_138 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="327-327"];
m5_139 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="ReadAsyncTests.cs", label="Assert.AreEqual(''MemberConverter'', reader.Value)", span="328-328"];
m5_140 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", span="306-306"];
m5_536 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", span="970-970"];
m5_537 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", file="ReadAsyncTests.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''{aww''))", span="972-972"];
m5_538 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="973-973"];
m5_539 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", file="ReadAsyncTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n        ''Unexpected end while parsing unquoted property name. Path '', line 1, position 4.'',\r\n        () =>\r\n        {\r\n          reader.Read();\r\n        })", span="975-980"];
m5_540 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", span="970-970"];
m5_774 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", span="1346-1346"];
m5_775 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="ReadAsyncTests.cs", label="int length = 20000", span="1348-1348"];
m5_776 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="ReadAsyncTests.cs", label="string json = @''['''''' + new string(' ', length) + @'''''']''", span="1349-1349"];
m5_777 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="ReadAsyncTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1351-1351"];
m5_778 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="ReadAsyncTests.cs", label="reader.Read()", span="1353-1353"];
m5_779 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="1354-1354"];
m5_780 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="ReadAsyncTests.cs", label="reader.Read()", span="1356-1356"];
m5_781 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="1357-1357"];
m5_782 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="ReadAsyncTests.cs", label="Assert.AreEqual(typeof(string), reader.ValueType)", span="1358-1358"];
m5_783 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="ReadAsyncTests.cs", label="Assert.AreEqual(20000, reader.Value.ToString().Length)", span="1359-1359"];
m5_784 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="1361-1361"];
m5_785 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="1362-1362"];
m5_786 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="ReadAsyncTests.cs", label="Assert.IsFalse(reader.Read())", span="1364-1364"];
m5_787 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="1365-1365"];
m5_788 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", span="1346-1346"];
m5_377 [cluster="System.IO.StringWriter.ToString()", file="ReadAsyncTests.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m5_114 [cluster="Newtonsoft.Json.JsonTextReader.Close()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.Close()", span="1509-1509"];
m5_1763 [cluster="System.Array.Copy(System.Array, int, System.Array, int, int)", file="ReadAsyncTests.cs", label="Entry System.Array.Copy(System.Array, int, System.Array, int, int)", span="0-0"];
m5_1762 [cluster="System.Math.Min(int, int)", file="ReadAsyncTests.cs", label="Entry System.Math.Min(int, int)", span="0-0"];
m5_665 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", span="1211-1211"];
m5_666 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="ReadAsyncTests.cs", label="JsonTextReader reader = null", span="1213-1213"];
m5_667 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="ReadAsyncTests.cs", label="reader = new JsonTextReader(new StringReader(''1''))", span="1215-1215"];
m5_668 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="ReadAsyncTests.cs", label="Assert.AreEqual(1, reader.ReadAsInt32())", span="1216-1216"];
m5_669 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="ReadAsyncTests.cs", label="reader = new JsonTextReader(new StringReader(''-1''))", span="1218-1218"];
m5_670 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="ReadAsyncTests.cs", label="Assert.AreEqual(-1, reader.ReadAsInt32())", span="1219-1219"];
m5_671 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="ReadAsyncTests.cs", label="reader = new JsonTextReader(new StringReader(''0''))", span="1221-1221"];
m5_672 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="ReadAsyncTests.cs", label="Assert.AreEqual(0, reader.ReadAsInt32())", span="1222-1222"];
m5_673 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="ReadAsyncTests.cs", label="reader = new JsonTextReader(new StringReader(''-0''))", span="1224-1224"];
m5_674 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="ReadAsyncTests.cs", label="Assert.AreEqual(0, reader.ReadAsInt32())", span="1225-1225"];
m5_675 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="ReadAsyncTests.cs", label="reader = new JsonTextReader(new StringReader(int.MaxValue.ToString()))", span="1227-1227"];
m5_676 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="ReadAsyncTests.cs", label="Assert.AreEqual(int.MaxValue, reader.ReadAsInt32())", span="1228-1228"];
m5_677 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="ReadAsyncTests.cs", label="reader = new JsonTextReader(new StringReader(int.MinValue.ToString()))", span="1230-1230"];
m5_678 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="ReadAsyncTests.cs", label="Assert.AreEqual(int.MinValue, reader.ReadAsInt32())", span="1231-1231"];
m5_679 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="ReadAsyncTests.cs", label="reader = new JsonTextReader(new StringReader(long.MaxValue.ToString()))", span="1233-1233"];
m5_680 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="ReadAsyncTests.cs", label="ExceptionAssert.Throws<OverflowException>(''Arithmetic operation resulted in an overflow.'', () => reader.ReadAsInt32())", span="1234-1234"];
m5_681 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="ReadAsyncTests.cs", label="reader = new JsonTextReader(new StringReader(''1E-06''))", span="1236-1236"];
m5_682 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="ReadAsyncTests.cs", label="ExceptionAssert.Throws<FormatException>(''Input string was not in a correct format.'', () => reader.ReadAsInt32())", span="1237-1237"];
m5_683 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="ReadAsyncTests.cs", label="reader = new JsonTextReader(new StringReader(''1.1''))", span="1239-1239"];
m5_684 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="ReadAsyncTests.cs", label="ExceptionAssert.Throws<FormatException>(''Input string was not in a correct format.'', () => reader.ReadAsInt32())", span="1240-1240"];
m5_685 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="ReadAsyncTests.cs", label="reader = new JsonTextReader(new StringReader(''''))", span="1242-1242"];
m5_686 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="ReadAsyncTests.cs", label="Assert.AreEqual(null, reader.ReadAsInt32())", span="1243-1243"];
m5_687 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="ReadAsyncTests.cs", label="reader = new JsonTextReader(new StringReader(''-''))", span="1245-1245"];
m5_688 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="ReadAsyncTests.cs", label="ExceptionAssert.Throws<FormatException>(''Input string was not in a correct format.'', () => reader.ReadAsInt32())", span="1246-1246"];
m5_689 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", span="1211-1211"];
m5_1482 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", span="2509-2509"];
m5_1483 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="ReadAsyncTests.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''{}}''))", span="2511-2511"];
m5_1484 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2512-2512"];
m5_1485 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2513-2513"];
m5_1486 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="ReadAsyncTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n        ''Additional text encountered after finished reading JSON content: }. Path '', line 1, position 2.'',\r\n        () =>\r\n          {\r\n            reader.Read();\r\n          })", span="2515-2520"];
m5_1487 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", span="2509-2509"];
m5_63 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", span="188-188"];
m5_64 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="ReadAsyncTests.cs", label="string json = @''{ ''''MATHEMATICAL ITALIC CAPITAL ALPHA'''': ''''\uD835\uDEE2'''' }''", span="190-190"];
m5_65 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="ReadAsyncTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="192-192"];
m5_66 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="194-194"];
m5_67 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="195-195"];
m5_68 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="197-197"];
m5_69 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="198-198"];
m5_70 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="ReadAsyncTests.cs", label="string s = reader.Value.ToString()", span="200-200"];
m5_71 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="ReadAsyncTests.cs", label="Assert.AreEqual(2, s.Length)", span="201-201"];
m5_72 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="ReadAsyncTests.cs", label="StringInfo stringInfo = new StringInfo(s)", span="203-203"];
m5_73 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="ReadAsyncTests.cs", label="Assert.AreEqual(1, stringInfo.LengthInTextElements)", span="204-204"];
m5_74 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", span="188-188"];
m5_908 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", span="1546-1546"];
m5_909 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="ReadAsyncTests.cs", label="StringReader s = new StringReader(@''[0372, 0xFA, 0XFA]'')", span="1548-1548"];
m5_910 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="ReadAsyncTests.cs", label="JsonTextReader jsonReader = new JsonTextReader(s)", span="1549-1549"];
m5_911 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="ReadAsyncTests.cs", label="Assert.IsTrue(jsonReader.Read())", span="1551-1551"];
m5_912 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.StartArray, jsonReader.TokenType)", span="1552-1552"];
m5_913 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="ReadAsyncTests.cs", label="jsonReader.Read()", span="1554-1554"];
m5_914 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1555-1555"];
m5_915 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="ReadAsyncTests.cs", label="Assert.AreEqual(typeof(long), jsonReader.ValueType)", span="1556-1556"];
m5_916 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="ReadAsyncTests.cs", label="Assert.AreEqual((long)250, (long)jsonReader.Value)", span="1557-1557"];
m5_917 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="ReadAsyncTests.cs", label="jsonReader.Read()", span="1559-1559"];
m5_918 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1560-1560"];
m5_919 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="ReadAsyncTests.cs", label="Assert.AreEqual(typeof(long), jsonReader.ValueType)", span="1561-1561"];
m5_920 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="ReadAsyncTests.cs", label="Assert.AreEqual((long)250, (long)jsonReader.Value)", span="1562-1562"];
m5_921 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="ReadAsyncTests.cs", label="jsonReader.Read()", span="1564-1564"];
m5_922 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1565-1565"];
m5_923 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="ReadAsyncTests.cs", label="Assert.AreEqual(typeof(long), jsonReader.ValueType)", span="1566-1566"];
m5_924 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="ReadAsyncTests.cs", label="Assert.AreEqual((long)250, (long)jsonReader.Value)", span="1567-1567"];
m5_925 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="ReadAsyncTests.cs", label="Assert.IsTrue(jsonReader.Read())", span="1569-1569"];
m5_926 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.EndArray, jsonReader.TokenType)", span="1570-1570"];
m5_927 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="ReadAsyncTests.cs", label="Assert.IsFalse(jsonReader.Read())", span="1572-1572"];
m5_928 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", span="1546-1546"];
m5_887 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsBytes()", span="318-318"];
m5_958 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", span="1621-1621"];
m5_959 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="ReadAsyncTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''''))", span="1623-1623"];
m5_960 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="ReadAsyncTests.cs", label="Assert.IsNull(reader.ReadAsDecimal())", span="1625-1625"];
m5_961 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="1626-1626"];
m5_962 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", span="1621-1621"];
m5_481 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", span="863-863"];
m5_482 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="ReadAsyncTests.cs", label="string json = @''\r\n{\r\n  ''''description'''': ''''A person'''',\r\n  ''''type'''': ''''object'''',\r\n  ''''properties'''':\r\n  {\r\n    ''''name'''': {''''type'''':''''string''''},\r\n    ''''hobbies'''': {\r\n      ''''type'''': ''''array'''',\r\n      ''''items'''': {''''type'''':''''string''''}\r\n    }\r\n  }\r\n}\r\n''", span="865-878"];
m5_483 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="ReadAsyncTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="880-880"];
m5_484 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="ReadAsyncTests.cs", label="int i = 0", span="885-885"];
m5_486 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="887-887"];
m5_488 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="890-890"];
m5_489 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="891-891"];
m5_490 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="ReadAsyncTests.cs", label="Assert.AreEqual(''type'', reader.Value)", span="892-892"];
m5_485 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="ReadAsyncTests.cs", label="i < 14", span="885-885"];
m5_487 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="ReadAsyncTests.cs", label="i++", span="885-885"];
m5_491 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", span="863-863"];
m5_803 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", span="1392-1392"];
m5_804 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="ReadAsyncTests.cs", label="string json =\r\n        @''[0.0,0.0,0.1,1.0,1.000001,1E-06,4.94065645841247E-324,Infinity,-Infinity,NaN,1.7976931348623157E+308,-1.7976931348623157E+308,Infinity,-Infinity,NaN,0e-10,0.25e-5,0.3e10]''", span="1394-1395"];
m5_805 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="ReadAsyncTests.cs", label="JsonReader jsonReader = new JsonTextReader(new StringReader(json))", span="1397-1397"];
m5_806 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="ReadAsyncTests.cs", label="jsonReader.Read()", span="1399-1399"];
m5_807 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.StartArray, jsonReader.TokenType)", span="1400-1400"];
m5_808 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="ReadAsyncTests.cs", label="jsonReader.Read()", span="1402-1402"];
m5_809 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1403-1403"];
m5_810 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="ReadAsyncTests.cs", label="Assert.AreEqual(0.0, jsonReader.Value)", span="1404-1404"];
m5_811 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="ReadAsyncTests.cs", label="jsonReader.Read()", span="1406-1406"];
m5_812 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1407-1407"];
m5_813 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="ReadAsyncTests.cs", label="Assert.AreEqual(0.0, jsonReader.Value)", span="1408-1408"];
m5_814 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="ReadAsyncTests.cs", label="jsonReader.Read()", span="1410-1410"];
m5_815 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1411-1411"];
m5_816 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="ReadAsyncTests.cs", label="Assert.AreEqual(0.1, jsonReader.Value)", span="1412-1412"];
m5_817 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="ReadAsyncTests.cs", label="jsonReader.Read()", span="1414-1414"];
m5_818 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1415-1415"];
m5_819 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="ReadAsyncTests.cs", label="Assert.AreEqual(1.0, jsonReader.Value)", span="1416-1416"];
m5_820 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="ReadAsyncTests.cs", label="jsonReader.Read()", span="1418-1418"];
m5_821 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1419-1419"];
m5_822 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="ReadAsyncTests.cs", label="Assert.AreEqual(1.000001, jsonReader.Value)", span="1420-1420"];
m5_823 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="ReadAsyncTests.cs", label="jsonReader.Read()", span="1422-1422"];
m5_824 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1423-1423"];
m5_825 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="ReadAsyncTests.cs", label="Assert.AreEqual(1E-06, jsonReader.Value)", span="1424-1424"];
m5_826 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="ReadAsyncTests.cs", label="jsonReader.Read()", span="1426-1426"];
m5_827 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1427-1427"];
m5_828 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="ReadAsyncTests.cs", label="Assert.AreEqual(4.94065645841247E-324, jsonReader.Value)", span="1428-1428"];
m5_829 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="ReadAsyncTests.cs", label="jsonReader.Read()", span="1430-1430"];
m5_830 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1431-1431"];
m5_831 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="ReadAsyncTests.cs", label="Assert.AreEqual(double.PositiveInfinity, jsonReader.Value)", span="1432-1432"];
m5_832 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="ReadAsyncTests.cs", label="jsonReader.Read()", span="1434-1434"];
m5_833 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1435-1435"];
m5_834 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="ReadAsyncTests.cs", label="Assert.AreEqual(double.NegativeInfinity, jsonReader.Value)", span="1436-1436"];
m5_835 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="ReadAsyncTests.cs", label="jsonReader.Read()", span="1438-1438"];
m5_836 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1439-1439"];
m5_837 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="ReadAsyncTests.cs", label="Assert.AreEqual(double.NaN, jsonReader.Value)", span="1440-1440"];
m5_838 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="ReadAsyncTests.cs", label="jsonReader.Read()", span="1442-1442"];
m5_839 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1443-1443"];
m5_840 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="ReadAsyncTests.cs", label="Assert.AreEqual(double.MaxValue, jsonReader.Value)", span="1444-1444"];
m5_841 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="ReadAsyncTests.cs", label="jsonReader.Read()", span="1446-1446"];
m5_842 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1447-1447"];
m5_843 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="ReadAsyncTests.cs", label="Assert.AreEqual(double.MinValue, jsonReader.Value)", span="1448-1448"];
m5_844 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="ReadAsyncTests.cs", label="jsonReader.Read()", span="1450-1450"];
m5_845 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1451-1451"];
m5_846 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="ReadAsyncTests.cs", label="Assert.AreEqual(double.PositiveInfinity, jsonReader.Value)", span="1452-1452"];
m5_847 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="ReadAsyncTests.cs", label="jsonReader.Read()", span="1454-1454"];
m5_848 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1455-1455"];
m5_849 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="ReadAsyncTests.cs", label="Assert.AreEqual(double.NegativeInfinity, jsonReader.Value)", span="1456-1456"];
m5_850 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="ReadAsyncTests.cs", label="jsonReader.Read()", span="1458-1458"];
m5_851 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1459-1459"];
m5_852 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="ReadAsyncTests.cs", label="Assert.AreEqual(double.NaN, jsonReader.Value)", span="1460-1460"];
m5_853 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="ReadAsyncTests.cs", label="jsonReader.Read()", span="1462-1462"];
m5_854 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1463-1463"];
m5_855 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="ReadAsyncTests.cs", label="Assert.AreEqual(0d, jsonReader.Value)", span="1464-1464"];
m5_856 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="ReadAsyncTests.cs", label="jsonReader.Read()", span="1466-1466"];
m5_857 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1467-1467"];
m5_858 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="ReadAsyncTests.cs", label="Assert.AreEqual(0.0000025d, jsonReader.Value)", span="1468-1468"];
m5_859 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="ReadAsyncTests.cs", label="jsonReader.Read()", span="1470-1470"];
m5_860 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1471-1471"];
m5_861 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="ReadAsyncTests.cs", label="Assert.AreEqual(3000000000d, jsonReader.Value)", span="1472-1472"];
m5_862 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="ReadAsyncTests.cs", label="jsonReader.Read()", span="1474-1474"];
m5_863 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.EndArray, jsonReader.TokenType)", span="1475-1475"];
m5_864 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", span="1392-1392"];
m5_1157 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", span="1946-1946"];
m5_1158 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="ReadAsyncTests.cs", label="string json = @''{''''Offset'''':''''30/1/2011''''}''", span="1948-1948"];
m5_1159 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="ReadAsyncTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1950-1950"];
m5_1160 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="ReadAsyncTests.cs", label="reader.Culture = new CultureInfo(''en-NZ'')", span="1951-1951"];
m5_1161 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="1953-1953"];
m5_1162 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1954-1954"];
m5_1163 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="1956-1956"];
m5_1164 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1957-1957"];
m5_1165 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="ReadAsyncTests.cs", label="reader.ReadAsDateTimeOffset()", span="1959-1959"];
m5_1166 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="1960-1960"];
m5_1167 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="ReadAsyncTests.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="1961-1961"];
m5_1168 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="ReadAsyncTests.cs", label="DateTimeOffset dt = (DateTimeOffset)reader.Value", span="1963-1963"];
m5_1170 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="1966-1966"];
m5_1171 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1967-1967"];
m5_1169 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="ReadAsyncTests.cs", label="Assert.AreEqual(new DateTime(2011, 1, 30, 0, 0, 0, DateTimeKind.Unspecified), dt.DateTime)", span="1964-1964"];
m5_1172 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", span="1946-1946"];
m5_1744 [cluster="System.Exception.Exception(string)", file="ReadAsyncTests.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m5_1319 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", span="2241-2241"];
m5_1320 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="ReadAsyncTests.cs", label="string json = ''[true ''", span="2243-2243"];
m5_1321 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="ReadAsyncTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2244-2244"];
m5_1322 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2246-2246"];
m5_1323 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2247-2247"];
m5_1324 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="ReadAsyncTests.cs", label="Assert.IsFalse(reader.Read())", span="2248-2248"];
m5_1325 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", span="2241-2241"];
m5_659 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string)", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string)", span="655-655"];
m5_497 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", span="905-905"];
m5_498 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", file="ReadAsyncTests.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@'''h\u123''))", span="907-907"];
m5_499 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", file="ReadAsyncTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n        ''Unexpected end while parsing unicode character. Path '', line 1, position 4.'',\r\n        () =>\r\n          {\r\n            reader.Read();\r\n          })", span="909-914"];
m5_500 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", span="905-905"];
m5_31 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", span="85-85"];
m5_32 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="ReadAsyncTests.cs", label="string json = ''[NaN]''", span="87-87"];
m5_33 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="ReadAsyncTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="89-89"];
m5_34 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="ReadAsyncTests.cs", label="reader.FloatParseHandling = Json.FloatParseHandling.Decimal", span="90-90"];
m5_35 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="92-92"];
m5_36 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="93-93"];
m5_37 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="ReadAsyncTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n        ''Cannot read NaN as a decimal.'',\r\n        () => reader.Read())", span="95-97"];
m5_38 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", span="85-85"];
m5_1746 [cluster="Newtonsoft.Json.Tests.SlowStream.SlowStream(byte[], int)", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.SlowStream.SlowStream(byte[], int)", span="2905-2905"];
m5_1747 [cluster="Newtonsoft.Json.Tests.SlowStream.SlowStream(byte[], int)", file="ReadAsyncTests.cs", label="this.bytes = content", span="2907-2907"];
m5_1749 [cluster="Newtonsoft.Json.Tests.SlowStream.SlowStream(byte[], int)", file="ReadAsyncTests.cs", label="this.bytesPerRead = bytesPerRead", span="2909-2909"];
m5_1748 [cluster="Newtonsoft.Json.Tests.SlowStream.SlowStream(byte[], int)", file="ReadAsyncTests.cs", label="this.totalBytesRead = 0", span="2908-2908"];
m5_1750 [cluster="Newtonsoft.Json.Tests.SlowStream.SlowStream(byte[], int)", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.SlowStream.SlowStream(byte[], int)", span="2905-2905"];
m5_378 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", span="693-693"];
m5_379 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="ReadAsyncTests.cs", label="string json = ''\0{\0'\0h\0i\0'\0:\0[\01\0,\0'\0'\0\0,\0null\0]\0,\0do\0:true\0}\0\0/*\0sd\0f\0*/\0/*\0sd\0f\0*/ \0''", span="695-695"];
m5_380 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="ReadAsyncTests.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="696-696"];
m5_381 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="698-698"];
m5_382 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="699-699"];
m5_383 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="701-701"];
m5_384 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="702-702"];
m5_385 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="704-704"];
m5_386 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="705-705"];
m5_387 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="707-707"];
m5_388 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="708-708"];
m5_389 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="710-710"];
m5_390 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="711-711"];
m5_391 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="713-713"];
m5_392 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="714-714"];
m5_393 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="716-716"];
m5_394 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="717-717"];
m5_395 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="719-719"];
m5_396 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="720-720"];
m5_397 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="722-722"];
m5_398 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="723-723"];
m5_399 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="725-725"];
m5_400 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="726-726"];
m5_401 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="728-728"];
m5_402 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="729-729"];
m5_403 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="ReadAsyncTests.cs", label="Assert.AreEqual(''\0sd\0f\0'', reader.Value)", span="730-730"];
m5_404 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="732-732"];
m5_405 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="733-733"];
m5_406 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="ReadAsyncTests.cs", label="Assert.AreEqual(''\0sd\0f\0'', reader.Value)", span="734-734"];
m5_407 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="ReadAsyncTests.cs", label="Assert.IsFalse(reader.Read())", span="736-736"];
m5_408 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", span="693-693"];
m5_660 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", span="1179-1179"];
m5_661 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", file="ReadAsyncTests.cs", label="string json = @''[\r\n  true,\r\n  {\r\n    ''''integer'''': 99,\r\n    ''''string'''': ''''how now brown cow?'''',\r\n    ''''array'''': [\r\n      0,\r\n      1,\r\n      2,\r\n      3,\r\n      4,\r\n      {\r\n        ''''decimal'''': 990.00990099\r\n      },\r\n      5\r\n    ]\r\n  },\r\n  ''''This is a string.'''',\r\n  null,\r\n  null\r\n]''", span="1181-1201"];
m5_662 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", file="ReadAsyncTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1203-1203"];
m5_663 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", file="ReadAsyncTests.cs", label="reader.Read()", span="1204-1204"];
m5_664 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", span="1179-1179"];
m5_742 [cluster="System.IO.StringWriter.StringWriter(System.Text.StringBuilder)", file="ReadAsyncTests.cs", label="Entry System.IO.StringWriter.StringWriter(System.Text.StringBuilder)", span="0-0"];
m5_1342 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", span="2280-2280"];
m5_1343 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="ReadAsyncTests.cs", label="string json = ''{hi:1, ''", span="2282-2282"];
m5_1344 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="ReadAsyncTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2283-2283"];
m5_1345 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2285-2285"];
m5_1346 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2286-2286"];
m5_1347 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2287-2287"];
m5_1348 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="ReadAsyncTests.cs", label="Assert.IsFalse(reader.Read())", span="2288-2288"];
m5_1349 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", span="2280-2280"];
m5_331 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullTextReader()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.NullTextReader()", span="632-632"];
m5_332 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullTextReader()", file="ReadAsyncTests.cs", label="ExceptionAssert.Throws<ArgumentNullException>(\r\n        @''Value cannot be null.\r\nParameter name: reader'',\r\n        () =>\r\n          {\r\n            new JsonTextReader(null);\r\n          })", span="634-640"];
m5_333 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullTextReader()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.NullTextReader()", span="632-632"];
m5_529 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", span="960-960"];
m5_530 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="ReadAsyncTests.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''[  ''))", span="962-962"];
m5_531 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="963-963"];
m5_532 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="ReadAsyncTests.cs", label="Assert.IsNull(reader.ReadAsBytes())", span="965-965"];
m5_533 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="966-966"];
m5_534 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", span="960-960"];
m5_169 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Whitespace()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Whitespace()", span="390-390"];
m5_170 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Whitespace()", file="ReadAsyncTests.cs", label="string json = @''[\r\n''''Small'''',\r\n''''Medium'''',\r\n''''Large''''\r\n]   \r\n\r\n''", span="392-398"];
m5_171 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Whitespace()", file="ReadAsyncTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="400-400"];
m5_172 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Whitespace()", file="ReadAsyncTests.cs", label="reader.Read()", span="401-401"];
m5_173 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Whitespace()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Whitespace()", span="390-390"];
m5_588 [cluster="System.IO.StringReader.ReadLine()", file="ReadAsyncTests.cs", label="Entry System.IO.StringReader.ReadLine()", span="0-0"];
m5_1225 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", span="2064-2064"];
m5_1226 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", file="ReadAsyncTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''/sdf''))", span="2066-2066"];
m5_1227 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", file="ReadAsyncTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n        ''Error parsing comment. Expected: *, got s. Path '', line 1, position 1.'',\r\n        () =>\r\n          {\r\n            reader.Read();\r\n          })", span="2068-2073"];
m5_1228 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", span="2064-2064"];
m5_182 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", span="424-424"];
m5_183 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="ReadAsyncTests.cs", label="string input = @''{\r\n  CPU: 'Intel',\r\n  Drives: [\r\n    'DVD read/writer',\r\n    ''''500 gigabyte hard drive''''\r\n  ]\r\n}''", span="426-432"];
m5_184 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="ReadAsyncTests.cs", label="StringReader sr = new StringReader(input)", span="434-434"];
m5_185 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="ReadAsyncTests.cs", label="JsonTextReader jsonReader = new JsonTextReader(sr)", span="436-436"];
m5_186 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="ReadAsyncTests.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.None)", span="442-442"];
m5_187 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="ReadAsyncTests.cs", label="Assert.AreEqual(0, jsonReader.LineNumber)", span="443-443"];
m5_188 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="ReadAsyncTests.cs", label="Assert.AreEqual(0, jsonReader.LinePosition)", span="444-444"];
m5_189 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="ReadAsyncTests.cs", label="jsonReader.Read()", span="446-446"];
m5_190 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="ReadAsyncTests.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.StartObject)", span="447-447"];
m5_191 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="ReadAsyncTests.cs", label="Assert.AreEqual(1, jsonReader.LineNumber)", span="448-448"];
m5_192 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="ReadAsyncTests.cs", label="Assert.AreEqual(1, jsonReader.LinePosition)", span="449-449"];
m5_193 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="ReadAsyncTests.cs", label="jsonReader.Read()", span="451-451"];
m5_194 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="ReadAsyncTests.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.PropertyName)", span="452-452"];
m5_195 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="ReadAsyncTests.cs", label="Assert.AreEqual(jsonReader.Value, ''CPU'')", span="453-453"];
m5_196 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="ReadAsyncTests.cs", label="Assert.AreEqual(2, jsonReader.LineNumber)", span="454-454"];
m5_197 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="ReadAsyncTests.cs", label="Assert.AreEqual(7, jsonReader.LinePosition)", span="455-455"];
m5_198 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="ReadAsyncTests.cs", label="jsonReader.Read()", span="457-457"];
m5_199 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.String, jsonReader.TokenType)", span="458-458"];
m5_200 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="ReadAsyncTests.cs", label="Assert.AreEqual(''Intel'', jsonReader.Value)", span="459-459"];
m5_201 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="ReadAsyncTests.cs", label="Assert.AreEqual(2, jsonReader.LineNumber)", span="460-460"];
m5_202 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="ReadAsyncTests.cs", label="Assert.AreEqual(15, jsonReader.LinePosition)", span="461-461"];
m5_203 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="ReadAsyncTests.cs", label="jsonReader.Read()", span="463-463"];
m5_204 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="ReadAsyncTests.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.PropertyName)", span="464-464"];
m5_205 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="ReadAsyncTests.cs", label="Assert.AreEqual(jsonReader.Value, ''Drives'')", span="465-465"];
m5_206 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="ReadAsyncTests.cs", label="Assert.AreEqual(3, jsonReader.LineNumber)", span="466-466"];
m5_207 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="ReadAsyncTests.cs", label="Assert.AreEqual(10, jsonReader.LinePosition)", span="467-467"];
m5_208 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="ReadAsyncTests.cs", label="jsonReader.Read()", span="469-469"];
m5_209 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="ReadAsyncTests.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.StartArray)", span="470-470"];
m5_210 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="ReadAsyncTests.cs", label="Assert.AreEqual(3, jsonReader.LineNumber)", span="471-471"];
m5_211 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="ReadAsyncTests.cs", label="Assert.AreEqual(12, jsonReader.LinePosition)", span="472-472"];
m5_212 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="ReadAsyncTests.cs", label="jsonReader.Read()", span="474-474"];
m5_213 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="ReadAsyncTests.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.String)", span="475-475"];
m5_214 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="ReadAsyncTests.cs", label="Assert.AreEqual(jsonReader.Value, ''DVD read/writer'')", span="476-476"];
m5_215 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="ReadAsyncTests.cs", label="Assert.AreEqual(jsonReader.QuoteChar, '\'')", span="477-477"];
m5_216 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="ReadAsyncTests.cs", label="Assert.AreEqual(4, jsonReader.LineNumber)", span="478-478"];
m5_217 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="ReadAsyncTests.cs", label="Assert.AreEqual(22, jsonReader.LinePosition)", span="479-479"];
m5_218 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="ReadAsyncTests.cs", label="jsonReader.Read()", span="481-481"];
m5_219 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="ReadAsyncTests.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.String)", span="482-482"];
m5_220 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="ReadAsyncTests.cs", label="Assert.AreEqual(jsonReader.Value, ''500 gigabyte hard drive'')", span="483-483"];
m5_221 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="ReadAsyncTests.cs", label="Assert.AreEqual(jsonReader.QuoteChar, '''')", span="484-484"];
m5_222 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="ReadAsyncTests.cs", label="Assert.AreEqual(5, jsonReader.LineNumber)", span="485-485"];
m5_223 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="ReadAsyncTests.cs", label="Assert.AreEqual(30, jsonReader.LinePosition)", span="486-486"];
m5_224 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="ReadAsyncTests.cs", label="jsonReader.Read()", span="488-488"];
m5_225 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="ReadAsyncTests.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.EndArray)", span="489-489"];
m5_226 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="ReadAsyncTests.cs", label="Assert.AreEqual(6, jsonReader.LineNumber)", span="490-490"];
m5_227 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="ReadAsyncTests.cs", label="Assert.AreEqual(4, jsonReader.LinePosition)", span="491-491"];
m5_228 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="ReadAsyncTests.cs", label="jsonReader.Read()", span="493-493"];
m5_229 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="ReadAsyncTests.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.EndObject)", span="494-494"];
m5_230 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="ReadAsyncTests.cs", label="Assert.AreEqual(7, jsonReader.LineNumber)", span="495-495"];
m5_231 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="ReadAsyncTests.cs", label="Assert.AreEqual(2, jsonReader.LinePosition)", span="496-496"];
m5_232 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="ReadAsyncTests.cs", label="Assert.IsFalse(jsonReader.Read())", span="498-498"];
m5_233 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", span="424-424"];
m5_143 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", span="332-332"];
m5_144 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", file="ReadAsyncTests.cs", label="string json = @''[\r\n''''Small'''',\r\n''''Medium'''',\r\n''''Large''''\r\n],''", span="334-338"];
m5_145 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", file="ReadAsyncTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="340-340"];
m5_146 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", file="ReadAsyncTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n        ''Additional text encountered after finished reading JSON content: ,. Path '', line 5, position 2.'',\r\n        () =>\r\n          {\r\n            while (reader.Read())\r\n            {\r\n            }\r\n          })", span="342-349"];
m5_147 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", span="332-332"];
m5_981 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", span="364-364"];
m5_1218 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", span="2051-2051"];
m5_1219 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", file="ReadAsyncTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''/* sdf''))", span="2053-2053"];
m5_1220 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", file="ReadAsyncTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n        ''Unexpected end while parsing comment. Path '', line 1, position 6.'',\r\n        () =>\r\n          {\r\n            reader.Read();\r\n          })", span="2055-2060"];
m5_1221 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", span="2051-2051"];
m5_1246 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", span="2099-2099"];
m5_1247 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="ReadAsyncTests.cs", label="string json = @''{''''decimal'''':''''9,99''''}''", span="2101-2101"];
m5_1248 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="ReadAsyncTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2103-2103"];
m5_1249 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="ReadAsyncTests.cs", label="reader.Culture = new CultureInfo(''fr-FR'')", span="2104-2104"];
m5_1250 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2106-2106"];
m5_1251 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2107-2107"];
m5_1252 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2109-2109"];
m5_1253 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2110-2110"];
m5_1254 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="ReadAsyncTests.cs", label="decimal? d = reader.ReadAsDecimal()", span="2112-2112"];
m5_1255 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2113-2113"];
m5_1256 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="ReadAsyncTests.cs", label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="2114-2114"];
m5_1258 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2117-2117"];
m5_1259 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2118-2118"];
m5_1257 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="ReadAsyncTests.cs", label="Assert.AreEqual(9.99m, d)", span="2115-2115"];
m5_1260 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", span="2099-2099"];
m5_115 [cluster="Unk.IsFalse", file="ReadAsyncTests.cs", label="Entry Unk.IsFalse", span=""];
m5_963 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", span="327-327"];
m5_1261 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", span="2122-2122"];
m5_1262 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="ReadAsyncTests.cs", label="string json = @''[\r\n  {\r\n    ''''Name'''': ''''Jim'''',\r\n    ''''BirthDate'''': ''''\/Date(978048000000)\/'''',\r\n    ''''LastModified'''': ''''\/Date(978048000000)\/''''\r\n  },\r\n  {\r\n    ''''Name'''': ''''Jim'''',\r\n    ''''BirthDate'''': ''''\/Date(978048000000)\/'''',\r\n    ''''LastModified'''': ''''\/Date(978048000000)\/''''\r\n  }\r\n]''", span="2124-2135"];
m5_1263 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="ReadAsyncTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2137-2137"];
m5_1264 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="ReadAsyncTests.cs", label="int i = 0", span="2142-2142"];
m5_1266 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="ReadAsyncTests.cs", label="reader.Read()", span="2144-2144"];
m5_1268 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2147-2147"];
m5_1269 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="ReadAsyncTests.cs", label="Assert.AreEqual(new DateTime(631136448000000000), reader.Value)", span="2148-2148"];
m5_1265 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="ReadAsyncTests.cs", label="i < 13", span="2142-2142"];
m5_1267 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="ReadAsyncTests.cs", label="i++", span="2142-2142"];
m5_1270 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", span="2122-2122"];
m5_1547 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", span="2612-2612"];
m5_1548 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="ReadAsyncTests.cs", label="string json = ''[[[[]]],[[]]]''", span="2614-2614"];
m5_1549 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="ReadAsyncTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))\r\n      {\r\n        MaxDepth = 1\r\n      }", span="2616-2619"];
m5_1550 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2621-2621"];
m5_1551 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="ReadAsyncTests.cs", label="Assert.AreEqual(0, reader.Depth)", span="2622-2622"];
m5_1552 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="ReadAsyncTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n        ''The reader's MaxDepth of 1 has been exceeded. Path '[0]', line 1, position 2.'',\r\n        () =>\r\n        {\r\n          Assert.IsTrue(reader.Read());\r\n        })", span="2624-2629"];
m5_1553 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="ReadAsyncTests.cs", label="Assert.AreEqual(1, reader.Depth)", span="2630-2630"];
m5_1554 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2632-2632"];
m5_1555 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="ReadAsyncTests.cs", label="Assert.AreEqual(2, reader.Depth)", span="2633-2633"];
m5_1556 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2635-2635"];
m5_1557 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="ReadAsyncTests.cs", label="Assert.AreEqual(3, reader.Depth)", span="2636-2636"];
m5_1558 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2638-2638"];
m5_1559 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="ReadAsyncTests.cs", label="Assert.AreEqual(3, reader.Depth)", span="2639-2639"];
m5_1560 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2641-2641"];
m5_1561 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="ReadAsyncTests.cs", label="Assert.AreEqual(2, reader.Depth)", span="2642-2642"];
m5_1562 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2644-2644"];
m5_1563 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="ReadAsyncTests.cs", label="Assert.AreEqual(1, reader.Depth)", span="2645-2645"];
m5_1564 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="ReadAsyncTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n        ''The reader's MaxDepth of 1 has been exceeded. Path '[1]', line 1, position 9.'',\r\n        () =>\r\n        {\r\n          Assert.IsTrue(reader.Read());\r\n        })", span="2647-2652"];
m5_1565 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="ReadAsyncTests.cs", label="Assert.AreEqual(1, reader.Depth)", span="2653-2653"];
m5_1566 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2655-2655"];
m5_1567 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="ReadAsyncTests.cs", label="Assert.AreEqual(2, reader.Depth)", span="2656-2656"];
m5_1568 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2658-2658"];
m5_1569 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="ReadAsyncTests.cs", label="Assert.AreEqual(2, reader.Depth)", span="2659-2659"];
m5_1570 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2661-2661"];
m5_1571 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="ReadAsyncTests.cs", label="Assert.AreEqual(1, reader.Depth)", span="2662-2662"];
m5_1572 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2664-2664"];
m5_1573 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="ReadAsyncTests.cs", label="Assert.AreEqual(0, reader.Depth)", span="2665-2665"];
m5_1574 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="ReadAsyncTests.cs", label="Assert.IsFalse(reader.Read())", span="2667-2667"];
m5_1575 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", span="2612-2612"];
m5_996 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", span="1690-1690"];
m5_997 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", file="ReadAsyncTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''new Date()''))", span="1692-1692"];
m5_998 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", file="ReadAsyncTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n        ''Error reading date. Unexpected token: StartConstructor. Path '', line 1, position 9.'',\r\n        () =>\r\n        {\r\n          reader.ReadAsDateTimeOffset();\r\n        })", span="1694-1699"];
m5_999 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", span="1690-1690"];
m5_91 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", span="242-242"];
m5_92 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="ReadAsyncTests.cs", label="MemoryStream ms = new MemoryStream(Encoding.UTF8.GetBytes(@'''''''' + input + @''''''''))", span="244-244"];
m5_93 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="ReadAsyncTests.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(ms))", span="246-246"];
m5_94 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="ReadAsyncTests.cs", label="reader.Read()", span="247-247"];
m5_95 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="ReadAsyncTests.cs", label="string s = (string)reader.Value", span="249-249"];
m5_96 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="ReadAsyncTests.cs", label="return s;", span="251-251"];
m5_97 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", span="242-242"];
m5_1232 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", span="2077-2077"];
m5_1233 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="ReadAsyncTests.cs", label="string json = @''{''''decimal'''':-7.92281625142643E+28}''", span="2079-2079"];
m5_1234 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="ReadAsyncTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2081-2081"];
m5_1235 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2083-2083"];
m5_1236 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2084-2084"];
m5_1237 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2086-2086"];
m5_1238 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2087-2087"];
m5_1239 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="ReadAsyncTests.cs", label="decimal? d = reader.ReadAsDecimal()", span="2089-2089"];
m5_1240 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2090-2090"];
m5_1241 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="ReadAsyncTests.cs", label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="2091-2091"];
m5_1243 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2094-2094"];
m5_1244 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2095-2095"];
m5_1242 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="ReadAsyncTests.cs", label="Assert.AreEqual(-79228162514264300000000000000m, d)", span="2092-2092"];
m5_1245 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", span="2077-2077"];
m5_704 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", span="1250-1250"];
m5_705 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="ReadAsyncTests.cs", label="StringBuilder sb = new StringBuilder()", span="1252-1252"];
m5_706 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="ReadAsyncTests.cs", label="StringWriter sw = new StringWriter(sb)", span="1253-1253"];
m5_732 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="ReadAsyncTests.cs", label="string json = sb.ToString()", span="1292-1292"];
m5_707 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="ReadAsyncTests.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)\r\n        {\r\n          Formatting = Formatting.Indented\r\n        }", span="1255-1258"];
m5_708 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="ReadAsyncTests.cs", label="jsonWriter.WriteStartArray()", span="1260-1260"];
m5_709 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="ReadAsyncTests.cs", label="jsonWriter.WriteValue(true)", span="1261-1261"];
m5_710 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="ReadAsyncTests.cs", label="jsonWriter.WriteStartObject()", span="1263-1263"];
m5_711 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="ReadAsyncTests.cs", label="jsonWriter.WritePropertyName(''integer'')", span="1264-1264"];
m5_712 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="ReadAsyncTests.cs", label="jsonWriter.WriteValue(99)", span="1265-1265"];
m5_713 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="ReadAsyncTests.cs", label="jsonWriter.WritePropertyName(''string'')", span="1266-1266"];
m5_714 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="ReadAsyncTests.cs", label="jsonWriter.WriteValue(''how now brown cow?'')", span="1267-1267"];
m5_715 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="ReadAsyncTests.cs", label="jsonWriter.WritePropertyName(''array'')", span="1268-1268"];
m5_716 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="ReadAsyncTests.cs", label="jsonWriter.WriteStartArray()", span="1270-1270"];
m5_719 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="ReadAsyncTests.cs", label="jsonWriter.WriteValue(i)", span="1273-1273"];
m5_721 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="ReadAsyncTests.cs", label="jsonWriter.WriteStartObject()", span="1276-1276"];
m5_722 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="ReadAsyncTests.cs", label="jsonWriter.WritePropertyName(''decimal'')", span="1277-1277"];
m5_723 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="ReadAsyncTests.cs", label="jsonWriter.WriteValue(990.00990099m)", span="1278-1278"];
m5_724 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="ReadAsyncTests.cs", label="jsonWriter.WriteEndObject()", span="1279-1279"];
m5_725 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="ReadAsyncTests.cs", label="jsonWriter.WriteValue(5)", span="1281-1281"];
m5_726 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="ReadAsyncTests.cs", label="jsonWriter.WriteEndArray()", span="1282-1282"];
m5_727 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="ReadAsyncTests.cs", label="jsonWriter.WriteEndObject()", span="1284-1284"];
m5_728 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="ReadAsyncTests.cs", label="jsonWriter.WriteValue(''This is a string.'')", span="1286-1286"];
m5_729 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="ReadAsyncTests.cs", label="jsonWriter.WriteNull()", span="1287-1287"];
m5_730 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="ReadAsyncTests.cs", label="jsonWriter.WriteNull()", span="1288-1288"];
m5_731 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="ReadAsyncTests.cs", label="jsonWriter.WriteEndArray()", span="1289-1289"];
m5_717 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="ReadAsyncTests.cs", label="int i = 0", span="1271-1271"];
m5_718 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="ReadAsyncTests.cs", label="i < 5", span="1271-1271"];
m5_720 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="ReadAsyncTests.cs", label="i++", span="1271-1271"];
m5_733 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="ReadAsyncTests.cs", label="JsonSerializer serializer = new JsonSerializer()", span="1294-1294"];
m5_734 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="ReadAsyncTests.cs", label="object jsonObject = serializer.Deserialize(new JsonTextReader(new StringReader(json)))", span="1296-1296"];
m5_739 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="ReadAsyncTests.cs", label="Assert.AreEqual(json, sb.ToString())", span="1309-1309"];
m5_738 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="ReadAsyncTests.cs", label="serializer.Serialize(jsonWriter, jsonObject)", span="1306-1306"];
m5_735 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="ReadAsyncTests.cs", label="sb = new StringBuilder()", span="1298-1298"];
m5_736 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="ReadAsyncTests.cs", label="sw = new StringWriter(sb)", span="1299-1299"];
m5_737 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="ReadAsyncTests.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)\r\n        {\r\n          Formatting = Formatting.Indented\r\n        }", span="1301-1304"];
m5_740 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", span="1250-1250"];
m5_1366 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeperator()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeperator()", span="2318-2318"];
m5_1367 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeperator()", file="ReadAsyncTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(''true/''))", span="2320-2320"];
m5_1368 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeperator()", file="ReadAsyncTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n        ''Error parsing boolean value. Path '', line 1, position 4.'',\r\n        () =>\r\n        {\r\n          reader.Read();\r\n        })", span="2322-2327"];
m5_1369 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeperator()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeperator()", span="2318-2318"];
m5_113 [cluster="System.IO.MemoryStream.MemoryStream()", file="ReadAsyncTests.cs", label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0"];
m5_1745 [cluster="System.IO.TextReader.Read(char[], int, int)", file="ReadAsyncTests.cs", label="Entry System.IO.TextReader.Read(char[], int, int)", span="0-0"];
m5_1582 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", span="2671-2671"];
m5_1583 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="ReadAsyncTests.cs", label="string json = ''[false, true, true, false, 'test!', 1.11, 0e-10, 0E-10, 0.25e-5, 0.3e10, 6.0221418e23, 'Purple\\r \\n monkey\\'s:\\tdishwasher']''", span="2673-2673"];
m5_1584 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="ReadAsyncTests.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="2675-2675"];
m5_1585 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2677-2677"];
m5_1586 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2679-2679"];
m5_1587 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="ReadAsyncTests.cs", label="Assert.AreEqual(false, reader.Value)", span="2680-2680"];
m5_1588 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2682-2682"];
m5_1589 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="2683-2683"];
m5_1590 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="ReadAsyncTests.cs", label="Assert.AreEqual(true, reader.Value)", span="2684-2684"];
m5_1591 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2686-2686"];
m5_1592 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="2687-2687"];
m5_1593 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="ReadAsyncTests.cs", label="Assert.AreEqual(true, reader.Value)", span="2688-2688"];
m5_1594 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2690-2690"];
m5_1595 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="2691-2691"];
m5_1596 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="ReadAsyncTests.cs", label="Assert.AreEqual(false, reader.Value)", span="2692-2692"];
m5_1597 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2694-2694"];
m5_1598 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="2695-2695"];
m5_1599 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="ReadAsyncTests.cs", label="Assert.AreEqual(''test!'', reader.Value)", span="2696-2696"];
m5_1600 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2698-2698"];
m5_1601 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2699-2699"];
m5_1602 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="ReadAsyncTests.cs", label="Assert.AreEqual(1.11d, reader.Value)", span="2700-2700"];
m5_1603 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2702-2702"];
m5_1604 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2703-2703"];
m5_1605 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="ReadAsyncTests.cs", label="Assert.AreEqual(0d, reader.Value)", span="2704-2704"];
m5_1606 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2706-2706"];
m5_1607 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2707-2707"];
m5_1608 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="ReadAsyncTests.cs", label="Assert.AreEqual(0d, reader.Value)", span="2708-2708"];
m5_1609 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2710-2710"];
m5_1610 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2711-2711"];
m5_1611 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="ReadAsyncTests.cs", label="Assert.AreEqual(0.0000025d, reader.Value)", span="2712-2712"];
m5_1612 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2714-2714"];
m5_1613 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2715-2715"];
m5_1614 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="ReadAsyncTests.cs", label="Assert.AreEqual(3000000000d, reader.Value)", span="2716-2716"];
m5_1615 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2718-2718"];
m5_1616 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2719-2719"];
m5_1617 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="ReadAsyncTests.cs", label="Assert.AreEqual(602214180000000000000000d, reader.Value)", span="2720-2720"];
m5_1618 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2722-2722"];
m5_1619 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="2723-2723"];
m5_1620 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="ReadAsyncTests.cs", label="Assert.AreEqual(reader.Value, ''Purple\r \n monkey's:\tdishwasher'')", span="2724-2724"];
m5_1621 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2726-2726"];
m5_1622 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", span="2671-2671"];
m5_30 [cluster="System.Convert.ToDecimal(double)", file="ReadAsyncTests.cs", label="Entry System.Convert.ToDecimal(double)", span="0-0"];
m5_1283 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", span="2182-2182"];
m5_1284 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="ReadAsyncTests.cs", label="string json = ''new Date\0()''", span="2184-2184"];
m5_1285 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="ReadAsyncTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2185-2185"];
m5_1286 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2190-2190"];
m5_1287 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="ReadAsyncTests.cs", label="Assert.AreEqual(''Date'', reader.Value)", span="2191-2191"];
m5_1288 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2192-2192"];
m5_1289 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2194-2194"];
m5_1290 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2195-2195"];
m5_1291 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", span="2182-2182"];
m5_1204 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", span="2025-2025"];
m5_1205 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", file="ReadAsyncTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''nulz''))", span="2027-2027"];
m5_1206 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", file="ReadAsyncTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n        ''Error parsing null value. Path '', line 0, position 0.'',\r\n        () =>\r\n          {\r\n            reader.Read();\r\n          })", span="2029-2034"];
m5_1207 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", span="2025-2025"];
m5_492 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", span="896-896"];
m5_493 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="ReadAsyncTests.cs", label="JsonReader reader = new JsonTextReader(new StringReader('''h\0i'''))", span="898-898"];
m5_494 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="899-899"];
m5_495 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="ReadAsyncTests.cs", label="Assert.AreEqual(''h\0i'', reader.Value)", span="901-901"];
m5_496 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", span="896-896"];
m5_151 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", span="353-353"];
m5_152 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="ReadAsyncTests.cs", label="string json = @''[\r\n''''Small'''',\r\n''''Medium'''',\r\n''''Large''''\r\n]content''", span="355-359"];
m5_153 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="ReadAsyncTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="361-361"];
m5_154 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="ReadAsyncTests.cs", label="reader.Read()", span="366-366"];
m5_155 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="ReadAsyncTests.cs", label="Assert.AreEqual(1, reader.LineNumber)", span="367-367"];
m5_156 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="ReadAsyncTests.cs", label="reader.Read()", span="369-369"];
m5_157 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="ReadAsyncTests.cs", label="Assert.AreEqual(2, reader.LineNumber)", span="370-370"];
m5_158 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="ReadAsyncTests.cs", label="reader.Read()", span="372-372"];
m5_159 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="ReadAsyncTests.cs", label="Assert.AreEqual(3, reader.LineNumber)", span="373-373"];
m5_160 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="ReadAsyncTests.cs", label="reader.Read()", span="375-375"];
m5_161 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="ReadAsyncTests.cs", label="Assert.AreEqual(4, reader.LineNumber)", span="376-376"];
m5_162 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="ReadAsyncTests.cs", label="reader.Read()", span="378-378"];
m5_163 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="ReadAsyncTests.cs", label="Assert.AreEqual(5, reader.LineNumber)", span="379-379"];
m5_164 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="ReadAsyncTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n        ''Additional text encountered after finished reading JSON content: c. Path '', line 5, position 2.'',\r\n        () =>\r\n          {\r\n            reader.Read();\r\n          })", span="381-386"];
m5_165 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", span="353-353"];
m5_751 [cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteNull()", span="771-771"];
m5_789 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", span="1369-1369"];
m5_790 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="ReadAsyncTests.cs", label="string json = @''[''''\u003c'''',''''\u5f20'''']''", span="1371-1371"];
m5_791 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="ReadAsyncTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1373-1373"];
m5_792 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="ReadAsyncTests.cs", label="reader.Read()", span="1378-1378"];
m5_793 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="1379-1379"];
m5_794 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="ReadAsyncTests.cs", label="reader.Read()", span="1381-1381"];
m5_795 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="ReadAsyncTests.cs", label="Assert.AreEqual(''<'', reader.Value)", span="1382-1382"];
m5_796 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="ReadAsyncTests.cs", label="reader.Read()", span="1384-1384"];
m5_797 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="ReadAsyncTests.cs", label="Assert.AreEqual(24352, Convert.ToInt32(Convert.ToChar((string)reader.Value)))", span="1385-1385"];
m5_798 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="ReadAsyncTests.cs", label="reader.Read()", span="1387-1387"];
m5_799 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="1388-1388"];
m5_800 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", span="1369-1369"];
m5_234 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", span="503-503"];
m5_235 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="string input = @''{\r\n  value:'Purple',\r\n  array:[1,2,new Date(1)],\r\n  subobject:{prop:1,proparray:[1]}\r\n}''", span="505-509"];
m5_236 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="StringReader sr = new StringReader(input)", span="511-511"];
m5_237 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="JsonReader reader = new JsonTextReader(sr)", span="513-513"];
m5_238 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="Assert.AreEqual(0, reader.Depth)", span="515-515"];
m5_239 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="reader.Read()", span="517-517"];
m5_240 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.StartObject)", span="518-518"];
m5_241 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="Assert.AreEqual(0, reader.Depth)", span="519-519"];
m5_242 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="Assert.AreEqual('''', reader.Path)", span="520-520"];
m5_243 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="reader.Read()", span="522-522"];
m5_244 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.PropertyName)", span="523-523"];
m5_245 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="Assert.AreEqual(1, reader.Depth)", span="524-524"];
m5_246 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="Assert.AreEqual(''value'', reader.Path)", span="525-525"];
m5_247 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="reader.Read()", span="527-527"];
m5_248 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.String)", span="528-528"];
m5_249 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="Assert.AreEqual(reader.Value, @''Purple'')", span="529-529"];
m5_250 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="Assert.AreEqual(reader.QuoteChar, '\'')", span="530-530"];
m5_251 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="Assert.AreEqual(1, reader.Depth)", span="531-531"];
m5_252 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="Assert.AreEqual(''value'', reader.Path)", span="532-532"];
m5_253 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="reader.Read()", span="534-534"];
m5_254 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.PropertyName)", span="535-535"];
m5_255 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="Assert.AreEqual(1, reader.Depth)", span="536-536"];
m5_256 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="Assert.AreEqual(''array'', reader.Path)", span="537-537"];
m5_257 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="reader.Read()", span="539-539"];
m5_258 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.StartArray)", span="540-540"];
m5_259 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="Assert.AreEqual(1, reader.Depth)", span="541-541"];
m5_260 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="Assert.AreEqual(''array'', reader.Path)", span="542-542"];
m5_261 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="reader.Read()", span="544-544"];
m5_262 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.Integer)", span="545-545"];
m5_263 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="Assert.AreEqual(1L, reader.Value)", span="546-546"];
m5_264 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="Assert.AreEqual(2, reader.Depth)", span="547-547"];
m5_265 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="Assert.AreEqual(''array[0]'', reader.Path)", span="548-548"];
m5_266 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="reader.Read()", span="550-550"];
m5_267 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.Integer)", span="551-551"];
m5_268 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="Assert.AreEqual(2L, reader.Value)", span="552-552"];
m5_269 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="Assert.AreEqual(2, reader.Depth)", span="553-553"];
m5_270 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="Assert.AreEqual(''array[1]'', reader.Path)", span="554-554"];
m5_271 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="reader.Read()", span="556-556"];
m5_272 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.StartConstructor)", span="557-557"];
m5_273 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="Assert.AreEqual(''Date'', reader.Value)", span="558-558"];
m5_274 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="Assert.AreEqual(2, reader.Depth)", span="559-559"];
m5_275 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="Assert.AreEqual(''array[2]'', reader.Path)", span="560-560"];
m5_276 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="reader.Read()", span="562-562"];
m5_277 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.Integer)", span="563-563"];
m5_278 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="Assert.AreEqual(1L, reader.Value)", span="564-564"];
m5_279 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="Assert.AreEqual(3, reader.Depth)", span="565-565"];
m5_280 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="Assert.AreEqual(''array[2][0]'', reader.Path)", span="566-566"];
m5_281 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="reader.Read()", span="568-568"];
m5_282 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.EndConstructor)", span="569-569"];
m5_283 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="Assert.AreEqual(null, reader.Value)", span="570-570"];
m5_284 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="Assert.AreEqual(2, reader.Depth)", span="571-571"];
m5_285 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="Assert.AreEqual(''array[2]'', reader.Path)", span="572-572"];
m5_286 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="reader.Read()", span="574-574"];
m5_287 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.EndArray)", span="575-575"];
m5_288 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="Assert.AreEqual(1, reader.Depth)", span="576-576"];
m5_289 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="Assert.AreEqual(''array'', reader.Path)", span="577-577"];
m5_290 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="reader.Read()", span="579-579"];
m5_291 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.PropertyName)", span="580-580"];
m5_292 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="Assert.AreEqual(1, reader.Depth)", span="581-581"];
m5_293 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="Assert.AreEqual(''subobject'', reader.Path)", span="582-582"];
m5_294 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="reader.Read()", span="584-584"];
m5_295 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.StartObject)", span="585-585"];
m5_296 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="Assert.AreEqual(1, reader.Depth)", span="586-586"];
m5_297 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="Assert.AreEqual(''subobject'', reader.Path)", span="587-587"];
m5_298 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="reader.Read()", span="589-589"];
m5_299 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.PropertyName)", span="590-590"];
m5_300 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="Assert.AreEqual(2, reader.Depth)", span="591-591"];
m5_301 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="Assert.AreEqual(''subobject.prop'', reader.Path)", span="592-592"];
m5_302 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="reader.Read()", span="594-594"];
m5_303 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.Integer)", span="595-595"];
m5_304 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="Assert.AreEqual(2, reader.Depth)", span="596-596"];
m5_305 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="Assert.AreEqual(''subobject.prop'', reader.Path)", span="597-597"];
m5_306 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="reader.Read()", span="599-599"];
m5_307 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.PropertyName)", span="600-600"];
m5_308 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="Assert.AreEqual(2, reader.Depth)", span="601-601"];
m5_309 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="Assert.AreEqual(''subobject.proparray'', reader.Path)", span="602-602"];
m5_310 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="reader.Read()", span="604-604"];
m5_311 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.StartArray)", span="605-605"];
m5_312 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="Assert.AreEqual(2, reader.Depth)", span="606-606"];
m5_313 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="Assert.AreEqual(''subobject.proparray'', reader.Path)", span="607-607"];
m5_314 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="reader.Read()", span="609-609"];
m5_315 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.Integer)", span="610-610"];
m5_316 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="Assert.AreEqual(3, reader.Depth)", span="611-611"];
m5_317 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="Assert.AreEqual(''subobject.proparray[0]'', reader.Path)", span="612-612"];
m5_318 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="reader.Read()", span="614-614"];
m5_319 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.EndArray)", span="615-615"];
m5_320 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="Assert.AreEqual(2, reader.Depth)", span="616-616"];
m5_321 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="Assert.AreEqual(''subobject.proparray'', reader.Path)", span="617-617"];
m5_322 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="reader.Read()", span="619-619"];
m5_323 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.EndObject)", span="620-620"];
m5_324 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="Assert.AreEqual(1, reader.Depth)", span="621-621"];
m5_325 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="Assert.AreEqual(''subobject'', reader.Path)", span="622-622"];
m5_326 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="reader.Read()", span="624-624"];
m5_327 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.EndObject)", span="625-625"];
m5_328 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="Assert.AreEqual(0, reader.Depth)", span="626-626"];
m5_329 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="Assert.AreEqual('''', reader.Path)", span="627-627"];
m5_330 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", span="503-503"];
m5_25 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="73-73"];
m5_519 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", span="944-944"];
m5_520 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="ReadAsyncTests.cs", label="string helloWorld = ''Hello world!''", span="946-946"];
m5_521 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="ReadAsyncTests.cs", label="byte[] helloWorldData = Encoding.UTF8.GetBytes(helloWorld)", span="947-947"];
m5_522 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="ReadAsyncTests.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''''' + Convert.ToBase64String(helloWorldData)))", span="949-949"];
m5_523 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="ReadAsyncTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n        ''Unterminated string. Expected delimiter: '. Path '', line 1, position 17.'',\r\n        () =>\r\n          {\r\n            reader.ReadAsBytes();\r\n          })", span="951-956"];
m5_524 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", span="944-944"];
m5_1373 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", span="2331-2331"];
m5_1374 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="ReadAsyncTests.cs", label="string json = ''new Date()''", span="2333-2333"];
m5_1375 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="ReadAsyncTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2334-2334"];
m5_1376 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2336-2336"];
m5_1377 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2337-2337"];
m5_1378 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2339-2339"];
m5_1379 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2340-2340"];
m5_1380 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", span="2331-2331"];
m5_452 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", span="822-822"];
m5_453 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="ReadAsyncTests.cs", label="BigInteger i = new BigInteger(long.MaxValue)", span="824-824"];
m5_454 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="ReadAsyncTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(i.ToString(CultureInfo.InvariantCulture)))", span="826-826"];
m5_459 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="ReadAsyncTests.cs", label="BigInteger total = i + j", span="832-832"];
m5_455 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="ReadAsyncTests.cs", label="reader.Read()", span="827-827"];
m5_456 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="ReadAsyncTests.cs", label="Assert.AreEqual(typeof(long), reader.ValueType)", span="828-828"];
m5_457 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="ReadAsyncTests.cs", label="int j = 1", span="830-830"];
m5_458 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="ReadAsyncTests.cs", label="j < 1000", span="830-830"];
m5_463 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="ReadAsyncTests.cs", label="j++", span="830-830"];
m5_460 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="ReadAsyncTests.cs", label="reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)))", span="834-834"];
m5_461 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="ReadAsyncTests.cs", label="reader.Read()", span="835-835"];
m5_462 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="ReadAsyncTests.cs", label="Assert.AreEqual(typeof(BigInteger), reader.ValueType)", span="837-837"];
m5_464 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", span="822-822"];
m5_1052 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", span="1790-1790"];
m5_1053 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="ReadAsyncTests.cs", label="string json = ''{\''Offset\'':\''\\/Date(946663200000+0600)\\/\''}''", span="1792-1792"];
m5_1054 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="ReadAsyncTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1794-1794"];
m5_1055 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="1796-1796"];
m5_1056 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1797-1797"];
m5_1057 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="1799-1799"];
m5_1058 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1800-1800"];
m5_1059 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="ReadAsyncTests.cs", label="reader.ReadAsDateTimeOffset()", span="1802-1802"];
m5_1060 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="1803-1803"];
m5_1061 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="ReadAsyncTests.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="1804-1804"];
m5_1062 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="ReadAsyncTests.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6)), reader.Value)", span="1805-1805"];
m5_1063 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="1807-1807"];
m5_1064 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1808-1808"];
m5_1065 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", span="1790-1790"];
m5_635 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", span="1134-1134"];
m5_636 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="ReadAsyncTests.cs", label="string input = ''{value:'Purple\\r \\n monkey\\'s:\\tdishwasher'}''", span="1136-1136"];
m5_637 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="ReadAsyncTests.cs", label="StringReader sr = new StringReader(input)", span="1138-1138"];
m5_638 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="ReadAsyncTests.cs", label="JsonReader jsonReader = new JsonTextReader(sr)", span="1140-1140"];
m5_639 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="ReadAsyncTests.cs", label="Assert.AreEqual(0, jsonReader.Depth)", span="1142-1142"];
m5_640 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="ReadAsyncTests.cs", label="jsonReader.Read()", span="1144-1144"];
m5_641 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.StartObject, jsonReader.TokenType)", span="1145-1145"];
m5_642 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="ReadAsyncTests.cs", label="Assert.AreEqual(0, jsonReader.Depth)", span="1146-1146"];
m5_643 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="ReadAsyncTests.cs", label="jsonReader.Read()", span="1148-1148"];
m5_644 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.PropertyName, jsonReader.TokenType)", span="1149-1149"];
m5_645 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="ReadAsyncTests.cs", label="Assert.AreEqual(1, jsonReader.Depth)", span="1150-1150"];
m5_646 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="ReadAsyncTests.cs", label="jsonReader.Read()", span="1152-1152"];
m5_647 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="ReadAsyncTests.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.String)", span="1153-1153"];
m5_648 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="ReadAsyncTests.cs", label="Assert.AreEqual(''Purple\r \n monkey's:\tdishwasher'', jsonReader.Value)", span="1154-1154"];
m5_649 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="ReadAsyncTests.cs", label="Assert.AreEqual('\'', jsonReader.QuoteChar)", span="1155-1155"];
m5_650 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="ReadAsyncTests.cs", label="Assert.AreEqual(1, jsonReader.Depth)", span="1156-1156"];
m5_651 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="ReadAsyncTests.cs", label="jsonReader.Read()", span="1158-1158"];
m5_652 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.EndObject, jsonReader.TokenType)", span="1159-1159"];
m5_653 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="ReadAsyncTests.cs", label="Assert.AreEqual(0, jsonReader.Depth)", span="1160-1160"];
m5_654 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", span="1134-1134"];
m5_1459 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", span="2471-2471"];
m5_1460 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="ReadAsyncTests.cs", label="string json = @''0x20''", span="2473-2473"];
m5_1461 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="ReadAsyncTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2475-2475"];
m5_1462 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="ReadAsyncTests.cs", label="reader.ReadAsDecimal()", span="2477-2477"];
m5_1463 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2478-2478"];
m5_1464 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="ReadAsyncTests.cs", label="Assert.AreEqual(32m, reader.Value)", span="2479-2479"];
m5_1465 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", span="2471-2471"];
m5_436 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", span="798-798"];
m5_437 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="ReadAsyncTests.cs", label="long i = int.MinValue", span="800-800"];
m5_438 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="ReadAsyncTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(i.ToString(CultureInfo.InvariantCulture)))", span="802-802"];
m5_441 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="ReadAsyncTests.cs", label="Assert.AreEqual(i, reader.Value)", span="805-805"];
m5_444 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="ReadAsyncTests.cs", label="long total = -j + i", span="809-809"];
m5_439 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="ReadAsyncTests.cs", label="reader.Read()", span="803-803"];
m5_440 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="ReadAsyncTests.cs", label="Assert.AreEqual(typeof(long), reader.ValueType)", span="804-804"];
m5_445 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="ReadAsyncTests.cs", label="ExceptionAssert.Throws<OverflowException>(\r\n          ''Arithmetic operation resulted in an overflow.'',\r\n          () =>\r\n          {\r\n            reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)));\r\n            reader.ReadAsInt32();\r\n          })", span="810-816"];
m5_442 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="ReadAsyncTests.cs", label="int j = 1", span="807-807"];
m5_443 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="ReadAsyncTests.cs", label="j < 1000", span="807-807"];
m5_446 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="ReadAsyncTests.cs", label="j++", span="807-807"];
m5_447 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", span="798-798"];
m5_1739 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", span="2890-2890"];
m5_1740 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="ReadAsyncTests.cs", label=Error, span="2892-2892"];
m5_1742 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="ReadAsyncTests.cs", label="return _inner.Read(buffer, index, 1);", span="2895-2895"];
m5_1741 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="ReadAsyncTests.cs", label="throw new Exception(''Read error'');", span="2893-2893"];
m5_1743 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", span="2890-2890"];
m5_744 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(bool)", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(bool)", span="874-874"];
m5_1386 [cluster="Unk.>", file="ReadAsyncTests.cs", label="Entry Unk.>", span=""];
m5_589 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", span="1075-1075"];
m5_590 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="ReadAsyncTests.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''{'hi\r\nbye':1}''))", span="1077-1077"];
m5_591 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="1078-1078"];
m5_592 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="1079-1079"];
m5_593 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1080-1080"];
m5_594 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="ReadAsyncTests.cs", label="Assert.AreEqual(@''hi\r\nbye'', reader.Value)", span="1081-1082"];
m5_595 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="1083-1083"];
m5_596 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="1084-1084"];
m5_597 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="ReadAsyncTests.cs", label="Assert.AreEqual(1L, reader.Value)", span="1085-1085"];
m5_598 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="1086-1086"];
m5_599 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1087-1087"];
m5_600 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="ReadAsyncTests.cs", label="Assert.IsFalse(reader.Read())", span="1088-1088"];
m5_601 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", span="1075-1075"];
m5_1211 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeperator()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeperator()", span="2038-2038"];
m5_1212 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeperator()", file="ReadAsyncTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''nullz''))", span="2040-2040"];
m5_1213 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeperator()", file="ReadAsyncTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n        ''Error parsing null value. Path '', line 1, position 4.'',\r\n        () =>\r\n          {\r\n            reader.Read();\r\n          })", span="2042-2047"];
m5_1214 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeperator()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeperator()", span="2038-2038"];
m5_1350 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", span="2292-2292"];
m5_1351 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="ReadAsyncTests.cs", label="string json = ''[]''", span="2294-2294"];
m5_1352 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="ReadAsyncTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2295-2295"];
m5_1353 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2297-2297"];
m5_1354 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2298-2298"];
m5_1355 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2300-2300"];
m5_1356 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2301-2301"];
m5_1357 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", span="2292-2292"];
m5_1334 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", span="2266-2266"];
m5_1335 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="ReadAsyncTests.cs", label="string json = ''new Date !''", span="2268-2268"];
m5_1336 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="ReadAsyncTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2269-2269"];
m5_1337 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="ReadAsyncTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n        ''Unexpected character while parsing constructor: !. Path '', line 1, position 9.'',\r\n        () =>\r\n        {\r\n          reader.Read();\r\n        })", span="2271-2276"];
m5_1338 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", span="2266-2266"];
m5_141 [cluster="Newtonsoft.Json.Tests.SlowStream.SlowStream(string, System.Text.Encoding, int)", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.SlowStream.SlowStream(string, System.Text.Encoding, int)", span="2912-2912"];
m5_1751 [cluster="Newtonsoft.Json.Tests.SlowStream.SlowStream(string, System.Text.Encoding, int)", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.SlowStream.SlowStream(string, System.Text.Encoding, int)", span="2912-2912"];
m5_409 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", span="740-740"];
m5_410 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="ReadAsyncTests.cs", label="string json = @''[\r\n  {\r\n    ''''$id'''': ''''1'''',\r\n    ''''Name'''': ''''e1'''',\r\n    ''''Manager'''': null\r\n  },\r\n  {\r\n    ''''$id'''': ''''2'''',\r\n    ''''Name'''': ''''e2'''',\r\n    ''''Manager'''': null\r\n  },\r\n  {\r\n    ''''$ref'''': ''''1''''\r\n  },\r\n  {\r\n    ''''$ref'''': ''''2''''\r\n  }\r\n]''", span="742-759"];
m5_411 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="ReadAsyncTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="761-761"];
m5_412 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="ReadAsyncTests.cs", label="int i = 0", span="766-766"];
m5_414 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="ReadAsyncTests.cs", label="reader.Read()", span="768-768"];
m5_416 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="ReadAsyncTests.cs", label="reader.Read()", span="771-771"];
m5_417 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="772-772"];
m5_413 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="ReadAsyncTests.cs", label="i < 15", span="766-766"];
m5_415 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="ReadAsyncTests.cs", label="i++", span="766-766"];
m5_418 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", span="740-740"];
m5_122 [cluster="Newtonsoft.Json.JsonReader.Read()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.JsonReader.Read()", span="332-332"];
m5_655 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewlineLastCharacter()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewlineLastCharacter()", span="1165-1165"];
m5_656 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewlineLastCharacter()", file="ReadAsyncTests.cs", label="string input = @''{\r\n  CPU: 'Intel',\r\n  Drives: [ /* Com*ment */\r\n    'DVD read/writer',\r\n    ''''500 gigabyte hard drive''''\r\n  ]\r\n}'' + '\n'", span="1167-1173"];
m5_657 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewlineLastCharacter()", file="ReadAsyncTests.cs", label="object o = JsonConvert.DeserializeObject(input)", span="1175-1175"];
m5_658 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewlineLastCharacter()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewlineLastCharacter()", span="1165-1165"];
m5_375 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(int)", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(int)", span="379-379"];
m5_691 [cluster="long.ToString()", file="ReadAsyncTests.cs", label="Entry long.ToString()", span="0-0"];
m5_1185 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", span="1991-1991"];
m5_1186 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="ReadAsyncTests.cs", label="string json = @''{''''Name'''': 1.1}''", span="1993-1993"];
m5_1187 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="ReadAsyncTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1995-1995"];
m5_1188 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="1997-1997"];
m5_1189 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1998-1998"];
m5_1190 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2000-2000"];
m5_1191 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2001-2001"];
m5_1192 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="ReadAsyncTests.cs", label="ExceptionAssert.Throws<FormatException>(\r\n        ''Input string was not in a correct format.'',\r\n        () =>\r\n        {\r\n          reader.ReadAsInt32();\r\n        })", span="2003-2008"];
m5_1193 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", span="1991-1991"];
m5_466 [cluster="StringReader.cstr", file="ReadAsyncTests.cs", label="Entry StringReader.cstr", span=""];
m5_430 [cluster="long.ToString(System.IFormatProvider)", file="ReadAsyncTests.cs", label="Entry long.ToString(System.IFormatProvider)", span="0-0"];
m5_755 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="779-779"];
m5_753 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="428-428"];
m5_1764 [cluster="Newtonsoft.Json.Tests.SlowStream.Seek(long, System.IO.SeekOrigin)", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.SlowStream.Seek(long, System.IO.SeekOrigin)", span="2960-2960"];
m5_1765 [cluster="Newtonsoft.Json.Tests.SlowStream.Seek(long, System.IO.SeekOrigin)", file="ReadAsyncTests.cs", label="throw new NotSupportedException();", span="2962-2962"];
m5_1766 [cluster="Newtonsoft.Json.Tests.SlowStream.Seek(long, System.IO.SeekOrigin)", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.SlowStream.Seek(long, System.IO.SeekOrigin)", span="2960-2960"];
m5_1452 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", span="2459-2459"];
m5_1453 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="ReadAsyncTests.cs", label="string json = @''010''", span="2461-2461"];
m5_1454 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="ReadAsyncTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2463-2463"];
m5_1455 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="ReadAsyncTests.cs", label="reader.ReadAsDecimal()", span="2465-2465"];
m5_1456 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2466-2466"];
m5_1457 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="ReadAsyncTests.cs", label="Assert.AreEqual(8m, reader.Value)", span="2467-2467"];
m5_1458 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", span="2459-2459"];
m5_1767 [cluster="System.NotSupportedException.NotSupportedException()", file="ReadAsyncTests.cs", label="Entry System.NotSupportedException.NotSupportedException()", span="0-0"];
m5_1534 [cluster="System.Convert.ToDouble(string, System.IFormatProvider)", file="ReadAsyncTests.cs", label="Entry System.Convert.ToDouble(string, System.IFormatProvider)", span="0-0"];
m5_1536 [cluster="System.Console.WriteLine(string)", file="ReadAsyncTests.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m5_748 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="809-809"];
m5_865 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", span="1480-1480"];
m5_866 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="ReadAsyncTests.cs", label="string json = @''{\r\n    ''''A'''' : true,\r\n    ''''B'''' ''''''", span="1482-1484"];
m5_867 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="ReadAsyncTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1486-1486"];
m5_868 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="ReadAsyncTests.cs", label="reader.Read()", span="1488-1488"];
m5_869 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1489-1489"];
m5_870 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="ReadAsyncTests.cs", label="reader.Read()", span="1491-1491"];
m5_871 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1492-1492"];
m5_872 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="ReadAsyncTests.cs", label="reader.Read()", span="1494-1494"];
m5_873 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="1495-1495"];
m5_874 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="ReadAsyncTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n        @''Invalid character after parsing property name. Expected ':' but got: ''''. Path 'A', line 3, position 9.'',\r\n        () =>\r\n        {\r\n          reader.Read();\r\n        })", span="1497-1502"];
m5_875 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", span="1480-1480"];
m5_1358 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", span="2305-2305"];
m5_1359 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="ReadAsyncTests.cs", label="string json = ''{}''", span="2307-2307"];
m5_1360 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="ReadAsyncTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2308-2308"];
m5_1361 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2310-2310"];
m5_1362 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2311-2311"];
m5_1363 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2313-2313"];
m5_1364 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2314-2314"];
m5_1365 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", span="2305-2305"];
m5_29 [cluster="Unk.AreEqual", file="ReadAsyncTests.cs", label="Entry Unk.AreEqual", span=""];
m5_879 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", span="1506-1506"];
m5_880 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="ReadAsyncTests.cs", label="StringReader s = new StringReader(@''''''SGVsbG8gd29ybGQu'''''')", span="1508-1508"];
m5_881 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="ReadAsyncTests.cs", label="JsonTextReader reader = new JsonTextReader(s)", span="1509-1509"];
m5_882 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="ReadAsyncTests.cs", label="byte[] data = reader.ReadAsBytes()", span="1511-1511"];
m5_883 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="ReadAsyncTests.cs", label="Assert.IsNotNull(data)", span="1512-1512"];
m5_884 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="ReadAsyncTests.cs", label="string text = Encoding.UTF8.GetString(data, 0, data.Length)", span="1514-1514"];
m5_885 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="ReadAsyncTests.cs", label="Assert.AreEqual(''Hello world.'', text)", span="1515-1515"];
m5_886 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", span="1506-1506"];
m5_1736 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(decimal)", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(decimal)", span="537-537"];
m5_746 [cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="405-405"];
m5_617 [cluster="Unk.AreEquivalent", file="ReadAsyncTests.cs", label="Entry Unk.AreEquivalent", span=""];
m5_467 [cluster="Unk.ToString", file="ReadAsyncTests.cs", label="Entry Unk.ToString", span=""];
m5_344 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", span="657-657"];
m5_345 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", file="ReadAsyncTests.cs", label="string s = new string('a', 10000)", span="659-659"];
m5_346 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", file="ReadAsyncTests.cs", label="JsonReader reader = new JsonTextReader(new StringReader(''''' + s + '''''))", span="660-660"];
m5_348 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", file="ReadAsyncTests.cs", label="Assert.AreEqual(s, reader.Value)", span="663-663"];
m5_347 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", file="ReadAsyncTests.cs", label="reader.Read()", span="661-661"];
m5_349 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", span="657-657"];
m5_1067 [cluster="System.DateTime.DateTime(int, int, int)", file="ReadAsyncTests.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m5_1768 [cluster="Newtonsoft.Json.Tests.SlowStream.SetLength(long)", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.SlowStream.SetLength(long)", span="2965-2965"];
m5_1769 [cluster="Newtonsoft.Json.Tests.SlowStream.SetLength(long)", file="ReadAsyncTests.cs", label="throw new NotSupportedException();", span="2967-2967"];
m5_1770 [cluster="Newtonsoft.Json.Tests.SlowStream.SetLength(long)", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.SlowStream.SetLength(long)", span="2965-2965"];
m5_888 [cluster="Unk.IsNotNull", file="ReadAsyncTests.cs", label="Entry Unk.IsNotNull", span=""];
m5_969 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", span="1639-1639"];
m5_970 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", file="ReadAsyncTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''{''))", span="1641-1641"];
m5_971 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", file="ReadAsyncTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n        ''Unexpected end when reading bytes. Path '', line 1, position 1.'',\r\n        () =>\r\n        {\r\n          reader.ReadAsBytes();\r\n        })", span="1643-1648"];
m5_972 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", span="1639-1639"];
m5_376 [cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="379-379"];
m5_602 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", span="1092-1092"];
m5_603 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="ReadAsyncTests.cs", label="string helloWorld = ''Hello world!''", span="1094-1094"];
m5_604 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="ReadAsyncTests.cs", label="byte[] helloWorldData = Encoding.UTF8.GetBytes(helloWorld)", span="1095-1095"];
m5_605 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="ReadAsyncTests.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''[1,''' + Convert.ToBase64String(helloWorldData) + @''']''))", span="1097-1097"];
m5_611 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="ReadAsyncTests.cs", label="CollectionAssert.AreEquivalent(helloWorldData, data)", span="1103-1103"];
m5_606 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="1098-1098"];
m5_607 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="1099-1099"];
m5_608 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="1100-1100"];
m5_609 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="1101-1101"];
m5_610 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="ReadAsyncTests.cs", label="byte[] data = reader.ReadAsBytes()", span="1102-1102"];
m5_612 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Bytes, reader.TokenType)", span="1104-1104"];
m5_613 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="1105-1105"];
m5_614 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="1106-1106"];
m5_615 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="ReadAsyncTests.cs", label="Assert.IsFalse(reader.Read())", span="1108-1108"];
m5_616 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", span="1092-1092"];
m5_43 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", span="101-101"];
m5_44 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="ReadAsyncTests.cs", label="string json = @''{''''recipe_id'''':''''12'''',''''recipe_name'''':''''Apocalypse Leather Armors'''',''''recipe_text'''':''''#C16------------------------------\r\n#C12Ingredients #C20\r\n#C16------------------------------\r\n\r\na piece of Leather Armor\r\n( ie #L \''''Enhanced Leather Armor Boots\'''' \''''85644\'''' )\r\n<img src=rdb:\/\/13264>\r\n\r\n#L \''''Hacker Tool\'''' \''''87814\''''\r\n<img src=rdb:\/\/99282>\r\n\r\n#L \''''Clanalizer\'''' \''''208313\''''\r\n<img src=rdb:\/\/156479>\r\n\r\n#C16------------------------------\r\n#C12Recipe #C16\r\n#C16------------------------------#C20\r\n\r\nHacker Tool\r\n#C15+#C20\r\na piece of Leather Armor\r\n#C15=#C20\r\n<img src=rdb:\/\/13264>\r\na piece of Hacked Leather Armor\r\n( ie : #L \''''Hacked Leather Armor Boots\'''' \''''245979\'''' )\r\n#C16Skills: |  BE  |#C20\r\n\r\n#C14------------------------------#C20\r\n\r\nClanalizer\r\n#C15+#C20\r\na piece of Hacked Leather Armor\r\n#C15=#C20\r\n<img src=rdb:\/\/13264>\r\na piece of Apocalypse Leather Armor\r\n( ie : #L \''''Apocalypse Leather Armor Boots\'''' \''''245966\'''' )\r\n#C16Skills: |  ??  |#C20\r\n\r\n#C16------------------------------\r\n#C12Details#C16\r\n#C16------------------------------#C20\r\n\r\n#L \''''Apocalypse Leather Armor Boots\'''' \''''245967\''''\r\n#L \''''Apocalypse Leather Armor Gloves\'''' \''''245969\''''\r\n#L \''''Apocalypse Leather Armor Helmet\'''' \''''245975\''''\r\n#L \''''Apocalypse Leather Armor Pants\'''' \''''245971\''''\r\n#L \''''Apocalypse Leather Armor Sleeves\'''' \''''245973\''''\r\n#L \''''Apocalypse Leather Body Armor\'''' \''''245965\''''\r\n\r\n#C16------------------------------\r\n#C12Comments#C16\r\n#C16------------------------------#C20\r\n\r\nNice froob armor.. but ugleh!\r\n\r\n'''',''''recipe_author'''':null}''", span="103-103"];
m5_45 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="ReadAsyncTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="105-105"];
m5_46 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="107-107"];
m5_47 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="108-108"];
m5_48 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="110-110"];
m5_49 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="111-111"];
m5_50 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="113-113"];
m5_51 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="114-114"];
m5_52 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="116-116"];
m5_53 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="117-117"];
m5_54 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="119-119"];
m5_55 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="120-120"];
m5_56 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="122-122"];
m5_57 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="123-123"];
m5_58 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="ReadAsyncTests.cs", label="Assert.AreEqual(''recipe_text'', reader.Value)", span="124-124"];
m5_59 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="126-126"];
m5_60 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="127-127"];
m5_61 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="ReadAsyncTests.cs", label="Assert.AreEqual(@''#C16------------------------------\r\n#C12Ingredients #C20\r\n#C16------------------------------\r\n\r\na piece of Leather Armor\r\n( ie #L ''''Enhanced Leather Armor Boots'''' ''''85644'''' )\r\n<img src=rdb://13264>\r\n\r\n#L ''''Hacker Tool'''' ''''87814''''\r\n<img src=rdb://99282>\r\n\r\n#L ''''Clanalizer'''' ''''208313''''\r\n<img src=rdb://156479>\r\n\r\n#C16------------------------------\r\n#C12Recipe #C16\r\n#C16------------------------------#C20\r\n\r\nHacker Tool\r\n#C15+#C20\r\na piece of Leather Armor\r\n#C15=#C20\r\n<img src=rdb://13264>\r\na piece of Hacked Leather Armor\r\n( ie : #L ''''Hacked Leather Armor Boots'''' ''''245979'''' )\r\n#C16Skills: |  BE  |#C20\r\n\r\n#C14------------------------------#C20\r\n\r\nClanalizer\r\n#C15+#C20\r\na piece of Hacked Leather Armor\r\n#C15=#C20\r\n<img src=rdb://13264>\r\na piece of Apocalypse Leather Armor\r\n( ie : #L ''''Apocalypse Leather Armor Boots'''' ''''245966'''' )\r\n#C16Skills: |  ??  |#C20\r\n\r\n#C16------------------------------\r\n#C12Details#C16\r\n#C16------------------------------#C20\r\n\r\n#L ''''Apocalypse Leather Armor Boots'''' ''''245967''''\r\n#L ''''Apocalypse Leather Armor Gloves'''' ''''245969''''\r\n#L ''''Apocalypse Leather Armor Helmet'''' ''''245975''''\r\n#L ''''Apocalypse Leather Armor Pants'''' ''''245971''''\r\n#L ''''Apocalypse Leather Armor Sleeves'''' ''''245973''''\r\n#L ''''Apocalypse Leather Body Armor'''' ''''245965''''\r\n\r\n#C16------------------------------\r\n#C12Comments#C16\r\n#C16------------------------------#C20\r\n\r\nNice froob armor.. but ugleh!\r\n\r\n'', reader.Value)", span="129-184"];
m5_62 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", span="101-101"];
m5_1719 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", span="2852-2852"];
m5_1720 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="ReadAsyncTests.cs", label="StringWriter sw = new StringWriter()", span="2854-2854"];
m5_1721 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="ReadAsyncTests.cs", label="JsonTextWriter writer = new JsonTextWriter(sw)", span="2855-2855"];
m5_1726 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="ReadAsyncTests.cs", label="string json = sw.ToString()", span="2862-2862"];
m5_1722 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="ReadAsyncTests.cs", label="writer.WriteStartArray()", span="2857-2857"];
m5_1723 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="ReadAsyncTests.cs", label="writer.WriteValue(decimal.MaxValue)", span="2858-2858"];
m5_1724 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="ReadAsyncTests.cs", label="writer.WriteValue(decimal.MinValue)", span="2859-2859"];
m5_1725 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="ReadAsyncTests.cs", label="writer.WriteEndArray()", span="2860-2860"];
m5_1727 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="ReadAsyncTests.cs", label="StringReader sr = new StringReader(json)", span="2864-2864"];
m5_1728 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="ReadAsyncTests.cs", label="JsonTextReader reader = new JsonTextReader(sr)", span="2865-2865"];
m5_1729 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2867-2867"];
m5_1730 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="ReadAsyncTests.cs", label="decimal? max = reader.ReadAsDecimal()", span="2869-2869"];
m5_1732 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="ReadAsyncTests.cs", label="decimal? min = reader.ReadAsDecimal()", span="2872-2872"];
m5_1734 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2875-2875"];
m5_1731 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="ReadAsyncTests.cs", label="Assert.AreEqual(decimal.MaxValue, max)", span="2870-2870"];
m5_1733 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="ReadAsyncTests.cs", label="Assert.AreEqual(decimal.MinValue, min)", span="2873-2873"];
m5_1735 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", span="2852-2852"];
m5_373 [cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="116-116"];
m5_801 [cluster="System.Convert.ToChar(string)", file="ReadAsyncTests.cs", label="Entry System.Convert.ToChar(string)", span="0-0"];
m5_1716 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Entry lambda expression", span="2843-2843"];
m5_41 [cluster="lambda expression", file="ReadAsyncTests.cs", label="reader.Read()", span="97-97"];
m5_40 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Entry lambda expression", span="97-97"];
m5_42 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Exit lambda expression", span="97-97"];
m5_149 [cluster="lambda expression", file="ReadAsyncTests.cs", label="reader.Read()", span="346-346"];
m5_148 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Entry lambda expression", span="344-349"];
m5_150 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Exit lambda expression", span="344-349"];
m5_167 [cluster="lambda expression", file="ReadAsyncTests.cs", label="reader.Read()", span="385-385"];
m5_166 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Entry lambda expression", span="383-386"];
m5_168 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Exit lambda expression", span="383-386"];
m5_180 [cluster="lambda expression", file="ReadAsyncTests.cs", label="reader.Read()", span="417-417"];
m5_179 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Entry lambda expression", span="415-420"];
m5_181 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Exit lambda expression", span="415-420"];
m5_334 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Entry lambda expression", span="637-640"];
m5_335 [cluster="lambda expression", file="ReadAsyncTests.cs", label="new JsonTextReader(null)", span="639-639"];
m5_336 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Exit lambda expression", span="637-640"];
m5_342 [cluster="lambda expression", file="ReadAsyncTests.cs", label="reader.Read()", span="652-652"];
m5_341 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Entry lambda expression", span="650-653"];
m5_343 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Exit lambda expression", span="650-653"];
m5_432 [cluster="lambda expression", file="ReadAsyncTests.cs", label="reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)))", span="791-791"];
m5_431 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Entry lambda expression", span="789-793"];
m5_433 [cluster="lambda expression", file="ReadAsyncTests.cs", label="reader.ReadAsInt32()", span="792-792"];
m5_434 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Exit lambda expression", span="789-793"];
m5_449 [cluster="lambda expression", file="ReadAsyncTests.cs", label="reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)))", span="814-814"];
m5_448 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Entry lambda expression", span="812-816"];
m5_450 [cluster="lambda expression", file="ReadAsyncTests.cs", label="reader.ReadAsInt32()", span="815-815"];
m5_451 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Exit lambda expression", span="812-816"];
m5_502 [cluster="lambda expression", file="ReadAsyncTests.cs", label="reader.Read()", span="913-913"];
m5_501 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Entry lambda expression", span="911-914"];
m5_503 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Exit lambda expression", span="911-914"];
m5_509 [cluster="lambda expression", file="ReadAsyncTests.cs", label="reader.Read()", span="926-926"];
m5_508 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Entry lambda expression", span="924-927"];
m5_510 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Exit lambda expression", span="924-927"];
m5_516 [cluster="lambda expression", file="ReadAsyncTests.cs", label="reader.ReadAsBytes()", span="939-939"];
m5_515 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Entry lambda expression", span="937-940"];
m5_517 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Exit lambda expression", span="937-940"];
m5_527 [cluster="lambda expression", file="ReadAsyncTests.cs", label="reader.ReadAsBytes()", span="955-955"];
m5_526 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Entry lambda expression", span="953-956"];
m5_528 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Exit lambda expression", span="953-956"];
m5_542 [cluster="lambda expression", file="ReadAsyncTests.cs", label="reader.Read()", span="979-979"];
m5_541 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Entry lambda expression", span="977-980"];
m5_543 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Exit lambda expression", span="977-980"];
m5_693 [cluster="lambda expression", file="ReadAsyncTests.cs", label="reader.ReadAsInt32()", span="1234-1234"];
m5_692 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Entry lambda expression", span="1234-1234"];
m5_696 [cluster="lambda expression", file="ReadAsyncTests.cs", label="reader.ReadAsInt32()", span="1237-1237"];
m5_695 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Entry lambda expression", span="1237-1237"];
m5_699 [cluster="lambda expression", file="ReadAsyncTests.cs", label="reader.ReadAsInt32()", span="1240-1240"];
m5_698 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Entry lambda expression", span="1240-1240"];
m5_702 [cluster="lambda expression", file="ReadAsyncTests.cs", label="reader.ReadAsInt32()", span="1246-1246"];
m5_701 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Entry lambda expression", span="1246-1246"];
m5_694 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Exit lambda expression", span="1234-1234"];
m5_697 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Exit lambda expression", span="1237-1237"];
m5_700 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Exit lambda expression", span="1240-1240"];
m5_703 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Exit lambda expression", span="1246-1246"];
m5_877 [cluster="lambda expression", file="ReadAsyncTests.cs", label="reader.Read()", span="1501-1501"];
m5_876 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Entry lambda expression", span="1499-1502"];
m5_878 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Exit lambda expression", span="1499-1502"];
m5_956 [cluster="lambda expression", file="ReadAsyncTests.cs", label="reader.Read()", span="1616-1616"];
m5_955 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Entry lambda expression", span="1614-1617"];
m5_957 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Exit lambda expression", span="1614-1617"];
m5_974 [cluster="lambda expression", file="ReadAsyncTests.cs", label="reader.ReadAsBytes()", span="1647-1647"];
m5_973 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Entry lambda expression", span="1645-1648"];
m5_975 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Exit lambda expression", span="1645-1648"];
m5_987 [cluster="lambda expression", file="ReadAsyncTests.cs", label="reader.ReadAsDecimal()", span="1671-1671"];
m5_986 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Entry lambda expression", span="1669-1672"];
m5_988 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Exit lambda expression", span="1669-1672"];
m5_994 [cluster="lambda expression", file="ReadAsyncTests.cs", label="reader.ReadAsBytes()", span="1684-1684"];
m5_993 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Entry lambda expression", span="1682-1685"];
m5_995 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Exit lambda expression", span="1682-1685"];
m5_1001 [cluster="lambda expression", file="ReadAsyncTests.cs", label="reader.ReadAsDateTimeOffset()", span="1698-1698"];
m5_1000 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Entry lambda expression", span="1696-1699"];
m5_1002 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Exit lambda expression", span="1696-1699"];
m5_1015 [cluster="lambda expression", file="ReadAsyncTests.cs", label="reader.ReadAsBytes()", span="1723-1723"];
m5_1014 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Entry lambda expression", span="1721-1724"];
m5_1016 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Exit lambda expression", span="1721-1724"];
m5_1022 [cluster="lambda expression", file="ReadAsyncTests.cs", label="reader.ReadAsBytes()", span="1736-1736"];
m5_1021 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Entry lambda expression", span="1734-1737"];
m5_1023 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Exit lambda expression", span="1734-1737"];
m5_1093 [cluster="lambda expression", file="ReadAsyncTests.cs", label="reader.ReadAsDateTimeOffset()", span="1850-1850"];
m5_1092 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Entry lambda expression", span="1848-1851"];
m5_1094 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Exit lambda expression", span="1848-1851"];
m5_1195 [cluster="lambda expression", file="ReadAsyncTests.cs", label="reader.ReadAsInt32()", span="2007-2007"];
m5_1194 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Entry lambda expression", span="2005-2008"];
m5_1196 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Exit lambda expression", span="2005-2008"];
m5_1202 [cluster="lambda expression", file="ReadAsyncTests.cs", label="reader.Read()", span="2020-2020"];
m5_1201 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Entry lambda expression", span="2018-2021"];
m5_1203 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Exit lambda expression", span="2018-2021"];
m5_1209 [cluster="lambda expression", file="ReadAsyncTests.cs", label="reader.Read()", span="2033-2033"];
m5_1208 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Entry lambda expression", span="2031-2034"];
m5_1210 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Exit lambda expression", span="2031-2034"];
m5_1216 [cluster="lambda expression", file="ReadAsyncTests.cs", label="reader.Read()", span="2046-2046"];
m5_1215 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Entry lambda expression", span="2044-2047"];
m5_1217 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Exit lambda expression", span="2044-2047"];
m5_1223 [cluster="lambda expression", file="ReadAsyncTests.cs", label="reader.Read()", span="2059-2059"];
m5_1222 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Entry lambda expression", span="2057-2060"];
m5_1224 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Exit lambda expression", span="2057-2060"];
m5_1230 [cluster="lambda expression", file="ReadAsyncTests.cs", label="reader.Read()", span="2072-2072"];
m5_1229 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Entry lambda expression", span="2070-2073"];
m5_1231 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Exit lambda expression", span="2070-2073"];
m5_1332 [cluster="lambda expression", file="ReadAsyncTests.cs", label="reader.Read()", span="2261-2261"];
m5_1331 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Entry lambda expression", span="2259-2262"];
m5_1333 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Exit lambda expression", span="2259-2262"];
m5_1340 [cluster="lambda expression", file="ReadAsyncTests.cs", label="reader.Read()", span="2275-2275"];
m5_1339 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Entry lambda expression", span="2273-2276"];
m5_1341 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Exit lambda expression", span="2273-2276"];
m5_1371 [cluster="lambda expression", file="ReadAsyncTests.cs", label="reader.Read()", span="2326-2326"];
m5_1370 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Entry lambda expression", span="2324-2327"];
m5_1372 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Exit lambda expression", span="2324-2327"];
m5_1388 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2353-2353"];
m5_1387 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Entry lambda expression", span="2351-2354"];
m5_1389 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Exit lambda expression", span="2351-2354"];
m5_1489 [cluster="lambda expression", file="ReadAsyncTests.cs", label="reader.Read()", span="2519-2519"];
m5_1488 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Entry lambda expression", span="2517-2520"];
m5_1490 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Exit lambda expression", span="2517-2520"];
m5_1545 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2607-2607"];
m5_1544 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Entry lambda expression", span="2605-2608"];
m5_1546 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Exit lambda expression", span="2605-2608"];
m5_1577 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2628-2628"];
m5_1580 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2651-2651"];
m5_1576 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Entry lambda expression", span="2626-2629"];
m5_1579 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Entry lambda expression", span="2649-2652"];
m5_1578 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Exit lambda expression", span="2626-2629"];
m5_1581 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Exit lambda expression", span="2649-2652"];
m5_1702 [cluster="lambda expression", file="ReadAsyncTests.cs", label="jsonTextReader.Read()", span="2812-2812"];
m5_1705 [cluster="lambda expression", file="ReadAsyncTests.cs", label="jsonTextReader.Read()", span="2815-2815"];
m5_1708 [cluster="lambda expression", file="ReadAsyncTests.cs", label="jsonTextReader.Read()", span="2826-2826"];
m5_1711 [cluster="lambda expression", file="ReadAsyncTests.cs", label="jsonTextReader.Read()", span="2837-2837"];
m5_1714 [cluster="lambda expression", file="ReadAsyncTests.cs", label="jsonTextReader.Read()", span="2840-2840"];
m5_1717 [cluster="lambda expression", file="ReadAsyncTests.cs", label="jsonTextReader.Read()", span="2843-2843"];
m5_1701 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Entry lambda expression", span="2812-2812"];
m5_1704 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Entry lambda expression", span="2815-2815"];
m5_1707 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Entry lambda expression", span="2826-2826"];
m5_1710 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Entry lambda expression", span="2837-2837"];
m5_1713 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Entry lambda expression", span="2840-2840"];
m5_1703 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Exit lambda expression", span="2812-2812"];
m5_1706 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Exit lambda expression", span="2815-2815"];
m5_1709 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Exit lambda expression", span="2826-2826"];
m5_1712 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Exit lambda expression", span="2837-2837"];
m5_1715 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Exit lambda expression", span="2840-2840"];
m5_1718 [cluster="lambda expression", file="ReadAsyncTests.cs", label="Exit lambda expression", span="2843-2843"];
m5_1677 [cluster="System.DateTimeOffset.DateTimeOffset(long, System.TimeSpan)", file="ReadAsyncTests.cs", label="Entry System.DateTimeOffset.DateTimeOffset(long, System.TimeSpan)", span="0-0"];
m5_1272 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", span="2152-2152"];
m5_1273 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="ReadAsyncTests.cs", label="string json = @''/*comment*/ { /*comment*/\r\n        ''''Name'''': /*comment*/ ''''Apple'''' /*comment*/, /*comment*/\r\n        ''''ExpiryDate'''': ''''\/Date(1230422400000)\/'''',\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''': /*comment*/ [ /*comment*/\r\n          ''''Small'''', /*comment*/\r\n          ''''Medium'''' /*comment*/,\r\n          /*comment*/ ''''Large''''\r\n        /*comment*/ ] /*comment*/\r\n      } /*comment*/''", span="2154-2163"];
m5_1274 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="ReadAsyncTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2165-2165"];
m5_1275 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="ReadAsyncTests.cs", label="int i = 0", span="2170-2170"];
m5_1277 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2172-2172"];
m5_1279 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2175-2175"];
m5_1280 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2176-2176"];
m5_1281 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="ReadAsyncTests.cs", label="Assert.IsFalse(reader.Read())", span="2178-2178"];
m5_1276 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="ReadAsyncTests.cs", label="i < 26", span="2170-2170"];
m5_1278 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="ReadAsyncTests.cs", label="i++", span="2170-2170"];
m5_1282 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", span="2152-2152"];
m5_1413 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", span="2394-2394"];
m5_1414 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="ReadAsyncTests.cs", label="string json = @''/*comment*/{/*comment*/Name:/*comment*/true/*comment*/,/*comment*/\r\n        ''''ExpiryDate'''':/*comment*/new\r\n'' + StringUtils.LineFeed +\r\n@''Date\r\n(/*comment*/null/*comment*/),\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''':/*comment*/[/*comment*/\r\n          ''''Small''''/*comment*/]/*comment*/}/*comment*/''", span="2396-2403"];
m5_1415 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="ReadAsyncTests.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="2405-2405"];
m5_1416 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2407-2407"];
m5_1417 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2408-2408"];
m5_1418 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2410-2410"];
m5_1419 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2411-2411"];
m5_1420 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2413-2413"];
m5_1421 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2414-2414"];
m5_1422 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2416-2416"];
m5_1423 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2417-2417"];
m5_1424 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="ReadAsyncTests.cs", label="Assert.AreEqual(''Name'', reader.Value)", span="2418-2418"];
m5_1425 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2420-2420"];
m5_1426 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2421-2421"];
m5_1427 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2423-2423"];
m5_1428 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="2424-2424"];
m5_1429 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="ReadAsyncTests.cs", label="Assert.AreEqual(true, reader.Value)", span="2425-2425"];
m5_1430 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2427-2427"];
m5_1431 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2428-2428"];
m5_1432 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2430-2430"];
m5_1433 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2431-2431"];
m5_1434 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2433-2433"];
m5_1435 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2434-2434"];
m5_1436 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="ReadAsyncTests.cs", label="Assert.AreEqual(''ExpiryDate'', reader.Value)", span="2435-2435"];
m5_1437 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2437-2437"];
m5_1438 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2438-2438"];
m5_1439 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2440-2440"];
m5_1440 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2441-2441"];
m5_1441 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="ReadAsyncTests.cs", label="Assert.AreEqual(5, reader.LineNumber)", span="2442-2442"];
m5_1442 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="ReadAsyncTests.cs", label="Assert.AreEqual(''Date'', reader.Value)", span="2443-2443"];
m5_1443 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2445-2445"];
m5_1444 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2446-2446"];
m5_1445 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2448-2448"];
m5_1446 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="2449-2449"];
m5_1447 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2451-2451"];
m5_1448 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2452-2452"];
m5_1449 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2454-2454"];
m5_1450 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2455-2455"];
m5_1451 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", span="2394-2394"];
m5_1010 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", span="1715-1715"];
m5_1011 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", file="ReadAsyncTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[1''))", span="1717-1717"];
m5_1012 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", file="ReadAsyncTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n        ''Unexpected end when reading bytes. Path '[0]', line 1, position 2.'',\r\n        () =>\r\n        {\r\n          reader.ReadAsBytes();\r\n        })", span="1719-1724"];
m5_1013 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", span="1715-1715"];
m5_1491 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", span="2524-2524"];
m5_1492 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="ReadAsyncTests.cs", label="double d", span="2526-2526"];
m5_1493 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="ReadAsyncTests.cs", label="d = Convert.ToDouble(''6.0221418e23'', CultureInfo.InvariantCulture)", span="2528-2528"];
m5_1494 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="ReadAsyncTests.cs", label="Console.WriteLine(d.ToString(new CultureInfo(''fr-FR'')))", span="2529-2529"];
m5_1495 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="ReadAsyncTests.cs", label="Console.WriteLine(d.ToString(''0.#############################################################################''))", span="2530-2530"];
m5_1496 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="ReadAsyncTests.cs", label="string json = @''[0e-10,0E-10,0.25e-5,0.3e10,6.0221418e23]''", span="2535-2535"];
m5_1497 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="ReadAsyncTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2537-2537"];
m5_1515 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="ReadAsyncTests.cs", label="reader = new JsonTextReader(new StringReader(json))", span="2564-2564"];
m5_1498 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="ReadAsyncTests.cs", label="reader.Read()", span="2539-2539"];
m5_1499 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="ReadAsyncTests.cs", label="reader.Read()", span="2541-2541"];
m5_1500 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2542-2542"];
m5_1501 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="ReadAsyncTests.cs", label="Assert.AreEqual(0d, reader.Value)", span="2543-2543"];
m5_1502 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="ReadAsyncTests.cs", label="reader.Read()", span="2545-2545"];
m5_1503 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2546-2546"];
m5_1504 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="ReadAsyncTests.cs", label="Assert.AreEqual(0d, reader.Value)", span="2547-2547"];
m5_1505 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="ReadAsyncTests.cs", label="reader.Read()", span="2549-2549"];
m5_1506 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2550-2550"];
m5_1507 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="ReadAsyncTests.cs", label="Assert.AreEqual(0.0000025d, reader.Value)", span="2551-2551"];
m5_1508 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="ReadAsyncTests.cs", label="reader.Read()", span="2553-2553"];
m5_1509 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2554-2554"];
m5_1510 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="ReadAsyncTests.cs", label="Assert.AreEqual(3000000000d, reader.Value)", span="2555-2555"];
m5_1511 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="ReadAsyncTests.cs", label="reader.Read()", span="2557-2557"];
m5_1512 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2558-2558"];
m5_1513 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="ReadAsyncTests.cs", label="Assert.AreEqual(602214180000000000000000d, reader.Value)", span="2559-2559"];
m5_1514 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="ReadAsyncTests.cs", label="reader.Read()", span="2561-2561"];
m5_1516 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="ReadAsyncTests.cs", label="reader.Read()", span="2566-2566"];
m5_1517 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="ReadAsyncTests.cs", label="reader.ReadAsDecimal()", span="2568-2568"];
m5_1518 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2569-2569"];
m5_1519 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="ReadAsyncTests.cs", label="Assert.AreEqual(0m, reader.Value)", span="2570-2570"];
m5_1520 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="ReadAsyncTests.cs", label="reader.ReadAsDecimal()", span="2572-2572"];
m5_1521 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2573-2573"];
m5_1522 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="ReadAsyncTests.cs", label="Assert.AreEqual(0m, reader.Value)", span="2574-2574"];
m5_1523 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="ReadAsyncTests.cs", label="reader.ReadAsDecimal()", span="2576-2576"];
m5_1524 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2577-2577"];
m5_1525 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="ReadAsyncTests.cs", label="Assert.AreEqual(0.0000025m, reader.Value)", span="2578-2578"];
m5_1526 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="ReadAsyncTests.cs", label="reader.ReadAsDecimal()", span="2580-2580"];
m5_1527 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2581-2581"];
m5_1528 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="ReadAsyncTests.cs", label="Assert.AreEqual(3000000000m, reader.Value)", span="2582-2582"];
m5_1529 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="ReadAsyncTests.cs", label="reader.ReadAsDecimal()", span="2584-2584"];
m5_1530 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2585-2585"];
m5_1531 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="ReadAsyncTests.cs", label="Assert.AreEqual(602214180000000000000000m, reader.Value)", span="2586-2586"];
m5_1532 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="ReadAsyncTests.cs", label="reader.Read()", span="2588-2588"];
m5_1533 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", span="2524-2524"];
m5_1771 [cluster="Newtonsoft.Json.Tests.SlowStream.Write(byte[], int, int)", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.SlowStream.Write(byte[], int, int)", span="2970-2970"];
m5_1772 [cluster="Newtonsoft.Json.Tests.SlowStream.Write(byte[], int, int)", file="ReadAsyncTests.cs", label="throw new NotSupportedException();", span="2972-2972"];
m5_1773 [cluster="Newtonsoft.Json.Tests.SlowStream.Write(byte[], int, int)", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.SlowStream.Write(byte[], int, int)", span="2970-2970"];
m5_745 [cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="355-355"];
m5_950 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", span="1606-1606"];
m5_951 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="ReadAsyncTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[}''))", span="1608-1608"];
m5_952 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="ReadAsyncTests.cs", label="reader.Read()", span="1610-1610"];
m5_953 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="ReadAsyncTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n        ''Unexpected character encountered while parsing value: }. Path '', line 1, position 1.'',\r\n        () =>\r\n        {\r\n          reader.Read();\r\n        })", span="1612-1617"];
m5_954 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", span="1606-1606"];
m5_76 [cluster="System.Globalization.StringInfo.StringInfo(string)", file="ReadAsyncTests.cs", label="Entry System.Globalization.StringInfo.StringInfo(string)", span="0-0"];
m5_26 [cluster="System.IO.StringReader.StringReader(string)", file="ReadAsyncTests.cs", label="Entry System.IO.StringReader.StringReader(string)", span="0-0"];
m5_123 [cluster="System.Console.WriteLine(object)", file="ReadAsyncTests.cs", label="Entry System.Console.WriteLine(object)", span="0-0"];
m5_1109 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", span="1877-1877"];
m5_1110 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="ReadAsyncTests.cs", label="string json = @''{''''Offset'''':''''\/Date(946708260000-0631)\/''''}''", span="1879-1879"];
m5_1111 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="ReadAsyncTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1881-1881"];
m5_1112 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="1883-1883"];
m5_1113 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1884-1884"];
m5_1114 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="1886-1886"];
m5_1115 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1887-1887"];
m5_1116 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="ReadAsyncTests.cs", label="reader.ReadAsDateTimeOffset()", span="1889-1889"];
m5_1117 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="1890-1890"];
m5_1118 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="ReadAsyncTests.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="1891-1891"];
m5_1119 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="ReadAsyncTests.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(-6).Add(TimeSpan.FromMinutes(-31))), reader.Value)", span="1892-1892"];
m5_1120 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="1894-1894"];
m5_1121 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1895-1895"];
m5_1122 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", span="1877-1877"];
m5_174 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", span="407-407"];
m5_175 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", file="ReadAsyncTests.cs", label="string json = @'''hi' a''", span="409-409"];
m5_176 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", file="ReadAsyncTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="411-411"];
m5_177 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", file="ReadAsyncTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n        ''Additional text encountered after finished reading JSON content: a. Path '', line 1, position 5.'',\r\n        () =>\r\n          {\r\n            while (reader.Read())\r\n            {\r\n            }\r\n          })", span="413-420"];
m5_178 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", span="407-407"];
m5_351 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", span="667-667"];
m5_352 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="ReadAsyncTests.cs", label="int valueCount = 10000", span="669-669"];
m5_353 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="ReadAsyncTests.cs", label="StringWriter sw = new StringWriter()", span="670-670"];
m5_357 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="ReadAsyncTests.cs", label="i < valueCount", span="673-673"];
m5_365 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="ReadAsyncTests.cs", label="i < valueCount", span="683-683"];
m5_354 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="ReadAsyncTests.cs", label="JsonTextWriter writer = new JsonTextWriter(sw)", span="671-671"];
m5_361 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="ReadAsyncTests.cs", label="string json = sw.ToString()", span="679-679"];
m5_355 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="ReadAsyncTests.cs", label="writer.WriteStartArray()", span="672-672"];
m5_358 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="ReadAsyncTests.cs", label="writer.WriteValue(i)", span="675-675"];
m5_360 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="ReadAsyncTests.cs", label="writer.WriteEndArray()", span="677-677"];
m5_356 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="ReadAsyncTests.cs", label="int i = 0", span="673-673"];
m5_359 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="ReadAsyncTests.cs", label="i++", span="673-673"];
m5_362 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="ReadAsyncTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="681-681"];
m5_363 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="682-682"];
m5_366 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="685-685"];
m5_367 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="ReadAsyncTests.cs", label="Assert.AreEqual((long)i, reader.Value)", span="686-686"];
m5_369 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="688-688"];
m5_370 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="ReadAsyncTests.cs", label="Assert.IsFalse(reader.Read())", span="689-689"];
m5_364 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="ReadAsyncTests.cs", label="int i = 0", span="683-683"];
m5_368 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="ReadAsyncTests.cs", label="i++", span="683-683"];
m5_371 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", span="667-667"];
m5_1066 [cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime, System.TimeSpan)", file="ReadAsyncTests.cs", label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime, System.TimeSpan)", span="0-0"];
m5_39 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(string, System.Action)", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(string, System.Action)", span="176-176"];
m5_1083 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", span="1834-1834"];
m5_1084 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="ReadAsyncTests.cs", label="string json = @''{''''Offset'''':''''blablahbla''''}''", span="1836-1836"];
m5_1085 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="ReadAsyncTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1838-1838"];
m5_1086 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="1840-1840"];
m5_1087 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1841-1841"];
m5_1088 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="1843-1843"];
m5_1089 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1844-1844"];
m5_1090 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="ReadAsyncTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n        ''Could not convert string to DateTimeOffset: blablahbla. Path 'Offset', line 1, position 22.'',\r\n        () =>\r\n        {\r\n          reader.ReadAsDateTimeOffset();\r\n        })", span="1846-1851"];
m5_1091 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", span="1834-1834"];
m5_982 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", span="1663-1663"];
m5_983 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", file="ReadAsyncTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''new Date()''))", span="1665-1665"];
m5_984 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", file="ReadAsyncTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n        ''Error reading decimal. Unexpected token: StartConstructor. Path '', line 1, position 9.'',\r\n        () =>\r\n        {\r\n          reader.ReadAsDecimal();\r\n        })", span="1667-1672"];
m5_985 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", span="1663-1663"];
m5_101 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", span="255-255"];
m5_102 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="ReadAsyncTests.cs", label="MemoryStream ms = new MemoryStream()", span="257-257"];
m5_103 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="ReadAsyncTests.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(ms))", span="258-258"];
m5_104 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="ReadAsyncTests.cs", label="Assert.IsTrue(ms.CanRead)", span="260-260"];
m5_106 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="ReadAsyncTests.cs", label="Assert.IsFalse(ms.CanRead)", span="262-262"];
m5_105 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="ReadAsyncTests.cs", label="reader.Close()", span="261-261"];
m5_107 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="ReadAsyncTests.cs", label="ms = new MemoryStream()", span="264-264"];
m5_108 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="ReadAsyncTests.cs", label="reader = new JsonTextReader(new StreamReader(ms)) { CloseInput = false }", span="265-265"];
m5_109 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="ReadAsyncTests.cs", label="Assert.IsTrue(ms.CanRead)", span="267-267"];
m5_111 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="ReadAsyncTests.cs", label="Assert.IsTrue(ms.CanRead)", span="269-269"];
m5_110 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="ReadAsyncTests.cs", label="reader.Close()", span="268-268"];
m5_112 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", span="255-255"];
m5_1039 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", span="1768-1768"];
m5_1040 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="ReadAsyncTests.cs", label="string json = @''{''''text'''':0xabcdef12345}''", span="1770-1770"];
m5_1041 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="ReadAsyncTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1772-1772"];
m5_1042 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="1774-1774"];
m5_1043 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1775-1775"];
m5_1044 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="1777-1777"];
m5_1045 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1778-1778"];
m5_1046 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="1780-1780"];
m5_1047 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="1781-1781"];
m5_1048 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="ReadAsyncTests.cs", label="Assert.AreEqual(11806310474565, reader.Value)", span="1782-1782"];
m5_1049 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="1784-1784"];
m5_1050 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1785-1785"];
m5_1051 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", span="1768-1768"];
m5_1068 [cluster="System.TimeSpan.FromHours(double)", file="ReadAsyncTests.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m5_1095 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", span="1855-1855"];
m5_1096 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="ReadAsyncTests.cs", label="string json = ''{\''Offset\'':\''\\/Date(946663200000+06)\\/\''}''", span="1857-1857"];
m5_1097 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="ReadAsyncTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1859-1859"];
m5_1098 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="1861-1861"];
m5_1099 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1862-1862"];
m5_1100 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="1864-1864"];
m5_1101 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1865-1865"];
m5_1102 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="ReadAsyncTests.cs", label="reader.ReadAsDateTimeOffset()", span="1867-1867"];
m5_1103 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="1868-1868"];
m5_1104 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="ReadAsyncTests.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="1869-1869"];
m5_1105 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="ReadAsyncTests.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6)), reader.Value)", span="1870-1870"];
m5_1106 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="1872-1872"];
m5_1107 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1873-1873"];
m5_1108 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", span="1855-1855"];
m5_337 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfString()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfString()", span="644-644"];
m5_338 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfString()", file="ReadAsyncTests.cs", label="JsonReader reader = new JsonTextReader(new StringReader('''hi''))", span="646-646"];
m5_339 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfString()", file="ReadAsyncTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n        ''Unterminated string. Expected delimiter: '. Path '', line 1, position 3.'',\r\n        () =>\r\n          {\r\n            reader.Read();\r\n          })", span="648-653"];
m5_340 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfString()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfString()", span="644-644"];
m5_1326 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", span="2252-2252"];
m5_1327 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="ReadAsyncTests.cs", label="string json = ''new Dat''", span="2254-2254"];
m5_1328 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="ReadAsyncTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2255-2255"];
m5_1329 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="ReadAsyncTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n        ''Unexpected end while parsing constructor. Path '', line 1, position 7.'',\r\n        () =>\r\n        {\r\n          reader.Read();\r\n        })", span="2257-2262"];
m5_1330 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", span="2252-2252"];
m5_743 [cluster="Newtonsoft.Json.JsonWriter.WriteStartArray()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartArray()", span="371-371"];
m5_1623 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", span="2730-2730"];
m5_1624 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="ReadAsyncTests.cs", label="string json = @''[''''1970-01-01T00:00:00Z'''',''''\/Date(0)\/'''']''", span="2732-2732"];
m5_1625 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="ReadAsyncTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2734-2734"];
m5_1635 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="ReadAsyncTests.cs", label="reader = new JsonTextReader(new StringReader(json))", span="2747-2747"];
m5_1645 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="ReadAsyncTests.cs", label="reader = new JsonTextReader(new StringReader(json))", span="2760-2760"];
m5_1655 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="ReadAsyncTests.cs", label="reader = new JsonTextReader(new StringReader(json))", span="2773-2773"];
m5_1665 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="ReadAsyncTests.cs", label="reader = new JsonTextReader(new StringReader(json))", span="2786-2786"];
m5_1626 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="ReadAsyncTests.cs", label="reader.DateParseHandling = Json.DateParseHandling.DateTime", span="2735-2735"];
m5_1627 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2737-2737"];
m5_1628 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2738-2738"];
m5_1629 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="ReadAsyncTests.cs", label="Assert.AreEqual(new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc), reader.Value)", span="2739-2739"];
m5_1630 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="ReadAsyncTests.cs", label="Assert.AreEqual(typeof(DateTime), reader.ValueType)", span="2740-2740"];
m5_1631 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2741-2741"];
m5_1632 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="ReadAsyncTests.cs", label="Assert.AreEqual(new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc), reader.Value)", span="2742-2742"];
m5_1633 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="ReadAsyncTests.cs", label="Assert.AreEqual(typeof(DateTime), reader.ValueType)", span="2743-2743"];
m5_1634 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2744-2744"];
m5_1636 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="ReadAsyncTests.cs", label="reader.DateParseHandling = Json.DateParseHandling.DateTimeOffset", span="2748-2748"];
m5_1637 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2750-2750"];
m5_1638 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2751-2751"];
m5_1639 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="ReadAsyncTests.cs", label="Assert.AreEqual(new DateTimeOffset(DateTimeUtils.InitialJavaScriptDateTicks, TimeSpan.Zero), reader.Value)", span="2752-2752"];
m5_1640 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="ReadAsyncTests.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2753-2753"];
m5_1641 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2754-2754"];
m5_1642 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="ReadAsyncTests.cs", label="Assert.AreEqual(new DateTimeOffset(DateTimeUtils.InitialJavaScriptDateTicks, TimeSpan.Zero), reader.Value)", span="2755-2755"];
m5_1643 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="ReadAsyncTests.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2756-2756"];
m5_1644 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2757-2757"];
m5_1646 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="ReadAsyncTests.cs", label="reader.DateParseHandling = Json.DateParseHandling.None", span="2761-2761"];
m5_1647 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2763-2763"];
m5_1648 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2764-2764"];
m5_1649 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="ReadAsyncTests.cs", label="Assert.AreEqual(@''1970-01-01T00:00:00Z'', reader.Value)", span="2765-2765"];
m5_1650 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="ReadAsyncTests.cs", label="Assert.AreEqual(typeof(string), reader.ValueType)", span="2766-2766"];
m5_1651 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2767-2767"];
m5_1652 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="ReadAsyncTests.cs", label="Assert.AreEqual(@''/Date(0)/'', reader.Value)", span="2768-2768"];
m5_1653 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="ReadAsyncTests.cs", label="Assert.AreEqual(typeof(string), reader.ValueType)", span="2769-2769"];
m5_1654 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2770-2770"];
m5_1656 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="ReadAsyncTests.cs", label="reader.DateParseHandling = Json.DateParseHandling.DateTime", span="2774-2774"];
m5_1657 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2776-2776"];
m5_1658 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="ReadAsyncTests.cs", label="reader.ReadAsDateTimeOffset()", span="2777-2777"];
m5_1659 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="ReadAsyncTests.cs", label="Assert.AreEqual(new DateTimeOffset(DateTimeUtils.InitialJavaScriptDateTicks, TimeSpan.Zero), reader.Value)", span="2778-2778"];
m5_1660 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="ReadAsyncTests.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2779-2779"];
m5_1661 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="ReadAsyncTests.cs", label="reader.ReadAsDateTimeOffset()", span="2780-2780"];
m5_1662 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="ReadAsyncTests.cs", label="Assert.AreEqual(new DateTimeOffset(DateTimeUtils.InitialJavaScriptDateTicks, TimeSpan.Zero), reader.Value)", span="2781-2781"];
m5_1663 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="ReadAsyncTests.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2782-2782"];
m5_1664 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2783-2783"];
m5_1666 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="ReadAsyncTests.cs", label="reader.DateParseHandling = Json.DateParseHandling.DateTimeOffset", span="2787-2787"];
m5_1667 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2789-2789"];
m5_1668 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="ReadAsyncTests.cs", label="reader.ReadAsDateTime()", span="2790-2790"];
m5_1669 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="ReadAsyncTests.cs", label="Assert.AreEqual(new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc), reader.Value)", span="2791-2791"];
m5_1670 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="ReadAsyncTests.cs", label="Assert.AreEqual(typeof(DateTime), reader.ValueType)", span="2792-2792"];
m5_1671 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="ReadAsyncTests.cs", label="reader.ReadAsDateTime()", span="2793-2793"];
m5_1672 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="ReadAsyncTests.cs", label="Assert.AreEqual(new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc), reader.Value)", span="2794-2794"];
m5_1673 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="ReadAsyncTests.cs", label="Assert.AreEqual(typeof(DateTime), reader.ValueType)", span="2795-2795"];
m5_1674 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2796-2796"];
m5_1675 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", span="2730-2730"];
m5_77 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", span="208-208"];
m5_78 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="ReadAsyncTests.cs", label="Assert.AreEqual(''ABC \ud800\udc00 DEF'', ReadString(''ABC \\ud800\\udc00 DEF''))", span="211-211"];
m5_79 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="ReadAsyncTests.cs", label="Assert.AreEqual(''ABC \ufffd\ufffd DEF'', ReadString(''ABC \\ud800\\ud800 DEF''))", span="214-214"];
m5_80 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="ReadAsyncTests.cs", label="Assert.AreEqual(''ABC \ufffd\ufffd\u1234 DEF'', ReadString(''ABC \\ud800\\ud800\\u1234 DEF''))", span="217-217"];
m5_81 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="ReadAsyncTests.cs", label="Assert.AreEqual(''ABC \ufffd\ufffd\ufffd DEF'', ReadString(''ABC \\ud800\\ud800\\ud800 DEF''))", span="220-220"];
m5_82 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="ReadAsyncTests.cs", label="Assert.AreEqual(''ABC \ufffd\ud800\udc00 DEF'', ReadString(''ABC \\ud800\\ud800\\udc00 DEF''))", span="223-223"];
m5_83 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="ReadAsyncTests.cs", label="Assert.AreEqual(''ABC \ufffd'', ReadString(''ABC \\ud800''))", span="226-226"];
m5_84 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="ReadAsyncTests.cs", label="Assert.AreEqual(''ABC \ufffd DEF'', ReadString(''ABC \\ud800 DEF''))", span="229-229"];
m5_85 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="ReadAsyncTests.cs", label="Assert.AreEqual(''ABC \ufffd\ufffd DEF'', ReadString(''ABC \\udc00\\ud800 DEF''))", span="232-232"];
m5_86 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="ReadAsyncTests.cs", label="Assert.AreEqual(''\ufffd\ufffd\ufffd'', ReadString(''\udc00\ud800\ud800''))", span="235-235"];
m5_87 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="ReadAsyncTests.cs", label="Assert.AreEqual(''ABC \ufffd\b'', ReadString(''ABC \\ud800\\b''))", span="237-237"];
m5_88 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="ReadAsyncTests.cs", label="Assert.AreEqual(''ABC \ufffd '', ReadString(''ABC \\ud800 ''))", span="238-238"];
m5_89 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="ReadAsyncTests.cs", label="Assert.AreEqual(''ABC \b\ufffd'', ReadString(''ABC \\b\\ud800''))", span="239-239"];
m5_90 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", span="208-208"];
m5_976 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", span="1653-1653"];
m5_977 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="ReadAsyncTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''''))", span="1655-1655"];
m5_978 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="ReadAsyncTests.cs", label="Assert.IsNull(reader.ReadAsDateTimeOffset())", span="1657-1657"];
m5_979 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="1658-1658"];
m5_980 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", span="1653-1653"];
m5_1754 [cluster="Newtonsoft.Json.Tests.SlowStream.Read(byte[], int, int)", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.SlowStream.Read(byte[], int, int)", span="2947-2947"];
m5_1755 [cluster="Newtonsoft.Json.Tests.SlowStream.Read(byte[], int, int)", file="ReadAsyncTests.cs", label="int toReturn = Math.Min(count, this.bytesPerRead)", span="2949-2949"];
m5_1758 [cluster="Newtonsoft.Json.Tests.SlowStream.Read(byte[], int, int)", file="ReadAsyncTests.cs", label="Array.Copy(this.bytes, this.totalBytesRead, buffer, offset, toReturn)", span="2953-2953"];
m5_1756 [cluster="Newtonsoft.Json.Tests.SlowStream.Read(byte[], int, int)", file="ReadAsyncTests.cs", label="toReturn = Math.Min(toReturn, this.bytes.Length - this.totalBytesRead)", span="2950-2950"];
m5_1757 [cluster="Newtonsoft.Json.Tests.SlowStream.Read(byte[], int, int)", file="ReadAsyncTests.cs", label="toReturn > 0", span="2951-2951"];
m5_1759 [cluster="Newtonsoft.Json.Tests.SlowStream.Read(byte[], int, int)", file="ReadAsyncTests.cs", label="this.totalBytesRead += toReturn", span="2956-2956"];
m5_1760 [cluster="Newtonsoft.Json.Tests.SlowStream.Read(byte[], int, int)", file="ReadAsyncTests.cs", label="return toReturn;", span="2957-2957"];
m5_1761 [cluster="Newtonsoft.Json.Tests.SlowStream.Read(byte[], int, int)", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.SlowStream.Read(byte[], int, int)", span="2947-2947"];
m5_1466 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", span="2483-2483"];
m5_1467 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="ReadAsyncTests.cs", label="string json = @''[0,1,2 , 3]''", span="2485-2485"];
m5_1468 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="ReadAsyncTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2487-2487"];
m5_1469 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="ReadAsyncTests.cs", label="reader.Read()", span="2489-2489"];
m5_1470 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2490-2490"];
m5_1471 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="ReadAsyncTests.cs", label="reader.Read()", span="2492-2492"];
m5_1472 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2493-2493"];
m5_1473 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="ReadAsyncTests.cs", label="reader.Read()", span="2495-2495"];
m5_1474 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2496-2496"];
m5_1475 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="ReadAsyncTests.cs", label="reader.Read()", span="2498-2498"];
m5_1476 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2499-2499"];
m5_1477 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="ReadAsyncTests.cs", label="reader.Read()", span="2501-2501"];
m5_1478 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2502-2502"];
m5_1479 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="ReadAsyncTests.cs", label="reader.Read()", span="2504-2504"];
m5_1480 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2505-2505"];
m5_1481 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", span="2483-2483"];
m5_0 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", span="50-50"];
m5_1 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="ReadAsyncTests.cs", label="string json = ''[1.0,1,9.9,1E-06]''", span="52-52"];
m5_2 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="ReadAsyncTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="54-54"];
m5_3 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="ReadAsyncTests.cs", label="reader.FloatParseHandling = Json.FloatParseHandling.Decimal", span="55-55"];
m5_4 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="57-57"];
m5_5 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="58-58"];
m5_6 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="60-60"];
m5_7 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="ReadAsyncTests.cs", label="Assert.AreEqual(1.0m, reader.Value)", span="61-61"];
m5_8 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="ReadAsyncTests.cs", label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="62-62"];
m5_9 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="63-63"];
m5_10 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="65-65"];
m5_11 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="ReadAsyncTests.cs", label="Assert.AreEqual(1L, reader.Value)", span="66-66"];
m5_12 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="ReadAsyncTests.cs", label="Assert.AreEqual(typeof(long), reader.ValueType)", span="67-67"];
m5_13 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="68-68"];
m5_14 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="70-70"];
m5_15 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="ReadAsyncTests.cs", label="Assert.AreEqual(9.9m, reader.Value)", span="71-71"];
m5_16 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="ReadAsyncTests.cs", label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="72-72"];
m5_17 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="73-73"];
m5_18 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="75-75"];
m5_19 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="ReadAsyncTests.cs", label="Assert.AreEqual(Convert.ToDecimal(1E-06), reader.Value)", span="76-76"];
m5_20 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="ReadAsyncTests.cs", label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="77-77"];
m5_21 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="78-78"];
m5_22 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="80-80"];
m5_23 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="81-81"];
m5_24 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", span="50-50"];
m5_1003 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", span="1704-1704"];
m5_1004 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="ReadAsyncTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[/*hi*/1/*hi*/,2/*hi*/]''))", span="1706-1706"];
m5_1005 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="ReadAsyncTests.cs", label="byte[] data = reader.ReadAsBytes()", span="1708-1708"];
m5_1006 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="ReadAsyncTests.cs", label="Assert.AreEqual(2, data.Length)", span="1709-1709"];
m5_1007 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="ReadAsyncTests.cs", label="Assert.AreEqual(1, data[0])", span="1710-1710"];
m5_1008 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="ReadAsyncTests.cs", label="Assert.AreEqual(2, data[1])", span="1711-1711"];
m5_1009 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", span="1704-1704"];
m5_100 [cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="ReadAsyncTests.cs", label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0"];
m5_890 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", span="1519-1519"];
m5_891 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="ReadAsyncTests.cs", label="StringReader s = new StringReader(@''[0372, 0xFA, 0XFA]'')", span="1521-1521"];
m5_892 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="ReadAsyncTests.cs", label="JsonTextReader jsonReader = new JsonTextReader(s)", span="1522-1522"];
m5_893 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="ReadAsyncTests.cs", label="Assert.IsTrue(jsonReader.Read())", span="1524-1524"];
m5_894 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.StartArray, jsonReader.TokenType)", span="1525-1525"];
m5_895 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="ReadAsyncTests.cs", label="Assert.IsTrue(jsonReader.Read())", span="1527-1527"];
m5_896 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1528-1528"];
m5_897 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="ReadAsyncTests.cs", label="Assert.AreEqual(250L, jsonReader.Value)", span="1529-1529"];
m5_898 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="ReadAsyncTests.cs", label="Assert.IsTrue(jsonReader.Read())", span="1531-1531"];
m5_899 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1532-1532"];
m5_900 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="ReadAsyncTests.cs", label="Assert.AreEqual(250L, jsonReader.Value)", span="1533-1533"];
m5_901 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="ReadAsyncTests.cs", label="Assert.IsTrue(jsonReader.Read())", span="1535-1535"];
m5_902 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1536-1536"];
m5_903 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="ReadAsyncTests.cs", label="Assert.AreEqual(250L, jsonReader.Value)", span="1537-1537"];
m5_904 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="ReadAsyncTests.cs", label="Assert.IsTrue(jsonReader.Read())", span="1539-1539"];
m5_905 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.EndArray, jsonReader.TokenType)", span="1540-1540"];
m5_906 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="ReadAsyncTests.cs", label="Assert.IsFalse(jsonReader.Read())", span="1542-1542"];
m5_907 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", span="1519-1519"];
m5_1292 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", span="2199-2199"];
m5_1293 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="ReadAsyncTests.cs", label="string json = ''new Date\n()''", span="2201-2201"];
m5_1294 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="ReadAsyncTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2202-2202"];
m5_1295 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2204-2204"];
m5_1296 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="ReadAsyncTests.cs", label="Assert.AreEqual(''Date'', reader.Value)", span="2205-2205"];
m5_1297 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2206-2206"];
m5_1298 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2208-2208"];
m5_1299 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2209-2209"];
m5_1300 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", span="2199-2199"];
m5_618 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", span="1112-1112"];
m5_619 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="ReadAsyncTests.cs", label="string helloWorld = ''Hello world!''", span="1114-1114"];
m5_620 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="ReadAsyncTests.cs", label="byte[] helloWorldData = Encoding.UTF8.GetBytes(helloWorld)", span="1115-1115"];
m5_621 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="ReadAsyncTests.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''{num:1,data:''' + Convert.ToBase64String(helloWorldData) + @'''}''))", span="1117-1117"];
m5_629 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="ReadAsyncTests.cs", label="CollectionAssert.AreEquivalent(helloWorldData, data)", span="1125-1125"];
m5_622 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="1118-1118"];
m5_623 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1119-1119"];
m5_624 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="1120-1120"];
m5_625 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="1121-1121"];
m5_626 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="1122-1122"];
m5_627 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="1123-1123"];
m5_628 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="ReadAsyncTests.cs", label="byte[] data = reader.ReadAsBytes()", span="1124-1124"];
m5_630 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Bytes, reader.TokenType)", span="1126-1126"];
m5_631 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="1127-1127"];
m5_632 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1128-1128"];
m5_633 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="ReadAsyncTests.cs", label="Assert.IsFalse(reader.Read())", span="1130-1130"];
m5_634 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", span="1112-1112"];
m5_468 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", span="842-842"];
m5_469 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="ReadAsyncTests.cs", label="BigInteger i = new BigInteger(long.MinValue)", span="844-844"];
m5_470 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="ReadAsyncTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(i.ToString(CultureInfo.InvariantCulture)))", span="846-846"];
m5_475 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="ReadAsyncTests.cs", label="BigInteger total = i + -j", span="852-852"];
m5_471 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="ReadAsyncTests.cs", label="reader.Read()", span="847-847"];
m5_472 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="ReadAsyncTests.cs", label="Assert.AreEqual(typeof(long), reader.ValueType)", span="848-848"];
m5_473 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="ReadAsyncTests.cs", label="int j = 1", span="850-850"];
m5_474 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="ReadAsyncTests.cs", label="j < 1000", span="850-850"];
m5_479 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="ReadAsyncTests.cs", label="j++", span="850-850"];
m5_476 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="ReadAsyncTests.cs", label="reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)))", span="854-854"];
m5_477 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="ReadAsyncTests.cs", label="reader.Read()", span="855-855"];
m5_478 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="ReadAsyncTests.cs", label="Assert.AreEqual(typeof(BigInteger), reader.ValueType)", span="857-857"];
m5_480 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", span="842-842"];
m5_372 [cluster="System.IO.StringWriter.StringWriter()", file="ReadAsyncTests.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m5_465 [cluster="BigInteger.cstr", file="ReadAsyncTests.cs", label="Entry BigInteger.cstr", span=""];
m5_754 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", span="624-624"];
m5_964 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", span="1630-1630"];
m5_965 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="ReadAsyncTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''''))", span="1632-1632"];
m5_966 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="ReadAsyncTests.cs", label="Assert.IsNull(reader.ReadAsBytes())", span="1634-1634"];
m5_967 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="1635-1635"];
m5_968 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", span="1630-1630"];
m5_750 [cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="363-363"];
m5_518 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsBytes()", span="350-350"];
m5_1678 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", span="354-354"];
m5_350 [cluster="string.String(char, int)", file="ReadAsyncTests.cs", label="Entry string.String(char, int)", span="0-0"];
m5_1301 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", span="2213-2213"];
m5_1302 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="ReadAsyncTests.cs", label="string json = ''[,,, \n\r\n \0   \r  , ,    ]''", span="2215-2215"];
m5_1303 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="ReadAsyncTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2216-2216"];
m5_1304 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2218-2218"];
m5_1305 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2219-2219"];
m5_1306 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2221-2221"];
m5_1307 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2222-2222"];
m5_1308 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2224-2224"];
m5_1309 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2225-2225"];
m5_1310 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2227-2227"];
m5_1311 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2228-2228"];
m5_1312 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2230-2230"];
m5_1313 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2231-2231"];
m5_1314 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2233-2233"];
m5_1315 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2234-2234"];
m5_1316 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="2236-2236"];
m5_1317 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2237-2237"];
m5_1318 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", span="2213-2213"];
m5_1140 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", span="1921-1921"];
m5_1141 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="ReadAsyncTests.cs", label="string json = @''{''''Offset'''':''''1/30/2011''''}''", span="1923-1923"];
m5_1142 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="ReadAsyncTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1925-1925"];
m5_1143 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="ReadAsyncTests.cs", label="reader.Culture = new CultureInfo(''en-US'')", span="1926-1926"];
m5_1144 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="1928-1928"];
m5_1145 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1929-1929"];
m5_1146 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="1931-1931"];
m5_1147 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1932-1932"];
m5_1148 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="ReadAsyncTests.cs", label="reader.ReadAsDateTimeOffset()", span="1934-1934"];
m5_1149 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="1935-1935"];
m5_1150 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="ReadAsyncTests.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="1936-1936"];
m5_1151 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="ReadAsyncTests.cs", label="DateTimeOffset dt = (DateTimeOffset)reader.Value", span="1938-1938"];
m5_1153 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="1941-1941"];
m5_1154 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1942-1942"];
m5_1152 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="ReadAsyncTests.cs", label="Assert.AreEqual(new DateTime(2011, 1, 30, 0, 0, 0, DateTimeKind.Unspecified), dt.DateTime)", span="1939-1939"];
m5_1155 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", span="1921-1921"];
m5_374 [cluster="Newtonsoft.Json.JsonTextWriter.WriteStartArray()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteStartArray()", span="166-166"];
m5_1139 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="ReadAsyncTests.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m5_1752 [cluster="Newtonsoft.Json.Tests.SlowStream.Flush()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.SlowStream.Flush()", span="2932-2932"];
m5_1753 [cluster="Newtonsoft.Json.Tests.SlowStream.Flush()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.SlowStream.Flush()", span="2932-2932"];
m5_752 [cluster="System.Text.StringBuilder.ToString()", file="ReadAsyncTests.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m5_435 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsInt32()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsInt32()", span="336-336"];
m5_98 [cluster="System.IO.MemoryStream.MemoryStream(byte[])", file="ReadAsyncTests.cs", label="Entry System.IO.MemoryStream.MemoryStream(byte[])", span="0-0"];
m5_989 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", span="1676-1676"];
m5_990 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", file="ReadAsyncTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''new Date()''))", span="1678-1678"];
m5_991 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", file="ReadAsyncTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n        ''Error reading bytes. Unexpected token: StartConstructor. Path '', line 1, position 9.'',\r\n        () =>\r\n        {\r\n          reader.ReadAsBytes();\r\n        })", span="1680-1685"];
m5_992 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", span="1676-1676"];
m5_99 [cluster="System.Text.Encoding.GetBytes(string)", file="ReadAsyncTests.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m5_747 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(int)", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(int)", span="818-818"];
m5_1069 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", span="1812-1812"];
m5_1070 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="ReadAsyncTests.cs", label="string json = @''{''''Offset'''':''''\/Date(946706400000-0600)\/''''}''", span="1814-1814"];
m5_1071 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="ReadAsyncTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1816-1816"];
m5_1072 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="1818-1818"];
m5_1073 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1819-1819"];
m5_1074 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="1821-1821"];
m5_1075 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1822-1822"];
m5_1076 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="ReadAsyncTests.cs", label="reader.ReadAsDateTimeOffset()", span="1824-1824"];
m5_1077 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="1825-1825"];
m5_1078 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="ReadAsyncTests.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="1826-1826"];
m5_1079 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="ReadAsyncTests.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(-6)), reader.Value)", span="1827-1827"];
m5_1080 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="1829-1829"];
m5_1081 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1830-1830"];
m5_1082 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", span="1812-1812"];
m5_1197 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", span="2012-2012"];
m5_1198 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", file="ReadAsyncTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''nul''))", span="2014-2014"];
m5_1199 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", file="ReadAsyncTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n        ''Error parsing null value. Path '', line 0, position 0.'',\r\n        () =>\r\n          {\r\n            reader.Read();\r\n          })", span="2016-2021"];
m5_1200 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", span="2012-2012"];
m5_1537 [cluster="double.ToString(string)", file="ReadAsyncTests.cs", label="Entry double.ToString(string)", span="0-0"];
m5_1024 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="ReadAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", span="1741-1741"];
m5_1025 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="ReadAsyncTests.cs", label="string json = @''{''''Message'''':''''Hi,I\u0092ve send you smth''''}''", span="1743-1743"];
m5_1026 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="ReadAsyncTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1745-1745"];
m5_1027 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="1750-1750"];
m5_1028 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1751-1751"];
m5_1029 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="1753-1753"];
m5_1030 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1754-1754"];
m5_1031 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="ReadAsyncTests.cs", label="Assert.AreEqual(''Message'', reader.Value)", span="1755-1755"];
m5_1032 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="1757-1757"];
m5_1033 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="1758-1758"];
m5_1034 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="ReadAsyncTests.cs", label="Assert.AreEqual(@''Hi,I'' + '\u0092' + ''ve send you smth'', reader.Value)", span="1759-1759"];
m5_1035 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="ReadAsyncTests.cs", label="Assert.IsTrue(reader.Read())", span="1761-1761"];
m5_1036 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="ReadAsyncTests.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1762-1762"];
m5_1037 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="ReadAsyncTests.cs", label="Assert.IsFalse(reader.Read())", span="1764-1764"];
m5_1038 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="ReadAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", span="1741-1741"];
m5_1774 [file="ReadAsyncTests.cs", label=reader, span=""];
m5_1775 [file="ReadAsyncTests.cs", label="Newtonsoft.Json.Tests.JsonTextReaderTest", span=""];
m5_1776 [file="ReadAsyncTests.cs", label=reader, span=""];
m5_1777 [file="ReadAsyncTests.cs", label=reader, span=""];
m5_1778 [file="ReadAsyncTests.cs", label=reader, span=""];
m5_1779 [file="ReadAsyncTests.cs", label=reader, span=""];
m5_1780 [file="ReadAsyncTests.cs", label=total, span=""];
m5_1781 [file="ReadAsyncTests.cs", label=total, span=""];
m5_1782 [file="ReadAsyncTests.cs", label=reader, span=""];
m5_1783 [file="ReadAsyncTests.cs", label=reader, span=""];
m5_1784 [file="ReadAsyncTests.cs", label=reader, span=""];
m5_1785 [file="ReadAsyncTests.cs", label=reader, span=""];
m5_1786 [file="ReadAsyncTests.cs", label=reader, span=""];
m5_1787 [file="ReadAsyncTests.cs", label=reader, span=""];
m5_1788 [file="ReadAsyncTests.cs", label=reader, span=""];
m5_1789 [file="ReadAsyncTests.cs", label=reader, span=""];
m5_1790 [file="ReadAsyncTests.cs", label=reader, span=""];
m5_1791 [file="ReadAsyncTests.cs", label=reader, span=""];
m5_1792 [file="ReadAsyncTests.cs", label=reader, span=""];
m5_1793 [file="ReadAsyncTests.cs", label=reader, span=""];
m5_1794 [file="ReadAsyncTests.cs", label=reader, span=""];
m5_1795 [file="ReadAsyncTests.cs", label=reader, span=""];
m5_1796 [file="ReadAsyncTests.cs", label=reader, span=""];
m5_1797 [file="ReadAsyncTests.cs", label=reader, span=""];
m5_1798 [file="ReadAsyncTests.cs", label=reader, span=""];
m5_1799 [file="ReadAsyncTests.cs", label=reader, span=""];
m5_1800 [file="ReadAsyncTests.cs", label=reader, span=""];
m5_1801 [file="ReadAsyncTests.cs", label=reader, span=""];
m5_1802 [file="ReadAsyncTests.cs", label=reader, span=""];
m5_1803 [file="ReadAsyncTests.cs", label=reader, span=""];
m5_1804 [file="ReadAsyncTests.cs", label=reader, span=""];
m5_1805 [file="ReadAsyncTests.cs", label=reader, span=""];
m5_1806 [file="ReadAsyncTests.cs", label=reader, span=""];
m5_1807 [file="ReadAsyncTests.cs", label=reader, span=""];
m5_1808 [file="ReadAsyncTests.cs", label=reader, span=""];
m5_1809 [file="ReadAsyncTests.cs", label=reader, span=""];
m5_1810 [file="ReadAsyncTests.cs", label=jsonTextReader, span=""];
m5_1811 [file="ReadAsyncTests.cs", label="Newtonsoft.Json.Tests.ToggleReaderError", span=""];
m5_1812 [file="ReadAsyncTests.cs", label="Newtonsoft.Json.Tests.SlowStream", span=""];
m6_1910 [cluster="XmlDocument.cstr", file="ReadTests.cs", label="Entry XmlDocument.cstr", span=""];
m6_3983 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", file="ReadTests.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", span="0-0"];
m6_3707 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewEmployee.NewEmployee()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewEmployee.NewEmployee()", span="8679-8679"];
m6_1011 [cluster="Newtonsoft.Json.Tests.TestObjects.JaggedArray.JaggedArray()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.JaggedArray.JaggedArray()", span="27-27"];
m6_3919 [cluster="System.ComponentModel.TypeConverter.ConvertToInvariantString(object)", file="ReadTests.cs", label="Entry System.ComponentModel.TypeConverter.ConvertToInvariantString(object)", span="0-0"];
m6_1662 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", span="3730-3730"];
m6_1663 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", file="ReadTests.cs", label="return ((IDictionary<string, T>)_innerDictionary).Remove(item);", span="3732-3732"];
m6_1664 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", span="3730-3730"];
m6_2129 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeExample()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeExample()", span="4733-4733"];
m6_2130 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeExample()", file="ReadTests.cs", label="Employee joe = new Employee()", span="4735-4735"];
m6_2131 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeExample()", file="ReadTests.cs", label="joe.Name = ''Joe Employee''", span="4736-4736"];
m6_2134 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeExample()", file="ReadTests.cs", label="joe.Manager = mike", span="4740-4740"];
m6_2136 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeExample()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(new[] { joe, mike }, Formatting.Indented)", span="4743-4743"];
m6_2132 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeExample()", file="ReadTests.cs", label="Employee mike = new Employee()", span="4737-4737"];
m6_2133 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeExample()", file="ReadTests.cs", label="mike.Name = ''Mike Manager''", span="4738-4738"];
m6_2135 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeExample()", file="ReadTests.cs", label="mike.Manager = mike", span="4741-4741"];
m6_2137 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeExample()", file="ReadTests.cs", label="Console.WriteLine(json)", span="4756-4756"];
m6_2138 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeExample()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeExample()", span="4733-4733"];
m6_243 [cluster="Newtonsoft.Json.Linq.JArray.JArray(params object[])", file="ReadTests.cs", label="Entry Newtonsoft.Json.Linq.JArray.JArray(params object[])", span="81-81"];
m6_2190 [cluster="System.Console.WriteLine(string, object)", file="ReadTests.cs", label="Entry System.Console.WriteLine(string, object)", span="0-0"];
m6_1620 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Human.Human()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Human.Human()", span="3580-3580"];
m6_1154 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", span="2425-2425"];
m6_1155 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="ReadTests.cs", label="_name = name", span="2427-2427"];
m6_1156 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="ReadTests.cs", label="Age = age", span="2428-2428"];
m6_1157 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="ReadTests.cs", label="Rank = rank", span="2429-2429"];
m6_1158 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="ReadTests.cs", label="Title = title", span="2430-2430"];
m6_1159 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", span="2425-2425"];
m6_648 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", span="34-34"];
m6_3274 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="ReadTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.Read()", span="300-300"];
m6_3776 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.GetEnumerator()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.GetEnumerator()", span="8881-8881"];
m6_3777 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.GetEnumerator()", file="ReadTests.cs", label="return _dictionary.GetEnumerator();", span="8883-8883"];
m6_3778 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.GetEnumerator()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.GetEnumerator()", span="8881-8881"];
m6_1911 [cluster="Unk.LoadXml", file="ReadTests.cs", label="Entry Unk.LoadXml", span=""];
m6_705 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(System.IO.TextReader, System.Type)", file="ReadTests.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(System.IO.TextReader, System.Type)", span="636-636"];
m6_83 [cluster="System.Globalization.CultureInfo.ToString()", file="ReadTests.cs", label="Entry System.Globalization.CultureInfo.ToString()", span="0-0"];
m6_1754 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, System.DateTime)", file="ReadTests.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, System.DateTime)", span="0-0"];
m6_1929 [cluster="Newtonsoft.Json.JsonWriter.WriteRawValue(string)", file="ReadTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteRawValue(string)", span="797-797"];
m6_2924 [cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="ReadTests.cs", label="Entry Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", span="467-467"];
m6_3949 [cluster="Newtonsoft.Json.JsonConverterCollection.JsonConverterCollection()", file="ReadTests.cs", label="Entry Newtonsoft.Json.JsonConverterCollection.JsonConverterCollection()", span="35-35"];
m6_815 [cluster="Newtonsoft.Json.Tests.TestObjects.ConverterPrecedenceClass.ConverterPrecedenceClass(string)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ConverterPrecedenceClass.ConverterPrecedenceClass(string)", span="32-32"];
m6_4076 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.ToSingle(System.IFormatProvider)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Ratio.ToSingle(System.IFormatProvider)", span="9921-9921"];
m6_4077 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.ToSingle(System.IFormatProvider)", file="ReadTests.cs", label="return this._denominator == 0\r\n          ? float.NaN\r\n          : (float)this._numerator / this._denominator;", span="9923-9925"];
m6_4078 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.ToSingle(System.IFormatProvider)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.Ratio.ToSingle(System.IFormatProvider)", span="9921-9921"];
m6_1241 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", span="2659-2659"];
m6_1242 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="ReadTests.cs", label="string json = @''{''''Operation'''':''''1'''',''''RoleName'''':''''Admin'''',''''Direction'''':''''0''''}''", span="2661-2661"];
m6_1243 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="ReadTests.cs", label="RoleTransfer r = JsonConvert.DeserializeObject<RoleTransfer>(json)", span="2663-2663"];
m6_1244 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="ReadTests.cs", label="Assert.AreEqual(RoleTransferOperation.Second, r.Operation)", span="2665-2665"];
m6_1245 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="ReadTests.cs", label="Assert.AreEqual(''Admin'', r.RoleName)", span="2666-2666"];
m6_1246 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="ReadTests.cs", label="Assert.AreEqual(RoleTransferDirection.First, r.Direction)", span="2667-2667"];
m6_1247 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", span="2659-2659"];
m6_386 [cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Linq.JObject.Parse(string)", span="325-325"];
m6_84 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IdReferenceResolver.IdReferenceResolver()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IdReferenceResolver.IdReferenceResolver()", span="9014-9014"];
m6_3985 [cluster="Newtonsoft.Json.Tests.Serialization.TestComponent.TestComponent()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TestComponent.TestComponent()", span="9597-9597"];
m6_3986 [cluster="Newtonsoft.Json.Tests.Serialization.TestComponent.TestComponent()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TestComponent.TestComponent()", span="9597-9597"];
m6_385 [cluster="System.Text.Encoding.GetString(byte[], int, int)", file="ReadTests.cs", label="Entry System.Text.Encoding.GetString(byte[], int, int)", span="0-0"];
m6_2003 [cluster="Newtonsoft.Json.Tests.TestObjects.WagePerson.WagePerson()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.WagePerson.WagePerson()", span="27-27"];
m6_422 [cluster="Newtonsoft.Json.Tests.TestObjects.Product.Product()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Product.Product()", span="29-29"];
m6_1589 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="3503-3503"];
m6_1590 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="ReadTests.cs", label=initial, span="3505-3505"];
m6_1591 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="ReadTests.cs", label="Add(pair.Key, pair.Value)", span="3507-3507"];
m6_1592 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="3503-3503"];
m6_2066 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", span="4611-4611"];
m6_2067 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", file="ReadTests.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''JSON reference $ref property must have a string or null value. Path 'Father.$ref', line 5, position 14.'',\r\n        () =>\r\n        {\r\n          //Additional text found in JSON string after finishing deserializing object.\r\n          //Test 1\r\n          var reference = new Dictionary<string, object>();\r\n          reference.Add(''$ref'', 1);\r\n          reference.Add(''$id'', 1);\r\n\r\n          var child = new Dictionary<string, object>();\r\n          child.Add(''_id'', 2);\r\n          child.Add(''Name'', ''Isabell'');\r\n          child.Add(''Father'', reference);\r\n\r\n          var json = JsonConvert.SerializeObject(child, Formatting.Indented);\r\n          JsonConvert.DeserializeObject<Dictionary<string, object>>(json);\r\n        })", span="4613-4630"];
m6_2068 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", span="4611-4611"];
m6_353 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewProperties.SubWithContractNewProperties()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewProperties.SubWithContractNewProperties()", span="723-723"];
m6_3319 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass<T>.System.Collections.IEnumerable.GetEnumerator()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass<T>.System.Collections.IEnumerable.GetEnumerator()", span="7549-7549"];
m6_3320 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass<T>.System.Collections.IEnumerable.GetEnumerator()", file="ReadTests.cs", label="return GetEnumerator();", span="7551-7551"];
m6_3321 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass<T>.System.Collections.IEnumerable.GetEnumerator()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass<T>.System.Collections.IEnumerable.GetEnumerator()", span="7549-7549"];
m6_3908 [cluster="Unk.Union", file="ReadTests.cs", label="Entry Unk.Union", span=""];
m6_4050 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.ToChar(System.IFormatProvider)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Ratio.ToChar(System.IFormatProvider)", span="9879-9879"];
m6_4051 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.ToChar(System.IFormatProvider)", file="ReadTests.cs", label="return Convert.ToChar(this._numerator / this._denominator);", span="9881-9881"];
m6_4052 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.ToChar(System.IFormatProvider)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.Ratio.ToChar(System.IFormatProvider)", span="9879-9879"];
m6_1966 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeExistingGenericList()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeExistingGenericList()", span="4420-4420"];
m6_1967 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeExistingGenericList()", file="ReadTests.cs", label="GenericListTestClass c = new GenericListTestClass()", span="4422-4422"];
m6_1968 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeExistingGenericList()", file="ReadTests.cs", label="c.GenericList.Add(''1'')", span="4423-4423"];
m6_1969 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeExistingGenericList()", file="ReadTests.cs", label="c.GenericList.Add(''2'')", span="4424-4424"];
m6_1970 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeExistingGenericList()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="4426-4426"];
m6_1971 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeExistingGenericList()", file="ReadTests.cs", label="GenericListTestClass newValue = JsonConvert.DeserializeObject<GenericListTestClass>(json)", span="4428-4428"];
m6_1972 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeExistingGenericList()", file="ReadTests.cs", label="Assert.AreEqual(2, newValue.GenericList.Count)", span="4429-4429"];
m6_1973 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeExistingGenericList()", file="ReadTests.cs", label="Assert.AreEqual(typeof(List<string>), newValue.GenericList.GetType())", span="4430-4430"];
m6_1974 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeExistingGenericList()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeExistingGenericList()", span="4420-4420"];
m6_637 [cluster="Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T)", file="ReadTests.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T)", span="707-707"];
m6_1420 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", span="175-175"];
m6_857 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", span="1767-1767"];
m6_858 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="ReadTests.cs", label="DateTime testDate = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="1769-1769"];
m6_859 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="ReadTests.cs", label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="1770-1770"];
m6_863 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="ReadTests.cs", label="Assert.AreEqual(testDate, m2.DefaultConverter)", span="1780-1780"];
m6_864 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="ReadTests.cs", label="Assert.AreEqual(testDate, m2.MemberConverter)", span="1781-1781"];
m6_860 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(m1, new JsonSerializerSettings\r\n      {\r\n        DateFormatHandling = DateFormatHandling.IsoDateFormat,\r\n      })", span="1772-1775"];
m6_861 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="ReadTests.cs", label="Assert.AreEqual(@''{''''DefaultConverter'''':''''1970-01-01T00:00:00Z'''',''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="1776-1776"];
m6_862 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="ReadTests.cs", label="MemberConverterClass m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json)", span="1778-1778"];
m6_865 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", span="1767-1767"];
m6_216 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.Ratio(int, int)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Ratio.Ratio(int, int)", span="9821-9821"];
m6_4030 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.Ratio(int, int)", file="ReadTests.cs", label="_numerator = numerator", span="9823-9823"];
m6_4031 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.Ratio(int, int)", file="ReadTests.cs", label="_denominator = denominator", span="9824-9824"];
m6_4032 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.Ratio(int, int)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.Ratio.Ratio(int, int)", span="9821-9821"];
m6_3583 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeReferenceTracked3DArray()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeReferenceTracked3DArray()", span="8242-8242"];
m6_3584 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeReferenceTracked3DArray()", file="ReadTests.cs", label="Event e1 = new Event\r\n        {\r\n          EventName = ''EventName!''\r\n        }", span="8244-8247"];
m6_3585 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeReferenceTracked3DArray()", file="ReadTests.cs", label="Event[,] array1 = new [,] { { e1, e1 }, { e1, e1 } }", span="8248-8248"];
m6_3586 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeReferenceTracked3DArray()", file="ReadTests.cs", label="IList<Event[,]> values1 = new List<Event[,]>\r\n        {\r\n          array1,\r\n          array1\r\n        }", span="8249-8253"];
m6_3587 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeReferenceTracked3DArray()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(values1, new JsonSerializerSettings\r\n        {\r\n          PreserveReferencesHandling = PreserveReferencesHandling.All,\r\n          Formatting = Formatting.Indented\r\n        })", span="8255-8259"];
m6_3588 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeReferenceTracked3DArray()", file="ReadTests.cs", label="Assert.AreEqual(@''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$values'''': [\r\n    {\r\n      ''''$id'''': ''''2'''',\r\n      ''''$values'''': [\r\n        [\r\n          {\r\n            ''''$id'''': ''''3'''',\r\n            ''''EventName'''': ''''EventName!'''',\r\n            ''''Venue'''': null,\r\n            ''''Performances'''': null\r\n          },\r\n          {\r\n            ''''$ref'''': ''''3''''\r\n          }\r\n        ],\r\n        [\r\n          {\r\n            ''''$ref'''': ''''3''''\r\n          },\r\n          {\r\n            ''''$ref'''': ''''3''''\r\n          }\r\n        ]\r\n      ]\r\n    },\r\n    {\r\n      ''''$ref'''': ''''2''''\r\n    }\r\n  ]\r\n}'', json)", span="8261-8292"];
m6_3589 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeReferenceTracked3DArray()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeReferenceTracked3DArray()", span="8242-8242"];
m6_1324 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", span="2849-2849"];
m6_1325 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="ReadTests.cs", label="List<decimal?> l = JsonConvert.DeserializeObject<List<decimal?>>(''[ 3.3, null, 1.1 ] '')", span="2851-2851"];
m6_1326 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="ReadTests.cs", label="Assert.AreEqual(3, l.Count)", span="2852-2852"];
m6_1327 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="ReadTests.cs", label="Assert.AreEqual(3.3m, l[0])", span="2854-2854"];
m6_1328 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="ReadTests.cs", label="Assert.AreEqual(null, l[1])", span="2855-2855"];
m6_1329 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="ReadTests.cs", label="Assert.AreEqual(1.1m, l[2])", span="2856-2856"];
m6_1330 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", span="2849-2849"];
m6_3906 [cluster="System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool)", file="ReadTests.cs", label="Entry System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool)", span="0-0"];
m6_2818 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", span="6449-6449"];
m6_2819 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="ReadTests.cs", label="IList<decimal> d1 = new List<decimal> { 1.1m }", span="6451-6451"];
m6_2820 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(d1)", span="6453-6453"];
m6_2822 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="ReadTests.cs", label="Assert.AreEqual(d1.Count, d2.Count)", span="6457-6457"];
m6_2823 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="ReadTests.cs", label="Assert.AreEqual(d1[0], d2[0])", span="6458-6458"];
m6_2821 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="ReadTests.cs", label="IList<decimal> d2 = JsonConvert.DeserializeObject<IList<decimal>>(json)", span="6455-6455"];
m6_2824 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", span="6449-6449"];
m6_1221 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", span="2591-2591"];
m6_1222 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="ReadTests.cs", label="var value = new\r\n        {\r\n          bar = new JObject(new JProperty(''baz'', 13))\r\n        }", span="2593-2596"];
m6_1223 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(value)", span="2598-2598"];
m6_1224 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="ReadTests.cs", label="Assert.AreEqual(@''{''''bar'''':{''''baz'''':13}}'', json)", span="2600-2600"];
m6_1225 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", span="2591-2591"];
m6_2282 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", span="5119-5119"];
m6_2283 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", file="ReadTests.cs", label="NullableDateTimeTestClass d = JsonConvert.DeserializeObject<NullableDateTimeTestClass>(''{\''DateTimeOffsetField\'':\''\\/Date(946663200000+0600)\\/\''}'')", span="5121-5121"];
m6_2284 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", file="ReadTests.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6)), d.DateTimeOffsetField)", span="5122-5122"];
m6_2285 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", span="5119-5119"];
m6_1012 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", span="2065-2065"];
m6_1013 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="ReadTests.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1,2],[2,1],[2,2]],''''After'''':''''After!''''}''", span="2067-2067"];
m6_1014 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="ReadTests.cs", label="JaggedArray aa = JsonConvert.DeserializeObject<JaggedArray>(json)", span="2069-2069"];
m6_1022 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="ReadTests.cs", label="Assert.AreEqual(json, after)", span="2080-2080"];
m6_1015 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="ReadTests.cs", label="Assert.AreEqual(''Before!'', aa.Before)", span="2071-2071"];
m6_1016 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="ReadTests.cs", label="Assert.AreEqual(''After!'', aa.After)", span="2072-2072"];
m6_1017 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="ReadTests.cs", label="Assert.AreEqual(4, aa.Coordinates.Length)", span="2073-2073"];
m6_1018 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="ReadTests.cs", label="Assert.AreEqual(2, aa.Coordinates[0].Length)", span="2074-2074"];
m6_1019 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="ReadTests.cs", label="Assert.AreEqual(1, aa.Coordinates[0][0])", span="2075-2075"];
m6_1020 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="ReadTests.cs", label="Assert.AreEqual(2, aa.Coordinates[1][1])", span="2076-2076"];
m6_1021 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="ReadTests.cs", label="string after = JsonConvert.SerializeObject(aa)", span="2078-2078"];
m6_1023 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", span="2065-2065"];
m6_1304 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", span="2816-2816"];
m6_1305 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", file="ReadTests.cs", label="string json = @''{''''sublocation'''':''''AlertEmailSender.Program.Main'''',''''userId'''':0,''''type'''':0,''''summary'''':''''Loading settings variables'''',''''details'''':null,''''stackTrace'''':''''   at System.Environment.GetStackTrace(Exception e, Boolean needFileInfo)\r\n   at System.Environment.get_StackTrace()\r\n   at mr.Logging.Event..ctor(String summary) in C:\\Projects\\MRUtils\\Logging\\Event.vb:line 71\r\n   at AlertEmailSender.Program.Main(String[] args) in C:\\Projects\\AlertEmailSender\\AlertEmailSender\\Program.cs:line 25'''',''''tag'''':null,''''time'''':''''\/Date(1249591032026-0400)\/''''}''", span="2818-2818"];
m6_1306 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", file="ReadTests.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        @''Unable to find a constructor to use for type Newtonsoft.Json.Tests.TestObjects.Event. A class should either have a default constructor, one constructor with arguments or a constructor marked with the JsonConstructor attribute. Path 'sublocation', line 1, position 15.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<TestObjects.Event>(json);\r\n        })", span="2820-2825"];
m6_1307 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", span="2816-2816"];
m6_3058 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.MetroColorConverter()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.MetroColorConverter()", span="6963-6963"];
m6_314 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonGenericClass.NonGenericClass()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonGenericClass.NonGenericClass()", span="133-133"];
m6_882 [cluster="System.Convert.ToDateTime(string)", file="ReadTests.cs", label="Entry System.Convert.ToDateTime(string)", span="0-0"];
m6_1219 [cluster="System.Uri.Uri(string)", file="ReadTests.cs", label="Entry System.Uri.Uri(string)", span="0-0"];
m6_1755 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, decimal)", file="ReadTests.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, decimal)", span="0-0"];
m6_2045 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverterTest()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverterTest()", span="4573-4573"];
m6_2046 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverterTest()", file="ReadTests.cs", label="Movie p = new Movie()", span="4575-4575"];
m6_2047 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverterTest()", file="ReadTests.cs", label="p.Name = ''Existing,''", span="4576-4576"];
m6_2048 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverterTest()", file="ReadTests.cs", label="JsonConvert.PopulateObject(''{'Name':'Appended'}'', p, new JsonSerializerSettings\r\n        {\r\n          Converters = new List<JsonConverter> { new StringAppenderConverter() }\r\n        })", span="4578-4581"];
m6_2049 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverterTest()", file="ReadTests.cs", label="Assert.AreEqual(''Existing,Appended'', p.Name)", span="4583-4583"];
m6_2050 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverterTest()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverterTest()", span="4573-4573"];
m6_512 [cluster="Newtonsoft.Json.Linq.JToken.Children()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Linq.JToken.Children()", span="332-332"];
m6_2350 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.VectorParent.VectorParent()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.VectorParent.VectorParent()", span="5240-5240"];
m6_2472 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", span="5592-5592"];
m6_2473 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="ReadTests.cs", label="string json = @''{\r\n  'Name': 'James Hughes',\r\n  'Age': '40',\r\n  'Height': '44.4',\r\n  'Price': '4'\r\n}''", span="5594-5599"];
m6_2474 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="ReadTests.cs", label="DeserializeStringConvert p = JsonConvert.DeserializeObject<DeserializeStringConvert>(json)", span="5601-5601"];
m6_2475 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="ReadTests.cs", label="Assert.AreEqual(40, p.Age)", span="5602-5602"];
m6_2476 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="ReadTests.cs", label="Assert.AreEqual(44.4, p.Height)", span="5603-5603"];
m6_2477 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="ReadTests.cs", label="Assert.AreEqual(4m, p.Price)", span="5604-5604"];
m6_2478 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", span="5592-5592"];
m6_2080 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", span="4634-4634"];
m6_2081 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="ReadTests.cs", label="var reference = new Dictionary<string, object>()", span="4636-4636"];
m6_2082 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="ReadTests.cs", label="reference.Add(''$ref'', null)", span="4637-4637"];
m6_2083 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="ReadTests.cs", label="reference.Add(''$id'', null)", span="4638-4638"];
m6_2084 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="ReadTests.cs", label="reference.Add(''blah'', ''blah!'')", span="4639-4639"];
m6_2088 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="ReadTests.cs", label="child.Add(''Father'', reference)", span="4644-4644"];
m6_2085 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="ReadTests.cs", label="var child = new Dictionary<string, object>()", span="4641-4641"];
m6_2086 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="ReadTests.cs", label="child.Add(''_id'', 2)", span="4642-4642"];
m6_2087 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="ReadTests.cs", label="child.Add(''Name'', ''Isabell'')", span="4643-4643"];
m6_2089 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="ReadTests.cs", label="var json = JsonConvert.SerializeObject(child)", span="4646-4646"];
m6_2090 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="ReadTests.cs", label="Dictionary<string, object> result = JsonConvert.DeserializeObject<Dictionary<string, object>>(json)", span="4647-4647"];
m6_2091 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="ReadTests.cs", label="Assert.AreEqual(3, result.Count)", span="4649-4649"];
m6_2092 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="ReadTests.cs", label="Assert.AreEqual(1, ((JObject)result[''Father'']).Count)", span="4650-4650"];
m6_2093 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="ReadTests.cs", label="Assert.AreEqual(''blah!'', (string)((JObject)result[''Father''])[''blah''])", span="4651-4651"];
m6_2094 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", span="4634-4634"];
m6_3339 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIEnumerableFromConstructor_Failure()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIEnumerableFromConstructor_Failure()", span="7593-7593"];
m6_3340 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIEnumerableFromConstructor_Failure()", file="ReadTests.cs", label="string json = @''[\r\n  ''''One'''',\r\n  ''''II'''',\r\n  ''''3''''\r\n]''", span="7595-7599"];
m6_3341 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIEnumerableFromConstructor_Failure()", file="ReadTests.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''Cannot create and populate list type Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+EnumerableClassFailure`1[System.String]. Path '', line 1, position 1.'',\r\n        () => JsonConvert.DeserializeObject<EnumerableClassFailure<string>>(json))", span="7601-7603"];
m6_3342 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIEnumerableFromConstructor_Failure()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIEnumerableFromConstructor_Failure()", span="7593-7593"];
m6_673 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", span="1435-1435"];
m6_674 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(null)", span="1437-1437"];
m6_675 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", file="ReadTests.cs", label="Assert.AreEqual(''null'', json)", span="1438-1438"];
m6_676 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", span="1435-1435"];
m6_3043 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", span="6905-6905"];
m6_3044 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="ReadTests.cs", label="Product product = new Product()", span="6907-6907"];
m6_3045 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="ReadTests.cs", label="product.Name = ''Apple''", span="6908-6908"];
m6_3046 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="ReadTests.cs", label="product.ExpiryDate = new DateTime(2012, 4, 1)", span="6909-6909"];
m6_3047 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="ReadTests.cs", label="product.Price = 3.99M", span="6910-6910"];
m6_3048 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="ReadTests.cs", label="product.Sizes = new[] { ''Small'', ''Medium'', ''Large'' }", span="6911-6911"];
m6_3049 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(product)", span="6913-6913"];
m6_3050 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="ReadTests.cs", label="string metroJson = JsonConvert.SerializeObject(product, new JsonSerializerSettings\r\n        {\r\n          ContractResolver = new MetroPropertyNameResolver(),\r\n          Converters = { new MetroStringConverter() },\r\n          Formatting = Formatting.Indented\r\n        })", span="6921-6926"];
m6_3051 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="ReadTests.cs", label="Assert.AreEqual(@''{\r\n  '''':::NAME:::'''': '''':::APPLE:::'''',\r\n  '''':::EXPIRYDATE:::'''': ''''2012-04-01T00:00:00'''',\r\n  '''':::PRICE:::'''': 3.99,\r\n  '''':::SIZES:::'''': [\r\n    '''':::SMALL:::'''',\r\n    '''':::MEDIUM:::'''',\r\n    '''':::LARGE:::''''\r\n  ]\r\n}'', metroJson)", span="6927-6936"];
m6_3052 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="ReadTests.cs", label="Color[] colors = new[] { Color.Blue, Color.Red, Color.Yellow, Color.Green, Color.Black, Color.Brown }", span="6944-6944"];
m6_3053 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="ReadTests.cs", label="string json2 = JsonConvert.SerializeObject(colors, new JsonSerializerSettings\r\n      {\r\n        ContractResolver = new MetroPropertyNameResolver(),\r\n        Converters = { new MetroStringConverter(), new MetroColorConverter() },\r\n        Formatting = Formatting.Indented\r\n      })", span="6946-6951"];
m6_3054 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="ReadTests.cs", label="Assert.AreEqual(@''[\r\n  '''':::GRAY:::'''',\r\n  '''':::GRAY:::'''',\r\n  '''':::GRAY:::'''',\r\n  '''':::GRAY:::'''',\r\n  '''':::BLACK:::'''',\r\n  '''':::GRAY:::''''\r\n]'', json2)", span="6953-6960"];
m6_3055 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", span="6905-6905"];
m6_1003 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", span="2052-2052"];
m6_1004 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="ReadTests.cs", label="JaggedArray aa = new JaggedArray()", span="2054-2054"];
m6_1005 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="ReadTests.cs", label="aa.Before = ''Before!''", span="2055-2055"];
m6_1006 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="ReadTests.cs", label="aa.After = ''After!''", span="2056-2056"];
m6_1007 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="ReadTests.cs", label="aa.Coordinates = new[] { new[] { 1, 1 }, new[] { 1, 2 }, new[] { 2, 1 }, new[] { 2, 2 } }", span="2057-2057"];
m6_1008 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(aa)", span="2059-2059"];
m6_1009 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="ReadTests.cs", label="Assert.AreEqual(@''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1,2],[2,1],[2,2]],''''After'''':''''After!''''}'', json)", span="2061-2061"];
m6_1010 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", span="2052-2052"];
m6_2917 [cluster="Newtonsoft.Json.Tests.Serialization.Item.Item()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Item.Item()", span="9493-9493"];
m6_3871 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IMyInterface.PrintTest()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IMyInterface.PrintTest()", span="9142-9142"];
m6_3872 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IMyInterface.PrintTest()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IMyInterface.PrintTest()", span="9142-9142"];
m6_2944 [cluster="Newtonsoft.Json.Tests.Serialization.WidgetId1.WidgetId1()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.WidgetId1.WidgetId1()", span="9453-9453"];
m6_3950 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterJsonConverter.TypeConverterJsonConverter()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterJsonConverter.TypeConverterJsonConverter()", span="9217-9217"];
m6_2198 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", span="4917-4917"];
m6_2199 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="ReadTests.cs", label="Dictionary<DictionaryKey, string> dictionary = new Dictionary<DictionaryKey, string>()", span="4919-4919"];
m6_2200 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="ReadTests.cs", label="dictionary.Add(new DictionaryKey() { Value = ''First!'' }, ''First'')", span="4921-4921"];
m6_2201 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="ReadTests.cs", label="dictionary.Add(new DictionaryKey() { Value = ''Second!'' }, ''Second'')", span="4922-4922"];
m6_2202 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(dictionary, Formatting.Indented)", span="4924-4924"];
m6_2203 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="ReadTests.cs", label="Assert.AreEqual(@''{\r\n  ''''First!'''': ''''First'''',\r\n  ''''Second!'''': ''''Second''''\r\n}'', json)", span="4926-4929"];
m6_2204 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="ReadTests.cs", label="Dictionary<DictionaryKey, string> newDictionary =\r\n        JsonConvert.DeserializeObject<Dictionary<DictionaryKey, string>>(json)", span="4931-4932"];
m6_2205 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="ReadTests.cs", label="Assert.AreEqual(2, newDictionary.Count)", span="4934-4934"];
m6_2206 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", span="4917-4917"];
m6_269 [cluster="Newtonsoft.Json.Linq.JObject.JObject()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Linq.JObject.JObject()", span="87-87"];
m6_4114 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.TryParse(string, out Newtonsoft.Json.Tests.Serialization.Ratio)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Ratio.TryParse(string, out Newtonsoft.Json.Tests.Serialization.Ratio)", span="9988-9988"];
m6_4115 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.TryParse(string, out Newtonsoft.Json.Tests.Serialization.Ratio)", file="ReadTests.cs", label="return TryParse(input, CultureInfo.InvariantCulture, out result);", span="9990-9990"];
m6_4116 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.TryParse(string, out Newtonsoft.Json.Tests.Serialization.Ratio)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.Ratio.TryParse(string, out Newtonsoft.Json.Tests.Serialization.Ratio)", span="9988-9988"];
m6_2721 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", file="ReadTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", span="432-432"];
m6_883 [cluster="System.DateTime.ToUniversalTime()", file="ReadTests.cs", label="Entry System.DateTime.ToUniversalTime()", span="0-0"];
m6_1574 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", span="3480-3480"];
m6_1575 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="ReadTests.cs", label="string json = ''{key1:'value1',key2:'value2',key3:'value3'}''", span="3482-3482"];
m6_1576 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="ReadTests.cs", label="var dic = JsonConvert.DeserializeObject<DictionaryWithNoDefaultConstructor>(json)", span="3484-3484"];
m6_1577 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="ReadTests.cs", label="Assert.AreEqual(3, dic.Count)", span="3486-3486"];
m6_1578 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="ReadTests.cs", label="Assert.AreEqual(''value1'', dic[''key1''])", span="3487-3487"];
m6_1579 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="ReadTests.cs", label="Assert.AreEqual(''value2'', dic[''key2''])", span="3488-3488"];
m6_1580 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="ReadTests.cs", label="Assert.AreEqual(''value3'', dic[''key3''])", span="3489-3489"];
m6_1581 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", span="3480-3480"];
m6_543 [cluster="Newtonsoft.Json.Tests.TestObjects.Article.Article(string)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Article.Article(string)", span="35-35"];
m6_2778 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", span="6381-6381"];
m6_2779 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="ReadTests.cs", label="string input = @''http://tes/?a=b\\c&d=e\''", span="6383-6383"];
m6_2780 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="ReadTests.cs", label="Uri uri = new Uri(input)", span="6384-6384"];
m6_2781 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(uri)", span="6385-6385"];
m6_2783 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="ReadTests.cs", label="Assert.AreEqual(uri, output)", span="6388-6388"];
m6_2782 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="ReadTests.cs", label="Uri output = JsonConvert.DeserializeObject<Uri>(json)", span="6386-6386"];
m6_2784 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", span="6381-6381"];
m6_1670 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", span="3740-3740"];
m6_1671 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", file="ReadTests.cs", label="return _innerDictionary.TryGetValue(key, out value);", span="3742-3742"];
m6_1672 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", span="3740-3740"];
m6_2625 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", span="6059-6059"];
m6_2626 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", file="ReadTests.cs", label="return _readonlyString;", span="6061-6061"];
m6_2627 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", span="6059-6059"];
m6_2032 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.StringListAppenderConverter()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.StringListAppenderConverter()", span="4504-4504"];
m6_3042 [cluster="Newtonsoft.Json.Tests.Serialization.PersonWithPrivateConstructor.CreatePerson()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.PersonWithPrivateConstructor.CreatePerson()", span="9432-9432"];
m6_3960 [cluster="Newtonsoft.Json.Tests.Serialization.PersonWithPrivateConstructor.CreatePerson()", file="ReadTests.cs", label="return new PersonWithPrivateConstructor();", span="9434-9434"];
m6_3961 [cluster="Newtonsoft.Json.Tests.Serialization.PersonWithPrivateConstructor.CreatePerson()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.PersonWithPrivateConstructor.CreatePerson()", span="9432-9432"];
m6_1758 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, sbyte)", file="ReadTests.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, sbyte)", span="0-0"];
m6_3440 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3D()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3D()", span="7920-7920"];
m6_3441 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3D()", file="ReadTests.cs", label="Array3D aa = new Array3D()", span="7922-7922"];
m6_3442 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3D()", file="ReadTests.cs", label="aa.Before = ''Before!''", span="7923-7923"];
m6_3443 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3D()", file="ReadTests.cs", label="aa.After = ''After!''", span="7924-7924"];
m6_3444 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3D()", file="ReadTests.cs", label="aa.Coordinates = new[, ,] { { { 1, 1, 1 }, { 1, 1, 2 } }, { { 1, 2, 1 }, { 1, 2, 2 } }, { { 2, 1, 1 }, { 2, 1, 2 } }, { { 2, 2, 1 }, { 2, 2, 2 } } }", span="7925-7925"];
m6_3445 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3D()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(aa)", span="7927-7927"];
m6_3446 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3D()", file="ReadTests.cs", label="Assert.AreEqual(@''{''''Before'''':''''Before!'''',''''Coordinates'''':[[[1,1,1],[1,1,2]],[[1,2,1],[1,2,2]],[[2,1,1],[2,1,2]],[[2,2,1],[2,2,2]]],''''After'''':''''After!''''}'', json)", span="7929-7929"];
m6_3447 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3D()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3D()", span="7920-7920"];
m6_2832 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", span="6475-6475"];
m6_2833 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="ReadTests.cs", label="IList<byte[]> d1 = new List<byte[]> { null }", span="6477-6477"];
m6_2834 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(d1)", span="6479-6479"];
m6_2836 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="ReadTests.cs", label="Assert.AreEqual(d1.Count, d2.Count)", span="6483-6483"];
m6_2837 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="ReadTests.cs", label="Assert.AreEqual(d1[0], d2[0])", span="6484-6484"];
m6_2835 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="ReadTests.cs", label="IList<byte[]> d2 = JsonConvert.DeserializeObject<IList<byte[]>>(json)", span="6481-6481"];
m6_2838 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", span="6475-6475"];
m6_3240 [cluster="Newtonsoft.Json.Tests.Serialization.PocoDataContractSerializationAttributesClass.PocoDataContractSerializationAttributesClass()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.PocoDataContractSerializationAttributesClass.PocoDataContractSerializationAttributesClass()", span="9684-9684"];
m6_4057 [cluster="System.Convert.ToDateTime(int)", file="ReadTests.cs", label="Entry System.Convert.ToDateTime(int)", span="0-0"];
m6_1547 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", span="3391-3391"];
m6_1548 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", file="ReadTests.cs", label="this._dict1.Add(item.Key, item)", span="3393-3393"];
m6_1549 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", span="3391-3391"];
m6_3902 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterJsonConverter.GetConverter(System.Type)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterJsonConverter.GetConverter(System.Type)", span="9219-9219"];
m6_3903 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterJsonConverter.GetConverter(System.Type)", file="ReadTests.cs", label="var converters = type.GetCustomAttributes(typeof(TypeConverterAttribute), true).Union(\r\n          from t in type.GetInterfaces()\r\n          from c in t.GetCustomAttributes(typeof(TypeConverterAttribute), true)\r\n          select c).Distinct()", span="9221-9224"];
m6_3904 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterJsonConverter.GetConverter(System.Type)", file="ReadTests.cs", label="return\r\n          (from c in converters\r\n           let converter =\r\n             (TypeConverter)Activator.CreateInstance(Type.GetType(((TypeConverterAttribute)c).ConverterTypeName))\r\n           where converter.CanConvertFrom(typeof(string))\r\n                 && converter.CanConvertTo(typeof(string))\r\n           select converter)\r\n            .FirstOrDefault();", span="9226-9233"];
m6_3905 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterJsonConverter.GetConverter(System.Type)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterJsonConverter.GetConverter(System.Type)", span="9219-9219"];
m6_3071 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.CanConvert(System.Type)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.CanConvert(System.Type)", span="6978-6978"];
m6_3072 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.CanConvert(System.Type)", file="ReadTests.cs", label="return objectType == typeof(Color);", span="6980-6980"];
m6_3073 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.CanConvert(System.Type)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.CanConvert(System.Type)", span="6978-6978"];
m6_4090 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.ToUInt32(System.IFormatProvider)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Ratio.ToUInt32(System.IFormatProvider)", span="9945-9945"];
m6_4091 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.ToUInt32(System.IFormatProvider)", file="ReadTests.cs", label="return (uint)(this._numerator / this._denominator);", span="9947-9947"];
m6_4092 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.ToUInt32(System.IFormatProvider)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.Ratio.ToUInt32(System.IFormatProvider)", span="9945-9945"];
m6_2312 [cluster="System.Dynamic.ExpandoObject.ExpandoObject()", file="ReadTests.cs", label="Entry System.Dynamic.ExpandoObject.ExpandoObject()", span="0-0"];
m6_623 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="ReadTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m6_2425 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", span="5467-5467"];
m6_2426 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", file="ReadTests.cs", label="NonPublicConstructorWithJsonConstructor c = JsonConvert.DeserializeObject<NonPublicConstructorWithJsonConstructor>(''{}'')", span="5469-5469"];
m6_2427 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", file="ReadTests.cs", label="Assert.AreEqual(''NonPublic'', c.Constructor)", span="5470-5470"];
m6_2428 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", span="5467-5467"];
m6_3399 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", span="7771-7771"];
m6_3400 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", file="ReadTests.cs", label="IgnoreSerializableAttribute = false", span="7773-7773"];
m6_3401 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", span="7771-7771"];
m6_2170 [cluster="Unk.IsFalse", file="ReadTests.cs", label="Entry Unk.IsFalse", span=""];
m6_1226 [cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", span="192-192"];
m6_2189 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FamilyDetails.FamilyDetails()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FamilyDetails.FamilyDetails()", span="4856-4856"];
m6_2322 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", span="5205-5205"];
m6_2323 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="ReadTests.cs", label="string json = ''{Amount:123456789876543.21}''", span="5207-5207"];
m6_2324 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="ReadTests.cs", label="Invoice i = JsonConvert.DeserializeObject<Invoice>(json)", span="5208-5208"];
m6_2325 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="ReadTests.cs", label="Assert.AreEqual(123456789876543.21m, i.Amount)", span="5209-5209"];
m6_2326 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", span="5205-5205"];
m6_2262 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", span="5084-5084"];
m6_2263 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="ReadTests.cs", label="var serializeObject = JsonConvert.SerializeObject(new TimeZoneOffsetObject\r\n        {\r\n          Offset = new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6))\r\n        })", span="5086-5089"];
m6_2264 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="ReadTests.cs", label="Assert.AreEqual(''{\''Offset\'':\''2000-01-01T00:00:00+06:00\''}'', serializeObject)", span="5091-5091"];
m6_2265 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="ReadTests.cs", label="var deserializeObject = JsonConvert.DeserializeObject<TimeZoneOffsetObject>(serializeObject)", span="5092-5092"];
m6_2266 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="ReadTests.cs", label="Assert.AreEqual(TimeSpan.FromHours(6), deserializeObject.Offset.Offset)", span="5093-5093"];
m6_2267 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="ReadTests.cs", label="Assert.AreEqual(new DateTime(2000, 1, 1), deserializeObject.Offset.Date)", span="5094-5094"];
m6_2268 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", span="5084-5084"];
m6_2515 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", span="5730-5730"];
m6_2516 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(new EnumerableArrayPropertyClass())", span="5732-5732"];
m6_2517 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", file="ReadTests.cs", label="JsonConvert.DeserializeObject<EnumerableArrayPropertyClass>(json)", span="5733-5733"];
m6_2518 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", span="5730-5730"];
m6_3530 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEmpty3DArray()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEmpty3DArray()", span="8157-8157"];
m6_3531 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEmpty3DArray()", file="ReadTests.cs", label="Array3D aa = new Array3D()", span="8159-8159"];
m6_3532 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEmpty3DArray()", file="ReadTests.cs", label="aa.Before = ''Before!''", span="8160-8160"];
m6_3533 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEmpty3DArray()", file="ReadTests.cs", label="aa.After = ''After!''", span="8161-8161"];
m6_3534 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEmpty3DArray()", file="ReadTests.cs", label="aa.Coordinates = new int[0, 0, 0]", span="8162-8162"];
m6_3535 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEmpty3DArray()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(aa)", span="8164-8164"];
m6_3536 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEmpty3DArray()", file="ReadTests.cs", label="Assert.AreEqual(@''{''''Before'''':''''Before!'''',''''Coordinates'''':[],''''After'''':''''After!''''}'', json)", span="8166-8166"];
m6_3537 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEmpty3DArray()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEmpty3DArray()", span="8157-8157"];
m6_321 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", span="744-744"];
m6_322 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="ReadTests.cs", label="BaseWithContract baseWith = new SubWithoutContractNewProperties\r\n        {\r\n          JustAProperty = ''JustAProperty!'',\r\n          Virtual = ''Virtual!'',\r\n          VirtualWithDataMember = ''VirtualWithDataMember!'',\r\n          WithDataMember = ''WithDataMember!''\r\n        }", span="746-752"];
m6_323 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="ReadTests.cs", label="baseWith.JustAProperty = ''JustAProperty2!''", span="754-754"];
m6_324 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="ReadTests.cs", label="baseWith.Virtual = ''Virtual2!''", span="755-755"];
m6_325 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="ReadTests.cs", label="baseWith.VirtualWithDataMember = ''VirtualWithDataMember2!''", span="756-756"];
m6_326 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="ReadTests.cs", label="baseWith.WithDataMember = ''WithDataMember2!''", span="757-757"];
m6_327 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="ReadTests.cs", label="string json = AssertSerializeDeserializeEqual(baseWith)", span="759-759"];
m6_328 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="ReadTests.cs", label="Assert.AreEqual(@''{\r\n  ''''JustAProperty'''': ''''JustAProperty2!'''',\r\n  ''''Virtual'''': ''''Virtual2!'''',\r\n  ''''VirtualWithDataMemberBase'''': ''''VirtualWithDataMember2!'''',\r\n  ''''VirtualWithDataMemberSub'''': ''''VirtualWithDataMember!'''',\r\n  ''''WithDataMemberBase'''': ''''WithDataMember2!'''',\r\n  ''''WithDataMemberSub'''': ''''WithDataMember!''''\r\n}'', json)", span="761-768"];
m6_329 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", span="744-744"];
m6_2351 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.Vector()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.Vector()", span="5228-5228"];
m6_3563 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNull3DArray()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNull3DArray()", span="8208-8208"];
m6_3564 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNull3DArray()", file="ReadTests.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':null,''''After'''':''''After!''''}''", span="8210-8210"];
m6_3565 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNull3DArray()", file="ReadTests.cs", label="Array3D aa = JsonConvert.DeserializeObject<Array3D>(json)", span="8212-8212"];
m6_3570 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNull3DArray()", file="ReadTests.cs", label="Assert.AreEqual(json, after)", span="8220-8220"];
m6_3566 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNull3DArray()", file="ReadTests.cs", label="Assert.AreEqual(''Before!'', aa.Before)", span="8214-8214"];
m6_3567 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNull3DArray()", file="ReadTests.cs", label="Assert.AreEqual(''After!'', aa.After)", span="8215-8215"];
m6_3568 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNull3DArray()", file="ReadTests.cs", label="Assert.AreEqual(null, aa.Coordinates)", span="8216-8216"];
m6_3569 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNull3DArray()", file="ReadTests.cs", label="string after = JsonConvert.SerializeObject(aa)", span="8218-8218"];
m6_3571 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNull3DArray()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNull3DArray()", span="8208-8208"];
m6_4133 [cluster="string.Substring(int, int)", file="ReadTests.cs", label="Entry string.Substring(int, int)", span="0-0"];
m6_3779 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.System.Collections.IEnumerable.GetEnumerator()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.System.Collections.IEnumerable.GetEnumerator()", span="8886-8886"];
m6_3780 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.System.Collections.IEnumerable.GetEnumerator()", file="ReadTests.cs", label="return _dictionary.GetEnumerator();", span="8888-8888"];
m6_3781 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.System.Collections.IEnumerable.GetEnumerator()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.System.Collections.IEnumerable.GetEnumerator()", span="8886-8886"];
m6_3647 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", span="8569-8569"];
m6_3648 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="ReadTests.cs", label="string json = @''[999999999999999999999999999999999999999999999999]''", span="8571-8571"];
m6_3649 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="ReadTests.cs", label="IList<BigInteger> l = JsonConvert.DeserializeObject<IList<BigInteger>>(json)", span="8573-8573"];
m6_3651 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="ReadTests.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''Error converting value 999999999999999999999999999999999999999999999999 to type 'System.Int64'. Path '[0]', line 1, position 49.'',\r\n        () => JsonConvert.DeserializeObject<IList<long>>(json))", span="8577-8579"];
m6_3650 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="ReadTests.cs", label="Assert.AreEqual(BigInteger.Parse(''999999999999999999999999999999999999999999999999''), l[0])", span="8575-8575"];
m6_3652 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", span="8569-8569"];
m6_147 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", span="343-343"];
m6_148 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="ReadTests.cs", label="JsonSerializerProxy serializerProxy = new JsonSerializerProxy(new JsonSerializerInternalReader(new JsonSerializer()))", span="345-345"];
m6_149 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="ReadTests.cs", label="DefaultSerializationBinder customBinder = new DefaultSerializationBinder()", span="347-347"];
m6_150 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="ReadTests.cs", label="serializerProxy.Binder = customBinder", span="348-348"];
m6_151 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="ReadTests.cs", label="Assert.AreEqual(customBinder, serializerProxy.Binder)", span="349-349"];
m6_152 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="ReadTests.cs", label="serializerProxy.CheckAdditionalContent = true", span="351-351"];
m6_153 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="ReadTests.cs", label="Assert.AreEqual(true, serializerProxy.CheckAdditionalContent)", span="352-352"];
m6_154 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="ReadTests.cs", label="serializerProxy.ConstructorHandling = ConstructorHandling.AllowNonPublicDefaultConstructor", span="354-354"];
m6_155 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="ReadTests.cs", label="Assert.AreEqual(ConstructorHandling.AllowNonPublicDefaultConstructor, serializerProxy.ConstructorHandling)", span="355-355"];
m6_156 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="ReadTests.cs", label="serializerProxy.Context = new StreamingContext(StreamingContextStates.Other)", span="357-357"];
m6_157 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="ReadTests.cs", label="Assert.AreEqual(new StreamingContext(StreamingContextStates.Other), serializerProxy.Context)", span="358-358"];
m6_159 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="ReadTests.cs", label="serializerProxy.ContractResolver = resolver", span="361-361"];
m6_160 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="ReadTests.cs", label="Assert.AreEqual(resolver, serializerProxy.ContractResolver)", span="362-362"];
m6_161 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="ReadTests.cs", label="serializerProxy.Converters.Add(new StringEnumConverter())", span="364-364"];
m6_162 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="ReadTests.cs", label="Assert.AreEqual(1, serializerProxy.Converters.Count)", span="365-365"];
m6_163 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="ReadTests.cs", label="serializerProxy.Culture = new CultureInfo(''en-nz'')", span="367-367"];
m6_164 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="ReadTests.cs", label="Assert.AreEqual(''en-NZ'', serializerProxy.Culture.ToString())", span="368-368"];
m6_165 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="ReadTests.cs", label="serializerProxy.DateFormatHandling = DateFormatHandling.MicrosoftDateFormat", span="370-370"];
m6_166 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="ReadTests.cs", label="Assert.AreEqual(DateFormatHandling.MicrosoftDateFormat, serializerProxy.DateFormatHandling)", span="371-371"];
m6_167 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="ReadTests.cs", label="serializerProxy.DateFormatString = ''yyyy''", span="373-373"];
m6_168 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="ReadTests.cs", label="Assert.AreEqual(''yyyy'', serializerProxy.DateFormatString)", span="374-374"];
m6_169 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="ReadTests.cs", label="serializerProxy.DateParseHandling = DateParseHandling.None", span="376-376"];
m6_170 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="ReadTests.cs", label="Assert.AreEqual(DateParseHandling.None, serializerProxy.DateParseHandling)", span="377-377"];
m6_171 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="ReadTests.cs", label="serializerProxy.DateTimeZoneHandling = DateTimeZoneHandling.Utc", span="379-379"];
m6_172 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="ReadTests.cs", label="Assert.AreEqual(DateTimeZoneHandling.Utc, serializerProxy.DateTimeZoneHandling)", span="380-380"];
m6_173 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="ReadTests.cs", label="serializerProxy.DefaultValueHandling = DefaultValueHandling.IgnoreAndPopulate", span="382-382"];
m6_174 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="ReadTests.cs", label="Assert.AreEqual(DefaultValueHandling.IgnoreAndPopulate, serializerProxy.DefaultValueHandling)", span="383-383"];
m6_175 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="ReadTests.cs", label="serializerProxy.FloatFormatHandling = FloatFormatHandling.Symbol", span="385-385"];
m6_176 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="ReadTests.cs", label="Assert.AreEqual(FloatFormatHandling.Symbol, serializerProxy.FloatFormatHandling)", span="386-386"];
m6_177 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="ReadTests.cs", label="serializerProxy.FloatParseHandling = FloatParseHandling.Decimal", span="388-388"];
m6_178 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="ReadTests.cs", label="Assert.AreEqual(FloatParseHandling.Decimal, serializerProxy.FloatParseHandling)", span="389-389"];
m6_179 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="ReadTests.cs", label="serializerProxy.Formatting = Formatting.Indented", span="391-391"];
m6_180 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="ReadTests.cs", label="Assert.AreEqual(Formatting.Indented, serializerProxy.Formatting)", span="392-392"];
m6_181 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="ReadTests.cs", label="serializerProxy.MaxDepth = 9001", span="394-394"];
m6_182 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="ReadTests.cs", label="Assert.AreEqual(9001, serializerProxy.MaxDepth)", span="395-395"];
m6_183 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="ReadTests.cs", label="serializerProxy.MissingMemberHandling = MissingMemberHandling.Error", span="397-397"];
m6_184 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="ReadTests.cs", label="Assert.AreEqual(MissingMemberHandling.Error, serializerProxy.MissingMemberHandling)", span="398-398"];
m6_185 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="ReadTests.cs", label="serializerProxy.NullValueHandling = NullValueHandling.Ignore", span="400-400"];
m6_186 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="ReadTests.cs", label="Assert.AreEqual(NullValueHandling.Ignore, serializerProxy.NullValueHandling)", span="401-401"];
m6_187 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="ReadTests.cs", label="serializerProxy.ObjectCreationHandling = ObjectCreationHandling.Replace", span="403-403"];
m6_188 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="ReadTests.cs", label="Assert.AreEqual(ObjectCreationHandling.Replace, serializerProxy.ObjectCreationHandling)", span="404-404"];
m6_189 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="ReadTests.cs", label="serializerProxy.PreserveReferencesHandling = PreserveReferencesHandling.All", span="406-406"];
m6_190 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="ReadTests.cs", label="Assert.AreEqual(PreserveReferencesHandling.All, serializerProxy.PreserveReferencesHandling)", span="407-407"];
m6_191 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="ReadTests.cs", label="serializerProxy.ReferenceLoopHandling = ReferenceLoopHandling.Ignore", span="409-409"];
m6_192 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="ReadTests.cs", label="Assert.AreEqual(ReferenceLoopHandling.Ignore, serializerProxy.ReferenceLoopHandling)", span="410-410"];
m6_194 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="ReadTests.cs", label="serializerProxy.ReferenceResolver = referenceResolver", span="413-413"];
m6_195 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="ReadTests.cs", label="Assert.AreEqual(referenceResolver, serializerProxy.ReferenceResolver)", span="414-414"];
m6_196 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="ReadTests.cs", label="serializerProxy.StringEscapeHandling = StringEscapeHandling.EscapeNonAscii", span="416-416"];
m6_197 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="ReadTests.cs", label="Assert.AreEqual(StringEscapeHandling.EscapeNonAscii, serializerProxy.StringEscapeHandling)", span="417-417"];
m6_199 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="ReadTests.cs", label="serializerProxy.TraceWriter = traceWriter", span="420-420"];
m6_200 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="ReadTests.cs", label="Assert.AreEqual(traceWriter, serializerProxy.TraceWriter)", span="421-421"];
m6_201 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="ReadTests.cs", label="serializerProxy.TypeNameAssemblyFormat = FormatterAssemblyStyle.Full", span="424-424"];
m6_202 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="ReadTests.cs", label="Assert.AreEqual(FormatterAssemblyStyle.Full, serializerProxy.TypeNameAssemblyFormat)", span="425-425"];
m6_203 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="ReadTests.cs", label="serializerProxy.TypeNameHandling = TypeNameHandling.All", span="428-428"];
m6_204 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="ReadTests.cs", label="Assert.AreEqual(TypeNameHandling.All, serializerProxy.TypeNameHandling)", span="429-429"];
m6_158 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="ReadTests.cs", label="CamelCasePropertyNamesContractResolver resolver = new CamelCasePropertyNamesContractResolver()", span="360-360"];
m6_193 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="ReadTests.cs", label="IdReferenceResolver referenceResolver = new IdReferenceResolver()", span="412-412"];
m6_198 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="ReadTests.cs", label="MemoryTraceWriter traceWriter = new MemoryTraceWriter()", span="419-419"];
m6_205 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", span="343-343"];
m6_2857 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", span="6531-6531"];
m6_2858 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="ReadTests.cs", label="ConvertableIntTestClass c = new ConvertableIntTestClass\r\n      {\r\n        Integer = new ConvertibleInt(1),\r\n        NullableInteger1 = new ConvertibleInt(2),\r\n        NullableInteger2 = null\r\n      }", span="6533-6538"];
m6_2859 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="6540-6540"];
m6_2860 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="ReadTests.cs", label="Assert.AreEqual(@''{\r\n  ''''Integer'''': 1,\r\n  ''''NullableInteger1'''': 2,\r\n  ''''NullableInteger2'''': null\r\n}'', json)", span="6542-6546"];
m6_2861 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", span="6531-6531"];
m6_3489 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D_WithTooFewItems()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D_WithTooFewItems()", span="8097-8097"];
m6_3490 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D_WithTooFewItems()", file="ReadTests.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1],[2,1],[2,2]],''''After'''':''''After!''''}''", span="8099-8099"];
m6_3491 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D_WithTooFewItems()", file="ReadTests.cs", label="ExceptionAssert.Throws<Exception>(\r\n        ''Cannot deserialize non-cubical array as multidimensional array.'',\r\n        () => JsonConvert.DeserializeObject<Array2D>(json))", span="8101-8103"];
m6_3492 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D_WithTooFewItems()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D_WithTooFewItems()", span="8097-8097"];
m6_722 [cluster="Newtonsoft.Json.Tests.TestObjects.ClassWithArray.ClassWithArray()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ClassWithArray.ClassWithArray()", span="35-35"];
m6_246 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDirectoryAccount()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDirectoryAccount()", span="521-521"];
m6_247 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDirectoryAccount()", file="ReadTests.cs", label="string json = @''{'DisplayName':'John Smith', 'SAMAccountName':'contoso\\johns'}''", span="523-523"];
m6_248 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDirectoryAccount()", file="ReadTests.cs", label="DirectoryAccount account = JsonConvert.DeserializeObject<DirectoryAccount>(json)", span="525-525"];
m6_249 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDirectoryAccount()", file="ReadTests.cs", label="Assert.AreEqual(''John Smith'', account.DisplayName)", span="527-527"];
m6_250 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDirectoryAccount()", file="ReadTests.cs", label="Assert.AreEqual(''contoso'', account.Domain)", span="528-528"];
m6_251 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDirectoryAccount()", file="ReadTests.cs", label="Assert.AreEqual(''johns'', account.UserName)", span="529-529"];
m6_252 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDirectoryAccount()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDirectoryAccount()", span="521-521"];
m6_2489 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", span="5627-5627"];
m6_2490 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="ReadTests.cs", label="MultiIndexSuper e = new MultiIndexSuper()", span="5629-5629"];
m6_2491 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(e, Formatting.Indented)", span="5631-5631"];
m6_2492 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="ReadTests.cs", label="Assert.AreEqual(@''{}'', json)", span="5633-5633"];
m6_2493 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", span="5627-5627"];
m6_0 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericClass<T, TValue>.GenericClass()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericClass<T, TValue>.GenericClass()", span="109-109"];
m6_1 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericClass<T, TValue>.GenericClass()", file="ReadTests.cs", label="Items = new List<T>()", span="111-111"];
m6_2 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericClass<T, TValue>.GenericClass()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericClass<T, TValue>.GenericClass()", span="109-109"];
m6_1623 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", span="3638-3638"];
m6_1624 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="ReadTests.cs", label="dictionary == null", span="3640-3640"];
m6_1626 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="ReadTests.cs", label=dictionary, span="3645-3645"];
m6_1625 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="ReadTests.cs", label="throw new ArgumentNullException(''dictionary'');", span="3642-3642"];
m6_1627 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="ReadTests.cs", label="_innerDictionary.Add(entry.Key, entry.Value)", span="3647-3647"];
m6_1628 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", span="3638-3638"];
m6_282 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleExtensionDataAttributesTest()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleExtensionDataAttributesTest()", span="594-594"];
m6_283 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleExtensionDataAttributesTest()", file="ReadTests.cs", label="var c = JsonConvert.DeserializeObject<MultipleExtensionDataAttributesTestClass>(''{'first':1,'second':2}'')", span="596-596"];
m6_284 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleExtensionDataAttributesTest()", file="ReadTests.cs", label="Assert.AreEqual(null, c.ExtensionData1)", span="598-598"];
m6_285 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleExtensionDataAttributesTest()", file="ReadTests.cs", label="Assert.AreEqual(2, c.ExtensionData2.Count)", span="599-599"];
m6_286 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleExtensionDataAttributesTest()", file="ReadTests.cs", label="Assert.AreEqual(1, (int)c.ExtensionData2[''first''])", span="600-600"];
m6_287 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleExtensionDataAttributesTest()", file="ReadTests.cs", label="Assert.AreEqual(2, (int)c.ExtensionData2[''second''])", span="601-601"];
m6_288 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleExtensionDataAttributesTest()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleExtensionDataAttributesTest()", span="594-594"];
m6_2594 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Contains(object)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Contains(object)", span="5975-5975"];
m6_2595 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Contains(object)", file="ReadTests.cs", label="throw new NotImplementedException();", span="5977-5977"];
m6_2596 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Contains(object)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Contains(object)", span="5975-5975"];
m6_2737 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeKeyValuePairArray()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeKeyValuePairArray()", span="6320-6320"];
m6_2738 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeKeyValuePairArray()", file="ReadTests.cs", label="string json = @''[ { ''''Value'''': [ ''''1'''', ''''2'''' ], ''''Key'''': ''''aaa'''', ''''BadContent'''': [ 0 ] }, { ''''Value'''': [ ''''3'''', ''''4'''' ], ''''Key'''': ''''bbb'''' } ]''", span="6322-6322"];
m6_2739 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeKeyValuePairArray()", file="ReadTests.cs", label="IList<KeyValuePair<string, IList<string>>> values = JsonConvert.DeserializeObject<IList<KeyValuePair<string, IList<string>>>>(json)", span="6324-6324"];
m6_2740 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeKeyValuePairArray()", file="ReadTests.cs", label="Assert.AreEqual(2, values.Count)", span="6326-6326"];
m6_2741 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeKeyValuePairArray()", file="ReadTests.cs", label="Assert.AreEqual(''aaa'', values[0].Key)", span="6327-6327"];
m6_2742 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeKeyValuePairArray()", file="ReadTests.cs", label="Assert.AreEqual(2, values[0].Value.Count)", span="6328-6328"];
m6_2743 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeKeyValuePairArray()", file="ReadTests.cs", label="Assert.AreEqual(''1'', values[0].Value[0])", span="6329-6329"];
m6_2744 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeKeyValuePairArray()", file="ReadTests.cs", label="Assert.AreEqual(''2'', values[0].Value[1])", span="6330-6330"];
m6_2745 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeKeyValuePairArray()", file="ReadTests.cs", label="Assert.AreEqual(''bbb'', values[1].Key)", span="6331-6331"];
m6_2746 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeKeyValuePairArray()", file="ReadTests.cs", label="Assert.AreEqual(2, values[1].Value.Count)", span="6332-6332"];
m6_2747 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeKeyValuePairArray()", file="ReadTests.cs", label="Assert.AreEqual(''3'', values[1].Value[0])", span="6333-6333"];
m6_2748 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeKeyValuePairArray()", file="ReadTests.cs", label="Assert.AreEqual(''4'', values[1].Value[1])", span="6334-6334"];
m6_2749 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeKeyValuePairArray()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeKeyValuePairArray()", span="6320-6320"];
m6_3496 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D()", span="8107-8107"];
m6_3497 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D()", file="ReadTests.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[[1,1,1],[1,1,2]],[[1,2,1],[1,2,2]],[[2,1,1],[2,1,2]],[[2,2,1],[2,2,2]]],''''After'''':''''After!''''}''", span="8109-8109"];
m6_3498 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D()", file="ReadTests.cs", label="Array3D aa = JsonConvert.DeserializeObject<Array3D>(json)", span="8111-8111"];
m6_3507 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D()", file="ReadTests.cs", label="Assert.AreEqual(json, after)", span="8123-8123"];
m6_3499 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D()", file="ReadTests.cs", label="Assert.AreEqual(''Before!'', aa.Before)", span="8113-8113"];
m6_3500 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D()", file="ReadTests.cs", label="Assert.AreEqual(''After!'', aa.After)", span="8114-8114"];
m6_3501 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D()", file="ReadTests.cs", label="Assert.AreEqual(4, aa.Coordinates.GetLength(0))", span="8115-8115"];
m6_3502 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D()", file="ReadTests.cs", label="Assert.AreEqual(2, aa.Coordinates.GetLength(1))", span="8116-8116"];
m6_3503 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D()", file="ReadTests.cs", label="Assert.AreEqual(3, aa.Coordinates.GetLength(2))", span="8117-8117"];
m6_3504 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D()", file="ReadTests.cs", label="Assert.AreEqual(1, aa.Coordinates[0, 0, 0])", span="8118-8118"];
m6_3505 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D()", file="ReadTests.cs", label="Assert.AreEqual(2, aa.Coordinates[1, 1, 1])", span="8119-8119"];
m6_3506 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D()", file="ReadTests.cs", label="string after = JsonConvert.SerializeObject(aa)", span="8121-8121"];
m6_3508 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D()", span="8107-8107"];
m6_974 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", span="1982-1982"];
m6_975 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="ReadTests.cs", label="string json = @''{\r\n  ''''FirstName'''': ''''I can't be null bro!'''',\r\n  ''''MiddleName'''': null,\r\n  ''''LastName'''': null,\r\n  ''''BirthDate'''': ''''\/Date(977309755000)\/''''\r\n}''", span="1984-1989"];
m6_976 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="ReadTests.cs", label="RequiredMembersClass c = JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="1991-1991"];
m6_977 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="ReadTests.cs", label="Assert.AreEqual(''I can't be null bro!'', c.FirstName)", span="1993-1993"];
m6_978 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="ReadTests.cs", label="Assert.AreEqual(null, c.MiddleName)", span="1994-1994"];
m6_979 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="ReadTests.cs", label="Assert.AreEqual(null, c.LastName)", span="1995-1995"];
m6_980 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", span="1982-1982"];
m6_3154 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", span="7129-7129"];
m6_3155 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="ReadTests.cs", label="IDictionary<DateTimeOffset, int> dic1 = new Dictionary<DateTimeOffset, int>\r\n        {\r\n          {new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero), 1},\r\n          {new DateTimeOffset(2013, 12, 12, 12, 12, 12, TimeSpan.Zero), 2}\r\n        }", span="7131-7135"];
m6_3156 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(dic1, Formatting.Indented)", span="7137-7137"];
m6_3157 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="ReadTests.cs", label="Assert.AreEqual(@''{\r\n  ''''2000-12-12T12:12:12+00:00'''': 1,\r\n  ''''2013-12-12T12:12:12+00:00'''': 2\r\n}'', json)", span="7139-7142"];
m6_3158 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="ReadTests.cs", label="IDictionary<DateTimeOffset, int> dic2 = JsonConvert.DeserializeObject<IDictionary<DateTimeOffset, int>>(json)", span="7144-7144"];
m6_3159 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="ReadTests.cs", label="Assert.AreEqual(2, dic2.Count)", span="7146-7146"];
m6_3160 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="ReadTests.cs", label="Assert.AreEqual(1, dic2[new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero)])", span="7147-7147"];
m6_3161 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="ReadTests.cs", label="Assert.AreEqual(2, dic2[new DateTimeOffset(2013, 12, 12, 12, 12, 12, TimeSpan.Zero)])", span="7148-7148"];
m6_3162 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", span="7129-7129"];
m6_3066 [cluster="Unk.WriteValue", file="ReadTests.cs", label="Entry Unk.WriteValue", span=""];
m6_3308 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", span="7521-7521"];
m6_3309 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", file="ReadTests.cs", label="string json =\r\n        JsonConvert.SerializeObject(new KeyValuePair<int, string>(123, ''test value''), Formatting.Indented, new JsonSerializerSettings\r\n          {\r\n            ContractResolver = new CamelCasePropertyNamesContractResolver()\r\n          })", span="7523-7527"];
m6_3310 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", file="ReadTests.cs", label="Assert.AreEqual(@''{\r\n  ''''key'''': 123,\r\n  ''''value'''': ''''test value''''\r\n}'', json)", span="7529-7532"];
m6_3311 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", span="7521-7521"];
m6_1946 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="4382-4382"];
m6_1947 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReadTests.cs", label="throw new NotImplementedException();", span="4384-4384"];
m6_1948 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="4382-4382"];
m6_1482 [cluster="Newtonsoft.Json.Tests.TestObjects.Bar.Bar()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Bar.Bar()", span="27-27"];
m6_3288 [cluster="System.Uri.Uri(string, System.UriKind)", file="ReadTests.cs", label="Entry System.Uri.Uri(string, System.UriKind)", span="0-0"];
m6_1963 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListTestClass.GenericListTestClass()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListTestClass.GenericListTestClass()", span="4413-4413"];
m6_1964 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListTestClass.GenericListTestClass()", file="ReadTests.cs", label="GenericList = new List<string>()", span="4415-4415"];
m6_1965 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListTestClass.GenericListTestClass()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListTestClass.GenericListTestClass()", span="4413-4413"];
m6_1359 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", span="2923-2923"];
m6_1360 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", file="ReadTests.cs", label="string json = @''[]''", span="2925-2925"];
m6_1361 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", file="ReadTests.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'Newtonsoft.Json.Tests.Linq.DynamicDictionary' because the type requires a JSON object (e.g. {''''name'''':''''value''''}) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON object (e.g. {''''name'''':''''value''''}) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<DynamicDictionary>(json);\r\n        })", span="2927-2934"];
m6_1362 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", span="2923-2923"];
m6_4004 [cluster="Newtonsoft.Json.Tests.Serialization.MetroPropertyNameResolver.ResolvePropertyName(string)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.MetroPropertyNameResolver.ResolvePropertyName(string)", span="9660-9660"];
m6_4005 [cluster="Newtonsoft.Json.Tests.Serialization.MetroPropertyNameResolver.ResolvePropertyName(string)", file="ReadTests.cs", label="return '':::'' + propertyName.ToUpper(CultureInfo.InvariantCulture) + '':::'';", span="9663-9663"];
m6_4006 [cluster="Newtonsoft.Json.Tests.Serialization.MetroPropertyNameResolver.ResolvePropertyName(string)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.MetroPropertyNameResolver.ResolvePropertyName(string)", span="9660-9660"];
m6_823 [cluster="Newtonsoft.Json.Tests.TestObjects.ArgumentConverterPrecedenceClassConverter.ArgumentConverterPrecedenceClassConverter()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ArgumentConverterPrecedenceClassConverter.ArgumentConverterPrecedenceClassConverter()", span="27-27"];
m6_342 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualProperties.SubWithoutContractVirtualProperties()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualProperties.SubWithoutContractVirtualProperties()", span="715-715"];
m6_3449 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3DWithConverter()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3DWithConverter()", span="7933-7933"];
m6_3450 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3DWithConverter()", file="ReadTests.cs", label="Array3DWithConverter aa = new Array3DWithConverter()", span="7935-7935"];
m6_3451 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3DWithConverter()", file="ReadTests.cs", label="aa.Before = ''Before!''", span="7936-7936"];
m6_3452 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3DWithConverter()", file="ReadTests.cs", label="aa.After = ''After!''", span="7937-7937"];
m6_3453 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3DWithConverter()", file="ReadTests.cs", label="aa.Coordinates = new[, ,] { { { 1, 1, 1 }, { 1, 1, 2 } }, { { 1, 2, 1 }, { 1, 2, 2 } }, { { 2, 1, 1 }, { 2, 1, 2 } }, { { 2, 2, 1 }, { 2, 2, 2 } } }", span="7938-7938"];
m6_3454 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3DWithConverter()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(aa, Formatting.Indented)", span="7940-7940"];
m6_3455 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3DWithConverter()", file="ReadTests.cs", label="Assert.AreEqual(@''{\r\n  ''''Before'''': ''''Before!'''',\r\n  ''''Coordinates'''': [\r\n    [\r\n      [\r\n        1.0,\r\n        1.0,\r\n        1.0\r\n      ],\r\n      [\r\n        1.0,\r\n        1.0,\r\n        2.0\r\n      ]\r\n    ],\r\n    [\r\n      [\r\n        1.0,\r\n        2.0,\r\n        1.0\r\n      ],\r\n      [\r\n        1.0,\r\n        2.0,\r\n        2.0\r\n      ]\r\n    ],\r\n    [\r\n      [\r\n        2.0,\r\n        1.0,\r\n        1.0\r\n      ],\r\n      [\r\n        2.0,\r\n        1.0,\r\n        2.0\r\n      ]\r\n    ],\r\n    [\r\n      [\r\n        2.0,\r\n        2.0,\r\n        1.0\r\n      ],\r\n      [\r\n        2.0,\r\n        2.0,\r\n        2.0\r\n      ]\r\n    ]\r\n  ],\r\n  ''''After'''': ''''After!''''\r\n}'', json)", span="7942-7995"];
m6_3456 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3DWithConverter()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3DWithConverter()", span="7933-7933"];
m6_1639 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", file="ReadTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", span="0-0"];
m6_1687 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", span="3788-3788"];
m6_1688 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="ReadTests.cs", label="_stringValue = stringValue", span="3790-3790"];
m6_1689 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="ReadTests.cs", label="_intValue = intValue", span="3791-3791"];
m6_1690 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="ReadTests.cs", label="_dateTimeOffsetValue = dateTimeOffset", span="3792-3792"];
m6_1691 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="ReadTests.cs", label="_personValue = personValue", span="3793-3793"];
m6_1692 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="ReadTests.cs", label="_dateTimeValue = new DateTime(0, DateTimeKind.Utc)", span="3794-3794"];
m6_1693 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", span="3788-3788"];
m6_1630 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", span="3682-3682"];
m6_1631 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", file="ReadTests.cs", label="((IDictionary<string, T>)_innerDictionary).Add(item)", span="3684-3684"];
m6_1632 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", span="3682-3682"];
m6_388 [cluster="Newtonsoft.Json.Linq.JObject.Properties()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Linq.JObject.Properties()", span="195-195"];
m6_2106 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", span="4681-4681"];
m6_2107 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="ReadTests.cs", label="string json = @''{'value':9.9}''", span="4683-4683"];
m6_2108 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="ReadTests.cs", label="var dic = JsonConvert.DeserializeObject<IDictionary<string, object>>(\r\n        json, new JsonSerializerSettings\r\n                {\r\n                  FloatParseHandling = FloatParseHandling.Decimal\r\n                })", span="4685-4689"];
m6_2109 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="ReadTests.cs", label="Assert.AreEqual(typeof(decimal), dic[''value''].GetType())", span="4691-4691"];
m6_2110 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="ReadTests.cs", label="Assert.AreEqual(9.9m, dic[''value''])", span="4692-4692"];
m6_2111 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", span="4681-4681"];
m6_2314 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", span="5191-5191"];
m6_2315 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", file="ReadTests.cs", label="decimal d = JsonConvert.DeserializeObject<decimal>(''123456789876543.21'')", span="5193-5193"];
m6_2316 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", file="ReadTests.cs", label="Assert.AreEqual(123456789876543.21m, d)", span="5194-5194"];
m6_2317 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", span="5191-5191"];
m6_2541 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObject.ChildObject()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObject.ChildObject()", span="5802-5802"];
m6_2112 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", span="4696-4696"];
m6_2113 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="ReadTests.cs", label="ShouldSerializeTestClass c = new ShouldSerializeTestClass()", span="4698-4698"];
m6_2114 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="ReadTests.cs", label="c.Name = ''James''", span="4699-4699"];
m6_2115 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="ReadTests.cs", label="c.Age = 27", span="4700-4700"];
m6_2116 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="4702-4702"];
m6_2118 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="ReadTests.cs", label="c._shouldSerializeName = true", span="4708-4708"];
m6_2119 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="ReadTests.cs", label="json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="4709-4709"];
m6_2117 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="ReadTests.cs", label="Assert.AreEqual(@''{\r\n  ''''Age'''': 27\r\n}'', json)", span="4704-4706"];
m6_2120 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="ReadTests.cs", label="Assert.AreEqual(@''{\r\n  ''''Name'''': ''''James'''',\r\n  ''''Age'''': 27\r\n}'', json)", span="4711-4714"];
m6_2121 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="ReadTests.cs", label="ShouldSerializeTestClass deserialized = JsonConvert.DeserializeObject<ShouldSerializeTestClass>(json)", span="4716-4716"];
m6_2122 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="ReadTests.cs", label="Assert.AreEqual(''James'', deserialized.Name)", span="4717-4717"];
m6_2123 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="ReadTests.cs", label="Assert.AreEqual(27, deserialized.Age)", span="4718-4718"];
m6_2124 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", span="4696-4696"];
m6_3992 [cluster="string.ToUpper(System.Globalization.CultureInfo)", file="ReadTests.cs", label="Entry string.ToUpper(System.Globalization.CultureInfo)", span="0-0"];
m6_3333 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClassFailure<T>.GetEnumerator()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClassFailure<T>.GetEnumerator()", span="7581-7581"];
m6_3334 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClassFailure<T>.GetEnumerator()", file="ReadTests.cs", label="return _values.GetEnumerator();", span="7583-7583"];
m6_3335 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClassFailure<T>.GetEnumerator()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClassFailure<T>.GetEnumerator()", span="7581-7581"];
m6_1110 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="ReadTests.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="567-567"];
m6_229 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExtensionDataTest()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExtensionDataTest()", span="462-462"];
m6_230 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExtensionDataTest()", file="ReadTests.cs", label="string json = @''{\r\n  ''''Ints'''': [1,2,3],\r\n  ''''Ignored'''': [1,2,3],\r\n  ''''Readonly'''': ''''Readonly'''',\r\n  ''''Name'''': ''''Actually set!'''',\r\n  ''''CustomName'''': ''''Wrong name!'''',\r\n  ''''GetPrivate'''': true,\r\n  ''''GetOnly'''': true,\r\n  ''''NewValueSimple'''': true,\r\n  ''''NewValueComplex'''': [1,2,3]\r\n}''", span="464-474"];
m6_231 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExtensionDataTest()", file="ReadTests.cs", label="ExtensionDataTestClass c = JsonConvert.DeserializeObject<ExtensionDataTestClass>(json)", span="476-476"];
m6_232 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExtensionDataTest()", file="ReadTests.cs", label="Assert.AreEqual(''Actually set!'', c.Name)", span="478-478"];
m6_233 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExtensionDataTest()", file="ReadTests.cs", label="Assert.AreEqual(4, c.Ints.Count)", span="479-479"];
m6_234 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExtensionDataTest()", file="ReadTests.cs", label="Assert.AreEqual(''Readonly'', (string)c.ExtensionData[''Readonly''])", span="481-481"];
m6_235 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExtensionDataTest()", file="ReadTests.cs", label="Assert.AreEqual(''Wrong name!'', (string)c.ExtensionData[''CustomName''])", span="482-482"];
m6_236 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExtensionDataTest()", file="ReadTests.cs", label="Assert.AreEqual(true, (bool)c.ExtensionData[''GetPrivate''])", span="483-483"];
m6_237 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExtensionDataTest()", file="ReadTests.cs", label="Assert.AreEqual(true, (bool)c.ExtensionData[''GetOnly''])", span="484-484"];
m6_238 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExtensionDataTest()", file="ReadTests.cs", label="Assert.AreEqual(true, (bool)c.ExtensionData[''NewValueSimple''])", span="485-485"];
m6_239 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExtensionDataTest()", file="ReadTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JArray(1, 2, 3), c.ExtensionData[''NewValueComplex'']))", span="486-486"];
m6_240 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExtensionDataTest()", file="ReadTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JArray(1, 2, 3), c.ExtensionData[''Ignored'']))", span="487-487"];
m6_241 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExtensionDataTest()", file="ReadTests.cs", label="Assert.AreEqual(7, c.ExtensionData.Count)", span="489-489"];
m6_242 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExtensionDataTest()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExtensionDataTest()", span="462-462"];
m6_1882 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", span="4265-4265"];
m6_1883 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="ReadTests.cs", label="XNodeTestObject testObject = new XNodeTestObject()", span="4267-4267"];
m6_1884 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="ReadTests.cs", label="testObject.Document = XDocument.Parse(''<root>hehe, root</root>'')", span="4268-4268"];
m6_1885 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="ReadTests.cs", label="testObject.Element = XElement.Parse(@''<fifth xmlns:json=''''http://json.org'''' json:Awesome=''''true''''>element</fifth>'')", span="4269-4269"];
m6_1886 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(testObject, Formatting.Indented)", span="4271-4271"];
m6_1890 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="ReadTests.cs", label="Assert.AreEqual(testObject.Document.ToString(), newTestObject.Document.ToString())", span="4287-4287"];
m6_1891 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="ReadTests.cs", label="Assert.AreEqual(testObject.Element.ToString(), newTestObject.Element.ToString())", span="4288-4288"];
m6_1887 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="ReadTests.cs", label="string expected = @''{\r\n  ''''Document'''': {\r\n    ''''root'''': ''''hehe, root''''\r\n  },\r\n  ''''Element'''': {\r\n    ''''fifth'''': {\r\n      ''''@xmlns:json'''': ''''http://json.org'''',\r\n      ''''@json:Awesome'''': ''''true'''',\r\n      ''''#text'''': ''''element''''\r\n    }\r\n  }\r\n}''", span="4272-4283"];
m6_1888 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="ReadTests.cs", label="Assert.AreEqual(expected, json)", span="4284-4284"];
m6_1889 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="ReadTests.cs", label="XNodeTestObject newTestObject = JsonConvert.DeserializeObject<XNodeTestObject>(json)", span="4286-4286"];
m6_1892 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="ReadTests.cs", label="Assert.IsNull(newTestObject.Element.Parent)", span="4290-4290"];
m6_1893 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", span="4265-4265"];
m6_3572 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSemiEmpty3DArray()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSemiEmpty3DArray()", span="8224-8224"];
m6_3573 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSemiEmpty3DArray()", file="ReadTests.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[]],''''After'''':''''After!''''}''", span="8226-8226"];
m6_3574 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSemiEmpty3DArray()", file="ReadTests.cs", label="Array3D aa = JsonConvert.DeserializeObject<Array3D>(json)", span="8228-8228"];
m6_3581 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSemiEmpty3DArray()", file="ReadTests.cs", label="Assert.AreEqual(json, after)", span="8238-8238"];
m6_3575 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSemiEmpty3DArray()", file="ReadTests.cs", label="Assert.AreEqual(''Before!'', aa.Before)", span="8230-8230"];
m6_3576 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSemiEmpty3DArray()", file="ReadTests.cs", label="Assert.AreEqual(''After!'', aa.After)", span="8231-8231"];
m6_3577 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSemiEmpty3DArray()", file="ReadTests.cs", label="Assert.AreEqual(1, aa.Coordinates.GetLength(0))", span="8232-8232"];
m6_3578 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSemiEmpty3DArray()", file="ReadTests.cs", label="Assert.AreEqual(0, aa.Coordinates.GetLength(1))", span="8233-8233"];
m6_3579 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSemiEmpty3DArray()", file="ReadTests.cs", label="Assert.AreEqual(0, aa.Coordinates.GetLength(2))", span="8234-8234"];
m6_3580 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSemiEmpty3DArray()", file="ReadTests.cs", label="string after = JsonConvert.SerializeObject(aa)", span="8236-8236"];
m6_3582 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSemiEmpty3DArray()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSemiEmpty3DArray()", span="8224-8224"];
m6_468 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", span="1015-1015"];
m6_469 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="ReadTests.cs", label="string value = @''{''''Name'''':''''Orange'''', ''''Hash'''':{''''ExpiryDate'''':''''01/24/2010 12:00:00'''',''''UntypedArray'''':[''''01/24/2010 12:00:00'''']}}''", span="1017-1017"];
m6_470 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="ReadTests.cs", label="TypedSubHashtable p = JsonConvert.DeserializeObject(value, typeof(TypedSubHashtable)) as TypedSubHashtable", span="1019-1019"];
m6_471 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="ReadTests.cs", label="Assert.AreEqual(''01/24/2010 12:00:00'', p.Hash[''ExpiryDate''].ToString())", span="1021-1021"];
m6_472 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="ReadTests.cs", label="Assert.AreEqual(@''[\r\n  ''''01/24/2010 12:00:00''''\r\n]'', p.Hash[''UntypedArray''].ToString())", span="1022-1024"];
m6_473 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", span="1015-1015"];
m6_1636 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", span="3692-3692"];
m6_1637 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", file="ReadTests.cs", label="_innerDictionary.Clear()", span="3694-3694"];
m6_1638 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", span="3692-3692"];
m6_459 [cluster="Newtonsoft.Json.Tests.TestObjects.MethodExecutorObject.MethodExecutorObject()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.MethodExecutorObject.MethodExecutorObject()", span="27-27"];
m6_2494 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuper.MultiIndexSuper()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuper.MultiIndexSuper()", span="5636-5636"];
m6_2534 [cluster="DataContractSerializer.cstr", file="ReadTests.cs", label="Entry DataContractSerializer.cstr", span=""];
m6_3805 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePrivateListCtor()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePrivateListCtor()", span="8964-8964"];
m6_3806 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePrivateListCtor()", file="ReadTests.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''Unable to find a constructor to use for type Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+PrivateDefaultCtorList`1[System.Int32]. Path '', line 1, position 1.'',\r\n        () => JsonConvert.DeserializeObject<PrivateDefaultCtorList<int>>(''[1,2]'')\r\n        )", span="8966-8969"];
m6_3807 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePrivateListCtor()", file="ReadTests.cs", label="var list = JsonConvert.DeserializeObject<PrivateDefaultCtorList<int>>(''[1,2]'', new JsonSerializerSettings\r\n        {\r\n          ConstructorHandling = ConstructorHandling.AllowNonPublicDefaultConstructor\r\n        })", span="8971-8974"];
m6_3808 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePrivateListCtor()", file="ReadTests.cs", label="Assert.AreEqual(2, list.Count)", span="8976-8976"];
m6_3809 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePrivateListCtor()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePrivateListCtor()", span="8964-8964"];
m6_884 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", span="1820-1820"];
m6_885 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="ReadTests.cs", label="ClassAndMemberConverterClass c1 = new ClassAndMemberConverterClass()", span="1822-1822"];
m6_886 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="ReadTests.cs", label="c1.DefaultConverter = new ConverterPrecedenceClass(''DefaultConverterValue'')", span="1823-1823"];
m6_887 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="ReadTests.cs", label="c1.MemberConverter = new ConverterPrecedenceClass(''MemberConverterValue'')", span="1824-1824"];
m6_888 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(c1, new ArgumentConverterPrecedenceClassConverter())", span="1826-1826"];
m6_889 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="ReadTests.cs", label="Assert.AreEqual(@''{''''DefaultConverter'''':[''''Class'''',''''DefaultConverterValue''''],''''MemberConverter'''':[''''Member'''',''''MemberConverterValue'''']}'', json)", span="1827-1827"];
m6_890 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="ReadTests.cs", label="ClassAndMemberConverterClass c2 = JsonConvert.DeserializeObject<ClassAndMemberConverterClass>(json, new ArgumentConverterPrecedenceClassConverter())", span="1829-1829"];
m6_891 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="ReadTests.cs", label="Assert.AreEqual(''DefaultConverterValue'', c2.DefaultConverter.TestValue)", span="1831-1831"];
m6_892 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="ReadTests.cs", label="Assert.AreEqual(''MemberConverterValue'', c2.MemberConverter.TestValue)", span="1832-1832"];
m6_893 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", span="1820-1820"];
m6_1421 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", span="3047-3047"];
m6_1422 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", file="ReadTests.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        @''Error setting value to 'ReadTimeout' on 'System.IO.MemoryStream'.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:0}'', new JsonSerializerSettings\r\n          {\r\n            ContractResolver = new DefaultContractResolver\r\n            {\r\n#if !(SILVERLIGHT || NETFX_CORE || PORTABLE || PORTABLE40)\r\n              IgnoreSerializableAttribute = true\r\n#endif\r\n            }\r\n          });\r\n        })", span="3049-3062"];
m6_1423 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", span="3047-3047"];
m6_2357 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base()", span="5283-5283"];
m6_2358 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base()", span="5283-5283"];
m6_1824 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", span="4232-4232"];
m6_1871 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="ReadTests.cs", label="BB_field1 = g", span="4235-4235"];
m6_1872 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="ReadTests.cs", label="BB_field2 = g", span="4236-4236"];
m6_1873 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="ReadTests.cs", label="BB_property1 = g", span="4237-4237"];
m6_1874 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="ReadTests.cs", label="BB_property2 = g", span="4238-4238"];
m6_1875 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="ReadTests.cs", label="BB_property3 = g", span="4239-4239"];
m6_1876 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="ReadTests.cs", label="BB_property4 = g", span="4240-4240"];
m6_1877 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="ReadTests.cs", label="BB_property5 = g", span="4241-4241"];
m6_1878 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="ReadTests.cs", label="BB_property6 = g", span="4242-4242"];
m6_1879 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="ReadTests.cs", label="BB_property7 = g", span="4243-4243"];
m6_1880 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="ReadTests.cs", label="BB_property8 = g", span="4244-4244"];
m6_1881 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", span="4232-4232"];
m6_3074 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", span="6991-6991"];
m6_3075 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="ReadTests.cs", label="MemoryStream ms = new MemoryStream()", span="6993-6993"];
m6_3076 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="ReadTests.cs", label="BsonWriter writer = new BsonWriter(ms)", span="6994-6994"];
m6_3080 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="ReadTests.cs", label="byte[] data = ms.ToArray()", span="6999-6999"];
m6_3077 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="ReadTests.cs", label="writer.WriteStartArray()", span="6995-6995"];
m6_3078 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="ReadTests.cs", label="writer.WriteValue(''2000-01-02T03:04:05+06:00'')", span="6996-6996"];
m6_3079 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="ReadTests.cs", label="writer.WriteEndArray()", span="6997-6997"];
m6_3081 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="ReadTests.cs", label="BsonReader reader = new BsonReader(new MemoryStream(data))\r\n        {\r\n          ReadRootValueAsArray = true\r\n        }", span="7000-7003"];
m6_3082 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="ReadTests.cs", label="JArray a = (JArray)JArray.ReadFrom(reader)", span="7005-7005"];
m6_3083 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="ReadTests.cs", label="JValue v = (JValue)a[0]", span="7006-7006"];
m6_3085 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="ReadTests.cs", label="Console.WriteLine(a.ToString())", span="7008-7008"];
m6_3084 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="ReadTests.cs", label="Console.WriteLine(v.Value.GetType())", span="7007-7007"];
m6_3086 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", span="6991-6991"];
m6_908 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", span="1855-1855"];
m6_909 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="ReadTests.cs", label="string json", span="1857-1857"];
m6_910 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="ReadTests.cs", label="json = JsonConvert.SerializeObject((int?)null)", span="1859-1859"];
m6_911 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="ReadTests.cs", label="Assert.AreEqual(''null'', json)", span="1860-1860"];
m6_912 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="ReadTests.cs", label="json = JsonConvert.SerializeObject((int?)1)", span="1862-1862"];
m6_913 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="ReadTests.cs", label="Assert.AreEqual(''1'', json)", span="1863-1863"];
m6_914 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", span="1855-1855"];
m6_1227 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", span="2604-2604"];
m6_1228 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="ReadTests.cs", label="Content content = new Content\r\n        {\r\n          Text = ''Blah, blah, blah'',\r\n          Children = new List<Content>\r\n            {\r\n              new Content {Text = ''First''},\r\n              new Content {Text = ''Second''}\r\n            }\r\n        }", span="2606-2614"];
m6_1229 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(content, Formatting.Indented)", span="2616-2616"];
m6_1230 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="ReadTests.cs", label="Assert.AreEqual(@''{\r\n  ''''Children'''': [\r\n    {\r\n      ''''Children'''': null,\r\n      ''''Text'''': ''''First''''\r\n    },\r\n    {\r\n      ''''Children'''': null,\r\n      ''''Text'''': ''''Second''''\r\n    }\r\n  ],\r\n  ''''Text'''': ''''Blah, blah, blah''''\r\n}'', json)", span="2618-2630"];
m6_1231 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", span="2604-2604"];
m6_2227 [cluster="System.Collections.Generic.HashSet<T>.HashSet()", file="ReadTests.cs", label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0"];
m6_1566 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ThisGenericTest()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ThisGenericTest()", span="3385-3385"];
m6_2171 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", span="4866-4866"];
m6_2172 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="ReadTests.cs", label="FamilyDetails joe = new FamilyDetails()", span="4868-4868"];
m6_2173 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="ReadTests.cs", label="joe.Name = ''Joe Family Details''", span="4869-4869"];
m6_2174 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="ReadTests.cs", label="joe.NumberOfChildren = 4", span="4870-4870"];
m6_2175 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="ReadTests.cs", label="joe.NumberOfChildrenSpecified = true", span="4871-4871"];
m6_2180 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(new[] { joe, martha }, Formatting.Indented)", span="4878-4878"];
m6_2176 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="ReadTests.cs", label="FamilyDetails martha = new FamilyDetails()", span="4873-4873"];
m6_2177 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="ReadTests.cs", label="martha.Name = ''Martha Family Details''", span="4874-4874"];
m6_2178 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="ReadTests.cs", label="martha.NumberOfChildren = 3", span="4875-4875"];
m6_2179 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="ReadTests.cs", label="martha.NumberOfChildrenSpecified = false", span="4876-4876"];
m6_2181 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="ReadTests.cs", label="Console.WriteLine(json)", span="4888-4888"];
m6_2182 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="ReadTests.cs", label="string mikeString = ''{\''Name\'': \''Mike Person\''}''", span="4890-4890"];
m6_2183 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="ReadTests.cs", label="FamilyDetails mike = JsonConvert.DeserializeObject<FamilyDetails>(mikeString)", span="4891-4891"];
m6_2184 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="ReadTests.cs", label="Console.WriteLine(''mikeString specifies number of children: {0}'', mike.NumberOfChildrenSpecified)", span="4893-4893"];
m6_2185 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="ReadTests.cs", label="string mikeFullDisclosureString = ''{\''Name\'': \''Mike Person\'', \''NumberOfChildren\'': \''0\''}''", span="4895-4895"];
m6_2186 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="ReadTests.cs", label="mike = JsonConvert.DeserializeObject<FamilyDetails>(mikeFullDisclosureString)", span="4896-4896"];
m6_2187 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="ReadTests.cs", label="Console.WriteLine(''mikeString specifies number of children: {0}'', mike.NumberOfChildrenSpecified)", span="4898-4898"];
m6_2188 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", span="4866-4866"];
m6_2340 [cluster="string.Format(string, object, object, object)", file="ReadTests.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m6_2506 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithoutParameterisedConstructor.DTOWithoutParameterisedConstructor()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithoutParameterisedConstructor.DTOWithoutParameterisedConstructor()", span="5698-5698"];
m6_2507 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithoutParameterisedConstructor.DTOWithoutParameterisedConstructor()", file="ReadTests.cs", label="B = 2", span="5700-5700"];
m6_2508 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithoutParameterisedConstructor.DTOWithoutParameterisedConstructor()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithoutParameterisedConstructor.DTOWithoutParameterisedConstructor()", span="5698-5698"];
m6_783 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMemberGenericList()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMemberGenericList()", span="1636-1636"];
m6_784 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMemberGenericList()", file="ReadTests.cs", label="Name name = new Name(''The Idiot in Next To Me'')", span="1638-1638"];
m6_785 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMemberGenericList()", file="ReadTests.cs", label="PhoneNumber p1 = new PhoneNumber(''555-1212'')", span="1640-1640"];
m6_787 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMemberGenericList()", file="ReadTests.cs", label="name.pNumbers.Add(p1)", span="1643-1643"];
m6_788 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMemberGenericList()", file="ReadTests.cs", label="name.pNumbers.Add(p2)", span="1644-1644"];
m6_789 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMemberGenericList()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(name, Formatting.Indented)", span="1646-1646"];
m6_786 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMemberGenericList()", file="ReadTests.cs", label="PhoneNumber p2 = new PhoneNumber(''444-1212'')", span="1641-1641"];
m6_790 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMemberGenericList()", file="ReadTests.cs", label="Assert.AreEqual(@''{\r\n  ''''personsName'''': ''''The Idiot in Next To Me'''',\r\n  ''''pNumbers'''': [\r\n    {\r\n      ''''phoneNumber'''': ''''555-1212''''\r\n    },\r\n    {\r\n      ''''phoneNumber'''': ''''444-1212''''\r\n    }\r\n  ]\r\n}'', json)", span="1648-1658"];
m6_791 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMemberGenericList()", file="ReadTests.cs", label="Name newName = JsonConvert.DeserializeObject<Name>(json)", span="1660-1660"];
m6_792 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMemberGenericList()", file="ReadTests.cs", label="Assert.AreEqual(''The Idiot in Next To Me'', newName.personsName)", span="1662-1662"];
m6_793 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMemberGenericList()", file="ReadTests.cs", label="Assert.AreEqual(2, newName.pNumbers.Count)", span="1665-1665"];
m6_794 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMemberGenericList()", file="ReadTests.cs", label="Assert.AreEqual(''555-1212'', newName.pNumbers[0].phoneNumber)", span="1666-1666"];
m6_795 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMemberGenericList()", file="ReadTests.cs", label="Assert.AreEqual(''444-1212'', newName.pNumbers[1].phoneNumber)", span="1667-1667"];
m6_796 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMemberGenericList()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMemberGenericList()", span="1636-1636"];
m6_1722 [cluster="System.Runtime.Serialization.SerializationInfo.GetInt16(string)", file="ReadTests.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetInt16(string)", span="0-0"];
m6_4102 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.Parse(string)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Ratio.Parse(string)", span="9969-9969"];
m6_4103 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.Parse(string)", file="ReadTests.cs", label="return Parse(input, CultureInfo.InvariantCulture);", span="9971-9971"];
m6_4104 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.Parse(string)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.Ratio.Parse(string)", span="9969-9969"];
m6_1763 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", span="3926-3926"];
m6_1764 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="ReadTests.cs", label="Person person = new Person()", span="3928-3928"];
m6_1765 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="ReadTests.cs", label="person.BirthDate = new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc)", span="3929-3929"];
m6_1766 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="ReadTests.cs", label="person.LastModified = person.BirthDate", span="3930-3930"];
m6_1767 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="ReadTests.cs", label="person.Department = ''Department!''", span="3931-3931"];
m6_1768 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="ReadTests.cs", label="person.Name = ''Name!''", span="3932-3932"];
m6_1772 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="ReadTests.cs", label="ISerializableTestObject o = new ISerializableTestObject(''String!'', int.MinValue, dateTimeOffset, person)", span="3942-3942"];
m6_1769 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="ReadTests.cs", label="DateTimeOffset dateTimeOffset = new DateTimeOffset(2000, 12, 20, 22, 59, 59, TimeSpan.FromHours(2))", span="3934-3934"];
m6_1770 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="ReadTests.cs", label="string dateTimeOffsetText", span="3935-3935"];
m6_1778 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="ReadTests.cs", label="Assert.AreEqual(dateTimeOffset, o2._dateTimeOffsetValue)", span="3973-3973"];
m6_1771 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="ReadTests.cs", label="dateTimeOffsetText = @''2000-12-20T22:59:59+02:00''", span="3937-3937"];
m6_1774 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="ReadTests.cs", label="Assert.AreEqual(@''{\r\n  ''''stringValue'''': ''''String!'''',\r\n  ''''intValue'''': -2147483648,\r\n  ''''dateTimeOffsetValue'''': '''''' + dateTimeOffsetText + @'''''',\r\n  ''''personValue'''': {\r\n    ''''Name'''': ''''Name!'''',\r\n    ''''BirthDate'''': ''''2000-01-01T01:01:01Z'''',\r\n    ''''LastModified'''': ''''2000-01-01T01:01:01Z''''\r\n  },\r\n  ''''nullPersonValue'''': null,\r\n  ''''nullableInt'''': null,\r\n  ''''booleanValue'''': false,\r\n  ''''byteValue'''': 0,\r\n  ''''charValue'''': ''''\u0000'''',\r\n  ''''dateTimeValue'''': ''''0001-01-01T00:00:00Z'''',\r\n  ''''decimalValue'''': 0.0,\r\n  ''''shortValue'''': 0,\r\n  ''''longValue'''': 0,\r\n  ''''sbyteValue'''': 0,\r\n  ''''floatValue'''': 0.0,\r\n  ''''ushortValue'''': 0,\r\n  ''''uintValue'''': 0,\r\n  ''''ulongValue'''': 0\r\n}'', json)", span="3945-3968"];
m6_1773 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(o, Formatting.Indented)", span="3944-3944"];
m6_1775 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="ReadTests.cs", label="ISerializableTestObject o2 = JsonConvert.DeserializeObject<ISerializableTestObject>(json)", span="3970-3970"];
m6_1776 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="ReadTests.cs", label="Assert.AreEqual(''String!'', o2._stringValue)", span="3971-3971"];
m6_1777 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="ReadTests.cs", label="Assert.AreEqual(int.MinValue, o2._intValue)", span="3972-3972"];
m6_1779 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="ReadTests.cs", label="Assert.AreEqual(''Name!'', o2._personValue.Name)", span="3974-3974"];
m6_1780 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="ReadTests.cs", label="Assert.AreEqual(null, o2._nullPersonValue)", span="3975-3975"];
m6_1781 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="ReadTests.cs", label="Assert.AreEqual(null, o2._nullableInt)", span="3976-3976"];
m6_1782 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", span="3926-3926"];
m6_2877 [cluster="Newtonsoft.Json.Tests.Serialization.WidgetId.WidgetId()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.WidgetId.WidgetId()", span="9514-9514"];
m6_3955 [cluster="Newtonsoft.Json.Tests.Serialization.SelectListItem.SelectListItem()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SelectListItem.SelectListItem()", span="9325-9325"];
m6_2839 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", span="6488-6488"];
m6_2840 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="ReadTests.cs", label="Bb b = new Bb()", span="6490-6490"];
m6_2841 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="ReadTests.cs", label="b.no = true", span="6491-6491"];
m6_2842 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="ReadTests.cs", label="Aa a = b", span="6492-6492"];
m6_2844 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(b)", span="6495-6495"];
m6_2843 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="ReadTests.cs", label="a.no = int.MaxValue", span="6493-6493"];
m6_2845 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="ReadTests.cs", label="Assert.AreEqual(@''{''''no'''':true}'', json)", span="6497-6497"];
m6_2846 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="ReadTests.cs", label="Bb b2 = JsonConvert.DeserializeObject<Bb>(json)", span="6499-6499"];
m6_2847 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="ReadTests.cs", label="Assert.AreEqual(true, b2.no)", span="6501-6501"];
m6_2848 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", span="6488-6488"];
m6_965 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", span="1956-1956"];
m6_966 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="ReadTests.cs", label="RequiredMembersClass c = new RequiredMembersClass()\r\n        {\r\n          BirthDate = new DateTime(2000, 12, 20, 10, 55, 55, DateTimeKind.Utc),\r\n          FirstName = ''Bob'',\r\n          LastName = ''Smith'',\r\n          MiddleName = ''Cosmo''\r\n        }", span="1958-1964"];
m6_967 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="1966-1966"];
m6_968 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="ReadTests.cs", label="Assert.AreEqual(@''{\r\n  ''''FirstName'''': ''''Bob'''',\r\n  ''''MiddleName'''': ''''Cosmo'''',\r\n  ''''LastName'''': ''''Smith'''',\r\n  ''''BirthDate'''': ''''2000-12-20T10:55:55Z''''\r\n}'', json)", span="1968-1973"];
m6_969 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="ReadTests.cs", label="RequiredMembersClass c2 = JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="1975-1975"];
m6_970 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="ReadTests.cs", label="Assert.AreEqual(''Bob'', c2.FirstName)", span="1977-1977"];
m6_971 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="ReadTests.cs", label="Assert.AreEqual(new DateTime(2000, 12, 20, 10, 55, 55, DateTimeKind.Utc), c2.BirthDate)", span="1978-1978"];
m6_972 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", span="1956-1956"];
m6_383 [cluster="Unk.WriteObject", file="ReadTests.cs", label="Entry Unk.WriteObject", span=""];
m6_2555 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", span="5880-5880"];
m6_2556 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", file="ReadTests.cs", label="Title = title", span="5882-5882"];
m6_2557 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", file="ReadTests.cs", label="Categories = new List<string>()", span="5883-5883"];
m6_2558 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", span="5880-5880"];
m6_2943 [cluster="Newtonsoft.Json.Tests.Serialization.Widget1.Widget1()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Widget1.Widget1()", span="9447-9447"];
m6_907 [cluster="Newtonsoft.Json.Tests.TestObjects.GenericImpl.GenericImpl()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.GenericImpl.GenericImpl()", span="27-27"];
m6_2409 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DecimalTest.DecimalTest(decimal)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DecimalTest.DecimalTest(decimal)", span="5429-5429"];
m6_2410 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DecimalTest.DecimalTest(decimal)", file="ReadTests.cs", label="Value = val", span="5431-5431"];
m6_2411 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DecimalTest.DecimalTest(decimal)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DecimalTest.DecimalTest(decimal)", span="5429-5429"];
m6_2722 [cluster="Newtonsoft.Json.JsonTextWriter.Flush()", file="ReadTests.cs", label="Entry Newtonsoft.Json.JsonTextWriter.Flush()", span="133-133"];
m6_3088 [cluster="Newtonsoft.Json.Bson.BsonWriter.WriteStartArray()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Bson.BsonWriter.WriteStartArray()", span="143-143"];
m6_3832 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IdReferenceResolver.ResolveReference(object, string)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IdReferenceResolver.ResolveReference(object, string)", span="9018-9018"];
m6_3833 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IdReferenceResolver.ResolveReference(object, string)", file="ReadTests.cs", label="Guid id = new Guid(reference)", span="9020-9020"];
m6_3834 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IdReferenceResolver.ResolveReference(object, string)", file="ReadTests.cs", label="PersonReference p", span="9022-9022"];
m6_3835 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IdReferenceResolver.ResolveReference(object, string)", file="ReadTests.cs", label="_people.TryGetValue(id, out p)", span="9023-9023"];
m6_3836 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IdReferenceResolver.ResolveReference(object, string)", file="ReadTests.cs", label="return p;", span="9025-9025"];
m6_3837 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IdReferenceResolver.ResolveReference(object, string)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IdReferenceResolver.ResolveReference(object, string)", span="9018-9018"];
m6_2004 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="4506-4506"];
m6_2005 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ReadTests.cs", label="writer.WriteValue(value)", span="4508-4508"];
m6_2006 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="4506-4506"];
m6_1593 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", span="3547-3547"];
m6_1594 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="ReadTests.cs", label="B value = new B()", span="3549-3549"];
m6_1595 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(value, Formatting.Indented)", span="3550-3550"];
m6_1596 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="ReadTests.cs", label="Assert.AreEqual(@''{\r\n  ''''B2'''': null,\r\n  ''''A1'''': null,\r\n  ''''B3'''': null,\r\n  ''''A2'''': null\r\n}'', json)", span="3552-3557"];
m6_1597 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", span="3547-3547"];
m6_1119 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", span="2323-2323"];
m6_1120 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="ReadTests.cs", label="string classRef = typeof(JsonPropertyWithHandlingValues).FullName", span="2325-2325"];
m6_1121 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="ReadTests.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''Self referencing loop detected for property 'ReferenceLoopHandlingErrorProperty' with type ''' + classRef + '''. Path ''.'',\r\n        () =>\r\n        {\r\n          JsonPropertyWithHandlingValues o = new JsonPropertyWithHandlingValues();\r\n          o.ReferenceLoopHandlingErrorProperty = o;\r\n\r\n          JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings { ReferenceLoopHandling = ReferenceLoopHandling.Ignore });\r\n        })", span="2327-2335"];
m6_1122 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", span="2323-2323"];
m6_2471 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexItem.ComplexItem()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexItem.ComplexItem()", span="5566-5566"];
m6_3693 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewEmployee.ShouldSerializeName()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewEmployee.ShouldSerializeName()", span="8683-8683"];
m6_3694 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewEmployee.ShouldSerializeName()", file="ReadTests.cs", label="return false;", span="8685-8685"];
m6_3695 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewEmployee.ShouldSerializeName()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewEmployee.ShouldSerializeName()", span="8683-8683"];
m6_2665 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIDictionary()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIDictionary()", span="6180-6180"];
m6_2666 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIDictionary()", file="ReadTests.cs", label="IDictionary dictionary = JsonConvert.DeserializeObject<IDictionary>(''{'name':'value!'}'')", span="6182-6182"];
m6_2667 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIDictionary()", file="ReadTests.cs", label="Assert.AreEqual(1, dictionary.Count)", span="6183-6183"];
m6_2668 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIDictionary()", file="ReadTests.cs", label="Assert.AreEqual(''value!'', dictionary[''name''])", span="6184-6184"];
m6_2669 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIDictionary()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIDictionary()", span="6180-6180"];
m6_4001 [cluster="Newtonsoft.Json.Tests.Serialization.MetroStringConverter.CanConvert(System.Type)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.MetroStringConverter.CanConvert(System.Type)", span="9652-9652"];
m6_4002 [cluster="Newtonsoft.Json.Tests.Serialization.MetroStringConverter.CanConvert(System.Type)", file="ReadTests.cs", label="return objectType == typeof(string);", span="9654-9654"];
m6_4003 [cluster="Newtonsoft.Json.Tests.Serialization.MetroStringConverter.CanConvert(System.Type)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.MetroStringConverter.CanConvert(System.Type)", span="9652-9652"];
m6_981 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", span="1999-1999"];
m6_982 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="ReadTests.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''Required property 'FirstName' expects a value but got null. Path '', line 6, position 2.'',\r\n        () =>\r\n        {\r\n          string json = @''{\r\n  ''''FirstName'''': null,\r\n  ''''MiddleName'''': null,\r\n  ''''LastName'''': null,\r\n  ''''BirthDate'''': ''''\/Date(977309755000)\/''''\r\n}'';\r\n\r\n          JsonConvert.DeserializeObject<RequiredMembersClass>(json);\r\n        })", span="2001-2013"];
m6_983 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", span="1999-1999"];
m6_3976 [cluster="Newtonsoft.Json.Tests.Serialization.TestObject.TestObject()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TestObject.TestObject()", span="9527-9527"];
m6_3977 [cluster="Newtonsoft.Json.Tests.Serialization.TestObject.TestObject()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TestObject.TestObject()", span="9527-9527"];
m6_1920 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.PosConverter()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.PosConverter()", span="4347-4347"];
m6_3616 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", span="8473-8473"];
m6_3617 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="ReadTests.cs", label="IList<object> dates = new List<object>\r\n        {\r\n          new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc),\r\n          new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1))\r\n        }", span="8475-8479"];
m6_3618 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(dates, Formatting.Indented, new JsonSerializerSettings\r\n        {\r\n          DateFormatString = ''yyyy tt'',\r\n          Culture = new CultureInfo(''en-NZ'')\r\n        })", span="8481-8485"];
m6_3619 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="ReadTests.cs", label="Assert.AreEqual(@''[\r\n  ''''2000 p.m.'''',\r\n  ''''2000 p.m.''''\r\n]'', json)", span="8487-8490"];
m6_3620 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", span="8473-8473"];
m6_1945 [cluster="string.Format(System.IFormatProvider, string, object, object)", file="ReadTests.cs", label="Entry string.Format(System.IFormatProvider, string, object, object)", span="0-0"];
m6_1633 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", span="3687-3687"];
m6_1634 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", file="ReadTests.cs", label="_innerDictionary.Add(key, value)", span="3689-3689"];
m6_1635 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", span="3687-3687"];
m6_4019 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTestClass.ShouldSerializeAge()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ShouldSerializeTestClass.ShouldSerializeAge()", span="9744-9744"];
m6_4020 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTestClass.ShouldSerializeAge()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ShouldSerializeTestClass.ShouldSerializeAge()", span="9744-9744"];
m6_3920 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="9245-9245"];
m6_3921 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReadTests.cs", label="var converter = GetConverter(objectType)", span="9247-9247"];
m6_3922 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReadTests.cs", label="return converter.ConvertFromInvariantString(reader.Value.ToString());", span="9248-9248"];
m6_3923 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="9245-9245"];
m6_2802 [cluster="System.IO.StreamWriter.StreamWriter(System.IO.Stream)", file="ReadTests.cs", label="Entry System.IO.StreamWriter.StreamWriter(System.IO.Stream)", span="0-0"];
m6_1673 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="ReadTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m6_1468 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", span="3159-3159"];
m6_1469 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="ReadTests.cs", label="Foo f = new Foo()", span="3161-3161"];
m6_1470 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="ReadTests.cs", label="f.Bars.Add(new Bar { Id = 0 })", span="3162-3162"];
m6_1471 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="ReadTests.cs", label="f.Bars.Add(new Bar { Id = 1 })", span="3163-3163"];
m6_1472 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="ReadTests.cs", label="f.Bars.Add(new Bar { Id = 2 })", span="3164-3164"];
m6_1473 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(f, Formatting.Indented)", span="3166-3166"];
m6_1474 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="ReadTests.cs", label="Assert.AreEqual(@''{\r\n  ''''Bars'''': [\r\n    0,\r\n    1,\r\n    2\r\n  ]\r\n}'', json)", span="3167-3173"];
m6_1475 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="ReadTests.cs", label="Foo newFoo = JsonConvert.DeserializeObject<Foo>(json)", span="3175-3175"];
m6_1476 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="ReadTests.cs", label="Assert.AreEqual(3, newFoo.Bars.Count)", span="3176-3176"];
m6_1477 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="ReadTests.cs", label="Assert.AreEqual(0, newFoo.Bars[0].Id)", span="3177-3177"];
m6_1478 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="ReadTests.cs", label="Assert.AreEqual(1, newFoo.Bars[1].Id)", span="3178-3178"];
m6_1479 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="ReadTests.cs", label="Assert.AreEqual(2, newFoo.Bars[2].Id)", span="3179-3179"];
m6_1480 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", span="3159-3159"];
m6_1729 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="3820-3820"];
m6_1730 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReadTests.cs", label="info.AddValue(''stringValue'', _stringValue)", span="3822-3822"];
m6_1731 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReadTests.cs", label="info.AddValue(''intValue'', _intValue)", span="3823-3823"];
m6_1732 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReadTests.cs", label="info.AddValue(''dateTimeOffsetValue'', _dateTimeOffsetValue)", span="3824-3824"];
m6_1733 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReadTests.cs", label="info.AddValue(''personValue'', _personValue)", span="3825-3825"];
m6_1734 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReadTests.cs", label="info.AddValue(''nullPersonValue'', _nullPersonValue)", span="3826-3826"];
m6_1735 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReadTests.cs", label="info.AddValue(''nullableInt'', null)", span="3827-3827"];
m6_1736 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReadTests.cs", label="info.AddValue(''booleanValue'', _booleanValue)", span="3829-3829"];
m6_1737 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReadTests.cs", label="info.AddValue(''byteValue'', _byteValue)", span="3830-3830"];
m6_1738 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReadTests.cs", label="info.AddValue(''charValue'', _charValue)", span="3831-3831"];
m6_1739 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReadTests.cs", label="info.AddValue(''dateTimeValue'', _dateTimeValue)", span="3832-3832"];
m6_1740 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReadTests.cs", label="info.AddValue(''decimalValue'', _decimalValue)", span="3833-3833"];
m6_1741 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReadTests.cs", label="info.AddValue(''shortValue'', _shortValue)", span="3834-3834"];
m6_1742 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReadTests.cs", label="info.AddValue(''longValue'', _longValue)", span="3835-3835"];
m6_1743 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReadTests.cs", label="info.AddValue(''sbyteValue'', _sbyteValue)", span="3836-3836"];
m6_1744 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReadTests.cs", label="info.AddValue(''floatValue'', _floatValue)", span="3837-3837"];
m6_1745 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReadTests.cs", label="info.AddValue(''ushortValue'', _ushortValue)", span="3838-3838"];
m6_1746 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReadTests.cs", label="info.AddValue(''uintValue'', _uintValue)", span="3839-3839"];
m6_1747 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReadTests.cs", label="info.AddValue(''ulongValue'', _ulongValue)", span="3840-3840"];
m6_1748 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="3820-3820"];
m6_532 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InheritedListSerialize()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InheritedListSerialize()", span="1199-1199"];
m6_533 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InheritedListSerialize()", file="ReadTests.cs", label="Article a1 = new Article(''a1'')", span="1201-1201"];
m6_534 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InheritedListSerialize()", file="ReadTests.cs", label="Article a2 = new Article(''a2'')", span="1202-1202"];
m6_536 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InheritedListSerialize()", file="ReadTests.cs", label="articles1.Add(a1)", span="1205-1205"];
m6_535 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InheritedListSerialize()", file="ReadTests.cs", label="ArticleCollection articles1 = new ArticleCollection()", span="1204-1204"];
m6_537 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InheritedListSerialize()", file="ReadTests.cs", label="articles1.Add(a2)", span="1206-1206"];
m6_538 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InheritedListSerialize()", file="ReadTests.cs", label="string jsonText = JsonConvert.SerializeObject(articles1)", span="1208-1208"];
m6_540 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InheritedListSerialize()", file="ReadTests.cs", label="Assert.AreEqual(articles1.Count, articles2.Count)", span="1212-1212"];
m6_541 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InheritedListSerialize()", file="ReadTests.cs", label="Assert.AreEqual(articles1[0].Name, articles2[0].Name)", span="1213-1213"];
m6_539 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InheritedListSerialize()", file="ReadTests.cs", label="ArticleCollection articles2 = JsonConvert.DeserializeObject<ArticleCollection>(jsonText)", span="1210-1210"];
m6_542 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InheritedListSerialize()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InheritedListSerialize()", span="1199-1199"];
m6_3336 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClassFailure<T>.System.Collections.IEnumerable.GetEnumerator()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClassFailure<T>.System.Collections.IEnumerable.GetEnumerator()", span="7586-7586"];
m6_3337 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClassFailure<T>.System.Collections.IEnumerable.GetEnumerator()", file="ReadTests.cs", label="return GetEnumerator();", span="7588-7588"];
m6_3338 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClassFailure<T>.System.Collections.IEnumerable.GetEnumerator()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClassFailure<T>.System.Collections.IEnumerable.GetEnumerator()", span="7586-7586"];
m6_2649 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", span="6150-6150"];
m6_2650 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", file="ReadTests.cs", label="Exceptions = new List<Exception>()", span="6152-6152"];
m6_2651 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", span="6150-6150"];
m6_950 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", span="1934-1934"];
m6_951 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="ReadTests.cs", label="string boolRef = typeof(bool).AssemblyQualifiedName", span="1936-1936"];
m6_952 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="ReadTests.cs", label="TypeClass typeClass = new TypeClass { TypeProperty = typeof(bool) }", span="1937-1937"];
m6_954 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="ReadTests.cs", label="Assert.AreEqual(@''{''''TypeProperty'''':'''''' + boolRef + @''''''}'', json)", span="1940-1940"];
m6_953 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(typeClass)", span="1939-1939"];
m6_955 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="ReadTests.cs", label="TypeClass typeClass2 = JsonConvert.DeserializeObject<TypeClass>(json)", span="1942-1942"];
m6_956 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="ReadTests.cs", label="Assert.AreEqual(typeof(bool), typeClass2.TypeProperty)", span="1943-1943"];
m6_957 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="ReadTests.cs", label="string jsonSerializerTestRef = typeof(JsonSerializerTest).AssemblyQualifiedName", span="1945-1945"];
m6_958 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="ReadTests.cs", label="typeClass = new TypeClass { TypeProperty = typeof(JsonSerializerTest) }", span="1946-1946"];
m6_960 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="ReadTests.cs", label="Assert.AreEqual(@''{''''TypeProperty'''':'''''' + jsonSerializerTestRef + @''''''}'', json)", span="1949-1949"];
m6_959 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="ReadTests.cs", label="json = JsonConvert.SerializeObject(typeClass)", span="1948-1948"];
m6_961 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="ReadTests.cs", label="typeClass2 = JsonConvert.DeserializeObject<TypeClass>(json)", span="1951-1951"];
m6_962 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="ReadTests.cs", label="Assert.AreEqual(typeof(JsonSerializerTest), typeClass2.TypeProperty)", span="1952-1952"];
m6_963 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", span="1934-1934"];
m6_3091 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream)", span="124-124"];
m6_3469 [cluster="System.Array.GetLength(int)", file="ReadTests.cs", label="Entry System.Array.GetLength(int)", span="0-0"];
m6_3791 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyCollection<T>.GetEnumerator()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyCollection<T>.GetEnumerator()", span="8924-8924"];
m6_3792 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyCollection<T>.GetEnumerator()", file="ReadTests.cs", label="return _values.GetEnumerator();", span="8926-8926"];
m6_3793 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyCollection<T>.GetEnumerator()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyCollection<T>.GetEnumerator()", span="8924-8924"];
m6_3626 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", span="8514-8514"];
m6_3627 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="ReadTests.cs", label="IList<object> dates = new List<object>\r\n        {\r\n          new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc),\r\n          new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1))\r\n        }", span="8516-8520"];
m6_3628 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="ReadTests.cs", label="StringWriter sw = new StringWriter()", span="8522-8522"];
m6_3631 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="ReadTests.cs", label="serializer.Serialize(jsonWriter, dates)", span="8531-8531"];
m6_3629 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="ReadTests.cs", label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="8523-8523"];
m6_3635 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="ReadTests.cs", label="string json = sw.ToString()", span="8537-8537"];
m6_3630 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="ReadTests.cs", label="JsonSerializer serializer = JsonSerializer.Create(new JsonSerializerSettings\r\n        {\r\n          DateFormatString = ''yyyy tt'',\r\n          Culture = new CultureInfo(''en-NZ''),\r\n          Formatting = Formatting.Indented\r\n        })", span="8525-8530"];
m6_3632 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="ReadTests.cs", label="Assert.IsNull(jsonWriter.DateFormatString)", span="8533-8533"];
m6_3633 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="ReadTests.cs", label="Assert.AreEqual(CultureInfo.InvariantCulture, jsonWriter.Culture)", span="8534-8534"];
m6_3634 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="ReadTests.cs", label="Assert.AreEqual(Formatting.None, jsonWriter.Formatting)", span="8535-8535"];
m6_3636 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="ReadTests.cs", label="Assert.AreEqual(@''[\r\n  ''''2000 p.m.'''',\r\n  ''''2000 p.m.''''\r\n]'', json)", span="8539-8542"];
m6_3637 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", span="8514-8514"];
m6_2849 [cluster="Newtonsoft.Json.Tests.Serialization.Bb.Bb()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Bb.Bb()", span="9556-9556"];
m6_1338 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", span="2875-2875"];
m6_1339 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", file="ReadTests.cs", label="string json = @''[]''", span="2877-2877"];
m6_1340 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", file="ReadTests.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'System.Collections.Generic.Dictionary`2[System.String,System.String]' because the type requires a JSON object (e.g. {''''name'''':''''value''''}) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON object (e.g. {''''name'''':''''value''''}) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<Dictionary<string, string>>(json);\r\n        })", span="2879-2886"];
m6_1341 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", span="2875-2875"];
m6_3 [cluster="System.Collections.Generic.List<T>.List()", file="ReadTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m6_76 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.DefaultSerializationBinder()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Serialization.DefaultSerializationBinder.DefaultSerializationBinder()", span="36-36"];
m6_2575 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", span="5923-5923"];
m6_2576 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="ReadTests.cs", label="NonDefaultConstructorWithReadOnlyDictionaryProperty c1 = new NonDefaultConstructorWithReadOnlyDictionaryProperty(''blah'')", span="5925-5925"];
m6_2577 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="ReadTests.cs", label="c1.Categories.Add(''one'', 1)", span="5926-5926"];
m6_2578 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="ReadTests.cs", label="c1.Categories.Add(''two'', 2)", span="5927-5927"];
m6_2579 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="5929-5929"];
m6_2582 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="ReadTests.cs", label="Assert.AreEqual(c1.Title, c2.Title)", span="5939-5939"];
m6_2583 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="ReadTests.cs", label="Assert.AreEqual(c1.Categories.Count, c2.Categories.Count)", span="5940-5940"];
m6_2580 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="ReadTests.cs", label="Assert.AreEqual(@''{\r\n  ''''Title'''': ''''blah'''',\r\n  ''''Categories'''': {\r\n    ''''one'''': 1,\r\n    ''''two'''': 2\r\n  }\r\n}'', json)", span="5930-5936"];
m6_2581 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="ReadTests.cs", label="NonDefaultConstructorWithReadOnlyDictionaryProperty c2 = JsonConvert.DeserializeObject<NonDefaultConstructorWithReadOnlyDictionaryProperty>(json)", span="5938-5938"];
m6_2584 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="ReadTests.cs", label="Assert.AreEqual(1, c2.Categories[''one''])", span="5941-5941"];
m6_2585 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="ReadTests.cs", label="Assert.AreEqual(2, c2.Categories[''two''])", span="5942-5942"];
m6_2586 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", span="5923-5923"];
m6_85 [cluster="Newtonsoft.Json.Serialization.MemoryTraceWriter.MemoryTraceWriter()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Serialization.MemoryTraceWriter.MemoryTraceWriter()", span="29-29"];
m6_598 [cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="ReadTests.cs", label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0"];
m6_3925 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterJsonConverter.CanConvert(System.Type)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterJsonConverter.CanConvert(System.Type)", span="9251-9251"];
m6_3926 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterJsonConverter.CanConvert(System.Type)", file="ReadTests.cs", label="return GetConverter(objectType) != null;", span="9253-9253"];
m6_3927 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterJsonConverter.CanConvert(System.Type)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterJsonConverter.CanConvert(System.Type)", span="9251-9251"];
m6_3838 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IdReferenceResolver.GetReference(object, object)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IdReferenceResolver.GetReference(object, object)", span="9028-9028"];
m6_3839 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IdReferenceResolver.GetReference(object, object)", file="ReadTests.cs", label="PersonReference p = (PersonReference)value", span="9030-9030"];
m6_3840 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IdReferenceResolver.GetReference(object, object)", file="ReadTests.cs", label="_people[p.Id] = p", span="9031-9031"];
m6_3841 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IdReferenceResolver.GetReference(object, object)", file="ReadTests.cs", label="return p.Id.ToString();", span="9033-9033"];
m6_3842 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IdReferenceResolver.GetReference(object, object)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IdReferenceResolver.GetReference(object, object)", span="9028-9028"];
m6_4037 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Ratio.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="9854-9854"];
m6_4038 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReadTests.cs", label="info.AddValue(''n'', _numerator)", span="9856-9856"];
m6_4039 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReadTests.cs", label="info.AddValue(''d'', _denominator)", span="9857-9857"];
m6_4040 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.Ratio.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="9854-9854"];
m6_2139 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Employee.Employee()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Employee.Employee()", span="4721-4721"];
m6_1825 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", span="4097-4097"];
m6_1826 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="ReadTests.cs", label="AA myA = JsonConvert.DeserializeObject<AA>(\r\n        @''{\r\n  ''''AA_field1'''': 2,\r\n  ''''AA_field2'''': 2,\r\n  ''''AA_property1'''': 2,\r\n  ''''AA_property2'''': 2,\r\n  ''''AA_property3'''': 2,\r\n  ''''AA_property4'''': 2,\r\n  ''''AA_property5'''': 2,\r\n  ''''AA_property6'''': 2\r\n}'')", span="4099-4109"];
m6_1827 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="ReadTests.cs", label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetField(''AA_field1'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="4111-4111"];
m6_1828 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="ReadTests.cs", label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetField(''AA_field2'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="4112-4112"];
m6_1829 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="ReadTests.cs", label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property1'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="4113-4113"];
m6_1830 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="ReadTests.cs", label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property2'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="4114-4114"];
m6_1831 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="ReadTests.cs", label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property3'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="4115-4115"];
m6_1832 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="ReadTests.cs", label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property4'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="4116-4116"];
m6_1833 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="ReadTests.cs", label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property5'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="4117-4117"];
m6_1834 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="ReadTests.cs", label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property6'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="4118-4118"];
m6_1835 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="ReadTests.cs", label="BB myB = JsonConvert.DeserializeObject<BB>(\r\n        @''{\r\n  ''''BB_field1'''': 4,\r\n  ''''BB_field2'''': 4,\r\n  ''''AA_field1'''': 3,\r\n  ''''AA_field2'''': 3,\r\n  ''''AA_property1'''': 2,\r\n  ''''AA_property2'''': 2,\r\n  ''''AA_property3'''': 2,\r\n  ''''AA_property4'''': 2,\r\n  ''''AA_property5'''': 2,\r\n  ''''AA_property6'''': 2,\r\n  ''''BB_property1'''': 3,\r\n  ''''BB_property2'''': 3,\r\n  ''''BB_property3'''': 3,\r\n  ''''BB_property4'''': 3,\r\n  ''''BB_property5'''': 3,\r\n  ''''BB_property6'''': 3,\r\n  ''''BB_property7'''': 3,\r\n  ''''BB_property8'''': 3\r\n}'')", span="4120-4140"];
m6_1836 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="ReadTests.cs", label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(AA).GetField(''AA_field1'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="4142-4142"];
m6_1837 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="ReadTests.cs", label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetField(''AA_field2'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="4143-4143"];
m6_1838 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="ReadTests.cs", label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property1'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="4144-4144"];
m6_1839 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="ReadTests.cs", label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property2'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="4145-4145"];
m6_1840 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="ReadTests.cs", label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property3'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="4146-4146"];
m6_1841 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="ReadTests.cs", label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property4'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="4147-4147"];
m6_1842 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="ReadTests.cs", label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property5'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="4148-4148"];
m6_1843 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="ReadTests.cs", label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property6'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="4149-4149"];
m6_1844 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="ReadTests.cs", label="Assert.AreEqual(4, myB.BB_field1)", span="4151-4151"];
m6_1845 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="ReadTests.cs", label="Assert.AreEqual(4, myB.BB_field2)", span="4152-4152"];
m6_1846 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="ReadTests.cs", label="Assert.AreEqual(3, myB.BB_property1)", span="4153-4153"];
m6_1847 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="ReadTests.cs", label="Assert.AreEqual(3, myB.BB_property2)", span="4154-4154"];
m6_1848 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="ReadTests.cs", label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property3'', BindingFlags.Instance | BindingFlags.Public), myB))", span="4155-4155"];
m6_1849 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="ReadTests.cs", label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property4'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="4156-4156"];
m6_1850 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="ReadTests.cs", label="Assert.AreEqual(0, myB.BB_property5)", span="4157-4157"];
m6_1851 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="ReadTests.cs", label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property6'', BindingFlags.Instance | BindingFlags.Public), myB))", span="4158-4158"];
m6_1852 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="ReadTests.cs", label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property7'', BindingFlags.Instance | BindingFlags.Public), myB))", span="4159-4159"];
m6_1853 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="ReadTests.cs", label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property8'', BindingFlags.Instance | BindingFlags.Public), myB))", span="4160-4160"];
m6_1854 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", span="4097-4097"];
m6_2352 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived()", span="5266-5266"];
m6_2353 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived()", span="5266-5266"];
m6_3975 [cluster="int.Parse(string)", file="ReadTests.cs", label="Entry int.Parse(string)", span="0-0"];
m6_227 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="ReadTests.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="511-511"];
m6_3782 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReadOnlyDictionary()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReadOnlyDictionary()", span="8893-8893"];
m6_3783 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReadOnlyDictionary()", file="ReadTests.cs", label="IDictionary<string, int> d = new Dictionary<string, int>\r\n                                     {\r\n                                       {''one'', 1},\r\n                                       {''two'', 2}\r\n                                     }", span="8895-8899"];
m6_3784 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReadOnlyDictionary()", file="ReadTests.cs", label="CustomReadOnlyDictionary<string, int> dic = new CustomReadOnlyDictionary<string, int>(d)", span="8901-8901"];
m6_3785 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReadOnlyDictionary()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(dic, Formatting.Indented)", span="8903-8903"];
m6_3786 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReadOnlyDictionary()", file="ReadTests.cs", label="Assert.AreEqual(@''{\r\n  ''''one'''': 1,\r\n  ''''two'''': 2\r\n}'', json)", span="8904-8907"];
m6_3787 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReadOnlyDictionary()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReadOnlyDictionary()", span="8893-8893"];
m6_1070 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", span="2223-2223"];
m6_1071 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="ReadTests.cs", label="string json = @''{\r\n  ''''firstName'''': ''''firstName'''',\r\n  ''''FirstName'''': ''''FirstName'''',\r\n  ''''LastName'''': ''''LastName'''',\r\n  ''''lastName'''': ''''lastName'''',\r\n}''", span="2225-2230"];
m6_1072 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="ReadTests.cs", label="PropertyCase o = JsonConvert.DeserializeObject<PropertyCase>(json)", span="2232-2232"];
m6_1073 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="ReadTests.cs", label="Assert.IsNotNull(o)", span="2233-2233"];
m6_1074 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="ReadTests.cs", label="Assert.AreEqual(''firstName'', o.firstName)", span="2235-2235"];
m6_1075 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="ReadTests.cs", label="Assert.AreEqual(''FirstName'', o.FirstName)", span="2236-2236"];
m6_1076 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="ReadTests.cs", label="Assert.AreEqual(''LastName'', o.LastName)", span="2237-2237"];
m6_1077 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="ReadTests.cs", label="Assert.AreEqual(''lastName'', o.lastName)", span="2238-2238"];
m6_1078 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", span="2223-2223"];
m6_875 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.JavaScriptDateTimeConverter()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.JavaScriptDateTimeConverter()", span="34-34"];
m6_697 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", span="1470-1470"];
m6_698 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="ReadTests.cs", label="string json = ''{bar:[1,2,3], foo:'hello'}''", span="1472-1472"];
m6_699 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="ReadTests.cs", label="JsonSerializer s = new JsonSerializer()", span="1474-1474"];
m6_701 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="ReadTests.cs", label="ClassWithArray wibble = (ClassWithArray)s.Deserialize(new StringReader(json), typeof(ClassWithArray))", span="1477-1477"];
m6_700 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="ReadTests.cs", label="s.ObjectCreationHandling = ObjectCreationHandling.Replace", span="1475-1475"];
m6_702 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="ReadTests.cs", label="Assert.AreEqual(''hello'', wibble.Foo)", span="1479-1479"];
m6_703 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="ReadTests.cs", label="Assert.AreEqual(1, wibble.Bar.Count)", span="1481-1481"];
m6_704 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", span="1470-1470"];
m6_1098 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", span="2282-2282"];
m6_1099 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="ReadTests.cs", label="JsonPropertyWithHandlingValues o = new JsonPropertyWithHandlingValues()", span="2284-2284"];
m6_1100 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="ReadTests.cs", label="o.DefaultValueHandlingIgnoreProperty = ''Default!''", span="2285-2285"];
m6_1101 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="ReadTests.cs", label="o.DefaultValueHandlingIncludeProperty = ''Default!''", span="2286-2286"];
m6_1102 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="ReadTests.cs", label="o.DefaultValueHandlingPopulateProperty = ''Default!''", span="2287-2287"];
m6_1103 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="ReadTests.cs", label="o.DefaultValueHandlingIgnoreAndPopulateProperty = ''Default!''", span="2288-2288"];
m6_1104 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(o, Formatting.Indented)", span="2290-2290"];
m6_1106 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="ReadTests.cs", label="json = JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings { NullValueHandling = NullValueHandling.Ignore })", span="2301-2301"];
m6_1105 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="ReadTests.cs", label="Assert.AreEqual(@''{\r\n  ''''DefaultValueHandlingIncludeProperty'''': ''''Default!'''',\r\n  ''''DefaultValueHandlingPopulateProperty'''': ''''Default!'''',\r\n  ''''NullValueHandlingIncludeProperty'''': null,\r\n  ''''ReferenceLoopHandlingErrorProperty'''': null,\r\n  ''''ReferenceLoopHandlingIgnoreProperty'''': null,\r\n  ''''ReferenceLoopHandlingSerializeProperty'''': null\r\n}'', json)", span="2292-2299"];
m6_1107 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="ReadTests.cs", label="Assert.AreEqual(@''{\r\n  ''''DefaultValueHandlingIncludeProperty'''': ''''Default!'''',\r\n  ''''DefaultValueHandlingPopulateProperty'''': ''''Default!'''',\r\n  ''''NullValueHandlingIncludeProperty'''': null\r\n}'', json)", span="2303-2307"];
m6_1108 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", span="2282-2282"];
m6_1757 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, long)", file="ReadTests.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, long)", span="0-0"];
m6_2007 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="ReadTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(object)", span="1212-1212"];
m6_824 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", file="ReadTests.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", span="522-522"];
m6_596 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="ReadTests.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m6_3275 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", span="7459-7459"];
m6_3276 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="ReadTests.cs", label="IList<Uri> uris = JsonConvert.DeserializeObject<IList<Uri>>(@''[''''http://localhost/path?query#hash'''']'')", span="7461-7461"];
m6_3277 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="ReadTests.cs", label="Assert.AreEqual(1, uris.Count)", span="7462-7462"];
m6_3278 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="ReadTests.cs", label="Assert.AreEqual(new Uri(''http://localhost/path?query#hash''), uris[0])", span="7463-7463"];
m6_3279 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="ReadTests.cs", label="Uri uri = JsonConvert.DeserializeObject<Uri>(@''''''http://localhost/path?query#hash'''''')", span="7465-7465"];
m6_3280 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="ReadTests.cs", label="Assert.IsNotNull(uri)", span="7466-7466"];
m6_3281 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="ReadTests.cs", label="Uri i1 = new Uri(''http://localhost/path?query#hash'', UriKind.RelativeOrAbsolute)", span="7468-7468"];
m6_3282 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="ReadTests.cs", label="Uri i2 = new Uri(''http://localhost/path?query#hash'')", span="7469-7469"];
m6_3283 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="ReadTests.cs", label="Assert.AreEqual(i1, i2)", span="7470-7470"];
m6_3284 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="ReadTests.cs", label="uri = JsonConvert.DeserializeObject<Uri>(@''''''/path?query#hash'''''')", span="7472-7472"];
m6_3285 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="ReadTests.cs", label="Assert.IsNotNull(uri)", span="7473-7473"];
m6_3286 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="ReadTests.cs", label="Assert.AreEqual(new Uri(''/path?query#hash'', UriKind.RelativeOrAbsolute), uri)", span="7474-7474"];
m6_3287 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", span="7459-7459"];
m6_624 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", span="1353-1353"];
m6_625 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="ReadTests.cs", label="var anonymous =\r\n        new\r\n          {\r\n            StringValue = ''I am a string'',\r\n            IntValue = int.MaxValue,\r\n            NestedAnonymous = new { NestedValue = byte.MaxValue },\r\n            NestedArray = new[] { 1, 2 },\r\n            Product = new Product() { Name = ''TestProduct'' }\r\n          }", span="1355-1363"];
m6_626 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(anonymous)", span="1365-1365"];
m6_628 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="ReadTests.cs", label="anonymous = JsonConvert.DeserializeAnonymousType(json, anonymous)", span="1368-1368"];
m6_627 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="ReadTests.cs", label="Assert.AreEqual(@''{''''StringValue'''':''''I am a string'''',''''IntValue'''':2147483647,''''NestedAnonymous'''':{''''NestedValue'''':255},''''NestedArray'''':[1,2],''''Product'''':{''''Name'''':''''TestProduct'''',''''ExpiryDate'''':''''2000-01-01T00:00:00Z'''',''''Price'''':0.0,''''Sizes'''':null}}'', json)", span="1366-1366"];
m6_629 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="ReadTests.cs", label="Assert.AreEqual(''I am a string'', anonymous.StringValue)", span="1369-1369"];
m6_630 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="ReadTests.cs", label="Assert.AreEqual(int.MaxValue, anonymous.IntValue)", span="1370-1370"];
m6_631 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="ReadTests.cs", label="Assert.AreEqual(255, anonymous.NestedAnonymous.NestedValue)", span="1371-1371"];
m6_632 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="ReadTests.cs", label="Assert.AreEqual(2, anonymous.NestedArray.Length)", span="1372-1372"];
m6_633 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="ReadTests.cs", label="Assert.AreEqual(1, anonymous.NestedArray[0])", span="1373-1373"];
m6_634 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="ReadTests.cs", label="Assert.AreEqual(2, anonymous.NestedArray[1])", span="1374-1374"];
m6_635 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="ReadTests.cs", label="Assert.AreEqual(''TestProduct'', anonymous.Product.Name)", span="1375-1375"];
m6_636 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", span="1353-1353"];
m6_2099 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", span="4670-4670"];
m6_2100 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="ReadTests.cs", label="string json = @''{''''First'''':''''First'''',''''Second'''':2,''''Ignored'''':{''''Name'''':''''James''''},''''AdditionalContent'''':{''''LOL'''':true}}''", span="4672-4672"];
m6_2101 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="ReadTests.cs", label="ConstructorCompexIgnoredProperty cc = JsonConvert.DeserializeObject<ConstructorCompexIgnoredProperty>(json)", span="4674-4674"];
m6_2102 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="ReadTests.cs", label="Assert.AreEqual(''First'', cc.First)", span="4675-4675"];
m6_2103 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="ReadTests.cs", label="Assert.AreEqual(2, cc.Second)", span="4676-4676"];
m6_2104 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="ReadTests.cs", label="Assert.AreEqual(null, cc.Ignored)", span="4677-4677"];
m6_2105 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", span="4670-4670"];
m6_2652 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", span="6158-6158"];
m6_2653 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="ReadTests.cs", label="ClassWithException classWithException = new ClassWithException()", span="6160-6160"];
m6_2654 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="ReadTests.cs", label="throw new Exception(''Test Exception'');", span="6163-6163"];
m6_2656 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="ReadTests.cs", label="classWithException.Exceptions.Add(ex)", span="6167-6167"];
m6_2657 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="ReadTests.cs", label="string sex = JsonConvert.SerializeObject(classWithException)", span="6169-6169"];
m6_2660 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="ReadTests.cs", label="sex = JsonConvert.SerializeObject(classWithException, Formatting.Indented)", span="6173-6173"];
m6_2655 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="ReadTests.cs", label=Exception, span="6165-6165"];
m6_2658 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="ReadTests.cs", label="ClassWithException dex = JsonConvert.DeserializeObject<ClassWithException>(sex)", span="6170-6170"];
m6_2659 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="ReadTests.cs", label="Assert.AreEqual(dex.Exceptions[0].ToString(), dex.Exceptions[0].ToString())", span="6171-6171"];
m6_2661 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="ReadTests.cs", label="dex = JsonConvert.DeserializeObject<ClassWithException>(sex)", span="6175-6175"];
m6_2662 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="ReadTests.cs", label="Assert.AreEqual(dex.Exceptions[0].ToString(), dex.Exceptions[0].ToString())", span="6176-6176"];
m6_2663 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", span="6158-6158"];
m6_2643 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", span="6128-6128"];
m6_2644 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="ReadTests.cs", label="DerivedType d = new DerivedType()", span="6130-6130"];
m6_2645 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(d, Formatting.Indented)", span="6131-6131"];
m6_2646 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="ReadTests.cs", label="Assert.AreEqual(@''{\r\n  ''''dinosaur'''': null,\r\n  ''''dog'''': null,\r\n  ''''cat'''': null,\r\n  ''''zebra'''': null,\r\n  ''''bird'''': null,\r\n  ''''parrot'''': null,\r\n  ''''albatross'''': null,\r\n  ''''antelope'''': null\r\n}'', json)", span="6133-6142"];
m6_2647 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", span="6128-6128"];
m6_797 [cluster="Newtonsoft.Json.Tests.TestObjects.Name.Name(string)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Name.Name(string)", span="35-35"];
m6_3225 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ConvertJavaScriptTicksToDateTime(long)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.ConvertJavaScriptTicksToDateTime(long)", span="183-183"];
m6_1921 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.PosDoubleConverter()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.PosDoubleConverter()", span="4370-4370"];
m6_2249 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTestClass.StringDictionaryTestClass()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTestClass.StringDictionaryTestClass()", span="5018-5018"];
m6_1898 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", span="4296-4296"];
m6_1899 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="ReadTests.cs", label="XmlNodeTestObject testObject = new XmlNodeTestObject()", span="4298-4298"];
m6_1900 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="ReadTests.cs", label="XmlDocument document = new XmlDocument()", span="4299-4299"];
m6_1902 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="ReadTests.cs", label="testObject.Document = document", span="4301-4301"];
m6_1903 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(testObject, Formatting.Indented)", span="4303-4303"];
m6_1907 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="ReadTests.cs", label="Assert.AreEqual(testObject.Document.InnerXml, newTestObject.Document.InnerXml)", span="4312-4312"];
m6_1901 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="ReadTests.cs", label="document.LoadXml(''<root>hehe, root</root>'')", span="4300-4300"];
m6_1904 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="ReadTests.cs", label="string expected = @''{\r\n  ''''Document'''': {\r\n    ''''root'''': ''''hehe, root''''\r\n  }\r\n}''", span="4304-4308"];
m6_1905 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="ReadTests.cs", label="Assert.AreEqual(expected, json)", span="4309-4309"];
m6_1906 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="ReadTests.cs", label="XmlNodeTestObject newTestObject = JsonConvert.DeserializeObject<XmlNodeTestObject>(json)", span="4311-4311"];
m6_1908 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", span="4296-4296"];
m6_1652 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", span="3712-3712"];
m6_1653 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", file="ReadTests.cs", label="return _innerDictionary.GetEnumerator();", span="3714-3714"];
m6_1654 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", span="3712-3712"];
m6_3201 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", span="7245-7245"];
m6_3202 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", file="ReadTests.cs", label="var json = Serialize(obj)", span="7248-7248"];
m6_3203 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", file="ReadTests.cs", label="return Deserialize<T>(json);", span="7249-7249"];
m6_3204 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", span="7245-7245"];
m6_2341 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", span="5246-5246"];
m6_2342 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="ReadTests.cs", label="VectorParent obj = new VectorParent()", span="5248-5248"];
m6_2343 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="ReadTests.cs", label="obj.Position = new Vector { X = 1, Y = 2, Z = 3 }", span="5249-5249"];
m6_2344 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="ReadTests.cs", label="string str = JsonConvert.SerializeObject(obj)", span="5251-5251"];
m6_2345 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="ReadTests.cs", label="obj = JsonConvert.DeserializeObject<VectorParent>(str)", span="5253-5253"];
m6_2346 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="ReadTests.cs", label="Assert.AreEqual(1, obj.Position.X)", span="5255-5255"];
m6_2347 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="ReadTests.cs", label="Assert.AreEqual(2, obj.Position.Y)", span="5256-5256"];
m6_2348 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="ReadTests.cs", label="Assert.AreEqual(3, obj.Position.Z)", span="5257-5257"];
m6_2349 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", span="5246-5246"];
m6_1163 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", span="2455-2455"];
m6_1164 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="ReadTests.cs", label="DataContractPrivateMembers c = new DataContractPrivateMembers(''Jeff'', 26, 10, ''Dr'')", span="2457-2457"];
m6_1165 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="ReadTests.cs", label="c.NotIncluded = ''Hi''", span="2458-2458"];
m6_1166 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="2459-2459"];
m6_1167 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="ReadTests.cs", label="Assert.AreEqual(@''{\r\n  ''''_name'''': ''''Jeff'''',\r\n  ''''_age'''': 26,\r\n  ''''Rank'''': 10,\r\n  ''''JsonTitle'''': ''''Dr''''\r\n}'', json)", span="2461-2466"];
m6_1168 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="ReadTests.cs", label="DataContractPrivateMembers cc = JsonConvert.DeserializeObject<DataContractPrivateMembers>(json)", span="2468-2468"];
m6_1169 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="ReadTests.cs", label="Assert.AreEqual(''_name: Jeff, _age: 26, Rank: 10, JsonTitle: Dr'', cc.ToString())", span="2469-2469"];
m6_1170 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", span="2455-2455"];
m6_2968 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", span="6758-6758"];
m6_2969 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", file="ReadTests.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''No JSON content found and type 'System.Double' is not nullable. Path '', line 0, position 0.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<double>('''');\r\n        })", span="6760-6765"];
m6_2970 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", span="6758-6758"];
m6_751 [cluster="System.Guid.Guid(string)", file="ReadTests.cs", label="Entry System.Guid.Guid(string)", span="0-0"];
m6_3020 [cluster="System.DateTime.ToLocalTime()", file="ReadTests.cs", label="Entry System.DateTime.ToLocalTime()", span="0-0"];
m6_2617 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", span="6040-6040"];
m6_2618 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="ReadTests.cs", label="_privateString = privateString", span="6042-6042"];
m6_2619 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="ReadTests.cs", label="_readonlyString = readonlyString", span="6043-6043"];
m6_2620 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="ReadTests.cs", label="_internalString = internalString", span="6044-6044"];
m6_2621 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", span="6040-6040"];
m6_2525 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContract.ChildDataContract()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContract.ChildDataContract()", span="5747-5747"];
m6_3601 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", span="8421-8421"];
m6_3602 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="ReadTests.cs", label="var content = @''{''''startDateTime'''':''''2012-07-19T14:30:00+09:30''''}''", span="8423-8423"];
m6_3603 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="ReadTests.cs", label="var jsonSerializerSettings = new JsonSerializerSettings() {DateFormatHandling = DateFormatHandling.IsoDateFormat, DateParseHandling = DateParseHandling.DateTimeOffset, DateTimeZoneHandling = DateTimeZoneHandling.RoundtripKind}", span="8425-8425"];
m6_3604 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="ReadTests.cs", label="var obj = (JObject)JsonConvert.DeserializeObject(content, jsonSerializerSettings)", span="8427-8427"];
m6_3605 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="ReadTests.cs", label="var dateTimeOffset = (DateTimeOffset)((JValue) obj[''startDateTime'']).Value", span="8429-8429"];
m6_3606 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="ReadTests.cs", label="Assert.AreEqual(TimeSpan.FromHours(9.5), dateTimeOffset.Offset)", span="8431-8431"];
m6_3607 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="ReadTests.cs", label="Assert.AreEqual(''07/19/2012 14:30:00 +09:30'', dateTimeOffset.ToString(CultureInfo.InvariantCulture))", span="8432-8432"];
m6_3608 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", span="8421-8421"];
m6_743 [cluster="System.Collections.Generic.Stack<T>.Push(T)", file="ReadTests.cs", label="Entry System.Collections.Generic.Stack<T>.Push(T)", span="0-0"];
m6_4016 [cluster="Newtonsoft.Json.Tests.Serialization.IntToFloatConverter.CanConvert(System.Type)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.IntToFloatConverter.CanConvert(System.Type)", span="9731-9731"];
m6_4017 [cluster="Newtonsoft.Json.Tests.Serialization.IntToFloatConverter.CanConvert(System.Type)", file="ReadTests.cs", label="return objectType == typeof (int);", span="9733-9733"];
m6_4018 [cluster="Newtonsoft.Json.Tests.Serialization.IntToFloatConverter.CanConvert(System.Type)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.IntToFloatConverter.CanConvert(System.Type)", span="9731-9731"];
m6_2465 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass.EnumerableClass()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass.EnumerableClass()", span="5529-5529"];
m6_808 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", span="1685-1685"];
m6_809 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="ReadTests.cs", label="ConverterPrecedenceClass c1 = new ConverterPrecedenceClass(''!Test!'')", span="1687-1687"];
m6_810 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(c1)", span="1689-1689"];
m6_811 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="ReadTests.cs", label="Assert.AreEqual(@''[''''Class'''',''''!Test!'''']'', json)", span="1690-1690"];
m6_812 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="ReadTests.cs", label="ConverterPrecedenceClass c2 = JsonConvert.DeserializeObject<ConverterPrecedenceClass>(json)", span="1692-1692"];
m6_813 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="ReadTests.cs", label="Assert.AreEqual(''!Test!'', c2.TestValue)", span="1694-1694"];
m6_814 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", span="1685-1685"];
m6_245 [cluster="Unk.IsTrue", file="ReadTests.cs", label="Entry Unk.IsTrue", span=""];
m6_405 [cluster="Newtonsoft.Json.Tests.TestObjects.Store.Store()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Store.Store()", span="46-46"];
m6_1111 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", span="2311-2311"];
m6_1112 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="ReadTests.cs", label="string json = ''{}''", span="2313-2313"];
m6_1113 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="ReadTests.cs", label="JsonPropertyWithHandlingValues o = JsonConvert.DeserializeObject<JsonPropertyWithHandlingValues>(json)", span="2315-2315"];
m6_1114 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="ReadTests.cs", label="Assert.AreEqual(''Default!'', o.DefaultValueHandlingIgnoreAndPopulateProperty)", span="2316-2316"];
m6_1115 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="ReadTests.cs", label="Assert.AreEqual(''Default!'', o.DefaultValueHandlingPopulateProperty)", span="2317-2317"];
m6_1116 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="ReadTests.cs", label="Assert.AreEqual(null, o.DefaultValueHandlingIgnoreProperty)", span="2318-2318"];
m6_1117 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="ReadTests.cs", label="Assert.AreEqual(null, o.DefaultValueHandlingIncludeProperty)", span="2319-2319"];
m6_1118 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", span="2311-2311"];
m6_3021 [cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, int, System.TimeSpan)", file="ReadTests.cs", label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, int, System.TimeSpan)", span="0-0"];
m6_3205 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", span="7252-7252"];
m6_3207 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="ReadTests.cs", label="var stringWriter = new StringWriter()", span="7255-7255"];
m6_3210 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="ReadTests.cs", label="serializer.Serialize(stringWriter, obj)", span="7261-7261"];
m6_3208 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="ReadTests.cs", label="var serializer = new Newtonsoft.Json.JsonSerializer()", span="7256-7256"];
m6_3211 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="ReadTests.cs", label="return stringWriter.ToString();", span="7263-7263"];
m6_3209 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="ReadTests.cs", label="serializer.ContractResolver = new DefaultContractResolver(false)\r\n        {\r\n          IgnoreSerializableAttribute = false\r\n        }", span="7257-7260"];
m6_3212 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", span="7252-7252"];
m6_2404 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Response.Response()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Response.Response()", span="5394-5394"];
m6_2907 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", span="6631-6631"];
m6_2908 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="ReadTests.cs", label="Item expected = new Item()\r\n        {\r\n          SourceTypeID = new Guid(''d8220a4b-75b1-4b7a-8112-b7bdae956a45''),\r\n          BrokerID = new Guid(''951663c4-924e-4c86-a57a-7ed737501dbd''),\r\n          Latitude = 33.657145,\r\n          Longitude = -117.766684,\r\n          TimeStamp = new DateTime(2000, 3, 1, 23, 59, 59, DateTimeKind.Utc),\r\n          Payload = new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }\r\n        }", span="6633-6641"];
m6_2909 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="ReadTests.cs", label="string jsonString = JsonConvert.SerializeObject(expected, Formatting.Indented)", span="6643-6643"];
m6_2910 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="ReadTests.cs", label="Assert.AreEqual(@''{\r\n  ''''SourceTypeID'''': ''''d8220a4b-75b1-4b7a-8112-b7bdae956a45'''',\r\n  ''''BrokerID'''': ''''951663c4-924e-4c86-a57a-7ed737501dbd'''',\r\n  ''''Latitude'''': 33.657145,\r\n  ''''Longitude'''': -117.766684,\r\n  ''''TimeStamp'''': ''''2000-03-01T23:59:59Z'''',\r\n  ''''Payload'''': {\r\n    ''''$type'''': ''''System.Byte[], mscorlib'''',\r\n    ''''$value'''': ''''AAECAwQFBgcICQ==''''\r\n  }\r\n}'', jsonString)", span="6645-6655"];
m6_2911 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="ReadTests.cs", label="Item actual = JsonConvert.DeserializeObject<Item>(jsonString)", span="6657-6657"];
m6_2912 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="ReadTests.cs", label="Assert.AreEqual(new Guid(''d8220a4b-75b1-4b7a-8112-b7bdae956a45''), actual.SourceTypeID)", span="6659-6659"];
m6_2913 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="ReadTests.cs", label="Assert.AreEqual(new Guid(''951663c4-924e-4c86-a57a-7ed737501dbd''), actual.BrokerID)", span="6660-6660"];
m6_2914 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="ReadTests.cs", label="byte[] bytes = (byte[])actual.Payload", span="6661-6661"];
m6_2915 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="ReadTests.cs", label="CollectionAssert.AreEquivalent((new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }).ToList(), bytes.ToList())", span="6662-6662"];
m6_2916 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", span="6631-6631"];
m6_3731 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListInterface()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListInterface()", span="8784-8784"];
m6_3732 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListInterface()", file="ReadTests.cs", label="IReadOnlyList<int> list = JsonConvert.DeserializeObject<IReadOnlyList<int>>(''[1,2,3]'')", span="8786-8786"];
m6_3733 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListInterface()", file="ReadTests.cs", label="Assert.AreEqual(3, list.Count)", span="8788-8788"];
m6_3734 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListInterface()", file="ReadTests.cs", label="Assert.AreEqual(1, list[0])", span="8789-8789"];
m6_3735 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListInterface()", file="ReadTests.cs", label="Assert.AreEqual(2, list[1])", span="8790-8790"];
m6_3736 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListInterface()", file="ReadTests.cs", label="Assert.AreEqual(3, list[2])", span="8791-8791"];
m6_3737 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListInterface()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListInterface()", span="8784-8784"];
m6_3241 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", span="7379-7379"];
m6_3242 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="ReadTests.cs", label="string json = ''{one:1}{}''", span="7381-7381"];
m6_3243 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="ReadTests.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings()", span="7383-7383"];
m6_3245 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="ReadTests.cs", label="IDictionary<string, int> o = s.Deserialize<Dictionary<string, int>>(new JsonTextReader(new StringReader(json)))", span="7385-7385"];
m6_3250 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="ReadTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n        ''Additional text encountered after finished reading JSON content: {. Path '', line 1, position 7.'',\r\n        () =>\r\n          {\r\n            s.Deserialize<Dictionary<string, int>>(new JsonTextReader(new StringReader(json)));\r\n          })", span="7392-7397"];
m6_3244 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="ReadTests.cs", label="JsonSerializer s = JsonSerializer.Create(settings)", span="7384-7384"];
m6_3248 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="ReadTests.cs", label="settings.CheckAdditionalContent = true", span="7390-7390"];
m6_3249 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="ReadTests.cs", label="s = JsonSerializer.Create(settings)", span="7391-7391"];
m6_3246 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="ReadTests.cs", label="Assert.IsNotNull(o)", span="7387-7387"];
m6_3247 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="ReadTests.cs", label="Assert.AreEqual(1, o[''one''])", span="7388-7388"];
m6_3251 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", span="7379-7379"];
m6_1815 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", span="4064-4064"];
m6_1816 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="ReadTests.cs", label="AA myA = new AA(2)", span="4066-4066"];
m6_1817 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(myA, Formatting.Indented)", span="4067-4067"];
m6_1818 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="ReadTests.cs", label="Assert.AreEqual(@''{\r\n  ''''AA_field1'''': 2,\r\n  ''''AA_property1'''': 2,\r\n  ''''AA_property2'''': 2,\r\n  ''''AA_property3'''': 2,\r\n  ''''AA_property4'''': 2\r\n}'', json)", span="4068-4074"];
m6_1819 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="ReadTests.cs", label="BB myB = new BB(3, 4)", span="4076-4076"];
m6_1820 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="ReadTests.cs", label="json = JsonConvert.SerializeObject(myB, Formatting.Indented)", span="4077-4077"];
m6_1821 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="ReadTests.cs", label="Assert.AreEqual(@''{\r\n  ''''BB_field1'''': 4,\r\n  ''''BB_field2'''': 4,\r\n  ''''AA_field1'''': 3,\r\n  ''''BB_property1'''': 4,\r\n  ''''BB_property2'''': 4,\r\n  ''''BB_property3'''': 4,\r\n  ''''BB_property4'''': 4,\r\n  ''''BB_property5'''': 4,\r\n  ''''BB_property7'''': 4,\r\n  ''''AA_property1'''': 3,\r\n  ''''AA_property2'''': 3,\r\n  ''''AA_property3'''': 3,\r\n  ''''AA_property4'''': 3\r\n}'', json)", span="4078-4092"];
m6_1822 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", span="4064-4064"];
m6_2140 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", span="4760-4760"];
m6_2141 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="ReadTests.cs", label="SpecifiedTestClass c = new SpecifiedTestClass()", span="4762-4762"];
m6_2142 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="ReadTests.cs", label="c.Name = ''James''", span="4763-4763"];
m6_2143 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="ReadTests.cs", label="c.Age = 27", span="4764-4764"];
m6_2144 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="ReadTests.cs", label="c.NameSpecified = false", span="4765-4765"];
m6_2145 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="4767-4767"];
m6_2154 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="ReadTests.cs", label="c.NameSpecified = true", span="4781-4781"];
m6_2155 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="ReadTests.cs", label="c.WeightSpecified = true", span="4782-4782"];
m6_2156 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="ReadTests.cs", label="c.HeightSpecified = true", span="4783-4783"];
m6_2157 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="ReadTests.cs", label="c.FavoriteNumber = 23", span="4784-4784"];
m6_2158 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="ReadTests.cs", label="json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="4785-4785"];
m6_2146 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="ReadTests.cs", label="Assert.AreEqual(@''{\r\n  ''''Age'''': 27\r\n}'', json)", span="4769-4771"];
m6_2147 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="ReadTests.cs", label="SpecifiedTestClass deserialized = JsonConvert.DeserializeObject<SpecifiedTestClass>(json)", span="4773-4773"];
m6_2148 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="ReadTests.cs", label="Assert.IsNull(deserialized.Name)", span="4774-4774"];
m6_2149 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="ReadTests.cs", label="Assert.IsFalse(deserialized.NameSpecified)", span="4775-4775"];
m6_2150 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="ReadTests.cs", label="Assert.IsFalse(deserialized.WeightSpecified)", span="4776-4776"];
m6_2151 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="ReadTests.cs", label="Assert.IsFalse(deserialized.HeightSpecified)", span="4777-4777"];
m6_2152 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="ReadTests.cs", label="Assert.IsFalse(deserialized.FavoriteNumberSpecified)", span="4778-4778"];
m6_2153 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="ReadTests.cs", label="Assert.AreEqual(27, deserialized.Age)", span="4779-4779"];
m6_2159 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="ReadTests.cs", label="Assert.AreEqual(@''{\r\n  ''''Name'''': ''''James'''',\r\n  ''''Age'''': 27,\r\n  ''''Weight'''': 0,\r\n  ''''Height'''': 0,\r\n  ''''FavoriteNumber'''': 23\r\n}'', json)", span="4787-4793"];
m6_2160 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="ReadTests.cs", label="deserialized = JsonConvert.DeserializeObject<SpecifiedTestClass>(json)", span="4795-4795"];
m6_2161 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="ReadTests.cs", label="Assert.AreEqual(''James'', deserialized.Name)", span="4796-4796"];
m6_2162 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="ReadTests.cs", label="Assert.IsTrue(deserialized.NameSpecified)", span="4797-4797"];
m6_2163 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="ReadTests.cs", label="Assert.IsTrue(deserialized.WeightSpecified)", span="4798-4798"];
m6_2164 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="ReadTests.cs", label="Assert.IsTrue(deserialized.HeightSpecified)", span="4799-4799"];
m6_2165 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="ReadTests.cs", label="Assert.IsTrue(deserialized.FavoriteNumberSpecified)", span="4800-4800"];
m6_2166 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="ReadTests.cs", label="Assert.AreEqual(27, deserialized.Age)", span="4801-4801"];
m6_2167 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="ReadTests.cs", label="Assert.AreEqual(23, deserialized.FavoriteNumber)", span="4802-4802"];
m6_2168 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", span="4760-4760"];
m6_467 [cluster="object.ToString()", file="ReadTests.cs", label="Entry object.ToString()", span="0-0"];
m6_2587 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="ReadTests.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m6_2394 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", span="5382-5382"];
m6_2395 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", file="ReadTests.cs", label="return JsonConvert.DeserializeObject<NullableStructPropertyClass>(\r\n        serStr,\r\n        new JsonSerializerSettings\r\n          {\r\n            NullValueHandling = NullValueHandling.Ignore,\r\n            MissingMemberHandling = MissingMemberHandling.Ignore\r\n          });", span="5384-5390"];
m6_2396 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", span="5382-5382"];
m6_2980 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", span="6780-6780"];
m6_2981 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", file="ReadTests.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''No JSON content found and type 'System.Int32' is not nullable. Path '', line 0, position 0.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<int>('''');\r\n        })", span="6782-6787"];
m6_2982 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", span="6780-6780"];
m6_1024 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", span="2084-2084"];
m6_1025 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", file="ReadTests.cs", label="string json = @''{\r\n  ''''name'''': ''''1600 Amphitheatre Parkway, Mountain View, CA, USA'''',\r\n  ''''Status'''': {\r\n    ''''code'''': 200,\r\n    ''''request'''': ''''geocode''''\r\n  },\r\n  ''''Placemark'''': [\r\n    {\r\n      ''''address'''': ''''1600 Amphitheatre Pkwy, Mountain View, CA 94043, USA'''',\r\n      ''''AddressDetails'''': {\r\n        ''''Country'''': {\r\n          ''''CountryNameCode'''': ''''US'''',\r\n          ''''AdministrativeArea'''': {\r\n            ''''AdministrativeAreaName'''': ''''CA'''',\r\n            ''''SubAdministrativeArea'''': {\r\n              ''''SubAdministrativeAreaName'''': ''''Santa Clara'''',\r\n              ''''Locality'''': {\r\n                ''''LocalityName'''': ''''Mountain View'''',\r\n                ''''Thoroughfare'''': {\r\n                  ''''ThoroughfareName'''': ''''1600 Amphitheatre Pkwy''''\r\n                },\r\n                ''''PostalCode'''': {\r\n                  ''''PostalCodeNumber'''': ''''94043''''\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        ''''Accuracy'''': 8\r\n      },\r\n      ''''Point'''': {\r\n        ''''coordinates'''': [-122.083739, 37.423021, 0]\r\n      }\r\n    }\r\n  ]\r\n}''", span="2086-2121"];
m6_1026 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", file="ReadTests.cs", label="GoogleMapGeocoderStructure jsonGoogleMapGeocoder = JsonConvert.DeserializeObject<GoogleMapGeocoderStructure>(json)", span="2123-2123"];
m6_1027 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", span="2084-2084"];
m6_2588 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Add(object)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Add(object)", span="5965-5965"];
m6_2589 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Add(object)", file="ReadTests.cs", label="throw new NotImplementedException();", span="5967-5967"];
m6_2590 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Add(object)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Add(object)", span="5965-5965"];
m6_1535 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", span="3355-3355"];
m6_1536 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="ReadTests.cs", label="ExistingValueClass d = JsonConvert.DeserializeObject<ExistingValueClass>(@''{'Dictionary':{appended:'appended',existing:'new'}}'')", span="3357-3357"];
m6_1537 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="ReadTests.cs", label="Assert.IsNotNull(d)", span="3359-3359"];
m6_1538 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="ReadTests.cs", label="Assert.IsNotNull(d.Dictionary)", span="3360-3360"];
m6_1539 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="ReadTests.cs", label="Assert.AreEqual(typeof(Dictionary<string, string>), d.Dictionary.GetType())", span="3361-3361"];
m6_1540 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="ReadTests.cs", label="Assert.AreEqual(typeof(List<string>), d.List.GetType())", span="3362-3362"];
m6_1541 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="ReadTests.cs", label="Assert.AreEqual(2, d.Dictionary.Count)", span="3363-3363"];
m6_1542 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="ReadTests.cs", label="Assert.AreEqual(''new'', d.Dictionary[''existing''])", span="3364-3364"];
m6_1543 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="ReadTests.cs", label="Assert.AreEqual(''appended'', d.Dictionary[''appended''])", span="3365-3365"];
m6_1544 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="ReadTests.cs", label="Assert.AreEqual(1, d.List.Count)", span="3366-3366"];
m6_1545 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="ReadTests.cs", label="Assert.AreEqual(''existing'', d.List[0])", span="3367-3367"];
m6_1546 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", span="3355-3355"];
m6_1762 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, ulong)", file="ReadTests.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, ulong)", span="0-0"];
m6_431 [cluster="System.DateTime.DateTime(int, int, int, int, int, int)", file="ReadTests.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int)", span="0-0"];
m6_1366 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", span="2939-2939"];
m6_1367 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", file="ReadTests.cs", label="string json = @''[]''", span="2941-2941"];
m6_1368 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", file="ReadTests.cs", label="ExceptionAssert.Throws<InvalidCastException>(\r\n        @''Unable to cast object of type 'Newtonsoft.Json.Linq.JArray' to type 'Newtonsoft.Json.Linq.JObject'.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<JObject>(json);\r\n        })", span="2943-2948"];
m6_1369 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", span="2939-2939"];
m6_2405 [cluster="Newtonsoft.Json.Linq.JObject.JObject(params object[])", file="ReadTests.cs", label="Entry Newtonsoft.Json.Linq.JObject.JObject(params object[])", span="104-104"];
m6_2018 [cluster="System.Collections.Generic.List<T>.List(System.Collections.Generic.IEnumerable<T>)", file="ReadTests.cs", label="Entry System.Collections.Generic.List<T>.List(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m6_3087 [cluster="Newtonsoft.Json.Bson.BsonWriter.BsonWriter(System.IO.Stream)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Bson.BsonWriter.BsonWriter(System.IO.Stream)", span="65-65"];
m6_3775 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="ReadTests.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m6_3962 [cluster="Newtonsoft.Json.Tests.Serialization.WidgetIdJsonConverter.CanConvert(System.Type)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.WidgetIdJsonConverter.CanConvert(System.Type)", span="9460-9460"];
m6_3963 [cluster="Newtonsoft.Json.Tests.Serialization.WidgetIdJsonConverter.CanConvert(System.Type)", file="ReadTests.cs", label="return objectType == typeof(WidgetId1) || objectType == typeof(WidgetId1?);", span="9462-9462"];
m6_3964 [cluster="Newtonsoft.Json.Tests.Serialization.WidgetIdJsonConverter.CanConvert(System.Type)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.WidgetIdJsonConverter.CanConvert(System.Type)", span="9460-9460"];
m6_407 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", span="899-899"];
m6_408 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="ReadTests.cs", label="Product product = new Product()", span="901-901"];
m6_409 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="ReadTests.cs", label="product.Name = ''Apple''", span="903-903"];
m6_410 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="ReadTests.cs", label="product.ExpiryDate = new DateTime(2008, 12, 28)", span="904-904"];
m6_411 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="ReadTests.cs", label="product.Price = 3.99M", span="905-905"];
m6_412 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="ReadTests.cs", label="product.Sizes = new string[] { ''Small'', ''Medium'', ''Large'' }", span="906-906"];
m6_413 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="ReadTests.cs", label="string output = JsonConvert.SerializeObject(product)", span="908-908"];
m6_414 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="ReadTests.cs", label="Product deserializedProduct = (Product)JsonConvert.DeserializeObject(output, typeof(Product))", span="920-920"];
m6_415 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="ReadTests.cs", label="Assert.AreEqual(''Apple'', deserializedProduct.Name)", span="922-922"];
m6_416 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="ReadTests.cs", label="Assert.AreEqual(new DateTime(2008, 12, 28), deserializedProduct.ExpiryDate)", span="923-923"];
m6_417 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="ReadTests.cs", label="Assert.AreEqual(3.99m, deserializedProduct.Price)", span="924-924"];
m6_418 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="ReadTests.cs", label="Assert.AreEqual(''Small'', deserializedProduct.Sizes[0])", span="925-925"];
m6_419 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="ReadTests.cs", label="Assert.AreEqual(''Medium'', deserializedProduct.Sizes[1])", span="926-926"];
m6_420 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="ReadTests.cs", label="Assert.AreEqual(''Large'', deserializedProduct.Sizes[2])", span="927-927"];
m6_421 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", span="899-899"];
m6_2291 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", span="5152-5152"];
m6_2292 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="ReadTests.cs", label="dynamic expando = new ExpandoObject()", span="5154-5154"];
m6_2293 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="ReadTests.cs", label="expando.Int = 1", span="5155-5155"];
m6_2294 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="ReadTests.cs", label="expando.Decimal = 99.9d", span="5156-5156"];
m6_2295 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="ReadTests.cs", label="expando.Complex = new ExpandoObject()", span="5157-5157"];
m6_2296 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="ReadTests.cs", label="expando.Complex.String = ''I am a string''", span="5158-5158"];
m6_2297 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="ReadTests.cs", label="expando.Complex.DateTime = new DateTime(2000, 12, 20, 18, 55, 0, DateTimeKind.Utc)", span="5159-5159"];
m6_2298 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(expando, Formatting.Indented)", span="5161-5161"];
m6_2302 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="ReadTests.cs", label="Assert.AreEqual((long)expando.Int, newExpando[''Int''])", span="5174-5174"];
m6_2304 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="ReadTests.cs", label="Assert.AreEqual(expando.Decimal, newExpando[''Decimal''])", span="5177-5177"];
m6_2308 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="ReadTests.cs", label="Assert.AreEqual(expando.Complex.String, o[''String''])", span="5183-5183"];
m6_2310 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="ReadTests.cs", label="Assert.AreEqual(expando.Complex.DateTime, o[''DateTime''])", span="5186-5186"];
m6_2299 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="ReadTests.cs", label="Assert.AreEqual(@''{\r\n  ''''Int'''': 1,\r\n  ''''Decimal'''': 99.9,\r\n  ''''Complex'''': {\r\n    ''''String'''': ''''I am a string'''',\r\n    ''''DateTime'''': ''''2000-12-20T18:55:00Z''''\r\n  }\r\n}'', json)", span="5162-5169"];
m6_2300 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="ReadTests.cs", label="IDictionary<string, object> newExpando = JsonConvert.DeserializeObject<ExpandoObject>(json)", span="5171-5171"];
m6_2301 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="ReadTests.cs", label="CustomAssert.IsInstanceOfType(typeof(long), newExpando[''Int''])", span="5173-5173"];
m6_2303 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="ReadTests.cs", label="CustomAssert.IsInstanceOfType(typeof(double), newExpando[''Decimal''])", span="5176-5176"];
m6_2305 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="ReadTests.cs", label="CustomAssert.IsInstanceOfType(typeof(ExpandoObject), newExpando[''Complex''])", span="5179-5179"];
m6_2306 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="ReadTests.cs", label="IDictionary<string, object> o = (ExpandoObject)newExpando[''Complex'']", span="5180-5180"];
m6_2307 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="ReadTests.cs", label="CustomAssert.IsInstanceOfType(typeof(string), o[''String''])", span="5182-5182"];
m6_2309 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="ReadTests.cs", label="CustomAssert.IsInstanceOfType(typeof(DateTime), o[''DateTime''])", span="5185-5185"];
m6_2311 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", span="5152-5152"];
m6_2801 [cluster="Newtonsoft.Json.Tests.Serialization.TestObject.TestObject(string, byte[])", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TestObject.TestObject(string, byte[])", span="9532-9532"];
m6_3978 [cluster="Newtonsoft.Json.Tests.Serialization.TestObject.TestObject(string, byte[])", file="ReadTests.cs", label="Name = name", span="9534-9534"];
m6_3979 [cluster="Newtonsoft.Json.Tests.Serialization.TestObject.TestObject(string, byte[])", file="ReadTests.cs", label="Data = data", span="9535-9535"];
m6_3980 [cluster="Newtonsoft.Json.Tests.Serialization.TestObject.TestObject(string, byte[])", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TestObject.TestObject(string, byte[])", span="9532-9532"];
m6_922 [cluster="Newtonsoft.Json.Linq.JRaw.JRaw(object)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Linq.JRaw.JRaw(object)", span="48-48"];
m6_4041 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.GetTypeCode()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Ratio.GetTypeCode()", span="9864-9864"];
m6_4042 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.GetTypeCode()", file="ReadTests.cs", label="return TypeCode.Object;", span="9866-9866"];
m6_4043 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.GetTypeCode()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.Ratio.GetTypeCode()", span="9864-9864"];
m6_2008 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="4511-4511"];
m6_2009 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReadTests.cs", label="List<string> existingStrings = (List<string>)existingValue", span="4513-4513"];
m6_2011 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReadTests.cs", label="reader.Read()", span="4516-4516"];
m6_2012 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReadTests.cs", label="reader.TokenType != JsonToken.EndArray", span="4518-4518"];
m6_2013 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReadTests.cs", label="string s = (string)reader.Value", span="4520-4520"];
m6_2015 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReadTests.cs", label="reader.Read()", span="4523-4523"];
m6_2010 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReadTests.cs", label="List<string> newStrings = new List<string>(existingStrings)", span="4514-4514"];
m6_2014 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReadTests.cs", label="newStrings.Add(s)", span="4521-4521"];
m6_2016 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReadTests.cs", label="return newStrings;", span="4526-4526"];
m6_2017 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="4511-4511"];
m6_1409 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", span="3019-3019"];
m6_1410 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="ReadTests.cs", label="string json = @''{''''Name'''':''''''''}''", span="3021-3021"];
m6_1411 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="ReadTests.cs", label="Person p = JsonConvert.DeserializeObject<Person>(json)", span="3023-3023"];
m6_1412 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="ReadTests.cs", label="Assert.AreEqual('''', p.Name)", span="3024-3024"];
m6_1413 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", span="3019-3019"];
m6_3914 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="9237-9237"];
m6_3915 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ReadTests.cs", label="var converter = GetConverter(value.GetType())", span="9239-9239"];
m6_3916 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ReadTests.cs", label="var text = converter.ConvertToInvariantString(value)", span="9240-9240"];
m6_3917 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ReadTests.cs", label="writer.WriteValue(text)", span="9242-9242"];
m6_3918 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="9237-9237"];
m6_3262 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", span="7439-7439"];
m6_3263 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", file="ReadTests.cs", label="ExceptionAssert.Throws<JsonException>(\r\n       ''Additional text found in JSON string after finishing deserializing object.'',\r\n       () =>\r\n         {\r\n           string json = ''[{},1]'';\r\n\r\n           JsonSerializer serializer = new JsonSerializer();\r\n           serializer.CheckAdditionalContent = true;\r\n\r\n           var reader = new JsonTextReader(new StringReader(json));\r\n           reader.Read();\r\n           reader.Read();\r\n\r\n           serializer.Deserialize(reader, typeof (MyType));\r\n         })", span="7441-7455"];
m6_3264 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", span="7439-7439"];
m6_1617 [cluster="System.Exception.Exception(string)", file="ReadTests.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m6_4093 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.ToUInt64(System.IFormatProvider)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Ratio.ToUInt64(System.IFormatProvider)", span="9950-9950"];
m6_4094 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.ToUInt64(System.IFormatProvider)", file="ReadTests.cs", label="return (ulong)(this._numerator / this._denominator);", span="9952-9952"];
m6_4095 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.ToUInt64(System.IFormatProvider)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.Ratio.ToUInt64(System.IFormatProvider)", span="9950-9950"];
m6_1456 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", span="3132-3132"];
m6_1457 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="ReadTests.cs", label="StructTest structTest = new StructTest\r\n        {\r\n          StringProperty = ''StringProperty!'',\r\n          StringField = ''StringField'',\r\n          IntProperty = 5,\r\n          IntField = 10\r\n        }", span="3134-3140"];
m6_1458 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(structTest, Formatting.Indented)", span="3142-3142"];
m6_1462 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="ReadTests.cs", label="Assert.AreEqual(structTest.StringProperty, deserialized.StringProperty)", span="3152-3152"];
m6_1459 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="ReadTests.cs", label="Console.WriteLine(json)", span="3143-3143"];
m6_1460 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="ReadTests.cs", label="Assert.AreEqual(@''{\r\n  ''''StringField'''': ''''StringField'''',\r\n  ''''IntField'''': 10,\r\n  ''''StringProperty'''': ''''StringProperty!'''',\r\n  ''''IntProperty'''': 5\r\n}'', json)", span="3144-3149"];
m6_1461 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="ReadTests.cs", label="StructTest deserialized = JsonConvert.DeserializeObject<StructTest>(json)", span="3151-3151"];
m6_1463 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="ReadTests.cs", label="Assert.AreEqual(structTest.StringField, deserialized.StringField)", span="3153-3153"];
m6_1464 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="ReadTests.cs", label="Assert.AreEqual(structTest.IntProperty, deserialized.IntProperty)", span="3154-3154"];
m6_1465 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="ReadTests.cs", label="Assert.AreEqual(structTest.IntField, deserialized.IntField)", span="3155-3155"];
m6_1466 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", span="3132-3132"];
m6_2885 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", span="6587-6587"];
m6_2886 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", file="ReadTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n        ''Error reading integer. Unexpected token: Boolean. Path 'PreProperty', line 2, position 22.'',\r\n        () =>\r\n        {\r\n          string json = @''{\r\n  ''''PreProperty'''': true,\r\n  ''''PostProperty'''': ''''-1''''\r\n}'';\r\n\r\n          JsonConvert.DeserializeObject<TestObjects.MyClass>(json);\r\n        })", span="6589-6599"];
m6_2887 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", span="6587-6587"];
m6_825 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", file="ReadTests.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", span="739-739"];
m6_660 [cluster="Newtonsoft.Json.Tests.TestObjects.ProductCollection.ProductCollection()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ProductCollection.ProductCollection()", span="29-29"];
m6_650 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomCollectionSerialization()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomCollectionSerialization()", span="1403-1403"];
m6_651 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomCollectionSerialization()", file="ReadTests.cs", label="ProductCollection collection = new ProductCollection()\r\n        {\r\n          new Product() {Name = ''Test1''},\r\n          new Product() {Name = ''Test2''},\r\n          new Product() {Name = ''Test3''}\r\n        }", span="1405-1410"];
m6_652 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomCollectionSerialization()", file="ReadTests.cs", label="JsonSerializer jsonSerializer = new JsonSerializer()", span="1412-1412"];
m6_655 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomCollectionSerialization()", file="ReadTests.cs", label="jsonSerializer.Serialize(sw, collection)", span="1417-1417"];
m6_658 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomCollectionSerialization()", file="ReadTests.cs", label="CollectionAssert.AreEqual(collection, collectionNew)", span="1424-1424"];
m6_653 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomCollectionSerialization()", file="ReadTests.cs", label="jsonSerializer.ReferenceLoopHandling = ReferenceLoopHandling.Ignore", span="1413-1413"];
m6_657 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomCollectionSerialization()", file="ReadTests.cs", label="ProductCollection collectionNew = (ProductCollection)jsonSerializer.Deserialize(new JsonTextReader(new StringReader(sw.GetStringBuilder().ToString())), typeof(ProductCollection))", span="1422-1422"];
m6_654 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomCollectionSerialization()", file="ReadTests.cs", label="StringWriter sw = new StringWriter()", span="1415-1415"];
m6_656 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomCollectionSerialization()", file="ReadTests.cs", label="Assert.AreEqual(@''[{''''Name'''':''''Test1'''',''''ExpiryDate'''':''''2000-01-01T00:00:00Z'''',''''Price'''':0.0,''''Sizes'''':null},{''''Name'''':''''Test2'''',''''ExpiryDate'''':''''2000-01-01T00:00:00Z'''',''''Price'''':0.0,''''Sizes'''':null},{''''Name'''':''''Test3'''',''''ExpiryDate'''':''''2000-01-01T00:00:00Z'''',''''Price'''':0.0,''''Sizes'''':null}]'',\r\n                      sw.GetStringBuilder().ToString())", span="1419-1420"];
m6_659 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomCollectionSerialization()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomCollectionSerialization()", span="1403-1403"];
m6_1714 [cluster="System.Runtime.Serialization.SerializationInfo.GetString(string)", file="ReadTests.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetString(string)", span="0-0"];
m6_257 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicExtensionDataAttributeTestClass.PublicExtensionDataAttributeTestClass()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicExtensionDataAttributeTestClass.PublicExtensionDataAttributeTestClass()", span="513-513"];
m6_1643 [cluster="System.Collections.Generic.ICollection<T>.Contains(T)", file="ReadTests.cs", label="Entry System.Collections.Generic.ICollection<T>.Contains(T)", span="0-0"];
m6_1726 [cluster="System.Runtime.Serialization.SerializationInfo.GetUInt16(string)", file="ReadTests.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetUInt16(string)", span="0-0"];
m6_2393 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable()", span="5314-5314"];
m6_576 [cluster="JavaScriptSerializer.cstr", file="ReadTests.cs", label="Entry JavaScriptSerializer.cstr", span=""];
m6_4096 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.ToString()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Ratio.ToString()", span="9959-9959"];
m6_4097 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.ToString()", file="ReadTests.cs", label="return ToString(CultureInfo.InvariantCulture);", span="9961-9961"];
m6_4098 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.ToString()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.Ratio.ToString()", span="9959-9959"];
m6_578 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", span="1268-1268"];
m6_579 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", file="ReadTests.cs", label="string json = @''[''''vvv\jvvv'''']''", span="1270-1270"];
m6_580 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", file="ReadTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n        @''Bad JSON escape sequence: \j. Path '', line 1, position 7.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<List<string>>(json);\r\n        })", span="1272-1277"];
m6_581 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", span="1268-1268"];
m6_1716 [cluster="System.Runtime.Serialization.SerializationInfo.GetValue(string, System.Type)", file="ReadTests.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetValue(string, System.Type)", span="0-0"];
m6_836 [cluster="Newtonsoft.Json.Tests.TestObjects.MemberConverterClass.MemberConverterClass()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.MemberConverterClass.MemberConverterClass()", span="30-30"];
m6_1079 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", span="2242-2242"];
m6_1080 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="ReadTests.cs", label="SubKlass i = new SubKlass(''my subprop'')", span="2244-2244"];
m6_1081 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="ReadTests.cs", label="i.SuperProp = ''overrided superprop''", span="2245-2245"];
m6_1082 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(i)", span="2247-2247"];
m6_1083 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="ReadTests.cs", label="Assert.AreEqual(@''{''''SubProp'''':''''my subprop'''',''''SuperProp'''':''''overrided superprop''''}'', json)", span="2248-2248"];
m6_1084 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="ReadTests.cs", label="SubKlass ii = JsonConvert.DeserializeObject<SubKlass>(json)", span="2250-2250"];
m6_1085 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="ReadTests.cs", label="string newJson = JsonConvert.SerializeObject(ii)", span="2252-2252"];
m6_1086 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="ReadTests.cs", label="Assert.AreEqual(@''{''''SubProp'''':''''my subprop'''',''''SuperProp'''':''''overrided superprop''''}'', newJson)", span="2253-2253"];
m6_1087 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", span="2242-2242"];
m6_3181 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", span="7202-7202"];
m6_3182 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="ReadTests.cs", label="IDictionary<DateTime, int> dic1 = new Dictionary<DateTime, int>\r\n        {\r\n          {new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc), 1},\r\n          {new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc), 2}\r\n        }", span="7204-7208"];
m6_3183 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(dic1, Formatting.Indented, new JsonSerializerSettings\r\n      {\r\n        DateFormatHandling = DateFormatHandling.MicrosoftDateFormat\r\n      })", span="7210-7213"];
m6_3184 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="ReadTests.cs", label="Assert.AreEqual(@''{\r\n  ''''\/Date(976623132000)\/'''': 1,\r\n  ''''\/Date(1386850332000)\/'''': 2\r\n}'', json)", span="7215-7218"];
m6_3185 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="ReadTests.cs", label="IDictionary<DateTime, int> dic2 = JsonConvert.DeserializeObject<IDictionary<DateTime, int>>(json)", span="7220-7220"];
m6_3186 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="ReadTests.cs", label="Assert.AreEqual(2, dic2.Count)", span="7222-7222"];
m6_3187 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="ReadTests.cs", label="Assert.AreEqual(1, dic2[new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", span="7223-7223"];
m6_3188 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="ReadTests.cs", label="Assert.AreEqual(2, dic2[new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", span="7224-7224"];
m6_3189 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", span="7202-7202"];
m6_3910 [cluster="System.Type.GetType(string)", file="ReadTests.cs", label="Entry System.Type.GetType(string)", span="0-0"];
m6_606 [cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime)", file="ReadTests.cs", label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime)", span="0-0"];
m6_2674 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", span="6193-6193"];
m6_2675 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="ReadTests.cs", label="UriGuidTimeSpanTestClass c1 = new UriGuidTimeSpanTestClass()", span="6195-6195"];
m6_2676 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="6196-6196"];
m6_2679 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="ReadTests.cs", label="Assert.AreEqual(c1.Guid, c2.Guid)", span="6207-6207"];
m6_2680 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="ReadTests.cs", label="Assert.AreEqual(c1.NullableGuid, c2.NullableGuid)", span="6208-6208"];
m6_2681 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="ReadTests.cs", label="Assert.AreEqual(c1.TimeSpan, c2.TimeSpan)", span="6209-6209"];
m6_2682 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="ReadTests.cs", label="Assert.AreEqual(c1.NullableTimeSpan, c2.NullableTimeSpan)", span="6210-6210"];
m6_2683 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="ReadTests.cs", label="Assert.AreEqual(c1.Uri, c2.Uri)", span="6211-6211"];
m6_2677 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="ReadTests.cs", label="Assert.AreEqual(@''{\r\n  ''''Guid'''': ''''00000000-0000-0000-0000-000000000000'''',\r\n  ''''NullableGuid'''': null,\r\n  ''''TimeSpan'''': ''''00:00:00'''',\r\n  ''''NullableTimeSpan'''': null,\r\n  ''''Uri'''': null\r\n}'', json)", span="6198-6204"];
m6_2678 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="ReadTests.cs", label="UriGuidTimeSpanTestClass c2 = JsonConvert.DeserializeObject<UriGuidTimeSpanTestClass>(json)", span="6206-6206"];
m6_2684 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", span="6193-6193"];
m6_3862 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", span="9101-9101"];
m6_3863 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="ReadTests.cs", label="string json = @''[\r\n  {\r\n    ''''$id'''': ''''0b64ffdf-d155-44ad-9689-58d9adb137f3'''',\r\n    ''''Name'''': ''''John Smith'''',\r\n    ''''Spouse'''': {\r\n      ''''$id'''': ''''ae3c399c-058d-431d-91b0-a36c266441b9'''',\r\n      ''''Name'''': ''''Jane Smith'''',\r\n      ''''Spouse'''': {\r\n        ''''$ref'''': ''''0b64ffdf-d155-44ad-9689-58d9adb137f3''''\r\n      }\r\n    }\r\n  },\r\n  {\r\n    ''''$ref'''': ''''ae3c399c-058d-431d-91b0-a36c266441b9''''\r\n  }\r\n]''", span="9103-9118"];
m6_3864 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="ReadTests.cs", label="IList<PersonReference> people = JsonConvert.DeserializeObject<IList<PersonReference>>(json, new JsonSerializerSettings\r\n      {\r\n        ReferenceResolver = new IdReferenceResolver(),\r\n        PreserveReferencesHandling = PreserveReferencesHandling.Objects,\r\n        Formatting = Formatting.Indented\r\n      })", span="9120-9125"];
m6_3865 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="ReadTests.cs", label="Assert.AreEqual(2, people.Count)", span="9127-9127"];
m6_3866 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="ReadTests.cs", label="PersonReference john = people[0]", span="9129-9129"];
m6_3867 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="ReadTests.cs", label="PersonReference jane = people[1]", span="9130-9130"];
m6_3868 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="ReadTests.cs", label="Assert.AreEqual(john, jane.Spouse)", span="9132-9132"];
m6_3869 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="ReadTests.cs", label="Assert.AreEqual(jane, john.Spouse)", span="9133-9133"];
m6_3870 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", span="9101-9101"];
m6_1345 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", span="2891-2891"];
m6_1346 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", file="ReadTests.cs", label="string json = @''[]''", span="2893-2893"];
m6_1347 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", file="ReadTests.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'System.Exception' because the type requires a JSON object (e.g. {''''name'''':''''value''''}) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON object (e.g. {''''name'''':''''value''''}) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<Exception>(json);\r\n        })", span="2895-2902"];
m6_1348 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", span="2891-2891"];
m6_480 [cluster="Newtonsoft.Json.Tests.TestObjects.GetOnlyPropertyClass.GetOnlyPropertyClass()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.GetOnlyPropertyClass.GetOnlyPropertyClass()", span="27-27"];
m6_3372 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", span="7690-7690"];
m6_3373 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="ReadTests.cs", label="string json = @''[\r\n        1,\r\n        null\r\n      ]''", span="7692-7695"];
m6_3374 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="ReadTests.cs", label="var l = JsonConvert.DeserializeObject<IReadOnlyList<int?>>(json)", span="7697-7697"];
m6_3375 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="ReadTests.cs", label="Assert.AreEqual(1, l[0])", span="7699-7699"];
m6_3376 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="ReadTests.cs", label="Assert.AreEqual(null, l[1])", span="7700-7700"];
m6_3377 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", span="7690-7690"];
m6_4012 [cluster="Newtonsoft.Json.Tests.Serialization.IntToFloatConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.IntToFloatConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="9726-9726"];
m6_4013 [cluster="Newtonsoft.Json.Tests.Serialization.IntToFloatConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReadTests.cs", label="return Convert.ToInt32(reader.Value);", span="9728-9728"];
m6_4014 [cluster="Newtonsoft.Json.Tests.Serialization.IntToFloatConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.IntToFloatConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="9726-9726"];
m6_2429 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor()", span="5478-5478"];
m6_2430 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor()", file="ReadTests.cs", label="Constructor = ''NonPublic''", span="5480-5480"];
m6_2431 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor()", span="5478-5478"];
m6_1387 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", span="2978-2978"];
m6_1388 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="ReadTests.cs", label="string json = @''{}''", span="2980-2980"];
m6_1389 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="ReadTests.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        @''Cannot deserialize the current JSON object (e.g. {''''name'''':''''value''''}) into type 'System.Collections.Generic.List`1[Newtonsoft.Json.Tests.TestObjects.Person]' because the type requires a JSON array (e.g. [1,2,3]) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON array (e.g. [1,2,3]) or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.\r\nPath '', line 1, position 2.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<List<Person>>(json);\r\n        })", span="2982-2989"];
m6_1390 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", span="2978-2978"];
m6_86 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", span="253-253"];
m6_87 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="ReadTests.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings()", span="255-255"];
m6_88 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="ReadTests.cs", label="DefaultSerializationBinder customBinder = new DefaultSerializationBinder()", span="257-257"];
m6_89 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="ReadTests.cs", label="settings.Binder = customBinder", span="258-258"];
m6_90 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="ReadTests.cs", label="Assert.AreEqual(customBinder, settings.Binder)", span="259-259"];
m6_91 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="ReadTests.cs", label="settings.CheckAdditionalContent = true", span="261-261"];
m6_92 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="ReadTests.cs", label="Assert.AreEqual(true, settings.CheckAdditionalContent)", span="262-262"];
m6_93 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="ReadTests.cs", label="settings.ConstructorHandling = ConstructorHandling.AllowNonPublicDefaultConstructor", span="264-264"];
m6_94 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="ReadTests.cs", label="Assert.AreEqual(ConstructorHandling.AllowNonPublicDefaultConstructor, settings.ConstructorHandling)", span="265-265"];
m6_95 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="ReadTests.cs", label="settings.Context = new StreamingContext(StreamingContextStates.Other)", span="267-267"];
m6_96 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="ReadTests.cs", label="Assert.AreEqual(new StreamingContext(StreamingContextStates.Other), settings.Context)", span="268-268"];
m6_98 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="ReadTests.cs", label="settings.ContractResolver = resolver", span="271-271"];
m6_99 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="ReadTests.cs", label="Assert.AreEqual(resolver, settings.ContractResolver)", span="272-272"];
m6_100 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="ReadTests.cs", label="settings.Converters.Add(new StringEnumConverter())", span="274-274"];
m6_101 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="ReadTests.cs", label="Assert.AreEqual(1, settings.Converters.Count)", span="275-275"];
m6_102 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="ReadTests.cs", label="settings.Culture = new CultureInfo(''en-nz'')", span="277-277"];
m6_103 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="ReadTests.cs", label="Assert.AreEqual(''en-NZ'', settings.Culture.ToString())", span="278-278"];
m6_104 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="ReadTests.cs", label="settings.DateFormatHandling = DateFormatHandling.MicrosoftDateFormat", span="280-280"];
m6_105 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="ReadTests.cs", label="Assert.AreEqual(DateFormatHandling.MicrosoftDateFormat, settings.DateFormatHandling)", span="281-281"];
m6_106 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="ReadTests.cs", label="settings.DateFormatString = ''yyyy''", span="283-283"];
m6_107 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="ReadTests.cs", label="Assert.AreEqual(''yyyy'', settings.DateFormatString)", span="284-284"];
m6_108 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="ReadTests.cs", label="settings.DateParseHandling = DateParseHandling.None", span="286-286"];
m6_109 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="ReadTests.cs", label="Assert.AreEqual(DateParseHandling.None, settings.DateParseHandling)", span="287-287"];
m6_110 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="ReadTests.cs", label="settings.DateTimeZoneHandling = DateTimeZoneHandling.Utc", span="289-289"];
m6_111 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="ReadTests.cs", label="Assert.AreEqual(DateTimeZoneHandling.Utc, settings.DateTimeZoneHandling)", span="290-290"];
m6_112 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="ReadTests.cs", label="settings.DefaultValueHandling = DefaultValueHandling.IgnoreAndPopulate", span="292-292"];
m6_113 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="ReadTests.cs", label="Assert.AreEqual(DefaultValueHandling.IgnoreAndPopulate, settings.DefaultValueHandling)", span="293-293"];
m6_114 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="ReadTests.cs", label="settings.FloatFormatHandling = FloatFormatHandling.Symbol", span="295-295"];
m6_115 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="ReadTests.cs", label="Assert.AreEqual(FloatFormatHandling.Symbol, settings.FloatFormatHandling)", span="296-296"];
m6_116 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="ReadTests.cs", label="settings.FloatParseHandling = FloatParseHandling.Decimal", span="298-298"];
m6_117 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="ReadTests.cs", label="Assert.AreEqual(FloatParseHandling.Decimal, settings.FloatParseHandling)", span="299-299"];
m6_118 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="ReadTests.cs", label="settings.Formatting = Formatting.Indented", span="301-301"];
m6_119 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="ReadTests.cs", label="Assert.AreEqual(Formatting.Indented, settings.Formatting)", span="302-302"];
m6_120 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="ReadTests.cs", label="settings.MaxDepth = 9001", span="304-304"];
m6_121 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="ReadTests.cs", label="Assert.AreEqual(9001, settings.MaxDepth)", span="305-305"];
m6_122 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="ReadTests.cs", label="settings.MissingMemberHandling = MissingMemberHandling.Error", span="307-307"];
m6_123 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="ReadTests.cs", label="Assert.AreEqual(MissingMemberHandling.Error, settings.MissingMemberHandling)", span="308-308"];
m6_124 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="ReadTests.cs", label="settings.NullValueHandling = NullValueHandling.Ignore", span="310-310"];
m6_125 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="ReadTests.cs", label="Assert.AreEqual(NullValueHandling.Ignore, settings.NullValueHandling)", span="311-311"];
m6_126 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="ReadTests.cs", label="settings.ObjectCreationHandling = ObjectCreationHandling.Replace", span="313-313"];
m6_127 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="ReadTests.cs", label="Assert.AreEqual(ObjectCreationHandling.Replace, settings.ObjectCreationHandling)", span="314-314"];
m6_128 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="ReadTests.cs", label="settings.PreserveReferencesHandling = PreserveReferencesHandling.All", span="316-316"];
m6_129 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="ReadTests.cs", label="Assert.AreEqual(PreserveReferencesHandling.All, settings.PreserveReferencesHandling)", span="317-317"];
m6_130 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="ReadTests.cs", label="settings.ReferenceLoopHandling = ReferenceLoopHandling.Ignore", span="319-319"];
m6_131 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="ReadTests.cs", label="Assert.AreEqual(ReferenceLoopHandling.Ignore, settings.ReferenceLoopHandling)", span="320-320"];
m6_133 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="ReadTests.cs", label="settings.ReferenceResolver = referenceResolver", span="323-323"];
m6_134 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="ReadTests.cs", label="Assert.AreEqual(referenceResolver, settings.ReferenceResolver)", span="324-324"];
m6_135 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="ReadTests.cs", label="settings.StringEscapeHandling = StringEscapeHandling.EscapeNonAscii", span="326-326"];
m6_136 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="ReadTests.cs", label="Assert.AreEqual(StringEscapeHandling.EscapeNonAscii, settings.StringEscapeHandling)", span="327-327"];
m6_138 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="ReadTests.cs", label="settings.TraceWriter = traceWriter", span="330-330"];
m6_139 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="ReadTests.cs", label="Assert.AreEqual(traceWriter, settings.TraceWriter)", span="331-331"];
m6_140 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="ReadTests.cs", label="settings.TypeNameAssemblyFormat = FormatterAssemblyStyle.Full", span="334-334"];
m6_141 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="ReadTests.cs", label="Assert.AreEqual(FormatterAssemblyStyle.Full, settings.TypeNameAssemblyFormat)", span="335-335"];
m6_142 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="ReadTests.cs", label="settings.TypeNameHandling = TypeNameHandling.All", span="338-338"];
m6_143 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="ReadTests.cs", label="Assert.AreEqual(TypeNameHandling.All, settings.TypeNameHandling)", span="339-339"];
m6_97 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="ReadTests.cs", label="CamelCasePropertyNamesContractResolver resolver = new CamelCasePropertyNamesContractResolver()", span="270-270"];
m6_132 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="ReadTests.cs", label="IdReferenceResolver referenceResolver = new IdReferenceResolver()", span="322-322"];
m6_137 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="ReadTests.cs", label="MemoryTraceWriter traceWriter = new MemoryTraceWriter()", span="329-329"];
m6_144 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", span="253-253"];
m6_2362 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", span="5294-5294"];
m6_2363 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="ReadTests.cs", label="var derived = new Derived(''meh'', ''woo'')", span="5296-5296"];
m6_2364 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="ReadTests.cs", label="var settings = new JsonSerializerSettings\r\n        {\r\n          TypeNameHandling = TypeNameHandling.Objects,\r\n          ConstructorHandling = ConstructorHandling.AllowNonPublicDefaultConstructor\r\n        }", span="5298-5302"];
m6_2365 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(derived, Formatting.Indented, settings)", span="5304-5304"];
m6_2366 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="ReadTests.cs", label="var meh = JsonConvert.DeserializeObject<Base>(json, settings)", span="5306-5306"];
m6_2367 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="ReadTests.cs", label="Assert.AreEqual(((Derived)meh).IDoWork, ''woo'')", span="5308-5308"];
m6_2368 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="ReadTests.cs", label="Assert.AreEqual(meh.IDontWork, ''meh'')", span="5309-5309"];
m6_2369 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", span="5294-5294"];
m6_1373 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", span="2952-2952"];
m6_1374 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", file="ReadTests.cs", label="string json = @''new Constructor(123)''", span="2954-2954"];
m6_1375 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", file="ReadTests.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        @''Error converting value ''''Constructor'''' to type 'Newtonsoft.Json.Tests.TestObjects.Person'. Path '', line 1, position 16.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<Person>(json);\r\n        })", span="2956-2961"];
m6_1376 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", span="2952-2952"];
m6_1727 [cluster="System.Runtime.Serialization.SerializationInfo.GetUInt32(string)", file="ReadTests.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetUInt32(string)", span="0-0"];
m6_894 [cluster="Newtonsoft.Json.Tests.TestObjects.ClassAndMemberConverterClass.ClassAndMemberConverterClass()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ClassAndMemberConverterClass.ClassAndMemberConverterClass()", span="27-27"];
m6_2337 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.ToString()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.ToString()", span="5234-5234"];
m6_2338 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.ToString()", file="ReadTests.cs", label="return string.Format(''({0},{1},{2})'', X, Y, Z);", span="5236-5236"];
m6_2339 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.ToString()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.ToString()", span="5234-5234"];
m6_2020 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.CanConvert(System.Type)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.CanConvert(System.Type)", span="4529-4529"];
m6_2021 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.CanConvert(System.Type)", file="ReadTests.cs", label="return (objectType == typeof(List<string>));", span="4531-4531"];
m6_2022 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.CanConvert(System.Type)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.CanConvert(System.Type)", span="4529-4529"];
m6_380 [cluster="System.IO.MemoryStream.MemoryStream()", file="ReadTests.cs", label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0"];
m6_4105 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.Parse(string, System.IFormatProvider)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Ratio.Parse(string, System.IFormatProvider)", span="9974-9974"];
m6_4106 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.Parse(string, System.IFormatProvider)", file="ReadTests.cs", label="Ratio result", span="9976-9976"];
m6_4107 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.Parse(string, System.IFormatProvider)", file="ReadTests.cs", label="!TryParse(input, formatProvider, out result)", span="9977-9977"];
m6_4108 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.Parse(string, System.IFormatProvider)", file="ReadTests.cs", label="throw new FormatException(\r\n            string.Format(\r\n                CultureInfo.InvariantCulture,\r\n                ''Text '{0}' is invalid text representation of ratio'',\r\n                input));", span="9979-9983"];
m6_4109 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.Parse(string, System.IFormatProvider)", file="ReadTests.cs", label="return result;", span="9985-9985"];
m6_4110 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.Parse(string, System.IFormatProvider)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.Ratio.Parse(string, System.IFormatProvider)", span="9974-9974"];
m6_3346 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", span="7611-7611"];
m6_3347 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", file="ReadTests.cs", label="m_Item1 = item1", span="7613-7613"];
m6_3348 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", span="7611-7611"];
m6_2616 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CollectionClassAttributeDerived()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CollectionClassAttributeDerived()", span="5960-5960"];
m6_2571 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", span="5915-5915"];
m6_2572 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", file="ReadTests.cs", label="Title = title", span="5917-5917"];
m6_2573 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", file="ReadTests.cs", label="Categories = new Dictionary<string, int>()", span="5918-5918"];
m6_2574 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", span="5915-5915"];
m6_3843 [cluster="System.Guid.ToString()", file="ReadTests.cs", label="Entry System.Guid.ToString()", span="0-0"];
m6_3615 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloats.NullableFloats()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloats.NullableFloats()", span="8435-8435"];
m6_2126 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Employee.ShouldSerializeManager()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Employee.ShouldSerializeManager()", span="4726-4726"];
m6_2127 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Employee.ShouldSerializeManager()", file="ReadTests.cs", label="return (Manager != this);", span="4728-4728"];
m6_2128 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Employee.ShouldSerializeManager()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Employee.ShouldSerializeManager()", span="4726-4726"];
m6_2332 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", span="5221-5221"];
m6_2333 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="ReadTests.cs", label="string json = ''{'Value':123456789876543.21}''", span="5223-5223"];
m6_2334 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="ReadTests.cs", label="IDictionary<string, decimal> d = JsonConvert.DeserializeObject<IDictionary<string, decimal>>(json)", span="5224-5224"];
m6_2335 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="ReadTests.cs", label="Assert.AreEqual(123456789876543.21m, d[''Value''])", span="5225-5225"];
m6_2336 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", span="5221-5221"];
m6_2622 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", span="6047-6047"];
m6_2623 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", file="ReadTests.cs", label="_readonlyString = ''default!''", span="6049-6049"];
m6_2624 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", span="6047-6047"];
m6_3924 [cluster="System.ComponentModel.TypeConverter.ConvertFromInvariantString(string)", file="ReadTests.cs", label="Entry System.ComponentModel.TypeConverter.ConvertFromInvariantString(string)", span="0-0"];
m6_597 [cluster="System.IO.MemoryStream.Seek(long, System.IO.SeekOrigin)", file="ReadTests.cs", label="Entry System.IO.MemoryStream.Seek(long, System.IO.SeekOrigin)", span="0-0"];
m6_1720 [cluster="System.Runtime.Serialization.SerializationInfo.GetDateTime(string)", file="ReadTests.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetDateTime(string)", span="0-0"];
m6_531 [cluster="Newtonsoft.Json.Tests.TestObjects.BadJsonPropertyClass.BadJsonPropertyClass()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.BadJsonPropertyClass.BadJsonPropertyClass()", span="27-27"];
m6_3831 [cluster="System.DateTime.Parse(string, System.IFormatProvider)", file="ReadTests.cs", label="Entry System.DateTime.Parse(string, System.IFormatProvider)", span="0-0"];
m6_759 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", span="1596-1596"];
m6_760 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="ReadTests.cs", label="TimeSpan ts = new TimeSpan(00, 23, 59, 1)", span="1598-1598"];
m6_761 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(new ClassWithTimeSpan { TimeSpanField = ts }, Formatting.Indented)", span="1600-1600"];
m6_764 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="ReadTests.cs", label="Assert.AreEqual(ts, c.TimeSpanField)", span="1606-1606"];
m6_762 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="ReadTests.cs", label="Assert.AreEqual(@''{\r\n  ''''TimeSpanField'''': ''''23:59:01''''\r\n}'', json)", span="1601-1603"];
m6_763 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="ReadTests.cs", label="ClassWithTimeSpan c = JsonConvert.DeserializeObject<ClassWithTimeSpan>(json)", span="1605-1605"];
m6_765 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", span="1596-1596"];
m6_226 [cluster="System.Text.RegularExpressions.Regex.Regex(string, System.Text.RegularExpressions.RegexOptions)", file="ReadTests.cs", label="Entry System.Text.RegularExpressions.Regex.Regex(string, System.Text.RegularExpressions.RegexOptions)", span="0-0"];
m6_3378 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", span="7705-7705"];
m6_3379 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="ReadTests.cs", label="var tuple = new MyTuple<int>(500)", span="7707-7707"];
m6_3380 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="ReadTests.cs", label="var json = JsonConvert.SerializeObject(tuple)", span="7708-7708"];
m6_3381 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="ReadTests.cs", label="Assert.AreEqual(@''{''''m_Item1'''':500}'', json)", span="7709-7709"];
m6_3383 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="ReadTests.cs", label="Action doStuff = () =>\r\n      {\r\n        obj = JsonConvert.DeserializeObject<MyTuple<int>>(json);\r\n      }", span="7713-7716"];
m6_3382 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="ReadTests.cs", label="MyTuple<int> obj = null", span="7711-7711"];
m6_3384 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="ReadTests.cs", label="doStuff()", span="7719-7719"];
m6_3385 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="ReadTests.cs", label="Assert.AreEqual(500, obj.Item1)", span="7720-7720"];
m6_3386 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", span="7705-7705"];
m6_1694 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="3797-3797"];
m6_1695 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReadTests.cs", label="_stringValue = info.GetString(''stringValue'')", span="3799-3799"];
m6_1696 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReadTests.cs", label="_intValue = info.GetInt32(''intValue'')", span="3800-3800"];
m6_1697 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReadTests.cs", label="_dateTimeOffsetValue = (DateTimeOffset)info.GetValue(''dateTimeOffsetValue'', typeof(DateTimeOffset))", span="3801-3801"];
m6_1698 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReadTests.cs", label="_personValue = (Person)info.GetValue(''personValue'', typeof(Person))", span="3802-3802"];
m6_1699 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReadTests.cs", label="_nullPersonValue = (Person)info.GetValue(''nullPersonValue'', typeof(Person))", span="3803-3803"];
m6_1700 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReadTests.cs", label="_nullableInt = (int?)info.GetValue(''nullableInt'', typeof(int?))", span="3804-3804"];
m6_1701 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReadTests.cs", label="_booleanValue = info.GetBoolean(''booleanValue'')", span="3806-3806"];
m6_1702 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReadTests.cs", label="_byteValue = info.GetByte(''byteValue'')", span="3807-3807"];
m6_1703 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReadTests.cs", label="_charValue = info.GetChar(''charValue'')", span="3808-3808"];
m6_1704 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReadTests.cs", label="_dateTimeValue = info.GetDateTime(''dateTimeValue'')", span="3809-3809"];
m6_1705 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReadTests.cs", label="_decimalValue = info.GetDecimal(''decimalValue'')", span="3810-3810"];
m6_1706 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReadTests.cs", label="_shortValue = info.GetInt16(''shortValue'')", span="3811-3811"];
m6_1707 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReadTests.cs", label="_longValue = info.GetInt64(''longValue'')", span="3812-3812"];
m6_1708 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReadTests.cs", label="_sbyteValue = info.GetSByte(''sbyteValue'')", span="3813-3813"];
m6_1709 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReadTests.cs", label="_floatValue = info.GetSingle(''floatValue'')", span="3814-3814"];
m6_1710 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReadTests.cs", label="_ushortValue = info.GetUInt16(''ushortValue'')", span="3815-3815"];
m6_1711 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReadTests.cs", label="_uintValue = info.GetUInt32(''uintValue'')", span="3816-3816"];
m6_1712 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReadTests.cs", label="_ulongValue = info.GetUInt64(''ulongValue'')", span="3817-3817"];
m6_1713 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="3797-3797"];
m6_208 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", span="434-434"];
m6_209 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="ReadTests.cs", label="Ratio ratio = new Ratio(2, 1)", span="436-436"];
m6_210 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(ratio)", span="437-437"];
m6_213 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="ReadTests.cs", label="Assert.AreEqual(ratio.Denominator, ratio2.Denominator)", span="443-443"];
m6_211 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="ReadTests.cs", label="Assert.AreEqual(@''{''''n'''':2,''''d'''':1}'', json)", span="439-439"];
m6_212 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="ReadTests.cs", label="Ratio ratio2 = JsonConvert.DeserializeObject<Ratio>(json)", span="441-441"];
m6_214 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="ReadTests.cs", label="Assert.AreEqual(ratio.Numerator, ratio2.Numerator)", span="444-444"];
m6_215 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", span="434-434"];
m6_2918 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", span="6666-6666"];
m6_2919 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="ReadTests.cs", label="var serializer = JsonSerializer.Create(new JsonSerializerSettings())", span="6668-6668"];
m6_2920 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="ReadTests.cs", label="var dict = serializer.Deserialize<Dictionary<string, string>>(new JsonTextReader(new StringReader(''{'k1':'','k2':'v2'}'')))", span="6669-6669"];
m6_2921 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="ReadTests.cs", label="Assert.AreEqual('''', dict[''k1''])", span="6671-6671"];
m6_2922 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="ReadTests.cs", label="Assert.AreEqual(''v2'', dict[''k2''])", span="6672-6672"];
m6_2923 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", span="6666-6666"];
m6_2600 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Remove(object)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Remove(object)", span="5995-5995"];
m6_2601 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Remove(object)", file="ReadTests.cs", label="throw new NotImplementedException();", span="5997-5997"];
m6_2602 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Remove(object)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Remove(object)", span="5995-5995"];
m6_3190 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", span="7228-7228"];
m6_3191 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", file="ReadTests.cs", label="string s = (string) new JsonSerializer().Deserialize(new JsonTextReader(new StringReader('''''')))", span="7230-7230"];
m6_3192 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", file="ReadTests.cs", label="Assert.AreEqual('''', s)", span="7231-7231"];
m6_3193 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", span="7228-7228"];
m6_742 [cluster="System.Collections.Generic.Stack<T>.Stack()", file="ReadTests.cs", label="Entry System.Collections.Generic.Stack<T>.Stack()", span="0-0"];
m6_3303 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", span="7509-7509"];
m6_3304 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="ReadTests.cs", label="KeyValuePair<int, string> result =\r\n        JsonConvert.DeserializeObject<KeyValuePair<int, string>>(\r\n          ''{key: 123, \''VALUE\'': \''test value\''}''\r\n          )", span="7511-7514"];
m6_3305 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="ReadTests.cs", label="Assert.AreEqual(123, result.Key)", span="7516-7516"];
m6_3306 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="ReadTests.cs", label="Assert.AreEqual(''test value'', result.Value)", span="7517-7517"];
m6_3307 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", span="7509-7509"];
m6_1621 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary()", span="3634-3634"];
m6_1622 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary()", span="3634-3634"];
m6_2697 [cluster="System.TimeSpan.FromDays(double)", file="ReadTests.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m6_424 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", span="949-949"];
m6_425 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="ReadTests.cs", label="string value = @''{''''Name'''':''''Orange'''', ''''Price'''':3.99, ''''ExpiryDate'''':''''01/24/2010 12:00:00''''}''", span="951-951"];
m6_426 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="ReadTests.cs", label="Product p = JsonConvert.DeserializeObject(value, typeof(Product)) as Product", span="953-953"];
m6_427 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="ReadTests.cs", label="Assert.AreEqual(''Orange'', p.Name)", span="955-955"];
m6_428 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="ReadTests.cs", label="Assert.AreEqual(new DateTime(2010, 1, 24, 12, 0, 0), p.ExpiryDate)", span="956-956"];
m6_429 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="ReadTests.cs", label="Assert.AreEqual(3.99m, p.Price)", span="957-957"];
m6_430 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", span="949-949"];
m6_1039 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", span="2141-2141"];
m6_1040 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", file="ReadTests.cs", label="Person person = new Person\r\n        {\r\n          Name = ''Mike Manager'',\r\n          BirthDate = new DateTime(1983, 8, 3, 0, 0, 0, DateTimeKind.Utc),\r\n          Department = ''IT'',\r\n          LastModified = new DateTime(2009, 2, 15, 0, 0, 0, DateTimeKind.Utc)\r\n        }", span="2143-2149"];
m6_1041 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", file="ReadTests.cs", label="return person;", span="2150-2150"];
m6_1042 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", span="2141-2141"];
m6_390 [cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="393-393"];
m6_3516 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithBadItems()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithBadItems()", span="8137-8137"];
m6_3517 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithBadItems()", file="ReadTests.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[[1,1,1],[1,1,2]],[[1,2,1],[1,2,2]],[[2,1,1],[2,1,2]],[[2,2,1],{}]],''''After'''':''''After!''''}''", span="8139-8139"];
m6_3518 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithBadItems()", file="ReadTests.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''Unexpected token when deserializing multidimensional array: StartObject. Path 'Coordinates[3][1]', line 1, position 99.'',\r\n        () => JsonConvert.DeserializeObject<Array3D>(json))", span="8141-8143"];
m6_3519 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithBadItems()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithBadItems()", span="8137-8137"];
m6_486 [cluster="Newtonsoft.Json.Tests.TestObjects.SetOnlyPropertyClass.SetOnlyPropertyClass()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.SetOnlyPropertyClass.SetOnlyPropertyClass()", span="27-27"];
m6_2803 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="ReadTests.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="779-779"];
m6_3696 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeInheritedClassTest()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeInheritedClassTest()", span="8690-8690"];
m6_3697 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeInheritedClassTest()", file="ReadTests.cs", label="NewEmployee joe = new NewEmployee()", span="8692-8692"];
m6_3698 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeInheritedClassTest()", file="ReadTests.cs", label="joe.Name = ''Joe Employee''", span="8693-8693"];
m6_3699 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeInheritedClassTest()", file="ReadTests.cs", label="joe.Age = 100", span="8694-8694"];
m6_3703 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeInheritedClassTest()", file="ReadTests.cs", label="joe.Manager = mike", span="8700-8700"];
m6_3704 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeInheritedClassTest()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(joe, Formatting.Indented)", span="8712-8712"];
m6_3700 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeInheritedClassTest()", file="ReadTests.cs", label="Employee mike = new Employee()", span="8696-8696"];
m6_3701 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeInheritedClassTest()", file="ReadTests.cs", label="mike.Name = ''Mike Manager''", span="8697-8697"];
m6_3702 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeInheritedClassTest()", file="ReadTests.cs", label="mike.Manager = mike", span="8698-8698"];
m6_3705 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeInheritedClassTest()", file="ReadTests.cs", label="Assert.AreEqual(@''{\r\n  ''''Age'''': 100,\r\n  ''''Name'''': ''''Joe Employee'''',\r\n  ''''Manager'''': {\r\n    ''''Name'''': ''''Mike Manager''''\r\n  }\r\n}'', json)", span="8714-8720"];
m6_3706 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeInheritedClassTest()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeInheritedClassTest()", span="8690-8690"];
m6_3999 [cluster="string.ToLower(System.Globalization.CultureInfo)", file="ReadTests.cs", label="Entry string.ToLower(System.Globalization.CultureInfo)", span="0-0"];
m6_996 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", span="2037-2037"];
m6_997 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="ReadTests.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''Required property 'LastName' not found in JSON. Path '', line 3, position 2.'',\r\n        () =>\r\n        {\r\n          string json = @''{\r\n  ''''FirstName'''': ''''Bob''''\r\n}'';\r\n\r\n          JsonConvert.DeserializeObject<RequiredMembersClass>(json);\r\n        })", span="2039-2048"];
m6_998 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", span="2037-2037"];
m6_2418 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor()", span="5454-5454"];
m6_2419 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor()", file="ReadTests.cs", label="Constructor = ''NonPublic''", span="5456-5456"];
m6_2420 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor()", span="5454-5454"];
m6_988 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", span="2017-2017"];
m6_989 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", file="ReadTests.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''Cannot write a null value for property 'FirstName'. Property requires a value. Path ''.'',\r\n        () =>\r\n        {\r\n          RequiredMembersClass requiredMembersClass = new RequiredMembersClass\r\n            {\r\n              FirstName = null,\r\n              BirthDate = new DateTime(2000, 10, 10, 10, 10, 10, DateTimeKind.Utc),\r\n              LastName = null,\r\n              MiddleName = null\r\n            };\r\n\r\n          string json = JsonConvert.SerializeObject(requiredMembersClass);\r\n          Console.WriteLine(json);\r\n        })", span="2019-2033"];
m6_990 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", span="2017-2017"];
m6_3296 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.CanConvert(System.Type)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.CanConvert(System.Type)", span="7489-7489"];
m6_3297 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.CanConvert(System.Type)", file="ReadTests.cs", label="return true;", span="7491-7491"];
m6_3298 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.CanConvert(System.Type)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.CanConvert(System.Type)", span="7489-7489"];
m6_2373 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="5330-5330"];
m6_2374 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReadTests.cs", label="info.AddValue(''Name'', _name)", span="5332-5332"];
m6_2375 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="5330-5330"];
m6_545 [cluster="System.Collections.Generic.List<T>.Add(T)", file="ReadTests.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m6_1918 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pos.Pos()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pos.Pos()", span="4335-4335"];
m6_343 [cluster="System.Console.WriteLine(string)", file="ReadTests.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m6_2037 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="4558-4558"];
m6_2038 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReadTests.cs", label="string existingString = (string)existingValue", span="4560-4560"];
m6_2039 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReadTests.cs", label="string newString = existingString + (string)reader.Value", span="4561-4561"];
m6_2040 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReadTests.cs", label="return newString;", span="4563-4563"];
m6_2041 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="4558-4558"];
m6_3387 [cluster="System.Action.Invoke()", file="ReadTests.cs", label="Entry System.Action.Invoke()", span="0-0"];
m6_4079 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.ToString(System.IFormatProvider)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Ratio.ToString(System.IFormatProvider)", span="9928-9928"];
m6_4080 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.ToString(System.IFormatProvider)", file="ReadTests.cs", label="return this._denominator == 1\r\n          ? this._numerator.ToString(provider)\r\n          : this._numerator.ToString(provider) + ''/'' + this._denominator.ToString(provider);", span="9930-9932"];
m6_4081 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.ToString(System.IFormatProvider)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.Ratio.ToString(System.IFormatProvider)", span="9928-9928"];
m6_3034 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", span="6890-6890"];
m6_3035 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="ReadTests.cs", label="var person = PersonWithPrivateConstructor.CreatePerson()", span="6892-6892"];
m6_3036 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="ReadTests.cs", label="person.Name = ''John Doe''", span="6893-6893"];
m6_3037 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="ReadTests.cs", label="person.Age = 25", span="6894-6894"];
m6_3038 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="ReadTests.cs", label="var serializedPerson = JsonConvert.SerializeObject(person)", span="6896-6896"];
m6_3040 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="ReadTests.cs", label="Assert.AreEqual(person.Name, roundtrippedPerson.Name)", span="6899-6899"];
m6_3039 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="ReadTests.cs", label="var roundtrippedPerson = JsonConvert.DeserializeObject<PersonWithPrivateConstructor>(serializedPerson)", span="6897-6897"];
m6_3041 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", span="6890-6890"];
m6_4 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericClass<T, TValue>.GetEnumerator()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericClass<T, TValue>.GetEnumerator()", span="114-114"];
m6_5 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericClass<T, TValue>.GetEnumerator()", file="ReadTests.cs", label="Items != null", span="116-116"];
m6_7 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericClass<T, TValue>.GetEnumerator()", file="ReadTests.cs", label="yield return item;", span="120-120"];
m6_8 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericClass<T, TValue>.GetEnumerator()", file="ReadTests.cs", label="yield break;", span="124-124"];
m6_6 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericClass<T, TValue>.GetEnumerator()", file="ReadTests.cs", label=Items, span="118-118"];
m6_9 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericClass<T, TValue>.GetEnumerator()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericClass<T, TValue>.GetEnumerator()", span="114-114"];
m6_4024 [cluster="Newtonsoft.Json.Tests.Serialization.DirectoryAccount.OnDeserialized(System.Runtime.Serialization.StreamingContext)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.DirectoryAccount.OnDeserialized(System.Runtime.Serialization.StreamingContext)", span="9804-9804"];
m6_4025 [cluster="Newtonsoft.Json.Tests.Serialization.DirectoryAccount.OnDeserialized(System.Runtime.Serialization.StreamingContext)", file="ReadTests.cs", label="string samAccountName = (string)_additionalData[''SAMAccountName'']", span="9808-9808"];
m6_4026 [cluster="Newtonsoft.Json.Tests.Serialization.DirectoryAccount.OnDeserialized(System.Runtime.Serialization.StreamingContext)", file="ReadTests.cs", label="Domain = samAccountName.Split('\\')[0]", span="9810-9810"];
m6_4027 [cluster="Newtonsoft.Json.Tests.Serialization.DirectoryAccount.OnDeserialized(System.Runtime.Serialization.StreamingContext)", file="ReadTests.cs", label="UserName = samAccountName.Split('\\')[1]", span="9811-9811"];
m6_4028 [cluster="Newtonsoft.Json.Tests.Serialization.DirectoryAccount.OnDeserialized(System.Runtime.Serialization.StreamingContext)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.DirectoryAccount.OnDeserialized(System.Runtime.Serialization.StreamingContext)", span="9804-9804"];
m6_1193 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", span="2530-2530"];
m6_1194 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="ReadTests.cs", label="string json = @''/*comment*/ { /*comment*/\r\n        ''''Name'''': /*comment*/ ''''Apple'''' /*comment*/, /*comment*/\r\n        ''''ExpiryDate'''': ''''\/Date(1230422400000)\/'''',\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''': /*comment*/ [ /*comment*/\r\n          ''''Small'''', /*comment*/\r\n          ''''Medium'''' /*comment*/,\r\n          /*comment*/ ''''Large''''\r\n        /*comment*/ ] /*comment*/\r\n      } /*comment*/''", span="2532-2541"];
m6_1195 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="ReadTests.cs", label="Product deserializedProduct = (Product)JsonConvert.DeserializeObject(json, typeof(Product))", span="2543-2543"];
m6_1196 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="ReadTests.cs", label="Assert.AreEqual(''Apple'', deserializedProduct.Name)", span="2545-2545"];
m6_1197 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="ReadTests.cs", label="Assert.AreEqual(new DateTime(2008, 12, 28, 0, 0, 0, DateTimeKind.Utc), deserializedProduct.ExpiryDate)", span="2546-2546"];
m6_1198 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="ReadTests.cs", label="Assert.AreEqual(3.99m, deserializedProduct.Price)", span="2547-2547"];
m6_1199 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="ReadTests.cs", label="Assert.AreEqual(''Small'', deserializedProduct.Sizes[0])", span="2548-2548"];
m6_1200 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="ReadTests.cs", label="Assert.AreEqual(''Medium'', deserializedProduct.Sizes[1])", span="2549-2549"];
m6_1201 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="ReadTests.cs", label="Assert.AreEqual(''Large'', deserializedProduct.Sizes[2])", span="2550-2550"];
m6_1202 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", span="2530-2530"];
m6_3556 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIncompleteNotTopLevel3DArray()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIncompleteNotTopLevel3DArray()", span="8198-8198"];
m6_3557 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIncompleteNotTopLevel3DArray()", file="ReadTests.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[/*hi*/[/*hi*/''", span="8200-8200"];
m6_3558 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIncompleteNotTopLevel3DArray()", file="ReadTests.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''Unexpected end when deserializing array. Path 'Coordinates[0]', line 1, position 48.'',\r\n        () => JsonConvert.DeserializeObject<Array3D>(json))", span="8202-8204"];
m6_3559 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIncompleteNotTopLevel3DArray()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIncompleteNotTopLevel3DArray()", span="8198-8198"];
m6_397 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", span="884-884"];
m6_398 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="ReadTests.cs", label="Store store = new Store()", span="886-886"];
m6_399 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="ReadTests.cs", label="string jsonText = JsonConvert.SerializeObject(store)", span="888-888"];
m6_401 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="ReadTests.cs", label="Assert.AreEqual(store.Establised, deserializedStore.Establised)", span="892-892"];
m6_402 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="ReadTests.cs", label="Assert.AreEqual(store.product.Count, deserializedStore.product.Count)", span="893-893"];
m6_400 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="ReadTests.cs", label="Store deserializedStore = (Store)JsonConvert.DeserializeObject(jsonText, typeof(Store))", span="890-890"];
m6_403 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="ReadTests.cs", label="Console.WriteLine(jsonText)", span="895-895"];
m6_404 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", span="884-884"];
m6_1896 [cluster="Unk.ToString", file="ReadTests.cs", label="Entry Unk.ToString", span=""];
m6_3219 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", span="7281-7281"];
m6_3220 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="ReadTests.cs", label="Event e = new Event\r\n        {\r\n          EventName = ''Blackadder III'',\r\n          Venue = ''Gryphon Theatre'',\r\n          Performances = new List<DateTime>\r\n            {\r\n              DateTimeUtils.ConvertJavaScriptTicksToDateTime(1336458600000),\r\n              DateTimeUtils.ConvertJavaScriptTicksToDateTime(1336545000000),\r\n              DateTimeUtils.ConvertJavaScriptTicksToDateTime(1336636800000)\r\n            }\r\n        }", span="7283-7293"];
m6_3221 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(e, Formatting.Indented)", span="7295-7295"];
m6_3222 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="ReadTests.cs", label="Assert.AreEqual(@''{\r\n  ''''EventName'''': ''''Blackadder III'''',\r\n  ''''Venue'''': ''''Gryphon Theatre'''',\r\n  ''''Performances'''': [\r\n    new Date(\r\n      1336458600000\r\n    ),\r\n    new Date(\r\n      1336545000000\r\n    ),\r\n    new Date(\r\n      1336636800000\r\n    )\r\n  ]\r\n}'', json)", span="7306-7320"];
m6_3223 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", span="7281-7281"];
m6_2450 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", span="5521-5521"];
m6_2451 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", file="ReadTests.cs", label="MultipleParamatrizedConstructorsJsonConstructor c = JsonConvert.DeserializeObject<MultipleParamatrizedConstructorsJsonConstructor>(''{Value:'value!', Age:1}'')", span="5523-5523"];
m6_2452 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", file="ReadTests.cs", label="Assert.AreEqual(''Public Paramatized 2'', c.Constructor)", span="5524-5524"];
m6_2453 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", file="ReadTests.cs", label="Assert.AreEqual(''value!'', c.Value)", span="5525-5525"];
m6_2454 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", file="ReadTests.cs", label="Assert.AreEqual(1, c.Age)", span="5526-5526"];
m6_2455 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", span="5521-5521"];
m6_706 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", span="1485-1485"];
m6_707 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="ReadTests.cs", label="ClassWithArray wibble = new ClassWithArray()", span="1487-1487"];
m6_708 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="ReadTests.cs", label="wibble.Foo = ''hello''", span="1488-1488"];
m6_709 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="ReadTests.cs", label="wibble.Bar.Add(1)", span="1489-1489"];
m6_710 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="ReadTests.cs", label="wibble.Bar.Add(2)", span="1490-1490"];
m6_711 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="ReadTests.cs", label="wibble.Bar.Add(3)", span="1491-1491"];
m6_712 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(wibble)", span="1492-1492"];
m6_713 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="ReadTests.cs", label="ClassWithArray wibbleOut = JsonConvert.DeserializeObject<ClassWithArray>(json)", span="1494-1494"];
m6_714 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="ReadTests.cs", label="Assert.AreEqual(''hello'', wibbleOut.Foo)", span="1495-1495"];
m6_715 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="ReadTests.cs", label="Assert.AreEqual(5, wibbleOut.Bar.Count)", span="1497-1497"];
m6_716 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="ReadTests.cs", label="Assert.AreEqual(int.MaxValue, wibbleOut.Bar[0])", span="1498-1498"];
m6_717 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="ReadTests.cs", label="Assert.AreEqual(int.MaxValue, wibbleOut.Bar[1])", span="1499-1499"];
m6_718 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="ReadTests.cs", label="Assert.AreEqual(1, wibbleOut.Bar[2])", span="1500-1500"];
m6_719 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="ReadTests.cs", label="Assert.AreEqual(2, wibbleOut.Bar[3])", span="1501-1501"];
m6_720 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="ReadTests.cs", label="Assert.AreEqual(3, wibbleOut.Bar[4])", span="1502-1502"];
m6_721 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", span="1485-1485"];
m6_1783 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", span="3980-3980"];
m6_1784 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="ReadTests.cs", label="Person person = new Person()", span="3982-3982"];
m6_1785 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="ReadTests.cs", label="person.BirthDate = new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc)", span="3983-3983"];
m6_1786 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="ReadTests.cs", label="person.LastModified = person.BirthDate", span="3984-3984"];
m6_1787 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="ReadTests.cs", label="person.Department = ''Department!''", span="3985-3985"];
m6_1788 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="ReadTests.cs", label="person.Name = ''Name!''", span="3986-3986"];
m6_1792 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="ReadTests.cs", label="ISerializableTestObject o = new ISerializableTestObject(''String!'', int.MinValue, dateTimeOffset, person)", span="3996-3996"];
m6_1789 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="ReadTests.cs", label="DateTimeOffset dateTimeOffset = new DateTimeOffset(2000, 12, 20, 22, 59, 59, TimeSpan.FromHours(2))", span="3988-3988"];
m6_1790 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="ReadTests.cs", label="string dateTimeOffsetText", span="3989-3989"];
m6_1798 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="ReadTests.cs", label="Assert.AreEqual(dateTimeOffset, o2._dateTimeOffsetValue)", span="4030-4030"];
m6_1791 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="ReadTests.cs", label="dateTimeOffsetText = @''\/Date(977345999000+0200)\/''", span="3991-3991"];
m6_1794 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="ReadTests.cs", label="Assert.AreEqual(@''{\r\n  ''''stringValue'''': ''''String!'''',\r\n  ''''intValue'''': -2147483648,\r\n  ''''dateTimeOffsetValue'''': '''''' + dateTimeOffsetText + @'''''',\r\n  ''''personValue'''': {\r\n    ''''Name'''': ''''Name!'''',\r\n    ''''BirthDate'''': ''''\/Date(946688461000)\/'''',\r\n    ''''LastModified'''': ''''\/Date(946688461000)\/''''\r\n  },\r\n  ''''nullPersonValue'''': null,\r\n  ''''nullableInt'''': null,\r\n  ''''booleanValue'''': false,\r\n  ''''byteValue'''': 0,\r\n  ''''charValue'''': ''''\u0000'''',\r\n  ''''dateTimeValue'''': ''''\/Date(-62135596800000)\/'''',\r\n  ''''decimalValue'''': 0.0,\r\n  ''''shortValue'''': 0,\r\n  ''''longValue'''': 0,\r\n  ''''sbyteValue'''': 0,\r\n  ''''floatValue'''': 0.0,\r\n  ''''ushortValue'''': 0,\r\n  ''''uintValue'''': 0,\r\n  ''''ulongValue'''': 0\r\n}'', json)", span="4002-4025"];
m6_1793 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings\r\n        {\r\n          DateFormatHandling = DateFormatHandling.MicrosoftDateFormat\r\n        })", span="3998-4001"];
m6_1795 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="ReadTests.cs", label="ISerializableTestObject o2 = JsonConvert.DeserializeObject<ISerializableTestObject>(json)", span="4027-4027"];
m6_1796 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="ReadTests.cs", label="Assert.AreEqual(''String!'', o2._stringValue)", span="4028-4028"];
m6_1797 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="ReadTests.cs", label="Assert.AreEqual(int.MinValue, o2._intValue)", span="4029-4029"];
m6_1799 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="ReadTests.cs", label="Assert.AreEqual(''Name!'', o2._personValue.Name)", span="4031-4031"];
m6_1800 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="ReadTests.cs", label="Assert.AreEqual(null, o2._nullPersonValue)", span="4032-4032"];
m6_1801 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="ReadTests.cs", label="Assert.AreEqual(null, o2._nullableInt)", span="4033-4033"];
m6_1802 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", span="3980-3980"];
m6_3610 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", span="8446-8446"];
m6_3611 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="ReadTests.cs", label="NullableFloats floats = new NullableFloats\r\n        {\r\n          Object = double.NaN,\r\n          ObjectNull = null,\r\n          Float = float.NaN,\r\n          NullableDouble = double.NaN,\r\n          NullableFloat = null\r\n        }", span="8448-8455"];
m6_3612 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(floats, Formatting.Indented, new JsonSerializerSettings\r\n        {\r\n          FloatFormatHandling = FloatFormatHandling.DefaultValue\r\n        })", span="8457-8460"];
m6_3613 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="ReadTests.cs", label="Assert.AreEqual(@''{\r\n  ''''Object'''': 0.0,\r\n  ''''Float'''': 0.0,\r\n  ''''Double'''': 0.0,\r\n  ''''NullableFloat'''': null,\r\n  ''''NullableDouble'''': null,\r\n  ''''ObjectNull'''': null\r\n}'', json)", span="8462-8469"];
m6_3614 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", span="8446-8446"];
m6_3876 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyInterfaceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Type)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyInterfaceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Type)", span="9158-9158"];
m6_3877 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyInterfaceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Type)", file="ReadTests.cs", label="return sourceType == typeof(string);", span="9160-9160"];
m6_3878 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyInterfaceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Type)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyInterfaceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Type)", span="9158-9158"];
m6_866 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", span="1785-1785"];
m6_867 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="ReadTests.cs", label="DateTime testDate = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="1787-1787"];
m6_868 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="ReadTests.cs", label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="1788-1788"];
m6_872 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="ReadTests.cs", label="Assert.AreEqual(testDate, m2.DefaultConverter)", span="1795-1795"];
m6_873 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="ReadTests.cs", label="Assert.AreEqual(testDate, m2.MemberConverter)", span="1796-1796"];
m6_869 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(m1, new JavaScriptDateTimeConverter())", span="1790-1790"];
m6_870 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="ReadTests.cs", label="Assert.AreEqual(@''{''''DefaultConverter'''':new Date(0),''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="1791-1791"];
m6_871 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="ReadTests.cs", label="MemberConverterClass m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json, new JavaScriptDateTimeConverter())", span="1793-1793"];
m6_874 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", span="1785-1785"];
m6_2736 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>)", file="ReadTests.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>)", span="0-0"];
m6_2899 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", span="6617-6617"];
m6_2900 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="ReadTests.cs", label="string json = @''{''''Id'''':null}''", span="6619-6619"];
m6_2901 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="ReadTests.cs", label="var c = JsonConvert.DeserializeObject<NullableGuid>(json)", span="6620-6620"];
m6_2902 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="ReadTests.cs", label="Assert.AreEqual(null, c.Id)", span="6622-6622"];
m6_2903 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="ReadTests.cs", label="json = @''{''''Id'''':''''d8220a4b-75b1-4b7a-8112-b7bdae956a45''''}''", span="6624-6624"];
m6_2904 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="ReadTests.cs", label="c = JsonConvert.DeserializeObject<NullableGuid>(json)", span="6625-6625"];
m6_2905 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="ReadTests.cs", label="Assert.AreEqual(new Guid(''d8220a4b-75b1-4b7a-8112-b7bdae956a45''), c.Id)", span="6627-6627"];
m6_2906 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", span="6617-6617"];
m6_4061 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.ToDouble(System.IFormatProvider)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Ratio.ToDouble(System.IFormatProvider)", span="9894-9894"];
m6_4062 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.ToDouble(System.IFormatProvider)", file="ReadTests.cs", label="return this._denominator == 0\r\n          ? double.NaN\r\n          : (double)this._numerator / this._denominator;", span="9896-9898"];
m6_4063 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.ToDouble(System.IFormatProvider)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.Ratio.ToDouble(System.IFormatProvider)", span="9894-9894"];
m6_1088 [cluster="Newtonsoft.Json.Tests.TestObjects.SubKlass.SubKlass(string)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.SubKlass.SubKlass(string)", span="30-30"];
m6_2719 [cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="ReadTests.cs", label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="116-116"];
m6_1233 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", span="2634-2634"];
m6_1234 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="ReadTests.cs", label="string json = @''{\r\n  ''''Children'''': [\r\n    {\r\n      ''''Children'''': null,\r\n      ''''Text'''': ''''First''''\r\n    },\r\n    {\r\n      ''''Children'''': null,\r\n      ''''Text'''': ''''Second''''\r\n    }\r\n  ],\r\n  ''''Text'''': ''''Blah, blah, blah''''\r\n}''", span="2636-2648"];
m6_1235 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="ReadTests.cs", label="Content content = JsonConvert.DeserializeObject<Content>(json)", span="2650-2650"];
m6_1236 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="ReadTests.cs", label="Assert.AreEqual(''Blah, blah, blah'', content.Text)", span="2652-2652"];
m6_1237 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="ReadTests.cs", label="Assert.AreEqual(2, content.Children.Count)", span="2653-2653"];
m6_1238 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="ReadTests.cs", label="Assert.AreEqual(''First'', content.Children[0].Text)", span="2654-2654"];
m6_1239 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="ReadTests.cs", label="Assert.AreEqual(''Second'', content.Children[1].Text)", span="2655-2655"];
m6_1240 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", span="2634-2634"];
m6_389 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="ReadTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m6_381 [cluster="DataContractJsonSerializer.cstr", file="ReadTests.cs", label="Entry DataContractJsonSerializer.cstr", span=""];
m6_3810 [cluster="lambda expression", file="ReadTests.cs", label="Entry lambda expression", span="8968-8968"];
m6_391 [cluster="lambda expression", file="ReadTests.cs", label="Entry lambda expression", span="864-864"];
m6_394 [cluster="lambda expression", file="ReadTests.cs", label="Entry lambda expression", span="867-867"];
m6_392 [cluster="lambda expression", file="ReadTests.cs", label="p.Name", span="864-864"];
m6_393 [cluster="lambda expression", file="ReadTests.cs", label="Exit lambda expression", span="864-864"];
m6_395 [cluster="lambda expression", file="ReadTests.cs", label="p.Name", span="867-867"];
m6_396 [cluster="lambda expression", file="ReadTests.cs", label="Exit lambda expression", span="867-867"];
m6_528 [cluster="lambda expression", file="ReadTests.cs", label="Entry lambda expression", span="1192-1195"];
m6_529 [cluster="lambda expression", file="ReadTests.cs", label="JsonConvert.SerializeObject(new BadJsonPropertyClass())", span="1194-1194"];
m6_530 [cluster="lambda expression", file="ReadTests.cs", label="Exit lambda expression", span="1192-1195"];
m6_583 [cluster="lambda expression", file="ReadTests.cs", label="JsonConvert.DeserializeObject<List<string>>(json)", span="1276-1276"];
m6_582 [cluster="lambda expression", file="ReadTests.cs", label="Entry lambda expression", span="1274-1277"];
m6_584 [cluster="lambda expression", file="ReadTests.cs", label="Exit lambda expression", span="1274-1277"];
m6_854 [cluster="lambda expression", file="ReadTests.cs", label="JsonConvert.DeserializeObject<MemberConverterClass>(json, new JsonSerializerSettings\r\n         {\r\n           DateParseHandling = DateParseHandling.None\r\n         })", span="1759-1762"];
m6_853 [cluster="lambda expression", file="ReadTests.cs", label="Entry lambda expression", span="1757-1763"];
m6_855 [cluster="lambda expression", file="ReadTests.cs", label="Exit lambda expression", span="1757-1763"];
m6_898 [cluster="lambda expression", file="ReadTests.cs", label="Entry lambda expression", span="1840-1844"];
m6_899 [cluster="lambda expression", file="ReadTests.cs", label="IncompatibleJsonAttributeClass c = new IncompatibleJsonAttributeClass()", span="1842-1842"];
m6_900 [cluster="lambda expression", file="ReadTests.cs", label="JsonConvert.SerializeObject(c)", span="1843-1843"];
m6_901 [cluster="lambda expression", file="ReadTests.cs", label="Exit lambda expression", span="1840-1844"];
m6_984 [cluster="lambda expression", file="ReadTests.cs", label="Entry lambda expression", span="2003-2013"];
m6_985 [cluster="lambda expression", file="ReadTests.cs", label="string json = @''{\r\n  ''''FirstName'''': null,\r\n  ''''MiddleName'''': null,\r\n  ''''LastName'''': null,\r\n  ''''BirthDate'''': ''''\/Date(977309755000)\/''''\r\n}''", span="2005-2010"];
m6_986 [cluster="lambda expression", file="ReadTests.cs", label="JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="2012-2012"];
m6_987 [cluster="lambda expression", file="ReadTests.cs", label="Exit lambda expression", span="2003-2013"];
m6_991 [cluster="lambda expression", file="ReadTests.cs", label="Entry lambda expression", span="2021-2033"];
m6_992 [cluster="lambda expression", file="ReadTests.cs", label="RequiredMembersClass requiredMembersClass = new RequiredMembersClass\r\n            {\r\n              FirstName = null,\r\n              BirthDate = new DateTime(2000, 10, 10, 10, 10, 10, DateTimeKind.Utc),\r\n              LastName = null,\r\n              MiddleName = null\r\n            }", span="2023-2029"];
m6_993 [cluster="lambda expression", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(requiredMembersClass)", span="2031-2031"];
m6_994 [cluster="lambda expression", file="ReadTests.cs", label="Console.WriteLine(json)", span="2032-2032"];
m6_995 [cluster="lambda expression", file="ReadTests.cs", label="Exit lambda expression", span="2021-2033"];
m6_999 [cluster="lambda expression", file="ReadTests.cs", label="Entry lambda expression", span="2041-2048"];
m6_1000 [cluster="lambda expression", file="ReadTests.cs", label="string json = @''{\r\n  ''''FirstName'''': ''''Bob''''\r\n}''", span="2043-2045"];
m6_1001 [cluster="lambda expression", file="ReadTests.cs", label="JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="2047-2047"];
m6_1002 [cluster="lambda expression", file="ReadTests.cs", label="Exit lambda expression", span="2041-2048"];
m6_1037 [cluster="lambda expression", file="ReadTests.cs", label="InterfacePropertyTestClass testFromDe = (InterfacePropertyTestClass)JsonConvert.DeserializeObject(strFromTest, typeof(InterfacePropertyTestClass))", span="2137-2137"];
m6_1036 [cluster="lambda expression", file="ReadTests.cs", label="Entry lambda expression", span="2135-2138"];
m6_1038 [cluster="lambda expression", file="ReadTests.cs", label="Exit lambda expression", span="2135-2138"];
m6_1123 [cluster="lambda expression", file="ReadTests.cs", label="Entry lambda expression", span="2329-2335"];
m6_1124 [cluster="lambda expression", file="ReadTests.cs", label="JsonPropertyWithHandlingValues o = new JsonPropertyWithHandlingValues()", span="2331-2331"];
m6_1125 [cluster="lambda expression", file="ReadTests.cs", label="o.ReferenceLoopHandlingErrorProperty = o", span="2332-2332"];
m6_1126 [cluster="lambda expression", file="ReadTests.cs", label="JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings { ReferenceLoopHandling = ReferenceLoopHandling.Ignore })", span="2334-2334"];
m6_1127 [cluster="lambda expression", file="ReadTests.cs", label="Exit lambda expression", span="2329-2335"];
m6_1309 [cluster="lambda expression", file="ReadTests.cs", label="JsonConvert.DeserializeObject<TestObjects.Event>(json)", span="2824-2824"];
m6_1308 [cluster="lambda expression", file="ReadTests.cs", label="Entry lambda expression", span="2822-2825"];
m6_1310 [cluster="lambda expression", file="ReadTests.cs", label="Exit lambda expression", span="2822-2825"];
m6_1336 [cluster="lambda expression", file="ReadTests.cs", label="JsonConvert.DeserializeObject<Person>(json)", span="2870-2870"];
m6_1335 [cluster="lambda expression", file="ReadTests.cs", label="Entry lambda expression", span="2868-2871"];
m6_1337 [cluster="lambda expression", file="ReadTests.cs", label="Exit lambda expression", span="2868-2871"];
m6_1343 [cluster="lambda expression", file="ReadTests.cs", label="JsonConvert.DeserializeObject<Dictionary<string, string>>(json)", span="2885-2885"];
m6_1342 [cluster="lambda expression", file="ReadTests.cs", label="Entry lambda expression", span="2883-2886"];
m6_1344 [cluster="lambda expression", file="ReadTests.cs", label="Exit lambda expression", span="2883-2886"];
m6_1350 [cluster="lambda expression", file="ReadTests.cs", label="JsonConvert.DeserializeObject<Exception>(json)", span="2901-2901"];
m6_1349 [cluster="lambda expression", file="ReadTests.cs", label="Entry lambda expression", span="2899-2902"];
m6_1351 [cluster="lambda expression", file="ReadTests.cs", label="Exit lambda expression", span="2899-2902"];
m6_1357 [cluster="lambda expression", file="ReadTests.cs", label="JsonConvert.DeserializeObject<double>(json)", span="2917-2917"];
m6_1356 [cluster="lambda expression", file="ReadTests.cs", label="Entry lambda expression", span="2915-2918"];
m6_1358 [cluster="lambda expression", file="ReadTests.cs", label="Exit lambda expression", span="2915-2918"];
m6_1364 [cluster="lambda expression", file="ReadTests.cs", label="JsonConvert.DeserializeObject<DynamicDictionary>(json)", span="2933-2933"];
m6_1363 [cluster="lambda expression", file="ReadTests.cs", label="Entry lambda expression", span="2931-2934"];
m6_1365 [cluster="lambda expression", file="ReadTests.cs", label="Exit lambda expression", span="2931-2934"];
m6_1371 [cluster="lambda expression", file="ReadTests.cs", label="JsonConvert.DeserializeObject<JObject>(json)", span="2947-2947"];
m6_1370 [cluster="lambda expression", file="ReadTests.cs", label="Entry lambda expression", span="2945-2948"];
m6_1372 [cluster="lambda expression", file="ReadTests.cs", label="Exit lambda expression", span="2945-2948"];
m6_1378 [cluster="lambda expression", file="ReadTests.cs", label="JsonConvert.DeserializeObject<Person>(json)", span="2960-2960"];
m6_1377 [cluster="lambda expression", file="ReadTests.cs", label="Entry lambda expression", span="2958-2961"];
m6_1379 [cluster="lambda expression", file="ReadTests.cs", label="Exit lambda expression", span="2958-2961"];
m6_1385 [cluster="lambda expression", file="ReadTests.cs", label="JsonConvert.DeserializeObject<List<Person>>(json)", span="2973-2973"];
m6_1384 [cluster="lambda expression", file="ReadTests.cs", label="Entry lambda expression", span="2971-2974"];
m6_1386 [cluster="lambda expression", file="ReadTests.cs", label="Exit lambda expression", span="2971-2974"];
m6_1392 [cluster="lambda expression", file="ReadTests.cs", label="JsonConvert.DeserializeObject<List<Person>>(json)", span="2988-2988"];
m6_1391 [cluster="lambda expression", file="ReadTests.cs", label="Entry lambda expression", span="2986-2989"];
m6_1393 [cluster="lambda expression", file="ReadTests.cs", label="Exit lambda expression", span="2986-2989"];
m6_1399 [cluster="lambda expression", file="ReadTests.cs", label="JsonConvert.PopulateObject(json, new Person())", span="3001-3001"];
m6_1398 [cluster="lambda expression", file="ReadTests.cs", label="Entry lambda expression", span="2999-3002"];
m6_1400 [cluster="lambda expression", file="ReadTests.cs", label="Exit lambda expression", span="2999-3002"];
m6_1407 [cluster="lambda expression", file="ReadTests.cs", label="JsonConvert.PopulateObject(json, new List<Person>())", span="3014-3014"];
m6_1406 [cluster="lambda expression", file="ReadTests.cs", label="Entry lambda expression", span="3012-3015"];
m6_1408 [cluster="lambda expression", file="ReadTests.cs", label="Exit lambda expression", span="3012-3015"];
m6_1417 [cluster="lambda expression", file="ReadTests.cs", label="Entry lambda expression", span="3032-3043"];
m6_1418 [cluster="lambda expression", file="ReadTests.cs", label="JsonConvert.SerializeObject(new MemoryStream(), new JsonSerializerSettings\r\n          {\r\n            ContractResolver = new DefaultContractResolver\r\n            {\r\n#if !(SILVERLIGHT || NETFX_CORE || PORTABLE || PORTABLE40)\r\n              IgnoreSerializableAttribute = true\r\n#endif\r\n            }\r\n          })", span="3034-3042"];
m6_1419 [cluster="lambda expression", file="ReadTests.cs", label="Exit lambda expression", span="3032-3043"];
m6_1424 [cluster="lambda expression", file="ReadTests.cs", label="Entry lambda expression", span="3051-3062"];
m6_1425 [cluster="lambda expression", file="ReadTests.cs", label="JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:0}'', new JsonSerializerSettings\r\n          {\r\n            ContractResolver = new DefaultContractResolver\r\n            {\r\n#if !(SILVERLIGHT || NETFX_CORE || PORTABLE || PORTABLE40)\r\n              IgnoreSerializableAttribute = true\r\n#endif\r\n            }\r\n          })", span="3053-3061"];
m6_1426 [cluster="lambda expression", file="ReadTests.cs", label="Exit lambda expression", span="3051-3062"];
m6_1430 [cluster="lambda expression", file="ReadTests.cs", label="Entry lambda expression", span="3070-3081"];
m6_1431 [cluster="lambda expression", file="ReadTests.cs", label="JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:''}'', new JsonSerializerSettings\r\n            {\r\n              ContractResolver = new DefaultContractResolver\r\n              {\r\n#if !(SILVERLIGHT || NETFX_CORE || PORTABLE || PORTABLE40)\r\n                IgnoreSerializableAttribute = true\r\n#endif\r\n                }\r\n            })", span="3072-3080"];
m6_1432 [cluster="lambda expression", file="ReadTests.cs", label="Exit lambda expression", span="3070-3081"];
m6_1436 [cluster="lambda expression", file="ReadTests.cs", label="Entry lambda expression", span="3089-3100"];
m6_1437 [cluster="lambda expression", file="ReadTests.cs", label="JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:null}'', new JsonSerializerSettings\r\n          {\r\n            ContractResolver = new DefaultContractResolver\r\n            {\r\n#if !(SILVERLIGHT || NETFX_CORE || PORTABLE || PORTABLE40)\r\n              IgnoreSerializableAttribute = true\r\n#endif\r\n            }\r\n          })", span="3091-3099"];
m6_1438 [cluster="lambda expression", file="ReadTests.cs", label="Exit lambda expression", span="3089-3100"];
m6_1500 [cluster="lambda expression", file="ReadTests.cs", label="Entry lambda expression", span="3215-3224"];
m6_1501 [cluster="lambda expression", file="ReadTests.cs", label="string json =\r\n          @''{\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Person'''': 1,\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Person'''': 2\r\n}''", span="3217-3221"];
m6_1502 [cluster="lambda expression", file="ReadTests.cs", label="JsonConvert.DeserializeObject<Dictionary<Person, int>>(json)", span="3223-3223"];
m6_1503 [cluster="lambda expression", file="ReadTests.cs", label="Exit lambda expression", span="3215-3224"];
m6_1550 [cluster="lambda expression", file="ReadTests.cs", label="Entry lambda expression", span="3404-3404"];
m6_1551 [cluster="lambda expression", file="ReadTests.cs", label="x.Id == id", span="3404-3404"];
m6_1552 [cluster="lambda expression", file="ReadTests.cs", label="Exit lambda expression", span="3404-3404"];
m6_1587 [cluster="lambda expression", file="ReadTests.cs", label="JsonConvert.DeserializeObject<DictionaryWithNoDefaultConstructor>(json, new JsonSerializerSettings { PreserveReferencesHandling = PreserveReferencesHandling.All })", span="3498-3498"];
m6_1586 [cluster="lambda expression", file="ReadTests.cs", label="Entry lambda expression", span="3498-3498"];
m6_1588 [cluster="lambda expression", file="ReadTests.cs", label="Exit lambda expression", span="3498-3498"];
m6_2064 [cluster="lambda expression", file="ReadTests.cs", label="JsonConvert.DeserializeObject<Dictionary<string, object>>(json)", span="4606-4606"];
m6_2063 [cluster="lambda expression", file="ReadTests.cs", label="Entry lambda expression", span="4604-4607"];
m6_2065 [cluster="lambda expression", file="ReadTests.cs", label="Exit lambda expression", span="4604-4607"];
m6_2069 [cluster="lambda expression", file="ReadTests.cs", label="Entry lambda expression", span="4615-4630"];
m6_2070 [cluster="lambda expression", file="ReadTests.cs", label="var reference = new Dictionary<string, object>()", span="4619-4619"];
m6_2071 [cluster="lambda expression", file="ReadTests.cs", label="reference.Add(''$ref'', 1)", span="4620-4620"];
m6_2072 [cluster="lambda expression", file="ReadTests.cs", label="reference.Add(''$id'', 1)", span="4621-4621"];
m6_2076 [cluster="lambda expression", file="ReadTests.cs", label="child.Add(''Father'', reference)", span="4626-4626"];
m6_2073 [cluster="lambda expression", file="ReadTests.cs", label="var child = new Dictionary<string, object>()", span="4623-4623"];
m6_2074 [cluster="lambda expression", file="ReadTests.cs", label="child.Add(''_id'', 2)", span="4624-4624"];
m6_2075 [cluster="lambda expression", file="ReadTests.cs", label="child.Add(''Name'', ''Isabell'')", span="4625-4625"];
m6_2077 [cluster="lambda expression", file="ReadTests.cs", label="var json = JsonConvert.SerializeObject(child, Formatting.Indented)", span="4628-4628"];
m6_2078 [cluster="lambda expression", file="ReadTests.cs", label="JsonConvert.DeserializeObject<Dictionary<string, object>>(json)", span="4629-4629"];
m6_2079 [cluster="lambda expression", file="ReadTests.cs", label="Exit lambda expression", span="4615-4630"];
m6_2252 [cluster="lambda expression", file="ReadTests.cs", label="JsonConvert.DeserializeObject<StringDictionaryTestClass>(json)", span="5044-5044"];
m6_2251 [cluster="lambda expression", file="ReadTests.cs", label="Entry lambda expression", span="5042-5045"];
m6_2253 [cluster="lambda expression", file="ReadTests.cs", label="Exit lambda expression", span="5042-5045"];
m6_2482 [cluster="lambda expression", file="ReadTests.cs", label="Entry lambda expression", span="5612-5615"];
m6_2483 [cluster="lambda expression", file="ReadTests.cs", label="JsonConvert.DeserializeObject(''null'', typeof(DateTime))", span="5614-5614"];
m6_2484 [cluster="lambda expression", file="ReadTests.cs", label="Exit lambda expression", span="5612-5615"];
m6_2769 [cluster="lambda expression", file="ReadTests.cs", label="JsonConvert.DeserializeObject<IList<KeyValuePair<string, IList<string>>>>(json)", span="6365-6365"];
m6_2768 [cluster="lambda expression", file="ReadTests.cs", label="Entry lambda expression", span="6363-6366"];
m6_2770 [cluster="lambda expression", file="ReadTests.cs", label="Exit lambda expression", span="6363-6366"];
m6_2855 [cluster="lambda expression", file="ReadTests.cs", label="List<int> numbers = JsonConvert.DeserializeObject<List<int>>(json)", span="6518-6518"];
m6_2854 [cluster="lambda expression", file="ReadTests.cs", label="Entry lambda expression", span="6516-6519"];
m6_2856 [cluster="lambda expression", file="ReadTests.cs", label="Exit lambda expression", span="6516-6519"];
m6_2869 [cluster="lambda expression", file="ReadTests.cs", label="JsonConvert.DeserializeObject<ConvertableIntTestClass>(json)", span="6560-6560"];
m6_2868 [cluster="lambda expression", file="ReadTests.cs", label="Entry lambda expression", span="6560-6560"];
m6_2870 [cluster="lambda expression", file="ReadTests.cs", label="Exit lambda expression", span="6560-6560"];
m6_2888 [cluster="lambda expression", file="ReadTests.cs", label="Entry lambda expression", span="6591-6599"];
m6_2889 [cluster="lambda expression", file="ReadTests.cs", label="string json = @''{\r\n  ''''PreProperty'''': true,\r\n  ''''PostProperty'''': ''''-1''''\r\n}''", span="6593-6596"];
m6_2890 [cluster="lambda expression", file="ReadTests.cs", label="JsonConvert.DeserializeObject<TestObjects.MyClass>(json)", span="6598-6598"];
m6_2891 [cluster="lambda expression", file="ReadTests.cs", label="Exit lambda expression", span="6591-6599"];
m6_2895 [cluster="lambda expression", file="ReadTests.cs", label="Entry lambda expression", span="6607-6613"];
m6_2896 [cluster="lambda expression", file="ReadTests.cs", label="string json = @''{\r\n  ''''PreProperty'''': ''", span="6609-6610"];
m6_2897 [cluster="lambda expression", file="ReadTests.cs", label="JsonConvert.DeserializeObject<TestObjects.MyClass>(json)", span="6612-6612"];
m6_2898 [cluster="lambda expression", file="ReadTests.cs", label="Exit lambda expression", span="6607-6613"];
m6_2971 [cluster="lambda expression", file="ReadTests.cs", label="Entry lambda expression", span="6762-6765"];
m6_2972 [cluster="lambda expression", file="ReadTests.cs", label="JsonConvert.DeserializeObject<double>('''')", span="6764-6764"];
m6_2973 [cluster="lambda expression", file="ReadTests.cs", label="Exit lambda expression", span="6762-6765"];
m6_2977 [cluster="lambda expression", file="ReadTests.cs", label="Entry lambda expression", span="6773-6776"];
m6_2978 [cluster="lambda expression", file="ReadTests.cs", label="JsonConvert.DeserializeObject<StringComparison>('''')", span="6775-6775"];
m6_2979 [cluster="lambda expression", file="ReadTests.cs", label="Exit lambda expression", span="6773-6776"];
m6_2983 [cluster="lambda expression", file="ReadTests.cs", label="Entry lambda expression", span="6784-6787"];
m6_2984 [cluster="lambda expression", file="ReadTests.cs", label="JsonConvert.DeserializeObject<int>('''')", span="6786-6786"];
m6_2985 [cluster="lambda expression", file="ReadTests.cs", label="Exit lambda expression", span="6784-6787"];
m6_2993 [cluster="lambda expression", file="ReadTests.cs", label="Entry lambda expression", span="6803-6806"];
m6_2994 [cluster="lambda expression", file="ReadTests.cs", label="JsonConvert.DeserializeObject<double>(null)", span="6805-6805"];
m6_2995 [cluster="lambda expression", file="ReadTests.cs", label="Exit lambda expression", span="6803-6806"];
m6_2999 [cluster="lambda expression", file="ReadTests.cs", label="Entry lambda expression", span="6815-6818"];
m6_3000 [cluster="lambda expression", file="ReadTests.cs", label="JsonConvert.DeserializeObject(null)", span="6817-6817"];
m6_3001 [cluster="lambda expression", file="ReadTests.cs", label="Exit lambda expression", span="6815-6818"];
m6_3107 [cluster="lambda expression", file="ReadTests.cs", label="errors.Add(e.ErrorContext.Error.Message)", span="7019-7019"];
m6_3108 [cluster="lambda expression", file="ReadTests.cs", label="e.ErrorContext.Handled = true", span="7020-7020"];
m6_3106 [cluster="lambda expression", file="ReadTests.cs", label="Entry lambda expression", span="7017-7021"];
m6_3109 [cluster="lambda expression", file="ReadTests.cs", label="Exit lambda expression", span="7017-7021"];
m6_3122 [cluster="lambda expression", file="ReadTests.cs", label="errors.Add(e.ErrorContext.Error.Message)", span="7044-7044"];
m6_3123 [cluster="lambda expression", file="ReadTests.cs", label="e.ErrorContext.Handled = true", span="7045-7045"];
m6_3121 [cluster="lambda expression", file="ReadTests.cs", label="Entry lambda expression", span="7042-7046"];
m6_3124 [cluster="lambda expression", file="ReadTests.cs", label="Exit lambda expression", span="7042-7046"];
m6_3137 [cluster="lambda expression", file="ReadTests.cs", label="errors.Add(e.ErrorContext.Error.Message)", span="7067-7067"];
m6_3138 [cluster="lambda expression", file="ReadTests.cs", label="e.ErrorContext.Handled = true", span="7068-7068"];
m6_3136 [cluster="lambda expression", file="ReadTests.cs", label="Entry lambda expression", span="7065-7069"];
m6_3139 [cluster="lambda expression", file="ReadTests.cs", label="Exit lambda expression", span="7065-7069"];
m6_3253 [cluster="lambda expression", file="ReadTests.cs", label="s.Deserialize<Dictionary<string, int>>(new JsonTextReader(new StringReader(json)))", span="7396-7396"];
m6_3252 [cluster="lambda expression", file="ReadTests.cs", label="Entry lambda expression", span="7394-7397"];
m6_3254 [cluster="lambda expression", file="ReadTests.cs", label="Exit lambda expression", span="7394-7397"];
m6_3265 [cluster="lambda expression", file="ReadTests.cs", label="Entry lambda expression", span="7443-7455"];
m6_3266 [cluster="lambda expression", file="ReadTests.cs", label="string json = ''[{},1]''", span="7445-7445"];
m6_3267 [cluster="lambda expression", file="ReadTests.cs", label="JsonSerializer serializer = new JsonSerializer()", span="7447-7447"];
m6_3269 [cluster="lambda expression", file="ReadTests.cs", label="var reader = new JsonTextReader(new StringReader(json))", span="7450-7450"];
m6_3268 [cluster="lambda expression", file="ReadTests.cs", label="serializer.CheckAdditionalContent = true", span="7448-7448"];
m6_3272 [cluster="lambda expression", file="ReadTests.cs", label="serializer.Deserialize(reader, typeof (MyType))", span="7454-7454"];
m6_3270 [cluster="lambda expression", file="ReadTests.cs", label="reader.Read()", span="7451-7451"];
m6_3271 [cluster="lambda expression", file="ReadTests.cs", label="reader.Read()", span="7452-7452"];
m6_3273 [cluster="lambda expression", file="ReadTests.cs", label="Exit lambda expression", span="7443-7455"];
m6_3344 [cluster="lambda expression", file="ReadTests.cs", label="JsonConvert.DeserializeObject<EnumerableClassFailure<string>>(json)", span="7603-7603"];
m6_3343 [cluster="lambda expression", file="ReadTests.cs", label="Entry lambda expression", span="7603-7603"];
m6_3345 [cluster="lambda expression", file="ReadTests.cs", label="Exit lambda expression", span="7603-7603"];
m6_3389 [cluster="lambda expression", file="ReadTests.cs", label="obj = JsonConvert.DeserializeObject<MyTuple<int>>(json)", span="7715-7715"];
m6_3388 [cluster="lambda expression", file="ReadTests.cs", label="Entry lambda expression", span="7713-7716"];
m6_3390 [cluster="lambda expression", file="ReadTests.cs", label="Exit lambda expression", span="7713-7716"];
m6_3487 [cluster="lambda expression", file="ReadTests.cs", label="JsonConvert.DeserializeObject<Array2D>(json)", span="8093-8093"];
m6_3486 [cluster="lambda expression", file="ReadTests.cs", label="Entry lambda expression", span="8093-8093"];
m6_3488 [cluster="lambda expression", file="ReadTests.cs", label="Exit lambda expression", span="8093-8093"];
m6_3494 [cluster="lambda expression", file="ReadTests.cs", label="JsonConvert.DeserializeObject<Array2D>(json)", span="8103-8103"];
m6_3493 [cluster="lambda expression", file="ReadTests.cs", label="Entry lambda expression", span="8103-8103"];
m6_3495 [cluster="lambda expression", file="ReadTests.cs", label="Exit lambda expression", span="8103-8103"];
m6_3514 [cluster="lambda expression", file="ReadTests.cs", label="JsonConvert.DeserializeObject<Array3D>(json)", span="8133-8133"];
m6_3513 [cluster="lambda expression", file="ReadTests.cs", label="Entry lambda expression", span="8133-8133"];
m6_3515 [cluster="lambda expression", file="ReadTests.cs", label="Exit lambda expression", span="8133-8133"];
m6_3521 [cluster="lambda expression", file="ReadTests.cs", label="JsonConvert.DeserializeObject<Array3D>(json)", span="8143-8143"];
m6_3520 [cluster="lambda expression", file="ReadTests.cs", label="Entry lambda expression", span="8143-8143"];
m6_3522 [cluster="lambda expression", file="ReadTests.cs", label="Exit lambda expression", span="8143-8143"];
m6_3528 [cluster="lambda expression", file="ReadTests.cs", label="JsonConvert.DeserializeObject<Array3D>(json)", span="8153-8153"];
m6_3527 [cluster="lambda expression", file="ReadTests.cs", label="Entry lambda expression", span="8153-8153"];
m6_3529 [cluster="lambda expression", file="ReadTests.cs", label="Exit lambda expression", span="8153-8153"];
m6_3554 [cluster="lambda expression", file="ReadTests.cs", label="JsonConvert.DeserializeObject<Array3D>(json)", span="8194-8194"];
m6_3553 [cluster="lambda expression", file="ReadTests.cs", label="Entry lambda expression", span="8194-8194"];
m6_3555 [cluster="lambda expression", file="ReadTests.cs", label="Exit lambda expression", span="8194-8194"];
m6_3561 [cluster="lambda expression", file="ReadTests.cs", label="JsonConvert.DeserializeObject<Array3D>(json)", span="8204-8204"];
m6_3560 [cluster="lambda expression", file="ReadTests.cs", label="Entry lambda expression", span="8204-8204"];
m6_3562 [cluster="lambda expression", file="ReadTests.cs", label="Exit lambda expression", span="8204-8204"];
m6_3654 [cluster="lambda expression", file="ReadTests.cs", label="JsonConvert.DeserializeObject<IList<long>>(json)", span="8579-8579"];
m6_3653 [cluster="lambda expression", file="ReadTests.cs", label="Entry lambda expression", span="8579-8579"];
m6_3655 [cluster="lambda expression", file="ReadTests.cs", label="Exit lambda expression", span="8579-8579"];
m6_3811 [cluster="lambda expression", file="ReadTests.cs", label="JsonConvert.DeserializeObject<PrivateDefaultCtorList<int>>(''[1,2]'')", span="8968-8968"];
m6_3812 [cluster="lambda expression", file="ReadTests.cs", label="Exit lambda expression", span="8968-8968"];
m6_382 [cluster="object.GetType()", file="ReadTests.cs", label="Entry object.GetType()", span="0-0"];
m6_1952 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", span="4394-4394"];
m6_1953 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", file="ReadTests.cs", label="string s = @''host\user''", span="4396-4396"];
m6_1954 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", file="ReadTests.cs", label="string serialized = JsonConvert.SerializeObject(s)", span="4397-4397"];
m6_1957 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", file="ReadTests.cs", label="d1.Add(5, s)", span="4401-4401"];
m6_1960 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", file="ReadTests.cs", label="d2.Add(s, 5)", span="4405-4405"];
m6_1955 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", file="ReadTests.cs", label="Assert.AreEqual(@''''''host\\user'''''', serialized)", span="4398-4398"];
m6_1956 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", file="ReadTests.cs", label="Dictionary<int, object> d1 = new Dictionary<int, object>()", span="4400-4400"];
m6_1958 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", file="ReadTests.cs", label="Assert.AreEqual(@''{''''5'''':''''host\\user''''}'', JsonConvert.SerializeObject(d1))", span="4402-4402"];
m6_1959 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", file="ReadTests.cs", label="Dictionary<string, object> d2 = new Dictionary<string, object>()", span="4404-4404"];
m6_1961 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", file="ReadTests.cs", label="Assert.AreEqual(@''{''''host\\user'''':5}'', JsonConvert.SerializeObject(d2))", span="4406-4406"];
m6_1962 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", span="4394-4394"];
m6_3352 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", span="7639-7639"];
m6_3353 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="ReadTests.cs", label="string json", span="7641-7641"];
m6_3354 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="ReadTests.cs", label="IList<double> d = new List<double> {1.1, double.NaN, double.PositiveInfinity}", span="7642-7642"];
m6_3355 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="ReadTests.cs", label="json = JsonConvert.SerializeObject(d)", span="7644-7644"];
m6_3356 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="ReadTests.cs", label="json = JsonConvert.SerializeObject(d, new JsonSerializerSettings { FloatFormatHandling = FloatFormatHandling.Symbol })", span="7647-7647"];
m6_3357 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="ReadTests.cs", label="json = JsonConvert.SerializeObject(d, new JsonSerializerSettings {FloatFormatHandling = FloatFormatHandling.DefaultValue})", span="7650-7650"];
m6_3358 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="ReadTests.cs", label="Assert.AreEqual(''[1.1,0.0,0.0]'', json)", span="7653-7653"];
m6_3359 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", span="7639-7639"];
m6_3719 [cluster="Newtonsoft.Json.Tests.Serialization.AnswerFilterModel.AnswerFilterModel()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.AnswerFilterModel.AnswerFilterModel()", span="9342-9342"];
m6_3952 [cluster="Newtonsoft.Json.Tests.Serialization.AnswerFilterModel.AnswerFilterModel()", file="ReadTests.cs", label="this.answerValues = (from answer in Enum.GetNames(typeof(Antworten))\r\n                           select new SelectListItem { Text = answer, Value = answer, Selected = false })\r\n                           .ToList()", span="9344-9346"];
m6_3953 [cluster="Newtonsoft.Json.Tests.Serialization.AnswerFilterModel.AnswerFilterModel()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.AnswerFilterModel.AnswerFilterModel()", span="9342-9342"];
m6_3315 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass<T>.GetEnumerator()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass<T>.GetEnumerator()", span="7544-7544"];
m6_3316 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass<T>.GetEnumerator()", file="ReadTests.cs", label="return _values.GetEnumerator();", span="7546-7546"];
m6_3317 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass<T>.GetEnumerator()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass<T>.GetEnumerator()", span="7544-7544"];
m6_3896 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TraceWriter.ToString()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TraceWriter.ToString()", span="9206-9206"];
m6_3897 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TraceWriter.ToString()", file="ReadTests.cs", label="return Name;", span="9208-9208"];
m6_3898 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TraceWriter.ToString()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TraceWriter.ToString()", span="9206-9206"];
m6_876 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", span="1800-1800"];
m6_877 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="ReadTests.cs", label="DateTime date = Convert.ToDateTime(''1970-01-01T00:00:00Z'').ToUniversalTime()", span="1802-1802"];
m6_878 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="ReadTests.cs", label="MemberConverterClass c = new MemberConverterClass\r\n        {\r\n          DefaultConverter = date,\r\n          MemberConverter = date\r\n        }", span="1804-1808"];
m6_879 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="1810-1810"];
m6_880 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="ReadTests.cs", label="Console.WriteLine(json)", span="1812-1812"];
m6_881 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", span="1800-1800"];
m6_3745 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyCollection()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyCollection()", span="8807-8807"];
m6_3746 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyCollection()", file="ReadTests.cs", label="ReadOnlyCollection<int> list = JsonConvert.DeserializeObject<ReadOnlyCollection<int>>(''[1,2,3]'')", span="8809-8809"];
m6_3747 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyCollection()", file="ReadTests.cs", label="Assert.AreEqual(3, list.Count)", span="8811-8811"];
m6_3748 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyCollection()", file="ReadTests.cs", label="Assert.AreEqual(1, list[0])", span="8813-8813"];
m6_3749 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyCollection()", file="ReadTests.cs", label="Assert.AreEqual(2, list[1])", span="8814-8814"];
m6_3750 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyCollection()", file="ReadTests.cs", label="Assert.AreEqual(3, list[2])", span="8815-8815"];
m6_3751 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyCollection()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyCollection()", span="8807-8807"];
m6_3457 [cluster="Newtonsoft.Json.Tests.Serialization.Array3DWithConverter.Array3DWithConverter()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Array3DWithConverter.Array3DWithConverter()", span="9711-9711"];
m6_80 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.StringEnumConverter()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Converters.StringEnumConverter.StringEnumConverter()", span="42-42"];
m6_1427 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", span="3066-3066"];
m6_1428 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", file="ReadTests.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        @''Error converting value {null} to type 'System.Int32'. Path 'ReadTimeout', line 1, position 15.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:''}'', new JsonSerializerSettings\r\n            {\r\n              ContractResolver = new DefaultContractResolver\r\n              {\r\n#if !(SILVERLIGHT || NETFX_CORE || PORTABLE || PORTABLE40)\r\n                IgnoreSerializableAttribute = true\r\n#endif\r\n                }\r\n            });\r\n        })", span="3068-3081"];
m6_1429 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", span="3066-3066"];
m6_1516 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="ReadTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m6_3224 [cluster="Newtonsoft.Json.Tests.Serialization.Event.Event()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Event.Event()", span="9412-9412"];
m6_3987 [cluster="Newtonsoft.Json.Tests.Serialization.TestComponentSimple.TestComponentSimple()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TestComponentSimple.TestComponentSimple()", span="9609-9609"];
m6_3988 [cluster="Newtonsoft.Json.Tests.Serialization.TestComponentSimple.TestComponentSimple()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TestComponentSimple.TestComponentSimple()", span="9609-9609"];
m6_1807 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", span="4050-4050"];
m6_1808 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="ReadTests.cs", label="List<KVPair<string, string>> kvPairs =\r\n        JsonConvert.DeserializeObject<List<KVPair<string, string>>>(\r\n          ''[{\''Key\'':\''Two\'',\''Value\'':\''2\''},{\''Key\'':\''One\'',\''Value\'':\''1\''}]'')", span="4052-4054"];
m6_1809 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="ReadTests.cs", label="Assert.AreEqual(2, kvPairs.Count)", span="4056-4056"];
m6_1810 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="ReadTests.cs", label="Assert.AreEqual(''Two'', kvPairs[0].Key)", span="4057-4057"];
m6_1811 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="ReadTests.cs", label="Assert.AreEqual(''2'', kvPairs[0].Value)", span="4058-4058"];
m6_1812 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="ReadTests.cs", label="Assert.AreEqual(''One'', kvPairs[1].Key)", span="4059-4059"];
m6_1813 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="ReadTests.cs", label="Assert.AreEqual(''1'', kvPairs[1].Value)", span="4060-4060"];
m6_1814 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", span="4050-4050"];
m6_1504 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", span="3228-3228"];
m6_1505 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="ReadTests.cs", label="string googleSearchText = @''{\r\n        ''''responseData'''': {\r\n          ''''results'''': [\r\n            {\r\n              ''''GsearchResultClass'''': ''''GwebSearch'''',\r\n              ''''unescapedUrl'''': ''''http://en.wikipedia.org/wiki/Paris_Hilton'''',\r\n              ''''url'''': ''''http://en.wikipedia.org/wiki/Paris_Hilton'''',\r\n              ''''visibleUrl'''': ''''en.wikipedia.org'''',\r\n              ''''cacheUrl'''': ''''http://www.google.com/search?q=cache:TwrPfhd22hYJ:en.wikipedia.org'''',\r\n              ''''title'''': ''''<b>Paris Hilton</b> - Wikipedia, the free encyclopedia'''',\r\n              ''''titleNoFormatting'''': ''''Paris Hilton - Wikipedia, the free encyclopedia'''',\r\n              ''''content'''': ''''[1] In 2006, she released her debut album...''''\r\n            },\r\n            {\r\n              ''''GsearchResultClass'''': ''''GwebSearch'''',\r\n              ''''unescapedUrl'''': ''''http://www.imdb.com/name/nm0385296/'''',\r\n              ''''url'''': ''''http://www.imdb.com/name/nm0385296/'''',\r\n              ''''visibleUrl'''': ''''www.imdb.com'''',\r\n              ''''cacheUrl'''': ''''http://www.google.com/search?q=cache:1i34KkqnsooJ:www.imdb.com'''',\r\n              ''''title'''': ''''<b>Paris Hilton</b>'''',\r\n              ''''titleNoFormatting'''': ''''Paris Hilton'''',\r\n              ''''content'''': ''''Self: Zoolander. Socialite <b>Paris Hilton</b>...''''\r\n            }\r\n          ],\r\n          ''''cursor'''': {\r\n            ''''pages'''': [\r\n              {\r\n                ''''start'''': ''''0'''',\r\n                ''''label'''': 1\r\n              },\r\n              {\r\n                ''''start'''': ''''4'''',\r\n                ''''label'''': 2\r\n              },\r\n              {\r\n                ''''start'''': ''''8'''',\r\n                ''''label'''': 3\r\n              },\r\n              {\r\n                ''''start'''': ''''12'''',\r\n                ''''label'''': 4\r\n              }\r\n            ],\r\n            ''''estimatedResultCount'''': ''''59600000'''',\r\n            ''''currentPageIndex'''': 0,\r\n            ''''moreResultsUrl'''': ''''http://www.google.com/search?oe=utf8&ie=utf8...''''\r\n          }\r\n        },\r\n        ''''responseDetails'''': null,\r\n        ''''responseStatus'''': 200\r\n      }''", span="3230-3280"];
m6_1506 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="ReadTests.cs", label="JObject googleSearch = JObject.Parse(googleSearchText)", span="3282-3282"];
m6_1507 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="ReadTests.cs", label="IList<JToken> results = googleSearch[''responseData''][''results''].Children().ToList()", span="3285-3285"];
m6_1508 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="ReadTests.cs", label="IList<SearchResult> searchResults = new List<SearchResult>()", span="3288-3288"];
m6_1509 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="ReadTests.cs", label=results, span="3289-3289"];
m6_1511 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="ReadTests.cs", label="searchResults.Add(searchResult)", span="3292-3292"];
m6_1512 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="ReadTests.cs", label="Assert.AreEqual(2, searchResults.Count)", span="3303-3303"];
m6_1513 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="ReadTests.cs", label="Assert.AreEqual(''<b>Paris Hilton</b> - Wikipedia, the free encyclopedia'', searchResults[0].Title)", span="3304-3304"];
m6_1514 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="ReadTests.cs", label="Assert.AreEqual(''<b>Paris Hilton</b>'', searchResults[1].Title)", span="3305-3305"];
m6_1510 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="ReadTests.cs", label="SearchResult searchResult = JsonConvert.DeserializeObject<SearchResult>(result.ToString())", span="3291-3291"];
m6_1515 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", span="3228-3228"];
m6_3299 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", span="7502-7502"];
m6_3300 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", file="ReadTests.cs", label="var actual = JsonConvert.DeserializeObject<MyType>(@''{ ''''MyProperty'''':{''''Key'''':''''Y''''}}'')", span="7504-7504"];
m6_3301 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", file="ReadTests.cs", label="Assert.AreEqual(''X'', actual.MyProperty[''Key''])", span="7505-7505"];
m6_3302 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", span="7502-7502"];
m6_1651 [cluster="System.Collections.Generic.ICollection<T>.CopyTo(T[], int)", file="ReadTests.cs", label="Entry System.Collections.Generic.ICollection<T>.CopyTo(T[], int)", span="0-0"];
m6_1028 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", span="2127-2127"];
m6_1029 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="ReadTests.cs", label="InterfacePropertyTestClass testClass = new InterfacePropertyTestClass()", span="2129-2129"];
m6_1030 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="ReadTests.cs", label="testClass.co = new Co()", span="2130-2130"];
m6_1031 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="ReadTests.cs", label="String strFromTest = JsonConvert.SerializeObject(testClass)", span="2131-2131"];
m6_1032 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="ReadTests.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        @''Could not create an instance of type Newtonsoft.Json.Tests.TestObjects.ICo. Type is an interface or abstract class and cannot be instantiated. Path 'co.Name', line 1, position 14.'',\r\n        () =>\r\n        {\r\n          InterfacePropertyTestClass testFromDe = (InterfacePropertyTestClass)JsonConvert.DeserializeObject(strFromTest, typeof(InterfacePropertyTestClass));\r\n        })", span="2133-2138"];
m6_1033 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", span="2127-2127"];
m6_3873 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyInterfaceConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Type)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyInterfaceConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Type)", span="9153-9153"];
m6_3874 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyInterfaceConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Type)", file="ReadTests.cs", label="return destinationType == typeof(string);", span="9155-9155"];
m6_3875 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyInterfaceConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Type)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyInterfaceConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Type)", span="9153-9153"];
m6_228 [cluster="System.Text.RegularExpressions.Regex.ToString()", file="ReadTests.cs", label="Entry System.Text.RegularExpressions.Regex.ToString()", span="0-0"];
m6_2990 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", span="6798-6798"];
m6_2991 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", file="ReadTests.cs", label="ExceptionAssert.Throws<ArgumentNullException>(\r\n        @''Value cannot be null.\r\nParameter name: value'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<double>(null);\r\n        })", span="6800-6806"];
m6_2992 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", span="6798-6798"];
m6_1481 [cluster="Newtonsoft.Json.Tests.TestObjects.Foo.Foo()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Foo.Foo()", span="31-31"];
m6_1490 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", span="3197-3197"];
m6_1491 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="ReadTests.cs", label="Dictionary<Person, int> dictionary = new Dictionary<Person, int>()", span="3199-3199"];
m6_1492 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="ReadTests.cs", label="dictionary.Add(new Person { Name = ''p1'' }, 1)", span="3200-3200"];
m6_1493 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="ReadTests.cs", label="dictionary.Add(new Person { Name = ''p2'' }, 2)", span="3201-3201"];
m6_1494 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(dictionary, Formatting.Indented)", span="3203-3203"];
m6_1495 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="ReadTests.cs", label="Assert.AreEqual(@''{\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Person'''': 1,\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Person'''': 2\r\n}'', json)", span="3205-3208"];
m6_1496 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", span="3197-3197"];
m6_207 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.JsonSerializerInternalReader(Newtonsoft.Json.JsonSerializer)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.JsonSerializerInternalReader(Newtonsoft.Json.JsonSerializer)", span="64-64"];
m6_1761 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, uint)", file="ReadTests.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, uint)", span="0-0"];
m6_2412 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OnError()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OnError()", span="5439-5439"];
m6_2413 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OnError()", file="ReadTests.cs", label="var data = new DecimalTest(decimal.MinValue)", span="5441-5441"];
m6_2414 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OnError()", file="ReadTests.cs", label="var json = JsonConvert.SerializeObject(data)", span="5442-5442"];
m6_2415 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OnError()", file="ReadTests.cs", label="var obj = JsonConvert.DeserializeObject<DecimalTest>(json)", span="5443-5443"];
m6_2416 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OnError()", file="ReadTests.cs", label="Assert.AreEqual(decimal.MinValue, obj.Value)", span="5445-5445"];
m6_2417 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OnError()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OnError()", span="5439-5439"];
m6_753 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", span="1581-1581"];
m6_754 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(StringComparison.CurrentCultureIgnoreCase)", span="1583-1583"];
m6_755 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="ReadTests.cs", label="Assert.AreEqual(@''1'', json)", span="1584-1584"];
m6_756 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="ReadTests.cs", label="StringComparison s = JsonConvert.DeserializeObject<StringComparison>(json)", span="1586-1586"];
m6_757 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="ReadTests.cs", label="Assert.AreEqual(StringComparison.CurrentCultureIgnoreCase, s)", span="1587-1587"];
m6_758 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", span="1581-1581"];
m6_2952 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", span="6728-6728"];
m6_2953 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="ReadTests.cs", label="object v = JsonConvert.DeserializeObject<double?>('''')", span="6730-6730"];
m6_2954 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="ReadTests.cs", label="Assert.IsNull(v)", span="6731-6731"];
m6_2955 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="ReadTests.cs", label="v = JsonConvert.DeserializeObject<char?>('''')", span="6733-6733"];
m6_2956 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="ReadTests.cs", label="Assert.IsNull(v)", span="6734-6734"];
m6_2957 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="ReadTests.cs", label="v = JsonConvert.DeserializeObject<int?>('''')", span="6736-6736"];
m6_2958 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="ReadTests.cs", label="Assert.IsNull(v)", span="6737-6737"];
m6_2959 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="ReadTests.cs", label="v = JsonConvert.DeserializeObject<decimal?>('''')", span="6739-6739"];
m6_2960 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="ReadTests.cs", label="Assert.IsNull(v)", span="6740-6740"];
m6_2961 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="ReadTests.cs", label="v = JsonConvert.DeserializeObject<DateTime?>('''')", span="6742-6742"];
m6_2962 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="ReadTests.cs", label="Assert.IsNull(v)", span="6743-6743"];
m6_2963 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="ReadTests.cs", label="v = JsonConvert.DeserializeObject<DateTimeOffset?>('''')", span="6745-6745"];
m6_2964 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="ReadTests.cs", label="Assert.IsNull(v)", span="6746-6746"];
m6_2965 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="ReadTests.cs", label="v = JsonConvert.DeserializeObject<byte[]>('''')", span="6748-6748"];
m6_2966 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="ReadTests.cs", label="Assert.IsNull(v)", span="6749-6749"];
m6_2967 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", span="6728-6728"];
m6_1455 [cluster="Newtonsoft.Json.Tests.TestObjects.ConstructorReadonlyFields.ConstructorReadonlyFields(string, int)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ConstructorReadonlyFields.ConstructorReadonlyFields(string, int)", span="32-32"];
m6_3675 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", span="8642-8642"];
m6_3676 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="ReadTests.cs", label="string json = @''{\r\n  ''''MyNullableBool'''': '''''''',\r\n  ''''MyNullableInteger'''': '''''''',\r\n  ''''MyNullableDateTime'''': '''''''',\r\n  ''''MyNullableDateTimeOffset'''': '''''''',\r\n  ''''MyNullableDecimal'''': ''''''''\r\n}''", span="8644-8650"];
m6_3677 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="ReadTests.cs", label="NullableTestClass c2 = JsonConvert.DeserializeObject<NullableTestClass>(json)", span="8652-8652"];
m6_3678 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="ReadTests.cs", label="Assert.IsNull(c2.MyNullableBool)", span="8653-8653"];
m6_3679 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="ReadTests.cs", label="Assert.IsNull(c2.MyNullableInteger)", span="8654-8654"];
m6_3680 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="ReadTests.cs", label="Assert.IsNull(c2.MyNullableDateTime)", span="8655-8655"];
m6_3681 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="ReadTests.cs", label="Assert.IsNull(c2.MyNullableDateTimeOffset)", span="8656-8656"];
m6_3682 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="ReadTests.cs", label="Assert.IsNull(c2.MyNullableDecimal)", span="8657-8657"];
m6_3683 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", span="8642-8642"];
m6_2871 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", span="6565-6565"];
m6_2872 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="ReadTests.cs", label="Widget widget = new Widget { Id = new WidgetId { Value = ''id'' } }", span="6567-6567"];
m6_2873 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(widget)", span="6569-6569"];
m6_2874 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="ReadTests.cs", label="Assert.AreEqual(@''{''''Id'''':{''''Value'''':''''id''''}}'', json)", span="6571-6571"];
m6_2875 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", span="6565-6565"];
m6_734 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", span="1557-1557"];
m6_735 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="ReadTests.cs", label="Stack<object> s = new Stack<object>()", span="1559-1559"];
m6_736 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="ReadTests.cs", label="s.Push(1)", span="1560-1560"];
m6_737 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="ReadTests.cs", label="s.Push(2)", span="1561-1561"];
m6_738 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="ReadTests.cs", label="s.Push(3)", span="1562-1562"];
m6_739 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(s)", span="1564-1564"];
m6_740 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="ReadTests.cs", label="Assert.AreEqual(''[3,2,1]'', json)", span="1565-1565"];
m6_741 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", span="1557-1557"];
m6_585 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", span="1281-1281"];
m6_586 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="ReadTests.cs", label="List<DateTime> testDates = new List<DateTime>\r\n        {\r\n          new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Local),\r\n          new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Unspecified),\r\n          new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Utc),\r\n          new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Local),\r\n          new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Unspecified),\r\n          new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc),\r\n        }", span="1283-1291"];
m6_587 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="ReadTests.cs", label="MemoryStream ms = new MemoryStream()", span="1293-1293"];
m6_589 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="ReadTests.cs", label="s.WriteObject(ms, testDates)", span="1295-1295"];
m6_593 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="ReadTests.cs", label="string result = JsonConvert.SerializeObject(testDates, new JsonSerializerSettings { DateFormatHandling = DateFormatHandling.MicrosoftDateFormat })", span="1301-1301"];
m6_588 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="ReadTests.cs", label="DataContractJsonSerializer s = new DataContractJsonSerializer(typeof(List<DateTime>))", span="1294-1294"];
m6_590 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="ReadTests.cs", label="ms.Seek(0, SeekOrigin.Begin)", span="1296-1296"];
m6_591 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="ReadTests.cs", label="StreamReader sr = new StreamReader(ms)", span="1297-1297"];
m6_592 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="ReadTests.cs", label="string expected = sr.ReadToEnd()", span="1299-1299"];
m6_594 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="ReadTests.cs", label="Assert.AreEqual(expected, result)", span="1302-1302"];
m6_595 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", span="1281-1281"];
m6_973 [cluster="Newtonsoft.Json.Tests.TestObjects.RequiredMembersClass.RequiredMembersClass()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.RequiredMembersClass.RequiredMembersClass()", span="29-29"];
m6_1160 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", span="2448-2448"];
m6_1161 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", file="ReadTests.cs", label="return ''_name: '' + _name + '', _age: '' + Age + '', Rank: '' + Rank + '', JsonTitle: '' + Title;", span="2450-2450"];
m6_1162 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", span="2448-2448"];
m6_2785 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", span="6392-6392"];
m6_2786 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="ReadTests.cs", label="TestObject test = new TestObject(''Test'', new byte[] { 72, 63, 62, 71, 92, 55 })", span="6394-6394"];
m6_2787 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="ReadTests.cs", label="JsonSerializer serializer = new JsonSerializer()", span="6396-6396"];
m6_2792 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="ReadTests.cs", label="serializer.Serialize(bsonWriter, test)", span="6403-6403"];
m6_2788 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="ReadTests.cs", label="serializer.TypeNameHandling = TypeNameHandling.All", span="6397-6397"];
m6_2797 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="ReadTests.cs", label="TestObject newObject = (TestObject)serializer.Deserialize(bsonReader)", span="6413-6413"];
m6_2789 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="ReadTests.cs", label="byte[] objectBytes", span="6399-6399"];
m6_2790 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="ReadTests.cs", label="MemoryStream bsonStream = new MemoryStream()", span="6400-6400"];
m6_2791 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="ReadTests.cs", label="JsonWriter bsonWriter = new JsonTextWriter(new StreamWriter(bsonStream))", span="6401-6401"];
m6_2794 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="ReadTests.cs", label="objectBytes = bsonStream.ToArray()", span="6406-6406"];
m6_2793 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="ReadTests.cs", label="bsonWriter.Flush()", span="6404-6404"];
m6_2795 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="ReadTests.cs", label="MemoryStream bsonStream = new MemoryStream(objectBytes)", span="6409-6409"];
m6_2796 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="ReadTests.cs", label="JsonReader bsonReader = new JsonTextReader(new StreamReader(bsonStream))", span="6410-6410"];
m6_2798 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="ReadTests.cs", label="Assert.AreEqual(''Test'', newObject.Name)", span="6415-6415"];
m6_2799 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="ReadTests.cs", label="CollectionAssert.AreEquivalent(new byte[] { 72, 63, 62, 71, 92, 55 }, newObject.Data)", span="6416-6416"];
m6_2800 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", span="6392-6392"];
m6_564 [cluster="Unk.ReadObject", file="ReadTests.cs", label="Entry Unk.ReadObject", span=""];
m6_1035 [cluster="Newtonsoft.Json.Tests.TestObjects.Co.Co()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Co.Co()", span="27-27"];
m6_1894 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.XNodeTestObject.XNodeTestObject()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.XNodeTestObject.XNodeTestObject()", span="4249-4249"];
m6_1640 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", span="3697-3697"];
m6_1641 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", file="ReadTests.cs", label="return ((IDictionary<string, T>)_innerDictionary).Contains(item);", span="3699-3699"];
m6_1642 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", span="3697-3697"];
m6_481 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", span="1040-1040"];
m6_482 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="ReadTests.cs", label="string value = JsonConvert.SerializeObject(new SetOnlyPropertyClass())", span="1042-1042"];
m6_483 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="ReadTests.cs", label="SetOnlyPropertyClass c = JsonConvert.DeserializeObject<SetOnlyPropertyClass>(value)", span="1044-1044"];
m6_484 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="ReadTests.cs", label="Assert.AreEqual(c.Field, ''Field'')", span="1046-1046"];
m6_485 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", span="1040-1040"];
m6_218 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="ReadTests.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="691-691"];
m6_1567 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KeyValueId.KeyValueId()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KeyValueId.KeyValueId()", span="3378-3378"];
m6_3094 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", span="7012-7012"];
m6_3095 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="ReadTests.cs", label="string json = ''{}''", span="7014-7014"];
m6_3096 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="ReadTests.cs", label="IList<string> errors = new List<string>()", span="7015-7015"];
m6_3098 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="ReadTests.cs", label="var o = JsonConvert.DeserializeObject<RequiredObject>(json, new JsonSerializerSettings\r\n        {\r\n          Error = error\r\n        })", span="7023-7026"];
m6_3097 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="ReadTests.cs", label="EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs> error = (s, e) =>\r\n        {\r\n          errors.Add(e.ErrorContext.Error.Message);\r\n          e.ErrorContext.Handled = true;\r\n        }", span="7017-7021"];
m6_3100 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="ReadTests.cs", label="Assert.AreEqual(4, errors.Count)", span="7029-7029"];
m6_3101 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="ReadTests.cs", label="Assert.AreEqual(''Required property 'NonAttributeProperty' not found in JSON. Path '', line 1, position 2.'', errors[0])", span="7030-7030"];
m6_3102 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="ReadTests.cs", label="Assert.AreEqual(''Required property 'UnsetProperty' not found in JSON. Path '', line 1, position 2.'', errors[1])", span="7031-7031"];
m6_3103 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="ReadTests.cs", label="Assert.AreEqual(''Required property 'AllowNullProperty' not found in JSON. Path '', line 1, position 2.'', errors[2])", span="7032-7032"];
m6_3104 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="ReadTests.cs", label="Assert.AreEqual(''Required property 'AlwaysProperty' not found in JSON. Path '', line 1, position 2.'', errors[3])", span="7033-7033"];
m6_3099 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="ReadTests.cs", label="Assert.IsNotNull(o)", span="7028-7028"];
m6_3105 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", span="7012-7012"];
m6_2606 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.System.Collections.IEnumerable.GetEnumerator()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.System.Collections.IEnumerable.GetEnumerator()", span="6005-6005"];
m6_2607 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.System.Collections.IEnumerable.GetEnumerator()", file="ReadTests.cs", label="throw new NotImplementedException();", span="6007-6007"];
m6_2608 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.System.Collections.IEnumerable.GetEnumerator()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.System.Collections.IEnumerable.GetEnumerator()", span="6005-6005"];
m6_930 [cluster="Newtonsoft.Json.Linq.JValue.ToString()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Linq.JValue.ToString()", span="752-752"];
m6_1053 [cluster="Newtonsoft.Json.Tests.TestObjects.LogEntry.LogEntry()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.LogEntry.LogEntry()", span="29-29"];
m6_330 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewProperties.SubWithoutContractNewProperties()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewProperties.SubWithoutContractNewProperties()", span="704-704"];
m6_846 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", span="1744-1744"];
m6_847 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="ReadTests.cs", label="DateTime testDate = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="1746-1746"];
m6_848 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="ReadTests.cs", label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="1747-1747"];
m6_849 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(m1, new JsonSerializerSettings\r\n      {\r\n        DateFormatHandling = DateFormatHandling.MicrosoftDateFormat,\r\n      })", span="1749-1752"];
m6_850 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="ReadTests.cs", label="Assert.AreEqual(@''{''''DefaultConverter'''':''''\/Date(0)\/'''',''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="1753-1753"];
m6_851 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="ReadTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n       ''Could not convert string to DateTime: /Date(0)/. Path 'DefaultConverter', line 1, position 33.'',\r\n       () =>\r\n       {\r\n         JsonConvert.DeserializeObject<MemberConverterClass>(json, new JsonSerializerSettings\r\n         {\r\n           DateParseHandling = DateParseHandling.None\r\n         });\r\n       })", span="1755-1763"];
m6_852 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", span="1744-1744"];
m6_4087 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.ToUInt16(System.IFormatProvider)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Ratio.ToUInt16(System.IFormatProvider)", span="9940-9940"];
m6_4088 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.ToUInt16(System.IFormatProvider)", file="ReadTests.cs", label="return (ushort)(this._numerator / this._denominator);", span="9942-9942"];
m6_4089 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.ToUInt16(System.IFormatProvider)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.Ratio.ToUInt16(System.IFormatProvider)", span="9940-9940"];
m6_3656 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", span="8584-8584"];
m6_3657 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="ReadTests.cs", label="string json = @''[\r\n  ''''NaN'''',\r\n  ''''Infinity'''',\r\n  ''''-Infinity''''\r\n]''", span="8586-8590"];
m6_3658 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="ReadTests.cs", label="IList<float> floats = JsonConvert.DeserializeObject<IList<float>>(json)", span="8592-8592"];
m6_3662 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="ReadTests.cs", label="IList<double> doubles = JsonConvert.DeserializeObject<IList<double>>(json)", span="8597-8597"];
m6_3659 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="ReadTests.cs", label="Assert.AreEqual(float.NaN, floats[0])", span="8593-8593"];
m6_3660 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="ReadTests.cs", label="Assert.AreEqual(float.PositiveInfinity, floats[1])", span="8594-8594"];
m6_3661 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="ReadTests.cs", label="Assert.AreEqual(float.NegativeInfinity, floats[2])", span="8595-8595"];
m6_3663 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="ReadTests.cs", label="Assert.AreEqual(float.NaN, doubles[0])", span="8598-8598"];
m6_3664 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="ReadTests.cs", label="Assert.AreEqual(float.PositiveInfinity, doubles[1])", span="8599-8599"];
m6_3665 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="ReadTests.cs", label="Assert.AreEqual(float.NegativeInfinity, doubles[2])", span="8600-8600"];
m6_3666 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", span="8584-8584"];
m6_1666 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", span="3735-3735"];
m6_1667 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", file="ReadTests.cs", label="return _innerDictionary.Remove(key);", span="3737-3737"];
m6_1668 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", span="3735-3735"];
m6_244 [cluster="Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="148-148"];
m6_2466 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", span="5572-5572"];
m6_2467 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="ReadTests.cs", label="ComplexItem i = new ComplexItem()", span="5574-5574"];
m6_2468 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(i, Formatting.Indented)", span="5576-5576"];
m6_2469 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="ReadTests.cs", label="Assert.AreEqual(@''{\r\n  ''''Name'''': null\r\n}'', json)", span="5578-5580"];
m6_2470 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", span="5572-5572"];
m6_1352 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", span="2907-2907"];
m6_1353 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", file="ReadTests.cs", label="string json = @''[]''", span="2909-2909"];
m6_1354 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", file="ReadTests.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'System.Double' because the type requires a JSON primitive value (e.g. string, number, boolean, null) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON primitive value (e.g. string, number, boolean, null) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<double>(json);\r\n        })", span="2911-2918"];
m6_1355 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", span="2907-2907"];
m6_3022 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", span="6864-6864"];
m6_3023 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="ReadTests.cs", label="NullableDateTimeTestClass c =\r\n        JsonConvert.DeserializeObject<NullableDateTimeTestClass>(\r\n          @''{''''PreField'''':''''Pre'''',''''DateTimeField'''':''''2008-12-12T12:12:12Z'''',''''DateTimeOffsetField'''':''''2008-12-12T12:12:12Z'''',''''PostField'''':''''Post''''}'',\r\n          new JsonSerializerSettings\r\n          {\r\n            DateTimeZoneHandling = DateTimeZoneHandling.Local\r\n          })", span="6866-6872"];
m6_3024 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="ReadTests.cs", label="Assert.AreEqual(new DateTime(2008, 12, 12, 12, 12, 12, 0, DateTimeKind.Utc).ToLocalTime(), c.DateTimeField)", span="6874-6874"];
m6_3025 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="ReadTests.cs", label="Assert.AreEqual(new DateTimeOffset(2008, 12, 12, 12, 12, 12, 0, TimeSpan.Zero), c.DateTimeOffsetField)", span="6875-6875"];
m6_3026 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="ReadTests.cs", label="Assert.AreEqual(''Pre'', c.PreField)", span="6876-6876"];
m6_3027 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="ReadTests.cs", label="Assert.AreEqual(''Post'', c.PostField)", span="6877-6877"];
m6_3028 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="ReadTests.cs", label="NullableDateTimeTestClass c2 =\r\n        JsonConvert.DeserializeObject<NullableDateTimeTestClass>(\r\n          @''{''''PreField'''':''''Pre'''',''''DateTimeField'''':null,''''DateTimeOffsetField'''':null,''''PostField'''':''''Post''''}'')", span="6879-6881"];
m6_3029 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="ReadTests.cs", label="Assert.AreEqual(null, c2.DateTimeField)", span="6883-6883"];
m6_3030 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="ReadTests.cs", label="Assert.AreEqual(null, c2.DateTimeOffsetField)", span="6884-6884"];
m6_3031 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="ReadTests.cs", label="Assert.AreEqual(''Pre'', c2.PreField)", span="6885-6885"];
m6_3032 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="ReadTests.cs", label="Assert.AreEqual(''Post'', c2.PostField)", span="6886-6886"];
m6_3033 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", span="6864-6864"];
m6_3989 [cluster="Newtonsoft.Json.Tests.Serialization.MetroStringConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.MetroStringConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="9630-9630"];
m6_3990 [cluster="Newtonsoft.Json.Tests.Serialization.MetroStringConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ReadTests.cs", label="writer.WriteValue('':::'' + value.ToString().ToUpper(CultureInfo.InvariantCulture) + '':::'')", span="9633-9633"];
m6_3991 [cluster="Newtonsoft.Json.Tests.Serialization.MetroStringConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.MetroStringConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="9630-9630"];
m6_1290 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericList()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericList()", span="2773-2773"];
m6_1291 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericList()", file="ReadTests.cs", label="string json = @''[\r\n        {\r\n          ''''Name'''': ''''Product 1'''',\r\n          ''''ExpiryDate'''': ''''\/Date(978048000000)\/'''',\r\n          ''''Price'''': 99.95,\r\n          ''''Sizes'''': null\r\n        },\r\n        {\r\n          ''''Name'''': ''''Product 2'''',\r\n          ''''ExpiryDate'''': ''''\/Date(1248998400000)\/'''',\r\n          ''''Price'''': 12.50,\r\n          ''''Sizes'''': null\r\n        }\r\n      ]''", span="2775-2788"];
m6_1292 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericList()", file="ReadTests.cs", label="List<Product> products = JsonConvert.DeserializeObject<List<Product>>(json)", span="2790-2790"];
m6_1293 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericList()", file="ReadTests.cs", label="Console.WriteLine(products.Count)", span="2792-2792"];
m6_1294 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericList()", file="ReadTests.cs", label="Product p1 = products[0]", span="2795-2795"];
m6_1296 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericList()", file="ReadTests.cs", label="Assert.AreEqual(2, products.Count)", span="2800-2800"];
m6_1297 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericList()", file="ReadTests.cs", label="Assert.AreEqual(''Product 1'', products[0].Name)", span="2801-2801"];
m6_1295 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericList()", file="ReadTests.cs", label="Console.WriteLine(p1.Name)", span="2797-2797"];
m6_1298 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericList()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericList()", span="2773-2773"];
m6_3590 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeName3DArray()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeName3DArray()", span="8296-8296"];
m6_3591 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeName3DArray()", file="ReadTests.cs", label="Event e1 = new Event\r\n      {\r\n        EventName = ''EventName!''\r\n      }", span="8298-8301"];
m6_3592 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeName3DArray()", file="ReadTests.cs", label="Event[,] array1 = new[,] { { e1, e1 }, { e1, e1 } }", span="8302-8302"];
m6_3593 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeName3DArray()", file="ReadTests.cs", label="IList<Event[,]> values1 = new List<Event[,]>\r\n        {\r\n          array1,\r\n          array1\r\n        }", span="8303-8307"];
m6_3594 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeName3DArray()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(values1, new JsonSerializerSettings\r\n      {\r\n        TypeNameHandling = TypeNameHandling.All,\r\n        Formatting = Formatting.Indented\r\n      })", span="8309-8313"];
m6_3595 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeName3DArray()", file="ReadTests.cs", label="Assert.AreEqual(@''{\r\n  ''''$type'''': ''''System.Collections.Generic.List`1[[Newtonsoft.Json.Tests.Serialization.Event[,], Newtonsoft.Json.Tests]], mscorlib'''',\r\n  ''''$values'''': [\r\n    {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.Event[,], Newtonsoft.Json.Tests'''',\r\n      ''''$values'''': [\r\n        [\r\n          {\r\n            ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.Event, Newtonsoft.Json.Tests'''',\r\n            ''''EventName'''': ''''EventName!'''',\r\n            ''''Venue'''': null,\r\n            ''''Performances'''': null\r\n          },\r\n          {\r\n            ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.Event, Newtonsoft.Json.Tests'''',\r\n            ''''EventName'''': ''''EventName!'''',\r\n            ''''Venue'''': null,\r\n            ''''Performances'''': null\r\n          }\r\n        ],\r\n        [\r\n          {\r\n            ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.Event, Newtonsoft.Json.Tests'''',\r\n            ''''EventName'''': ''''EventName!'''',\r\n            ''''Venue'''': null,\r\n            ''''Performances'''': null\r\n          },\r\n          {\r\n            ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.Event, Newtonsoft.Json.Tests'''',\r\n            ''''EventName'''': ''''EventName!'''',\r\n            ''''Venue'''': null,\r\n            ''''Performances'''': null\r\n          }\r\n        ]\r\n      ]\r\n    },\r\n    {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.Event[,], Newtonsoft.Json.Tests'''',\r\n      ''''$values'''': [\r\n        [\r\n          {\r\n            ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.Event, Newtonsoft.Json.Tests'''',\r\n            ''''EventName'''': ''''EventName!'''',\r\n            ''''Venue'''': null,\r\n            ''''Performances'''': null\r\n          },\r\n          {\r\n            ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.Event, Newtonsoft.Json.Tests'''',\r\n            ''''EventName'''': ''''EventName!'''',\r\n            ''''Venue'''': null,\r\n            ''''Performances'''': null\r\n          }\r\n        ],\r\n        [\r\n          {\r\n            ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.Event, Newtonsoft.Json.Tests'''',\r\n            ''''EventName'''': ''''EventName!'''',\r\n            ''''Venue'''': null,\r\n            ''''Performances'''': null\r\n          },\r\n          {\r\n            ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.Event, Newtonsoft.Json.Tests'''',\r\n            ''''EventName'''': ''''EventName!'''',\r\n            ''''Venue'''': null,\r\n            ''''Performances'''': null\r\n          }\r\n        ]\r\n      ]\r\n    }\r\n  ]\r\n}'', json)", span="8315-8385"];
m6_3596 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeName3DArray()", file="ReadTests.cs", label="IList<Event[,]> values2 = (IList<Event[,]>)JsonConvert.DeserializeObject(json, new JsonSerializerSettings\r\n        {\r\n          TypeNameHandling = TypeNameHandling.All\r\n        })", span="8387-8390"];
m6_3597 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeName3DArray()", file="ReadTests.cs", label="Assert.AreEqual(2, values2.Count)", span="8392-8392"];
m6_3598 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeName3DArray()", file="ReadTests.cs", label="Assert.AreEqual(''EventName!'', values2[0][0, 0].EventName)", span="8393-8393"];
m6_3599 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeName3DArray()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeName3DArray()", span="8296-8296"];
m6_494 [cluster="Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeTestClass.JsonIgnoreAttributeTestClass()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeTestClass.JsonIgnoreAttributeTestClass()", span="27-27"];
m6_3239 [cluster="Newtonsoft.Json.Tests.Serialization.DataContractSerializationAttributesClass.DataContractSerializationAttributesClass()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.DataContractSerializationAttributesClass.DataContractSerializationAttributesClass()", span="9672-9672"];
m6_1931 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="4359-4359"];
m6_1932 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReadTests.cs", label="throw new NotImplementedException();", span="4361-4361"];
m6_1933 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="4359-4359"];
m6_1618 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTestClass.DataContractJsonSerializerTestClass()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTestClass.DataContractJsonSerializerTestClass()", span="3591-3591"];
m6_3803 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateDefaultCtorList<T>.PrivateDefaultCtorList()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateDefaultCtorList<T>.PrivateDefaultCtorList()", span="8958-8958"];
m6_3804 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateDefaultCtorList<T>.PrivateDefaultCtorList()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateDefaultCtorList<T>.PrivateDefaultCtorList()", span="8958-8958"];
m6_1897 [cluster="Unk.IsNull", file="ReadTests.cs", label="Entry Unk.IsNull", span=""];
m6_3509 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithTooManyItems()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithTooManyItems()", span="8127-8127"];
m6_3510 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithTooManyItems()", file="ReadTests.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[[1,1,1],[1,1,2,1]],[[1,2,1],[1,2,2]],[[2,1,1],[2,1,2]],[[2,2,1],[2,2,2]]],''''After'''':''''After!''''}''", span="8129-8129"];
m6_3511 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithTooManyItems()", file="ReadTests.cs", label="ExceptionAssert.Throws<Exception>(\r\n        ''Cannot deserialize non-cubical array as multidimensional array.'',\r\n        () => JsonConvert.DeserializeObject<Array3D>(json))", span="8131-8133"];
m6_3512 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithTooManyItems()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithTooManyItems()", span="8127-8127"];
m6_826 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", span="1711-1711"];
m6_827 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="ReadTests.cs", label="DateTime testDate = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="1713-1713"];
m6_828 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="ReadTests.cs", label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="1714-1714"];
m6_832 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="ReadTests.cs", label="Assert.AreEqual(testDate, m2.DefaultConverter)", span="1721-1721"];
m6_833 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="ReadTests.cs", label="Assert.AreEqual(testDate, m2.MemberConverter)", span="1722-1722"];
m6_829 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(m1)", span="1716-1716"];
m6_830 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="ReadTests.cs", label="Assert.AreEqual(@''{''''DefaultConverter'''':''''1970-01-01T00:00:00Z'''',''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="1717-1717"];
m6_831 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="ReadTests.cs", label="MemberConverterClass m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json)", span="1719-1719"];
m6_834 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", span="1711-1711"];
m6_4113 [cluster="string.Format(System.IFormatProvider, string, object)", file="ReadTests.cs", label="Entry string.Format(System.IFormatProvider, string, object)", span="0-0"];
m6_1644 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", span="3702-3702"];
m6_1645 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", file="ReadTests.cs", label="return _innerDictionary.ContainsKey(key);", span="3704-3704"];
m6_1646 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", span="3702-3702"];
m6_82 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="ReadTests.cs", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
m6_1922 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="4349-4349"];
m6_1923 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ReadTests.cs", label="Pos p = (Pos)value", span="4351-4351"];
m6_1925 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ReadTests.cs", label="writer.WriteRawValue(String.Format(''new Pos({0},{1})'', p.X, p.Y))", span="4354-4354"];
m6_1926 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ReadTests.cs", label="writer.WriteNull()", span="4356-4356"];
m6_1924 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ReadTests.cs", label="p != null", span="4353-4353"];
m6_1927 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="4349-4349"];
m6_2862 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertableIntTestClass.ConvertableIntTestClass()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertableIntTestClass.ConvertableIntTestClass()", span="6523-6523"];
m6_4131 [cluster="string.IndexOf(char)", file="ReadTests.cs", label="Entry string.IndexOf(char)", span="0-0"];
m6_3070 [cluster="System.Enum.Parse(System.Type, string)", file="ReadTests.cs", label="Entry System.Enum.Parse(System.Type, string)", span="0-0"];
m6_79 [cluster="Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver.CamelCasePropertyNamesContractResolver()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver.CamelCasePropertyNamesContractResolver()", span="38-38"];
m6_2863 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ConvertibleInt(int)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.ConvertibleInt.ConvertibleInt(int)", span="1405-1405"];
m6_3213 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver(bool)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver(bool)", span="189-189"];
m6_1331 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", span="2860-2860"];
m6_1332 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", file="ReadTests.cs", label="string json = @''[]''", span="2862-2862"];
m6_1333 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", file="ReadTests.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'Newtonsoft.Json.Tests.TestObjects.Person' because the type requires a JSON object (e.g. {''''name'''':''''value''''}) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON object (e.g. {''''name'''':''''value''''}) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<Person>(json);\r\n        })", span="2864-2871"];
m6_1334 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", span="2860-2860"];
m6_2250 [cluster="System.Collections.Specialized.StringDictionary.StringDictionary()", file="ReadTests.cs", label="Entry System.Collections.Specialized.StringDictionary.StringDictionary()", span="0-0"];
m6_3110 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", span="7037-7037"];
m6_3111 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="ReadTests.cs", label="string json = ''{'NonAttributeProperty':null,'UnsetProperty':null,'AllowNullProperty':null,'AlwaysProperty':null}''", span="7039-7039"];
m6_3112 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="ReadTests.cs", label="IList<string> errors = new List<string>()", span="7040-7040"];
m6_3114 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="ReadTests.cs", label="var o = JsonConvert.DeserializeObject<RequiredObject>(json, new JsonSerializerSettings\r\n      {\r\n        Error = error\r\n      })", span="7048-7051"];
m6_3113 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="ReadTests.cs", label="EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs> error = (s, e) =>\r\n      {\r\n        errors.Add(e.ErrorContext.Error.Message);\r\n        e.ErrorContext.Handled = true;\r\n      }", span="7042-7046"];
m6_3116 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="ReadTests.cs", label="Assert.AreEqual(3, errors.Count)", span="7054-7054"];
m6_3117 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="ReadTests.cs", label="Assert.AreEqual(''Required property 'NonAttributeProperty' expects a value but got null. Path '', line 1, position 97.'', errors[0])", span="7055-7055"];
m6_3118 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="ReadTests.cs", label="Assert.AreEqual(''Required property 'UnsetProperty' expects a value but got null. Path '', line 1, position 97.'', errors[1])", span="7056-7056"];
m6_3119 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="ReadTests.cs", label="Assert.AreEqual(''Required property 'AlwaysProperty' expects a value but got null. Path '', line 1, position 97.'', errors[2])", span="7057-7057"];
m6_3115 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="ReadTests.cs", label="Assert.IsNotNull(o)", span="7053-7053"];
m6_3120 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", span="7037-7037"];
m6_599 [cluster="System.IO.StreamReader.ReadToEnd()", file="ReadTests.cs", label="Entry System.IO.StreamReader.ReadToEnd()", span="0-0"];
m6_1750 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, int)", file="ReadTests.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, int)", span="0-0"];
m6_253 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePublicExtensionData()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePublicExtensionData()", span="533-533"];
m6_254 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePublicExtensionData()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(new PublicExtensionDataAttributeTestClass\r\n        {\r\n          Name = ''Name!'',\r\n          ExtensionData = new Dictionary<object, object>\r\n            {\r\n              { ''Test'', 1 }\r\n            }\r\n        })", span="535-542"];
m6_255 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePublicExtensionData()", file="ReadTests.cs", label="Assert.AreEqual(@''{''''Name'''':''''Name!''''}'', json)", span="544-544"];
m6_256 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePublicExtensionData()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePublicExtensionData()", span="533-533"];
m6_3194 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", span="7236-7236"];
m6_3195 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="ReadTests.cs", label="var testObj = new PersonSerializable() { Name = ''John Doe'', Age = 28 }", span="7238-7238"];
m6_3196 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="ReadTests.cs", label="var objDeserialized = this.SerializeAndDeserialize<PersonSerializable>(testObj)", span="7239-7239"];
m6_3197 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="ReadTests.cs", label="Assert.AreEqual(testObj.Name, objDeserialized.Name)", span="7241-7241"];
m6_3198 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="ReadTests.cs", label="Assert.AreEqual(0, objDeserialized.Age)", span="7242-7242"];
m6_3199 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", span="7236-7236"];
m6_1319 [cluster="Newtonsoft.Json.Tests.TestObjects.SetOnlyPropertyClass2.GetValue()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.SetOnlyPropertyClass2.GetValue()", span="34-34"];
m6_1531 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", span="3341-3341"];
m6_1532 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", file="ReadTests.cs", label="Dictionary = new Dictionary<string, string>\r\n          {\r\n            {''existing'', ''yup''}\r\n          }", span="3343-3346"];
m6_1533 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", file="ReadTests.cs", label="List = new List<string>\r\n          {\r\n            ''existing''\r\n          }", span="3347-3350"];
m6_1534 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", span="3341-3341"];
m6_3439 [cluster="Newtonsoft.Json.Tests.Serialization.Array2D.Array2D()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Array2D.Array2D()", span="9697-9697"];
m6_2456 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", span="5535-5535"];
m6_2457 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="ReadTests.cs", label="EnumerableClass c = new EnumerableClass\r\n        {\r\n          Enumerable = new List<string> { ''One'', ''Two'', ''Three'' }\r\n        }", span="5537-5540"];
m6_2458 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="5542-5542"];
m6_2459 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="ReadTests.cs", label="Assert.AreEqual(@''{\r\n  ''''Enumerable'''': [\r\n    ''''One'''',\r\n    ''''Two'''',\r\n    ''''Three''''\r\n  ]\r\n}'', json)", span="5544-5550"];
m6_2460 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="ReadTests.cs", label="EnumerableClass c2 = JsonConvert.DeserializeObject<EnumerableClass>(json)", span="5552-5552"];
m6_2461 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="ReadTests.cs", label="Assert.AreEqual(''One'', c2.Enumerable.ElementAt(0))", span="5554-5554"];
m6_2462 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="ReadTests.cs", label="Assert.AreEqual(''Two'', c2.Enumerable.ElementAt(1))", span="5555-5555"];
m6_2463 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="ReadTests.cs", label="Assert.AreEqual(''Three'', c2.Enumerable.ElementAt(2))", span="5556-5556"];
m6_2464 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", span="5535-5535"];
m6_1803 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>.KVPair(TKey, TValue)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>.KVPair(TKey, TValue)", span="4042-4042"];
m6_1804 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>.KVPair(TKey, TValue)", file="ReadTests.cs", label="Key = k", span="4044-4044"];
m6_1805 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>.KVPair(TKey, TValue)", file="ReadTests.cs", label="Value = v", span="4045-4045"];
m6_1806 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>.KVPair(TKey, TValue)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>.KVPair(TKey, TValue)", span="4042-4042"];
m6_2878 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", span="6575-6575"];
m6_2879 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="ReadTests.cs", label="string json = @''{''''Id'''':{''''Value'''':''''id''''}}''", span="6577-6577"];
m6_2880 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="ReadTests.cs", label="Widget w = JsonConvert.DeserializeObject<Widget>(json)", span="6579-6579"];
m6_2881 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="ReadTests.cs", label="Assert.AreEqual(new WidgetId { Value = ''id'' }, w.Id)", span="6581-6581"];
m6_2882 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="ReadTests.cs", label="Assert.AreEqual(new WidgetId { Value = ''id'' }, w.Id.Value)", span="6582-6582"];
m6_2883 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="ReadTests.cs", label="Assert.AreEqual(''id'', w.Id.Value.Value)", span="6583-6583"];
m6_2884 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", span="6575-6575"];
m6_3958 [cluster="Newtonsoft.Json.Tests.Serialization.PersonWithPrivateConstructor.PersonWithPrivateConstructor()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.PersonWithPrivateConstructor.PersonWithPrivateConstructor()", span="9429-9429"];
m6_3959 [cluster="Newtonsoft.Json.Tests.Serialization.PersonWithPrivateConstructor.PersonWithPrivateConstructor()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.PersonWithPrivateConstructor.PersonWithPrivateConstructor()", span="9429-9429"];
m6_289 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExtensionDataAttributesInheritanceTest()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExtensionDataAttributesInheritanceTest()", span="605-605"];
m6_290 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExtensionDataAttributesInheritanceTest()", file="ReadTests.cs", label="var c = JsonConvert.DeserializeObject<ExtensionDataAttributesInheritanceTestClass>(''{'first':1,'second':2}'')", span="607-607"];
m6_291 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExtensionDataAttributesInheritanceTest()", file="ReadTests.cs", label="Assert.AreEqual(null, c.ExtensionData1)", span="609-609"];
m6_292 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExtensionDataAttributesInheritanceTest()", file="ReadTests.cs", label="Assert.AreEqual(null, c.ExtensionData2)", span="610-610"];
m6_293 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExtensionDataAttributesInheritanceTest()", file="ReadTests.cs", label="Assert.AreEqual(2, c.ExtensionData0.Count)", span="611-611"];
m6_294 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExtensionDataAttributesInheritanceTest()", file="ReadTests.cs", label="Assert.AreEqual(1, (int)c.ExtensionData0[''first''])", span="612-612"];
m6_295 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExtensionDataAttributesInheritanceTest()", file="ReadTests.cs", label="Assert.AreEqual(2, (int)c.ExtensionData0[''second''])", span="613-613"];
m6_296 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExtensionDataAttributesInheritanceTest()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExtensionDataAttributesInheritanceTest()", span="605-605"];
m6_2723 [cluster="System.IO.StringWriter.ToString()", file="ReadTests.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m6_837 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", span="1726-1726"];
m6_838 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="ReadTests.cs", label="DateTime testDate = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="1728-1728"];
m6_839 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="ReadTests.cs", label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="1729-1729"];
m6_843 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="ReadTests.cs", label="Assert.AreEqual(testDate, m2.DefaultConverter)", span="1739-1739"];
m6_844 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="ReadTests.cs", label="Assert.AreEqual(testDate, m2.MemberConverter)", span="1740-1740"];
m6_840 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(m1, new JsonSerializerSettings\r\n        {\r\n          DateFormatHandling = DateFormatHandling.MicrosoftDateFormat\r\n        })", span="1731-1734"];
m6_841 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="ReadTests.cs", label="Assert.AreEqual(@''{''''DefaultConverter'''':''''\/Date(0)\/'''',''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="1735-1735"];
m6_842 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="ReadTests.cs", label="MemberConverterClass m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json)", span="1737-1737"];
m6_845 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", span="1726-1726"];
m6_3415 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeReadOnlyCollections()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeReadOnlyCollections()", span="7816-7816"];
m6_3416 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeReadOnlyCollections()", file="ReadTests.cs", label="PopulateReadOnlyTestClass c1 = new PopulateReadOnlyTestClass()", span="7818-7818"];
m6_3417 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeReadOnlyCollections()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="7820-7820"];
m6_3418 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeReadOnlyCollections()", file="ReadTests.cs", label="Assert.AreEqual(@''{\r\n  ''''NonReadOnlyList'''': [\r\n    1\r\n  ],\r\n  ''''NonReadOnlyDictionary'''': {\r\n    ''''first'''': 2\r\n  },\r\n  ''''Array'''': [\r\n    3\r\n  ],\r\n  ''''List'''': [\r\n    4\r\n  ],\r\n  ''''Dictionary'''': {\r\n    ''''first'''': 5\r\n  },\r\n  ''''IReadOnlyCollection'''': [\r\n    6\r\n  ],\r\n  ''''ReadOnlyCollection'''': [\r\n    7\r\n  ],\r\n  ''''IReadOnlyList'''': [\r\n    8\r\n  ],\r\n  ''''IReadOnlyDictionary'''': {\r\n    ''''first'''': 9\r\n  },\r\n  ''''ReadOnlyDictionary'''': {\r\n    ''''first'''': 10\r\n  }\r\n}'', json)", span="7822-7853"];
m6_3419 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeReadOnlyCollections()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeReadOnlyCollections()", span="7816-7816"];
m6_3523 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithTooFewItems()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithTooFewItems()", span="8147-8147"];
m6_3524 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithTooFewItems()", file="ReadTests.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[[1,1,1],[1,1]],[[1,2,1],[1,2,2]],[[2,1,1],[2,1,2]],[[2,2,1],[2,2,2]]],''''After'''':''''After!''''}''", span="8149-8149"];
m6_3525 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithTooFewItems()", file="ReadTests.cs", label="ExceptionAssert.Throws<Exception>(\r\n        ''Cannot deserialize non-cubical array as multidimensional array.'',\r\n        () => JsonConvert.DeserializeObject<Array3D>(json))", span="8151-8153"];
m6_3526 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithTooFewItems()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithTooFewItems()", span="8147-8147"];
m6_2945 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", span="6716-6716"];
m6_2946 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="ReadTests.cs", label="var serializer = JsonSerializer.Create(new JsonSerializerSettings())", span="6718-6718"];
m6_2947 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="ReadTests.cs", label="var dict = serializer.Deserialize<Dictionary<string, string>>(new JsonTextReader(new StringReader(''{'k1':'','k2':'v2'}'')))", span="6719-6719"];
m6_2949 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="ReadTests.cs", label="var dict2 = serializer.Deserialize<Dictionary<string, object>>(reader)", span="6722-6722"];
m6_2948 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="ReadTests.cs", label="var reader = new JsonTextReader(new StringReader(''{'k1':'','k2':'v2'}''))", span="6721-6721"];
m6_2950 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="ReadTests.cs", label="Assert.AreEqual(dict[''k1''], dict2[''k1''])", span="6724-6724"];
m6_2951 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", span="6716-6716"];
m6_2197 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.DictionaryKey()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.DictionaryKey()", span="4901-4901"];
m6_4134 [cluster="string.Substring(int)", file="ReadTests.cs", label="Entry string.Substring(int)", span="0-0"];
m6_387 [cluster="Newtonsoft.Json.Linq.JObject.JObject(object)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Linq.JObject.JObject(object)", span="113-113"];
m6_331 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", span="856-856"];
m6_364 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="ReadTests.cs", label="MemoryStream ms = new MemoryStream()", span="858-858"];
m6_365 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="ReadTests.cs", label="DataContractJsonSerializer s = new DataContractJsonSerializer(o.GetType())", span="859-859"];
m6_366 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="ReadTests.cs", label="s.WriteObject(ms, o)", span="860-860"];
m6_370 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="ReadTests.cs", label="JObject jsonNetJson = JObject.Parse(JsonConvert.SerializeObject(o))", span="866-866"];
m6_372 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="ReadTests.cs", label="Console.WriteLine(''Results for '' + o.GetType().Name)", span="869-869"];
m6_367 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="ReadTests.cs", label="var data = ms.ToArray()", span="862-862"];
m6_368 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="ReadTests.cs", label="JObject dataContractJson = JObject.Parse(Encoding.UTF8.GetString(data, 0, data.Length))", span="863-863"];
m6_369 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="ReadTests.cs", label="dataContractJson = new JObject(dataContractJson.Properties().OrderBy(p => p.Name))", span="864-864"];
m6_373 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="ReadTests.cs", label="Console.WriteLine(''DataContractJsonSerializer: '' + dataContractJson)", span="870-870"];
m6_375 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="ReadTests.cs", label="Assert.AreEqual(dataContractJson.Count, jsonNetJson.Count)", span="873-873"];
m6_376 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="ReadTests.cs", label=dataContractJson, span="874-874"];
m6_371 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="ReadTests.cs", label="jsonNetJson = new JObject(jsonNetJson.Properties().OrderBy(p => p.Name))", span="867-867"];
m6_374 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="ReadTests.cs", label="Console.WriteLine(''JsonDotNetSerializer      : '' + jsonNetJson)", span="871-871"];
m6_377 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="ReadTests.cs", label="Assert.IsTrue(JToken.DeepEquals(jsonNetJson[property.Key], property.Value), ''Property not equal: '' + property.Key)", span="876-876"];
m6_378 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="ReadTests.cs", label="return jsonNetJson.ToString();", span="879-879"];
m6_379 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", span="856-856"];
m6_3125 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", span="7061-7061"];
m6_3126 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="ReadTests.cs", label="IList<string> errors = new List<string>()", span="7063-7063"];
m6_3127 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="ReadTests.cs", label="EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs> error = (s, e) =>\r\n      {\r\n        errors.Add(e.ErrorContext.Error.Message);\r\n        e.ErrorContext.Handled = true;\r\n      }", span="7065-7069"];
m6_3130 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="ReadTests.cs", label="Assert.AreEqual(3, errors.Count)", span="7082-7082"];
m6_3131 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="ReadTests.cs", label="Assert.AreEqual(''Cannot write a null value for property 'NonAttributeProperty'. Property requires a value. Path ''.'', errors[0])", span="7083-7083"];
m6_3132 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="ReadTests.cs", label="Assert.AreEqual(''Cannot write a null value for property 'UnsetProperty'. Property requires a value. Path ''.'', errors[1])", span="7084-7084"];
m6_3133 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="ReadTests.cs", label="Assert.AreEqual(''Cannot write a null value for property 'AlwaysProperty'. Property requires a value. Path ''.'', errors[2])", span="7085-7085"];
m6_3128 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(new RequiredObject(), new JsonSerializerSettings\r\n      {\r\n        Error = error,\r\n        Formatting = Formatting.Indented\r\n      })", span="7071-7075"];
m6_3129 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="ReadTests.cs", label="Assert.AreEqual(@''{\r\n  ''''DefaultProperty'''': null,\r\n  ''''AllowNullProperty'''': null\r\n}'', json)", span="7077-7080"];
m6_3134 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", span="7061-7061"];
m6_677 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", span="1442-1442"];
m6_678 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="ReadTests.cs", label="string json = ''{foo:'hello',bar:[1,2,3]}''", span="1444-1444"];
m6_679 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="ReadTests.cs", label="ClassWithArray wibble = JsonConvert.DeserializeObject<ClassWithArray>(json)", span="1445-1445"];
m6_680 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="ReadTests.cs", label="Assert.AreEqual(''hello'', wibble.Foo)", span="1446-1446"];
m6_681 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="ReadTests.cs", label="Assert.AreEqual(4, wibble.Bar.Count)", span="1448-1448"];
m6_682 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="ReadTests.cs", label="Assert.AreEqual(int.MaxValue, wibble.Bar[0])", span="1449-1449"];
m6_683 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="ReadTests.cs", label="Assert.AreEqual(1, wibble.Bar[1])", span="1450-1450"];
m6_684 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="ReadTests.cs", label="Assert.AreEqual(2, wibble.Bar[2])", span="1451-1451"];
m6_685 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="ReadTests.cs", label="Assert.AreEqual(3, wibble.Bar[3])", span="1452-1452"];
m6_686 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", span="1442-1442"];
m6_2750 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableKeyValuePairArray()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableKeyValuePairArray()", span="6338-6338"];
m6_2751 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableKeyValuePairArray()", file="ReadTests.cs", label="string json = @''[ { ''''Value'''': [ ''''1'''', ''''2'''' ], ''''Key'''': ''''aaa'''', ''''BadContent'''': [ 0 ] }, null, { ''''Value'''': [ ''''3'''', ''''4'''' ], ''''Key'''': ''''bbb'''' } ]''", span="6340-6340"];
m6_2752 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableKeyValuePairArray()", file="ReadTests.cs", label="IList<KeyValuePair<string, IList<string>>?> values = JsonConvert.DeserializeObject<IList<KeyValuePair<string, IList<string>>?>>(json)", span="6342-6342"];
m6_2753 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableKeyValuePairArray()", file="ReadTests.cs", label="Assert.AreEqual(3, values.Count)", span="6344-6344"];
m6_2754 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableKeyValuePairArray()", file="ReadTests.cs", label="Assert.AreEqual(''aaa'', values[0].Value.Key)", span="6345-6345"];
m6_2755 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableKeyValuePairArray()", file="ReadTests.cs", label="Assert.AreEqual(2, values[0].Value.Value.Count)", span="6346-6346"];
m6_2756 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableKeyValuePairArray()", file="ReadTests.cs", label="Assert.AreEqual(''1'', values[0].Value.Value[0])", span="6347-6347"];
m6_2757 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableKeyValuePairArray()", file="ReadTests.cs", label="Assert.AreEqual(''2'', values[0].Value.Value[1])", span="6348-6348"];
m6_2758 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableKeyValuePairArray()", file="ReadTests.cs", label="Assert.AreEqual(null, values[1])", span="6349-6349"];
m6_2759 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableKeyValuePairArray()", file="ReadTests.cs", label="Assert.AreEqual(''bbb'', values[2].Value.Key)", span="6350-6350"];
m6_2760 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableKeyValuePairArray()", file="ReadTests.cs", label="Assert.AreEqual(2, values[2].Value.Value.Count)", span="6351-6351"];
m6_2761 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableKeyValuePairArray()", file="ReadTests.cs", label="Assert.AreEqual(''3'', values[2].Value.Value[0])", span="6352-6352"];
m6_2762 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableKeyValuePairArray()", file="ReadTests.cs", label="Assert.AreEqual(''4'', values[2].Value.Value[1])", span="6353-6353"];
m6_2763 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableKeyValuePairArray()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableKeyValuePairArray()", span="6338-6338"];
m6_667 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", file="ReadTests.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", span="660-660"];
m6_3752 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyDictionaryInterface()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyDictionaryInterface()", span="8819-8819"];
m6_3753 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyDictionaryInterface()", file="ReadTests.cs", label="IReadOnlyDictionary<string, int> dic = JsonConvert.DeserializeObject<IReadOnlyDictionary<string, int>>(''{'one':1,'two':2}'')", span="8821-8821"];
m6_3754 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyDictionaryInterface()", file="ReadTests.cs", label="Assert.AreEqual(2, dic.Count)", span="8823-8823"];
m6_3755 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyDictionaryInterface()", file="ReadTests.cs", label="Assert.AreEqual(1, dic[''one''])", span="8825-8825"];
m6_3756 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyDictionaryInterface()", file="ReadTests.cs", label="Assert.AreEqual(2, dic[''two''])", span="8826-8826"];
m6_3757 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyDictionaryInterface()", file="ReadTests.cs", label="CustomAssert.IsInstanceOfType(typeof(ReadOnlyDictionary<string, int>), dic)", span="8828-8828"];
m6_3758 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyDictionaryInterface()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyDictionaryInterface()", span="8819-8819"];
m6_902 [cluster="Newtonsoft.Json.Tests.TestObjects.IncompatibleJsonAttributeClass.IncompatibleJsonAttributeClass()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.IncompatibleJsonAttributeClass.IncompatibleJsonAttributeClass()", span="30-30"];
m6_2698 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableValueGenericDictionary()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableValueGenericDictionary()", span="6243-6243"];
m6_2699 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableValueGenericDictionary()", file="ReadTests.cs", label="IDictionary<string, int?> v1 = new Dictionary<string, int?>\r\n        {\r\n          {''First'', 1},\r\n          {''Second'', null},\r\n          {''Third'', 3}\r\n        }", span="6245-6250"];
m6_2700 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableValueGenericDictionary()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(v1, Formatting.Indented)", span="6252-6252"];
m6_2701 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableValueGenericDictionary()", file="ReadTests.cs", label="Assert.AreEqual(@''{\r\n  ''''First'''': 1,\r\n  ''''Second'''': null,\r\n  ''''Third'''': 3\r\n}'', json)", span="6254-6258"];
m6_2702 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableValueGenericDictionary()", file="ReadTests.cs", label="IDictionary<string, int?> v2 = JsonConvert.DeserializeObject<IDictionary<string, int?>>(json)", span="6260-6260"];
m6_2703 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableValueGenericDictionary()", file="ReadTests.cs", label="Assert.AreEqual(3, v2.Count)", span="6261-6261"];
m6_2704 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableValueGenericDictionary()", file="ReadTests.cs", label="Assert.AreEqual(1, v2[''First''])", span="6262-6262"];
m6_2705 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableValueGenericDictionary()", file="ReadTests.cs", label="Assert.AreEqual(null, v2[''Second''])", span="6263-6263"];
m6_2706 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableValueGenericDictionary()", file="ReadTests.cs", label="Assert.AreEqual(3, v2[''Third''])", span="6264-6264"];
m6_2707 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableValueGenericDictionary()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableValueGenericDictionary()", span="6243-6243"];
m6_2421 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor(string)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor(string)", span="5459-5459"];
m6_2422 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor(string)", file="ReadTests.cs", label="Value = value", span="5461-5461"];
m6_2423 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor(string)", file="ReadTests.cs", label="Constructor = ''Public Paramatized''", span="5462-5462"];
m6_2424 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor(string)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor(string)", span="5459-5459"];
m6_1759 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, float)", file="ReadTests.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, float)", span="0-0"];
m6_3398 [cluster="System.Tuple.Create<T1>(T1)", file="ReadTests.cs", label="Entry System.Tuple.Create<T1>(T1)", span="0-0"];
m6_3414 [cluster="System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.ReadOnlyDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="ReadTests.cs", label="Entry System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.ReadOnlyDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0"];
m6_145 [cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="ReadTests.cs", label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="347-347"];
m6_1719 [cluster="System.Runtime.Serialization.SerializationInfo.GetChar(string)", file="ReadTests.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetChar(string)", span="0-0"];
m6_4054 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.ToDateTime(System.IFormatProvider)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Ratio.ToDateTime(System.IFormatProvider)", span="9884-9884"];
m6_4055 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.ToDateTime(System.IFormatProvider)", file="ReadTests.cs", label="return Convert.ToDateTime(this._numerator / this._denominator);", span="9886-9886"];
m6_4056 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.ToDateTime(System.IFormatProvider)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.Ratio.ToDateTime(System.IFormatProvider)", span="9884-9884"];
m6_614 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", span="1337-1337"];
m6_615 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="ReadTests.cs", label="Dictionary<int, int> values = new Dictionary<int, int>()", span="1339-1339"];
m6_616 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="ReadTests.cs", label="values.Add(-5, 6)", span="1340-1340"];
m6_617 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="ReadTests.cs", label="values.Add(int.MinValue, int.MaxValue)", span="1341-1341"];
m6_618 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(values)", span="1343-1343"];
m6_621 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="ReadTests.cs", label="CollectionAssert.AreEqual(values, newValues)", span="1349-1349"];
m6_619 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="ReadTests.cs", label="Assert.AreEqual(@''{''''-5'''':6,''''-2147483648'''':2147483647}'', json)", span="1345-1345"];
m6_620 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="ReadTests.cs", label="Dictionary<int, int> newValues = JsonConvert.DeserializeObject<Dictionary<int, int>>(json)", span="1347-1347"];
m6_622 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", span="1337-1337"];
m6_1949 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.CanConvert(System.Type)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.CanConvert(System.Type)", span="4387-4387"];
m6_1950 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.CanConvert(System.Type)", file="ReadTests.cs", label="return objectType.IsAssignableFrom(typeof(PosDouble));", span="4389-4389"];
m6_1951 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.CanConvert(System.Type)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.CanConvert(System.Type)", span="4387-4387"];
m6_2228 [cluster="System.Collections.Generic.HashSet<T>.Contains(T)", file="ReadTests.cs", label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0"];
m6_3230 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTestClass.IgnoreDataMemberTestClass()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTestClass.IgnoreDataMemberTestClass()", span="7324-7324"];
m6_3928 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", span="9258-9258"];
m6_3929 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="ReadTests.cs", label="var consoleWriter = new ConsoleWriter()", span="9260-9260"];
m6_3930 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="ReadTests.cs", label="var options = new JsonSerializerSettings\r\n                      {\r\n                        Converters = new JsonConverterCollection {new TypeConverterJsonConverter()},\r\n                        //TypeNameHandling = TypeNameHandling.All\r\n                      }", span="9263-9267"];
m6_3931 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="ReadTests.cs", label="var text1 = JsonConvert.SerializeObject(consoleWriter, Formatting.Indented, options)", span="9273-9273"];
m6_3936 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="ReadTests.cs", label="dict2.Add(consoleWriter, ''Console'')", span="9284-9284"];
m6_3942 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="ReadTests.cs", label="dict3.Add(''Console'', consoleWriter)", span="9299-9299"];
m6_3933 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="ReadTests.cs", label="var restoredWriter = JsonConvert.DeserializeObject<IMyInterface>(text1, options)", span="9276-9276"];
m6_3937 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="ReadTests.cs", label="var text2 = JsonConvert.SerializeObject(dict2, Formatting.Indented, options)", span="9286-9286"];
m6_3939 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="ReadTests.cs", label="var restoredObject = JsonConvert.DeserializeObject<Dictionary<IMyInterface, string>>(text2, options)", span="9291-9291"];
m6_3943 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="ReadTests.cs", label="var text3 = JsonConvert.SerializeObject(dict3, Formatting.Indented, options)", span="9301-9301"];
m6_3945 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="ReadTests.cs", label="var restoredDict2 = JsonConvert.DeserializeObject<Dictionary<string, IMyInterface>>(text3, options)", span="9306-9306"];
m6_3932 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="ReadTests.cs", label="Assert.AreEqual(@''''''Console Writer'''''', text1)", span="9274-9274"];
m6_3934 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="ReadTests.cs", label="Assert.AreEqual(''ConsoleWriter'', restoredWriter.PrintTest())", span="9277-9277"];
m6_3935 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="ReadTests.cs", label="var dict2 = new Dictionary<IMyInterface, string>()", span="9283-9283"];
m6_3938 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="ReadTests.cs", label="Assert.AreEqual(@''{\r\n  ''''Console Writer'''': ''''Console''''\r\n}'', text2)", span="9287-9289"];
m6_3940 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="ReadTests.cs", label="Assert.AreEqual(''ConsoleWriter'', restoredObject.First().Key.PrintTest())", span="9292-9292"];
m6_3941 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="ReadTests.cs", label="var dict3 = new Dictionary<string, IMyInterface>()", span="9298-9298"];
m6_3944 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="ReadTests.cs", label="Assert.AreEqual(@''{\r\n  ''''Console'''': ''''Console Writer''''\r\n}'', text3)", span="9302-9304"];
m6_3946 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="ReadTests.cs", label="Assert.AreEqual(''ConsoleWriter'', restoredDict2.First().Value.PrintTest())", span="9307-9307"];
m6_3947 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", span="9258-9258"];
m6_4064 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.ToInt16(System.IFormatProvider)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Ratio.ToInt16(System.IFormatProvider)", span="9901-9901"];
m6_4065 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.ToInt16(System.IFormatProvider)", file="ReadTests.cs", label="return (short)(this._numerator / this._denominator);", span="9903-9903"];
m6_4066 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.ToInt16(System.IFormatProvider)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.Ratio.ToInt16(System.IFormatProvider)", span="9901-9901"];
m6_1517 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", span="3309-3309"];
m6_1518 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="ReadTests.cs", label="PersonPropertyClass personPropertyClass = new PersonPropertyClass()", span="3311-3311"];
m6_1519 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="ReadTests.cs", label="WagePerson wagePerson = (WagePerson)personPropertyClass.Person", span="3312-3312"];
m6_1525 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(personPropertyClass, Formatting.Indented)", span="3320-3320"];
m6_1520 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="ReadTests.cs", label="wagePerson.BirthDate = new DateTime(2000, 11, 29, 23, 59, 59, DateTimeKind.Utc)", span="3314-3314"];
m6_1521 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="ReadTests.cs", label="wagePerson.Department = ''McDees''", span="3315-3315"];
m6_1522 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="ReadTests.cs", label="wagePerson.HourlyWage = 12.50m", span="3316-3316"];
m6_1523 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="ReadTests.cs", label="wagePerson.LastModified = new DateTime(2000, 11, 29, 23, 59, 59, DateTimeKind.Utc)", span="3317-3317"];
m6_1524 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="ReadTests.cs", label="wagePerson.Name = ''Jim Bob''", span="3318-3318"];
m6_1528 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="ReadTests.cs", label="Assert.AreEqual(wagePerson.HourlyWage, ((WagePerson)newPersonPropertyClass.Person).HourlyWage)", span="3333-3333"];
m6_1526 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="ReadTests.cs", label="Assert.AreEqual(\r\n        @''{\r\n  ''''Person'''': {\r\n    ''''HourlyWage'''': 12.50,\r\n    ''''Name'''': ''''Jim Bob'''',\r\n    ''''BirthDate'''': ''''2000-11-29T23:59:59Z'''',\r\n    ''''LastModified'''': ''''2000-11-29T23:59:59Z''''\r\n  }\r\n}'',\r\n        json)", span="3321-3330"];
m6_1527 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="ReadTests.cs", label="PersonPropertyClass newPersonPropertyClass = JsonConvert.DeserializeObject<PersonPropertyClass>(json)", span="3332-3332"];
m6_1529 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", span="3309-3309"];
m6_1067 [cluster="Newtonsoft.Json.Tests.TestObjects.GenericListAndDictionaryInterfaceProperties.GenericListAndDictionaryInterfaceProperties()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.GenericListAndDictionaryInterfaceProperties.GenericListAndDictionaryInterfaceProperties()", span="29-29"];
m6_895 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", span="1836-1836"];
m6_896 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", file="ReadTests.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''Unexpected value when converting date. Expected DateTime or DateTimeOffset, got Newtonsoft.Json.Tests.TestObjects.IncompatibleJsonAttributeClass.'',\r\n        () =>\r\n        {\r\n          IncompatibleJsonAttributeClass c = new IncompatibleJsonAttributeClass();\r\n          JsonConvert.SerializeObject(c);\r\n        })", span="1838-1844"];
m6_897 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", span="1836-1836"];
m6_4000 [cluster="string.Trim(params char[])", file="ReadTests.cs", label="Entry string.Trim(params char[])", span="0-0"];
m6_2033 [cluster="Newtonsoft.Json.JsonConvert.PopulateObject(string, object, Newtonsoft.Json.JsonSerializerSettings)", file="ReadTests.cs", label="Entry Newtonsoft.Json.JsonConvert.PopulateObject(string, object, Newtonsoft.Json.JsonSerializerSettings)", span="884-884"];
m6_1582 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", span="3493-3493"];
m6_1583 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", file="ReadTests.cs", label="string json = ''{'$id':'1',key1:'value1',key2:'value2',key3:'value3'}''", span="3495-3495"];
m6_1584 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", file="ReadTests.cs", label="ExceptionAssert.Throws<JsonSerializationException>(''Cannot preserve reference to readonly dictionary, or dictionary created from a non-default constructor: Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+DictionaryWithNoDefaultConstructor. Path 'key1', line 1, position 16.'',\r\n        () => JsonConvert.DeserializeObject<DictionaryWithNoDefaultConstructor>(json, new JsonSerializerSettings { PreserveReferencesHandling = PreserveReferencesHandling.All }))", span="3497-3498"];
m6_1585 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", span="3493-3493"];
m6_502 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", span="1149-1149"];
m6_503 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="ReadTests.cs", label="string jsonText = @''{\r\n'''''''':'''''''',\r\n''''label'''': [\r\n       [''''SomeName'''',6]\r\n],\r\n''''torrents'''': [\r\n       [''''192D99A5C943555CB7F00A852821CF6D6DB3008A'''',201,''''filename.avi'''',178311826,1000,178311826,72815250,408,1603,7,121430,''''NameOfLabelPrevioslyDefined'''',3,6,0,8,128954,-1,0],\r\n],\r\n''''torrentc'''': ''''1816000723''''\r\n}''", span="1151-1160"];
m6_504 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="ReadTests.cs", label="JObject o = (JObject)JsonConvert.DeserializeObject(jsonText)", span="1162-1162"];
m6_505 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="ReadTests.cs", label="Assert.AreEqual(4, o.Children().Count())", span="1163-1163"];
m6_506 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="ReadTests.cs", label="JToken torrentsArray = (JToken)o[''torrents'']", span="1165-1165"];
m6_507 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="ReadTests.cs", label="JToken nestedTorrentsArray = (JToken)torrentsArray[0]", span="1166-1166"];
m6_508 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="ReadTests.cs", label="Assert.AreEqual(nestedTorrentsArray.Children().Count(), 19)", span="1167-1167"];
m6_509 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", span="1149-1149"];
m6_1248 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrimitiveValuesInObjectArray()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrimitiveValuesInObjectArray()", span="2671-2671"];
m6_1249 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrimitiveValuesInObjectArray()", file="ReadTests.cs", label="string json = @''{''''action'''':''''Router'''',''''method'''':''''Navigate'''',''''data'''':[''''dashboard'''',null],''''type'''':''''rpc'''',''''tid'''':2}''", span="2673-2673"];
m6_1250 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrimitiveValuesInObjectArray()", file="ReadTests.cs", label="ObjectArrayPropertyTest o = JsonConvert.DeserializeObject<ObjectArrayPropertyTest>(json)", span="2675-2675"];
m6_1251 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrimitiveValuesInObjectArray()", file="ReadTests.cs", label="Assert.AreEqual(''Router'', o.Action)", span="2677-2677"];
m6_1252 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrimitiveValuesInObjectArray()", file="ReadTests.cs", label="Assert.AreEqual(''Navigate'', o.Method)", span="2678-2678"];
m6_1253 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrimitiveValuesInObjectArray()", file="ReadTests.cs", label="Assert.AreEqual(2, o.Data.Length)", span="2679-2679"];
m6_1254 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrimitiveValuesInObjectArray()", file="ReadTests.cs", label="Assert.AreEqual(''dashboard'', o.Data[0])", span="2680-2680"];
m6_1255 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrimitiveValuesInObjectArray()", file="ReadTests.cs", label="Assert.AreEqual(null, o.Data[1])", span="2681-2681"];
m6_1256 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrimitiveValuesInObjectArray()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrimitiveValuesInObjectArray()", span="2671-2671"];
m6_2042 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.CanConvert(System.Type)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.CanConvert(System.Type)", span="4566-4566"];
m6_2043 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.CanConvert(System.Type)", file="ReadTests.cs", label="return (objectType == typeof(string));", span="4568-4568"];
m6_2044 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.CanConvert(System.Type)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.CanConvert(System.Type)", span="4566-4566"];
m6_3600 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", file="ReadTests.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", span="669-669"];
m6_3893 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConsoleWriter.ToString()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConsoleWriter.ToString()", span="9193-9193"];
m6_3894 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConsoleWriter.ToString()", file="ReadTests.cs", label="return Name;", span="9195-9195"];
m6_3895 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConsoleWriter.ToString()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConsoleWriter.ToString()", span="9193-9193"];
m6_3993 [cluster="Newtonsoft.Json.Tests.Serialization.MetroStringConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.MetroStringConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="9639-9639"];
m6_3994 [cluster="Newtonsoft.Json.Tests.Serialization.MetroStringConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReadTests.cs", label="string s = (string)reader.Value", span="9641-9641"];
m6_3995 [cluster="Newtonsoft.Json.Tests.Serialization.MetroStringConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReadTests.cs", label="s == null", span="9642-9642"];
m6_3997 [cluster="Newtonsoft.Json.Tests.Serialization.MetroStringConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReadTests.cs", label="return s.ToLower(CultureInfo.InvariantCulture).Trim(new[] { ':' });", span="9646-9646"];
m6_3996 [cluster="Newtonsoft.Json.Tests.Serialization.MetroStringConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReadTests.cs", label="return null;", span="9643-9643"];
m6_3998 [cluster="Newtonsoft.Json.Tests.Serialization.MetroStringConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.MetroStringConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="9639-9639"];
m6_4083 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.ToType(System.Type, System.IFormatProvider)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Ratio.ToType(System.Type, System.IFormatProvider)", span="9935-9935"];
m6_4084 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.ToType(System.Type, System.IFormatProvider)", file="ReadTests.cs", label="return Convert.ChangeType(ToDouble(provider), conversionType, provider);", span="9937-9937"];
m6_4085 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.ToType(System.Type, System.IFormatProvider)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.Ratio.ToType(System.Type, System.IFormatProvider)", span="9935-9935"];
m6_1669 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="ReadTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0"];
m6_297 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericCollectionInheritance()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericCollectionInheritance()", span="617-617"];
m6_298 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericCollectionInheritance()", file="ReadTests.cs", label="string json", span="619-619"];
m6_299 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericCollectionInheritance()", file="ReadTests.cs", label="GenericClass<GenericItem<string>, string> foo1 = new GenericClass<GenericItem<string>, string>()", span="621-621"];
m6_300 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericCollectionInheritance()", file="ReadTests.cs", label="foo1.Items.Add(new GenericItem<string> {Value = ''Hello''})", span="622-622"];
m6_301 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericCollectionInheritance()", file="ReadTests.cs", label="json = JsonConvert.SerializeObject(new {selectList = foo1})", span="624-624"];
m6_302 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericCollectionInheritance()", file="ReadTests.cs", label="Assert.AreEqual(@''{''''selectList'''':[{''''Value'''':''''Hello''''}]}'', json)", span="625-625"];
m6_303 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericCollectionInheritance()", file="ReadTests.cs", label="GenericClass<NonGenericItem, string> foo2 = new GenericClass<NonGenericItem, string>()", span="627-627"];
m6_304 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericCollectionInheritance()", file="ReadTests.cs", label="foo2.Items.Add(new NonGenericItem {Value = ''Hello''})", span="628-628"];
m6_305 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericCollectionInheritance()", file="ReadTests.cs", label="json = JsonConvert.SerializeObject(new { selectList = foo2 })", span="630-630"];
m6_306 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericCollectionInheritance()", file="ReadTests.cs", label="Assert.AreEqual(@''{''''selectList'''':[{''''Value'''':''''Hello''''}]}'', json)", span="631-631"];
m6_307 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericCollectionInheritance()", file="ReadTests.cs", label="NonGenericClass foo3 = new NonGenericClass()", span="633-633"];
m6_308 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericCollectionInheritance()", file="ReadTests.cs", label="foo3.Items.Add(new NonGenericItem {Value = ''Hello''})", span="634-634"];
m6_309 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericCollectionInheritance()", file="ReadTests.cs", label="json = JsonConvert.SerializeObject(new { selectList = foo3 })", span="636-636"];
m6_310 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericCollectionInheritance()", file="ReadTests.cs", label="Assert.AreEqual(@''{''''selectList'''':[{''''Value'''':''''Hello''''}]}'', json)", span="637-637"];
m6_311 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericCollectionInheritance()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericCollectionInheritance()", span="617-617"];
m6_1089 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", span="2257-2257"];
m6_1090 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="ReadTests.cs", label="SubKlass i = new SubKlass(''my subprop'')", span="2259-2259"];
m6_1091 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="ReadTests.cs", label="i.SuperProp = ''overrided superprop''", span="2260-2260"];
m6_1092 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(i, new JsonSerializerSettings\r\n        {\r\n          PreserveReferencesHandling = PreserveReferencesHandling.Objects\r\n        })", span="2262-2265"];
m6_1093 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="ReadTests.cs", label="Assert.AreEqual(@''{''''$id'''':''''1'''',''''SubProp'''':''''my subprop'''',''''SuperProp'''':''''overrided superprop''''}'', json)", span="2267-2267"];
m6_1094 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="ReadTests.cs", label="SubKlass ii = JsonConvert.DeserializeObject<SubKlass>(json, new JsonSerializerSettings\r\n        {\r\n          PreserveReferencesHandling = PreserveReferencesHandling.Objects\r\n        })", span="2269-2272"];
m6_1095 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="ReadTests.cs", label="string newJson = JsonConvert.SerializeObject(ii, new JsonSerializerSettings\r\n      {\r\n        PreserveReferencesHandling = PreserveReferencesHandling.Objects\r\n      })", span="2274-2277"];
m6_1096 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="ReadTests.cs", label="Assert.AreEqual(@''{''''$id'''':''''1'''',''''SubProp'''':''''my subprop'''',''''SuperProp'''':''''overrided superprop''''}'', newJson)", span="2278-2278"];
m6_1097 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", span="2257-2257"];
m6_1723 [cluster="System.Runtime.Serialization.SerializationInfo.GetInt64(string)", file="ReadTests.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetInt64(string)", span="0-0"];
m6_3360 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", span="7659-7659"];
m6_3361 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="ReadTests.cs", label="string json = @''[\r\n        9000000000000000000000000000000000000000000000000\r\n      ]''", span="7661-7663"];
m6_3362 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="ReadTests.cs", label="var l = JsonConvert.DeserializeObject<IReadOnlyList<BigInteger>>(json)", span="7665-7665"];
m6_3363 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="ReadTests.cs", label="BigInteger nineQuindecillion = l[0]", span="7667-7667"];
m6_3364 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="ReadTests.cs", label="Assert.AreEqual(BigInteger.Parse(''9000000000000000000000000000000000000000000000000''), nineQuindecillion)", span="7670-7670"];
m6_3365 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", span="7659-7659"];
m6_270 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FieldExtensionDataAttributeTest_Serialize()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FieldExtensionDataAttributeTest_Serialize()", span="571-571"];
m6_271 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FieldExtensionDataAttributeTest_Serialize()", file="ReadTests.cs", label="FieldExtensionDataAttributeTestClass c = new FieldExtensionDataAttributeTestClass\r\n        {\r\n          ExtensionData = new Dictionary<object, object>()\r\n        }", span="573-576"];
m6_272 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FieldExtensionDataAttributeTest_Serialize()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(c)", span="578-578"];
m6_273 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FieldExtensionDataAttributeTest_Serialize()", file="ReadTests.cs", label="Assert.AreEqual(''{}'', json)", span="580-580"];
m6_274 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FieldExtensionDataAttributeTest_Serialize()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FieldExtensionDataAttributeTest_Serialize()", span="571-571"];
m6_3002 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", span="6823-6823"];
m6_3003 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="ReadTests.cs", label="string jsonIsoText =\r\n        @''{''''Value'''':''''2012-02-25T19:55:50.6095676+13:00''''}''", span="6825-6826"];
m6_3004 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="ReadTests.cs", label="DateTimeWrapper c = JsonConvert.DeserializeObject<DateTimeWrapper>(jsonIsoText, new IsoDateTimeConverter())", span="6828-6828"];
m6_3005 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="ReadTests.cs", label="Assert.AreEqual(DateTimeKind.Local, c.Value.Kind)", span="6829-6829"];
m6_3006 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", span="6823-6823"];
m6_3482 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D_WithTooManyItems()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D_WithTooManyItems()", span="8087-8087"];
m6_3483 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D_WithTooManyItems()", file="ReadTests.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1,2,3],[2,1],[2,2]],''''After'''':''''After!''''}''", span="8089-8089"];
m6_3484 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D_WithTooManyItems()", file="ReadTests.cs", label="ExceptionAssert.Throws<Exception>(\r\n        ''Cannot deserialize non-cubical array as multidimensional array.'',\r\n        () => JsonConvert.DeserializeObject<Array2D>(json))", span="8091-8093"];
m6_3485 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D_WithTooManyItems()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D_WithTooManyItems()", span="8087-8087"];
m6_776 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArrayAsArrayList()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArrayAsArrayList()", span="1624-1624"];
m6_777 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArrayAsArrayList()", file="ReadTests.cs", label="string jsonText = @''[3, ''''somestring'''',[1,2,3],{}]''", span="1626-1626"];
m6_778 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArrayAsArrayList()", file="ReadTests.cs", label="ArrayList o = JsonConvert.DeserializeObject<ArrayList>(jsonText)", span="1627-1627"];
m6_779 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArrayAsArrayList()", file="ReadTests.cs", label="Assert.AreEqual(4, o.Count)", span="1629-1629"];
m6_780 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArrayAsArrayList()", file="ReadTests.cs", label="Assert.AreEqual(3, ((JArray)o[2]).Count)", span="1630-1630"];
m6_781 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArrayAsArrayList()", file="ReadTests.cs", label="Assert.AreEqual(0, ((JObject)o[3]).Count)", span="1631-1631"];
m6_782 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArrayAsArrayList()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArrayAsArrayList()", span="1624-1624"];
m6_16 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", span="163-163"];
m6_17 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="ReadTests.cs", label="JsonSerializer serializer = new JsonSerializer()", span="165-165"];
m6_18 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="ReadTests.cs", label="DefaultSerializationBinder customBinder = new DefaultSerializationBinder()", span="167-167"];
m6_19 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="ReadTests.cs", label="serializer.Binder = customBinder", span="168-168"];
m6_20 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="ReadTests.cs", label="Assert.AreEqual(customBinder, serializer.Binder)", span="169-169"];
m6_21 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="ReadTests.cs", label="serializer.CheckAdditionalContent = true", span="171-171"];
m6_22 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="ReadTests.cs", label="Assert.AreEqual(true, serializer.CheckAdditionalContent)", span="172-172"];
m6_23 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="ReadTests.cs", label="serializer.ConstructorHandling = ConstructorHandling.AllowNonPublicDefaultConstructor", span="174-174"];
m6_24 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="ReadTests.cs", label="Assert.AreEqual(ConstructorHandling.AllowNonPublicDefaultConstructor, serializer.ConstructorHandling)", span="175-175"];
m6_25 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="ReadTests.cs", label="serializer.Context = new StreamingContext(StreamingContextStates.Other)", span="177-177"];
m6_26 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="ReadTests.cs", label="Assert.AreEqual(new StreamingContext(StreamingContextStates.Other), serializer.Context)", span="178-178"];
m6_28 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="ReadTests.cs", label="serializer.ContractResolver = resolver", span="181-181"];
m6_29 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="ReadTests.cs", label="Assert.AreEqual(resolver, serializer.ContractResolver)", span="182-182"];
m6_30 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="ReadTests.cs", label="serializer.Converters.Add(new StringEnumConverter())", span="184-184"];
m6_31 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="ReadTests.cs", label="Assert.AreEqual(1, serializer.Converters.Count)", span="185-185"];
m6_32 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="ReadTests.cs", label="serializer.Culture = new CultureInfo(''en-nz'')", span="187-187"];
m6_33 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="ReadTests.cs", label="Assert.AreEqual(''en-NZ'', serializer.Culture.ToString())", span="188-188"];
m6_34 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="ReadTests.cs", label="serializer.DateFormatHandling = DateFormatHandling.MicrosoftDateFormat", span="190-190"];
m6_35 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="ReadTests.cs", label="Assert.AreEqual(DateFormatHandling.MicrosoftDateFormat, serializer.DateFormatHandling)", span="191-191"];
m6_36 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="ReadTests.cs", label="serializer.DateFormatString = ''yyyy''", span="193-193"];
m6_37 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="ReadTests.cs", label="Assert.AreEqual(''yyyy'', serializer.DateFormatString)", span="194-194"];
m6_38 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="ReadTests.cs", label="serializer.DateParseHandling = DateParseHandling.None", span="196-196"];
m6_39 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="ReadTests.cs", label="Assert.AreEqual(DateParseHandling.None, serializer.DateParseHandling)", span="197-197"];
m6_40 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="ReadTests.cs", label="serializer.DateTimeZoneHandling = DateTimeZoneHandling.Utc", span="199-199"];
m6_41 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="ReadTests.cs", label="Assert.AreEqual(DateTimeZoneHandling.Utc, serializer.DateTimeZoneHandling)", span="200-200"];
m6_42 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="ReadTests.cs", label="serializer.DefaultValueHandling = DefaultValueHandling.IgnoreAndPopulate", span="202-202"];
m6_43 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="ReadTests.cs", label="Assert.AreEqual(DefaultValueHandling.IgnoreAndPopulate, serializer.DefaultValueHandling)", span="203-203"];
m6_44 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="ReadTests.cs", label="serializer.FloatFormatHandling = FloatFormatHandling.Symbol", span="205-205"];
m6_45 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="ReadTests.cs", label="Assert.AreEqual(FloatFormatHandling.Symbol, serializer.FloatFormatHandling)", span="206-206"];
m6_46 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="ReadTests.cs", label="serializer.FloatParseHandling = FloatParseHandling.Decimal", span="208-208"];
m6_47 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="ReadTests.cs", label="Assert.AreEqual(FloatParseHandling.Decimal, serializer.FloatParseHandling)", span="209-209"];
m6_48 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="ReadTests.cs", label="serializer.Formatting = Formatting.Indented", span="211-211"];
m6_49 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="ReadTests.cs", label="Assert.AreEqual(Formatting.Indented, serializer.Formatting)", span="212-212"];
m6_50 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="ReadTests.cs", label="serializer.MaxDepth = 9001", span="214-214"];
m6_51 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="ReadTests.cs", label="Assert.AreEqual(9001, serializer.MaxDepth)", span="215-215"];
m6_52 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="ReadTests.cs", label="serializer.MissingMemberHandling = MissingMemberHandling.Error", span="217-217"];
m6_53 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="ReadTests.cs", label="Assert.AreEqual(MissingMemberHandling.Error, serializer.MissingMemberHandling)", span="218-218"];
m6_54 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="ReadTests.cs", label="serializer.NullValueHandling = NullValueHandling.Ignore", span="220-220"];
m6_55 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="ReadTests.cs", label="Assert.AreEqual(NullValueHandling.Ignore, serializer.NullValueHandling)", span="221-221"];
m6_56 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="ReadTests.cs", label="serializer.ObjectCreationHandling = ObjectCreationHandling.Replace", span="223-223"];
m6_57 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="ReadTests.cs", label="Assert.AreEqual(ObjectCreationHandling.Replace, serializer.ObjectCreationHandling)", span="224-224"];
m6_58 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="ReadTests.cs", label="serializer.PreserveReferencesHandling = PreserveReferencesHandling.All", span="226-226"];
m6_59 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="ReadTests.cs", label="Assert.AreEqual(PreserveReferencesHandling.All, serializer.PreserveReferencesHandling)", span="227-227"];
m6_60 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="ReadTests.cs", label="serializer.ReferenceLoopHandling = ReferenceLoopHandling.Ignore", span="229-229"];
m6_61 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="ReadTests.cs", label="Assert.AreEqual(ReferenceLoopHandling.Ignore, serializer.ReferenceLoopHandling)", span="230-230"];
m6_63 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="ReadTests.cs", label="serializer.ReferenceResolver = referenceResolver", span="233-233"];
m6_64 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="ReadTests.cs", label="Assert.AreEqual(referenceResolver, serializer.ReferenceResolver)", span="234-234"];
m6_65 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="ReadTests.cs", label="serializer.StringEscapeHandling = StringEscapeHandling.EscapeNonAscii", span="236-236"];
m6_66 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="ReadTests.cs", label="Assert.AreEqual(StringEscapeHandling.EscapeNonAscii, serializer.StringEscapeHandling)", span="237-237"];
m6_68 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="ReadTests.cs", label="serializer.TraceWriter = traceWriter", span="240-240"];
m6_69 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="ReadTests.cs", label="Assert.AreEqual(traceWriter, serializer.TraceWriter)", span="241-241"];
m6_70 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="ReadTests.cs", label="serializer.TypeNameAssemblyFormat = FormatterAssemblyStyle.Full", span="244-244"];
m6_71 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="ReadTests.cs", label="Assert.AreEqual(FormatterAssemblyStyle.Full, serializer.TypeNameAssemblyFormat)", span="245-245"];
m6_72 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="ReadTests.cs", label="serializer.TypeNameHandling = TypeNameHandling.All", span="248-248"];
m6_73 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="ReadTests.cs", label="Assert.AreEqual(TypeNameHandling.All, serializer.TypeNameHandling)", span="249-249"];
m6_27 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="ReadTests.cs", label="CamelCasePropertyNamesContractResolver resolver = new CamelCasePropertyNamesContractResolver()", span="180-180"];
m6_62 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="ReadTests.cs", label="IdReferenceResolver referenceResolver = new IdReferenceResolver()", span="232-232"];
m6_67 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="ReadTests.cs", label="MemoryTraceWriter traceWriter = new MemoryTraceWriter()", span="239-239"];
m6_74 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", span="163-163"];
m6_1749 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, object)", file="ReadTests.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, object)", span="0-0"];
m6_2397 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", span="5401-5401"];
m6_2398 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="ReadTests.cs", label="Response response = new Response\r\n        {\r\n          Name = ''Success'',\r\n          Data = new JObject(new JProperty(''First'', ''Value1''), new JProperty(''Second'', ''Value2''))\r\n        }", span="5403-5407"];
m6_2399 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(response, Formatting.Indented)", span="5409-5409"];
m6_2402 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="ReadTests.cs", label="Assert.IsTrue(deserializedResponse.Data.DeepEquals(response.Data))", span="5414-5414"];
m6_2400 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="ReadTests.cs", label="Response deserializedResponse = JsonConvert.DeserializeObject<Response>(json)", span="5411-5411"];
m6_2401 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="ReadTests.cs", label="Assert.AreEqual(''Success'', deserializedResponse.Name)", span="5413-5413"];
m6_2403 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", span="5401-5401"];
m6_313 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonGenericItem.NonGenericItem()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonGenericItem.NonGenericItem()", span="99-99"];
m6_2370 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="5318-5318"];
m6_2371 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReadTests.cs", label="_name = info.GetString(''Name'')", span="5320-5320"];
m6_2372 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="5318-5318"];
m6_3813 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateDefaultCtorWithIEnumerableCtorList<T>.PrivateDefaultCtorWithIEnumerableCtorList()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateDefaultCtorWithIEnumerableCtorList<T>.PrivateDefaultCtorWithIEnumerableCtorList()", span="8981-8981"];
m6_3814 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateDefaultCtorWithIEnumerableCtorList<T>.PrivateDefaultCtorWithIEnumerableCtorList()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateDefaultCtorWithIEnumerableCtorList<T>.PrivateDefaultCtorWithIEnumerableCtorList()", span="8981-8981"];
m6_1497 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", span="3212-3212"];
m6_1498 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="ReadTests.cs", label="ExceptionAssert.Throws<JsonSerializationException>(''Could not convert string 'Newtonsoft.Json.Tests.TestObjects.Person' to dictionary key type 'Newtonsoft.Json.Tests.TestObjects.Person'. Create a TypeConverter to convert from the string to the key type object. Path 'Newtonsoft.Json.Tests.TestObjects.Person', line 2, position 46.'',\r\n      () =>\r\n      {\r\n        string json =\r\n          @''{\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Person'''': 1,\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Person'''': 2\r\n}'';\r\n\r\n        JsonConvert.DeserializeObject<Dictionary<Person, int>>(json);\r\n      })", span="3214-3224"];
m6_1499 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", span="3212-3212"];
m6_3621 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", span="8494-8494"];
m6_3622 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="ReadTests.cs", label="IList<object> dates = new List<object>\r\n        {\r\n          new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc),\r\n          new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1))\r\n        }", span="8496-8500"];
m6_3623 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(dates, Formatting.Indented, new JsonSerializerSettings\r\n      {\r\n        DateFormatString = @''yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffK''\r\n      })", span="8502-8505"];
m6_3624 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="ReadTests.cs", label="Assert.AreEqual(@''[\r\n  ''''2000-12-12T12:12:12.000Z'''',\r\n  ''''2000-12-12T12:12:12.000+01:00''''\r\n]'', json)", span="8507-8510"];
m6_3625 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", span="8494-8494"];
m6_2436 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", span="5492-5492"];
m6_2437 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="ReadTests.cs", label="PublicConstructorOverridenByJsonConstructor c = JsonConvert.DeserializeObject<PublicConstructorOverridenByJsonConstructor>(''{Value:'value!'}'')", span="5494-5494"];
m6_2438 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="ReadTests.cs", label="Assert.AreEqual(''Public Paramatized'', c.Constructor)", span="5495-5495"];
m6_2439 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="ReadTests.cs", label="Assert.AreEqual(''value!'', c.Value)", span="5496-5496"];
m6_2440 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", span="5492-5492"];
m6_3797 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReadOnlyCollection()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReadOnlyCollection()", span="8936-8936"];
m6_3798 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReadOnlyCollection()", file="ReadTests.cs", label="IList<int> l = new List<int>\r\n                       {\r\n                         1,\r\n                         2,\r\n                         3\r\n                       }", span="8938-8943"];
m6_3799 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReadOnlyCollection()", file="ReadTests.cs", label="CustomReadOnlyCollection<int> list = new CustomReadOnlyCollection<int>(l)", span="8945-8945"];
m6_3800 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReadOnlyCollection()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(list, Formatting.Indented)", span="8947-8947"];
m6_3801 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReadOnlyCollection()", file="ReadTests.cs", label="Assert.AreEqual(@''[\r\n  1,\r\n  2,\r\n  3\r\n]'', json)", span="8948-8952"];
m6_3802 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReadOnlyCollection()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReadOnlyCollection()", span="8936-8936"];
m6_554 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", span="1232-1232"];
m6_555 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="ReadTests.cs", label="string json = @''[''''PRE\u003cPOST'''']''", span="1234-1234"];
m6_556 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="ReadTests.cs", label="DataContractJsonSerializer s = new DataContractJsonSerializer(typeof(List<string>))", span="1236-1236"];
m6_557 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="ReadTests.cs", label="List<string> dataContractResult = (List<string>)s.ReadObject(new MemoryStream(Encoding.UTF8.GetBytes(json)))", span="1237-1237"];
m6_558 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="ReadTests.cs", label="List<string> jsonNetResult = JsonConvert.DeserializeObject<List<string>>(json)", span="1239-1239"];
m6_560 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="ReadTests.cs", label="Assert.AreEqual(dataContractResult[0], jsonNetResult[0])", span="1242-1242"];
m6_559 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="ReadTests.cs", label="Assert.AreEqual(1, jsonNetResult.Count)", span="1241-1241"];
m6_561 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", span="1232-1232"];
m6_672 [cluster="object.Object()", file="ReadTests.cs", label="Entry object.Object()", span="0-0"];
m6_1725 [cluster="System.Runtime.Serialization.SerializationInfo.GetSingle(string)", file="ReadTests.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetSingle(string)", span="0-0"];
m6_1930 [cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="ReadTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteNull()", span="771-771"];
m6_2549 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", span="5859-5859"];
m6_2550 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="ReadTests.cs", label="ImplementInterfaceObject cc = new ImplementInterfaceObject\r\n        {\r\n          InterfaceMember = new DateTime(2010, 12, 31, 0, 0, 0, DateTimeKind.Utc),\r\n          NewMember = ''NewMember!''\r\n        }", span="5861-5865"];
m6_2551 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="ReadTests.cs", label="string result = JsonConvert.SerializeObject(cc, Formatting.Indented)", span="5867-5867"];
m6_2552 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="ReadTests.cs", label="Assert.AreEqual(@''{\r\n  ''''virtualMember'''': ''''2010-12-31T00:00:00Z'''',\r\n  ''''newMemberWithProperty'''': null\r\n}'', result)", span="5869-5872"];
m6_2553 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", span="5859-5859"];
m6_3289 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="7479-7479"];
m6_3290 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ReadTests.cs", label="writer.WriteValue(''X'')", span="7481-7481"];
m6_3291 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="7479-7479"];
m6_665 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="ReadTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="73-73"];
m6_315 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", span="662-662"];
m6_316 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", file="ReadTests.cs", label="var cc = new ChildDataContractWithHidden\r\n      {\r\n        VirtualMember = ''VirtualMember!'',\r\n        NonVirtualMember = ''NonVirtualMember!'',\r\n        NewMember = ''NewMember!''\r\n      }", span="664-669"];
m6_317 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", file="ReadTests.cs", label="string result = JsonConvert.SerializeObject(cc)", span="671-671"];
m6_318 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", file="ReadTests.cs", label="Assert.AreEqual(@''{''''NewMember'''':''''NewMember!'''',''''virtualMember'''':''''VirtualMember!'''',''''nonVirtualMember'''':''''NonVirtualMember!''''}'', result)", span="672-672"];
m6_319 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", span="662-662"];
m6_432 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", span="961-961"];
m6_433 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="ReadTests.cs", label="DateTime dateValue = new DateTime(2010, 3, 30)", span="963-963"];
m6_434 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="ReadTests.cs", label="Dictionary<string, object> testDictionary = new Dictionary<string, object>()", span="964-964"];
m6_435 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="ReadTests.cs", label="testDictionary[''date''] = dateValue", span="965-965"];
m6_444 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="ReadTests.cs", label="Assert.AreEqual(dateValue, deserializedDate)", span="981-981"];
m6_436 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="ReadTests.cs", label="string jsonText = JsonConvert.SerializeObject(testDictionary)", span="967-967"];
m6_439 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="ReadTests.cs", label="serializer.WriteObject(ms, testDictionary)", span="972-972"];
m6_437 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="ReadTests.cs", label="MemoryStream ms = new MemoryStream()", span="970-970"];
m6_442 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="ReadTests.cs", label="Dictionary<string, object> deserializedDictionary = (Dictionary<string, object>)JsonConvert.DeserializeObject(jsonText, typeof(Dictionary<string, object>))", span="978-978"];
m6_438 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="ReadTests.cs", label="DataContractJsonSerializer serializer = new DataContractJsonSerializer(typeof(Dictionary<string, object>))", span="971-971"];
m6_440 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="ReadTests.cs", label="byte[] data = ms.ToArray()", span="974-974"];
m6_441 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="ReadTests.cs", label="string output = Encoding.UTF8.GetString(data, 0, data.Length)", span="975-975"];
m6_443 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="ReadTests.cs", label="DateTime deserializedDate = (DateTime)deserializedDictionary[''date'']", span="979-979"];
m6_445 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", span="961-961"];
m6_3135 [cluster="Newtonsoft.Json.Tests.Serialization.RequiredObject.RequiredObject()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.RequiredObject.RequiredObject()", span="9615-9615"];
m6_2125 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTestClass.ShouldSerializeTestClass()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ShouldSerializeTestClass.ShouldSerializeTestClass()", span="9737-9737"];
m6_3890 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConsoleWriter.PrintTest()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConsoleWriter.PrintTest()", span="9188-9188"];
m6_3891 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConsoleWriter.PrintTest()", file="ReadTests.cs", label="return ''ConsoleWriter'';", span="9190-9190"];
m6_3892 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConsoleWriter.PrintTest()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConsoleWriter.PrintTest()", span="9188-9188"];
m6_1655 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.GetEnumerator()", file="ReadTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.GetEnumerator()", span="0-0"];
m6_2597 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CopyTo(object[], int)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CopyTo(object[], int)", span="5980-5980"];
m6_2598 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CopyTo(object[], int)", file="ReadTests.cs", label="throw new NotImplementedException();", span="5982-5982"];
m6_2599 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CopyTo(object[], int)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CopyTo(object[], int)", span="5980-5980"];
m6_461 [cluster="Newtonsoft.Json.Tests.CustomAssert.Contains(System.Collections.IList, object)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.CustomAssert.Contains(System.Collections.IList, object)", span="163-163"];
m6_460 [cluster="Unk.AreNotSame", file="ReadTests.cs", label="Entry Unk.AreNotSame", span=""];
m6_1674 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", span="3745-3745"];
m6_1675 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", file="ReadTests.cs", label="return ((IEnumerable)_innerDictionary).GetEnumerator();", span="3747-3747"];
m6_1676 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", span="3745-3745"];
m6_600 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", file="ReadTests.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", span="552-552"];
m6_1715 [cluster="System.Runtime.Serialization.SerializationInfo.GetInt32(string)", file="ReadTests.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetInt32(string)", span="0-0"];
m6_1178 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", span="2493-2493"];
m6_1179 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="ReadTests.cs", label="string json = @''{\r\n  ''''Random'''': {\r\n    ''''blah'''': 1\r\n  },\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Dictionary'''': {\r\n    ''''Item'''': 11,\r\n    ''''Item1'''': 12\r\n  },\r\n  ''''Collection'''': [\r\n    999\r\n  ],\r\n  ''''Employee'''': {\r\n    ''''Manager'''': {\r\n      ''''Name'''': ''''ManagerName!''''\r\n    }\r\n  }\r\n}''", span="2495-2512"];
m6_1180 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="ReadTests.cs", label="DictionaryInterfaceClass c = JsonConvert.DeserializeObject<DictionaryInterfaceClass>(json,\r\n                                                                                           new JsonSerializerSettings { ObjectCreationHandling = ObjectCreationHandling.Reuse })", span="2514-2515"];
m6_1181 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="ReadTests.cs", label="Assert.AreEqual(''Name!'', c.Name)", span="2517-2517"];
m6_1182 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="ReadTests.cs", label="Assert.AreEqual(3, c.Dictionary.Count)", span="2518-2518"];
m6_1183 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="ReadTests.cs", label="Assert.AreEqual(11, c.Dictionary[''Item''])", span="2519-2519"];
m6_1184 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="ReadTests.cs", label="Assert.AreEqual(1, c.Dictionary[''existing''])", span="2520-2520"];
m6_1185 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="ReadTests.cs", label="Assert.AreEqual(4, c.Collection.Count)", span="2521-2521"];
m6_1186 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="ReadTests.cs", label="Assert.AreEqual(1, c.Collection.ElementAt(0))", span="2522-2522"];
m6_1187 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="ReadTests.cs", label="Assert.AreEqual(999, c.Collection.ElementAt(3))", span="2523-2523"];
m6_1188 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="ReadTests.cs", label="Assert.AreEqual(''EmployeeName!'', c.Employee.Name)", span="2524-2524"];
m6_1189 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="ReadTests.cs", label="Assert.AreEqual(''ManagerName!'', c.Employee.Manager.Name)", span="2525-2525"];
m6_1190 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="ReadTests.cs", label="Assert.IsNotNull(c.Random)", span="2526-2526"];
m6_1191 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", span="2493-2493"];
m6_1751 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, bool)", file="ReadTests.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, bool)", span="0-0"];
m6_915 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", span="1867-1867"];
m6_916 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="ReadTests.cs", label="PersonRaw personRaw = new PersonRaw\r\n        {\r\n          FirstName = ''FirstNameValue'',\r\n          RawContent = new JRaw(''[1,2,3,4,5]''),\r\n          LastName = ''LastNameValue''\r\n        }", span="1869-1874"];
m6_917 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="ReadTests.cs", label="string json", span="1876-1876"];
m6_918 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="ReadTests.cs", label="json = JsonConvert.SerializeObject(personRaw)", span="1878-1878"];
m6_919 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="ReadTests.cs", label="Assert.AreEqual(@''{''''first_name'''':''''FirstNameValue'''',''''RawContent'''':[1,2,3,4,5],''''last_name'''':''''LastNameValue''''}'', json)", span="1879-1879"];
m6_920 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", span="1867-1867"];
m6_577 [cluster="Unk.>", file="ReadTests.cs", label="Entry Unk.>", span=""];
m6_3349 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuplePartial<T1>.MyTuplePartial(T1)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuplePartial<T1>.MyTuplePartial(T1)", span="7627-7627"];
m6_3350 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuplePartial<T1>.MyTuplePartial(T1)", file="ReadTests.cs", label="m_Item1 = item1", span="7629-7629"];
m6_3351 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuplePartial<T1>.MyTuplePartial(T1)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuplePartial<T1>.MyTuplePartial(T1)", span="7627-7627"];
m6_354 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", span="830-830"];
m6_355 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="ReadTests.cs", label="BaseWithContract baseWith = new SubWithContractVirtualProperties\r\n      {\r\n        JustAProperty = ''JustAProperty!'',\r\n        Virtual = ''Virtual!'',\r\n        VirtualWithDataMember = ''VirtualWithDataMember!'',\r\n        WithDataMember = ''WithDataMember!''\r\n      }", span="832-838"];
m6_356 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="ReadTests.cs", label="baseWith.JustAProperty = ''JustAProperty2!''", span="840-840"];
m6_357 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="ReadTests.cs", label="baseWith.Virtual = ''Virtual2!''", span="841-841"];
m6_358 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="ReadTests.cs", label="baseWith.VirtualWithDataMember = ''VirtualWithDataMember2!''", span="842-842"];
m6_359 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="ReadTests.cs", label="baseWith.WithDataMember = ''WithDataMember2!''", span="843-843"];
m6_360 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="ReadTests.cs", label="string json = AssertSerializeDeserializeEqual(baseWith)", span="845-845"];
m6_361 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="ReadTests.cs", label="Assert.AreEqual(@''{\r\n  ''''JustAProperty'''': ''''JustAProperty2!'''',\r\n  ''''Virtual'''': ''''Virtual2!'''',\r\n  ''''VirtualWithDataMemberBase'''': ''''VirtualWithDataMember2!'''',\r\n  ''''VirtualWithDataMemberSub'''': ''''VirtualWithDataMember!'''',\r\n  ''''WithDataMemberBase'''': ''''WithDataMember2!''''\r\n}'', json)", span="847-853"];
m6_362 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", span="830-830"];
m6_1939 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="4372-4372"];
m6_1940 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ReadTests.cs", label="PosDouble p = (PosDouble)value", span="4374-4374"];
m6_1942 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ReadTests.cs", label="writer.WriteRawValue(String.Format(CultureInfo.InvariantCulture, ''new PosD({0},{1})'', p.X, p.Y))", span="4377-4377"];
m6_1943 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ReadTests.cs", label="writer.WriteNull()", span="4379-4379"];
m6_1941 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ReadTests.cs", label="p != null", span="4376-4376"];
m6_1944 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="4372-4372"];
m6_1648 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", span="3707-3707"];
m6_1649 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", file="ReadTests.cs", label="((IDictionary<string, T>)_innerDictionary).CopyTo(array, arrayIndex)", span="3709-3709"];
m6_1650 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", span="3707-3707"];
m6_3402 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", span="7796-7796"];
m6_3403 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="ReadTests.cs", label="NonReadOnlyList = new List<int> { 1 }", span="7798-7798"];
m6_3404 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="ReadTests.cs", label="NonReadOnlyDictionary = new Dictionary<string, int> { { ''first'', 2 } }", span="7799-7799"];
m6_3405 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="ReadTests.cs", label="Array = new[] {3}", span="7801-7801"];
m6_3406 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="ReadTests.cs", label="List = new ReadOnlyCollection<int>(new[] { 4 })", span="7803-7803"];
m6_3407 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="ReadTests.cs", label="Dictionary = new ReadOnlyDictionary<string, int>(new Dictionary<string, int> { { ''first'', 5 } })", span="7804-7804"];
m6_3408 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="ReadTests.cs", label="IReadOnlyCollection = new ReadOnlyCollection<int>(new[] { 6 })", span="7806-7806"];
m6_3409 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="ReadTests.cs", label="ReadOnlyCollection = new ReadOnlyCollection<int>(new[] { 7 })", span="7807-7807"];
m6_3410 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="ReadTests.cs", label="IReadOnlyList = new ReadOnlyCollection<int>(new[] { 8 })", span="7808-7808"];
m6_3411 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="ReadTests.cs", label="IReadOnlyDictionary = new ReadOnlyDictionary<string, int>(new Dictionary<string, int> { { ''first'', 9 } })", span="7810-7810"];
m6_3412 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="ReadTests.cs", label="ReadOnlyDictionary = new ReadOnlyDictionary<string, int>(new Dictionary<string, int> { { ''first'', 10 } })", span="7811-7811"];
m6_3413 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", span="7796-7796"];
m6_3899 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TraceWriter.PrintTest()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TraceWriter.PrintTest()", span="9211-9211"];
m6_3900 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TraceWriter.PrintTest()", file="ReadTests.cs", label="return ''TraceWriter'';", span="9213-9213"];
m6_3901 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TraceWriter.PrintTest()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TraceWriter.PrintTest()", span="9211-9211"];
m6_2764 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToNonNullableKeyValuePairArray()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToNonNullableKeyValuePairArray()", span="6357-6357"];
m6_2765 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToNonNullableKeyValuePairArray()", file="ReadTests.cs", label="string json = @''[ null ]''", span="6359-6359"];
m6_2766 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToNonNullableKeyValuePairArray()", file="ReadTests.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''Cannot convert null value to KeyValuePair. Path '[0]', line 1, position 6.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<IList<KeyValuePair<string, IList<string>>>>(json);\r\n        })", span="6361-6366"];
m6_2767 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToNonNullableKeyValuePairArray()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToNonNullableKeyValuePairArray()", span="6357-6357"];
m6_276 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FieldExtensionDataAttributeTest_Deserialize()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FieldExtensionDataAttributeTest_Deserialize()", span="584-584"];
m6_277 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FieldExtensionDataAttributeTest_Deserialize()", file="ReadTests.cs", label="var c = JsonConvert.DeserializeObject<FieldExtensionDataAttributeTestClass>(''{'first':1,'second':2}'')", span="586-586"];
m6_278 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FieldExtensionDataAttributeTest_Deserialize()", file="ReadTests.cs", label="Assert.AreEqual(2, c.ExtensionData.Count)", span="588-588"];
m6_279 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FieldExtensionDataAttributeTest_Deserialize()", file="ReadTests.cs", label="Assert.AreEqual(1, (int)(JToken)c.ExtensionData[''first''])", span="589-589"];
m6_280 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FieldExtensionDataAttributeTest_Deserialize()", file="ReadTests.cs", label="Assert.AreEqual(2, (int)(JToken)c.ExtensionData[''second''])", span="590-590"];
m6_281 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FieldExtensionDataAttributeTest_Deserialize()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FieldExtensionDataAttributeTest_Deserialize()", span="584-584"];
m6_1109 [cluster="Newtonsoft.Json.Tests.TestObjects.JsonPropertyWithHandlingValues.JsonPropertyWithHandlingValues()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.JsonPropertyWithHandlingValues.JsonPropertyWithHandlingValues()", span="29-29"];
m6_3231 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", span="7340-7340"];
m6_3232 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="ReadTests.cs", label="DataContractSerializationAttributesClass dataContract = new DataContractSerializationAttributesClass\r\n        {\r\n          NoAttribute = ''Value!'',\r\n          IgnoreDataMemberAttribute = ''Value!'',\r\n          DataMemberAttribute = ''Value!'',\r\n          IgnoreDataMemberAndDataMemberAttribute = ''Value!''\r\n        }", span="7342-7348"];
m6_3233 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(dataContract, Formatting.Indented)", span="7356-7356"];
m6_3234 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="ReadTests.cs", label="Assert.AreEqual(@''{\r\n  ''''DataMemberAttribute'''': ''''Value!'''',\r\n  ''''IgnoreDataMemberAndDataMemberAttribute'''': ''''Value!''''\r\n}'', json)", span="7357-7360"];
m6_3235 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="ReadTests.cs", label="PocoDataContractSerializationAttributesClass poco = new PocoDataContractSerializationAttributesClass\r\n      {\r\n        NoAttribute = ''Value!'',\r\n        IgnoreDataMemberAttribute = ''Value!'',\r\n        DataMemberAttribute = ''Value!'',\r\n        IgnoreDataMemberAndDataMemberAttribute = ''Value!''\r\n      }", span="7362-7368"];
m6_3236 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="ReadTests.cs", label="json = JsonConvert.SerializeObject(poco, Formatting.Indented)", span="7370-7370"];
m6_3237 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="ReadTests.cs", label="Assert.AreEqual(@''{\r\n  ''''NoAttribute'''': ''''Value!'''',\r\n  ''''DataMemberAttribute'''': ''''Value!''''\r\n}'', json)", span="7371-7374"];
m6_3238 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", span="7340-7340"];
m6_344 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", span="800-800"];
m6_345 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="ReadTests.cs", label="BaseWithContract baseWith = new SubWithContractNewProperties\r\n      {\r\n        JustAProperty = ''JustAProperty!'',\r\n        Virtual = ''Virtual!'',\r\n        VirtualWithDataMember = ''VirtualWithDataMember!'',\r\n        WithDataMember = ''WithDataMember!''\r\n      }", span="802-808"];
m6_346 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="ReadTests.cs", label="baseWith.JustAProperty = ''JustAProperty2!''", span="810-810"];
m6_347 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="ReadTests.cs", label="baseWith.Virtual = ''Virtual2!''", span="811-811"];
m6_348 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="ReadTests.cs", label="baseWith.VirtualWithDataMember = ''VirtualWithDataMember2!''", span="812-812"];
m6_349 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="ReadTests.cs", label="baseWith.WithDataMember = ''WithDataMember2!''", span="813-813"];
m6_350 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="ReadTests.cs", label="string json = AssertSerializeDeserializeEqual(baseWith)", span="815-815"];
m6_351 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="ReadTests.cs", label="Assert.AreEqual(@''{\r\n  ''''JustAProperty'''': ''''JustAProperty2!'''',\r\n  ''''JustAProperty2'''': ''''JustAProperty!'''',\r\n  ''''Virtual'''': ''''Virtual2!'''',\r\n  ''''Virtual2'''': ''''Virtual!'''',\r\n  ''''VirtualWithDataMemberBase'''': ''''VirtualWithDataMember2!'''',\r\n  ''''VirtualWithDataMemberSub'''': ''''VirtualWithDataMember!'''',\r\n  ''''WithDataMemberBase'''': ''''WithDataMember2!'''',\r\n  ''''WithDataMemberSub'''': ''''WithDataMember!''''\r\n}'', json)", span="817-826"];
m6_352 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", span="800-800"];
m6_2019 [cluster="Newtonsoft.Json.JsonReader.Read()", file="ReadTests.cs", label="Entry Newtonsoft.Json.JsonReader.Read()", span="332-332"];
m6_2191 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.ToString()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.ToString()", span="4905-4905"];
m6_2192 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.ToString()", file="ReadTests.cs", label="return Value;", span="4907-4907"];
m6_2193 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.ToString()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.ToString()", span="4905-4905"];
m6_2271 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", span="5098-5098"];
m6_2272 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", file="ReadTests.cs", label="NullableDateTimeTestClass d = JsonConvert.DeserializeObject<NullableDateTimeTestClass>(''{\''DateTimeOffsetField\'':\''2000-01-01T00:00:00+06:00\''}'')", span="5100-5100"];
m6_2273 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", file="ReadTests.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6)), d.DateTimeOffsetField)", span="5101-5101"];
m6_2274 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", span="5098-5098"];
m6_2495 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", span="5664-5664"];
m6_2496 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="ReadTests.cs", label="string json = @''{''''indexed'''':true, ''''startYear'''':1939, ''''values'''':\r\n                            [  3000,  /* 1940-1949 */\r\n                               3000,   3600,   3600,   3600,   3600,   4200,   4200,   4200,   4200,   4800,  /* 1950-1959 */\r\n                               4800,   4800,   4800,   4800,   4800,   4800,   6600,   6600,   7800,   7800,  /* 1960-1969 */\r\n                               7800,   7800,   9000,  10800,  13200,  14100,  15300,  16500,  17700,  22900,  /* 1970-1979 */\r\n                              25900,  29700,  32400,  35700,  37800,  39600,  42000,  43800,  45000,  48000,  /* 1980-1989 */\r\n                              51300,  53400,  55500,  57600,  60600,  61200,  62700,  65400,  68400,  72600,  /* 1990-1999 */\r\n                              76200,  80400,  84900,  87000,  87900,  90000,  94200,  97500, 102000, 106800,  /* 2000-2009 */\r\n                             106800, 106800]  /* 2010-2011 */\r\n                                }''", span="5666-5675"];
m6_2497 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="ReadTests.cs", label="CommentTestClass commentTestClass = JsonConvert.DeserializeObject<CommentTestClass>(json)", span="5677-5677"];
m6_2498 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="ReadTests.cs", label="Assert.AreEqual(true, commentTestClass.Indexed)", span="5679-5679"];
m6_2499 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="ReadTests.cs", label="Assert.AreEqual(1939, commentTestClass.StartYear)", span="5680-5680"];
m6_2500 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="ReadTests.cs", label="Assert.AreEqual(63, commentTestClass.Values.Count)", span="5681-5681"];
m6_2501 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", span="5664-5664"];
m6_1858 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA()", span="4185-4185"];
m6_1859 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA()", span="4185-4185"];
m6_1299 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", span="2806-2806"];
m6_1300 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="ReadTests.cs", label="string json = @''{''''DateTimeField'''':''''''''}''", span="2808-2808"];
m6_1301 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="ReadTests.cs", label="NullableDateTimeTestClass c = JsonConvert.DeserializeObject<NullableDateTimeTestClass>(json)", span="2810-2810"];
m6_1302 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="ReadTests.cs", label="Assert.AreEqual(null, c.DateTimeField)", span="2811-2811"];
m6_1303 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", span="2806-2806"];
m6_2718 [cluster="Newtonsoft.Json.Linq.JObject.FromObject(object)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Linq.JObject.FromObject(object)", span="342-342"];
m6_2720 [cluster="Newtonsoft.Json.Linq.JToken.CreateReader()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Linq.JToken.CreateReader()", span="1547-1547"];
m6_81 [cluster="System.Collections.ObjectModel.Collection<T>.Add(T)", file="ReadTests.cs", label="Entry System.Collections.ObjectModel.Collection<T>.Add(T)", span="0-0"];
m6_3292 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="ReadTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="809-809"];
m6_601 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", span="1306-1306"];
m6_602 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="ReadTests.cs", label="List<DateTimeOffset> testDates = new List<DateTimeOffset>\r\n        {\r\n          new DateTimeOffset(new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Utc)),\r\n          new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero),\r\n          new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(13)),\r\n          new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(-3.5)),\r\n        }", span="1308-1314"];
m6_603 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="ReadTests.cs", label="string result = JsonConvert.SerializeObject(testDates)", span="1316-1316"];
m6_604 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="ReadTests.cs", label="Assert.AreEqual(@''[''''0100-01-01T01:01:01+00:00'''',''''2000-01-01T01:01:01+00:00'''',''''2000-01-01T01:01:01+13:00'''',''''2000-01-01T01:01:01-03:30'''']'', result)", span="1317-1317"];
m6_605 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", span="1306-1306"];
m6_258 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="ReadTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m6_2974 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", span="6769-6769"];
m6_2975 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", file="ReadTests.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''No JSON content found and type 'System.StringComparison' is not nullable. Path '', line 0, position 0.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<StringComparison>('''');\r\n        })", span="6771-6776"];
m6_2976 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", span="6769-6769"];
m6_3206 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", span="7266-7266"];
m6_3214 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="ReadTests.cs", label="var jsonReader = new Newtonsoft.Json.JsonTextReader(new StringReader(json))", span="7269-7269"];
m6_3215 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="ReadTests.cs", label="var serializer = new Newtonsoft.Json.JsonSerializer()", span="7270-7270"];
m6_3217 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="ReadTests.cs", label="return serializer.Deserialize(jsonReader, typeof(T)) as T;", span="7276-7276"];
m6_3216 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="ReadTests.cs", label="serializer.ContractResolver = new DefaultContractResolver(false)\r\n      {\r\n        IgnoreSerializableAttribute = false\r\n      }", span="7271-7274"];
m6_3218 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", span="7266-7266"];
m6_77 [cluster="Unk.AreEqual", file="ReadTests.cs", label="Entry Unk.AreEqual", span=""];
m6_2926 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", span="6676-6676"];
m6_2927 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(new WithEnums\r\n        {\r\n          Id = 7,\r\n          NullableEnum = null\r\n        })", span="6678-6682"];
m6_2928 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="ReadTests.cs", label="Assert.AreEqual(@''{''''Id'''':7,''''NullableEnum'''':null}'', json)", span="6684-6684"];
m6_2929 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="ReadTests.cs", label="WithEnums e = JsonConvert.DeserializeObject<WithEnums>(json)", span="6686-6686"];
m6_2930 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="ReadTests.cs", label="Assert.AreEqual(null, e.NullableEnum)", span="6688-6688"];
m6_2931 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="ReadTests.cs", label="json = JsonConvert.SerializeObject(new WithEnums\r\n        {\r\n          Id = 7,\r\n          NullableEnum = MyEnum.Value2\r\n        })", span="6690-6694"];
m6_2932 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="ReadTests.cs", label="Assert.AreEqual(@''{''''Id'''':7,''''NullableEnum'''':1}'', json)", span="6696-6696"];
m6_2933 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="ReadTests.cs", label="e = JsonConvert.DeserializeObject<WithEnums>(json)", span="6698-6698"];
m6_2934 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="ReadTests.cs", label="Assert.AreEqual(MyEnum.Value2, e.NullableEnum)", span="6700-6700"];
m6_2935 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", span="6676-6676"];
m6_2407 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DecimalTest.DecimalTest()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DecimalTest.DecimalTest()", span="5425-5425"];
m6_2408 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DecimalTest.DecimalTest()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DecimalTest.DecimalTest()", span="5425-5425"];
m6_3738 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyCollectionInterface()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyCollectionInterface()", span="8795-8795"];
m6_3739 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyCollectionInterface()", file="ReadTests.cs", label="IReadOnlyCollection<int> list = JsonConvert.DeserializeObject<IReadOnlyCollection<int>>(''[1,2,3]'')", span="8797-8797"];
m6_3740 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyCollectionInterface()", file="ReadTests.cs", label="Assert.AreEqual(3, list.Count)", span="8799-8799"];
m6_3741 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyCollectionInterface()", file="ReadTests.cs", label="Assert.AreEqual(1, list.ElementAt(0))", span="8801-8801"];
m6_3742 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyCollectionInterface()", file="ReadTests.cs", label="Assert.AreEqual(2, list.ElementAt(1))", span="8802-8802"];
m6_3743 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyCollectionInterface()", file="ReadTests.cs", label="Assert.AreEqual(3, list.ElementAt(2))", span="8803-8803"];
m6_3744 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyCollectionInterface()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyCollectionInterface()", span="8795-8795"];
m6_609 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", span="1321-1321"];
m6_610 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="ReadTests.cs", label="List<DateTimeOffset> testDates = new List<DateTimeOffset>\r\n        {\r\n          new DateTimeOffset(new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Utc)),\r\n          new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero),\r\n          new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(13)),\r\n          new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(-3.5)),\r\n        }", span="1323-1329"];
m6_611 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="ReadTests.cs", label="string result = JsonConvert.SerializeObject(testDates, new JsonSerializerSettings { DateFormatHandling = DateFormatHandling.MicrosoftDateFormat })", span="1331-1331"];
m6_612 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="ReadTests.cs", label="Assert.AreEqual(@''[''''\/Date(-59011455539000+0000)\/'''',''''\/Date(946688461000+0000)\/'''',''''\/Date(946641661000+1300)\/'''',''''\/Date(946701061000-0330)\/'''']'', result)", span="1332-1332"];
m6_613 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", span="1321-1321"];
m6_2806 [cluster="Unk.AreEquivalent", file="ReadTests.cs", label="Entry Unk.AreEquivalent", span=""];
m6_1857 [cluster="System.Type.GetProperty(string, System.Reflection.BindingFlags)", file="ReadTests.cs", label="Entry System.Type.GetProperty(string, System.Reflection.BindingFlags)", span="0-0"];
m6_1068 [cluster="Unk.IsNotNull", file="ReadTests.cs", label="Entry Unk.IsNotNull", span=""];
m6_3090 [cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="ReadTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="379-379"];
m6_3715 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", span="8736-8736"];
m6_3716 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", file="ReadTests.cs", label="string json =\r\n        JsonConvert.SerializeObject(new AnswerFilterModel(), Formatting.Indented, new JsonSerializerSettings\r\n          {\r\n            ContractResolver = new DefaultContractResolver\r\n              {\r\n                IgnoreSerializableAttribute = false\r\n              }\r\n          })", span="8738-8745"];
m6_3717 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", file="ReadTests.cs", label="Assert.AreEqual(@''{\r\n  ''''<Active>k__BackingField'''': false,\r\n  ''''<Ja>k__BackingField'''': false,\r\n  ''''<Handlungsbedarf>k__BackingField'''': false,\r\n  ''''<Beratungsbedarf>k__BackingField'''': false,\r\n  ''''<Unzutreffend>k__BackingField'''': false,\r\n  ''''<Unbeantwortet>k__BackingField'''': false\r\n}'', json)", span="8747-8754"];
m6_3718 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", span="8736-8736"];
m6_146 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="ReadTests.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m6_523 [cluster="Newtonsoft.Json.Tests.TestObjects.JsonPropertyClass.JsonPropertyClass()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.JsonPropertyClass.JsonPropertyClass()", span="27-27"];
m6_2892 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", span="6603-6603"];
m6_2893 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", file="ReadTests.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''Unexpected end when setting PreProperty's value. Path 'PreProperty', line 2, position 18.'',\r\n        () =>\r\n        {\r\n          string json = @''{\r\n  ''''PreProperty'''': '';\r\n\r\n          JsonConvert.DeserializeObject<TestObjects.MyClass>(json);\r\n        })", span="6605-6613"];
m6_2894 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", span="6603-6603"];
m6_2479 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", span="5608-5608"];
m6_2480 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", file="ReadTests.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''Error converting value {null} to type 'System.DateTime'. Path '', line 1, position 4.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject(''null'', typeof(DateTime));\r\n        })", span="5610-5615"];
m6_2481 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", span="5608-5608"];
m6_1678 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", span="3752-3752"];
m6_1679 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="ReadTests.cs", label="ModelStateDictionary<string> modelStateDictionary = new ModelStateDictionary<string>()", span="3754-3754"];
m6_1680 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="ReadTests.cs", label="modelStateDictionary.Add(''key'', ''value'')", span="3755-3755"];
m6_1681 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(modelStateDictionary)", span="3757-3757"];
m6_1682 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="ReadTests.cs", label="Assert.AreEqual(@''{''''key'''':''''value''''}'', json)", span="3759-3759"];
m6_1683 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="ReadTests.cs", label="ModelStateDictionary<string> newModelStateDictionary = JsonConvert.DeserializeObject<ModelStateDictionary<string>>(json)", span="3761-3761"];
m6_1684 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="ReadTests.cs", label="Assert.AreEqual(1, newModelStateDictionary.Count)", span="3762-3762"];
m6_1685 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="ReadTests.cs", label="Assert.AreEqual(''value'', newModelStateDictionary[''key''])", span="3763-3763"];
m6_1686 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", span="3752-3752"];
m6_4053 [cluster="System.Convert.ToChar(int)", file="ReadTests.cs", label="Entry System.Convert.ToChar(int)", span="0-0"];
m6_3818 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePrivateListConstructor()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePrivateListConstructor()", span="8993-8993"];
m6_3819 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePrivateListConstructor()", file="ReadTests.cs", label="var list = JsonConvert.DeserializeObject<PrivateDefaultCtorWithIEnumerableCtorList<int>>(''[1,2]'')", span="8995-8995"];
m6_3820 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePrivateListConstructor()", file="ReadTests.cs", label="Assert.AreEqual(3, list.Count)", span="8997-8997"];
m6_3821 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePrivateListConstructor()", file="ReadTests.cs", label="Assert.AreEqual(1, list[0])", span="8998-8998"];
m6_3822 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePrivateListConstructor()", file="ReadTests.cs", label="Assert.AreEqual(2, list[1])", span="8999-8999"];
m6_3823 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePrivateListConstructor()", file="ReadTests.cs", label="Assert.AreEqual(0, list[2])", span="9000-9000"];
m6_3824 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePrivateListConstructor()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePrivateListConstructor()", span="8993-8993"];
m6_4111 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.TryParse(string, System.IFormatProvider, out Newtonsoft.Json.Tests.Serialization.Ratio)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Ratio.TryParse(string, System.IFormatProvider, out Newtonsoft.Json.Tests.Serialization.Ratio)", span="9993-9993"];
m6_4117 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.TryParse(string, System.IFormatProvider, out Newtonsoft.Json.Tests.Serialization.Ratio)", file="ReadTests.cs", label="input != null", span="9995-9995"];
m6_4118 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.TryParse(string, System.IFormatProvider, out Newtonsoft.Json.Tests.Serialization.Ratio)", file="ReadTests.cs", label="var fractionIndex = input.IndexOf('/')", span="9997-9997"];
m6_4121 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.TryParse(string, System.IFormatProvider, out Newtonsoft.Json.Tests.Serialization.Ratio)", file="ReadTests.cs", label="int.TryParse(input, NumberStyles.Integer, formatProvider, out numerator)", span="10002-10002"];
m6_4125 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.TryParse(string, System.IFormatProvider, out Newtonsoft.Json.Tests.Serialization.Ratio)", file="ReadTests.cs", label="int.TryParse(input.Substring(0, fractionIndex), NumberStyles.Integer, formatProvider, out numerator) &&\r\n              int.TryParse(input.Substring(fractionIndex + 1), NumberStyles.Integer, formatProvider, out denominator)", span="10011-10012"];
m6_4128 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.TryParse(string, System.IFormatProvider, out Newtonsoft.Json.Tests.Serialization.Ratio)", file="ReadTests.cs", label="result = default(Ratio)", span="10020-10020"];
m6_4119 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.TryParse(string, System.IFormatProvider, out Newtonsoft.Json.Tests.Serialization.Ratio)", file="ReadTests.cs", label="int numerator", span="9999-9999"];
m6_4120 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.TryParse(string, System.IFormatProvider, out Newtonsoft.Json.Tests.Serialization.Ratio)", file="ReadTests.cs", label="fractionIndex < 0", span="10000-10000"];
m6_4124 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.TryParse(string, System.IFormatProvider, out Newtonsoft.Json.Tests.Serialization.Ratio)", file="ReadTests.cs", label="int denominator", span="10010-10010"];
m6_4122 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.TryParse(string, System.IFormatProvider, out Newtonsoft.Json.Tests.Serialization.Ratio)", file="ReadTests.cs", label="result = new Ratio(numerator, 1)", span="10004-10004"];
m6_4123 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.TryParse(string, System.IFormatProvider, out Newtonsoft.Json.Tests.Serialization.Ratio)", file="ReadTests.cs", label="return true;", span="10005-10005"];
m6_4126 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.TryParse(string, System.IFormatProvider, out Newtonsoft.Json.Tests.Serialization.Ratio)", file="ReadTests.cs", label="result = new Ratio(numerator, denominator)", span="10014-10014"];
m6_4127 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.TryParse(string, System.IFormatProvider, out Newtonsoft.Json.Tests.Serialization.Ratio)", file="ReadTests.cs", label="return true;", span="10015-10015"];
m6_4129 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.TryParse(string, System.IFormatProvider, out Newtonsoft.Json.Tests.Serialization.Ratio)", file="ReadTests.cs", label="return false;", span="10021-10021"];
m6_4130 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.TryParse(string, System.IFormatProvider, out Newtonsoft.Json.Tests.Serialization.Ratio)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.Ratio.TryParse(string, System.IFormatProvider, out Newtonsoft.Json.Tests.Serialization.Ratio)", span="9993-9993"];
m6_1938 [cluster="System.Type.IsAssignableFrom(System.Type)", file="ReadTests.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m6_2670 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIList()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIList()", span="6187-6187"];
m6_2671 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIList()", file="ReadTests.cs", label="IList list = JsonConvert.DeserializeObject<IList>(''['1', 'two', 'III']'')", span="6189-6189"];
m6_2672 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIList()", file="ReadTests.cs", label="Assert.AreEqual(3, list.Count)", span="6190-6190"];
m6_2673 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIList()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIList()", span="6187-6187"];
m6_1989 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", span="4453-4453"];
m6_1990 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="ReadTests.cs", label="DateTime dateTime = new DateTime(2000, 12, 1, 23, 1, 1, DateTimeKind.Utc)", span="4455-4455"];
m6_1991 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="ReadTests.cs", label="List<KeyValuePair<string, WagePerson>> list = new List<KeyValuePair<string, WagePerson>>()", span="4457-4457"];
m6_1992 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="ReadTests.cs", label="list.Add(new KeyValuePair<string, WagePerson>(''key1'', new WagePerson\r\n        {\r\n          BirthDate = dateTime,\r\n          Department = ''Department1'',\r\n          LastModified = dateTime,\r\n          HourlyWage = 1\r\n        }))", span="4458-4464"];
m6_1993 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="ReadTests.cs", label="list.Add(new KeyValuePair<string, WagePerson>(''key2'', new WagePerson\r\n        {\r\n          BirthDate = dateTime,\r\n          Department = ''Department2'',\r\n          LastModified = dateTime,\r\n          HourlyWage = 2\r\n        }))", span="4465-4471"];
m6_1994 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(list, Formatting.Indented)", span="4473-4473"];
m6_1995 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="ReadTests.cs", label="Assert.AreEqual(@''[\r\n  {\r\n    ''''Key'''': ''''key1'''',\r\n    ''''Value'''': {\r\n      ''''HourlyWage'''': 1.0,\r\n      ''''Name'''': null,\r\n      ''''BirthDate'''': ''''2000-12-01T23:01:01Z'''',\r\n      ''''LastModified'''': ''''2000-12-01T23:01:01Z''''\r\n    }\r\n  },\r\n  {\r\n    ''''Key'''': ''''key2'''',\r\n    ''''Value'''': {\r\n      ''''HourlyWage'''': 2.0,\r\n      ''''Name'''': null,\r\n      ''''BirthDate'''': ''''2000-12-01T23:01:01Z'''',\r\n      ''''LastModified'''': ''''2000-12-01T23:01:01Z''''\r\n    }\r\n  }\r\n]'', json)", span="4475-4494"];
m6_1996 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="ReadTests.cs", label="List<KeyValuePair<string, WagePerson>> result = JsonConvert.DeserializeObject<List<KeyValuePair<string, WagePerson>>>(json)", span="4496-4496"];
m6_1997 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="ReadTests.cs", label="Assert.AreEqual(2, result.Count)", span="4497-4497"];
m6_1998 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="ReadTests.cs", label="Assert.AreEqual(''key1'', result[0].Key)", span="4498-4498"];
m6_1999 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="ReadTests.cs", label="Assert.AreEqual(1, result[0].Value.HourlyWage)", span="4499-4499"];
m6_2000 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="ReadTests.cs", label="Assert.AreEqual(''key2'', result[1].Key)", span="4500-4500"];
m6_2001 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="ReadTests.cs", label="Assert.AreEqual(2, result[1].Value.HourlyWage)", span="4501-4501"];
m6_2002 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", span="4453-4453"];
m6_3470 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D()", span="8068-8068"];
m6_3471 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D()", file="ReadTests.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1,2],[2,1],[2,2]],''''After'''':''''After!''''}''", span="8070-8070"];
m6_3472 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D()", file="ReadTests.cs", label="Array2D aa = JsonConvert.DeserializeObject<Array2D>(json)", span="8072-8072"];
m6_3480 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D()", file="ReadTests.cs", label="Assert.AreEqual(json, after)", span="8083-8083"];
m6_3473 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D()", file="ReadTests.cs", label="Assert.AreEqual(''Before!'', aa.Before)", span="8074-8074"];
m6_3474 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D()", file="ReadTests.cs", label="Assert.AreEqual(''After!'', aa.After)", span="8075-8075"];
m6_3475 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D()", file="ReadTests.cs", label="Assert.AreEqual(4, aa.Coordinates.GetLength(0))", span="8076-8076"];
m6_3476 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D()", file="ReadTests.cs", label="Assert.AreEqual(2, aa.Coordinates.GetLength(1))", span="8077-8077"];
m6_3477 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D()", file="ReadTests.cs", label="Assert.AreEqual(1, aa.Coordinates[0, 0])", span="8078-8078"];
m6_3478 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D()", file="ReadTests.cs", label="Assert.AreEqual(2, aa.Coordinates[1, 1])", span="8079-8079"];
m6_3479 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D()", file="ReadTests.cs", label="string after = JsonConvert.SerializeObject(aa)", span="8081-8081"];
m6_3481 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D()", span="8068-8068"];
m6_3825 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNonIsoDateDictionaryKey()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNonIsoDateDictionaryKey()", span="9004-9004"];
m6_3826 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNonIsoDateDictionaryKey()", file="ReadTests.cs", label="Dictionary<DateTime, string> d = JsonConvert.DeserializeObject<Dictionary<DateTime, string>>(@''{''''04/28/2013 00:00:00'''':''''test''''}'')", span="9006-9006"];
m6_3827 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNonIsoDateDictionaryKey()", file="ReadTests.cs", label="Assert.AreEqual(1, d.Count)", span="9008-9008"];
m6_3829 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNonIsoDateDictionaryKey()", file="ReadTests.cs", label="Assert.AreEqual(''test'', d[key])", span="9011-9011"];
m6_3828 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNonIsoDateDictionaryKey()", file="ReadTests.cs", label="DateTime key = DateTime.Parse(''04/28/2013 00:00:00'', CultureInfo.InvariantCulture)", span="9010-9010"];
m6_3830 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNonIsoDateDictionaryKey()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNonIsoDateDictionaryKey()", span="9004-9004"];
m6_1856 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", span="475-475"];
m6_3330 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClassFailure<T>.EnumerableClassFailure()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClassFailure<T>.EnumerableClassFailure()", span="7576-7576"];
m6_3331 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClassFailure<T>.EnumerableClassFailure()", file="ReadTests.cs", label="_values = new List<T>()", span="7578-7578"];
m6_3332 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClassFailure<T>.EnumerableClassFailure()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClassFailure<T>.EnumerableClassFailure()", span="7576-7576"];
m6_3092 [cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", span="1733-1733"];
m6_3293 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="7484-7484"];
m6_3294 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReadTests.cs", label="return ''X'';", span="7486-7486"];
m6_3295 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="7484-7484"];
m6_767 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithTimeSpan.ClassWithTimeSpan()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithTimeSpan.ClassWithTimeSpan()", span="1590-1590"];
m6_2526 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", span="5773-5773"];
m6_2527 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="ReadTests.cs", label="ChildDataContract cc = new ChildDataContract\r\n        {\r\n          VirtualMember = ''VirtualMember!'',\r\n          NonVirtualMember = ''NonVirtualMember!''\r\n        }", span="5775-5779"];
m6_2528 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="ReadTests.cs", label="DataContractSerializer serializer = new DataContractSerializer(typeof(ChildDataContract))", span="5781-5781"];
m6_2530 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="ReadTests.cs", label="serializer.WriteObject(ms, cc)", span="5784-5784"];
m6_2529 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="ReadTests.cs", label="MemoryStream ms = new MemoryStream()", span="5783-5783"];
m6_2531 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="ReadTests.cs", label="string xml = Encoding.UTF8.GetString(ms.ToArray(), 0, Convert.ToInt32(ms.Length))", span="5786-5786"];
m6_2532 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="ReadTests.cs", label="Console.WriteLine(xml)", span="5788-5788"];
m6_2533 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", span="5773-5773"];
m6_2535 [cluster="System.Convert.ToInt32(long)", file="ReadTests.cs", label="Entry System.Convert.ToInt32(long)", span="0-0"];
m6_3720 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNonGenericList()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNonGenericList()", span="8759-8759"];
m6_3721 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNonGenericList()", file="ReadTests.cs", label="IList l = JsonConvert.DeserializeObject<IList>(''['string!']'')", span="8761-8761"];
m6_3722 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNonGenericList()", file="ReadTests.cs", label="Assert.AreEqual(typeof(List<object>), l.GetType())", span="8763-8763"];
m6_3723 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNonGenericList()", file="ReadTests.cs", label="Assert.AreEqual(1, l.Count)", span="8764-8764"];
m6_3724 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNonGenericList()", file="ReadTests.cs", label="Assert.AreEqual(''string!'', l[0])", span="8765-8765"];
m6_3725 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNonGenericList()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNonGenericList()", span="8759-8759"];
m6_766 [cluster="System.TimeSpan.TimeSpan(int, int, int, int)", file="ReadTests.cs", label="Entry System.TimeSpan.TimeSpan(int, int, int, int)", span="0-0"];
m6_2536 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", span="5815-5815"];
m6_2537 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="ReadTests.cs", label="ChildObject cc = new ChildObject\r\n        {\r\n          VirtualMember = ''VirtualMember!'',\r\n          NonVirtualMember = ''NonVirtualMember!''\r\n        }", span="5817-5821"];
m6_2538 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="ReadTests.cs", label="string result = JsonConvert.SerializeObject(cc)", span="5823-5823"];
m6_2539 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="ReadTests.cs", label="Assert.AreEqual(@''{''''virtualMember'''':''''VirtualMember!'''',''''nonVirtualMember'''':''''NonVirtualMember!''''}'', result)", span="5824-5824"];
m6_2540 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", span="5815-5815"];
m6_1270 [cluster="Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", span="151-151"];
m6_1439 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", span="3104-3104"];
m6_1440 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="ReadTests.cs", label="List<String> strings = new List<String>()", span="3106-3106"];
m6_1441 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="ReadTests.cs", label="strings.Add(''str_1'')", span="3108-3108"];
m6_1442 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="ReadTests.cs", label="strings.Add(''str_2'')", span="3109-3109"];
m6_1443 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="ReadTests.cs", label="strings.Add(''str_3'')", span="3110-3110"];
m6_1444 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(strings)", span="3112-3112"];
m6_1445 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="ReadTests.cs", label="Assert.AreEqual(@''[''''str_1'''',''''str_2'''',''''str_3'''']'', json)", span="3113-3113"];
m6_1446 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", span="3104-3104"];
m6_1447 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", span="3117-3117"];
m6_1448 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="ReadTests.cs", label="ConstructorReadonlyFields c1 = new ConstructorReadonlyFields(''String!'', int.MaxValue)", span="3119-3119"];
m6_1449 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="3120-3120"];
m6_1450 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="ReadTests.cs", label="Assert.AreEqual(@''{\r\n  ''''A'''': ''''String!'''',\r\n  ''''B'''': 2147483647\r\n}'', json)", span="3121-3124"];
m6_1451 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="ReadTests.cs", label="ConstructorReadonlyFields c2 = JsonConvert.DeserializeObject<ConstructorReadonlyFields>(json)", span="3126-3126"];
m6_1452 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="ReadTests.cs", label="Assert.AreEqual(''String!'', c2.A)", span="3127-3127"];
m6_1453 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="ReadTests.cs", label="Assert.AreEqual(int.MaxValue, c2.B)", span="3128-3128"];
m6_1454 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", span="3117-3117"];
m6_666 [cluster="System.IO.StringReader.StringReader(string)", file="ReadTests.cs", label="Entry System.IO.StringReader.StringReader(string)", span="0-0"];
m6_2937 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", span="6704-6704"];
m6_2938 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(new Widget1 { Id = new WidgetId1 { Value = 1234 } })", span="6706-6706"];
m6_2939 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="ReadTests.cs", label="Assert.AreEqual(@''{''''Id'''':''''1234''''}'', json)", span="6708-6708"];
m6_2940 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="ReadTests.cs", label="Widget1 w = JsonConvert.DeserializeObject<Widget1>(@''{''''Id'''':''''1234''''}'')", span="6710-6710"];
m6_2941 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="ReadTests.cs", label="Assert.AreEqual(new WidgetId1 { Value = 1234 }, w.Id)", span="6712-6712"];
m6_2942 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", span="6704-6704"];
m6_3140 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", span="7089-7089"];
m6_3141 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="ReadTests.cs", label="PropertyItemConverter c = new PropertyItemConverter\r\n        {\r\n          Data =\r\n            new[]{\r\n              ''one'',\r\n              ''two'',\r\n              ''three''\r\n            }\r\n        }", span="7091-7099"];
m6_3142 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="ReadTests.cs", label="var c2 = JsonConvert.DeserializeObject<PropertyItemConverter>(''{'Data':['::ONE::','::TWO::']}'')", span="7101-7101"];
m6_3143 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="ReadTests.cs", label="Assert.IsNotNull(c2)", span="7103-7103"];
m6_3144 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="ReadTests.cs", label="Assert.AreEqual(2, c2.Data.Count)", span="7104-7104"];
m6_3145 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="ReadTests.cs", label="Assert.AreEqual(''one'', c2.Data[0])", span="7105-7105"];
m6_3146 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="ReadTests.cs", label="Assert.AreEqual(''two'', c2.Data[1])", span="7106-7106"];
m6_3147 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", span="7089-7089"];
m6_3093 [cluster="System.Console.WriteLine(object)", file="ReadTests.cs", label="Entry System.Console.WriteLine(object)", span="0-0"];
m6_3007 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", span="6834-6834"];
m6_3008 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="ReadTests.cs", label="DateTimeTestClass c =\r\n        JsonConvert.DeserializeObject<DateTimeTestClass>(\r\n          @''{''''PreField'''':''''Pre'''',''''DateTimeField'''':''''2008-12-12T12:12:12Z'''',''''DateTimeOffsetField'''':''''2008-12-12T12:12:12Z'''',''''PostField'''':''''Post''''}'',\r\n          new JsonSerializerSettings\r\n          {\r\n            DateTimeZoneHandling = DateTimeZoneHandling.Local\r\n          })", span="6836-6842"];
m6_3009 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="ReadTests.cs", label="Assert.AreEqual(new DateTime(2008, 12, 12, 12, 12, 12, 0, DateTimeKind.Utc).ToLocalTime(), c.DateTimeField)", span="6844-6844"];
m6_3010 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="ReadTests.cs", label="Assert.AreEqual(new DateTimeOffset(2008, 12, 12, 12, 12, 12, 0, TimeSpan.Zero), c.DateTimeOffsetField)", span="6845-6845"];
m6_3011 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="ReadTests.cs", label="Assert.AreEqual(''Pre'', c.PreField)", span="6846-6846"];
m6_3012 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="ReadTests.cs", label="Assert.AreEqual(''Post'', c.PostField)", span="6847-6847"];
m6_3013 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="ReadTests.cs", label="DateTimeTestClass c2 =\r\n        JsonConvert.DeserializeObject<DateTimeTestClass>(\r\n          @''{''''PreField'''':''''Pre'''',''''DateTimeField'''':''''2008-01-01T01:01:01Z'''',''''DateTimeOffsetField'''':''''2008-01-01T01:01:01Z'''',''''PostField'''':''''Post''''}'',\r\n          new JsonSerializerSettings\r\n          {\r\n            DateTimeZoneHandling = DateTimeZoneHandling.Local\r\n          })", span="6849-6855"];
m6_3014 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="ReadTests.cs", label="Assert.AreEqual(new DateTime(2008, 1, 1, 1, 1, 1, 0, DateTimeKind.Utc).ToLocalTime(), c2.DateTimeField)", span="6857-6857"];
m6_3015 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="ReadTests.cs", label="Assert.AreEqual(new DateTimeOffset(2008, 1, 1, 1, 1, 1, 0, TimeSpan.Zero), c2.DateTimeOffsetField)", span="6858-6858"];
m6_3016 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="ReadTests.cs", label="Assert.AreEqual(''Pre'', c2.PreField)", span="6859-6859"];
m6_3017 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="ReadTests.cs", label="Assert.AreEqual(''Post'', c2.PostField)", span="6860-6860"];
m6_3018 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", span="6834-6834"];
m6_2270 [cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime, System.TimeSpan)", file="ReadTests.cs", label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime, System.TimeSpan)", span="0-0"];
m6_768 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", span="1610-1610"];
m6_769 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(new JsonIgnoreAttributeOnClassTestClass())", span="1612-1612"];
m6_770 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="ReadTests.cs", label="Assert.AreEqual(@''{''''TheField'''':0,''''Property'''':21}'', json)", span="1614-1614"];
m6_771 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="ReadTests.cs", label="JsonIgnoreAttributeOnClassTestClass c = JsonConvert.DeserializeObject<JsonIgnoreAttributeOnClassTestClass>(@''{''''TheField'''':99,''''Property'''':-1,''''IgnoredField'''':-1}'')", span="1616-1616"];
m6_772 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="ReadTests.cs", label="Assert.AreEqual(0, c.IgnoredField)", span="1618-1618"];
m6_773 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="ReadTests.cs", label="Assert.AreEqual(99, c.Field)", span="1619-1619"];
m6_774 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", span="1610-1610"];
m6_2609 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", span="6012-6012"];
m6_2610 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(new ClassAttributeDerived\r\n        {\r\n          BaseClassValue = ''BaseClassValue!'',\r\n          DerivedClassValue = ''DerivedClassValue!'',\r\n          NonSerialized = ''NonSerialized!''\r\n        }, Formatting.Indented)", span="6014-6019"];
m6_2611 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="ReadTests.cs", label="Assert.AreEqual(@''{\r\n  ''''DerivedClassValue'''': ''''DerivedClassValue!'''',\r\n  ''''BaseClassValue'''': ''''BaseClassValue!''''\r\n}'', json)", span="6021-6024"];
m6_2612 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="ReadTests.cs", label="json = JsonConvert.SerializeObject(new CollectionClassAttributeDerived\r\n        {\r\n          BaseClassValue = ''BaseClassValue!'',\r\n          CollectionDerivedClassValue = ''CollectionDerivedClassValue!''\r\n        }, Formatting.Indented)", span="6026-6030"];
m6_2613 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="ReadTests.cs", label="Assert.AreEqual(@''{\r\n  ''''CollectionDerivedClassValue'''': ''''CollectionDerivedClassValue!'''',\r\n  ''''BaseClassValue'''': ''''BaseClassValue!''''\r\n}'', json)", span="6032-6035"];
m6_2614 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", span="6012-6012"];
m6_4086 [cluster="System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", file="ReadTests.cs", label="Entry System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", span="0-0"];
m6_798 [cluster="Newtonsoft.Json.Tests.TestObjects.PhoneNumber.PhoneNumber(string)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.PhoneNumber.PhoneNumber(string)", span="31-31"];
m6_2502 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor.DTOWithParameterisedConstructor(string)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor.DTOWithParameterisedConstructor(string)", span="5686-5686"];
m6_2503 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor.DTOWithParameterisedConstructor(string)", file="ReadTests.cs", label="this.A = A", span="5688-5688"];
m6_2504 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor.DTOWithParameterisedConstructor(string)", file="ReadTests.cs", label="B = 2", span="5689-5689"];
m6_2505 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor.DTOWithParameterisedConstructor(string)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor.DTOWithParameterisedConstructor(string)", span="5686-5686"];
m6_2432 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor(string)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor(string)", span="5484-5484"];
m6_2433 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor(string)", file="ReadTests.cs", label="Value = value", span="5486-5486"];
m6_2434 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor(string)", file="ReadTests.cs", label="Constructor = ''Public Paramatized''", span="5487-5487"];
m6_2435 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor(string)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor(string)", span="5484-5484"];
m6_1394 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", span="2993-2993"];
m6_1395 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", file="ReadTests.cs", label="string json = @''[]''", span="2995-2995"];
m6_1396 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", file="ReadTests.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        @''Cannot populate JSON array onto type 'Newtonsoft.Json.Tests.TestObjects.Person'. Path '', line 1, position 1.'',\r\n        () =>\r\n        {\r\n          JsonConvert.PopulateObject(json, new Person());\r\n        })", span="2997-3002"];
m6_1397 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", span="2993-2993"];
m6_3458 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3DWithConverter()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3DWithConverter()", span="7999-7999"];
m6_3459 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3DWithConverter()", file="ReadTests.cs", label="string json = @''{\r\n  ''''Before'''': ''''Before!'''',\r\n  ''''Coordinates'''': [\r\n    [\r\n      [\r\n        1.0,\r\n        1.0,\r\n        1.0\r\n      ],\r\n      [\r\n        1.0,\r\n        1.0,\r\n        2.0\r\n      ]\r\n    ],\r\n    [\r\n      [\r\n        1.0,\r\n        2.0,\r\n        1.0\r\n      ],\r\n      [\r\n        1.0,\r\n        2.0,\r\n        2.0\r\n      ]\r\n    ],\r\n    [\r\n      [\r\n        2.0,\r\n        1.0,\r\n        1.0\r\n      ],\r\n      [\r\n        2.0,\r\n        1.0,\r\n        2.0\r\n      ]\r\n    ],\r\n    [\r\n      [\r\n        2.0,\r\n        2.0,\r\n        1.0\r\n      ],\r\n      [\r\n        2.0,\r\n        2.0,\r\n        2.0\r\n      ]\r\n    ]\r\n  ],\r\n  ''''After'''': ''''After!''''\r\n}''", span="8001-8054"];
m6_3460 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3DWithConverter()", file="ReadTests.cs", label="Array3DWithConverter aa = JsonConvert.DeserializeObject<Array3DWithConverter>(json)", span="8056-8056"];
m6_3461 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3DWithConverter()", file="ReadTests.cs", label="Assert.AreEqual(''Before!'', aa.Before)", span="8058-8058"];
m6_3462 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3DWithConverter()", file="ReadTests.cs", label="Assert.AreEqual(''After!'', aa.After)", span="8059-8059"];
m6_3463 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3DWithConverter()", file="ReadTests.cs", label="Assert.AreEqual(4, aa.Coordinates.GetLength(0))", span="8060-8060"];
m6_3464 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3DWithConverter()", file="ReadTests.cs", label="Assert.AreEqual(2, aa.Coordinates.GetLength(1))", span="8061-8061"];
m6_3465 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3DWithConverter()", file="ReadTests.cs", label="Assert.AreEqual(3, aa.Coordinates.GetLength(2))", span="8062-8062"];
m6_3466 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3DWithConverter()", file="ReadTests.cs", label="Assert.AreEqual(1, aa.Coordinates[0, 0, 0])", span="8063-8063"];
m6_3467 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3DWithConverter()", file="ReadTests.cs", label="Assert.AreEqual(2, aa.Coordinates[1, 1, 1])", span="8064-8064"];
m6_3468 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3DWithConverter()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3DWithConverter()", span="7999-7999"];
m6_3794 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyCollection<T>.System.Collections.IEnumerable.GetEnumerator()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyCollection<T>.System.Collections.IEnumerable.GetEnumerator()", span="8929-8929"];
m6_3795 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyCollection<T>.System.Collections.IEnumerable.GetEnumerator()", file="ReadTests.cs", label="return _values.GetEnumerator();", span="8931-8931"];
m6_3796 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyCollection<T>.System.Collections.IEnumerable.GetEnumerator()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyCollection<T>.System.Collections.IEnumerable.GetEnumerator()", span="8929-8929"];
m6_1753 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, char)", file="ReadTests.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, char)", span="0-0"];
m6_2876 [cluster="Newtonsoft.Json.Tests.Serialization.Widget.Widget()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Widget.Widget()", span="9509-9509"];
m6_3172 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", span="7179-7179"];
m6_3173 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="ReadTests.cs", label="IDictionary<DateTime, int> dic1 = new Dictionary<DateTime, int>\r\n        {\r\n          {new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc), 1},\r\n          {new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc), 2}\r\n        }", span="7181-7185"];
m6_3174 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(dic1, Formatting.Indented)", span="7187-7187"];
m6_3175 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="ReadTests.cs", label="Assert.AreEqual(@''{\r\n  ''''2000-12-12T12:12:12Z'''': 1,\r\n  ''''2013-12-12T12:12:12Z'''': 2\r\n}'', json)", span="7189-7192"];
m6_3176 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="ReadTests.cs", label="IDictionary<DateTime, int> dic2 = JsonConvert.DeserializeObject<IDictionary<DateTime, int>>(json)", span="7194-7194"];
m6_3177 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="ReadTests.cs", label="Assert.AreEqual(2, dic2.Count)", span="7196-7196"];
m6_3178 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="ReadTests.cs", label="Assert.AreEqual(1, dic2[new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", span="7197-7197"];
m6_3179 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="ReadTests.cs", label="Assert.AreEqual(2, dic2[new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", span="7198-7198"];
m6_3180 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", span="7179-7179"];
m6_1271 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", span="2703-2703"];
m6_1272 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="ReadTests.cs", label="string json = @''{''''key1'''':''''value1'''',''''key2'''':''''value2''''}''", span="2705-2705"];
m6_1273 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="ReadTests.cs", label="Dictionary<string, string> values = JsonConvert.DeserializeObject<Dictionary<string, string>>(json)", span="2707-2707"];
m6_1274 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="ReadTests.cs", label="Console.WriteLine(values.Count)", span="2709-2709"];
m6_1275 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="ReadTests.cs", label="Console.WriteLine(values[''key1''])", span="2712-2712"];
m6_1276 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="ReadTests.cs", label="Assert.AreEqual(2, values.Count)", span="2715-2715"];
m6_1277 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="ReadTests.cs", label="Assert.AreEqual(''value1'', values[''key1''])", span="2716-2716"];
m6_1278 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="ReadTests.cs", label="Assert.AreEqual(''value2'', values[''key2''])", span="2717-2717"];
m6_1279 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", span="2703-2703"];
m6_1553 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", span="3416-3416"];
m6_1554 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", file="ReadTests.cs", label="return JsonConvert.SerializeObject(this, Formatting.Indented);", span="3418-3418"];
m6_1555 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", span="3416-3416"];
m6_661 [cluster="System.IO.StringWriter.StringWriter()", file="ReadTests.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m6_3200 [cluster="Newtonsoft.Json.Tests.Serialization.PersonSerializable.PersonSerializable()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.PersonSerializable.PersonSerializable()", span="9392-9392"];
m6_3957 [cluster="Newtonsoft.Json.Tests.Serialization.PersonSerializable.PersonSerializable()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.PersonSerializable.PersonSerializable()", span="9392-9392"];
m6_2327 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", span="5213-5213"];
m6_2328 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="ReadTests.cs", label="string json = ''[123456789876543.21]''", span="5215-5215"];
m6_2329 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="ReadTests.cs", label="IList<decimal> a = JsonConvert.DeserializeObject<IList<decimal>>(json)", span="5216-5216"];
m6_2330 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="ReadTests.cs", label="Assert.AreEqual(123456789876543.21m, a[0])", span="5217-5217"];
m6_2331 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", span="5213-5213"];
m6_2734 [cluster="Newtonsoft.Json.Tests.Serialization.Component.Component()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Component.Component()", span="9586-9586"];
m6_3984 [cluster="Newtonsoft.Json.Tests.Serialization.Component.Component()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.Component.Component()", span="9586-9586"];
m6_1320 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", span="2841-2841"];
m6_1321 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", file="ReadTests.cs", label="string json = @''{id: ''''12'''', name: ''''test'''', items: [{id: ''''112'''', name: ''''testing''''}]}''", span="2843-2843"];
m6_1322 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", file="ReadTests.cs", label="ListTestClass l = JsonConvert.DeserializeObject<ListTestClass>(json)", span="2845-2845"];
m6_1323 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", span="2841-2841"];
m6_1530 [cluster="Newtonsoft.Json.Tests.TestObjects.PersonPropertyClass.PersonPropertyClass()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.PersonPropertyClass.PersonPropertyClass()", span="31-31"];
m6_2724 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConcurrentDictionary()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConcurrentDictionary()", span="6288-6288"];
m6_2725 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConcurrentDictionary()", file="ReadTests.cs", label="IDictionary<string, Component> components = new Dictionary<string, Component>\r\n        {\r\n          {''Key!'', new Component()}\r\n        }", span="6290-6293"];
m6_2726 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConcurrentDictionary()", file="ReadTests.cs", label="GameObject go = new GameObject\r\n        {\r\n          Components = new ConcurrentDictionary<string, Component>(components),\r\n          Id = ''Id!'',\r\n          Name = ''Name!''\r\n        }", span="6294-6299"];
m6_2727 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConcurrentDictionary()", file="ReadTests.cs", label="string originalJson = JsonConvert.SerializeObject(go, Formatting.Indented)", span="6301-6301"];
m6_2728 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConcurrentDictionary()", file="ReadTests.cs", label="Assert.AreEqual(@''{\r\n  ''''Components'''': {\r\n    ''''Key!'''': {}\r\n  },\r\n  ''''Id'''': ''''Id!'''',\r\n  ''''Name'''': ''''Name!''''\r\n}'', originalJson)", span="6303-6309"];
m6_2729 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConcurrentDictionary()", file="ReadTests.cs", label="GameObject newObject = JsonConvert.DeserializeObject<GameObject>(originalJson)", span="6311-6311"];
m6_2730 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConcurrentDictionary()", file="ReadTests.cs", label="Assert.AreEqual(1, newObject.Components.Count)", span="6313-6313"];
m6_2731 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConcurrentDictionary()", file="ReadTests.cs", label="Assert.AreEqual(''Id!'', newObject.Id)", span="6314-6314"];
m6_2732 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConcurrentDictionary()", file="ReadTests.cs", label="Assert.AreEqual(''Name!'', newObject.Name)", span="6315-6315"];
m6_2733 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConcurrentDictionary()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConcurrentDictionary()", span="6288-6288"];
m6_816 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", span="1698-1698"];
m6_817 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="ReadTests.cs", label="ConverterPrecedenceClass c1 = new ConverterPrecedenceClass(''!Test!'')", span="1700-1700"];
m6_818 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(c1, new ArgumentConverterPrecedenceClassConverter())", span="1702-1702"];
m6_819 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="ReadTests.cs", label="Assert.AreEqual(@''[''''Class'''',''''!Test!'''']'', json)", span="1703-1703"];
m6_820 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="ReadTests.cs", label="ConverterPrecedenceClass c2 = JsonConvert.DeserializeObject<ConverterPrecedenceClass>(json, new ArgumentConverterPrecedenceClassConverter())", span="1705-1705"];
m6_821 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="ReadTests.cs", label="Assert.AreEqual(''!Test!'', c2.TestValue)", span="1707-1707"];
m6_822 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", span="1698-1698"];
m6_3907 [cluster="System.Type.GetInterfaces()", file="ReadTests.cs", label="Entry System.Type.GetInterfaces()", span="0-0"];
m6_3391 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", span="7753-7753"];
m6_3392 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="ReadTests.cs", label="var tuple = Tuple.Create(500)", span="7755-7755"];
m6_3393 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="ReadTests.cs", label="var json = JsonConvert.SerializeObject(tuple, new JsonSerializerSettings\r\n      {\r\n        ContractResolver = new SerializableContractResolver()\r\n      })", span="7756-7759"];
m6_3394 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="ReadTests.cs", label="Assert.AreEqual(@''{''''m_Item1'''':500}'', json)", span="7760-7760"];
m6_3395 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="ReadTests.cs", label="var obj = JsonConvert.DeserializeObject<Tuple<int>>(json, new JsonSerializerSettings\r\n      {\r\n        ContractResolver = new SerializableContractResolver()\r\n      })", span="7762-7765"];
m6_3396 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="ReadTests.cs", label="Assert.AreEqual(500, obj.Item1)", span="7766-7766"];
m6_3397 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", span="7753-7753"];
m6_1760 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, ushort)", file="ReadTests.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, ushort)", span="0-0"];
m6_931 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", span="1896-1896"];
m6_932 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="ReadTests.cs", label="UserNullable userNullablle = new UserNullable\r\n        {\r\n          Id = new Guid(''AD6205E8-0DF4-465d-AEA6-8BA18E93A7E7''),\r\n          FName = ''FirstValue'',\r\n          LName = ''LastValue'',\r\n          RoleId = 5,\r\n          NullableRoleId = 6,\r\n          NullRoleId = null,\r\n          Active = true\r\n        }", span="1898-1907"];
m6_933 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(userNullablle)", span="1909-1909"];
m6_934 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="ReadTests.cs", label="Assert.AreEqual(@''{''''Id'''':''''ad6205e8-0df4-465d-aea6-8ba18e93a7e7'''',''''FName'''':''''FirstValue'''',''''LName'''':''''LastValue'''',''''RoleId'''':5,''''NullableRoleId'''':6,''''NullRoleId'''':null,''''Active'''':true}'', json)", span="1911-1911"];
m6_935 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="ReadTests.cs", label="UserNullable userNullablleDeserialized = JsonConvert.DeserializeObject<UserNullable>(json)", span="1913-1913"];
m6_936 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="ReadTests.cs", label="Assert.AreEqual(new Guid(''AD6205E8-0DF4-465d-AEA6-8BA18E93A7E7''), userNullablleDeserialized.Id)", span="1915-1915"];
m6_937 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="ReadTests.cs", label="Assert.AreEqual(''FirstValue'', userNullablleDeserialized.FName)", span="1916-1916"];
m6_938 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="ReadTests.cs", label="Assert.AreEqual(''LastValue'', userNullablleDeserialized.LName)", span="1917-1917"];
m6_939 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="ReadTests.cs", label="Assert.AreEqual(5, userNullablleDeserialized.RoleId)", span="1918-1918"];
m6_940 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="ReadTests.cs", label="Assert.AreEqual(6, userNullablleDeserialized.NullableRoleId)", span="1919-1919"];
m6_941 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="ReadTests.cs", label="Assert.AreEqual(null, userNullablleDeserialized.NullRoleId)", span="1920-1920"];
m6_942 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="ReadTests.cs", label="Assert.AreEqual(true, userNullablleDeserialized.Active)", span="1921-1921"];
m6_943 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", span="1896-1896"];
m6_775 [cluster="Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeOnClassTestClass.JsonIgnoreAttributeOnClassTestClass()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeOnClassTestClass.JsonIgnoreAttributeOnClassTestClass()", span="28-28"];
m6_1433 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", span="3085-3085"];
m6_1434 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", file="ReadTests.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        @''Error converting value {null} to type 'System.Int32'. Path 'ReadTimeout', line 1, position 17.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:null}'', new JsonSerializerSettings\r\n          {\r\n            ContractResolver = new DefaultContractResolver\r\n            {\r\n#if !(SILVERLIGHT || NETFX_CORE || PORTABLE || PORTABLE40)\r\n              IgnoreSerializableAttribute = true\r\n#endif\r\n            }\r\n          });\r\n        })", span="3087-3100"];
m6_1435 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", span="3085-3085"];
m6_2628 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", span="6066-6066"];
m6_2629 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="ReadTests.cs", label="PrivateMembersClassWithAttributes c1 = new PrivateMembersClassWithAttributes(''privateString!'', ''internalString!'', ''readonlyString!'')", span="6068-6068"];
m6_2630 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="6070-6070"];
m6_2631 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="ReadTests.cs", label="Assert.AreEqual(@''{\r\n  ''''_privateString'''': ''''privateString!'''',\r\n  ''''_readonlyString'''': ''''readonlyString!'''',\r\n  ''''_internalString'''': ''''internalString!''''\r\n}'', json)", span="6071-6075"];
m6_2632 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="ReadTests.cs", label="PrivateMembersClassWithAttributes c2 = JsonConvert.DeserializeObject<PrivateMembersClassWithAttributes>(json)", span="6077-6077"];
m6_2633 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="ReadTests.cs", label="Assert.AreEqual(''readonlyString!'', c2.UseValue())", span="6078-6078"];
m6_2634 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", span="6066-6066"];
m6_3638 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", span="8546-8546"];
m6_3639 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="ReadTests.cs", label="StringWriter sw = new StringWriter()", span="8548-8548"];
m6_3640 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="ReadTests.cs", label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="8549-8549"];
m6_3644 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="ReadTests.cs", label="string json = sw.ToString()", span="8560-8560"];
m6_3641 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="ReadTests.cs", label="JsonSerializer serializer = JsonSerializer.Create(new JsonSerializerSettings\r\n      {\r\n        StringEscapeHandling = StringEscapeHandling.EscapeHtml,\r\n        Formatting = Formatting.Indented\r\n      })", span="8551-8555"];
m6_3642 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="ReadTests.cs", label="serializer.Serialize(jsonWriter, new { html = ''<html></html>'' })", span="8556-8556"];
m6_3643 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="ReadTests.cs", label="Assert.AreEqual(StringEscapeHandling.Default, jsonWriter.StringEscapeHandling)", span="8558-8558"];
m6_3645 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="ReadTests.cs", label="Assert.AreEqual(@''{\r\n  ''''html'''': ''''\u003chtml\u003e\u003c/html\u003e''''\r\n}'', json)", span="8562-8564"];
m6_3646 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", span="8546-8546"];
m6_1756 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, short)", file="ReadTests.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, short)", span="0-0"];
m6_2290 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedEvent.DerivedEvent()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedEvent.DerivedEvent()", span="5132-5132"];
m6_1380 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", span="2965-2965"];
m6_1381 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", file="ReadTests.cs", label="string json = @''[new Constructor(123)]''", span="2967-2967"];
m6_1382 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", file="ReadTests.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        @''Error converting value ''''Constructor'''' to type 'Newtonsoft.Json.Tests.TestObjects.Person'. Path '[0]', line 1, position 17.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<List<Person>>(json);\r\n        })", span="2969-2974"];
m6_1383 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", span="2965-2965"];
m6_1467 [cluster="Newtonsoft.Json.Tests.TestObjects.StructTest.StructTest()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.StructTest.StructTest()", span="27-27"];
m6_3019 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, int, System.DateTimeKind)", file="ReadTests.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m6_4047 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.ToByte(System.IFormatProvider)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Ratio.ToByte(System.IFormatProvider)", span="9874-9874"];
m6_4048 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.ToByte(System.IFormatProvider)", file="ReadTests.cs", label="return (byte)(this._numerator / this._denominator);", span="9876-9876"];
m6_4049 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.ToByte(System.IFormatProvider)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.Ratio.ToByte(System.IFormatProvider)", span="9874-9874"];
m6_219 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", span="449-449"];
m6_220 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="ReadTests.cs", label="Regex regex = new Regex(''(hi)'', RegexOptions.CultureInvariant)", span="451-451"];
m6_221 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(regex, Formatting.Indented)", span="453-453"];
m6_222 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="ReadTests.cs", label="Regex r2 = JsonConvert.DeserializeObject<Regex>(json)", span="455-455"];
m6_223 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="ReadTests.cs", label="Assert.AreEqual(''(hi)'', r2.ToString())", span="457-457"];
m6_224 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="ReadTests.cs", label="Assert.AreEqual(RegexOptions.CultureInvariant, r2.Options)", span="458-458"];
m6_225 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", span="449-449"];
m6_1139 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", span="2392-2392"];
m6_1140 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="ReadTests.cs", label="OptInClass optInClass = new OptInClass()", span="2394-2394"];
m6_1141 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="ReadTests.cs", label="optInClass.Age = 26", span="2395-2395"];
m6_1142 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="ReadTests.cs", label="optInClass.Name = ''James NK''", span="2396-2396"];
m6_1143 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="ReadTests.cs", label="optInClass.NotIncluded = ''Poor me :(''", span="2397-2397"];
m6_1144 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(optInClass, Formatting.Indented)", span="2399-2399"];
m6_1145 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="ReadTests.cs", label="Assert.AreEqual(@''{\r\n  ''''Name'''': ''''James NK'''',\r\n  ''''Age'''': 26\r\n}'', json)", span="2401-2404"];
m6_1146 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="ReadTests.cs", label="OptInClass newOptInClass = JsonConvert.DeserializeObject<OptInClass>(@''{\r\n  ''''Name'''': ''''James NK'''',\r\n  ''''NotIncluded'''': ''''Ignore me!'''',\r\n  ''''Age'''': 26\r\n}'')", span="2406-2410"];
m6_1147 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="ReadTests.cs", label="Assert.AreEqual(26, newOptInClass.Age)", span="2411-2411"];
m6_1148 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="ReadTests.cs", label="Assert.AreEqual(''James NK'', newOptInClass.Name)", span="2412-2412"];
m6_1149 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="ReadTests.cs", label="Assert.AreEqual(null, newOptInClass.NotIncluded)", span="2413-2413"];
m6_1150 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", span="2392-2392"];
m6_563 [cluster="System.Text.Encoding.GetBytes(string)", file="ReadTests.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m6_1045 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="ReadTests.cs", label="LogEntry entry = new LogEntry\r\n        {\r\n          LogDate = new DateTime(2009, 2, 15, 0, 0, 0, DateTimeKind.Utc),\r\n          Details = ''Application started.''\r\n        }", span="2156-2160"];
m6_1044 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", span="2154-2154"];
m6_1046 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="ReadTests.cs", label="string defaultJson = JsonConvert.SerializeObject(entry)", span="2162-2162"];
m6_1047 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="ReadTests.cs", label="string isoJson = JsonConvert.SerializeObject(entry, new IsoDateTimeConverter())", span="2165-2165"];
m6_1048 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="ReadTests.cs", label="string javascriptJson = JsonConvert.SerializeObject(entry, new JavaScriptDateTimeConverter())", span="2168-2168"];
m6_1049 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="ReadTests.cs", label="Console.WriteLine(defaultJson)", span="2171-2171"];
m6_1050 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="ReadTests.cs", label="Console.WriteLine(isoJson)", span="2172-2172"];
m6_1051 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="ReadTests.cs", label="Console.WriteLine(javascriptJson)", span="2173-2173"];
m6_1052 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", span="2154-2154"];
m6_733 [cluster="Newtonsoft.Json.Tests.TestObjects.ConverableMembers.ConverableMembers()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ConverableMembers.ConverableMembers()", span="30-30"];
m6_446 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", span="985-985"];
m6_447 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="ReadTests.cs", label="MethodExecutorObject executorObject = new MethodExecutorObject()", span="987-987"];
m6_448 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="ReadTests.cs", label="executorObject.serverClassName = ''BanSubs''", span="988-988"];
m6_449 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="ReadTests.cs", label="executorObject.serverMethodParams = new object[] { ''21321546'', ''101'', ''1236'', ''D:\\1.txt'' }", span="989-989"];
m6_450 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="ReadTests.cs", label="executorObject.clientGetResultFunction = ''ClientBanSubsCB''", span="990-990"];
m6_451 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="ReadTests.cs", label="string output = JsonConvert.SerializeObject(executorObject)", span="992-992"];
m6_453 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="ReadTests.cs", label="Assert.AreNotSame(executorObject, executorObject2)", span="996-996"];
m6_452 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="ReadTests.cs", label="MethodExecutorObject executorObject2 = JsonConvert.DeserializeObject(output, typeof(MethodExecutorObject)) as MethodExecutorObject", span="994-994"];
m6_454 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="ReadTests.cs", label="Assert.AreEqual(executorObject2.serverClassName, ''BanSubs'')", span="997-997"];
m6_455 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="ReadTests.cs", label="Assert.AreEqual(executorObject2.serverMethodParams.Length, 4)", span="998-998"];
m6_456 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="ReadTests.cs", label="CustomAssert.Contains(executorObject2.serverMethodParams, ''101'')", span="999-999"];
m6_457 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="ReadTests.cs", label="Assert.AreEqual(executorObject2.clientGetResultFunction, ''ClientBanSubsCB'')", span="1000-1000"];
m6_458 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", span="985-985"];
m6_1721 [cluster="System.Runtime.Serialization.SerializationInfo.GetDecimal(string)", file="ReadTests.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetDecimal(string)", span="0-0"];
m6_2615 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributeDerived.ClassAttributeDerived()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributeDerived.ClassAttributeDerived()", span="5952-5952"];
m6_384 [cluster="System.IO.MemoryStream.ToArray()", file="ReadTests.cs", label="Entry System.IO.MemoryStream.ToArray()", span="0-0"];
m6_3059 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="6965-6965"];
m6_3060 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ReadTests.cs", label="Color color = (Color)value", span="6967-6967"];
m6_3062 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ReadTests.cs", label="writer.WriteValue('':::'' + fixedColor.ToKnownColor().ToString().ToUpper() + '':::'')", span="6970-6970"];
m6_3061 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ReadTests.cs", label="Color fixedColor = (color == Color.White || color == Color.Black) ? color : Color.Gray", span="6968-6968"];
m6_3063 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="6965-6965"];
m6_1728 [cluster="System.Runtime.Serialization.SerializationInfo.GetUInt64(string)", file="ReadTests.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetUInt64(string)", span="0-0"];
m6_2254 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", span="5059-5059"];
m6_2255 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="ReadTests.cs", label="StructWithAttribute testStruct = new StructWithAttribute\r\n        {\r\n          MyInt = int.MaxValue\r\n        }", span="5061-5064"];
m6_2256 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(testStruct, Formatting.Indented)", span="5066-5066"];
m6_2257 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="ReadTests.cs", label="Assert.AreEqual(@''{\r\n  ''''MyInt'''': 2147483647\r\n}'', json)", span="5068-5070"];
m6_2258 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="ReadTests.cs", label="StructWithAttribute newStruct = JsonConvert.DeserializeObject<StructWithAttribute>(json)", span="5072-5072"];
m6_2259 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="ReadTests.cs", label="Assert.AreEqual(int.MaxValue, newStruct.MyInt)", span="5074-5074"];
m6_2260 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", span="5059-5059"];
m6_406 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type)", file="ReadTests.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type)", span="680-680"];
m6_1043 [cluster="Newtonsoft.Json.Tests.TestObjects.Person.Person()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Person.Person()", span="34-34"];
m6_1909 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.XmlNodeTestObject.XmlNodeTestObject()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.XmlNodeTestObject.XmlNodeTestObject()", span="4257-4257"];
m6_3951 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="ReadTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m6_2406 [cluster="Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken)", span="126-126"];
m6_2485 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", span="5619-5619"];
m6_2486 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", file="ReadTests.cs", label="object dateTime = JsonConvert.DeserializeObject(''null'', typeof(DateTime?))", span="5621-5621"];
m6_2487 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", file="ReadTests.cs", label="Assert.IsNull(dateTime)", span="5623-5623"];
m6_2488 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", span="5619-5619"];
m6_3226 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", span="7331-7331"];
m6_3227 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(new IgnoreDataMemberTestClass() { Ignored = int.MaxValue }, Formatting.Indented)", span="7333-7333"];
m6_3228 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", file="ReadTests.cs", label="Assert.AreEqual(@''{}'', json)", span="7334-7334"];
m6_3229 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", span="7331-7331"];
m6_2825 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", span="6462-6462"];
m6_2826 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="ReadTests.cs", label="IList<DateTimeOffset?> d1 = new List<DateTimeOffset?> { null }", span="6464-6464"];
m6_2827 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(d1)", span="6466-6466"];
m6_2829 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="ReadTests.cs", label="Assert.AreEqual(d1.Count, d2.Count)", span="6470-6470"];
m6_2830 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="ReadTests.cs", label="Assert.AreEqual(d1[0], d2[0])", span="6471-6471"];
m6_2828 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="ReadTests.cs", label="IList<DateTimeOffset?> d2 = JsonConvert.DeserializeObject<IList<DateTimeOffset?>>(json)", span="6468-6468"];
m6_2831 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", span="6462-6462"];
m6_206 [cluster="Newtonsoft.Json.Serialization.JsonSerializerProxy.JsonSerializerProxy(Newtonsoft.Json.Serialization.JsonSerializerInternalReader)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerProxy.JsonSerializerProxy(Newtonsoft.Json.Serialization.JsonSerializerInternalReader)", span="208-208"];
m6_1724 [cluster="System.Runtime.Serialization.SerializationInfo.GetSByte(string)", file="ReadTests.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetSByte(string)", span="0-0"];
m6_3366 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", span="7675-7675"];
m6_3367 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="ReadTests.cs", label="string json = @''[\r\n        900\r\n      ]''", span="7677-7679"];
m6_3368 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="ReadTests.cs", label="var l = JsonConvert.DeserializeObject<IReadOnlyList<int>>(json)", span="7681-7681"];
m6_3369 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="ReadTests.cs", label="int i = l[0]", span="7683-7683"];
m6_3370 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="ReadTests.cs", label="Assert.AreEqual(900, i)", span="7686-7686"];
m6_3371 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", span="7675-7675"];
m6_2275 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", span="5105-5105"];
m6_2276 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="ReadTests.cs", label="var serializeObject = JsonConvert.SerializeObject(new TimeZoneOffsetObject\r\n      {\r\n        Offset = new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6))\r\n      }, Formatting.None, new JsonSerializerSettings { DateFormatHandling = DateFormatHandling.MicrosoftDateFormat })", span="5107-5110"];
m6_2277 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="ReadTests.cs", label="Assert.AreEqual(''{\''Offset\'':\''\\/Date(946663200000+0600)\\/\''}'', serializeObject)", span="5112-5112"];
m6_2278 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="ReadTests.cs", label="var deserializeObject = JsonConvert.DeserializeObject<TimeZoneOffsetObject>(serializeObject)", span="5113-5113"];
m6_2279 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="ReadTests.cs", label="Assert.AreEqual(TimeSpan.FromHours(6), deserializeObject.Offset.Offset)", span="5114-5114"];
m6_2280 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="ReadTests.cs", label="Assert.AreEqual(new DateTime(2000, 1, 1), deserializeObject.Offset.Date)", span="5115-5115"];
m6_2281 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", span="5105-5105"];
m6_3956 [cluster="Unk.ToList", file="ReadTests.cs", label="Entry Unk.ToList", span=""];
m6_78 [cluster="System.Runtime.Serialization.StreamingContext.StreamingContext(System.Runtime.Serialization.StreamingContextStates)", file="ReadTests.cs", label="Entry System.Runtime.Serialization.StreamingContext.StreamingContext(System.Runtime.Serialization.StreamingContextStates)", span="0-0"];
m6_923 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", span="1883-1883"];
m6_924 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="ReadTests.cs", label="string json = @''{''''first_name'''':''''FirstNameValue'''',''''RawContent'''':[1,2,3,4,5],''''last_name'''':''''LastNameValue''''}''", span="1885-1885"];
m6_925 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="ReadTests.cs", label="PersonRaw personRaw = JsonConvert.DeserializeObject<PersonRaw>(json)", span="1887-1887"];
m6_926 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="ReadTests.cs", label="Assert.AreEqual(''FirstNameValue'', personRaw.FirstName)", span="1889-1889"];
m6_927 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="ReadTests.cs", label="Assert.AreEqual(''[1,2,3,4,5]'', personRaw.RawContent.ToString())", span="1890-1890"];
m6_928 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="ReadTests.cs", label="Assert.AreEqual(''LastNameValue'', personRaw.LastName)", span="1891-1891"];
m6_929 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", span="1883-1883"];
m6_1647 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="ReadTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m6_1823 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", span="4189-4189"];
m6_1860 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="ReadTests.cs", label="AA_field1 = f", span="4191-4191"];
m6_1861 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="ReadTests.cs", label="AA_field2 = f", span="4192-4192"];
m6_1862 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="ReadTests.cs", label="AA_property1 = f", span="4193-4193"];
m6_1863 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="ReadTests.cs", label="AA_property2 = f", span="4194-4194"];
m6_1864 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="ReadTests.cs", label="AA_property3 = f", span="4195-4195"];
m6_1865 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="ReadTests.cs", label="AA_property4 = f", span="4196-4196"];
m6_1866 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="ReadTests.cs", label="AA_property5 = f", span="4197-4197"];
m6_1867 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="ReadTests.cs", label="AA_property6 = f", span="4198-4198"];
m6_1868 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", span="4189-4189"];
m6_2313 [cluster="Unk.SerializeObject", file="ReadTests.cs", label="Entry Unk.SerializeObject", span=""];
m6_2207 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", span="4938-4938"];
m6_2208 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="ReadTests.cs", label="string jsonText = JsonConvert.SerializeObject(new double?[] { 2.4, 4.3, null }, Formatting.Indented)", span="4940-4940"];
m6_2209 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="ReadTests.cs", label="Assert.AreEqual(@''[\r\n  2.4,\r\n  4.3,\r\n  null\r\n]'', jsonText)", span="4942-4946"];
m6_2210 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", span="4938-4938"];
m6_3538 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmpty3DArray()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmpty3DArray()", span="8170-8170"];
m6_3539 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmpty3DArray()", file="ReadTests.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[],''''After'''':''''After!''''}''", span="8172-8172"];
m6_3540 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmpty3DArray()", file="ReadTests.cs", label="Array3D aa = JsonConvert.DeserializeObject<Array3D>(json)", span="8174-8174"];
m6_3547 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmpty3DArray()", file="ReadTests.cs", label="Assert.AreEqual(json, after)", span="8184-8184"];
m6_3541 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmpty3DArray()", file="ReadTests.cs", label="Assert.AreEqual(''Before!'', aa.Before)", span="8176-8176"];
m6_3542 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmpty3DArray()", file="ReadTests.cs", label="Assert.AreEqual(''After!'', aa.After)", span="8177-8177"];
m6_3543 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmpty3DArray()", file="ReadTests.cs", label="Assert.AreEqual(0, aa.Coordinates.GetLength(0))", span="8178-8178"];
m6_3544 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmpty3DArray()", file="ReadTests.cs", label="Assert.AreEqual(0, aa.Coordinates.GetLength(1))", span="8179-8179"];
m6_3545 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmpty3DArray()", file="ReadTests.cs", label="Assert.AreEqual(0, aa.Coordinates.GetLength(2))", span="8180-8180"];
m6_3546 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmpty3DArray()", file="ReadTests.cs", label="string after = JsonConvert.SerializeObject(aa)", span="8182-8182"];
m6_3548 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmpty3DArray()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmpty3DArray()", span="8170-8170"];
m6_799 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", span="1671-1671"];
m6_800 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="ReadTests.cs", label="ConstructorCaseSensitivityClass c = new ConstructorCaseSensitivityClass(''param1'', ''Param1'', ''Param2'')", span="1673-1673"];
m6_801 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(c)", span="1675-1675"];
m6_802 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="ReadTests.cs", label="ConstructorCaseSensitivityClass deserialized = JsonConvert.DeserializeObject<ConstructorCaseSensitivityClass>(json)", span="1677-1677"];
m6_803 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="ReadTests.cs", label="Assert.AreEqual(''param1'', deserialized.param1)", span="1679-1679"];
m6_804 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="ReadTests.cs", label="Assert.AreEqual(''Param1'', deserialized.Param1)", span="1680-1680"];
m6_805 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="ReadTests.cs", label="Assert.AreEqual(''Param2'', deserialized.Param2)", span="1681-1681"];
m6_806 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", span="1671-1671"];
m6_1280 [cluster="System.Console.WriteLine(int)", file="ReadTests.cs", label="Entry System.Console.WriteLine(int)", span="0-0"];
m6_4112 [cluster="System.FormatException.FormatException(string)", file="ReadTests.cs", label="Entry System.FormatException.FormatException(string)", span="0-0"];
m6_2243 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", span="5024-5024"];
m6_2244 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="ReadTests.cs", label="string classRef = typeof(StringDictionary).FullName", span="5026-5026"];
m6_2245 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="ReadTests.cs", label="StringDictionaryTestClass s1 = new StringDictionaryTestClass()\r\n        {\r\n          StringDictionaryProperty = new StringDictionary()\r\n            {\r\n              {''1'', ''One''},\r\n              {''2'', ''II''},\r\n              {''3'', ''3''}\r\n            }\r\n        }", span="5028-5036"];
m6_2247 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="ReadTests.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''Cannot create and populate list type '' + classRef + ''. Path 'StringDictionaryProperty', line 2, position 32.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<StringDictionaryTestClass>(json);\r\n        })", span="5040-5045"];
m6_2246 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(s1, Formatting.Indented)", span="5038-5038"];
m6_2248 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", span="5024-5024"];
m6_744 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", span="1569-1569"];
m6_745 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="ReadTests.cs", label="Guid guid = new Guid(''BED7F4EA-1A96-11d2-8F08-00A0C9A6186D'')", span="1571-1571"];
m6_746 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(new ClassWithGuid { GuidField = guid })", span="1573-1573"];
m6_749 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="ReadTests.cs", label="Assert.AreEqual(guid, c.GuidField)", span="1577-1577"];
m6_747 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="ReadTests.cs", label="Assert.AreEqual(@''{''''GuidField'''':''''bed7f4ea-1a96-11d2-8f08-00a0c9a6186d''''}'', json)", span="1574-1574"];
m6_748 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="ReadTests.cs", label="ClassWithGuid c = JsonConvert.DeserializeObject<ClassWithGuid>(json)", span="1576-1576"];
m6_750 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", span="1569-1569"];
m6_2354 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", span="5270-5270"];
m6_2355 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", file="ReadTests.cs", label="IDoWork = doWork", span="5273-5273"];
m6_2356 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", span="5270-5270"];
m6_4067 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.ToInt32(System.IFormatProvider)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Ratio.ToInt32(System.IFormatProvider)", span="9906-9906"];
m6_4068 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.ToInt32(System.IFormatProvider)", file="ReadTests.cs", label="return this._numerator / this._denominator;", span="9908-9908"];
m6_4069 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.ToInt32(System.IFormatProvider)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.Ratio.ToInt32(System.IFormatProvider)", span="9906-9906"];
m6_2996 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", span="6810-6810"];
m6_2997 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", file="ReadTests.cs", label="ExceptionAssert.Throws<ArgumentNullException>(\r\n        @''Value cannot be null.\r\nParameter name: value'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject(null);\r\n        })", span="6812-6818"];
m6_2998 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", span="6810-6810"];
m6_2548 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObject.ChildWithDifferentOverrideObject()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObject.ChildWithDifferentOverrideObject()", span="5808-5808"];
m6_668 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", span="1428-1428"];
m6_669 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(new object())", span="1430-1430"];
m6_670 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", file="ReadTests.cs", label="Assert.AreEqual(''{}'', json)", span="1431-1431"];
m6_671 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", span="1428-1428"];
m6_1151 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClass.OptInClass()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClass.OptInClass()", span="2372-2372"];
m6_1895 [cluster="Unk.Parse", file="ReadTests.cs", label="Entry Unk.Parse", span=""];
m6_3768 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)", span="8851-8851"];
m6_3769 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)", file="ReadTests.cs", label="return _dictionary.ContainsKey(key);", span="8853-8853"];
m6_3770 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)", span="8851-8851"];
m6_4033 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.Ratio(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Ratio.Ratio(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="9848-9848"];
m6_4034 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.Ratio(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReadTests.cs", label="_numerator = info.GetInt32(''n'')", span="9850-9850"];
m6_4035 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.Ratio(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReadTests.cs", label="_denominator = info.GetInt32(''d'')", span="9851-9851"];
m6_4036 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.Ratio(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.Ratio.Ratio(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="9848-9848"];
m6_835 [cluster="System.DateTime.DateTime(long, System.DateTimeKind)", file="ReadTests.cs", label="Entry System.DateTime.DateTime(long, System.DateTimeKind)", span="0-0"];
m6_2194 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", span="4910-4910"];
m6_2195 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", file="ReadTests.cs", label="return new DictionaryKey() { Value = value };", span="4912-4912"];
m6_2196 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", span="4910-4910"];
m6_2520 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", span="5754-5754"];
m6_2521 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="ReadTests.cs", label="ChildDataContract cc = new ChildDataContract\r\n      {\r\n        VirtualMember = ''VirtualMember!'',\r\n        NonVirtualMember = ''NonVirtualMember!''\r\n      }", span="5756-5760"];
m6_2522 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="ReadTests.cs", label="string result = JsonConvert.SerializeObject(cc, Formatting.Indented)", span="5762-5762"];
m6_2523 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="ReadTests.cs", label="Console.WriteLine(result)", span="5769-5769"];
m6_2524 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", span="5754-5754"];
m6_2519 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableArrayPropertyClass.EnumerableArrayPropertyClass()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableArrayPropertyClass.EnumerableArrayPropertyClass()", span="5717-5717"];
m6_2441 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string)", span="5505-5505"];
m6_2442 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string)", file="ReadTests.cs", label="Value = value", span="5507-5507"];
m6_2443 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string)", file="ReadTests.cs", label="Constructor = ''Public Paramatized 1''", span="5508-5508"];
m6_2444 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string)", span="5505-5505"];
m6_2804 [cluster="Newtonsoft.Json.JsonWriter.Flush()", file="ReadTests.cs", label="Entry Newtonsoft.Json.JsonWriter.Flush()", span="342-342"];
m6_1232 [cluster="Newtonsoft.Json.Tests.TestObjects.Content.Content()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Content.Content()", span="31-31"];
m6_1619 [cluster="System.TimeSpan.TimeSpan(int, int, int, int, int)", file="ReadTests.cs", label="Entry System.TimeSpan.TimeSpan(int, int, int, int, int)", span="0-0"];
m6_1855 [cluster="System.Type.GetField(string, System.Reflection.BindingFlags)", file="ReadTests.cs", label="Entry System.Type.GetField(string, System.Reflection.BindingFlags)", span="0-0"];
m6_10 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericClass<T, TValue>.System.Collections.IEnumerable.GetEnumerator()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericClass<T, TValue>.System.Collections.IEnumerable.GetEnumerator()", span="127-127"];
m6_11 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericClass<T, TValue>.System.Collections.IEnumerable.GetEnumerator()", file="ReadTests.cs", label="return GetEnumerator();", span="129-129"];
m6_12 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericClass<T, TValue>.System.Collections.IEnumerable.GetEnumerator()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericClass<T, TValue>.System.Collections.IEnumerable.GetEnumerator()", span="127-127"];
m6_3089 [cluster="Newtonsoft.Json.Bson.BsonWriter.WriteValue(string)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Bson.BsonWriter.WriteValue(string)", span="265-265"];
m6_723 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", span="1506-1506"];
m6_724 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(new ConverableMembers(), Formatting.Indented)", span="1508-1508"];
m6_725 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="ReadTests.cs", label="string expected = null", span="1510-1510"];
m6_727 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="ReadTests.cs", label="Assert.AreEqual(expected, json)", span="1546-1546"];
m6_728 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="ReadTests.cs", label="ConverableMembers c = JsonConvert.DeserializeObject<ConverableMembers>(json)", span="1548-1548"];
m6_726 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="ReadTests.cs", label="expected = @''{\r\n  ''''String'''': ''''string'''',\r\n  ''''Int32'''': 2147483647,\r\n  ''''UInt32'''': 4294967295,\r\n  ''''Byte'''': 255,\r\n  ''''SByte'''': 127,\r\n  ''''Short'''': 32767,\r\n  ''''UShort'''': 65535,\r\n  ''''Long'''': 9223372036854775807,\r\n  ''''ULong'''': 9223372036854775807,\r\n  ''''Double'''': 1.7976931348623157E+308,\r\n  ''''Float'''': 3.40282347E+38,\r\n  ''''DBNull'''': null,\r\n  ''''Bool'''': true,\r\n  ''''Char'''': ''''\u0000''''\r\n}''", span="1512-1527"];
m6_729 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="ReadTests.cs", label="Assert.AreEqual(''string'', c.String)", span="1549-1549"];
m6_730 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="ReadTests.cs", label="Assert.AreEqual(double.MaxValue, c.Double)", span="1550-1550"];
m6_731 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="ReadTests.cs", label="Assert.AreEqual(DBNull.Value, c.DBNull)", span="1552-1552"];
m6_732 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", span="1506-1506"];
m6_2232 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", span="5001-5001"];
m6_2233 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="ReadTests.cs", label="JsonSerializer serializer1 = new JsonSerializer()", span="5003-5003"];
m6_2234 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="ReadTests.cs", label="serializer1.Converters.Add(new IsoDateTimeConverter())", span="5004-5004"];
m6_2235 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="ReadTests.cs", label="serializer1.NullValueHandling = NullValueHandling.Ignore", span="5005-5005"];
m6_2238 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="ReadTests.cs", label="MyClass[] z = (MyClass[])serializer1.Deserialize(reader, typeof(MyClass[]))", span="5011-5011"];
m6_2236 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="ReadTests.cs", label="string json = @''[{''''Prop1'''':''''''''},{''''Prop1'''':''''''''}]''", span="5007-5007"];
m6_2237 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="ReadTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="5009-5009"];
m6_2239 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="ReadTests.cs", label="Assert.AreEqual(2, z.Length)", span="5012-5012"];
m6_2240 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="ReadTests.cs", label="Assert.AreEqual(0, z[0].Prop1.Length)", span="5013-5013"];
m6_2241 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="ReadTests.cs", label="Assert.AreEqual(0, z[1].Prop1.Length)", span="5014-5014"];
m6_2242 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", span="5001-5001"];
m6_1203 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", span="2554-2554"];
m6_1204 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="ReadTests.cs", label="string json = @''{\r\n  ''''short'''': {\r\n    ''''original'''': ''''http://www.contrast.ie/blog/online&#45;marketing&#45;2009/'''',\r\n    ''''short'''': ''''m2sqc6'''',\r\n    ''''shortened'''': ''''http://short.ie/m2sqc6'''',\r\n    ''''error'''': {\r\n      ''''code'''': 0,\r\n      ''''msg'''': ''''No action taken''''\r\n    }\r\n  }\r\n}''", span="2556-2566"];
m6_1205 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="ReadTests.cs", label="JObject o = JObject.Parse(json)", span="2568-2568"];
m6_1206 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="ReadTests.cs", label="Shortie s = JsonConvert.DeserializeObject<Shortie>(o[''short''].ToString())", span="2570-2570"];
m6_1207 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="ReadTests.cs", label="Assert.IsNotNull(s)", span="2571-2571"];
m6_1208 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="ReadTests.cs", label="Assert.AreEqual(s.Original, ''http://www.contrast.ie/blog/online&#45;marketing&#45;2009/'')", span="2573-2573"];
m6_1209 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="ReadTests.cs", label="Assert.AreEqual(s.Short, ''m2sqc6'')", span="2574-2574"];
m6_1210 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="ReadTests.cs", label="Assert.AreEqual(s.Shortened, ''http://short.ie/m2sqc6'')", span="2575-2575"];
m6_1211 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", span="2554-2554"];
m6_3056 [cluster="Newtonsoft.Json.Tests.Serialization.MetroPropertyNameResolver.MetroPropertyNameResolver()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.MetroPropertyNameResolver.MetroPropertyNameResolver()", span="9658-9658"];
m6_2807 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", span="6422-6422"];
m6_2808 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="ReadTests.cs", label="CultureInfo initialCulture = Thread.CurrentThread.CurrentCulture", span="6424-6424"];
m6_2809 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="ReadTests.cs", label="CultureInfo testCulture = CultureInfo.CreateSpecificCulture(''nb-NO'')", span="6428-6428"];
m6_2810 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="ReadTests.cs", label="Thread.CurrentThread.CurrentCulture = testCulture", span="6430-6430"];
m6_2811 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="ReadTests.cs", label="Thread.CurrentThread.CurrentUICulture = testCulture", span="6431-6431"];
m6_2812 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="ReadTests.cs", label="string json = @''{ 'Quantity': '1.5', 'OptionalQuantity': '2.2' }''", span="6433-6433"];
m6_2813 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="ReadTests.cs", label="DecimalTestClass c = JsonConvert.DeserializeObject<DecimalTestClass>(json)", span="6435-6435"];
m6_2814 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="ReadTests.cs", label="Assert.AreEqual(1.5m, c.Quantity)", span="6437-6437"];
m6_2815 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="ReadTests.cs", label="Assert.AreEqual(2.2d, c.OptionalQuantity)", span="6438-6438"];
m6_2816 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", span="6422-6422"];
m6_1054 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", span="2176-2176"];
m6_1055 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="ReadTests.cs", label="GenericListAndDictionaryInterfaceProperties o = new GenericListAndDictionaryInterfaceProperties()", span="2178-2178"];
m6_1056 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="ReadTests.cs", label="o.IDictionaryProperty = new Dictionary<string, int>\r\n        {\r\n          {''one'', 1},\r\n          {''two'', 2},\r\n          {''three'', 3}\r\n        }", span="2179-2184"];
m6_1057 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="ReadTests.cs", label="o.IListProperty = new List<int>\r\n        {\r\n          1, 2, 3\r\n        }", span="2185-2188"];
m6_1058 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="ReadTests.cs", label="o.IEnumerableProperty = new List<int>\r\n        {\r\n          4, 5, 6\r\n        }", span="2189-2192"];
m6_1059 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(o, Formatting.Indented)", span="2194-2194"];
m6_1063 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="ReadTests.cs", label="CollectionAssert.AreEqual(o.IListProperty.ToArray(), deserializedObject.IListProperty.ToArray())", span="2217-2217"];
m6_1064 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="ReadTests.cs", label="CollectionAssert.AreEqual(o.IEnumerableProperty.ToArray(), deserializedObject.IEnumerableProperty.ToArray())", span="2218-2218"];
m6_1065 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="ReadTests.cs", label="CollectionAssert.AreEqual(o.IDictionaryProperty.ToArray(), deserializedObject.IDictionaryProperty.ToArray())", span="2219-2219"];
m6_1060 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="ReadTests.cs", label="Assert.AreEqual(@''{\r\n  ''''IEnumerableProperty'''': [\r\n    4,\r\n    5,\r\n    6\r\n  ],\r\n  ''''IListProperty'''': [\r\n    1,\r\n    2,\r\n    3\r\n  ],\r\n  ''''IDictionaryProperty'''': {\r\n    ''''one'''': 1,\r\n    ''''two'''': 2,\r\n    ''''three'''': 3\r\n  }\r\n}'', json)", span="2196-2212"];
m6_1061 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="ReadTests.cs", label="GenericListAndDictionaryInterfaceProperties deserializedObject = JsonConvert.DeserializeObject<GenericListAndDictionaryInterfaceProperties>(json)", span="2214-2214"];
m6_1062 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="ReadTests.cs", label="Assert.IsNotNull(deserializedObject)", span="2215-2215"];
m6_1066 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", span="2176-2176"];
m6_2771 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", span="6370-6370"];
m6_2772 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="ReadTests.cs", label="string input = ''http://test.com/%22foo+bar%22''", span="6372-6372"];
m6_2773 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="ReadTests.cs", label="Uri uri = new Uri(input)", span="6373-6373"];
m6_2774 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(uri)", span="6374-6374"];
m6_2776 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="ReadTests.cs", label="Assert.AreEqual(uri, output)", span="6377-6377"];
m6_2775 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="ReadTests.cs", label="Uri output = JsonConvert.DeserializeObject<Uri>(json)", span="6375-6375"];
m6_2777 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", span="6370-6370"];
m6_275 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FieldExtensionDataAttributeTestClass.FieldExtensionDataAttributeTestClass()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FieldExtensionDataAttributeTestClass.FieldExtensionDataAttributeTestClass()", span="507-507"];
m6_4070 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.ToInt64(System.IFormatProvider)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Ratio.ToInt64(System.IFormatProvider)", span="9911-9911"];
m6_4071 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.ToInt64(System.IFormatProvider)", file="ReadTests.cs", label="return this._numerator / this._denominator;", span="9913-9913"];
m6_4072 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.ToInt64(System.IFormatProvider)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.Ratio.ToInt64(System.IFormatProvider)", span="9911-9911"];
m6_1919 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDouble.PosDouble()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDouble.PosDouble()", span="4341-4341"];
m6_1128 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", span="2339-2339"];
m6_1129 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="ReadTests.cs", label="string json = @''{\r\n    ''''request'''': ''''ux.settings.update'''',\r\n    ''''sid'''': ''''14c561bd-32a8-457e-b4e5-4bba0832897f'''',\r\n    ''''uid'''': ''''30c39065-0f31-de11-9442-001e3786a8ec'''',\r\n    ''''fidOrder'''': [\r\n        ''''id'''',\r\n        ''''andytest_name'''',\r\n        ''''andytest_age'''',\r\n        ''''andytest_address'''',\r\n        ''''andytest_phone'''',\r\n        ''''date'''',\r\n        ''''title'''',\r\n        ''''titleId''''\r\n    ],\r\n    ''''entityName'''': ''''Andy Test'''',\r\n    ''''setting'''': ''''entity.field.order''''\r\n}''", span="2341-2357"];
m6_1130 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="ReadTests.cs", label="RequestOnly r = JsonConvert.DeserializeObject<RequestOnly>(json)", span="2359-2359"];
m6_1132 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="ReadTests.cs", label="NonRequest n = JsonConvert.DeserializeObject<NonRequest>(json)", span="2362-2362"];
m6_1131 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="ReadTests.cs", label="Assert.AreEqual(''ux.settings.update'', r.Request)", span="2360-2360"];
m6_1133 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="ReadTests.cs", label="Assert.AreEqual(new Guid(''14c561bd-32a8-457e-b4e5-4bba0832897f''), n.Sid)", span="2363-2363"];
m6_1134 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="ReadTests.cs", label="Assert.AreEqual(new Guid(''30c39065-0f31-de11-9442-001e3786a8ec''), n.Uid)", span="2364-2364"];
m6_1135 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="ReadTests.cs", label="Assert.AreEqual(8, n.FidOrder.Count)", span="2365-2365"];
m6_1136 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="ReadTests.cs", label="Assert.AreEqual(''id'', n.FidOrder[0])", span="2366-2366"];
m6_1137 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="ReadTests.cs", label="Assert.AreEqual(''titleId'', n.FidOrder[n.FidOrder.Count - 1])", span="2367-2367"];
m6_1138 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", span="2339-2339"];
m6_3057 [cluster="Newtonsoft.Json.Tests.Serialization.MetroStringConverter.MetroStringConverter()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.MetroStringConverter.MetroStringConverter()", span="9628-9628"];
m6_2051 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.StringAppenderConverter()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.StringAppenderConverter()", span="4551-4551"];
m6_2376 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", span="5358-5358"];
m6_2377 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="ReadTests.cs", label="NullableStructPropertyClass nullableStructPropertyClass = new NullableStructPropertyClass()", span="5360-5360"];
m6_2378 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="ReadTests.cs", label="nullableStructPropertyClass.Foo1 = new StructISerializable() { Name = ''foo 1'' }", span="5361-5361"];
m6_2379 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="ReadTests.cs", label="nullableStructPropertyClass.Foo2 = new StructISerializable() { Name = ''foo 2'' }", span="5362-5362"];
m6_2383 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="ReadTests.cs", label="string s = JsonConvert.SerializeObject(nullableStructPropertyClass)", span="5369-5369"];
m6_2380 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="ReadTests.cs", label="NullableStructPropertyClass barWithNull = new NullableStructPropertyClass()", span="5364-5364"];
m6_2381 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="ReadTests.cs", label="barWithNull.Foo1 = new StructISerializable() { Name = ''foo 1'' }", span="5365-5365"];
m6_2382 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="ReadTests.cs", label="barWithNull.Foo2 = null", span="5366-5366"];
m6_2387 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="ReadTests.cs", label="s = JsonConvert.SerializeObject(barWithNull)", span="5375-5375"];
m6_2384 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="ReadTests.cs", label="NullableStructPropertyClass deserialized = deserialize(s)", span="5370-5370"];
m6_2385 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="ReadTests.cs", label="Assert.AreEqual(deserialized.Foo1.Name, ''foo 1'')", span="5371-5371"];
m6_2386 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="ReadTests.cs", label="Assert.AreEqual(deserialized.Foo2.Value.Name, ''foo 2'')", span="5372-5372"];
m6_2388 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="ReadTests.cs", label="deserialized = deserialize(s)", span="5376-5376"];
m6_2389 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="ReadTests.cs", label="Assert.AreEqual(deserialized.Foo1.Name, ''foo 1'')", span="5377-5377"];
m6_2390 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="ReadTests.cs", label="Assert.AreEqual(deserialized.Foo2, null)", span="5378-5378"];
m6_2391 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", span="5358-5358"];
m6_964 [cluster="Newtonsoft.Json.Tests.TestObjects.TypeClass.TypeClass()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.TypeClass.TypeClass()", span="29-29"];
m6_945 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", span="1925-1925"];
m6_946 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="ReadTests.cs", label="string json = @''{''''Height'''':1}''", span="1927-1927"];
m6_947 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="ReadTests.cs", label="DoubleClass c = JsonConvert.DeserializeObject<DoubleClass>(json)", span="1929-1929"];
m6_948 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="ReadTests.cs", label="Assert.AreEqual(1, c.Height)", span="1930-1930"];
m6_949 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", span="1925-1925"];
m6_501 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string)", file="ReadTests.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string)", span="655-655"];
m6_1975 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", span="4434-4434"];
m6_1976 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="ReadTests.cs", label="List<KeyValuePair<string, string>> list = new List<KeyValuePair<string, string>>()", span="4436-4436"];
m6_1977 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="ReadTests.cs", label="list.Add(new KeyValuePair<string, string>(''key1'', ''value1''))", span="4437-4437"];
m6_1978 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="ReadTests.cs", label="list.Add(new KeyValuePair<string, string>(''key2'', ''value2''))", span="4438-4438"];
m6_1979 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(list)", span="4440-4440"];
m6_1980 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="ReadTests.cs", label="Assert.AreEqual(@''[{''''Key'''':''''key1'''',''''Value'''':''''value1''''},{''''Key'''':''''key2'''',''''Value'''':''''value2''''}]'', json)", span="4442-4442"];
m6_1981 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="ReadTests.cs", label="List<KeyValuePair<string, string>> result = JsonConvert.DeserializeObject<List<KeyValuePair<string, string>>>(json)", span="4444-4444"];
m6_1982 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="ReadTests.cs", label="Assert.AreEqual(2, result.Count)", span="4445-4445"];
m6_1983 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="ReadTests.cs", label="Assert.AreEqual(''key1'', result[0].Key)", span="4446-4446"];
m6_1984 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="ReadTests.cs", label="Assert.AreEqual(''value1'', result[0].Value)", span="4447-4447"];
m6_1985 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="ReadTests.cs", label="Assert.AreEqual(''key2'', result[1].Key)", span="4448-4448"];
m6_1986 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="ReadTests.cs", label="Assert.AreEqual(''value2'', result[1].Value)", span="4449-4449"];
m6_1987 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", span="4434-4434"];
m6_4021 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTestClass.ShouldSerializeName()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ShouldSerializeTestClass.ShouldSerializeName()", span="9749-9749"];
m6_4022 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTestClass.ShouldSerializeName()", file="ReadTests.cs", label="return _shouldSerializeName;", span="9751-9751"];
m6_4023 [cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTestClass.ShouldSerializeName()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ShouldSerializeTestClass.ShouldSerializeName()", span="9749-9749"];
m6_511 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="ReadTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m6_3844 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IdReferenceResolver.IsReferenced(object, object)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IdReferenceResolver.IsReferenced(object, object)", span="9036-9036"];
m6_3845 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IdReferenceResolver.IsReferenced(object, object)", file="ReadTests.cs", label="PersonReference p = (PersonReference)value", span="9038-9038"];
m6_3846 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IdReferenceResolver.IsReferenced(object, object)", file="ReadTests.cs", label="return _people.ContainsKey(p.Id);", span="9040-9040"];
m6_3847 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IdReferenceResolver.IsReferenced(object, object)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IdReferenceResolver.IsReferenced(object, object)", span="9036-9036"];
m6_1912 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", span="4317-4317"];
m6_1913 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="ReadTests.cs", label="ClientMap source = new ClientMap()\r\n        {\r\n          position = new Pos() { X = 100, Y = 200 },\r\n          center = new PosDouble() { X = 251.6, Y = 361.3 }\r\n        }", span="4319-4323"];
m6_1914 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(source, new PosConverter(), new PosDoubleConverter())", span="4325-4325"];
m6_1915 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="ReadTests.cs", label="Assert.AreEqual(''{\''position\'':new Pos(100,200),\''center\'':new PosD(251.6,361.3)}'', json)", span="4326-4326"];
m6_1916 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", span="4317-4317"];
m6_2603 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.GetEnumerator()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.GetEnumerator()", span="6000-6000"];
m6_2604 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.GetEnumerator()", file="ReadTests.cs", label="throw new NotImplementedException();", span="6002-6002"];
m6_2605 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.GetEnumerator()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.GetEnumerator()", span="6000-6000"];
m6_1629 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="ReadTests.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m6_2034 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="4553-4553"];
m6_2035 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ReadTests.cs", label="writer.WriteValue(value)", span="4555-4555"];
m6_2036 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="4553-4553"];
m6_2708 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", span="6268-6268"];
m6_2709 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="ReadTests.cs", label="object o = new { p = 1 }", span="6271-6271"];
m6_2710 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="ReadTests.cs", label="var json = JObject.FromObject(o)", span="6273-6273"];
m6_2711 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="ReadTests.cs", label="var sw = new StringWriter()", span="6275-6275"];
m6_2713 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="ReadTests.cs", label="jw.WriteToken(json.CreateReader())", span="6278-6278"];
m6_2712 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="ReadTests.cs", label="var jw = new JsonTextWriter(sw)", span="6276-6276"];
m6_2715 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="ReadTests.cs", label="string result = sw.ToString()", span="6281-6281"];
m6_2714 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="ReadTests.cs", label="jw.Flush()", span="6279-6279"];
m6_2716 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="ReadTests.cs", label="Assert.AreEqual(@''{''''p'''':1}'', result)", span="6282-6282"];
m6_2717 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", span="6268-6268"];
m6_3064 [cluster="Unk.ToKnownColor", file="ReadTests.cs", label="Entry Unk.ToKnownColor", span=""];
m6_13 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExtensionDataTestClass.ExtensionDataTestClass()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExtensionDataTestClass.ExtensionDataTestClass()", span="156-156"];
m6_14 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExtensionDataTestClass.ExtensionDataTestClass()", file="ReadTests.cs", label="Ints = new List<int> { 0 }", span="158-158"];
m6_15 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExtensionDataTestClass.ExtensionDataTestClass()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExtensionDataTestClass.ExtensionDataTestClass()", span="156-156"];
m6_1917 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClientMap.ClientMap()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClientMap.ClientMap()", span="4329-4329"];
m6_546 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadOnlyCollectionSerialize()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadOnlyCollectionSerialize()", span="1217-1217"];
m6_547 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadOnlyCollectionSerialize()", file="ReadTests.cs", label="ReadOnlyCollection<int> r1 = new ReadOnlyCollection<int>(new int[] { 0, 1, 2, 3, 4 })", span="1219-1219"];
m6_548 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadOnlyCollectionSerialize()", file="ReadTests.cs", label="string jsonText = JsonConvert.SerializeObject(r1)", span="1221-1221"];
m6_551 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadOnlyCollectionSerialize()", file="ReadTests.cs", label="CollectionAssert.AreEqual(r1, r2)", span="1227-1227"];
m6_549 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadOnlyCollectionSerialize()", file="ReadTests.cs", label="Assert.AreEqual(''[0,1,2,3,4]'', jsonText)", span="1223-1223"];
m6_550 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadOnlyCollectionSerialize()", file="ReadTests.cs", label="ReadOnlyCollection<int> r2 = JsonConvert.DeserializeObject<ReadOnlyCollection<int>>(jsonText)", span="1225-1225"];
m6_552 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadOnlyCollectionSerialize()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadOnlyCollectionSerialize()", span="1217-1217"];
m6_1069 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="ReadTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m6_2229 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyClass.MyClass()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyClass.MyClass()", span="4994-4994"];
m6_2230 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyClass.MyClass()", file="ReadTests.cs", label="Prop1 = new byte[0]", span="4996-4996"];
m6_2231 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyClass.MyClass()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyClass.MyClass()", span="4994-4994"];
m6_2445 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string, int)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string, int)", span="5512-5512"];
m6_2446 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string, int)", file="ReadTests.cs", label="Value = value", span="5514-5514"];
m6_2447 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string, int)", file="ReadTests.cs", label="Age = age", span="5515-5515"];
m6_2448 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string, int)", file="ReadTests.cs", label="Constructor = ''Public Paramatized 2''", span="5516-5516"];
m6_2449 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string, int)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string, int)", span="5512-5512"];
m6_1152 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers()", span="2421-2421"];
m6_1153 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers()", span="2421-2421"];
m6_1717 [cluster="System.Runtime.Serialization.SerializationInfo.GetBoolean(string)", file="ReadTests.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetBoolean(string)", span="0-0"];
m6_320 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractWithHidden.ChildDataContractWithHidden()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractWithHidden.ChildDataContractWithHidden()", span="653-653"];
m6_1665 [cluster="System.Collections.Generic.ICollection<T>.Remove(T)", file="ReadTests.cs", label="Entry System.Collections.Generic.ICollection<T>.Remove(T)", span="0-0"];
m6_1656 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", span="3717-3717"];
m6_1657 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="ReadTests.cs", label="dictionary == null", span="3719-3719"];
m6_1659 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="ReadTests.cs", label=dictionary, span="3724-3724"];
m6_1658 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="ReadTests.cs", label="return;", span="3721-3721"];
m6_1660 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="ReadTests.cs", label="this[entry.Key] = entry.Value", span="3726-3726"];
m6_1661 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", span="3717-3717"];
m6_2286 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", span="5141-5141"];
m6_2287 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(new DerivedEvent(), Formatting.Indented)", span="5143-5143"];
m6_2288 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", file="ReadTests.cs", label="Assert.AreEqual(@''{\r\n  ''''event'''': ''''derived''''\r\n}'', json)", span="5145-5147"];
m6_2289 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", span="5141-5141"];
m6_2685 [cluster="Newtonsoft.Json.Tests.Serialization.UriGuidTimeSpanTestClass.UriGuidTimeSpanTestClass()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.UriGuidTimeSpanTestClass.UriGuidTimeSpanTestClass()", span="9542-9542"];
m6_1401 [cluster="Newtonsoft.Json.JsonConvert.PopulateObject(string, object)", file="ReadTests.cs", label="Entry Newtonsoft.Json.JsonConvert.PopulateObject(string, object)", span="870-870"];
m6_687 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", span="1456-1456"];
m6_688 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="ReadTests.cs", label="string json = ''{bar:[1,2,3], foo:'hello'}''", span="1458-1458"];
m6_689 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="ReadTests.cs", label="ClassWithArray wibble = JsonConvert.DeserializeObject<ClassWithArray>(json)", span="1459-1459"];
m6_690 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="ReadTests.cs", label="Assert.AreEqual(''hello'', wibble.Foo)", span="1460-1460"];
m6_691 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="ReadTests.cs", label="Assert.AreEqual(4, wibble.Bar.Count)", span="1462-1462"];
m6_692 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="ReadTests.cs", label="Assert.AreEqual(int.MaxValue, wibble.Bar[0])", span="1463-1463"];
m6_693 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="ReadTests.cs", label="Assert.AreEqual(1, wibble.Bar[1])", span="1464-1464"];
m6_694 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="ReadTests.cs", label="Assert.AreEqual(2, wibble.Bar[2])", span="1465-1465"];
m6_695 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="ReadTests.cs", label="Assert.AreEqual(3, wibble.Bar[3])", span="1466-1466"];
m6_696 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", span="1456-1456"];
m6_487 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", span="1050-1050"];
m6_488 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(new JsonIgnoreAttributeTestClass())", span="1052-1052"];
m6_489 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="ReadTests.cs", label="Assert.AreEqual(@''{''''Field'''':0,''''Property'''':21}'', json)", span="1054-1054"];
m6_490 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="ReadTests.cs", label="JsonIgnoreAttributeTestClass c = JsonConvert.DeserializeObject<JsonIgnoreAttributeTestClass>(@''{''''Field'''':99,''''Property'''':-1,''''IgnoredField'''':-1,''''IgnoredObject'''':[1,2,3,4,5]}'')", span="1056-1056"];
m6_491 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="ReadTests.cs", label="Assert.AreEqual(0, c.IgnoredField)", span="1058-1058"];
m6_492 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="ReadTests.cs", label="Assert.AreEqual(99, c.Field)", span="1059-1059"];
m6_493 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", span="1050-1050"];
m6_1220 [cluster="System.Uri.ToString()", file="ReadTests.cs", label="Entry System.Uri.ToString()", span="0-0"];
m6_2211 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", span="4950-4950"];
m6_2212 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="ReadTests.cs", label="double?[] d = (double?[])JsonConvert.DeserializeObject(@''[\r\n  2.4,\r\n  4.3,\r\n  null\r\n]'', typeof(double?[]))", span="4952-4956"];
m6_2213 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="ReadTests.cs", label="Assert.AreEqual(3, d.Length)", span="4958-4958"];
m6_2214 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="ReadTests.cs", label="Assert.AreEqual(2.4, d[0])", span="4959-4959"];
m6_2215 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="ReadTests.cs", label="Assert.AreEqual(4.3, d[1])", span="4960-4960"];
m6_2216 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="ReadTests.cs", label="Assert.AreEqual(null, d[2])", span="4961-4961"];
m6_2217 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", span="4950-4950"];
m6_565 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", span="1246-1246"];
m6_566 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="ReadTests.cs", label="string json = @''[''''vvv\/vvv\tvvv\''''vvv\bvvv\nvvv\rvvv\\vvv\fvvv'''']''", span="1248-1248"];
m6_567 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="ReadTests.cs", label="JavaScriptSerializer javaScriptSerializer = new JavaScriptSerializer()", span="1251-1251"];
m6_568 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="ReadTests.cs", label="List<string> javaScriptSerializerResult = javaScriptSerializer.Deserialize<List<string>>(json)", span="1252-1252"];
m6_570 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="ReadTests.cs", label="List<string> dataContractResult = (List<string>)s.ReadObject(new MemoryStream(Encoding.UTF8.GetBytes(json)))", span="1256-1256"];
m6_571 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="ReadTests.cs", label="List<string> jsonNetResult = JsonConvert.DeserializeObject<List<string>>(json)", span="1258-1258"];
m6_569 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="ReadTests.cs", label="DataContractJsonSerializer s = new DataContractJsonSerializer(typeof(List<string>))", span="1255-1255"];
m6_574 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="ReadTests.cs", label="Assert.AreEqual(javaScriptSerializerResult[0], jsonNetResult[0])", span="1263-1263"];
m6_573 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="ReadTests.cs", label="Assert.AreEqual(dataContractResult[0], jsonNetResult[0])", span="1261-1261"];
m6_572 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="ReadTests.cs", label="Assert.AreEqual(1, jsonNetResult.Count)", span="1260-1260"];
m6_575 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", span="1246-1246"];
m6_2261 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructWithAttribute.StructWithAttribute()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructWithAttribute.StructWithAttribute()", span="5050-5050"];
m6_1192 [cluster="System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", file="ReadTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", span="0-0"];
m6_2392 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructPropertyClass.NullableStructPropertyClass()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructPropertyClass.NullableStructPropertyClass()", span="5337-5337"];
m6_2925 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", file="ReadTests.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", span="648-648"];
m6_524 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", span="1188-1188"];
m6_525 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", file="ReadTests.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        @''A member with the name 'pie' already exists on 'Newtonsoft.Json.Tests.TestObjects.BadJsonPropertyClass'. Use the JsonPropertyAttribute to specify another name.'',\r\n        () =>\r\n        {\r\n          JsonConvert.SerializeObject(new BadJsonPropertyClass());\r\n        })", span="1190-1195"];
m6_526 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", span="1188-1188"];
m6_807 [cluster="Newtonsoft.Json.Tests.TestObjects.ConstructorCaseSensitivityClass.ConstructorCaseSensitivityClass(string, string, string)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ConstructorCaseSensitivityClass.ConstructorCaseSensitivityClass(string, string, string)", span="33-33"];
m6_662 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", file="ReadTests.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", span="736-736"];
m6_752 [cluster="Newtonsoft.Json.Tests.TestObjects.ClassWithGuid.ClassWithGuid()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ClassWithGuid.ClassWithGuid()", span="29-29"];
m6_3067 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="6973-6973"];
m6_3068 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReadTests.cs", label="return Enum.Parse(typeof(Color), reader.Value.ToString());", span="6975-6975"];
m6_3069 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="6973-6973"];
m6_332 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", span="772-772"];
m6_333 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="ReadTests.cs", label="BaseWithContract baseWith = new SubWithoutContractVirtualProperties\r\n      {\r\n        JustAProperty = ''JustAProperty!'',\r\n        Virtual = ''Virtual!'',\r\n        VirtualWithDataMember = ''VirtualWithDataMember!'',\r\n        WithDataMember = ''WithDataMember!''\r\n      }", span="774-780"];
m6_334 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="ReadTests.cs", label="baseWith.JustAProperty = ''JustAProperty2!''", span="782-782"];
m6_335 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="ReadTests.cs", label="baseWith.Virtual = ''Virtual2!''", span="783-783"];
m6_336 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="ReadTests.cs", label="baseWith.VirtualWithDataMember = ''VirtualWithDataMember2!''", span="784-784"];
m6_337 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="ReadTests.cs", label="baseWith.WithDataMember = ''WithDataMember2!''", span="785-785"];
m6_338 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(baseWith, Formatting.Indented)", span="787-787"];
m6_339 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="ReadTests.cs", label="Console.WriteLine(json)", span="789-789"];
m6_340 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="ReadTests.cs", label="Assert.AreEqual(@''{\r\n  ''''VirtualWithDataMemberBase'''': ''''VirtualWithDataMember2!'''',\r\n  ''''VirtualSub'''': ''''Virtual2!'''',\r\n  ''''WithDataMemberBase'''': ''''WithDataMember2!'''',\r\n  ''''JustAProperty'''': ''''JustAProperty2!''''\r\n}'', json)", span="791-796"];
m6_341 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", span="772-772"];
m6_856 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="ReadTests.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="754-754"];
m6_2031 [cluster="Newtonsoft.Json.Tests.TestObjects.Movie.Movie()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Movie.Movie()", span="30-30"];
m6_4058 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.ToDecimal(System.IFormatProvider)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Ratio.ToDecimal(System.IFormatProvider)", span="9889-9889"];
m6_4059 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.ToDecimal(System.IFormatProvider)", file="ReadTests.cs", label="return (decimal)this._numerator / this._denominator;", span="9891-9891"];
m6_4060 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.ToDecimal(System.IFormatProvider)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.Ratio.ToDecimal(System.IFormatProvider)", span="9889-9889"];
m6_2359 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base(string)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base(string)", span="5287-5287"];
m6_2360 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base(string)", file="ReadTests.cs", label="IDontWork = dontWork", span="5289-5289"];
m6_2361 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base(string)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base(string)", span="5287-5287"];
m6_312 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericItem<T>.GenericItem()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericItem<T>.GenericItem()", span="94-94"];
m6_3431 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray2D()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray2D()", span="7907-7907"];
m6_3432 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray2D()", file="ReadTests.cs", label="Array2D aa = new Array2D()", span="7909-7909"];
m6_3433 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray2D()", file="ReadTests.cs", label="aa.Before = ''Before!''", span="7910-7910"];
m6_3434 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray2D()", file="ReadTests.cs", label="aa.After = ''After!''", span="7911-7911"];
m6_3435 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray2D()", file="ReadTests.cs", label="aa.Coordinates = new[,] { { 1, 1 }, { 1, 2 }, { 2, 1 }, { 2, 2 } }", span="7912-7912"];
m6_3436 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray2D()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(aa)", span="7914-7914"];
m6_3437 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray2D()", file="ReadTests.cs", label="Assert.AreEqual(@''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1,2],[2,1],[2,2]],''''After'''':''''After!''''}'', json)", span="7916-7916"];
m6_3438 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray2D()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray2D()", span="7907-7907"];
m6_3885 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyInterfaceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyInterfaceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", span="9171-9171"];
m6_3886 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyInterfaceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", file="ReadTests.cs", label="value == null", span="9174-9174"];
m6_3888 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyInterfaceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", file="ReadTests.cs", label="return ((IMyInterface)value).Name;", span="9176-9176"];
m6_3887 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyInterfaceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", file="ReadTests.cs", label="return null;", span="9175-9175"];
m6_3889 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyInterfaceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyInterfaceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", span="9171-9171"];
m6_4010 [cluster="System.Convert.ToDouble(object)", file="ReadTests.cs", label="Entry System.Convert.ToDouble(object)", span="0-0"];
m6_2686 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", span="6214-6214"];
m6_2687 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="ReadTests.cs", label="UriGuidTimeSpanTestClass c1 = new UriGuidTimeSpanTestClass\r\n        {\r\n          Guid = new Guid(''1924129C-F7E0-40F3-9607-9939C531395A''),\r\n          NullableGuid = new Guid(''9E9F3ADF-E017-4F72-91E0-617EBE85967D''),\r\n          TimeSpan = TimeSpan.FromDays(1),\r\n          NullableTimeSpan = TimeSpan.FromHours(1),\r\n          Uri = new Uri(''http://testuri.com'')\r\n        }", span="6216-6223"];
m6_2688 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="6224-6224"];
m6_2691 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="ReadTests.cs", label="Assert.AreEqual(c1.Guid, c2.Guid)", span="6235-6235"];
m6_2692 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="ReadTests.cs", label="Assert.AreEqual(c1.NullableGuid, c2.NullableGuid)", span="6236-6236"];
m6_2693 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="ReadTests.cs", label="Assert.AreEqual(c1.TimeSpan, c2.TimeSpan)", span="6237-6237"];
m6_2694 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="ReadTests.cs", label="Assert.AreEqual(c1.NullableTimeSpan, c2.NullableTimeSpan)", span="6238-6238"];
m6_2695 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="ReadTests.cs", label="Assert.AreEqual(c1.Uri, c2.Uri)", span="6239-6239"];
m6_2689 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="ReadTests.cs", label="Assert.AreEqual(@''{\r\n  ''''Guid'''': ''''1924129c-f7e0-40f3-9607-9939c531395a'''',\r\n  ''''NullableGuid'''': ''''9e9f3adf-e017-4f72-91e0-617ebe85967d'''',\r\n  ''''TimeSpan'''': ''''1.00:00:00'''',\r\n  ''''NullableTimeSpan'''': ''''01:00:00'''',\r\n  ''''Uri'''': ''''http://testuri.com/''''\r\n}'', json)", span="6226-6232"];
m6_2690 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="ReadTests.cs", label="UriGuidTimeSpanTestClass c2 = JsonConvert.DeserializeObject<UriGuidTimeSpanTestClass>(json)", span="6234-6234"];
m6_2696 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", span="6214-6214"];
m6_1869 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB()", span="4228-4228"];
m6_1870 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB()", span="4228-4228"];
m6_3912 [cluster="Unk.CanConvertFrom", file="ReadTests.cs", label="Entry Unk.CanConvertFrom", span=""];
m6_3913 [cluster="Unk.CanConvertTo", file="ReadTests.cs", label="Entry Unk.CanConvertTo", span=""];
m6_4015 [cluster="System.Convert.ToInt32(object)", file="ReadTests.cs", label="Entry System.Convert.ToInt32(object)", span="0-0"];
m6_2095 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty.ConstructorCompexIgnoredProperty(string, int)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty.ConstructorCompexIgnoredProperty(string, int)", span="4662-4662"];
m6_2096 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty.ConstructorCompexIgnoredProperty(string, int)", file="ReadTests.cs", label="First = first", span="4664-4664"];
m6_2097 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty.ConstructorCompexIgnoredProperty(string, int)", file="ReadTests.cs", label="Second = second", span="4665-4665"];
m6_2098 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty.ConstructorCompexIgnoredProperty(string, int)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty.ConstructorCompexIgnoredProperty(string, int)", span="4662-4662"];
m6_3815 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateDefaultCtorWithIEnumerableCtorList<T>.PrivateDefaultCtorWithIEnumerableCtorList(System.Collections.Generic.IEnumerable<T>)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateDefaultCtorWithIEnumerableCtorList<T>.PrivateDefaultCtorWithIEnumerableCtorList(System.Collections.Generic.IEnumerable<T>)", span="8985-8985"];
m6_3816 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateDefaultCtorWithIEnumerableCtorList<T>.PrivateDefaultCtorWithIEnumerableCtorList(System.Collections.Generic.IEnumerable<T>)", file="ReadTests.cs", label="Add(default(T))", span="8988-8988"];
m6_3817 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateDefaultCtorWithIEnumerableCtorList<T>.PrivateDefaultCtorWithIEnumerableCtorList(System.Collections.Generic.IEnumerable<T>)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateDefaultCtorWithIEnumerableCtorList<T>.PrivateDefaultCtorWithIEnumerableCtorList(System.Collections.Generic.IEnumerable<T>)", span="8985-8985"];
m6_3909 [cluster="Unk.Distinct", file="ReadTests.cs", label="Entry Unk.Distinct", span=""];
m6_3969 [cluster="long.ToString()", file="ReadTests.cs", label="Entry long.ToString()", span="0-0"];
m6_3322 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIEnumerableFromConstructor()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIEnumerableFromConstructor()", span="7556-7556"];
m6_3323 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIEnumerableFromConstructor()", file="ReadTests.cs", label="string json = @''[\r\n  1,\r\n  2,\r\n  null\r\n]''", span="7558-7562"];
m6_3324 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIEnumerableFromConstructor()", file="ReadTests.cs", label="var result = JsonConvert.DeserializeObject<EnumerableClass<int?>>(json)", span="7564-7564"];
m6_3325 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIEnumerableFromConstructor()", file="ReadTests.cs", label="Assert.AreEqual(3, result.Count())", span="7566-7566"];
m6_3326 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIEnumerableFromConstructor()", file="ReadTests.cs", label="Assert.AreEqual(1, result.ElementAt(0))", span="7567-7567"];
m6_3327 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIEnumerableFromConstructor()", file="ReadTests.cs", label="Assert.AreEqual(2, result.ElementAt(1))", span="7568-7568"];
m6_3328 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIEnumerableFromConstructor()", file="ReadTests.cs", label="Assert.AreEqual(null, result.ElementAt(2))", span="7569-7569"];
m6_3329 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIEnumerableFromConstructor()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIEnumerableFromConstructor()", span="7556-7556"];
m6_1718 [cluster="System.Runtime.Serialization.SerializationInfo.GetByte(string)", file="ReadTests.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetByte(string)", span="0-0"];
m6_2591 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Clear()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Clear()", span="5970-5970"];
m6_2592 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Clear()", file="ReadTests.cs", label="throw new NotImplementedException();", span="5972-5972"];
m6_2593 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Clear()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Clear()", span="5970-5970"];
m6_4082 [cluster="int.ToString(System.IFormatProvider)", file="ReadTests.cs", label="Entry int.ToString(System.IFormatProvider)", span="0-0"];
m6_663 [cluster="System.IO.StringWriter.GetStringBuilder()", file="ReadTests.cs", label="Entry System.IO.StringWriter.GetStringBuilder()", span="0-0"];
m6_75 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="ReadTests.cs", label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="428-428"];
m6_2559 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", span="5888-5888"];
m6_2560 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="ReadTests.cs", label="NonDefaultConstructorWithReadOnlyCollectionProperty c1 = new NonDefaultConstructorWithReadOnlyCollectionProperty(''blah'')", span="5890-5890"];
m6_2561 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="ReadTests.cs", label="c1.Categories.Add(''one'')", span="5891-5891"];
m6_2562 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="ReadTests.cs", label="c1.Categories.Add(''two'')", span="5892-5892"];
m6_2563 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="5894-5894"];
m6_2566 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="ReadTests.cs", label="Assert.AreEqual(c1.Title, c2.Title)", span="5904-5904"];
m6_2567 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="ReadTests.cs", label="Assert.AreEqual(c1.Categories.Count, c2.Categories.Count)", span="5905-5905"];
m6_2564 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="ReadTests.cs", label="Assert.AreEqual(@''{\r\n  ''''Title'''': ''''blah'''',\r\n  ''''Categories'''': [\r\n    ''''one'''',\r\n    ''''two''''\r\n  ]\r\n}'', json)", span="5895-5901"];
m6_2565 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="ReadTests.cs", label="NonDefaultConstructorWithReadOnlyCollectionProperty c2 = JsonConvert.DeserializeObject<NonDefaultConstructorWithReadOnlyCollectionProperty>(json)", span="5903-5903"];
m6_2568 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="ReadTests.cs", label="Assert.AreEqual(''one'', c2.Categories[0])", span="5906-5906"];
m6_2569 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="ReadTests.cs", label="Assert.AreEqual(''two'', c2.Categories[1])", span="5907-5907"];
m6_2570 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", span="5888-5888"];
m6_2664 [cluster="System.Exception.ToString()", file="ReadTests.cs", label="Entry System.Exception.ToString()", span="0-0"];
m6_1171 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", span="2474-2474"];
m6_1172 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="ReadTests.cs", label="string json = @''{\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Dictionary'''': {\r\n    ''''Item'''': 11\r\n  }\r\n}''", span="2476-2481"];
m6_1173 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="ReadTests.cs", label="DictionaryInterfaceClass c = JsonConvert.DeserializeObject<DictionaryInterfaceClass>(\r\n        json,\r\n        new JsonSerializerSettings { ObjectCreationHandling = ObjectCreationHandling.Replace })", span="2483-2485"];
m6_1174 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="ReadTests.cs", label="Assert.AreEqual(''Name!'', c.Name)", span="2487-2487"];
m6_1175 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="ReadTests.cs", label="Assert.AreEqual(1, c.Dictionary.Count)", span="2488-2488"];
m6_1176 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="ReadTests.cs", label="Assert.AreEqual(11, c.Dictionary[''Item''])", span="2489-2489"];
m6_1177 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", span="2474-2474"];
m6_1311 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", span="2829-2829"];
m6_1312 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="ReadTests.cs", label="string json = @''{'SetOnlyProperty':[1,2,3,4,5]}''", span="2831-2831"];
m6_1313 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="ReadTests.cs", label="SetOnlyPropertyClass2 setOnly = JsonConvert.DeserializeObject<SetOnlyPropertyClass2>(json)", span="2833-2833"];
m6_1314 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="ReadTests.cs", label="JArray a = (JArray)setOnly.GetValue()", span="2834-2834"];
m6_1315 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="ReadTests.cs", label="Assert.AreEqual(5, a.Count)", span="2835-2835"];
m6_1316 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="ReadTests.cs", label="Assert.AreEqual(1, (int)a[0])", span="2836-2836"];
m6_1317 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="ReadTests.cs", label="Assert.AreEqual(5, (int)a[a.Count - 1])", span="2837-2837"];
m6_1318 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", span="2829-2829"];
m6_1928 [cluster="string.Format(string, object, object)", file="ReadTests.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m6_3852 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", span="9052-9052"];
m6_3853 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="ReadTests.cs", label="PersonReference john = new PersonReference\r\n        {\r\n          Id = new Guid(''0B64FFDF-D155-44AD-9689-58D9ADB137F3''),\r\n          Name = ''John Smith''\r\n        }", span="9054-9058"];
m6_3854 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="ReadTests.cs", label="PersonReference jane = new PersonReference\r\n        {\r\n          Id = new Guid(''AE3C399C-058D-431D-91B0-A36C266441B9''),\r\n          Name = ''Jane Smith''\r\n        }", span="9060-9064"];
m6_3855 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="ReadTests.cs", label="john.Spouse = jane", span="9066-9066"];
m6_3856 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="ReadTests.cs", label="jane.Spouse = john", span="9067-9067"];
m6_3857 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="ReadTests.cs", label="IList<PersonReference> people = new List<PersonReference>\r\n        {\r\n          john,\r\n          jane\r\n        }", span="9069-9073"];
m6_3858 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(people, new JsonSerializerSettings\r\n        {\r\n          ReferenceResolver = new IdReferenceResolver(),\r\n          PreserveReferencesHandling = PreserveReferencesHandling.Objects,\r\n          Formatting = Formatting.Indented\r\n        })", span="9075-9080"];
m6_3859 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="ReadTests.cs", label="Assert.AreEqual(@''[\r\n  {\r\n    ''''$id'''': ''''0b64ffdf-d155-44ad-9689-58d9adb137f3'''',\r\n    ''''Name'''': ''''John Smith'''',\r\n    ''''Spouse'''': {\r\n      ''''$id'''': ''''ae3c399c-058d-431d-91b0-a36c266441b9'''',\r\n      ''''Name'''': ''''Jane Smith'''',\r\n      ''''Spouse'''': {\r\n        ''''$ref'''': ''''0b64ffdf-d155-44ad-9689-58d9adb137f3''''\r\n      }\r\n    }\r\n  },\r\n  {\r\n    ''''$ref'''': ''''ae3c399c-058d-431d-91b0-a36c266441b9''''\r\n  }\r\n]'', json)", span="9082-9097"];
m6_3860 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", span="9052-9052"];
m6_1599 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", span="3567-3567"];
m6_1600 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="ReadTests.cs", label="var json = ''{ Key: 'abc', Value: 123 }''", span="3569-3569"];
m6_1601 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="ReadTests.cs", label="var item = JsonConvert.DeserializeObject<TestClass>(json)", span="3570-3570"];
m6_1602 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="ReadTests.cs", label="Assert.AreEqual(123L, item.Value)", span="3572-3572"];
m6_1603 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", span="3567-3567"];
m6_3692 [cluster="System.Collections.Generic.HashSet<T>.HashSet(System.Collections.Generic.IEnumerable<T>)", file="ReadTests.cs", label="Entry System.Collections.Generic.HashSet<T>.HashSet(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m6_1402 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", span="3006-3006"];
m6_1403 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", file="ReadTests.cs", label="string json = @''{}''", span="3008-3008"];
m6_1404 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", file="ReadTests.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        @''Cannot populate JSON object onto type 'System.Collections.Generic.List`1[Newtonsoft.Json.Tests.TestObjects.Person]'. Path '', line 1, position 2.'',\r\n        () =>\r\n        {\r\n          JsonConvert.PopulateObject(json, new List<Person>());\r\n        })", span="3010-3015"];
m6_1405 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", span="3006-3006"];
m6_2817 [cluster="System.Globalization.CultureInfo.CreateSpecificCulture(string)", file="ReadTests.cs", label="Entry System.Globalization.CultureInfo.CreateSpecificCulture(string)", span="0-0"];
m6_4029 [cluster="string.Split(params char[])", file="ReadTests.cs", label="Entry string.Split(params char[])", span="0-0"];
m6_3549 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIncomplete3DArray()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIncomplete3DArray()", span="8188-8188"];
m6_3550 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIncomplete3DArray()", file="ReadTests.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[/*hi*/[/*hi*/[1/*hi*/,/*hi*/1/*hi*/,1]/*hi*/,/*hi*/[1,1''", span="8190-8190"];
m6_3551 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIncomplete3DArray()", file="ReadTests.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''Unexpected end when deserializing array. Path 'Coordinates[0][1][1]', line 1, position 90.'',\r\n        () => JsonConvert.DeserializeObject<Array3D>(json))", span="8192-8194"];
m6_3552 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIncomplete3DArray()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIncomplete3DArray()", span="8188-8188"];
m6_3948 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConsoleWriter.ConsoleWriter()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConsoleWriter.ConsoleWriter()", span="9181-9181"];
m6_3609 [cluster="System.DateTimeOffset.ToString(System.IFormatProvider)", file="ReadTests.cs", label="Entry System.DateTimeOffset.ToString(System.IFormatProvider)", span="0-0"];
m6_544 [cluster="Newtonsoft.Json.Tests.TestObjects.ArticleCollection.ArticleCollection()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ArticleCollection.ArticleCollection()", span="29-29"];
m6_1604 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", span="3600-3600"];
m6_1605 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="ReadTests.cs", label="Exception ex = new Exception(''Blah blah blah'')", span="3602-3602"];
m6_1606 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="ReadTests.cs", label="DataContractJsonSerializerTestClass c = new DataContractJsonSerializerTestClass()", span="3604-3604"];
m6_1610 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="ReadTests.cs", label="c.ExceptionProperty = ex", span="3608-3608"];
m6_1607 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="ReadTests.cs", label="c.TimeSpanProperty = new TimeSpan(200, 20, 59, 30, 900)", span="3605-3605"];
m6_1608 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="ReadTests.cs", label="c.GuidProperty = new Guid(''66143115-BE2A-4a59-AF0A-348E1EA15B1E'')", span="3606-3606"];
m6_1609 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="ReadTests.cs", label="c.AnimalProperty = new Human() { Ethnicity = ''European'' }", span="3607-3607"];
m6_1613 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="ReadTests.cs", label="serializer.WriteObject(ms, c)", span="3614-3614"];
m6_1611 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="ReadTests.cs", label="MemoryStream ms = new MemoryStream()", span="3610-3610"];
m6_1612 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="ReadTests.cs", label="DataContractJsonSerializer serializer = new DataContractJsonSerializer(\r\n        typeof(DataContractJsonSerializerTestClass),\r\n        new Type[] { typeof(Human) })", span="3611-3613"];
m6_1614 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="ReadTests.cs", label="byte[] jsonBytes = ms.ToArray()", span="3616-3616"];
m6_1615 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="ReadTests.cs", label="string json = Encoding.UTF8.GetString(jsonBytes, 0, jsonBytes.Length)", span="3617-3617"];
m6_1616 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", span="3600-3600"];
m6_423 [cluster="System.DateTime.DateTime(int, int, int)", file="ReadTests.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m6_2648 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedType.DerivedType()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedType.DerivedType()", span="6109-6109"];
m6_3312 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass<T>.EnumerableClass(System.Collections.Generic.IEnumerable<T>)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass<T>.EnumerableClass(System.Collections.Generic.IEnumerable<T>)", span="7539-7539"];
m6_3313 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass<T>.EnumerableClass(System.Collections.Generic.IEnumerable<T>)", file="ReadTests.cs", label="_values = new List<T>(values)", span="7541-7541"];
m6_3314 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass<T>.EnumerableClass(System.Collections.Generic.IEnumerable<T>)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass<T>.EnumerableClass(System.Collections.Generic.IEnumerable<T>)", span="7539-7539"];
m6_462 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", span="1005-1005"];
m6_463 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="ReadTests.cs", label="string value = @''{''''Name'''':''''Orange'''', ''''Price'''':3.99, ''''ExpiryDate'''':''''01/24/2010 12:00:00''''}''", span="1007-1007"];
m6_464 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="ReadTests.cs", label="Hashtable p = JsonConvert.DeserializeObject(value, typeof(Hashtable)) as Hashtable", span="1009-1009"];
m6_465 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="ReadTests.cs", label="Assert.AreEqual(''Orange'', p[''Name''].ToString())", span="1011-1011"];
m6_466 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", span="1005-1005"];
m6_1483 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", span="3183-3183"];
m6_1484 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="ReadTests.cs", label="Dictionary<Guid, int> dictionary = new Dictionary<Guid, int>()", span="3185-3185"];
m6_1485 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="ReadTests.cs", label="dictionary.Add(new Guid(''F60EAEE0-AE47-488E-B330-59527B742D77''), 1)", span="3186-3186"];
m6_1486 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="ReadTests.cs", label="dictionary.Add(new Guid(''C2594C02-EBA1-426A-AA87-8DD8871350B0''), 2)", span="3187-3187"];
m6_1487 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(dictionary, Formatting.Indented)", span="3189-3189"];
m6_1488 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="ReadTests.cs", label="Assert.AreEqual(@''{\r\n  ''''f60eaee0-ae47-488e-b330-59527b742d77'''': 1,\r\n  ''''c2594c02-eba1-426a-aa87-8dd8871350b0'''': 2\r\n}'', json)", span="3190-3193"];
m6_1489 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", span="3183-3183"];
m6_3420 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyCollections()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyCollections()", span="7857-7857"];
m6_3421 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyCollections()", file="ReadTests.cs", label="string json = @''{\r\n  ''''NonReadOnlyList'''': [\r\n    11\r\n  ],\r\n  ''''NonReadOnlyDictionary'''': {\r\n    ''''first'''': 12\r\n  },\r\n  ''''Array'''': [\r\n    13\r\n  ],\r\n  ''''List'''': [\r\n    14\r\n  ],\r\n  ''''Dictionary'''': {\r\n    ''''first'''': 15\r\n  },\r\n  ''''IReadOnlyCollection'''': [\r\n    16\r\n  ],\r\n  ''''ReadOnlyCollection'''': [\r\n    17\r\n  ],\r\n  ''''IReadOnlyList'''': [\r\n    18\r\n  ],\r\n  ''''IReadOnlyDictionary'''': {\r\n    ''''first'''': 19\r\n  },\r\n  ''''ReadOnlyDictionary'''': {\r\n    ''''first'''': 20\r\n  }\r\n}''", span="7859-7890"];
m6_3422 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyCollections()", file="ReadTests.cs", label="var c2 = JsonConvert.DeserializeObject<PopulateReadOnlyTestClass>(json)", span="7892-7892"];
m6_3423 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyCollections()", file="ReadTests.cs", label="Assert.AreEqual(1, c2.NonReadOnlyDictionary.Count)", span="7894-7894"];
m6_3424 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyCollections()", file="ReadTests.cs", label="Assert.AreEqual(12, c2.NonReadOnlyDictionary[''first''])", span="7895-7895"];
m6_3425 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyCollections()", file="ReadTests.cs", label="Assert.AreEqual(2, c2.NonReadOnlyList.Count)", span="7897-7897"];
m6_3426 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyCollections()", file="ReadTests.cs", label="Assert.AreEqual(1, c2.NonReadOnlyList[0])", span="7898-7898"];
m6_3427 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyCollections()", file="ReadTests.cs", label="Assert.AreEqual(11, c2.NonReadOnlyList[1])", span="7899-7899"];
m6_3428 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyCollections()", file="ReadTests.cs", label="Assert.AreEqual(1, c2.Array.Count)", span="7901-7901"];
m6_3429 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyCollections()", file="ReadTests.cs", label="Assert.AreEqual(13, c2.Array[0])", span="7902-7902"];
m6_3430 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyCollections()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyCollections()", span="7857-7857"];
m6_2318 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", span="5198-5198"];
m6_2319 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", file="ReadTests.cs", label="decimal? d = JsonConvert.DeserializeObject<decimal?>(''123456789876543.21'')", span="5200-5200"];
m6_2320 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", file="ReadTests.cs", label="Assert.AreEqual(123456789876543.21m, d)", span="5201-5201"];
m6_2321 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", span="5198-5198"];
m6_3708 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", span="8724-8724"];
m6_3709 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="ReadTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(''1234567890.123456''))", span="8726-8726"];
m6_3710 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="ReadTests.cs", label="var settings = new JsonSerializerSettings()", span="8727-8727"];
m6_3712 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="ReadTests.cs", label="decimal? d = serialiser.Deserialize<decimal?>(reader)", span="8729-8729"];
m6_3711 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="ReadTests.cs", label="var serialiser = JsonSerializer.Create(settings)", span="8728-8728"];
m6_3713 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="ReadTests.cs", label="Assert.AreEqual(1234567890.123456m, d)", span="8731-8731"];
m6_3714 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", span="8724-8724"];
m6_3771 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="ReadTests.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m6_1934 [cluster="System.NotImplementedException.NotImplementedException()", file="ReadTests.cs", label="Entry System.NotImplementedException.NotImplementedException()", span="0-0"];
m6_3788 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyCollection<T>.CustomReadOnlyCollection(System.Collections.Generic.IList<T>)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyCollection<T>.CustomReadOnlyCollection(System.Collections.Generic.IList<T>)", span="8914-8914"];
m6_3789 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyCollection<T>.CustomReadOnlyCollection(System.Collections.Generic.IList<T>)", file="ReadTests.cs", label="_values = values", span="8916-8916"];
m6_3790 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyCollection<T>.CustomReadOnlyCollection(System.Collections.Generic.IList<T>)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyCollection<T>.CustomReadOnlyCollection(System.Collections.Generic.IList<T>)", span="8914-8914"];
m6_3884 [cluster="Unk.FirstOrDefault", file="ReadTests.cs", label="Entry Unk.FirstOrDefault", span=""];
m6_259 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePublicExtensionData()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePublicExtensionData()", span="548-548"];
m6_260 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePublicExtensionData()", file="ReadTests.cs", label="string json = @''{\r\n  'Name':'Name!',\r\n  'NoMatch':'NoMatch!',\r\n  'ExtensionData':{'HAI':true}\r\n}''", span="550-554"];
m6_261 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePublicExtensionData()", file="ReadTests.cs", label="var c = JsonConvert.DeserializeObject<PublicExtensionDataAttributeTestClass>(json)", span="556-556"];
m6_262 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePublicExtensionData()", file="ReadTests.cs", label="Assert.AreEqual(''Name!'', c.Name)", span="558-558"];
m6_263 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePublicExtensionData()", file="ReadTests.cs", label="Assert.AreEqual(2, c.ExtensionData.Count)", span="559-559"];
m6_264 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePublicExtensionData()", file="ReadTests.cs", label="Assert.AreEqual(''NoMatch!'', (string)(JValue)c.ExtensionData[''NoMatch''])", span="561-561"];
m6_265 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePublicExtensionData()", file="ReadTests.cs", label="var o = (JObject)c.ExtensionData[''ExtensionData'']", span="565-565"];
m6_266 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePublicExtensionData()", file="ReadTests.cs", label="Assert.AreEqual(1, o.Count)", span="566-566"];
m6_267 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePublicExtensionData()", file="ReadTests.cs", label="Assert.IsTrue(JToken.DeepEquals(new JObject { { ''HAI'', true } }, o))", span="567-567"];
m6_268 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePublicExtensionData()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePublicExtensionData()", span="548-548"];
m6_3765 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.CustomReadOnlyDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.CustomReadOnlyDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="8846-8846"];
m6_3766 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.CustomReadOnlyDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="ReadTests.cs", label="_dictionary = dictionary", span="8848-8848"];
m6_3767 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.CustomReadOnlyDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.CustomReadOnlyDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="8846-8846"];
m6_1752 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, byte)", file="ReadTests.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, byte)", span="0-0"];
m6_2218 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", span="4966-4966"];
m6_2219 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="ReadTests.cs", label="string jsonText = JsonConvert.SerializeObject(new HashSet<string>()\r\n        {\r\n          ''One'',\r\n          ''2'',\r\n          ''III''\r\n        }, Formatting.Indented)", span="4968-4973"];
m6_2220 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="ReadTests.cs", label="Assert.AreEqual(@''[\r\n  ''''One'''',\r\n  ''''2'''',\r\n  ''''III''''\r\n]'', jsonText)", span="4975-4979"];
m6_2221 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="ReadTests.cs", label="HashSet<string> d = JsonConvert.DeserializeObject<HashSet<string>>(jsonText)", span="4981-4981"];
m6_2222 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="ReadTests.cs", label="Assert.AreEqual(3, d.Count)", span="4983-4983"];
m6_2223 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="ReadTests.cs", label="Assert.IsTrue(d.Contains(''One''))", span="4984-4984"];
m6_2224 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="ReadTests.cs", label="Assert.IsTrue(d.Contains(''2''))", span="4985-4985"];
m6_2225 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="ReadTests.cs", label="Assert.IsTrue(d.Contains(''III''))", span="4986-4986"];
m6_2226 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", span="4966-4966"];
m6_607 [cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", file="ReadTests.cs", label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", span="0-0"];
m6_3911 [cluster="System.Activator.CreateInstance(System.Type)", file="ReadTests.cs", label="Entry System.Activator.CreateInstance(System.Type)", span="0-0"];
m6_649 [cluster="Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T, Newtonsoft.Json.JsonSerializerSettings)", file="ReadTests.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T, Newtonsoft.Json.JsonSerializerSettings)", span="727-727"];
m6_510 [cluster="Newtonsoft.Json.Linq.JContainer.Children()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Linq.JContainer.Children()", span="248-248"];
m6_4099 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.ToString(string, System.IFormatProvider)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Ratio.ToString(string, System.IFormatProvider)", span="9964-9964"];
m6_4100 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.ToString(string, System.IFormatProvider)", file="ReadTests.cs", label="return ToString(CultureInfo.InvariantCulture);", span="9966-9966"];
m6_4101 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.ToString(string, System.IFormatProvider)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.Ratio.ToString(string, System.IFormatProvider)", span="9964-9964"];
m6_1212 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", span="2579-2579"];
m6_1213 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="ReadTests.cs", label="Uri uri = new Uri(''http://codeplex.com'')", span="2581-2581"];
m6_1214 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(uri)", span="2582-2582"];
m6_1215 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="ReadTests.cs", label="Assert.AreEqual(''http://codeplex.com/'', uri.ToString())", span="2584-2584"];
m6_1217 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="ReadTests.cs", label="Assert.AreEqual(uri, newUri)", span="2587-2587"];
m6_1216 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="ReadTests.cs", label="Uri newUri = JsonConvert.DeserializeObject<Uri>(json)", span="2586-2586"];
m6_1218 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", span="2579-2579"];
m6_2052 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", span="4587-4587"];
m6_2053 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="ReadTests.cs", label="var reference = new Dictionary<string, object>()", span="4591-4591"];
m6_2054 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="ReadTests.cs", label="reference.Add(''$ref'', ''Persons'')", span="4592-4592"];
m6_2055 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="ReadTests.cs", label="reference.Add(''$id'', 1)", span="4593-4593"];
m6_2059 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="ReadTests.cs", label="child.Add(''Father'', reference)", span="4598-4598"];
m6_2056 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="ReadTests.cs", label="var child = new Dictionary<string, object>()", span="4595-4595"];
m6_2057 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="ReadTests.cs", label="child.Add(''_id'', 2)", span="4596-4596"];
m6_2058 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="ReadTests.cs", label="child.Add(''Name'', ''Isabell'')", span="4597-4597"];
m6_2060 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="ReadTests.cs", label="var json = JsonConvert.SerializeObject(child, Formatting.Indented)", span="4600-4600"];
m6_2061 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="ReadTests.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''Additional content found in JSON reference object. A JSON reference object should only have a $ref property. Path 'Father.$id', line 6, position 11.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<Dictionary<string, object>>(json);\r\n        })", span="4602-4607"];
m6_2062 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", span="4587-4587"];
m6_3149 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", span="7110-7110"];
m6_3150 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="ReadTests.cs", label="PropertyItemConverter c = new PropertyItemConverter\r\n        {\r\n          Data = new[]\r\n            {\r\n              ''one'',\r\n              ''two'',\r\n              ''three''\r\n            }\r\n        }", span="7112-7120"];
m6_3151 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(c)", span="7122-7122"];
m6_3152 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="ReadTests.cs", label="Assert.AreEqual(@''{''''Data'''':['''':::ONE:::'''','''':::TWO:::'''','''':::THREE:::'''']}'', json)", span="7124-7124"];
m6_3153 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", span="7110-7110"];
m6_2850 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", span="6505-6505"];
m6_2851 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", file="ReadTests.cs", label="string json = @''[\r\n  1,\r\n  2,\r\n  3,\r\n  null\r\n]''", span="6507-6512"];
m6_2852 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", file="ReadTests.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''Error converting value {null} to type 'System.Int32'. Path '[3]', line 5, position 7.'',\r\n        () =>\r\n        {\r\n          List<int> numbers = JsonConvert.DeserializeObject<List<int>>(json);\r\n        })", span="6514-6519"];
m6_2853 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", span="6505-6505"];
m6_2169 [cluster="Newtonsoft.Json.Tests.Serialization.SpecifiedTestClass.SpecifiedTestClass()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SpecifiedTestClass.SpecifiedTestClass()", span="9755-9755"];
m6_3318 [cluster="System.Collections.Generic.IEnumerable<T>.GetEnumerator()", file="ReadTests.cs", label="Entry System.Collections.Generic.IEnumerable<T>.GetEnumerator()", span="0-0"];
m6_944 [cluster="Newtonsoft.Json.Tests.TestObjects.UserNullable.UserNullable()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.UserNullable.UserNullable()", span="29-29"];
m6_1034 [cluster="Newtonsoft.Json.Tests.TestObjects.InterfacePropertyTestClass.InterfacePropertyTestClass()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.InterfacePropertyTestClass.InterfacePropertyTestClass()", span="46-46"];
m6_3861 [cluster="Newtonsoft.Json.Tests.Serialization.PersonReference.PersonReference()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.PersonReference.PersonReference()", span="9312-9312"];
m6_4132 [cluster="int.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out int)", file="ReadTests.cs", label="Entry int.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out int)", span="0-0"];
m6_3848 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IdReferenceResolver.AddReference(object, string, object)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IdReferenceResolver.AddReference(object, string, object)", span="9043-9043"];
m6_3849 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IdReferenceResolver.AddReference(object, string, object)", file="ReadTests.cs", label="Guid id = new Guid(reference)", span="9045-9045"];
m6_3850 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IdReferenceResolver.AddReference(object, string, object)", file="ReadTests.cs", label="_people[id] = (PersonReference)value", span="9047-9047"];
m6_3851 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IdReferenceResolver.AddReference(object, string, object)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IdReferenceResolver.AddReference(object, string, object)", span="9043-9043"];
m6_3970 [cluster="Newtonsoft.Json.Tests.Serialization.WidgetIdJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.WidgetIdJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="9471-9471"];
m6_3971 [cluster="Newtonsoft.Json.Tests.Serialization.WidgetIdJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReadTests.cs", label="reader.TokenType == JsonToken.Null", span="9473-9473"];
m6_3973 [cluster="Newtonsoft.Json.Tests.Serialization.WidgetIdJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReadTests.cs", label="return new WidgetId1 { Value = int.Parse(reader.Value.ToString()) };", span="9475-9475"];
m6_3972 [cluster="Newtonsoft.Json.Tests.Serialization.WidgetIdJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReadTests.cs", label="return null;", span="9474-9474"];
m6_3974 [cluster="Newtonsoft.Json.Tests.Serialization.WidgetIdJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.WidgetIdJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="9471-9471"];
m6_527 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(string, System.Action)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(string, System.Action)", span="176-176"];
m6_3684 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", span="8663-8663"];
m6_3685 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="ReadTests.cs", label="ISet<string> s1 = new HashSet<string>(new[] {''1'', ''two'', ''III''})", span="8665-8665"];
m6_3686 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(s1)", span="8667-8667"];
m6_3688 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="ReadTests.cs", label="Assert.AreEqual(s1.Count, s2.Count)", span="8671-8671"];
m6_3689 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="ReadTests.cs", label=s1, span="8672-8672"];
m6_3687 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="ReadTests.cs", label="ISet<string> s2 = JsonConvert.DeserializeObject<ISet<string>>(json)", span="8669-8669"];
m6_3690 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="ReadTests.cs", label="Assert.IsTrue(s2.Contains(s))", span="8674-8674"];
m6_3691 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", span="8663-8663"];
m6_1598 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.B.B()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.B.B()", span="3529-3529"];
m6_608 [cluster="System.TimeSpan.FromHours(double)", file="ReadTests.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m6_495 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", span="1063-1063"];
m6_496 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="ReadTests.cs", label="string json = @''{\r\n    results:\r\n        [\r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://www.google.com/'''',\r\n                url : ''''http://www.google.com/'''',\r\n                visibleUrl : ''''www.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:zhool8dxBV4J:www.google.com'''',\r\n                title : ''''Google'''',\r\n                titleNoFormatting : ''''Google'''',\r\n                content : ''''Enables users to search the Web, Usenet, and \r\nimages. Features include PageRank,   caching and translation of \r\nresults, and an option to find similar pages.''''\r\n            },\r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://news.google.com/'''',\r\n                url : ''''http://news.google.com/'''',\r\n                visibleUrl : ''''news.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:Va_XShOz_twJ:news.google.com'''',\r\n                title : ''''Google News'''',\r\n                titleNoFormatting : ''''Google News'''',\r\n                content : ''''Aggregated headlines and a search engine of many of the world's news sources.''''\r\n            },\r\n            \r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://groups.google.com/'''',\r\n                url : ''''http://groups.google.com/'''',\r\n                visibleUrl : ''''groups.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:x2uPD3hfkn0J:groups.google.com'''',\r\n                title : ''''Google Groups'''',\r\n                titleNoFormatting : ''''Google Groups'''',\r\n                content : ''''Enables users to search and browse the Usenet \r\narchives which consist of over 700   million messages, and post new \r\ncomments.''''\r\n            },\r\n            \r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://maps.google.com/'''',\r\n                url : ''''http://maps.google.com/'''',\r\n                visibleUrl : ''''maps.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:dkf5u2twBXIJ:maps.google.com'''',\r\n                title : ''''Google Maps'''',\r\n                titleNoFormatting : ''''Google Maps'''',\r\n                content : ''''Provides directions, interactive maps, and \r\nsatellite/aerial imagery of the United   States. Can also search by \r\nkeyword such as type of business.''''\r\n            }\r\n        ],\r\n        \r\n    adResults:\r\n        [\r\n            {\r\n                GsearchResultClass:''''GwebSearch.ad'''',\r\n                title : ''''Gartner Symposium/ITxpo'''',\r\n                content1 : ''''Meet brilliant Gartner IT analysts'''',\r\n                content2 : ''''20-23 May 2007- Barcelona, Spain'''',\r\n                url : \r\n''''http://www.google.com/url?sa=L&ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB&num=1&q=http://www.gartner.com/it/sym/2007/spr8/spr8.jsp%3Fsrc%3D_spain_07_%26WT.srch%3D1&usg=__CxRH06E4Xvm9Muq13S4MgMtnziY='''', \r\n\r\n                impressionUrl : \r\n''''http://www.google.com/uds/css/ad-indicator-on.gif?ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB'''', \r\n\r\n                unescapedUrl : \r\n''''http://www.google.com/url?sa=L&ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB&num=1&q=http://www.gartner.com/it/sym/2007/spr8/spr8.jsp%3Fsrc%3D_spain_07_%26WT.srch%3D1&usg=__CxRH06E4Xvm9Muq13S4MgMtnziY='''', \r\n\r\n                visibleUrl : ''''www.gartner.com''''\r\n            }\r\n        ]\r\n}\r\n''", span="1065-1142"];
m6_497 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="ReadTests.cs", label="object o = JsonConvert.DeserializeObject(json)", span="1143-1143"];
m6_498 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="ReadTests.cs", label="string s = string.Empty", span="1144-1144"];
m6_499 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="ReadTests.cs", label="s += s", span="1145-1145"];
m6_500 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", span="1063-1063"];
m6_1935 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.CanConvert(System.Type)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.CanConvert(System.Type)", span="4364-4364"];
m6_1936 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.CanConvert(System.Type)", file="ReadTests.cs", label="return objectType.IsAssignableFrom(typeof(Pos));", span="4366-4366"];
m6_1937 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.CanConvert(System.Type)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.CanConvert(System.Type)", span="4364-4364"];
m6_1281 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericList()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericList()", span="2721-2721"];
m6_1282 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericList()", file="ReadTests.cs", label="Product p1 = new Product\r\n        {\r\n          Name = ''Product 1'',\r\n          Price = 99.95m,\r\n          ExpiryDate = new DateTime(2000, 12, 29, 0, 0, 0, DateTimeKind.Utc),\r\n        }", span="2723-2728"];
m6_1283 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericList()", file="ReadTests.cs", label="Product p2 = new Product\r\n        {\r\n          Name = ''Product 2'',\r\n          Price = 12.50m,\r\n          ExpiryDate = new DateTime(2009, 7, 31, 0, 0, 0, DateTimeKind.Utc),\r\n        }", span="2729-2734"];
m6_1285 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericList()", file="ReadTests.cs", label="products.Add(p1)", span="2737-2737"];
m6_1284 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericList()", file="ReadTests.cs", label="List<Product> products = new List<Product>()", span="2736-2736"];
m6_1286 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericList()", file="ReadTests.cs", label="products.Add(p2)", span="2738-2738"];
m6_1287 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericList()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(products, Formatting.Indented)", span="2740-2740"];
m6_1288 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericList()", file="ReadTests.cs", label="Assert.AreEqual(@''[\r\n  {\r\n    ''''Name'''': ''''Product 1'''',\r\n    ''''ExpiryDate'''': ''''2000-12-29T00:00:00Z'''',\r\n    ''''Price'''': 99.95,\r\n    ''''Sizes'''': null\r\n  },\r\n  {\r\n    ''''Name'''': ''''Product 2'''',\r\n    ''''ExpiryDate'''': ''''2009-07-31T00:00:00Z'''',\r\n    ''''Price'''': 12.50,\r\n    ''''Sizes'''': null\r\n  }\r\n]'', json)", span="2756-2769"];
m6_1289 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericList()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericList()", span="2721-2721"];
m6_2269 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeZoneOffsetObject.TimeZoneOffsetObject()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeZoneOffsetObject.TimeZoneOffsetObject()", span="5077-5077"];
m6_2936 [cluster="Newtonsoft.Json.Tests.Serialization.WithEnums.WithEnums()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.WithEnums.WithEnums()", span="9487-9487"];
m6_3065 [cluster="Unk.ToUpper", file="ReadTests.cs", label="Entry Unk.ToUpper", span=""];
m6_3965 [cluster="Newtonsoft.Json.Tests.Serialization.WidgetIdJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.WidgetIdJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="9465-9465"];
m6_3966 [cluster="Newtonsoft.Json.Tests.Serialization.WidgetIdJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ReadTests.cs", label="WidgetId1 id = (WidgetId1)value", span="9467-9467"];
m6_3967 [cluster="Newtonsoft.Json.Tests.Serialization.WidgetIdJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ReadTests.cs", label="writer.WriteValue(id.Value.ToString())", span="9468-9468"];
m6_3968 [cluster="Newtonsoft.Json.Tests.Serialization.WidgetIdJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.WidgetIdJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="9465-9465"];
m6_4073 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.ToSByte(System.IFormatProvider)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Ratio.ToSByte(System.IFormatProvider)", span="9916-9916"];
m6_4074 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.ToSByte(System.IFormatProvider)", file="ReadTests.cs", label="return (sbyte)(this._numerator / this._denominator);", span="9918-9918"];
m6_4075 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.ToSByte(System.IFormatProvider)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.Ratio.ToSByte(System.IFormatProvider)", span="9916-9916"];
m6_1568 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", span="3470-3470"];
m6_1569 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="ReadTests.cs", label="JRawValueTestObject deserialized = JsonConvert.DeserializeObject<JRawValueTestObject>(''{value:3}'')", span="3472-3472"];
m6_1570 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="ReadTests.cs", label="Assert.AreEqual(''3'', deserialized.Value.ToString())", span="3473-3473"];
m6_1571 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="ReadTests.cs", label="deserialized = JsonConvert.DeserializeObject<JRawValueTestObject>(''{value:'3'}'')", span="3475-3475"];
m6_1572 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="ReadTests.cs", label="Assert.AreEqual(@''''''3'''''', deserialized.Value.ToString())", span="3476-3476"];
m6_1573 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", span="3470-3470"];
m6_2735 [cluster="Newtonsoft.Json.Tests.Serialization.GameObject.GameObject()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.GameObject.GameObject()", span="9573-9573"];
m6_3981 [cluster="Newtonsoft.Json.Tests.Serialization.GameObject.GameObject()", file="ReadTests.cs", label="Components = new ConcurrentDictionary<string, Component>()", span="9575-9575"];
m6_3982 [cluster="Newtonsoft.Json.Tests.Serialization.GameObject.GameObject()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.GameObject.GameObject()", span="9573-9573"];
m6_3879 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyInterfaceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyInterfaceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", span="9163-9163"];
m6_3880 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyInterfaceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", file="ReadTests.cs", label="value == null", span="9165-9165"];
m6_3882 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyInterfaceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", file="ReadTests.cs", label="return (from w in _writers where w.Name == value.ToString() select w).FirstOrDefault();", span="9168-9168"];
m6_3881 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyInterfaceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", file="ReadTests.cs", label="return null;", span="9166-9166"];
m6_3883 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyInterfaceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyInterfaceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", span="9163-9163"];
m6_3667 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", span="8604-8604"];
m6_3668 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="ReadTests.cs", label="IDictionary<string, object> dates = new Dictionary<string, object>\r\n        {\r\n          {''DateTime-Unspecified'', new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Unspecified)},\r\n          {''DateTime-Utc'', new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc)},\r\n          {''DateTime-Local'', new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Local)},\r\n          {''DateTimeOffset-Zero'', new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero)},\r\n          {''DateTimeOffset-Plus1'', new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1))},\r\n          {''DateTimeOffset-Plus15'', new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1.5))}\r\n        }", span="8606-8614"];
m6_3669 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="ReadTests.cs", label="string expected = JsonConvert.SerializeObject(dates, Formatting.Indented)", span="8616-8616"];
m6_3671 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="ReadTests.cs", label="string actual = JsonConvert.SerializeObject(dates, Formatting.Indented, new JsonSerializerSettings\r\n        {\r\n          DateFormatString = JsonSerializerSettings.DefaultDateFormatString\r\n        })", span="8620-8623"];
m6_3670 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="ReadTests.cs", label="Console.WriteLine(expected)", span="8618-8618"];
m6_3672 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="ReadTests.cs", label="Console.WriteLine(expected)", span="8625-8625"];
m6_3673 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="ReadTests.cs", label="Assert.AreEqual(expected, actual)", span="8627-8627"];
m6_3674 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", span="8604-8604"];
m6_3163 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", span="7152-7152"];
m6_3164 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="ReadTests.cs", label="IDictionary<DateTimeOffset?, int> dic1 = new Dictionary<DateTimeOffset?, int>\r\n        {\r\n          {new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero), 1},\r\n          {new DateTimeOffset(2013, 12, 12, 12, 12, 12, TimeSpan.Zero), 2}\r\n        }", span="7154-7158"];
m6_3165 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(dic1, Formatting.Indented, new JsonSerializerSettings\r\n        {\r\n          DateFormatHandling = DateFormatHandling.MicrosoftDateFormat\r\n        })", span="7160-7163"];
m6_3166 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="ReadTests.cs", label="Assert.AreEqual(@''{\r\n  ''''\/Date(976623132000+0000)\/'''': 1,\r\n  ''''\/Date(1386850332000+0000)\/'''': 2\r\n}'', json)", span="7165-7168"];
m6_3167 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="ReadTests.cs", label="IDictionary<DateTimeOffset?, int> dic2 = JsonConvert.DeserializeObject<IDictionary<DateTimeOffset?, int>>(json)", span="7170-7170"];
m6_3168 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="ReadTests.cs", label="Assert.AreEqual(2, dic2.Count)", span="7172-7172"];
m6_3169 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="ReadTests.cs", label="Assert.AreEqual(1, dic2[new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero)])", span="7173-7173"];
m6_3170 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="ReadTests.cs", label="Assert.AreEqual(2, dic2[new DateTimeOffset(2013, 12, 12, 12, 12, 12, TimeSpan.Zero)])", span="7174-7174"];
m6_3171 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", span="7152-7152"];
m6_2554 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObject.ImplementInterfaceObject()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObject.ImplementInterfaceObject()", span="5849-5849"];
m6_553 [cluster="System.Collections.ObjectModel.ReadOnlyCollection<T>.ReadOnlyCollection(System.Collections.Generic.IList<T>)", file="ReadTests.cs", label="Entry System.Collections.ObjectModel.ReadOnlyCollection<T>.ReadOnlyCollection(System.Collections.Generic.IList<T>)", span="0-0"];
m6_2805 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", file="ReadTests.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", span="624-624"];
m6_474 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", span="1029-1029"];
m6_475 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="ReadTests.cs", label="string value = JsonConvert.SerializeObject(new GetOnlyPropertyClass())", span="1031-1031"];
m6_476 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="ReadTests.cs", label="GetOnlyPropertyClass c = JsonConvert.DeserializeObject<GetOnlyPropertyClass>(value)", span="1033-1033"];
m6_477 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="ReadTests.cs", label="Assert.AreEqual(c.Field, ''Field'')", span="1035-1035"];
m6_478 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="ReadTests.cs", label="Assert.AreEqual(c.GetOnlyProperty, ''GetOnlyProperty'')", span="1036-1036"];
m6_479 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", span="1029-1029"];
m6_638 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", span="1379-1379"];
m6_639 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="ReadTests.cs", label="DateTime d = new DateTime(2000, 1, 1)", span="1381-1381"];
m6_640 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="ReadTests.cs", label="var anonymous =\r\n        new\r\n        {\r\n          DateValue = d\r\n        }", span="1383-1387"];
m6_646 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="ReadTests.cs", label="Assert.AreEqual(d, anonymous.DateValue)", span="1399-1399"];
m6_641 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="ReadTests.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings()", span="1389-1389"];
m6_643 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(anonymous, settings)", span="1395-1395"];
m6_645 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="ReadTests.cs", label="anonymous = JsonConvert.DeserializeAnonymousType(json, anonymous, settings)", span="1398-1398"];
m6_642 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="ReadTests.cs", label="settings.Converters.Add(new IsoDateTimeConverter\r\n        {\r\n          DateTimeFormat = ''yyyy''\r\n        })", span="1390-1393"];
m6_644 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="ReadTests.cs", label="Assert.AreEqual(@''{''''DateValue'''':''''2000''''}'', json)", span="1396-1396"];
m6_647 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", span="1379-1379"];
m6_2509 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", span="5708-5708"];
m6_2510 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="ReadTests.cs", label="string json = @''{A:''''Test''''}''", span="5710-5710"];
m6_2511 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="ReadTests.cs", label="var withoutParameterisedConstructor = JsonConvert.DeserializeObject<DTOWithoutParameterisedConstructor>(json)", span="5712-5712"];
m6_2512 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="ReadTests.cs", label="var withParameterisedConstructor = JsonConvert.DeserializeObject<DTOWithParameterisedConstructor>(json)", span="5713-5713"];
m6_2513 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="ReadTests.cs", label="Assert.AreEqual(withoutParameterisedConstructor.B, withParameterisedConstructor.B)", span="5714-5714"];
m6_2514 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", span="5708-5708"];
m6_3148 [cluster="Newtonsoft.Json.Tests.Serialization.PropertyItemConverter.PropertyItemConverter()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.PropertyItemConverter.PropertyItemConverter()", span="9421-9421"];
m6_363 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualProperties.SubWithContractVirtualProperties()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualProperties.SubWithContractVirtualProperties()", span="736-736"];
m6_3759 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyDictionary()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyDictionary()", span="8832-8832"];
m6_3760 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyDictionary()", file="ReadTests.cs", label="ReadOnlyDictionary<string, int> dic = JsonConvert.DeserializeObject<ReadOnlyDictionary<string, int>>(''{'one':1,'two':2}'')", span="8834-8834"];
m6_3761 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyDictionary()", file="ReadTests.cs", label="Assert.AreEqual(2, dic.Count)", span="8836-8836"];
m6_3762 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyDictionary()", file="ReadTests.cs", label="Assert.AreEqual(1, dic[''one''])", span="8838-8838"];
m6_3763 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyDictionary()", file="ReadTests.cs", label="Assert.AreEqual(2, dic[''two''])", span="8839-8839"];
m6_3764 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyDictionary()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyDictionary()", span="8832-8832"];
m6_3255 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", span="7402-7402"];
m6_3256 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="ReadTests.cs", label="string json = @''{ ''''ClassName'''' : ''''System.InvalidOperationException'''',\r\n  ''''Data'''' : null,\r\n  ''''ExceptionMethod'''' : ''''8\nLogin\nAppBiz, Version=4.0.0.0, Culture=neutral, PublicKeyToken=null\nMyApp.LoginBiz\nMyApp.User Login()'''',\r\n  ''''HResult'''' : -2146233079,\r\n  ''''HelpURL'''' : null,\r\n  ''''InnerException'''' : { ''''ClassName'''' : ''''System.Exception'''',\r\n      ''''Data'''' : null,\r\n      ''''ExceptionMethod'''' : null,\r\n      ''''HResult'''' : -2146233088,\r\n      ''''HelpURL'''' : null,\r\n      ''''InnerException'''' : null,\r\n      ''''Message'''' : ''''Inner exception...'''',\r\n      ''''RemoteStackIndex'''' : 0,\r\n      ''''RemoteStackTraceString'''' : null,\r\n      ''''Source'''' : null,\r\n      ''''StackTraceString'''' : null,\r\n      ''''WatsonBuckets'''' : null\r\n    },\r\n  ''''Message'''' : ''''Outter exception...'''',\r\n  ''''RemoteStackIndex'''' : 0,\r\n  ''''RemoteStackTraceString'''' : null,\r\n  ''''Source'''' : ''''AppBiz'''',\r\n  ''''StackTraceString'''' : '''' at MyApp.LoginBiz.Login() in C:\\MyApp\\LoginBiz.cs:line 44\r\n at MyApp.LoginSvc.Login() in C:\\MyApp\\LoginSvc.cs:line 71\r\n at SyncInvokeLogin(Object , Object[] , Object[] )\r\n at System.ServiceModel.Dispatcher.SyncMethodInvoker.Invoke(Object instance, Object[] inputs, Object[]& outputs)\r\n at System.ServiceModel.Dispatcher.DispatchOperationRuntime.InvokeBegin(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage5(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage41(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage4(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage31(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage3(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage2(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage11(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage1(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.MessageRpc.Process(Boolean isOperationContextSet)'''',\r\n  ''''WatsonBuckets'''' : null\r\n}''", span="7404-7428"];
m6_3257 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="ReadTests.cs", label="InvalidOperationException exception = JsonConvert.DeserializeObject<InvalidOperationException>(json)", span="7430-7430"];
m6_3258 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="ReadTests.cs", label="Assert.IsNotNull(exception)", span="7431-7431"];
m6_3259 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="ReadTests.cs", label="CustomAssert.IsInstanceOfType(typeof(InvalidOperationException), exception)", span="7432-7432"];
m6_3260 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="ReadTests.cs", label="Assert.AreEqual(''Outter exception...'', exception.Message)", span="7434-7434"];
m6_3261 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", span="7402-7402"];
m6_1988 [cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="ReadTests.cs", label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0"];
m6_2023 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverterTest()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverterTest()", span="4536-4536"];
m6_2024 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverterTest()", file="ReadTests.cs", label="Movie p = new Movie()", span="4538-4538"];
m6_2025 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverterTest()", file="ReadTests.cs", label="p.ReleaseCountries = new List<string> { ''Existing'' }", span="4539-4539"];
m6_2026 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverterTest()", file="ReadTests.cs", label="JsonConvert.PopulateObject(''{'ReleaseCountries':['Appended']}'', p, new JsonSerializerSettings\r\n        {\r\n          Converters = new List<JsonConverter> { new StringListAppenderConverter() }\r\n        })", span="4541-4544"];
m6_2027 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverterTest()", file="ReadTests.cs", label="Assert.AreEqual(2, p.ReleaseCountries.Count)", span="4546-4546"];
m6_2028 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverterTest()", file="ReadTests.cs", label="Assert.AreEqual(''Existing'', p.ReleaseCountries[0])", span="4547-4547"];
m6_2029 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverterTest()", file="ReadTests.cs", label="Assert.AreEqual(''Appended'', p.ReleaseCountries[1])", span="4548-4548"];
m6_2030 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverterTest()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverterTest()", span="4536-4536"];
m6_921 [cluster="Newtonsoft.Json.Tests.TestObjects.PersonRaw.PersonRaw()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.PersonRaw.PersonRaw()", span="30-30"];
m6_1556 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", span="3433-3433"];
m6_1557 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="ReadTests.cs", label="ThisGenericTest<KeyValueId> g = new ThisGenericTest<KeyValueId>()", span="3435-3435"];
m6_1558 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="ReadTests.cs", label="g.Add(new KeyValueId { Id = 1, Key = ''key1'', Value = ''value1'' })", span="3437-3437"];
m6_1559 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="ReadTests.cs", label="g.Add(new KeyValueId { Id = 2, Key = ''key2'', Value = ''value2'' })", span="3438-3438"];
m6_1560 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="ReadTests.cs", label="g.MyProperty = ''some value''", span="3440-3440"];
m6_1561 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="ReadTests.cs", label="string json = g.ToJson()", span="3442-3442"];
m6_1562 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="ReadTests.cs", label="Assert.AreEqual(@''{\r\n  ''''MyProperty'''': ''''some value'''',\r\n  ''''TheItems'''': [\r\n    {\r\n      ''''Id'''': 1,\r\n      ''''Key'''': ''''key1'''',\r\n      ''''Value'''': ''''value1''''\r\n    },\r\n    {\r\n      ''''Id'''': 2,\r\n      ''''Key'''': ''''key2'''',\r\n      ''''Value'''': ''''value2''''\r\n    }\r\n  ]\r\n}'', json)", span="3444-3458"];
m6_1563 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="ReadTests.cs", label="ThisGenericTest<KeyValueId> gen = JsonConvert.DeserializeObject<ThisGenericTest<KeyValueId>>(json)", span="3460-3460"];
m6_1564 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="ReadTests.cs", label="Assert.AreEqual(''some value'', gen.MyProperty)", span="3461-3461"];
m6_1565 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", span="3433-3433"];
m6_217 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", file="ReadTests.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object)", span="498-498"];
m6_4044 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.ToBoolean(System.IFormatProvider)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Ratio.ToBoolean(System.IFormatProvider)", span="9869-9869"];
m6_4045 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.ToBoolean(System.IFormatProvider)", file="ReadTests.cs", label="return this._numerator == 0;", span="9871-9871"];
m6_4046 [cluster="Newtonsoft.Json.Tests.Serialization.Ratio.ToBoolean(System.IFormatProvider)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.Ratio.ToBoolean(System.IFormatProvider)", span="9869-9869"];
m6_4011 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(double)", file="ReadTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(double)", span="865-865"];
m6_903 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", span="1848-1848"];
m6_904 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(new GenericImpl())", span="1850-1850"];
m6_905 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", file="ReadTests.cs", label="Assert.AreEqual(@''{''''Id'''':0}'', json)", span="1851-1851"];
m6_906 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", span="1848-1848"];
m6_3726 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", span="8770-8770"];
m6_3727 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="ReadTests.cs", label="BigInteger i = BigInteger.Parse(''123456789999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999990'')", span="8772-8772"];
m6_3728 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="ReadTests.cs", label="string json = JsonConvert.SerializeObject(new [] {i}, Formatting.Indented)", span="8774-8774"];
m6_3729 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="ReadTests.cs", label="Assert.AreEqual(@''[\r\n  123456789999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999990\r\n]'', json)", span="8776-8778"];
m6_3730 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", span="8770-8770"];
m6_4007 [cluster="Newtonsoft.Json.Tests.Serialization.IntToFloatConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.IntToFloatConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="9721-9721"];
m6_4008 [cluster="Newtonsoft.Json.Tests.Serialization.IntToFloatConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ReadTests.cs", label="writer.WriteValue(Convert.ToDouble(value))", span="9723-9723"];
m6_4009 [cluster="Newtonsoft.Json.Tests.Serialization.IntToFloatConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.IntToFloatConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="9721-9721"];
m6_1414 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", span="3028-3028"];
m6_1415 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", file="ReadTests.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        @''Error getting value from 'ReadTimeout' on 'System.IO.MemoryStream'.'',\r\n        () =>\r\n        {\r\n          JsonConvert.SerializeObject(new MemoryStream(), new JsonSerializerSettings\r\n          {\r\n            ContractResolver = new DefaultContractResolver\r\n            {\r\n#if !(SILVERLIGHT || NETFX_CORE || PORTABLE || PORTABLE40)\r\n              IgnoreSerializableAttribute = true\r\n#endif\r\n            }\r\n          });\r\n        })", span="3030-3043"];
m6_1416 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", span="3028-3028"];
m6_1677 [cluster="System.Collections.IEnumerable.GetEnumerator()", file="ReadTests.cs", label="Entry System.Collections.IEnumerable.GetEnumerator()", span="0-0"];
m6_3448 [cluster="Newtonsoft.Json.Tests.Serialization.Array3D.Array3D()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Array3D.Array3D()", span="9704-9704"];
m6_513 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", span="1171-1171"];
m6_514 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="ReadTests.cs", label="JsonPropertyClass test = new JsonPropertyClass()", span="1173-1173"];
m6_515 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="ReadTests.cs", label="test.Pie = ''Delicious''", span="1174-1174"];
m6_516 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="ReadTests.cs", label="test.SweetCakesCount = int.MaxValue", span="1175-1175"];
m6_517 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="ReadTests.cs", label="string jsonText = JsonConvert.SerializeObject(test)", span="1177-1177"];
m6_520 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="ReadTests.cs", label="Assert.AreEqual(test.Pie, test2.Pie)", span="1183-1183"];
m6_521 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="ReadTests.cs", label="Assert.AreEqual(test.SweetCakesCount, test2.SweetCakesCount)", span="1184-1184"];
m6_518 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="ReadTests.cs", label="Assert.AreEqual(@''{''''pie'''':''''Delicious'''',''''pie1'''':''''PieChart!'''',''''sweet_cakes_count'''':2147483647}'', jsonText)", span="1179-1179"];
m6_519 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="ReadTests.cs", label="JsonPropertyClass test2 = JsonConvert.DeserializeObject<JsonPropertyClass>(jsonText)", span="1181-1181"];
m6_522 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", span="1171-1171"];
m6_2986 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", span="6791-6791"];
m6_2987 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", file="ReadTests.cs", label="byte[] b = JsonConvert.DeserializeObject<byte[]>('''')", span="6793-6793"];
m6_2988 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", file="ReadTests.cs", label="Assert.IsNull(b)", span="6794-6794"];
m6_2989 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", span="6791-6791"];
m6_2542 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", span="5828-5828"];
m6_2543 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="ReadTests.cs", label="ChildWithDifferentOverrideObject cc = new ChildWithDifferentOverrideObject\r\n        {\r\n          VirtualMember = ''VirtualMember!'',\r\n          NonVirtualMember = ''NonVirtualMember!''\r\n        }", span="5830-5834"];
m6_2544 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="ReadTests.cs", label="string result = JsonConvert.SerializeObject(cc)", span="5836-5836"];
m6_2545 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="ReadTests.cs", label="Console.WriteLine(result)", span="5837-5837"];
m6_2546 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="ReadTests.cs", label="Assert.AreEqual(@''{''''differentVirtualMember'''':''''VirtualMember!'''',''''nonVirtualMember'''':''''NonVirtualMember!''''}'', result)", span="5838-5838"];
m6_2547 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", span="5828-5828"];
m6_664 [cluster="System.Text.StringBuilder.ToString()", file="ReadTests.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m6_3772 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="8861-8861"];
m6_3773 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="ReadTests.cs", label="return _dictionary.TryGetValue(key, out value);", span="8863-8863"];
m6_3774 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="8861-8861"];
m6_2864 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", span="6550-6550"];
m6_2865 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", file="ReadTests.cs", label="string json = @''{\r\n  ''''Integer'''': 1,\r\n  ''''NullableInteger1'''': 2,\r\n  ''''NullableInteger2'''': null\r\n}''", span="6552-6556"];
m6_2866 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", file="ReadTests.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''Error converting value 1 to type 'Newtonsoft.Json.Tests.ConvertibleInt'. Path 'Integer', line 2, position 15.'',\r\n        () => JsonConvert.DeserializeObject<ConvertableIntTestClass>(json))", span="6558-6560"];
m6_2867 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", span="6550-6550"];
m6_562 [cluster="System.IO.MemoryStream.MemoryStream(byte[])", file="ReadTests.cs", label="Entry System.IO.MemoryStream.MemoryStream(byte[])", span="0-0"];
m6_2635 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", span="6088-6088"];
m6_2636 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="ReadTests.cs", label="BusRun r = JsonConvert.DeserializeObject<BusRun>(''{\''Departures\'':[\''\\/Date(1309874148734-0400)\\/\'',\''\\/Date(1309874148739-0400)\\/\'',null],\''WheelchairAccessible\'':true}'')", span="6090-6090"];
m6_2637 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="ReadTests.cs", label="Assert.AreEqual(typeof(List<DateTime?>), r.Departures.GetType())", span="6092-6092"];
m6_2638 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="ReadTests.cs", label="Assert.AreEqual(3, r.Departures.Count())", span="6093-6093"];
m6_2639 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="ReadTests.cs", label="Assert.IsNotNull(r.Departures.ElementAt(0))", span="6094-6094"];
m6_2640 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="ReadTests.cs", label="Assert.IsNotNull(r.Departures.ElementAt(1))", span="6095-6095"];
m6_2641 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="ReadTests.cs", label="Assert.IsNull(r.Departures.ElementAt(2))", span="6096-6096"];
m6_2642 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", span="6088-6088"];
m6_1257 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="ReadTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", span="2685-2685"];
m6_1258 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="ReadTests.cs", label="string json = @''{''''action'''':''''Router'''',''''method'''':''''Navigate'''',''''data'''':[''''dashboard'''',[''''id'''', 1, ''''teststring'''', ''''test''''],{''''one'''':1}],''''type'''':''''rpc'''',''''tid'''':2}''", span="2687-2687"];
m6_1259 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="ReadTests.cs", label="ObjectArrayPropertyTest o = JsonConvert.DeserializeObject<ObjectArrayPropertyTest>(json)", span="2689-2689"];
m6_1260 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="ReadTests.cs", label="Assert.AreEqual(''Router'', o.Action)", span="2691-2691"];
m6_1261 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="ReadTests.cs", label="Assert.AreEqual(''Navigate'', o.Method)", span="2692-2692"];
m6_1262 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="ReadTests.cs", label="Assert.AreEqual(3, o.Data.Length)", span="2693-2693"];
m6_1263 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="ReadTests.cs", label="Assert.AreEqual(''dashboard'', o.Data[0])", span="2694-2694"];
m6_1264 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="ReadTests.cs", label="CustomAssert.IsInstanceOfType(typeof(JArray), o.Data[1])", span="2695-2695"];
m6_1265 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="ReadTests.cs", label="Assert.AreEqual(4, ((JArray)o.Data[1]).Count)", span="2696-2696"];
m6_1266 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="ReadTests.cs", label="CustomAssert.IsInstanceOfType(typeof(JObject), o.Data[2])", span="2697-2697"];
m6_1267 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="ReadTests.cs", label="Assert.AreEqual(1, ((JObject)o.Data[2]).Count)", span="2698-2698"];
m6_1268 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="ReadTests.cs", label="Assert.AreEqual(1, (int)((JObject)o.Data[2])[''one''])", span="2699-2699"];
m6_1269 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="ReadTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", span="2685-2685"];
m6_3954 [cluster="System.Enum.GetNames(System.Type)", file="ReadTests.cs", label="Entry System.Enum.GetNames(System.Type)", span="0-0"];
m6_4135 [file="ReadTests.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericClass<T, TValue>", span=""];
m6_4136 [file="ReadTests.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExtensionDataTestClass", span=""];
m6_4137 [file="ReadTests.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest", span=""];
m6_4138 [file="ReadTests.cs", label=json, span=""];
m6_4139 [file="ReadTests.cs", label=json, span=""];
m6_4140 [file="ReadTests.cs", label=strFromTest, span=""];
m6_4141 [file="ReadTests.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers", span=""];
m6_4142 [file="ReadTests.cs", label=json, span=""];
m6_4143 [file="ReadTests.cs", label=json, span=""];
m6_4144 [file="ReadTests.cs", label=json, span=""];
m6_4145 [file="ReadTests.cs", label=json, span=""];
m6_4146 [file="ReadTests.cs", label=json, span=""];
m6_4147 [file="ReadTests.cs", label=json, span=""];
m6_4148 [file="ReadTests.cs", label=json, span=""];
m6_4149 [file="ReadTests.cs", label=json, span=""];
m6_4150 [file="ReadTests.cs", label=json, span=""];
m6_4151 [file="ReadTests.cs", label=json, span=""];
m6_4152 [file="ReadTests.cs", label=json, span=""];
m6_4153 [file="ReadTests.cs", label=json, span=""];
m6_4154 [file="ReadTests.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass", span=""];
m6_4155 [file="ReadTests.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>", span=""];
m6_4156 [file="ReadTests.cs", label=json, span=""];
m6_4157 [file="ReadTests.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor", span=""];
m6_4158 [file="ReadTests.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", span=""];
m6_4159 [file="ReadTests.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", span=""];
m6_4160 [file="ReadTests.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>", span=""];
m6_4161 [file="ReadTests.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA", span=""];
m6_4162 [file="ReadTests.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB", span=""];
m6_4163 [file="ReadTests.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListTestClass", span=""];
m6_4164 [file="ReadTests.cs", label=json, span=""];
m6_4165 [file="ReadTests.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty", span=""];
m6_4166 [file="ReadTests.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Employee", span=""];
m6_4167 [file="ReadTests.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey", span=""];
m6_4168 [file="ReadTests.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyClass", span=""];
m6_4169 [file="ReadTests.cs", label=json, span=""];
m6_4170 [file="ReadTests.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector", span=""];
m6_4171 [file="ReadTests.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived", span=""];
m6_4172 [file="ReadTests.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base", span=""];
m6_4173 [file="ReadTests.cs", label="out Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable", span=""];
m6_4174 [file="ReadTests.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable", span=""];
m6_4175 [file="ReadTests.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DecimalTest", span=""];
m6_4176 [file="ReadTests.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructor", span=""];
m6_4177 [file="ReadTests.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructor", span=""];
m6_4178 [file="ReadTests.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor", span=""];
m6_4179 [file="ReadTests.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor", span=""];
m6_4180 [file="ReadTests.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithoutParameterisedConstructor", span=""];
m6_4181 [file="ReadTests.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty", span=""];
m6_4182 [file="ReadTests.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty", span=""];
m6_4183 [file="ReadTests.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes", span=""];
m6_4184 [file="ReadTests.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException", span=""];
m6_4185 [file="ReadTests.cs", label=json, span=""];
m6_4186 [file="ReadTests.cs", label=json, span=""];
m6_4187 [file="ReadTests.cs", label=json, span=""];
m6_4188 [file="ReadTests.cs", label=errors, span=""];
m6_4189 [file="ReadTests.cs", label=errors, span=""];
m6_4190 [file="ReadTests.cs", label=errors, span=""];
m6_4191 [file="ReadTests.cs", label=json, span=""];
m6_4192 [file="ReadTests.cs", label=s, span=""];
m6_4193 [file="ReadTests.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass<T>", span=""];
m6_4194 [file="ReadTests.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClassFailure<T>", span=""];
m6_4195 [file="ReadTests.cs", label=json, span=""];
m6_4196 [file="ReadTests.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>", span=""];
m6_4197 [file="ReadTests.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuplePartial<T1>", span=""];
m6_4198 [file="ReadTests.cs", label=json, span=""];
m6_4199 [file="ReadTests.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver", span=""];
m6_4200 [file="ReadTests.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyTestClass", span=""];
m6_4201 [file="ReadTests.cs", label=json, span=""];
m6_4202 [file="ReadTests.cs", label=json, span=""];
m6_4203 [file="ReadTests.cs", label=json, span=""];
m6_4204 [file="ReadTests.cs", label=json, span=""];
m6_4205 [file="ReadTests.cs", label=json, span=""];
m6_4206 [file="ReadTests.cs", label=json, span=""];
m6_4207 [file="ReadTests.cs", label=json, span=""];
m6_4208 [file="ReadTests.cs", label=json, span=""];
m6_4209 [file="ReadTests.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>", span=""];
m6_4210 [file="ReadTests.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyCollection<T>", span=""];
m6_4211 [file="ReadTests.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateDefaultCtorWithIEnumerableCtorList<T>", span=""];
m6_4212 [file="ReadTests.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IdReferenceResolver", span=""];
m6_4213 [file="ReadTests.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyInterfaceConverter", span=""];
m6_4214 [file="ReadTests.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConsoleWriter", span=""];
m6_4215 [file="ReadTests.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TraceWriter", span=""];
m6_4216 [file="ReadTests.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterJsonConverter", span=""];
m6_4217 [file="ReadTests.cs", label="Newtonsoft.Json.Tests.Serialization.AnswerFilterModel", span=""];
m6_4218 [file="ReadTests.cs", label="Newtonsoft.Json.Tests.Serialization.TestObject", span=""];
m6_4219 [file="ReadTests.cs", label="Newtonsoft.Json.Tests.Serialization.GameObject", span=""];
m6_4220 [file="ReadTests.cs", label="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTestClass", span=""];
m6_4221 [file="ReadTests.cs", label="Newtonsoft.Json.Tests.Serialization.DirectoryAccount", span=""];
m6_4222 [file="ReadTests.cs", label="out Newtonsoft.Json.Tests.Serialization.Ratio", span=""];
m6_4223 [file="ReadTests.cs", label="out Newtonsoft.Json.Tests.Serialization.Ratio", span=""];
m6_4224 [file="ReadTests.cs", label="Newtonsoft.Json.Tests.Serialization.Ratio", span=""];
m6_4225 [file="ReadTests.cs", label="ref Newtonsoft.Json.Tests.Serialization.Ratio", span=""];
m6_4226 [file="ReadTests.cs", label="ref Newtonsoft.Json.Tests.Serialization.Ratio", span=""];
m6_4227 [file="ReadTests.cs", label="ref Newtonsoft.Json.Tests.Serialization.Ratio", span=""];
m7_121 [cluster="System.Exception.Exception(string)", file="TestFixtureBase.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m7_86 [cluster="Unk.Contains", file="TestFixtureBase.cs", label="Entry Unk.Contains", span=""];
m7_76 [cluster="Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", file="TestFixtureBase.cs", label="Entry Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", span="301-301"];
m7_77 [cluster="Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", file="TestFixtureBase.cs", label="Assert.IsInstanceOf(t, instance)", span="303-303"];
m7_78 [cluster="Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", file="TestFixtureBase.cs", label="Exit Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", span="301-301"];
m7_27 [cluster="System.IO.MemoryStream.ToArray()", file="TestFixtureBase.cs", label="Entry System.IO.MemoryStream.ToArray()", span="0-0"];
m7_34 [cluster="System.DateTime.SpecifyKind(System.DateTime, System.DateTimeKind)", file="TestFixtureBase.cs", label="Entry System.DateTime.SpecifyKind(System.DateTime, System.DateTimeKind)", span="0-0"];
m7_11 [cluster="System.Type.GetField(string)", file="TestFixtureBase.cs", label="Entry System.Type.GetField(string)", span="0-0"];
m7_12 [cluster="Newtonsoft.Json.Tests.TestReflectionUtils.GetMethod(System.Type, string)", file="TestFixtureBase.cs", label="Entry Newtonsoft.Json.Tests.TestReflectionUtils.GetMethod(System.Type, string)", span="88-88"];
m7_13 [cluster="Newtonsoft.Json.Tests.TestReflectionUtils.GetMethod(System.Type, string)", file="TestFixtureBase.cs", label="return type.GetMethod(name);", span="91-91"];
m7_14 [cluster="Newtonsoft.Json.Tests.TestReflectionUtils.GetMethod(System.Type, string)", file="TestFixtureBase.cs", label="Exit Newtonsoft.Json.Tests.TestReflectionUtils.GetMethod(System.Type, string)", span="88-88"];
m7_69 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.WriteEscapedJson(string)", file="TestFixtureBase.cs", label="Entry Newtonsoft.Json.Tests.TestFixtureBase.WriteEscapedJson(string)", span="288-288"];
m7_70 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.WriteEscapedJson(string)", file="TestFixtureBase.cs", label="Console.WriteLine(EscapeJson(json))", span="290-290"];
m7_71 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.WriteEscapedJson(string)", file="TestFixtureBase.cs", label="Exit Newtonsoft.Json.Tests.TestFixtureBase.WriteEscapedJson(string)", span="288-288"];
m7_16 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.GetDataContractJsonSerializeResult(object)", file="TestFixtureBase.cs", label="Entry Newtonsoft.Json.Tests.TestFixtureBase.GetDataContractJsonSerializeResult(object)", span="200-200"];
m7_17 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.GetDataContractJsonSerializeResult(object)", file="TestFixtureBase.cs", label="MemoryStream ms = new MemoryStream()", span="202-202"];
m7_18 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.GetDataContractJsonSerializeResult(object)", file="TestFixtureBase.cs", label="DataContractJsonSerializer s = new DataContractJsonSerializer(o.GetType())", span="203-203"];
m7_19 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.GetDataContractJsonSerializeResult(object)", file="TestFixtureBase.cs", label="s.WriteObject(ms, o)", span="204-204"];
m7_20 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.GetDataContractJsonSerializeResult(object)", file="TestFixtureBase.cs", label="var data = ms.ToArray()", span="206-206"];
m7_21 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.GetDataContractJsonSerializeResult(object)", file="TestFixtureBase.cs", label="return Encoding.UTF8.GetString(data, 0, data.Length);", span="207-207"];
m7_22 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.GetDataContractJsonSerializeResult(object)", file="TestFixtureBase.cs", label="Exit Newtonsoft.Json.Tests.TestFixtureBase.GetDataContractJsonSerializeResult(object)", span="200-200"];
m7_4 [cluster="Newtonsoft.Json.Tests.TestReflectionUtils.GetProperty(System.Type, string)", file="TestFixtureBase.cs", label="Entry Newtonsoft.Json.Tests.TestReflectionUtils.GetProperty(System.Type, string)", span="70-70"];
m7_5 [cluster="Newtonsoft.Json.Tests.TestReflectionUtils.GetProperty(System.Type, string)", file="TestFixtureBase.cs", label="return type.GetProperty(name);", span="73-73"];
m7_6 [cluster="Newtonsoft.Json.Tests.TestReflectionUtils.GetProperty(System.Type, string)", file="TestFixtureBase.cs", label="Exit Newtonsoft.Json.Tests.TestReflectionUtils.GetProperty(System.Type, string)", span="70-70"];
m7_83 [cluster="Newtonsoft.Json.Tests.CustomAssert.Contains(System.Collections.IList, object, string)", file="TestFixtureBase.cs", label="Entry Newtonsoft.Json.Tests.CustomAssert.Contains(System.Collections.IList, object, string)", span="311-311"];
m7_84 [cluster="Newtonsoft.Json.Tests.CustomAssert.Contains(System.Collections.IList, object, string)", file="TestFixtureBase.cs", label="Assert.Contains(value, collection, message)", span="314-314"];
m7_85 [cluster="Newtonsoft.Json.Tests.CustomAssert.Contains(System.Collections.IList, object, string)", file="TestFixtureBase.cs", label="Exit Newtonsoft.Json.Tests.CustomAssert.Contains(System.Collections.IList, object, string)", span="311-311"];
m7_92 [cluster="Newtonsoft.Json.Tests.StringAssert.Normalize(string)", file="TestFixtureBase.cs", label="Entry Newtonsoft.Json.Tests.StringAssert.Normalize(string)", span="344-344"];
m7_100 [cluster="Newtonsoft.Json.Tests.StringAssert.Normalize(string)", file="TestFixtureBase.cs", label="s != null", span="346-346"];
m7_101 [cluster="Newtonsoft.Json.Tests.StringAssert.Normalize(string)", file="TestFixtureBase.cs", label="s = Regex.Replace(s, ''\r\n'')", span="348-348"];
m7_102 [cluster="Newtonsoft.Json.Tests.StringAssert.Normalize(string)", file="TestFixtureBase.cs", label="return s;", span="351-351"];
m7_103 [cluster="Newtonsoft.Json.Tests.StringAssert.Normalize(string)", file="TestFixtureBase.cs", label="Exit Newtonsoft.Json.Tests.StringAssert.Normalize(string)", span="344-344"];
m7_122 [cluster="string.Join(string, params string[])", file="TestFixtureBase.cs", label="Entry string.Join(string, params string[])", span="0-0"];
m7_49 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.HexToBytes(string)", file="TestFixtureBase.cs", label="Entry Newtonsoft.Json.Tests.TestFixtureBase.HexToBytes(string)", span="235-235"];
m7_50 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.HexToBytes(string)", file="TestFixtureBase.cs", label="string fixedHex = hex.Replace(''-'', string.Empty)", span="237-237"];
m7_51 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.HexToBytes(string)", file="TestFixtureBase.cs", label="byte[] bytes = new byte[fixedHex.Length / 2]", span="240-240"];
m7_54 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.HexToBytes(string)", file="TestFixtureBase.cs", label=fixedHex, span="246-246"];
m7_52 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.HexToBytes(string)", file="TestFixtureBase.cs", label="int shift = 4", span="242-242"];
m7_58 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.HexToBytes(string)", file="TestFixtureBase.cs", label="bytes[offset] |= (byte)(b << shift)", span="257-257"];
m7_62 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.HexToBytes(string)", file="TestFixtureBase.cs", label="return bytes;", span="266-266"];
m7_53 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.HexToBytes(string)", file="TestFixtureBase.cs", label="int offset = 0", span="244-244"];
m7_59 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.HexToBytes(string)", file="TestFixtureBase.cs", label="shift ^= 4", span="259-259"];
m7_61 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.HexToBytes(string)", file="TestFixtureBase.cs", label="offset++", span="263-263"];
m7_55 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.HexToBytes(string)", file="TestFixtureBase.cs", label="int b = (c - '0') % 32", span="250-250"];
m7_56 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.HexToBytes(string)", file="TestFixtureBase.cs", label="b > 9", span="252-252"];
m7_57 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.HexToBytes(string)", file="TestFixtureBase.cs", label="b -= 7", span="254-254"];
m7_60 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.HexToBytes(string)", file="TestFixtureBase.cs", label="shift != 0", span="261-261"];
m7_63 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.HexToBytes(string)", file="TestFixtureBase.cs", label="Exit Newtonsoft.Json.Tests.TestFixtureBase.HexToBytes(string)", span="235-235"];
m7_35 [cluster="System.DateTime.GetUtcOffset()", file="TestFixtureBase.cs", label="Entry System.DateTime.GetUtcOffset()", span="51-51"];
m7_8 [cluster="Newtonsoft.Json.Tests.TestReflectionUtils.GetField(System.Type, string)", file="TestFixtureBase.cs", label="Entry Newtonsoft.Json.Tests.TestReflectionUtils.GetField(System.Type, string)", span="79-79"];
m7_9 [cluster="Newtonsoft.Json.Tests.TestReflectionUtils.GetField(System.Type, string)", file="TestFixtureBase.cs", label="return type.GetField(name);", span="82-82"];
m7_10 [cluster="Newtonsoft.Json.Tests.TestReflectionUtils.GetField(System.Type, string)", file="TestFixtureBase.cs", label="Exit Newtonsoft.Json.Tests.TestReflectionUtils.GetField(System.Type, string)", span="79-79"];
m7_124 [cluster="System.Exception.GetType()", file="TestFixtureBase.cs", label="Entry System.Exception.GetType()", span="0-0"];
m7_125 [cluster="string.Format(string, object, object)", file="TestFixtureBase.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m7_15 [cluster="System.Type.GetMethod(string)", file="TestFixtureBase.cs", label="Entry System.Type.GetMethod(string)", span="0-0"];
m7_104 [cluster="System.Text.RegularExpressions.Regex.Replace(string, string)", file="TestFixtureBase.cs", label="Entry System.Text.RegularExpressions.Regex.Replace(string, string)", span="0-0"];
m7_28 [cluster="System.Text.Encoding.GetString(byte[], int, int)", file="TestFixtureBase.cs", label="Entry System.Text.Encoding.GetString(byte[], int, int)", span="0-0"];
m7_3 [cluster="System.Type.GetConstructors()", file="TestFixtureBase.cs", label="Entry System.Type.GetConstructors()", span="0-0"];
m7_73 [cluster="System.Console.WriteLine(string)", file="TestFixtureBase.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m7_94 [cluster="Newtonsoft.Json.Tests.StringAssert.Equals(string, string)", file="TestFixtureBase.cs", label="Entry Newtonsoft.Json.Tests.StringAssert.Equals(string, string)", span="336-336"];
m7_95 [cluster="Newtonsoft.Json.Tests.StringAssert.Equals(string, string)", file="TestFixtureBase.cs", label="s1 = Normalize(s1)", span="338-338"];
m7_96 [cluster="Newtonsoft.Json.Tests.StringAssert.Equals(string, string)", file="TestFixtureBase.cs", label="s2 = Normalize(s2)", span="339-339"];
m7_97 [cluster="Newtonsoft.Json.Tests.StringAssert.Equals(string, string)", file="TestFixtureBase.cs", label="return string.Equals(s1, s2);", span="341-341"];
m7_98 [cluster="Newtonsoft.Json.Tests.StringAssert.Equals(string, string)", file="TestFixtureBase.cs", label="Exit Newtonsoft.Json.Tests.StringAssert.Equals(string, string)", span="336-336"];
m7_119 [cluster="System.Action.Invoke()", file="TestFixtureBase.cs", label="Entry System.Action.Invoke()", span="0-0"];
m7_72 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.EscapeJson(string)", file="TestFixtureBase.cs", label="Entry Newtonsoft.Json.Tests.TestFixtureBase.EscapeJson(string)", span="293-293"];
m7_74 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.EscapeJson(string)", file="TestFixtureBase.cs", label="return @''@'''''' + json.Replace(@'''''''', @'''''''''''') + @'''''''';", span="295-295"];
m7_75 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.EscapeJson(string)", file="TestFixtureBase.cs", label="Exit Newtonsoft.Json.Tests.TestFixtureBase.EscapeJson(string)", span="293-293"];
m7_0 [cluster="Newtonsoft.Json.Tests.TestReflectionUtils.GetConstructors(System.Type)", file="TestFixtureBase.cs", label="Entry Newtonsoft.Json.Tests.TestReflectionUtils.GetConstructors(System.Type)", span="61-61"];
m7_1 [cluster="Newtonsoft.Json.Tests.TestReflectionUtils.GetConstructors(System.Type)", file="TestFixtureBase.cs", label="return type.GetConstructors();", span="64-64"];
m7_2 [cluster="Newtonsoft.Json.Tests.TestReflectionUtils.GetConstructors(System.Type)", file="TestFixtureBase.cs", label="Exit Newtonsoft.Json.Tests.TestReflectionUtils.GetConstructors(System.Type)", span="61-61"];
m7_93 [cluster="Unk.AreEqual", file="TestFixtureBase.cs", label="Entry Unk.AreEqual", span=""];
m7_23 [cluster="System.IO.MemoryStream.MemoryStream()", file="TestFixtureBase.cs", label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0"];
m7_99 [cluster="string.Equals(string, string)", file="TestFixtureBase.cs", label="Entry string.Equals(string, string)", span="0-0"];
m7_26 [cluster="Unk.WriteObject", file="TestFixtureBase.cs", label="Entry Unk.WriteObject", span=""];
m7_41 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.BytesToHex(byte[], bool)", file="TestFixtureBase.cs", label="Entry Newtonsoft.Json.Tests.TestFixtureBase.BytesToHex(byte[], bool)", span="224-224"];
m7_42 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.BytesToHex(byte[], bool)", file="TestFixtureBase.cs", label="string hex = BitConverter.ToString(bytes)", span="226-226"];
m7_43 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.BytesToHex(byte[], bool)", file="TestFixtureBase.cs", label=removeDashes, span="227-227"];
m7_44 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.BytesToHex(byte[], bool)", file="TestFixtureBase.cs", label="hex = hex.Replace(''-'', '''')", span="229-229"];
m7_45 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.BytesToHex(byte[], bool)", file="TestFixtureBase.cs", label="return hex;", span="232-232"];
m7_46 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.BytesToHex(byte[], bool)", file="TestFixtureBase.cs", label="Exit Newtonsoft.Json.Tests.TestFixtureBase.BytesToHex(byte[], bool)", span="224-224"];
m7_37 [cluster="string.String(char[], int, int)", file="TestFixtureBase.cs", label="Entry string.String(char[], int, int)", span="0-0"];
m7_123 [cluster="System.Exception.Exception(string, System.Exception)", file="TestFixtureBase.cs", label="Entry System.Exception.Exception(string, System.Exception)", span="0-0"];
m7_64 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.TestSetup()", file="TestFixtureBase.cs", label="Entry Newtonsoft.Json.Tests.TestFixtureBase.TestSetup()", span="273-273"];
m7_65 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.TestSetup()", file="TestFixtureBase.cs", label="Thread.CurrentThread.CurrentCulture = CultureInfo.InvariantCulture", span="281-281"];
m7_66 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.TestSetup()", file="TestFixtureBase.cs", label="Thread.CurrentThread.CurrentUICulture = CultureInfo.InvariantCulture", span="282-282"];
m7_67 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.TestSetup()", file="TestFixtureBase.cs", label="JsonConvert.DefaultSettings = null", span="285-285"];
m7_68 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.TestSetup()", file="TestFixtureBase.cs", label="Exit Newtonsoft.Json.Tests.TestFixtureBase.TestSetup()", span="273-273"];
m7_48 [cluster="string.Replace(string, string)", file="TestFixtureBase.cs", label="Entry string.Replace(string, string)", span="0-0"];
m7_120 [cluster="Unk.Fail", file="TestFixtureBase.cs", label="Entry Unk.Fail", span=""];
m7_7 [cluster="System.Type.GetProperty(string)", file="TestFixtureBase.cs", label="Entry System.Type.GetProperty(string)", span="0-0"];
m7_24 [cluster="DataContractJsonSerializer.cstr", file="TestFixtureBase.cs", label="Entry DataContractJsonSerializer.cstr", span=""];
m7_29 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.GetOffset(System.DateTime, Newtonsoft.Json.DateFormatHandling)", file="TestFixtureBase.cs", label="Entry Newtonsoft.Json.Tests.TestFixtureBase.GetOffset(System.DateTime, Newtonsoft.Json.DateFormatHandling)", span="211-211"];
m7_30 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.GetOffset(System.DateTime, Newtonsoft.Json.DateFormatHandling)", file="TestFixtureBase.cs", label="char[] chars = new char[8]", span="213-213"];
m7_31 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.GetOffset(System.DateTime, Newtonsoft.Json.DateFormatHandling)", file="TestFixtureBase.cs", label="int pos = DateTimeUtils.WriteDateTimeOffset(chars, 0, DateTime.SpecifyKind(d, DateTimeKind.Local).GetUtcOffset(), dateFormatHandling)", span="214-214"];
m7_32 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.GetOffset(System.DateTime, Newtonsoft.Json.DateFormatHandling)", file="TestFixtureBase.cs", label="return new string(chars, 0, pos);", span="216-216"];
m7_33 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.GetOffset(System.DateTime, Newtonsoft.Json.DateFormatHandling)", file="TestFixtureBase.cs", label="Exit Newtonsoft.Json.Tests.TestFixtureBase.GetOffset(System.DateTime, Newtonsoft.Json.DateFormatHandling)", span="211-211"];
m7_25 [cluster="object.GetType()", file="TestFixtureBase.cs", label="Entry object.GetType()", span="0-0"];
m7_87 [cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="TestFixtureBase.cs", label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="328-328"];
m7_88 [cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="TestFixtureBase.cs", label="expected = Normalize(expected)", span="330-330"];
m7_89 [cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="TestFixtureBase.cs", label="actual = Normalize(actual)", span="331-331"];
m7_90 [cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="TestFixtureBase.cs", label="Assert.AreEqual(expected, actual)", span="333-333"];
m7_91 [cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="TestFixtureBase.cs", label="Exit Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="328-328"];
m7_80 [cluster="Newtonsoft.Json.Tests.CustomAssert.Contains(System.Collections.IList, object)", file="TestFixtureBase.cs", label="Entry Newtonsoft.Json.Tests.CustomAssert.Contains(System.Collections.IList, object)", span="306-306"];
m7_81 [cluster="Newtonsoft.Json.Tests.CustomAssert.Contains(System.Collections.IList, object)", file="TestFixtureBase.cs", label="Contains(collection, value, null)", span="308-308"];
m7_82 [cluster="Newtonsoft.Json.Tests.CustomAssert.Contains(System.Collections.IList, object)", file="TestFixtureBase.cs", label="Exit Newtonsoft.Json.Tests.CustomAssert.Contains(System.Collections.IList, object)", span="306-306"];
m7_38 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.BytesToHex(byte[])", file="TestFixtureBase.cs", label="Entry Newtonsoft.Json.Tests.TestFixtureBase.BytesToHex(byte[])", span="219-219"];
m7_39 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.BytesToHex(byte[])", file="TestFixtureBase.cs", label="return BytesToHex(bytes, false);", span="221-221"];
m7_40 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.BytesToHex(byte[])", file="TestFixtureBase.cs", label="Exit Newtonsoft.Json.Tests.TestFixtureBase.BytesToHex(byte[])", span="219-219"];
m7_36 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeOffset(char[], int, System.TimeSpan, Newtonsoft.Json.DateFormatHandling)", file="TestFixtureBase.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeOffset(char[], int, System.TimeSpan, Newtonsoft.Json.DateFormatHandling)", span="746-746"];
m7_105 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="TestFixtureBase.cs", label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="357-357"];
m7_106 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="TestFixtureBase.cs", label="action()", span="362-362"];
m7_110 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="TestFixtureBase.cs", label="possibleMessages == null || possibleMessages.Length == 0", span="369-369"];
m7_112 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="TestFixtureBase.cs", label=possibleMessages, span="373-373"];
m7_115 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="TestFixtureBase.cs", label="throw new Exception(''Unexpected exception message.'' + Environment.NewLine + ''Expected one of: '' + string.Join(Environment.NewLine, possibleMessages) + Environment.NewLine + ''Got: '' + ex.Message + Environment.NewLine + Environment.NewLine + ex);", span="381-381"];
m7_107 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="TestFixtureBase.cs", label="Assert.Fail(''Exception of type {0} expected. No exception thrown.'', typeof(TException).Name)", span="364-364"];
m7_108 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="TestFixtureBase.cs", label="return null;", span="365-365"];
m7_109 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="TestFixtureBase.cs", label=TException, span="367-367"];
m7_111 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="TestFixtureBase.cs", label="return ex;", span="371-371"];
m7_113 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="TestFixtureBase.cs", label="StringAssert.Equals(possibleMessage, ex.Message)", span="375-375"];
m7_114 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="TestFixtureBase.cs", label="return ex;", span="377-377"];
m7_116 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="TestFixtureBase.cs", label=Exception, span="383-383"];
m7_117 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="TestFixtureBase.cs", label="throw new Exception(string.Format(''Exception of type {0} expected; got exception of type {1}.'', typeof(TException).Name, ex.GetType().Name), ex);", span="385-385"];
m7_118 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="TestFixtureBase.cs", label="Exit Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="357-357"];
m7_47 [cluster="System.BitConverter.ToString(byte[])", file="TestFixtureBase.cs", label="Entry System.BitConverter.ToString(byte[])", span="0-0"];
m7_126 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.ThrowsAsync<TException>(System.Func<System.Threading.Tasks.Task>, params string[])", file="TestFixtureBase.cs", label="Entry Newtonsoft.Json.Tests.ExceptionAssert.ThrowsAsync<TException>(System.Func<System.Threading.Tasks.Task>, params string[])", span="390-390"];
m7_127 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.ThrowsAsync<TException>(System.Func<System.Threading.Tasks.Task>, params string[])", file="TestFixtureBase.cs", label="await action()", span="395-395"];
m7_131 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.ThrowsAsync<TException>(System.Func<System.Threading.Tasks.Task>, params string[])", file="TestFixtureBase.cs", label="possibleMessages == null || possibleMessages.Length == 0", span="402-402"];
m7_133 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.ThrowsAsync<TException>(System.Func<System.Threading.Tasks.Task>, params string[])", file="TestFixtureBase.cs", label=possibleMessages, span="406-406"];
m7_136 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.ThrowsAsync<TException>(System.Func<System.Threading.Tasks.Task>, params string[])", file="TestFixtureBase.cs", label="throw new Exception(''Unexpected exception message.'' + Environment.NewLine + ''Expected one of: '' + string.Join(Environment.NewLine, possibleMessages) + Environment.NewLine + ''Got: '' + ex.Message + Environment.NewLine + Environment.NewLine + ex);", span="414-414"];
m7_128 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.ThrowsAsync<TException>(System.Func<System.Threading.Tasks.Task>, params string[])", file="TestFixtureBase.cs", label="Assert.Fail(''Exception of type {0} expected. No exception thrown.'', typeof(TException).Name)", span="397-397"];
m7_129 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.ThrowsAsync<TException>(System.Func<System.Threading.Tasks.Task>, params string[])", file="TestFixtureBase.cs", label="return null;", span="398-398"];
m7_130 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.ThrowsAsync<TException>(System.Func<System.Threading.Tasks.Task>, params string[])", file="TestFixtureBase.cs", label=TException, span="400-400"];
m7_132 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.ThrowsAsync<TException>(System.Func<System.Threading.Tasks.Task>, params string[])", file="TestFixtureBase.cs", label="return ex;", span="404-404"];
m7_134 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.ThrowsAsync<TException>(System.Func<System.Threading.Tasks.Task>, params string[])", file="TestFixtureBase.cs", label="StringAssert.Equals(possibleMessage, ex.Message)", span="408-408"];
m7_135 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.ThrowsAsync<TException>(System.Func<System.Threading.Tasks.Task>, params string[])", file="TestFixtureBase.cs", label="return ex;", span="410-410"];
m7_137 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.ThrowsAsync<TException>(System.Func<System.Threading.Tasks.Task>, params string[])", file="TestFixtureBase.cs", label=Exception, span="416-416"];
m7_138 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.ThrowsAsync<TException>(System.Func<System.Threading.Tasks.Task>, params string[])", file="TestFixtureBase.cs", label="throw new Exception(string.Format(''Exception of type {0} expected; got exception of type {1}.'', typeof(TException).Name, ex.GetType().Name), ex);", span="418-418"];
m7_139 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.ThrowsAsync<TException>(System.Func<System.Threading.Tasks.Task>, params string[])", file="TestFixtureBase.cs", label="Exit Newtonsoft.Json.Tests.ExceptionAssert.ThrowsAsync<TException>(System.Func<System.Threading.Tasks.Task>, params string[])", span="390-390"];
m7_79 [cluster="Unk.IsInstanceOf", file="TestFixtureBase.cs", label="Entry Unk.IsInstanceOf", span=""];
m7_140 [cluster="System.Func<TResult>.Invoke()", file="TestFixtureBase.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m7_141 [file="TestFixtureBase.cs", label="Newtonsoft.Json.Tests.TestFixtureBase", span=""];
m8_59 [cluster="decimal.CompareTo(decimal)", file="VersionConverterTests.cs", label="Newtonsoft.Json.Tests.Converters.VersionClass", span=""];
m8_142 [cluster="System.Convert.ToDecimal(object, System.IFormatProvider)", file="VersionConverterTests.cs", label="Entry System.Convert.ToDecimal(object, System.IFormatProvider)", span="0-0"];
m8_479 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="VersionConverterTests.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", span="1007-1007"];
m8_480 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="VersionConverterTests.cs", label="object compareValue = (arg is JValue) ? ((JValue)arg).Value : arg", span="1009-1009"];
m8_481 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="VersionConverterTests.cs", label="binder.Operation", span="1011-1011"];
m8_483 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="VersionConverterTests.cs", label="result = (Compare(instance.Type, instance.Value, compareValue) == 0)", span="1014-1014"];
m8_486 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="VersionConverterTests.cs", label="result = (Compare(instance.Type, instance.Value, compareValue) != 0)", span="1017-1017"];
m8_489 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="VersionConverterTests.cs", label="result = (Compare(instance.Type, instance.Value, compareValue) > 0)", span="1020-1020"];
m8_492 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="VersionConverterTests.cs", label="result = (Compare(instance.Type, instance.Value, compareValue) >= 0)", span="1023-1023"];
m8_495 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="VersionConverterTests.cs", label="result = (Compare(instance.Type, instance.Value, compareValue) < 0)", span="1026-1026"];
m8_498 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="VersionConverterTests.cs", label="result = (Compare(instance.Type, instance.Value, compareValue) <= 0)", span="1029-1029"];
m8_508 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="VersionConverterTests.cs", label="Operation(binder.Operation, instance.Value, compareValue, out result)", span="1039-1039"];
m8_482 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="VersionConverterTests.cs", label="ExpressionType.Equal", span="1013-1013"];
m8_485 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="VersionConverterTests.cs", label="ExpressionType.NotEqual", span="1016-1016"];
m8_488 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="VersionConverterTests.cs", label="ExpressionType.GreaterThan", span="1019-1019"];
m8_491 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="VersionConverterTests.cs", label="ExpressionType.GreaterThanOrEqual", span="1022-1022"];
m8_494 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="VersionConverterTests.cs", label="ExpressionType.LessThan", span="1025-1025"];
m8_497 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="VersionConverterTests.cs", label="ExpressionType.LessThanOrEqual", span="1028-1028"];
m8_500 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="VersionConverterTests.cs", label="ExpressionType.Add", span="1031-1031"];
m8_484 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="VersionConverterTests.cs", label="return true;", span="1015-1015"];
m8_487 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="VersionConverterTests.cs", label="return true;", span="1018-1018"];
m8_490 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="VersionConverterTests.cs", label="return true;", span="1021-1021"];
m8_493 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="VersionConverterTests.cs", label="return true;", span="1024-1024"];
m8_496 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="VersionConverterTests.cs", label="return true;", span="1027-1027"];
m8_499 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="VersionConverterTests.cs", label="return true;", span="1030-1030"];
m8_501 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="VersionConverterTests.cs", label="ExpressionType.AddAssign", span="1032-1032"];
m8_502 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="VersionConverterTests.cs", label="ExpressionType.Subtract", span="1033-1033"];
m8_503 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="VersionConverterTests.cs", label="ExpressionType.SubtractAssign", span="1034-1034"];
m8_504 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="VersionConverterTests.cs", label="ExpressionType.Multiply", span="1035-1035"];
m8_505 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="VersionConverterTests.cs", label="ExpressionType.MultiplyAssign", span="1036-1036"];
m8_506 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="VersionConverterTests.cs", label="ExpressionType.Divide", span="1037-1037"];
m8_507 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="VersionConverterTests.cs", label="ExpressionType.DivideAssign", span="1038-1038"];
m8_509 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="VersionConverterTests.cs", label="result = new JValue(result)", span="1041-1041"];
m8_511 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="VersionConverterTests.cs", label="result = null", span="1047-1047"];
m8_510 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="VersionConverterTests.cs", label="return true;", span="1042-1042"];
m8_512 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="VersionConverterTests.cs", label="return false;", span="1048-1048"];
m8_513 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="VersionConverterTests.cs", label="Exit Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", span="1007-1007"];
m8_555 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt32(System.IFormatProvider)", file="VersionConverterTests.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt32(System.IFormatProvider)", span="1146-1146"];
m8_556 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt32(System.IFormatProvider)", file="VersionConverterTests.cs", label="return (uint)this;", span="1148-1148"];
m8_557 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt32(System.IFormatProvider)", file="VersionConverterTests.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt32(System.IFormatProvider)", span="1146-1146"];
m8_537 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToChar(System.IFormatProvider)", file="VersionConverterTests.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToChar(System.IFormatProvider)", span="1116-1116"];
m8_538 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToChar(System.IFormatProvider)", file="VersionConverterTests.cs", label="return (char)this;", span="1118-1118"];
m8_539 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToChar(System.IFormatProvider)", file="VersionConverterTests.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToChar(System.IFormatProvider)", span="1116-1116"];
m8_276 [cluster="Newtonsoft.Json.Linq.JValue.CreateString(string)", file="VersionConverterTests.cs", label="Entry Newtonsoft.Json.Linq.JValue.CreateString(string)", span="586-586"];
m8_277 [cluster="Newtonsoft.Json.Linq.JValue.CreateString(string)", file="VersionConverterTests.cs", label="return new JValue(value, JTokenType.String);", span="588-588"];
m8_278 [cluster="Newtonsoft.Json.Linq.JValue.CreateString(string)", file="VersionConverterTests.cs", label="Exit Newtonsoft.Json.Linq.JValue.CreateString(string)", span="586-586"];
m8_413 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.Uri)", file="VersionConverterTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.Uri)", span="1374-1374"];
m8_156 [cluster="System.Guid.CompareTo(System.Guid)", file="VersionConverterTests.cs", label="Entry System.Guid.CompareTo(System.Guid)", span="0-0"];
m8_396 [cluster="Newtonsoft.Json.JsonWriter.WriteRawValue(string)", file="VersionConverterTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteRawValue(string)", span="900-900"];
m8_419 [cluster="int.GetHashCode()", file="VersionConverterTests.cs", label="Entry int.GetHashCode()", span="0-0"];
m8_403 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(decimal)", file="VersionConverterTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(decimal)", span="1033-1033"];
m8_392 [cluster="Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type)", file="VersionConverterTests.cs", label="Entry Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type)", span="1108-1108"];
m8_561 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt64(System.IFormatProvider)", file="VersionConverterTests.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt64(System.IFormatProvider)", span="1156-1156"];
m8_562 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt64(System.IFormatProvider)", file="VersionConverterTests.cs", label="return (ulong)this;", span="1158-1158"];
m8_563 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt64(System.IFormatProvider)", file="VersionConverterTests.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt64(System.IFormatProvider)", span="1156-1156"];
m8_16 [cluster="Newtonsoft.Json.Linq.JValue.JValue(float)", file="VersionConverterTests.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(float)", span="116-116"];
m8_405 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(float)", file="VersionConverterTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(float)", span="959-959"];
m8_525 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.GetTypeCode()", file="VersionConverterTests.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.GetTypeCode()", span="1094-1094"];
m8_526 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.GetTypeCode()", file="VersionConverterTests.cs", label="_value == null", span="1096-1096"];
m8_527 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.GetTypeCode()", file="VersionConverterTests.cs", label="return TypeCode.Empty;", span="1098-1098"];
m8_528 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.GetTypeCode()", file="VersionConverterTests.cs", label="IConvertible convertable = _value as IConvertible", span="1101-1101"];
m8_529 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.GetTypeCode()", file="VersionConverterTests.cs", label="convertable == null", span="1103-1103"];
m8_531 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.GetTypeCode()", file="VersionConverterTests.cs", label="return convertable.GetTypeCode();", span="1108-1108"];
m8_530 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.GetTypeCode()", file="VersionConverterTests.cs", label="return TypeCode.Object;", span="1105-1105"];
m8_532 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.GetTypeCode()", file="VersionConverterTests.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.GetTypeCode()", span="1094-1094"];
m8_4 [cluster="Newtonsoft.Json.Tests.Converters.VersionClass.VersionClass(string, string)", file="VersionConverterTests.cs", label="StringProperty2 = ''StringProperty2''", span="45-45"];
m8_5 [cluster="Newtonsoft.Json.Tests.Converters.VersionClass.VersionClass(string, string)", file="VersionConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.VersionClass.VersionClass(string, string)", span="40-40"];
m8_269 [cluster="object.ToString()", file="VersionConverterTests.cs", label="Entry object.ToString()", span="0-0"];
m8_143 [cluster="Newtonsoft.Json.Linq.JValue.CompareFloat(object, object)", file="VersionConverterTests.cs", label="Entry Newtonsoft.Json.Linq.JValue.CompareFloat(object, object)", span="404-404"];
m8_162 [cluster="Newtonsoft.Json.Linq.JValue.CompareFloat(object, object)", file="VersionConverterTests.cs", label="double d1 = Convert.ToDouble(objA, CultureInfo.InvariantCulture)", span="406-406"];
m8_163 [cluster="Newtonsoft.Json.Linq.JValue.CompareFloat(object, object)", file="VersionConverterTests.cs", label="double d2 = Convert.ToDouble(objB, CultureInfo.InvariantCulture)", span="407-407"];
m8_164 [cluster="Newtonsoft.Json.Linq.JValue.CompareFloat(object, object)", file="VersionConverterTests.cs", label="MathUtils.ApproxEquals(d1, d2)", span="410-410"];
m8_166 [cluster="Newtonsoft.Json.Linq.JValue.CompareFloat(object, object)", file="VersionConverterTests.cs", label="return d1.CompareTo(d2);", span="415-415"];
m8_165 [cluster="Newtonsoft.Json.Linq.JValue.CompareFloat(object, object)", file="VersionConverterTests.cs", label="return 0;", span="412-412"];
m8_167 [cluster="Newtonsoft.Json.Linq.JValue.CompareFloat(object, object)", file="VersionConverterTests.cs", label="Exit Newtonsoft.Json.Linq.JValue.CompareFloat(object, object)", span="404-404"];
m8_19 [cluster="Newtonsoft.Json.Linq.JValue.JValue(System.DateTime)", file="VersionConverterTests.cs", label="Exit Newtonsoft.Json.Linq.JValue.JValue(System.DateTime)", span="125-125"];
m8_20 [cluster="Newtonsoft.Json.Linq.JValue.JValue(System.DateTimeOffset)", color=green, community=0, file="VersionConverterTests.cs", label="0: Entry Newtonsoft.Json.Linq.JValue.JValue(System.DateTimeOffset)", span="135-135"];
m8_21 [cluster="Newtonsoft.Json.Linq.JValue.JValue(System.DateTimeOffset)", color=green, community=0, file="VersionConverterTests.cs", label="0: Exit Newtonsoft.Json.Linq.JValue.JValue(System.DateTimeOffset)", span="135-135"];
m8_22 [cluster="Newtonsoft.Json.Linq.JValue.JValue(bool)", color=green, community=0, file="VersionConverterTests.cs", label="0: Entry Newtonsoft.Json.Linq.JValue.JValue(bool)", span="145-145"];
m8_23 [cluster="Newtonsoft.Json.Linq.JValue.JValue(bool)", color=green, community=0, file="VersionConverterTests.cs", label="0: Exit Newtonsoft.Json.Linq.JValue.JValue(bool)", span="145-145"];
m8_24 [cluster="Newtonsoft.Json.Linq.JValue.JValue(string)", color=green, community=0, file="VersionConverterTests.cs", label="0: Entry Newtonsoft.Json.Linq.JValue.JValue(string)", span="154-154"];
m8_25 [cluster="Newtonsoft.Json.Linq.JValue.JValue(string)", color=green, community=0, file="VersionConverterTests.cs", label="0: Exit Newtonsoft.Json.Linq.JValue.JValue(string)", span="154-154"];
m8_26 [cluster="Newtonsoft.Json.Linq.JValue.JValue(System.Guid)", color=green, community=0, file="VersionConverterTests.cs", label="0: Entry Newtonsoft.Json.Linq.JValue.JValue(System.Guid)", span="163-163"];
m8_27 [cluster="Newtonsoft.Json.Linq.JValue.JValue(System.Guid)", file="VersionConverterTests.cs", label="Exit Newtonsoft.Json.Linq.JValue.JValue(System.Guid)", span="163-163"];
m8_18 [cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="VersionConverterTests.cs", label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="328-328"];
m8_30 [cluster="Newtonsoft.Json.Tests.Converters.VersionConverterTests.DeserializeVersionClass(string, string)", file="VersionConverterTests.cs", label="Version expectedVersion1 = new Version(version1)", span="93-93"];
m8_31 [cluster="Newtonsoft.Json.Tests.Converters.VersionConverterTests.DeserializeVersionClass(string, string)", file="VersionConverterTests.cs", label="Version expectedVersion2 = new Version(version2)", span="94-94"];
m8_145 [cluster="long.CompareTo(long)", file="VersionConverterTests.cs", label="Entry long.CompareTo(long)", span="0-0"];
m8_567 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDouble(System.IFormatProvider)", file="VersionConverterTests.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDouble(System.IFormatProvider)", span="1166-1166"];
m8_568 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDouble(System.IFormatProvider)", file="VersionConverterTests.cs", label="return (double)this;", span="1168-1168"];
m8_569 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDouble(System.IFormatProvider)", file="VersionConverterTests.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDouble(System.IFormatProvider)", span="1166-1166"];
m8_422 [cluster="Newtonsoft.Json.Linq.JValue.Equals(Newtonsoft.Json.Linq.JValue)", file="VersionConverterTests.cs", label="Entry Newtonsoft.Json.Linq.JValue.Equals(Newtonsoft.Json.Linq.JValue)", span="854-854"];
m8_423 [cluster="Newtonsoft.Json.Linq.JValue.Equals(Newtonsoft.Json.Linq.JValue)", file="VersionConverterTests.cs", label="other == null", span="856-856"];
m8_425 [cluster="Newtonsoft.Json.Linq.JValue.Equals(Newtonsoft.Json.Linq.JValue)", file="VersionConverterTests.cs", label="return ValuesEquals(this, other);", span="861-861"];
m8_424 [cluster="Newtonsoft.Json.Linq.JValue.Equals(Newtonsoft.Json.Linq.JValue)", file="VersionConverterTests.cs", label="return false;", span="858-858"];
m8_426 [cluster="Newtonsoft.Json.Linq.JValue.Equals(Newtonsoft.Json.Linq.JValue)", file="VersionConverterTests.cs", label="Exit Newtonsoft.Json.Linq.JValue.Equals(Newtonsoft.Json.Linq.JValue)", span="854-854"];
m8_150 [cluster="System.Convert.ToDateTime(object, System.IFormatProvider)", file="VersionConverterTests.cs", label="Entry System.Convert.ToDateTime(object, System.IFormatProvider)", span="0-0"];
m8_0 [cluster="Newtonsoft.Json.Linq.JValue.JValue(object, Newtonsoft.Json.Linq.JTokenType)", file="VersionConverterTests.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(object, Newtonsoft.Json.Linq.JTokenType)", span="51-51"];
m8_1 [cluster="Newtonsoft.Json.Linq.JValue.JValue(object, Newtonsoft.Json.Linq.JTokenType)", file="VersionConverterTests.cs", label="_value = value", span="53-53"];
m8_2 [cluster="Newtonsoft.Json.Linq.JValue.JValue(object, Newtonsoft.Json.Linq.JTokenType)", file="VersionConverterTests.cs", label="_valueType = type", span="54-54"];
m8_3 [cluster="Newtonsoft.Json.Linq.JValue.JValue(object, Newtonsoft.Json.Linq.JTokenType)", file="VersionConverterTests.cs", label="Exit Newtonsoft.Json.Linq.JValue.JValue(object, Newtonsoft.Json.Linq.JTokenType)", span="51-51"];
m8_564 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToSingle(System.IFormatProvider)", file="VersionConverterTests.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToSingle(System.IFormatProvider)", span="1161-1161"];
m8_565 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToSingle(System.IFormatProvider)", file="VersionConverterTests.cs", label="return (float)this;", span="1163-1163"];
m8_566 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToSingle(System.IFormatProvider)", file="VersionConverterTests.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToSingle(System.IFormatProvider)", span="1161-1161"];
m8_61 [cluster="System.Math.Truncate(double)", file="VersionConverterTests.cs", label="Entry System.Math.Truncate(double)", span="0-0"];
m8_400 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(long)", file="VersionConverterTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(long)", span="940-940"];
m8_401 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(ulong)", file="VersionConverterTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(ulong)", span="950-950"];
m8_552 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt32(System.IFormatProvider)", file="VersionConverterTests.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt32(System.IFormatProvider)", span="1141-1141"];
m8_553 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt32(System.IFormatProvider)", file="VersionConverterTests.cs", label="return (int)this;", span="1143-1143"];
m8_554 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt32(System.IFormatProvider)", file="VersionConverterTests.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt32(System.IFormatProvider)", span="1141-1141"];
m8_285 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="VersionConverterTests.cs", label="Entry Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", span="609-609"];
m8_286 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="VersionConverterTests.cs", label="value == null", span="611-611"];
m8_288 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="VersionConverterTests.cs", label="value == DBNull.Value", span="616-616"];
m8_290 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="VersionConverterTests.cs", label="value is string", span="621-621"];
m8_291 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="VersionConverterTests.cs", label="return GetStringValueType(current);", span="623-623"];
m8_292 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="VersionConverterTests.cs", label="value is long || value is int || value is short || value is sbyte\r\n                     || value is ulong || value is uint || value is ushort || value is byte", span="625-626"];
m8_294 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="VersionConverterTests.cs", label="value is Enum", span="630-630"];
m8_296 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="VersionConverterTests.cs", label="value is BigInteger", span="635-635"];
m8_298 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="VersionConverterTests.cs", label="value is double || value is float || value is decimal", span="640-640"];
m8_300 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="VersionConverterTests.cs", label="value is DateTime", span="644-644"];
m8_302 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="VersionConverterTests.cs", label="value is DateTimeOffset", span="649-649"];
m8_304 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="VersionConverterTests.cs", label="value is byte[]", span="654-654"];
m8_306 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="VersionConverterTests.cs", label="value is bool", span="658-658"];
m8_308 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="VersionConverterTests.cs", label="value is Guid", span="662-662"];
m8_310 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="VersionConverterTests.cs", label="value is Uri", span="666-666"];
m8_312 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="VersionConverterTests.cs", label="value is TimeSpan", span="670-670"];
m8_314 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="VersionConverterTests.cs", label="throw new ArgumentException(''Could not determine JSON object type for type {0}.''.FormatWith(CultureInfo.InvariantCulture, value.GetType()));", span="675-675"];
m8_287 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="VersionConverterTests.cs", label="return JTokenType.Null;", span="613-613"];
m8_289 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="VersionConverterTests.cs", label="return JTokenType.Null;", span="618-618"];
m8_293 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="VersionConverterTests.cs", label="return JTokenType.Integer;", span="628-628"];
m8_295 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="VersionConverterTests.cs", label="return JTokenType.Integer;", span="632-632"];
m8_297 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="VersionConverterTests.cs", label="return JTokenType.Integer;", span="637-637"];
m8_299 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="VersionConverterTests.cs", label="return JTokenType.Float;", span="642-642"];
m8_301 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="VersionConverterTests.cs", label="return JTokenType.Date;", span="646-646"];
m8_303 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="VersionConverterTests.cs", label="return JTokenType.Date;", span="651-651"];
m8_305 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="VersionConverterTests.cs", label="return JTokenType.Bytes;", span="656-656"];
m8_307 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="VersionConverterTests.cs", label="return JTokenType.Boolean;", span="660-660"];
m8_309 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="VersionConverterTests.cs", label="return JTokenType.Guid;", span="664-664"];
m8_311 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="VersionConverterTests.cs", label="return JTokenType.Uri;", span="668-668"];
m8_313 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="VersionConverterTests.cs", label="return JTokenType.TimeSpan;", span="672-672"];
m8_315 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="VersionConverterTests.cs", label="Exit Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", span="609-609"];
m8_64 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="VersionConverterTests.cs", label="Entry Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", span="248-248"];
m8_65 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="VersionConverterTests.cs", label="objA == null && objB == null", span="250-250"];
m8_67 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="VersionConverterTests.cs", label="objA != null && objB == null", span="254-254"];
m8_69 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="VersionConverterTests.cs", label="objA == null && objB != null", span="258-258"];
m8_71 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="VersionConverterTests.cs", label=valueType, span="263-263"];
m8_73 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="VersionConverterTests.cs", label="objA is BigInteger", span="267-267"];
m8_74 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="VersionConverterTests.cs", label="return CompareBigInteger((BigInteger)objA, objB);", span="269-269"];
m8_75 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="VersionConverterTests.cs", label="objB is BigInteger", span="271-271"];
m8_76 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="VersionConverterTests.cs", label="return -CompareBigInteger((BigInteger)objB, objA);", span="273-273"];
m8_77 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="VersionConverterTests.cs", label="objA is ulong || objB is ulong || objA is decimal || objB is decimal", span="276-276"];
m8_78 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="VersionConverterTests.cs", label="return Convert.ToDecimal(objA, CultureInfo.InvariantCulture).CompareTo(Convert.ToDecimal(objB, CultureInfo.InvariantCulture));", span="278-278"];
m8_79 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="VersionConverterTests.cs", label="objA is float || objB is float || objA is double || objB is double", span="280-280"];
m8_80 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="VersionConverterTests.cs", label="return CompareFloat(objA, objB);", span="282-282"];
m8_81 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="VersionConverterTests.cs", label="return Convert.ToInt64(objA, CultureInfo.InvariantCulture).CompareTo(Convert.ToInt64(objB, CultureInfo.InvariantCulture));", span="286-286"];
m8_83 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="VersionConverterTests.cs", label="objA is BigInteger", span="290-290"];
m8_84 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="VersionConverterTests.cs", label="return CompareBigInteger((BigInteger)objA, objB);", span="292-292"];
m8_85 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="VersionConverterTests.cs", label="objB is BigInteger", span="294-294"];
m8_86 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="VersionConverterTests.cs", label="return -CompareBigInteger((BigInteger)objB, objA);", span="296-296"];
m8_87 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="VersionConverterTests.cs", label="return CompareFloat(objA, objB);", span="299-299"];
m8_91 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="VersionConverterTests.cs", label="string s1 = Convert.ToString(objA, CultureInfo.InvariantCulture)", span="303-303"];
m8_92 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="VersionConverterTests.cs", label="string s2 = Convert.ToString(objB, CultureInfo.InvariantCulture)", span="304-304"];
m8_95 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="VersionConverterTests.cs", label="bool b1 = Convert.ToBoolean(objA, CultureInfo.InvariantCulture)", span="308-308"];
m8_96 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="VersionConverterTests.cs", label="bool b2 = Convert.ToBoolean(objB, CultureInfo.InvariantCulture)", span="309-309"];
m8_99 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="VersionConverterTests.cs", label="objA is DateTime", span="314-314"];
m8_100 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="VersionConverterTests.cs", label="DateTime date1 = (DateTime)objA", span="317-317"];
m8_102 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="VersionConverterTests.cs", label="objB is DateTimeOffset", span="321-321"];
m8_103 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="VersionConverterTests.cs", label="date2 = ((DateTimeOffset)objB).DateTime", span="323-323"];
m8_104 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="VersionConverterTests.cs", label="date2 = Convert.ToDateTime(objB, CultureInfo.InvariantCulture)", span="328-328"];
m8_106 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="VersionConverterTests.cs", label="DateTimeOffset date1 = (DateTimeOffset)objA", span="336-336"];
m8_108 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="VersionConverterTests.cs", label="objB is DateTimeOffset", span="339-339"];
m8_109 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="VersionConverterTests.cs", label="date2 = (DateTimeOffset)objB", span="341-341"];
m8_110 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="VersionConverterTests.cs", label="date2 = new DateTimeOffset(Convert.ToDateTime(objB, CultureInfo.InvariantCulture))", span="345-345"];
m8_113 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="VersionConverterTests.cs", label="!(objB is byte[])", span="352-352"];
m8_115 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="VersionConverterTests.cs", label="byte[] bytes1 = objA as byte[]", span="357-357"];
m8_116 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="VersionConverterTests.cs", label="byte[] bytes2 = objB as byte[]", span="358-358"];
m8_123 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="VersionConverterTests.cs", label="!(objB is Guid)", span="370-370"];
m8_125 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="VersionConverterTests.cs", label="Guid guid1 = (Guid)objA", span="375-375"];
m8_126 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="VersionConverterTests.cs", label="Guid guid2 = (Guid)objB", span="376-376"];
m8_129 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="VersionConverterTests.cs", label="!(objB is Uri)", span="380-380"];
m8_131 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="VersionConverterTests.cs", label="Uri uri1 = (Uri)objA", span="385-385"];
m8_132 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="VersionConverterTests.cs", label="Uri uri2 = (Uri)objB", span="386-386"];
m8_135 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="VersionConverterTests.cs", label="!(objB is TimeSpan)", span="390-390"];
m8_137 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="VersionConverterTests.cs", label="TimeSpan ts1 = (TimeSpan)objA", span="395-395"];
m8_138 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="VersionConverterTests.cs", label="TimeSpan ts2 = (TimeSpan)objB", span="396-396"];
m8_140 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="VersionConverterTests.cs", label="throw MiscellaneousUtils.CreateArgumentOutOfRangeException(''valueType'', valueType, ''Unexpected value type: {0}''.FormatWith(CultureInfo.InvariantCulture, valueType));", span="400-400"];
m8_66 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="VersionConverterTests.cs", label="return 0;", span="252-252"];
m8_68 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="VersionConverterTests.cs", label="return 1;", span="256-256"];
m8_70 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="VersionConverterTests.cs", label="return -1;", span="260-260"];
m8_72 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="VersionConverterTests.cs", label="JTokenType.Integer", span="265-265"];
m8_82 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="VersionConverterTests.cs", label="JTokenType.Float", span="288-288"];
m8_88 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="VersionConverterTests.cs", label="JTokenType.Comment", span="300-300"];
m8_94 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="VersionConverterTests.cs", label="JTokenType.Boolean", span="307-307"];
m8_98 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="VersionConverterTests.cs", label="JTokenType.Date", span="312-312"];
m8_112 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="VersionConverterTests.cs", label="JTokenType.Bytes", span="351-351"];
m8_122 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="VersionConverterTests.cs", label="JTokenType.Guid", span="369-369"];
m8_128 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="VersionConverterTests.cs", label="JTokenType.Uri", span="379-379"];
m8_134 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="VersionConverterTests.cs", label="JTokenType.TimeSpan", span="389-389"];
m8_89 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="VersionConverterTests.cs", label="JTokenType.String", span="301-301"];
m8_90 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="VersionConverterTests.cs", label="JTokenType.Raw", span="302-302"];
m8_93 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="VersionConverterTests.cs", label="return string.CompareOrdinal(s1, s2);", span="306-306"];
m8_97 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="VersionConverterTests.cs", label="return b1.CompareTo(b2);", span="311-311"];
m8_101 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="VersionConverterTests.cs", label="DateTime date2", span="318-318"];
m8_105 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="VersionConverterTests.cs", label="return date1.CompareTo(date2);", span="331-331"];
m8_107 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="VersionConverterTests.cs", label="DateTimeOffset date2", span="337-337"];
m8_111 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="VersionConverterTests.cs", label="return date1.CompareTo(date2);", span="348-348"];
m8_114 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="VersionConverterTests.cs", label="throw new ArgumentException(''Object must be of type byte[].'');", span="354-354"];
m8_117 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="VersionConverterTests.cs", label="bytes1 == null", span="359-359"];
m8_121 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="VersionConverterTests.cs", label="return MiscellaneousUtils.ByteArrayCompare(bytes1, bytes2);", span="368-368"];
m8_119 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="VersionConverterTests.cs", label="bytes2 == null", span="363-363"];
m8_118 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="VersionConverterTests.cs", label="return -1;", span="361-361"];
m8_120 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="VersionConverterTests.cs", label="return 1;", span="365-365"];
m8_124 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="VersionConverterTests.cs", label="throw new ArgumentException(''Object must be of type Guid.'');", span="372-372"];
m8_127 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="VersionConverterTests.cs", label="return guid1.CompareTo(guid2);", span="378-378"];
m8_130 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="VersionConverterTests.cs", label="throw new ArgumentException(''Object must be of type Uri.'');", span="382-382"];
m8_133 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="VersionConverterTests.cs", label="return Comparer<string>.Default.Compare(uri1.ToString(), uri2.ToString());", span="388-388"];
m8_136 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="VersionConverterTests.cs", label="throw new ArgumentException(''Object must be of type TimeSpan.'');", span="392-392"];
m8_139 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="VersionConverterTests.cs", label="return ts1.CompareTo(ts2);", span="398-398"];
m8_141 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="VersionConverterTests.cs", label="Exit Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", span="248-248"];
m8_460 [cluster="System.IFormattable.ToString(string, System.IFormatProvider)", file="VersionConverterTests.cs", label="Entry System.IFormattable.ToString(string, System.IFormatProvider)", span="0-0"];
m8_144 [cluster="System.Convert.ToInt64(object, System.IFormatProvider)", file="VersionConverterTests.cs", label="Entry System.Convert.ToInt64(object, System.IFormatProvider)", span="0-0"];
m8_38 [cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="VersionConverterTests.cs", label="other == this", span="202-202"];
m8_449 [cluster="Newtonsoft.Json.Linq.JValue.ToString(string, System.IFormatProvider)", file="VersionConverterTests.cs", label="Entry Newtonsoft.Json.Linq.JValue.ToString(string, System.IFormatProvider)", span="954-954"];
m8_453 [cluster="Newtonsoft.Json.Linq.JValue.ToString(string, System.IFormatProvider)", file="VersionConverterTests.cs", label="_value == null", span="956-956"];
m8_457 [cluster="Newtonsoft.Json.Linq.JValue.ToString(string, System.IFormatProvider)", file="VersionConverterTests.cs", label="return formattable.ToString(format, formatProvider);", span="964-964"];
m8_454 [cluster="Newtonsoft.Json.Linq.JValue.ToString(string, System.IFormatProvider)", file="VersionConverterTests.cs", label="return string.Empty;", span="958-958"];
m8_455 [cluster="Newtonsoft.Json.Linq.JValue.ToString(string, System.IFormatProvider)", file="VersionConverterTests.cs", label="IFormattable formattable = _value as IFormattable", span="961-961"];
m8_456 [cluster="Newtonsoft.Json.Linq.JValue.ToString(string, System.IFormatProvider)", file="VersionConverterTests.cs", label="formattable != null", span="962-962"];
m8_458 [cluster="Newtonsoft.Json.Linq.JValue.ToString(string, System.IFormatProvider)", file="VersionConverterTests.cs", label="return _value.ToString();", span="968-968"];
m8_459 [cluster="Newtonsoft.Json.Linq.JValue.ToString(string, System.IFormatProvider)", file="VersionConverterTests.cs", label="Exit Newtonsoft.Json.Linq.JValue.ToString(string, System.IFormatProvider)", span="954-954"];
m8_570 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDecimal(System.IFormatProvider)", file="VersionConverterTests.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDecimal(System.IFormatProvider)", span="1171-1171"];
m8_571 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDecimal(System.IFormatProvider)", file="VersionConverterTests.cs", label="return (decimal)this;", span="1173-1173"];
m8_572 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDecimal(System.IFormatProvider)", file="VersionConverterTests.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDecimal(System.IFormatProvider)", span="1171-1171"];
m8_12 [cluster="Newtonsoft.Json.Tests.Converters.VersionConverterTests.SerializeVersionClass(string, string)", color=green, community=1, file="VersionConverterTests.cs", label="0: string expectedJson = string.Format(@''{{\r\n  ''''StringProperty1'''': ''''StringProperty1'''',\r\n  ''''Version1'''': ''''{0}'''',\r\n  ''''Version2'''': ''''{1}'''',\r\n  ''''StringProperty2'''': ''''StringProperty2''''\r\n}}'', version1, version2)", span="67-72"];
m8_13 [cluster="Newtonsoft.Json.Tests.Converters.VersionConverterTests.SerializeVersionClass(string, string)", file="VersionConverterTests.cs", label="StringAssert.AreEqual(expectedJson, json)", span="74-74"];
m8_316 [cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="VersionConverterTests.cs", label="Entry Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", span="678-678"];
m8_318 [cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="VersionConverterTests.cs", label="current == null", span="680-680"];
m8_320 [cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="VersionConverterTests.cs", label="current.GetValueOrDefault()", span="685-685"];
m8_324 [cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="VersionConverterTests.cs", label="return current.GetValueOrDefault();", span="690-690"];
m8_319 [cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="VersionConverterTests.cs", label="return JTokenType.String;", span="682-682"];
m8_321 [cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="VersionConverterTests.cs", label="JTokenType.Comment", span="687-687"];
m8_325 [cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="VersionConverterTests.cs", label="return JTokenType.String;", span="692-692"];
m8_322 [cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="VersionConverterTests.cs", label="JTokenType.String", span="688-688"];
m8_323 [cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="VersionConverterTests.cs", label="JTokenType.Raw", span="689-689"];
m8_326 [cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="VersionConverterTests.cs", label="Exit Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", span="678-678"];
m8_9 [cluster="Newtonsoft.Json.Linq.JValue.JValue(decimal)", file="VersionConverterTests.cs", label="Exit Newtonsoft.Json.Linq.JValue.JValue(decimal)", span="79-79"];
m8_10 [cluster="Newtonsoft.Json.Linq.JValue.JValue(char)", color=green, community=0, file="VersionConverterTests.cs", label="0: Entry Newtonsoft.Json.Linq.JValue.JValue(char)", span="88-88"];
m8_11 [cluster="Newtonsoft.Json.Linq.JValue.JValue(char)", color=green, community=0, file="VersionConverterTests.cs", label="0: Exit Newtonsoft.Json.Linq.JValue.JValue(char)", span="88-88"];
m8_14 [cluster="Newtonsoft.Json.Linq.JValue.JValue(double)", file="VersionConverterTests.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(double)", span="107-107"];
m8_408 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.DateTimeOffset)", file="VersionConverterTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.DateTimeOffset)", span="1052-1052"];
m8_159 [cluster="System.TimeSpan.CompareTo(System.TimeSpan)", file="VersionConverterTests.cs", label="Entry System.TimeSpan.CompareTo(System.TimeSpan)", span="0-0"];
m8_152 [cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime)", file="VersionConverterTests.cs", label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime)", span="0-0"];
m8_60 [cluster="System.Convert.ToDouble(object, System.IFormatProvider)", file="VersionConverterTests.cs", label="Newtonsoft.Json.Tests.Converters.VersionConverterTests", span=""];
m8_436 [cluster="Newtonsoft.Json.Linq.JValue.GetHashCode()", file="VersionConverterTests.cs", label="Entry Newtonsoft.Json.Linq.JValue.GetHashCode()", span="896-896"];
m8_437 [cluster="Newtonsoft.Json.Linq.JValue.GetHashCode()", file="VersionConverterTests.cs", label="_value == null", span="898-898"];
m8_438 [cluster="Newtonsoft.Json.Linq.JValue.GetHashCode()", file="VersionConverterTests.cs", label="return 0;", span="900-900"];
m8_439 [cluster="Newtonsoft.Json.Linq.JValue.GetHashCode()", file="VersionConverterTests.cs", label="return _value.GetHashCode();", span="903-903"];
m8_440 [cluster="Newtonsoft.Json.Linq.JValue.GetHashCode()", file="VersionConverterTests.cs", label="Exit Newtonsoft.Json.Linq.JValue.GetHashCode()", span="896-896"];
m8_155 [cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.ByteArrayCompare(byte[], byte[])", file="VersionConverterTests.cs", label="Entry Newtonsoft.Json.Utilities.MiscellaneousUtils.ByteArrayCompare(byte[], byte[])", span="92-92"];
m8_151 [cluster="System.DateTime.CompareTo(System.DateTime)", file="VersionConverterTests.cs", label="Entry System.DateTime.CompareTo(System.DateTime)", span="0-0"];
m8_42 [cluster="Newtonsoft.Json.Tests.Converters.VersionConverterTests.DeserializeVersionClass()", file="VersionConverterTests.cs", label="DeserializeVersionClass(''1.2.0.0'', ''2.3.0.0'')", span="108-108"];
m8_420 [cluster="Newtonsoft.Json.Linq.JValue.ValuesEquals(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", file="VersionConverterTests.cs", label="return (v1 == v2 || (v1._valueType == v2._valueType && Compare(v1._valueType, v1._value, v2._value) == 0));", span="844-844"];
m8_421 [cluster="Newtonsoft.Json.Linq.JValue.ValuesEquals(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", file="VersionConverterTests.cs", label="Exit Newtonsoft.Json.Linq.JValue.ValuesEquals(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", span="842-842"];
m8_461 [cluster="Newtonsoft.Json.Linq.JValue.GetMetaObject(System.Linq.Expressions.Expression)", file="VersionConverterTests.cs", label="Entry Newtonsoft.Json.Linq.JValue.GetMetaObject(System.Linq.Expressions.Expression)", span="980-980"];
m8_462 [cluster="Newtonsoft.Json.Linq.JValue.GetMetaObject(System.Linq.Expressions.Expression)", file="VersionConverterTests.cs", label="return new DynamicProxyMetaObject<JValue>(parameter, this, new JValueDynamicProxy(), true);", span="982-982"];
m8_463 [cluster="Newtonsoft.Json.Linq.JValue.GetMetaObject(System.Linq.Expressions.Expression)", file="VersionConverterTests.cs", label="Exit Newtonsoft.Json.Linq.JValue.GetMetaObject(System.Linq.Expressions.Expression)", span="980-980"];
m8_40 [cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="VersionConverterTests.cs", label="return ValuesEquals(this, other);", span="207-207"];
m8_44 [cluster="Newtonsoft.Json.Linq.JValue.CompareBigInteger(BigInteger, object)", color=green, community=0, file="VersionConverterTests.cs", label="0: int result = i1.CompareTo(ConvertUtils.ToBigInteger(i2))", span="224-224"];
m8_43 [cluster="Newtonsoft.Json.Linq.JValue.CompareBigInteger(BigInteger, object)", file="VersionConverterTests.cs", label="Entry Newtonsoft.Json.Linq.JValue.CompareBigInteger(BigInteger, object)", span="222-222"];
m8_45 [cluster="Newtonsoft.Json.Linq.JValue.CompareBigInteger(BigInteger, object)", color=green, community=0, file="VersionConverterTests.cs", label="0: result != 0", span="226-226"];
m8_46 [cluster="Newtonsoft.Json.Linq.JValue.CompareBigInteger(BigInteger, object)", color=green, community=0, file="VersionConverterTests.cs", label="0: return result;", span="228-228"];
m8_47 [cluster="Newtonsoft.Json.Linq.JValue.CompareBigInteger(BigInteger, object)", color=green, community=1, file="VersionConverterTests.cs", label="0: i2 is decimal", span="233-233"];
m8_41 [cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="VersionConverterTests.cs", label="Exit Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", span="195-195"];
m8_48 [cluster="Newtonsoft.Json.Linq.JValue.CompareBigInteger(BigInteger, object)", file="VersionConverterTests.cs", label="decimal d = (decimal)i2", span="235-235"];
m8_464 [cluster="Newtonsoft.Json.Utilities.DynamicProxyMetaObject<T>.DynamicProxyMetaObject(System.Linq.Expressions.Expression, T, Newtonsoft.Json.Utilities.DynamicProxy<T>, bool)", file="VersionConverterTests.cs", label="Entry Newtonsoft.Json.Utilities.DynamicProxyMetaObject<T>.DynamicProxyMetaObject(System.Linq.Expressions.Expression, T, Newtonsoft.Json.Utilities.DynamicProxy<T>, bool)", span="40-40"];
m8_17 [cluster="string.Format(string, object, object)", file="VersionConverterTests.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m8_148 [cluster="System.Convert.ToBoolean(object, System.IFormatProvider)", file="VersionConverterTests.cs", label="Entry System.Convert.ToBoolean(object, System.IFormatProvider)", span="0-0"];
m8_157 [cluster="System.Uri.ToString()", file="VersionConverterTests.cs", label="Entry System.Uri.ToString()", span="0-0"];
m8_573 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDateTime(System.IFormatProvider)", file="VersionConverterTests.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDateTime(System.IFormatProvider)", span="1176-1176"];
m8_574 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDateTime(System.IFormatProvider)", file="VersionConverterTests.cs", label="return (DateTime)this;", span="1178-1178"];
m8_575 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDateTime(System.IFormatProvider)", file="VersionConverterTests.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDateTime(System.IFormatProvider)", span="1176-1176"];
m8_149 [cluster="bool.CompareTo(bool)", file="VersionConverterTests.cs", label="Entry bool.CompareTo(bool)", span="0-0"];
m8_397 [cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="VersionConverterTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteNull()", span="874-874"];
m8_28 [cluster="Newtonsoft.Json.Linq.JValue.JValue(System.Uri)", file="VersionConverterTests.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(System.Uri)", span="172-172"];
m8_34 [cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", color=green, community=0, file="VersionConverterTests.cs", label="3: Entry Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", span="195-195"];
m8_32 [cluster="Newtonsoft.Json.Linq.JValue.JValue(object)", file="VersionConverterTests.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(object)", span="190-190"];
m8_33 [cluster="Newtonsoft.Json.Linq.JValue.JValue(object)", color=green, community=0, file="VersionConverterTests.cs", label="0: Exit Newtonsoft.Json.Linq.JValue.JValue(object)", span="190-190"];
m8_35 [cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", color=green, community=0, file="VersionConverterTests.cs", label="2: JValue other = node as JValue", span="197-197"];
m8_36 [cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", color=green, community=0, file="VersionConverterTests.cs", label="2: other == null", span="198-198"];
m8_29 [cluster="Newtonsoft.Json.Linq.JValue.JValue(System.Uri)", file="VersionConverterTests.cs", label="Exit Newtonsoft.Json.Linq.JValue.JValue(System.Uri)", span="172-172"];
m8_37 [cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="VersionConverterTests.cs", label="return false;", span="200-200"];
m8_402 [cluster="Unk.WriteValue", file="VersionConverterTests.cs", label="Entry Unk.WriteValue", span=""];
m8_56 [cluster="System.Version.Version(int, int, int, int)", file="VersionConverterTests.cs", label="Entry System.Version.Version(int, int, int, int)", span="0-0"];
m8_407 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(bool)", file="VersionConverterTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(bool)", span="977-977"];
m8_6 [cluster="System.Version.Version(string)", file="VersionConverterTests.cs", label="Entry System.Version.Version(string)", span="0-0"];
m8_7 [cluster="Newtonsoft.Json.Linq.JValue.JValue(long)", file="VersionConverterTests.cs", label="Exit Newtonsoft.Json.Linq.JValue.JValue(long)", span="70-70"];
m8_160 [cluster="string.FormatWith(System.IFormatProvider, object)", file="VersionConverterTests.cs", label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47"];
m8_549 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt16(System.IFormatProvider)", file="VersionConverterTests.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt16(System.IFormatProvider)", span="1136-1136"];
m8_550 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt16(System.IFormatProvider)", file="VersionConverterTests.cs", label="return (ushort)this;", span="1138-1138"];
m8_551 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt16(System.IFormatProvider)", file="VersionConverterTests.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt16(System.IFormatProvider)", span="1136-1136"];
m8_534 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToBoolean(System.IFormatProvider)", file="VersionConverterTests.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToBoolean(System.IFormatProvider)", span="1111-1111"];
m8_535 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToBoolean(System.IFormatProvider)", file="VersionConverterTests.cs", label="return (bool)this;", span="1113-1113"];
m8_536 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToBoolean(System.IFormatProvider)", file="VersionConverterTests.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToBoolean(System.IFormatProvider)", span="1111-1111"];
m8_465 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.JValueDynamicProxy()", file="VersionConverterTests.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.JValueDynamicProxy()", span="985-985"];
m8_169 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="Entry Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", span="419-419"];
m8_170 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="objA is string || objB is string", span="421-421"];
m8_171 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="operation == ExpressionType.Add || operation == ExpressionType.AddAssign", span="423-423"];
m8_172 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="result = ((objA != null) ? objA.ToString() : null) + ((objB != null) ? objB.ToString() : null)", span="425-425"];
m8_174 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="objA is BigInteger || objB is BigInteger", span="431-431"];
m8_175 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="objA == null || objB == null", span="433-433"];
m8_178 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="BigInteger i1 = ConvertUtils.ToBigInteger(objA)", span="441-441"];
m8_179 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="BigInteger i2 = ConvertUtils.ToBigInteger(objB)", span="442-442"];
m8_180 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label=operation, span="444-444"];
m8_197 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="objA is ulong || objB is ulong || objA is decimal || objB is decimal", span="466-466"];
m8_198 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="objA == null || objB == null", span="468-468"];
m8_201 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="decimal d1 = Convert.ToDecimal(objA, CultureInfo.InvariantCulture)", span="474-474"];
m8_202 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="decimal d2 = Convert.ToDecimal(objB, CultureInfo.InvariantCulture)", span="475-475"];
m8_203 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label=operation, span="477-477"];
m8_220 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="objA is float || objB is float || objA is double || objB is double", span="497-497"];
m8_221 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="objA == null || objB == null", span="499-499"];
m8_224 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="double d1 = Convert.ToDouble(objA, CultureInfo.InvariantCulture)", span="505-505"];
m8_225 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="double d2 = Convert.ToDouble(objB, CultureInfo.InvariantCulture)", span="506-506"];
m8_226 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label=operation, span="508-508"];
m8_243 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="objA is int || objA is uint || objA is long || objA is short || objA is ushort || objA is sbyte || objA is byte ||\r\n                         objB is int || objB is uint || objB is long || objB is short || objB is ushort || objB is sbyte || objB is byte", span="528-529"];
m8_244 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="objA == null || objB == null", span="531-531"];
m8_247 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="long l1 = Convert.ToInt64(objA, CultureInfo.InvariantCulture)", span="537-537"];
m8_248 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="long l2 = Convert.ToInt64(objB, CultureInfo.InvariantCulture)", span="538-538"];
m8_249 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label=operation, span="540-540"];
m8_173 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="return true;", span="426-426"];
m8_176 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="result = null", span="435-435"];
m8_177 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="return true;", span="436-436"];
m8_183 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="result = i1 + i2", span="448-448"];
m8_187 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="result = i1 - i2", span="452-452"];
m8_191 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="result = i1 * i2", span="456-456"];
m8_195 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="result = i1 / i2", span="460-460"];
m8_181 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="ExpressionType.Add", span="446-446"];
m8_185 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="ExpressionType.Subtract", span="450-450"];
m8_189 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="ExpressionType.Multiply", span="454-454"];
m8_193 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="ExpressionType.Divide", span="458-458"];
m8_182 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="ExpressionType.AddAssign", span="447-447"];
m8_184 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="return true;", span="449-449"];
m8_186 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="ExpressionType.SubtractAssign", span="451-451"];
m8_188 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="return true;", span="453-453"];
m8_190 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="ExpressionType.MultiplyAssign", span="455-455"];
m8_192 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="return true;", span="457-457"];
m8_194 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="ExpressionType.DivideAssign", span="459-459"];
m8_196 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="return true;", span="461-461"];
m8_199 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="result = null", span="470-470"];
m8_200 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="return true;", span="471-471"];
m8_206 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="result = d1 + d2", span="481-481"];
m8_210 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="result = d1 - d2", span="485-485"];
m8_214 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="result = d1 * d2", span="489-489"];
m8_218 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="result = d1 / d2", span="493-493"];
m8_204 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="ExpressionType.Add", span="479-479"];
m8_208 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="ExpressionType.Subtract", span="483-483"];
m8_212 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="ExpressionType.Multiply", span="487-487"];
m8_216 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="ExpressionType.Divide", span="491-491"];
m8_205 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="ExpressionType.AddAssign", span="480-480"];
m8_207 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="return true;", span="482-482"];
m8_209 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="ExpressionType.SubtractAssign", span="484-484"];
m8_211 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="return true;", span="486-486"];
m8_213 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="ExpressionType.MultiplyAssign", span="488-488"];
m8_215 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="return true;", span="490-490"];
m8_217 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="ExpressionType.DivideAssign", span="492-492"];
m8_219 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="return true;", span="494-494"];
m8_222 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="result = null", span="501-501"];
m8_223 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="return true;", span="502-502"];
m8_229 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="result = d1 + d2", span="512-512"];
m8_233 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="result = d1 - d2", span="516-516"];
m8_237 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="result = d1 * d2", span="520-520"];
m8_241 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="result = d1 / d2", span="524-524"];
m8_227 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="ExpressionType.Add", span="510-510"];
m8_231 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="ExpressionType.Subtract", span="514-514"];
m8_235 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="ExpressionType.Multiply", span="518-518"];
m8_239 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="ExpressionType.Divide", span="522-522"];
m8_228 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="ExpressionType.AddAssign", span="511-511"];
m8_230 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="return true;", span="513-513"];
m8_232 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="ExpressionType.SubtractAssign", span="515-515"];
m8_234 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="return true;", span="517-517"];
m8_236 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="ExpressionType.MultiplyAssign", span="519-519"];
m8_238 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="return true;", span="521-521"];
m8_240 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="ExpressionType.DivideAssign", span="523-523"];
m8_242 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="return true;", span="525-525"];
m8_266 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="result = null", span="561-561"];
m8_245 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="result = null", span="533-533"];
m8_246 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="return true;", span="534-534"];
m8_252 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="result = l1 + l2", span="544-544"];
m8_256 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="result = l1 - l2", span="548-548"];
m8_260 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="result = l1 * l2", span="552-552"];
m8_264 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="result = l1 / l2", span="556-556"];
m8_250 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="ExpressionType.Add", span="542-542"];
m8_254 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="ExpressionType.Subtract", span="546-546"];
m8_258 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="ExpressionType.Multiply", span="550-550"];
m8_262 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="ExpressionType.Divide", span="554-554"];
m8_251 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="ExpressionType.AddAssign", span="543-543"];
m8_253 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="return true;", span="545-545"];
m8_255 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="ExpressionType.SubtractAssign", span="547-547"];
m8_257 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="return true;", span="549-549"];
m8_259 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="ExpressionType.MultiplyAssign", span="551-551"];
m8_261 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="return true;", span="553-553"];
m8_263 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="ExpressionType.DivideAssign", span="555-555"];
m8_265 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="return true;", span="557-557"];
m8_267 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="return false;", span="562-562"];
m8_268 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="VersionConverterTests.cs", label="Exit Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", span="419-419"];
m8_55 [cluster="Newtonsoft.Json.Tests.Converters.VersionConverterTests.RoundtripImplicitConverter()", file="VersionConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.VersionConverterTests.RoundtripImplicitConverter()", span="118-118"];
m8_435 [cluster="object.Equals(object)", file="VersionConverterTests.cs", label="Entry object.Equals(object)", span="0-0"];
m8_394 [cluster="Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="VersionConverterTests.cs", label="Entry Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="44-44"];
m8_579 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="VersionConverterTests.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", span="1931-1931"];
m8_57 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", file="VersionConverterTests.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object)", span="524-524"];
m8_154 [cluster="System.ArgumentException.ArgumentException(string)", file="VersionConverterTests.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m8_270 [cluster="Newtonsoft.Json.Linq.JValue.CloneToken()", file="VersionConverterTests.cs", label="Entry Newtonsoft.Json.Linq.JValue.CloneToken()", span="566-566"];
m8_271 [cluster="Newtonsoft.Json.Linq.JValue.CloneToken()", file="VersionConverterTests.cs", label="return new JValue(this);", span="568-568"];
m8_272 [cluster="Newtonsoft.Json.Linq.JValue.CloneToken()", file="VersionConverterTests.cs", label="Exit Newtonsoft.Json.Linq.JValue.CloneToken()", span="566-566"];
m8_393 [cluster="Newtonsoft.Json.JsonSerializer.CreateDefault()", file="VersionConverterTests.cs", label="Entry Newtonsoft.Json.JsonSerializer.CreateDefault()", span="544-544"];
m8_161 [cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.CreateArgumentOutOfRangeException(string, object, string)", file="VersionConverterTests.cs", label="Entry Newtonsoft.Json.Utilities.MiscellaneousUtils.CreateArgumentOutOfRangeException(string, object, string)", span="75-75"];
m8_466 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="VersionConverterTests.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", span="987-987"];
m8_467 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="VersionConverterTests.cs", label="binder.Type == typeof(JValue) || binder.Type == typeof(JToken)", span="989-989"];
m8_468 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="VersionConverterTests.cs", label="result = instance", span="991-991"];
m8_470 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="VersionConverterTests.cs", label="object value = instance.Value", span="995-995"];
m8_473 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="VersionConverterTests.cs", label="return ReflectionUtils.IsNullable(binder.Type);", span="1000-1000"];
m8_474 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="VersionConverterTests.cs", label="result = ConvertUtils.Convert(value, CultureInfo.InvariantCulture, binder.Type)", span="1003-1003"];
m8_469 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="VersionConverterTests.cs", label="return true;", span="992-992"];
m8_471 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="VersionConverterTests.cs", label="value == null", span="997-997"];
m8_472 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="VersionConverterTests.cs", label="result = null", span="999-999"];
m8_475 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="VersionConverterTests.cs", label="return true;", span="1004-1004"];
m8_476 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="VersionConverterTests.cs", label="Exit Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", span="987-987"];
m8_540 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToSByte(System.IFormatProvider)", file="VersionConverterTests.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToSByte(System.IFormatProvider)", span="1121-1121"];
m8_541 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToSByte(System.IFormatProvider)", file="VersionConverterTests.cs", label="return (sbyte)this;", span="1123-1123"];
m8_542 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToSByte(System.IFormatProvider)", file="VersionConverterTests.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToSByte(System.IFormatProvider)", span="1121-1121"];
m8_395 [cluster="Newtonsoft.Json.JsonWriter.WriteComment(string)", file="VersionConverterTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteComment(string)", span="1417-1417"];
m8_398 [cluster="Newtonsoft.Json.JsonWriter.WriteUndefined()", file="VersionConverterTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteUndefined()", span="882-882"];
m8_406 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="VersionConverterTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="912-912"];
m8_15 [cluster="Newtonsoft.Json.Linq.JValue.JValue(double)", file="VersionConverterTests.cs", label="Exit Newtonsoft.Json.Linq.JValue.JValue(double)", span="107-107"];
m8_410 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(byte[])", file="VersionConverterTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(byte[])", span="1358-1358"];
m8_409 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.DateTime)", file="VersionConverterTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.DateTime)", span="1042-1042"];
m8_446 [cluster="Newtonsoft.Json.Linq.JValue.ToString(string)", file="VersionConverterTests.cs", label="Entry Newtonsoft.Json.Linq.JValue.ToString(string)", span="929-929"];
m8_447 [cluster="Newtonsoft.Json.Linq.JValue.ToString(string)", file="VersionConverterTests.cs", label="return ToString(format, CultureInfo.CurrentCulture);", span="931-931"];
m8_448 [cluster="Newtonsoft.Json.Linq.JValue.ToString(string)", file="VersionConverterTests.cs", label="Exit Newtonsoft.Json.Linq.JValue.ToString(string)", span="929-929"];
m8_558 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt64(System.IFormatProvider)", file="VersionConverterTests.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt64(System.IFormatProvider)", span="1151-1151"];
m8_559 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt64(System.IFormatProvider)", file="VersionConverterTests.cs", label="return (long)this;", span="1153-1153"];
m8_560 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt64(System.IFormatProvider)", file="VersionConverterTests.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt64(System.IFormatProvider)", span="1151-1151"];
m8_39 [cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="VersionConverterTests.cs", label="return true;", span="204-204"];
m8_328 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="VersionConverterTests.cs", label="Entry Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", span="731-731"];
m8_329 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="VersionConverterTests.cs", label="converters != null && converters.Length > 0 && _value != null", span="733-733"];
m8_330 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="VersionConverterTests.cs", label="JsonConverter matchingConverter = JsonSerializer.GetMatchingConverter(converters, _value.GetType())", span="735-735"];
m8_332 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="VersionConverterTests.cs", label="matchingConverter.WriteJson(writer, _value, JsonSerializer.CreateDefault())", span="738-738"];
m8_336 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="VersionConverterTests.cs", label="writer.WriteComment((_value != null) ? _value.ToString() : null)", span="746-746"];
m8_339 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="VersionConverterTests.cs", label="writer.WriteRawValue((_value != null) ? _value.ToString() : null)", span="749-749"];
m8_342 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="VersionConverterTests.cs", label="writer.WriteNull()", span="752-752"];
m8_345 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="VersionConverterTests.cs", label="writer.WriteUndefined()", span="755-755"];
m8_349 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="VersionConverterTests.cs", label="writer.WriteValue((int)_value)", span="760-760"];
m8_351 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="VersionConverterTests.cs", label="writer.WriteValue((long)_value)", span="764-764"];
m8_353 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="VersionConverterTests.cs", label="writer.WriteValue((ulong)_value)", span="768-768"];
m8_355 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="VersionConverterTests.cs", label="writer.WriteValue((BigInteger)_value)", span="773-773"];
m8_356 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="VersionConverterTests.cs", label="writer.WriteValue(Convert.ToInt64(_value, CultureInfo.InvariantCulture))", span="778-778"];
m8_360 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="VersionConverterTests.cs", label="writer.WriteValue((decimal)_value)", span="784-784"];
m8_362 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="VersionConverterTests.cs", label="writer.WriteValue((double)_value)", span="788-788"];
m8_364 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="VersionConverterTests.cs", label="writer.WriteValue((float)_value)", span="792-792"];
m8_365 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="VersionConverterTests.cs", label="writer.WriteValue(Convert.ToDouble(_value, CultureInfo.InvariantCulture))", span="796-796"];
m8_368 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="VersionConverterTests.cs", label="writer.WriteValue((_value != null) ? _value.ToString() : null)", span="800-800"];
m8_371 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="VersionConverterTests.cs", label="writer.WriteValue(Convert.ToBoolean(_value, CultureInfo.InvariantCulture))", span="803-803"];
m8_375 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="VersionConverterTests.cs", label="writer.WriteValue((DateTimeOffset)_value)", span="809-809"];
m8_376 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="VersionConverterTests.cs", label="writer.WriteValue(Convert.ToDateTime(_value, CultureInfo.InvariantCulture))", span="814-814"];
m8_379 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="VersionConverterTests.cs", label="writer.WriteValue((byte[])_value)", span="818-818"];
m8_382 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="VersionConverterTests.cs", label="writer.WriteValue((_value != null) ? (Guid?)_value : null)", span="821-821"];
m8_385 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="VersionConverterTests.cs", label="writer.WriteValue((_value != null) ? (TimeSpan?)_value : null)", span="824-824"];
m8_388 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="VersionConverterTests.cs", label="writer.WriteValue((Uri)_value)", span="827-827"];
m8_334 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="VersionConverterTests.cs", label=_valueType, span="743-743"];
m8_331 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="VersionConverterTests.cs", label="matchingConverter != null && matchingConverter.CanWrite", span="736-736"];
m8_333 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="VersionConverterTests.cs", label="return;", span="739-739"];
m8_335 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="VersionConverterTests.cs", label="JTokenType.Comment", span="745-745"];
m8_338 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="VersionConverterTests.cs", label="JTokenType.Raw", span="748-748"];
m8_341 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="VersionConverterTests.cs", label="JTokenType.Null", span="751-751"];
m8_344 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="VersionConverterTests.cs", label="JTokenType.Undefined", span="754-754"];
m8_347 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="VersionConverterTests.cs", label="JTokenType.Integer", span="757-757"];
m8_358 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="VersionConverterTests.cs", label="JTokenType.Float", span="781-781"];
m8_367 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="VersionConverterTests.cs", label="JTokenType.String", span="799-799"];
m8_370 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="VersionConverterTests.cs", label="JTokenType.Boolean", span="802-802"];
m8_373 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="VersionConverterTests.cs", label="JTokenType.Date", span="805-805"];
m8_378 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="VersionConverterTests.cs", label="JTokenType.Bytes", span="817-817"];
m8_381 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="VersionConverterTests.cs", label="JTokenType.Guid", span="820-820"];
m8_384 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="VersionConverterTests.cs", label="JTokenType.TimeSpan", span="823-823"];
m8_387 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="VersionConverterTests.cs", label="JTokenType.Uri", span="826-826"];
m8_337 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="VersionConverterTests.cs", label="return;", span="747-747"];
m8_340 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="VersionConverterTests.cs", label="return;", span="750-750"];
m8_343 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="VersionConverterTests.cs", label="return;", span="753-753"];
m8_346 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="VersionConverterTests.cs", label="return;", span="756-756"];
m8_348 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="VersionConverterTests.cs", label="_value is int", span="758-758"];
m8_350 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="VersionConverterTests.cs", label="_value is long", span="762-762"];
m8_352 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="VersionConverterTests.cs", label="_value is ulong", span="766-766"];
m8_354 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="VersionConverterTests.cs", label="_value is BigInteger", span="771-771"];
m8_357 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="VersionConverterTests.cs", label="return;", span="780-780"];
m8_359 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="VersionConverterTests.cs", label="_value is decimal", span="782-782"];
m8_361 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="VersionConverterTests.cs", label="_value is double", span="786-786"];
m8_363 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="VersionConverterTests.cs", label="_value is float", span="790-790"];
m8_366 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="VersionConverterTests.cs", label="return;", span="798-798"];
m8_369 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="VersionConverterTests.cs", label="return;", span="801-801"];
m8_372 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="VersionConverterTests.cs", label="return;", span="804-804"];
m8_374 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="VersionConverterTests.cs", label="_value is DateTimeOffset", span="807-807"];
m8_377 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="VersionConverterTests.cs", label="return;", span="816-816"];
m8_380 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="VersionConverterTests.cs", label="return;", span="819-819"];
m8_383 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="VersionConverterTests.cs", label="return;", span="822-822"];
m8_386 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="VersionConverterTests.cs", label="return;", span="825-825"];
m8_389 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="VersionConverterTests.cs", label="return;", span="828-828"];
m8_391 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="VersionConverterTests.cs", label="throw MiscellaneousUtils.CreateArgumentOutOfRangeException(''TokenType'', _valueType, ''Unexpected token type.'');", span="831-831"];
m8_390 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="VersionConverterTests.cs", label="Exit Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", span="731-731"];
m8_477 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", file="VersionConverterTests.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", span="255-255"];
m8_533 [cluster="System.IConvertible.GetTypeCode()", file="VersionConverterTests.cs", label="Entry System.IConvertible.GetTypeCode()", span="0-0"];
m8_62 [cluster="System.Math.Abs(double)", file="VersionConverterTests.cs", label="Entry System.Math.Abs(double)", span="0-0"];
m8_317 [cluster="object.GetType()", file="VersionConverterTests.cs", label="Entry object.GetType()", span="0-0"];
m8_50 [cluster="Newtonsoft.Json.Tests.Converters.VersionConverterTests.RoundtripImplicitConverter()", file="VersionConverterTests.cs", label="var version = new Version(1, 0, 0, 0)", span="120-120"];
m8_51 [cluster="Newtonsoft.Json.Tests.Converters.VersionConverterTests.RoundtripImplicitConverter()", file="VersionConverterTests.cs", label="string reportJSON = JsonConvert.SerializeObject(version)", span="121-121"];
m8_53 [cluster="Newtonsoft.Json.Tests.Converters.VersionConverterTests.RoundtripImplicitConverter()", file="VersionConverterTests.cs", label="string reportJSON2 = JsonConvert.SerializeObject(report2)", span="125-125"];
m8_49 [cluster="Newtonsoft.Json.Tests.Converters.VersionConverterTests.RoundtripImplicitConverter()", file="VersionConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.VersionConverterTests.RoundtripImplicitConverter()", span="118-118"];
m8_52 [cluster="Newtonsoft.Json.Tests.Converters.VersionConverterTests.RoundtripImplicitConverter()", file="VersionConverterTests.cs", label="Version report2 = JsonConvert.DeserializeObject<Version>(reportJSON)", span="124-124"];
m8_54 [cluster="Newtonsoft.Json.Tests.Converters.VersionConverterTests.RoundtripImplicitConverter()", file="VersionConverterTests.cs", label="Assert.AreEqual(reportJSON, reportJSON2)", span="127-127"];
m8_412 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.TimeSpan?)", file="VersionConverterTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.TimeSpan?)", span="1342-1342"];
m8_168 [cluster="Newtonsoft.Json.Utilities.MathUtils.ApproxEquals(double, double)", file="VersionConverterTests.cs", label="Entry Newtonsoft.Json.Utilities.MathUtils.ApproxEquals(double, double)", span="171-171"];
m8_63 [cluster="double.CompareTo(double)", file="VersionConverterTests.cs", label="Entry double.CompareTo(double)", span="0-0"];
m8_147 [cluster="string.CompareOrdinal(string, string)", file="VersionConverterTests.cs", label="Entry string.CompareOrdinal(string, string)", span="0-0"];
m8_411 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.Guid?)", file="VersionConverterTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.Guid?)", span="1326-1326"];
m8_327 [cluster="System.Nullable<T>.GetValueOrDefault()", file="VersionConverterTests.cs", label="Entry System.Nullable<T>.GetValueOrDefault()", span="0-0"];
m8_58 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="VersionConverterTests.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="703-703"];
m8_146 [cluster="System.Convert.ToString(object, System.IFormatProvider)", file="VersionConverterTests.cs", label="Entry System.Convert.ToString(object, System.IFormatProvider)", span="0-0"];
m8_418 [cluster="object.GetHashCode()", file="VersionConverterTests.cs", label="Entry object.GetHashCode()", span="0-0"];
m8_546 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt16(System.IFormatProvider)", file="VersionConverterTests.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt16(System.IFormatProvider)", span="1131-1131"];
m8_547 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt16(System.IFormatProvider)", file="VersionConverterTests.cs", label="return (short)this;", span="1133-1133"];
m8_548 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt16(System.IFormatProvider)", file="VersionConverterTests.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt16(System.IFormatProvider)", span="1131-1131"];
m8_273 [cluster="Newtonsoft.Json.Linq.JValue.CreateComment(string)", file="VersionConverterTests.cs", label="Entry Newtonsoft.Json.Linq.JValue.CreateComment(string)", span="576-576"];
m8_274 [cluster="Newtonsoft.Json.Linq.JValue.CreateComment(string)", file="VersionConverterTests.cs", label="return new JValue(value, JTokenType.Comment);", span="578-578"];
m8_275 [cluster="Newtonsoft.Json.Linq.JValue.CreateComment(string)", file="VersionConverterTests.cs", label="Exit Newtonsoft.Json.Linq.JValue.CreateComment(string)", span="576-576"];
m8_450 [cluster="Newtonsoft.Json.Linq.JValue.ToString(System.IFormatProvider)", file="VersionConverterTests.cs", label="Entry Newtonsoft.Json.Linq.JValue.ToString(System.IFormatProvider)", span="941-941"];
m8_451 [cluster="Newtonsoft.Json.Linq.JValue.ToString(System.IFormatProvider)", file="VersionConverterTests.cs", label="return ToString(null, formatProvider);", span="943-943"];
m8_452 [cluster="Newtonsoft.Json.Linq.JValue.ToString(System.IFormatProvider)", file="VersionConverterTests.cs", label="Exit Newtonsoft.Json.Linq.JValue.ToString(System.IFormatProvider)", span="941-941"];
m8_414 [cluster="Newtonsoft.Json.Linq.JValue.GetDeepHashCode()", file="VersionConverterTests.cs", label="Entry Newtonsoft.Json.Linq.JValue.GetDeepHashCode()", span="834-834"];
m8_415 [cluster="Newtonsoft.Json.Linq.JValue.GetDeepHashCode()", file="VersionConverterTests.cs", label="int valueHashCode = (_value != null) ? _value.GetHashCode() : 0", span="836-836"];
m8_416 [cluster="Newtonsoft.Json.Linq.JValue.GetDeepHashCode()", file="VersionConverterTests.cs", label="return ((int)_valueType).GetHashCode() ^ valueHashCode;", span="839-839"];
m8_417 [cluster="Newtonsoft.Json.Linq.JValue.GetDeepHashCode()", file="VersionConverterTests.cs", label="Exit Newtonsoft.Json.Linq.JValue.GetDeepHashCode()", span="834-834"];
m8_576 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="VersionConverterTests.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToType(System.Type, System.IFormatProvider)", span="1181-1181"];
m8_577 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="VersionConverterTests.cs", label="return ToObject(conversionType);", span="1183-1183"];
m8_578 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="VersionConverterTests.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToType(System.Type, System.IFormatProvider)", span="1181-1181"];
m8_543 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToByte(System.IFormatProvider)", file="VersionConverterTests.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToByte(System.IFormatProvider)", span="1126-1126"];
m8_544 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToByte(System.IFormatProvider)", file="VersionConverterTests.cs", label="return (byte)this;", span="1128-1128"];
m8_545 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToByte(System.IFormatProvider)", file="VersionConverterTests.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToByte(System.IFormatProvider)", span="1126-1126"];
m8_158 [cluster="System.Collections.Generic.Comparer<T>.Compare(T, T)", file="VersionConverterTests.cs", label="Entry System.Collections.Generic.Comparer<T>.Compare(T, T)", span="0-0"];
m8_520 [cluster="Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", file="VersionConverterTests.cs", label="Entry Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", span="1083-1083"];
m8_521 [cluster="Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", file="VersionConverterTests.cs", label="obj == null", span="1085-1085"];
m8_523 [cluster="Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", file="VersionConverterTests.cs", label="return Compare(_valueType, _value, obj._value);", span="1090-1090"];
m8_522 [cluster="Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", file="VersionConverterTests.cs", label="return 1;", span="1087-1087"];
m8_524 [cluster="Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", file="VersionConverterTests.cs", label="Exit Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", span="1083-1083"];
m8_404 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(double)", file="VersionConverterTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(double)", span="968-968"];
m8_279 [cluster="Newtonsoft.Json.Linq.JValue.CreateNull()", file="VersionConverterTests.cs", label="Entry Newtonsoft.Json.Linq.JValue.CreateNull()", span="595-595"];
m8_280 [cluster="Newtonsoft.Json.Linq.JValue.CreateNull()", file="VersionConverterTests.cs", label="return new JValue(null, JTokenType.Null);", span="597-597"];
m8_281 [cluster="Newtonsoft.Json.Linq.JValue.CreateNull()", file="VersionConverterTests.cs", label="Exit Newtonsoft.Json.Linq.JValue.CreateNull()", span="595-595"];
m8_153 [cluster="System.DateTimeOffset.CompareTo(System.DateTimeOffset)", file="VersionConverterTests.cs", label="Entry System.DateTimeOffset.CompareTo(System.DateTimeOffset)", span="0-0"];
m8_427 [cluster="Newtonsoft.Json.Linq.JValue.Equals(object)", file="VersionConverterTests.cs", label="Entry Newtonsoft.Json.Linq.JValue.Equals(object)", span="874-874"];
m8_428 [cluster="Newtonsoft.Json.Linq.JValue.Equals(object)", file="VersionConverterTests.cs", label="obj == null", span="876-876"];
m8_430 [cluster="Newtonsoft.Json.Linq.JValue.Equals(object)", file="VersionConverterTests.cs", label="JValue otherValue = obj as JValue", span="881-881"];
m8_433 [cluster="Newtonsoft.Json.Linq.JValue.Equals(object)", file="VersionConverterTests.cs", label="return base.Equals(obj);", span="887-887"];
m8_429 [cluster="Newtonsoft.Json.Linq.JValue.Equals(object)", file="VersionConverterTests.cs", label="return false;", span="878-878"];
m8_431 [cluster="Newtonsoft.Json.Linq.JValue.Equals(object)", file="VersionConverterTests.cs", label="otherValue != null", span="882-882"];
m8_432 [cluster="Newtonsoft.Json.Linq.JValue.Equals(object)", file="VersionConverterTests.cs", label="return Equals(otherValue);", span="884-884"];
m8_434 [cluster="Newtonsoft.Json.Linq.JValue.Equals(object)", file="VersionConverterTests.cs", label="Exit Newtonsoft.Json.Linq.JValue.Equals(object)", span="874-874"];
m8_8 [cluster="Newtonsoft.Json.Linq.JValue.JValue(decimal)", file="VersionConverterTests.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(decimal)", span="79-79"];
m8_441 [cluster="Newtonsoft.Json.Linq.JValue.ToString()", file="VersionConverterTests.cs", label="Entry Newtonsoft.Json.Linq.JValue.ToString()", span="912-912"];
m8_442 [cluster="Newtonsoft.Json.Linq.JValue.ToString()", file="VersionConverterTests.cs", label="_value == null", span="914-914"];
m8_443 [cluster="Newtonsoft.Json.Linq.JValue.ToString()", file="VersionConverterTests.cs", label="return string.Empty;", span="916-916"];
m8_444 [cluster="Newtonsoft.Json.Linq.JValue.ToString()", file="VersionConverterTests.cs", label="return _value.ToString();", span="919-919"];
m8_445 [cluster="Newtonsoft.Json.Linq.JValue.ToString()", file="VersionConverterTests.cs", label="Exit Newtonsoft.Json.Linq.JValue.ToString()", span="912-912"];
m8_478 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="VersionConverterTests.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", span="403-403"];
m8_514 [cluster="Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", file="VersionConverterTests.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", span="1053-1053"];
m8_515 [cluster="Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", file="VersionConverterTests.cs", label="obj == null", span="1055-1055"];
m8_517 [cluster="Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", file="VersionConverterTests.cs", label="object otherValue = (obj is JValue) ? ((JValue)obj).Value : obj", span="1060-1060"];
m8_516 [cluster="Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", file="VersionConverterTests.cs", label="return 1;", span="1057-1057"];
m8_518 [cluster="Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", file="VersionConverterTests.cs", label="return Compare(_valueType, _value, otherValue);", span="1062-1062"];
m8_519 [cluster="Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", file="VersionConverterTests.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", span="1053-1053"];
m8_399 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(int)", file="VersionConverterTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(int)", span="921-921"];
m8_282 [cluster="Newtonsoft.Json.Linq.JValue.CreateUndefined()", file="VersionConverterTests.cs", label="Entry Newtonsoft.Json.Linq.JValue.CreateUndefined()", span="604-604"];
m8_283 [cluster="Newtonsoft.Json.Linq.JValue.CreateUndefined()", file="VersionConverterTests.cs", label="return new JValue(null, JTokenType.Undefined);", span="606-606"];
m8_284 [cluster="Newtonsoft.Json.Linq.JValue.CreateUndefined()", file="VersionConverterTests.cs", label="Exit Newtonsoft.Json.Linq.JValue.CreateUndefined()", span="604-604"];
m8_580 [file="VersionConverterTests.cs", label="Newtonsoft.Json.Linq.JValue", span=""];
m0_13 -> m0_14  [color=green, key=0, style=solid];
m0_13 -> m0_120  [color=green, key=2, style=dotted];
m0_5 -> m0_6  [color=green, key=0, style=solid];
m0_5 -> m0_7  [color=green, key=2, style=dotted];
m0_85 -> m0_86  [key=0, style=solid];
m0_86 -> m0_87  [key=0, style=solid];
m0_86 -> m0_94  [key=2, style=dotted];
m0_86 -> m0_89  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_86 -> m0_91  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_87 -> m0_88  [key=0, style=solid];
m0_87 -> m0_95  [key=2, style=dotted];
m0_89 -> m0_90  [key=0, style=solid];
m0_89 -> m0_5  [key=2, style=dotted];
m0_89 -> m0_14  [key=2, style=dotted];
m0_91 -> m0_92  [key=0, style=solid];
m0_91 -> m0_5  [key=2, style=dotted];
m0_91 -> m0_14  [key=2, style=dotted];
m0_88 -> m0_89  [key=0, style=solid];
m0_88 -> m0_15  [key=2, style=dotted];
m0_90 -> m0_91  [key=0, style=solid];
m0_90 -> m0_15  [key=2, style=dotted];
m0_92 -> m0_93  [key=0, style=solid];
m0_92 -> m0_15  [key=2, style=dotted];
m0_93 -> m0_85  [color=blue, key=0, style=bold];
m0_127 -> m0_128  [key=0, style=solid];
m0_127 -> m0_129  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.ExportFormat?", style=dashed];
m0_127 -> m0_130  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_127 -> m0_4  [color=green, key=3, label="Local variable string str", style=bold];
m0_127 -> m0_113  [key=0, style=solid];
m0_128 -> m0_129  [key=0, style=solid];
m0_128 -> m0_130  [key=0, style=solid];
m0_129 -> m0_131  [key=0, style=solid];
m0_130 -> m0_131  [key=0, style=solid];
m0_131 -> m0_127  [color=blue, key=0, style=bold];
m0_3 -> m0_4  [color=green, key=0, style=solid];
m0_3 -> m0_7  [key=2, style=dotted];
m0_4 -> m0_5  [color=green, key=0, style=solid];
m0_4 -> m0_120  [color=green, key=2, style=dotted];
m0_4 -> m0_0  [color=blue, key=0, style=bold];
m0_6 -> m0_3  [color=blue, key=0, style=bold];
m0_8 -> m0_9  [key=0, style=solid];
m0_9 -> m0_10  [color=green, key=0, style=solid];
m0_9 -> m0_13  [key=2, style=dotted];
m0_10 -> m0_11  [color=green, key=0, style=solid];
m0_10 -> m0_5  [key=2, style=dotted];
m0_10 -> m0_14  [key=2, style=dotted];
m0_11 -> m0_12  [key=0, style=solid];
m0_11 -> m0_15  [key=2, style=dotted];
m0_11 -> m0_9  [color=blue, key=0, style=bold];
m0_12 -> m0_8  [color=blue, key=0, style=bold];
m0_12 -> m0_13  [color=green, key=0, style=solid];
m0_124 -> m0_125  [key=0, style=solid];
m0_125 -> m0_126  [key=0, style=solid];
m0_126 -> m0_124  [color=blue, key=0, style=bold];
m0_138 -> m0_139  [key=0, style=solid];
m0_139 -> m0_140  [key=0, style=solid];
m0_139 -> m0_144  [key=2, style=dotted];
m0_140 -> m0_141  [key=0, style=solid];
m0_141 -> m0_142  [key=0, style=solid];
m0_142 -> m0_143  [key=0, style=solid];
m0_143 -> m0_138  [color=blue, key=0, style=bold];
m0_14 -> m0_15  [color=green, key=0, style=solid];
m0_14 -> m0_7  [color=green, key=2, style=dotted];
m0_60 -> m0_61  [key=0, style=solid];
m0_61 -> m0_62  [key=0, style=solid];
m0_61 -> m0_66  [key=2, style=dotted];
m0_61 -> m0_67  [key=2, style=dotted];
m0_62 -> m0_63  [key=0, style=solid];
m0_62 -> m0_66  [key=2, style=dotted];
m0_62 -> m0_67  [key=2, style=dotted];
m0_63 -> m0_64  [key=0, style=solid];
m0_63 -> m0_66  [key=2, style=dotted];
m0_63 -> m0_68  [key=2, style=dotted];
m0_64 -> m0_65  [key=0, style=solid];
m0_64 -> m0_66  [key=2, style=dotted];
m0_64 -> m0_68  [key=2, style=dotted];
m0_65 -> m0_60  [color=blue, key=0, style=bold];
m0_23 -> m0_24  [key=0, style=solid];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_33  [key=2, style=dotted];
m0_24 -> m0_5  [key=2, style=dotted];
m0_24 -> m0_14  [key=2, style=dotted];
m0_25 -> m0_26  [key=0, style=solid];
m0_25 -> m0_7  [key=2, style=dotted];
m0_26 -> m0_27  [key=0, style=solid];
m0_26 -> m0_33  [key=2, style=dotted];
m0_26 -> m0_5  [key=2, style=dotted];
m0_26 -> m0_14  [key=2, style=dotted];
m0_27 -> m0_28  [key=0, style=solid];
m0_27 -> m0_7  [key=2, style=dotted];
m0_28 -> m0_29  [key=0, style=solid];
m0_28 -> m0_33  [key=2, style=dotted];
m0_28 -> m0_5  [key=2, style=dotted];
m0_28 -> m0_14  [key=2, style=dotted];
m0_29 -> m0_30  [key=0, style=solid];
m0_29 -> m0_7  [key=2, style=dotted];
m0_30 -> m0_31  [key=0, style=solid];
m0_30 -> m0_33  [key=2, style=dotted];
m0_30 -> m0_5  [key=2, style=dotted];
m0_30 -> m0_14  [key=2, style=dotted];
m0_31 -> m0_32  [key=0, style=solid];
m0_31 -> m0_7  [key=2, style=dotted];
m0_32 -> m0_23  [color=blue, key=0, style=bold];
m0_116 -> m0_117  [key=0, style=solid];
m0_117 -> m0_118  [key=0, style=solid];
m0_117 -> m0_120  [key=2, style=dotted];
m0_118 -> m0_119  [key=0, style=solid];
m0_118 -> m0_7  [key=2, style=dotted];
m0_119 -> m0_116  [color=blue, key=0, style=bold];
m0_34 -> m0_35  [key=0, style=solid];
m0_34 -> m0_50  [key=0, style=solid];
m0_35 -> m0_36  [key=0, style=solid];
m0_35 -> m0_38  [color=darkseagreen4, key=1, label=json, style=dashed];
m0_35 -> m0_42  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m0_36 -> m0_37  [key=0, style=solid];
m0_36 -> m0_5  [key=2, style=dotted];
m0_36 -> m0_6  [key=2, style=dotted];
m0_38 -> m0_39  [key=0, style=solid];
m0_38 -> m0_5  [key=2, style=dotted];
m0_38 -> m0_6  [key=2, style=dotted];
m0_37 -> m0_38  [key=0, style=solid];
m0_37 -> m0_7  [key=2, style=dotted];
m0_39 -> m0_40  [key=0, style=solid];
m0_39 -> m0_7  [key=2, style=dotted];
m0_50 -> m0_4  [color=green, key=3, label="Local variable string json", style=bold];
m0_50 -> m0_36  [key=0, style=solid];
m0_50 -> m0_38  [color=darkseagreen4, key=1, label=json, style=dashed];
m0_50 -> m0_51  [key=0, style=solid];
m0_40 -> m0_34  [color=blue, key=0, style=bold];
m0_55 -> m0_56  [key=0, style=solid];
m0_56 -> m0_57  [key=0, style=solid];
m0_56 -> m0_49  [key=2, style=dotted];
m0_57 -> m0_58  [key=0, style=solid];
m0_57 -> m0_5  [key=2, style=dotted];
m0_57 -> m0_14  [key=2, style=dotted];
m0_58 -> m0_59  [key=0, style=solid];
m0_58 -> m0_7  [key=2, style=dotted];
m0_59 -> m0_55  [color=blue, key=0, style=bold];
m0_121 -> m0_122  [key=0, style=solid];
m0_122 -> m0_123  [key=0, style=solid];
m0_123 -> m0_121  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [color=green, key=0, style=solid];
m0_1 -> m0_2  [color=green, key=0, style=solid];
m0_1 -> m0_1  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m0_2 -> m0_0  [color=blue, key=0, style=bold];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_5  [key=2, style=dotted];
m0_2 -> m0_6  [key=2, style=dotted];
m0_15 -> m0_12  [color=blue, key=0, style=bold];
m0_120 -> m0_4  [color=green, key=3, label="Local variable string json", style=bold];
m0_120 -> m0_106  [key=0, style=solid];
m0_49 -> m0_50  [key=0, style=solid];
m0_51 -> m0_52  [key=0, style=solid];
m0_52 -> m0_53  [key=0, style=solid];
m0_53 -> m0_54  [key=0, style=solid];
m0_54 -> m0_49  [color=blue, key=0, style=bold];
m0_145 -> m0_146  [key=0, style=solid];
m0_146 -> m0_147  [key=0, style=solid];
m0_146 -> m0_144  [key=2, style=dotted];
m0_147 -> m0_148  [key=0, style=solid];
m0_148 -> m0_149  [key=0, style=solid];
m0_149 -> m0_145  [color=blue, key=0, style=bold];
m0_41 -> m0_42  [key=0, style=solid];
m0_42 -> m0_43  [key=0, style=solid];
m0_42 -> m0_5  [key=2, style=dotted];
m0_42 -> m0_6  [key=2, style=dotted];
m0_42 -> m0_44  [color=darkseagreen4, key=1, label=c1, style=dashed];
m0_43 -> m0_44  [key=0, style=solid];
m0_43 -> m0_7  [key=2, style=dotted];
m0_44 -> m0_45  [key=0, style=solid];
m0_44 -> m0_7  [key=2, style=dotted];
m0_45 -> m0_46  [key=0, style=solid];
m0_45 -> m0_5  [key=2, style=dotted];
m0_45 -> m0_6  [key=2, style=dotted];
m0_45 -> m0_47  [color=darkseagreen4, key=1, label=c2, style=dashed];
m0_46 -> m0_47  [key=0, style=solid];
m0_46 -> m0_7  [key=2, style=dotted];
m0_47 -> m0_48  [key=0, style=solid];
m0_47 -> m0_7  [key=2, style=dotted];
m0_48 -> m0_41  [color=blue, key=0, style=bold];
m0_69 -> m0_70  [key=0, style=solid];
m0_70 -> m0_71  [key=0, style=solid];
m0_70 -> m0_78  [key=2, style=dotted];
m0_70 -> m0_73  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_70 -> m0_75  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_71 -> m0_72  [key=0, style=solid];
m0_71 -> m0_79  [key=2, style=dotted];
m0_71 -> m0_73  [color=darkseagreen4, key=1, label=jsonSerializer, style=dashed];
m0_73 -> m0_74  [key=0, style=solid];
m0_73 -> m0_81  [key=2, style=dotted];
m0_75 -> m0_76  [key=0, style=solid];
m0_75 -> m0_84  [key=2, style=dotted];
m0_72 -> m0_73  [key=0, style=solid];
m0_72 -> m0_80  [key=2, style=dotted];
m0_72 -> m0_74  [color=darkseagreen4, key=1, label=ms, style=dashed];
m0_74 -> m0_75  [key=0, style=solid];
m0_74 -> m0_82  [key=2, style=dotted];
m0_74 -> m0_83  [key=2, style=dotted];
m0_74 -> m0_7  [key=2, style=dotted];
m0_76 -> m0_77  [key=0, style=solid];
m0_76 -> m0_7  [key=2, style=dotted];
m0_77 -> m0_69  [color=blue, key=0, style=bold];
m0_111 -> m0_112  [key=0, style=solid];
m0_111 -> m0_127  [key=0, style=solid];
m0_112 -> m0_113  [key=0, style=solid];
m0_112 -> m0_42  [color=darkorchid, key=3, label="Local variable string str", style=bold];
m0_113 -> m0_114  [key=0, style=solid];
m0_113 -> m0_5  [key=2, style=dotted];
m0_113 -> m0_6  [key=2, style=dotted];
m0_114 -> m0_115  [key=0, style=solid];
m0_114 -> m0_7  [key=2, style=dotted];
m0_115 -> m0_111  [color=blue, key=0, style=bold];
m0_16 -> m0_17  [key=0, style=solid];
m0_17 -> m0_18  [key=0, style=solid];
m0_17 -> m0_13  [key=2, style=dotted];
m0_17 -> m0_20  [color=darkseagreen4, key=1, label=invoice, style=dashed];
m0_18 -> m0_19  [key=0, style=solid];
m0_18 -> m0_5  [key=2, style=dotted];
m0_18 -> m0_14  [key=2, style=dotted];
m0_20 -> m0_21  [key=0, style=solid];
m0_20 -> m0_5  [key=2, style=dotted];
m0_20 -> m0_14  [key=2, style=dotted];
m0_19 -> m0_20  [key=0, style=solid];
m0_19 -> m0_15  [key=2, style=dotted];
m0_21 -> m0_22  [key=0, style=solid];
m0_21 -> m0_15  [key=2, style=dotted];
m0_22 -> m0_16  [color=blue, key=0, style=bold];
m0_104 -> m0_105  [key=0, style=solid];
m0_104 -> m0_120  [key=0, style=solid];
m0_105 -> m0_106  [key=0, style=solid];
m0_105 -> m0_42  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m0_106 -> m0_107  [key=0, style=solid];
m0_106 -> m0_5  [key=2, style=dotted];
m0_106 -> m0_6  [key=2, style=dotted];
m0_106 -> m0_108  [color=darkseagreen4, key=1, label=o, style=dashed];
m0_106 -> m0_109  [color=darkseagreen4, key=1, label=o, style=dashed];
m0_107 -> m0_108  [key=0, style=solid];
m0_107 -> m0_7  [key=2, style=dotted];
m0_108 -> m0_109  [key=0, style=solid];
m0_108 -> m0_7  [key=2, style=dotted];
m0_109 -> m0_110  [key=0, style=solid];
m0_109 -> m0_7  [key=2, style=dotted];
m0_110 -> m0_104  [color=blue, key=0, style=bold];
m0_132 -> m0_133  [key=0, style=solid];
m0_133 -> m0_134  [key=0, style=solid];
m0_133 -> m0_133  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m0_134 -> m0_135  [key=0, style=solid];
m0_134 -> m0_5  [key=2, style=dotted];
m0_134 -> m0_6  [key=2, style=dotted];
m0_134 -> m0_136  [color=darkseagreen4, key=1, label=o, style=dashed];
m0_135 -> m0_136  [key=0, style=solid];
m0_135 -> m0_7  [key=2, style=dotted];
m0_136 -> m0_137  [key=0, style=solid];
m0_136 -> m0_7  [key=2, style=dotted];
m0_137 -> m0_132  [color=blue, key=0, style=bold];
m0_96 -> m0_97  [key=0, style=solid];
m0_97 -> m0_98  [key=0, style=solid];
m0_97 -> m0_97  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m0_98 -> m0_99  [key=0, style=solid];
m0_98 -> m0_5  [key=2, style=dotted];
m0_98 -> m0_6  [key=2, style=dotted];
m0_98 -> m0_100  [color=darkseagreen4, key=1, label=o, style=dashed];
m0_98 -> m0_101  [color=darkseagreen4, key=1, label=o, style=dashed];
m0_98 -> m0_102  [color=darkseagreen4, key=1, label=o, style=dashed];
m0_99 -> m0_100  [key=0, style=solid];
m0_99 -> m0_7  [key=2, style=dotted];
m0_100 -> m0_101  [key=0, style=solid];
m0_100 -> m0_7  [key=2, style=dotted];
m0_101 -> m0_102  [key=0, style=solid];
m0_101 -> m0_7  [key=2, style=dotted];
m0_102 -> m0_103  [key=0, style=solid];
m0_102 -> m0_7  [key=2, style=dotted];
m0_103 -> m0_96  [color=blue, key=0, style=bold];
m0_150 -> m0_50  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.NetworkUser", style=dashed];
m0_150 -> m0_51  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.NetworkUser", style=dashed];
m0_150 -> m0_52  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.NetworkUser", style=dashed];
m0_150 -> m0_53  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.NetworkUser", style=dashed];
m0_151 -> m0_122  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.FieldExportFormat", style=dashed];
m0_151 -> m0_125  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.FieldExportFormat", style=dashed];
m0_151 -> m0_129  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.FieldExportFormat", style=dashed];
m0_151 -> m0_130  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.FieldExportFormat", style=dashed];
m0_152 -> m0_139  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingDeserializeHolder", style=dashed];
m0_152 -> m0_140  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingDeserializeHolder", style=dashed];
m0_152 -> m0_141  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingDeserializeHolder", style=dashed];
m0_152 -> m0_142  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingDeserializeHolder", style=dashed];
m0_153 -> m0_146  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingDeserializePopulate", style=dashed];
m0_153 -> m0_147  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingDeserializePopulate", style=dashed];
m0_153 -> m0_148  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingDeserializePopulate", style=dashed];
m0_164 -> m0_1  [color=green, key=1, label="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DefaultValueWithConstructorAndRename", style=dashed];
m0_165 -> m0_10  [color=green, key=1, label="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DefaultValueWithConstructor", style=dashed];
m1_56 -> m1_59  [color=darkseagreen4, key=1, label=sw, style=dashed];
m1_56 -> m1_57  [key=0, style=solid];
m1_56 -> m1_61  [key=2, style=dotted];
m1_20 -> m1_21  [key=0, style=solid];
m1_20 -> m1_8  [key=2, style=dotted];
m1_20 -> m1_9  [key=2, style=dotted];
m1_20 -> m1_28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_34 -> m1_35  [key=0, style=solid];
m1_157 -> m1_158  [key=0, style=solid];
m1_166 -> m1_22  [key=2, style=dotted];
m1_166 -> m1_167  [key=0, style=solid];
m1_159 -> m1_15  [key=2, style=dotted];
m1_159 -> m1_160  [key=0, style=solid];
m1_159 -> m1_161  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_159 -> m1_162  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_159 -> m1_163  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_164 -> m1_166  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_164 -> m1_64  [key=2, style=dotted];
m1_164 -> m1_165  [key=0, style=solid];
m1_165 -> m1_166  [key=0, style=solid];
m1_158 -> m1_159  [key=0, style=solid];
m1_158 -> m1_164  [color=darkseagreen4, key=1, label=sw, style=dashed];
m1_158 -> m1_61  [key=2, style=dotted];
m1_160 -> m1_161  [key=0, style=solid];
m1_160 -> m1_162  [color=darkseagreen4, key=1, label=value, style=dashed];
m1_161 -> m1_162  [key=0, style=solid];
m1_161 -> m1_139  [key=2, style=dotted];
m1_162 -> m1_163  [key=0, style=solid];
m1_162 -> m1_63  [key=2, style=dotted];
m1_163 -> m1_164  [key=0, style=solid];
m1_163 -> m1_98  [key=2, style=dotted];
m1_167 -> m1_157  [color=blue, key=0, style=bold];
m1_16 -> m1_14  [color=blue, key=0, style=bold];
m1_91 -> m1_92  [key=0, style=solid];
m1_92 -> m1_93  [key=0, style=solid];
m1_92 -> m1_100  [key=2, style=dotted];
m1_92 -> m1_94  [color=darkseagreen4, key=1, label=castMethodInfo, style=dashed];
m1_93 -> m1_94  [key=0, style=solid];
m1_93 -> m1_12  [key=2, style=dotted];
m1_94 -> m1_95  [key=0, style=solid];
m1_94 -> m1_47  [key=2, style=dotted];
m1_95 -> m1_96  [key=0, style=solid];
m1_95 -> m1_101  [key=2, style=dotted];
m1_95 -> m1_97  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_96 -> m1_97  [key=0, style=solid];
m1_96 -> m1_12  [key=2, style=dotted];
m1_97 -> m1_98  [key=0, style=solid];
m1_98 -> m1_99  [key=0, style=solid];
m1_98 -> m1_13  [key=2, style=dotted];
m1_99 -> m1_91  [color=blue, key=0, style=bold];
m1_99 -> m1_100  [key=0, style=solid];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_8  [key=2, style=dotted];
m1_1 -> m1_9  [key=2, style=dotted];
m1_1 -> m1_14  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_1 -> m1_12  [key=2, style=dotted];
m1_2 -> m1_3  [key=0, style=solid];
m1_2 -> m1_10  [key=2, style=dotted];
m1_2 -> m1_4  [color=darkseagreen4, key=1, label=creator, style=dashed];
m1_2 -> m1_13  [key=2, style=dotted];
m1_2 -> m1_14  [key=2, style=dotted];
m1_3 -> m1_4  [key=0, style=solid];
m1_3 -> m1_15  [key=2, style=dotted];
m1_3 -> m1_5  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_3 -> m1_6  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_3 -> m1_7  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_4 -> m1_5  [key=0, style=solid];
m1_4 -> m1_11  [key=2, style=dotted];
m1_4 -> m1_6  [color=darkseagreen4, key=1, label=o, style=dashed];
m1_4 -> m1_16  [key=2, style=dotted];
m1_5 -> m1_6  [key=0, style=solid];
m1_5 -> m1_12  [key=2, style=dotted];
m1_5 -> m1_17  [key=2, style=dotted];
m1_6 -> m1_7  [key=0, style=solid];
m1_6 -> m1_13  [key=2, style=dotted];
m1_6 -> m1_18  [key=2, style=dotted];
m1_7 -> m1_0  [color=blue, key=0, style=bold];
m1_7 -> m1_19  [key=2, style=dotted];
m1_7 -> m1_8  [key=0, style=solid];
m1_89 -> m1_85  [color=blue, key=0, style=bold];
m1_14 -> m1_15  [key=0, style=solid];
m1_100 -> m1_101  [key=0, style=solid];
m1_100 -> m1_61  [key=2, style=dotted];
m1_100 -> m1_134  [color=darkseagreen4, key=1, label=sw, style=dashed];
m1_52 -> m1_53  [key=0, style=solid];
m1_52 -> m1_56  [key=2, style=dotted];
m1_242 -> m1_243  [key=0, style=solid];
m1_262 -> m1_38  [key=2, style=dotted];
m1_262 -> m1_263  [key=0, style=solid];
m1_260 -> m1_22  [key=2, style=dotted];
m1_260 -> m1_261  [key=0, style=solid];
m1_245 -> m1_15  [key=2, style=dotted];
m1_245 -> m1_260  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_245 -> m1_246  [key=0, style=solid];
m1_245 -> m1_247  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_245 -> m1_248  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_245 -> m1_249  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_245 -> m1_250  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_245 -> m1_251  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_245 -> m1_252  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_245 -> m1_253  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_245 -> m1_254  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_245 -> m1_255  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_245 -> m1_256  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_245 -> m1_257  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_245 -> m1_258  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_245 -> m1_259  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_249 -> m1_90  [key=2, style=dotted];
m1_249 -> m1_250  [key=0, style=solid];
m1_251 -> m1_90  [key=2, style=dotted];
m1_251 -> m1_252  [key=0, style=solid];
m1_254 -> m1_90  [key=2, style=dotted];
m1_254 -> m1_255  [key=0, style=solid];
m1_256 -> m1_90  [key=2, style=dotted];
m1_256 -> m1_257  [key=0, style=solid];
m1_257 -> m1_90  [key=2, style=dotted];
m1_257 -> m1_258  [key=0, style=solid];
m1_243 -> m1_34  [key=2, style=dotted];
m1_243 -> m1_262  [color=darkseagreen4, key=1, label=sb, style=dashed];
m1_243 -> m1_244  [key=0, style=solid];
m1_261 -> m1_262  [key=0, style=solid];
m1_261 -> m1_263  [color=darkseagreen4, key=1, label=expected, style=dashed];
m1_263 -> m1_264  [key=0, style=solid];
m1_263 -> m1_219  [key=2, style=dotted];
m1_259 -> m1_260  [key=0, style=solid];
m1_259 -> m1_19  [key=2, style=dotted];
m1_244 -> m1_245  [key=0, style=solid];
m1_244 -> m1_35  [key=2, style=dotted];
m1_246 -> m1_247  [key=0, style=solid];
m1_247 -> m1_248  [key=0, style=solid];
m1_247 -> m1_216  [key=2, style=dotted];
m1_248 -> m1_249  [key=0, style=solid];
m1_248 -> m1_217  [key=2, style=dotted];
m1_250 -> m1_251  [key=0, style=solid];
m1_250 -> m1_217  [key=2, style=dotted];
m1_252 -> m1_253  [key=0, style=solid];
m1_252 -> m1_217  [key=2, style=dotted];
m1_253 -> m1_254  [key=0, style=solid];
m1_253 -> m1_88  [key=2, style=dotted];
m1_255 -> m1_256  [key=0, style=solid];
m1_255 -> m1_218  [key=2, style=dotted];
m1_258 -> m1_259  [key=0, style=solid];
m1_258 -> m1_265  [key=2, style=dotted];
m1_264 -> m1_242  [color=blue, key=0, style=bold];
m1_712 -> m1_713  [key=0, style=solid];
m1_720 -> m1_22  [key=2, style=dotted];
m1_720 -> m1_721  [key=0, style=solid];
m1_720 -> m1_722  [key=2, style=dotted];
m1_718 -> m1_22  [key=2, style=dotted];
m1_718 -> m1_719  [key=0, style=solid];
m1_714 -> m1_15  [key=2, style=dotted];
m1_714 -> m1_715  [key=0, style=solid];
m1_714 -> m1_716  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_715 -> m1_720  [color=darkseagreen4, key=1, label=script, style=dashed];
m1_715 -> m1_716  [key=0, style=solid];
m1_719 -> m1_720  [key=0, style=solid];
m1_719 -> m1_438  [key=2, style=dotted];
m1_719 -> m1_439  [key=2, style=dotted];
m1_717 -> m1_718  [key=0, style=solid];
m1_717 -> m1_64  [key=2, style=dotted];
m1_717 -> m1_719  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_713 -> m1_714  [key=0, style=solid];
m1_713 -> m1_717  [color=darkseagreen4, key=1, label=sw, style=dashed];
m1_713 -> m1_61  [key=2, style=dotted];
m1_716 -> m1_717  [key=0, style=solid];
m1_716 -> m1_36  [key=2, style=dotted];
m1_721 -> m1_712  [color=blue, key=0, style=bold];
m1_62 -> m1_947  [key=0, style=solid];
m1_62 -> m1_63  [color=red, key=0, style=solid];
m1_62 -> m1_69  [key=2, style=dotted];
m1_62 -> m1_64  [color=darkseagreen4, key=1, label=m, style=dashed];
m1_62 -> m1_65  [color=darkseagreen4, key=1, label=m, style=dashed];
m1_947 -> m1_948  [key=0, style=solid];
m1_947 -> m1_1005  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.ConvertibleInt", style=dashed];
m1_948 -> m1_62  [color=blue, key=0, style=bold];
m1_21 -> m1_22  [key=0, style=solid];
m1_21 -> m1_10  [key=2, style=dotted];
m1_21 -> m1_23  [color=darkseagreen4, key=1, label=creator, style=dashed];
m1_123 -> m1_124  [key=0, style=solid];
m1_123 -> m1_150  [key=2, style=dotted];
m1_124 -> m1_125  [color=green, key=0, style=solid];
m1_124 -> m1_138  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.TestStruct", style=dashed];
m1_124 -> m1_150  [key=2, style=dotted];
m1_125 -> m1_123  [color=blue, key=0, style=bold];
m1_125 -> m1_126  [color=green, key=0, style=solid];
m1_125 -> m1_151  [color=green, key=2, style=dotted];
m1_498 -> m1_499  [key=0, style=solid];
m1_514 -> m1_38  [key=2, style=dotted];
m1_514 -> m1_515  [key=0, style=solid];
m1_514 -> m1_519  [key=2, style=dotted];
m1_515 -> m1_38  [key=2, style=dotted];
m1_515 -> m1_516  [key=0, style=solid];
m1_515 -> m1_219  [key=2, style=dotted];
m1_501 -> m1_15  [key=2, style=dotted];
m1_501 -> m1_502  [key=0, style=solid];
m1_501 -> m1_503  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_501 -> m1_504  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_501 -> m1_505  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_501 -> m1_506  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_501 -> m1_507  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_501 -> m1_508  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_501 -> m1_509  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_501 -> m1_510  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_501 -> m1_511  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_501 -> m1_512  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_501 -> m1_513  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_499 -> m1_34  [key=2, style=dotted];
m1_499 -> m1_514  [color=darkseagreen4, key=1, label=sb, style=dashed];
m1_499 -> m1_515  [color=darkseagreen4, key=1, label=sb, style=dashed];
m1_499 -> m1_500  [key=0, style=solid];
m1_513 -> m1_514  [key=0, style=solid];
m1_513 -> m1_98  [key=2, style=dotted];
m1_500 -> m1_501  [key=0, style=solid];
m1_500 -> m1_35  [key=2, style=dotted];
m1_502 -> m1_503  [key=0, style=solid];
m1_502 -> m1_88  [key=2, style=dotted];
m1_503 -> m1_504  [key=0, style=solid];
m1_503 -> m1_92  [key=2, style=dotted];
m1_504 -> m1_505  [key=0, style=solid];
m1_504 -> m1_92  [key=2, style=dotted];
m1_505 -> m1_506  [key=0, style=solid];
m1_505 -> m1_92  [key=2, style=dotted];
m1_506 -> m1_507  [key=0, style=solid];
m1_506 -> m1_92  [key=2, style=dotted];
m1_507 -> m1_508  [key=0, style=solid];
m1_507 -> m1_517  [key=2, style=dotted];
m1_508 -> m1_509  [key=0, style=solid];
m1_508 -> m1_518  [key=2, style=dotted];
m1_509 -> m1_510  [key=0, style=solid];
m1_509 -> m1_517  [key=2, style=dotted];
m1_510 -> m1_511  [key=0, style=solid];
m1_510 -> m1_517  [key=2, style=dotted];
m1_511 -> m1_512  [key=0, style=solid];
m1_511 -> m1_518  [key=2, style=dotted];
m1_512 -> m1_513  [key=0, style=solid];
m1_512 -> m1_518  [key=2, style=dotted];
m1_516 -> m1_498  [color=blue, key=0, style=bold];
m1_891 -> m1_939  [key=0, style=solid];
m1_939 -> m1_940  [key=0, style=solid];
m1_939 -> m1_929  [key=2, style=dotted];
m1_940 -> m1_891  [color=blue, key=0, style=bold];
m1_10 -> m1_22  [key=2, style=dotted];
m1_10 -> m1_11  [key=0, style=solid];
m1_9 -> m1_10  [key=0, style=solid];
m1_9 -> m1_21  [key=2, style=dotted];
m1_8 -> m1_9  [key=0, style=solid];
m1_8 -> m1_20  [key=2, style=dotted];
m1_11 -> m1_0  [color=blue, key=0, style=bold];
m1_55 -> m1_56  [key=0, style=solid];
m1_59 -> m1_22  [key=2, style=dotted];
m1_59 -> m1_60  [key=0, style=solid];
m1_59 -> m1_64  [key=2, style=dotted];
m1_59 -> m1_57  [color=blue, key=0, style=bold];
m1_57 -> m1_15  [key=2, style=dotted];
m1_57 -> m1_58  [color=red, key=0, style=solid];
m1_58 -> m1_59  [color=red, key=0, style=solid];
m1_58 -> m1_62  [key=2, style=dotted];
m1_58 -> m1_63  [key=2, style=dotted];
m1_58 -> m1_47  [color=red, key=2, style=dotted];
m1_58 -> m1_60  [color=red, key=1, label="lambda expression", style=dashed];
m1_60 -> m1_55  [color=blue, key=0, style=bold];
m1_60 -> m1_61  [key=0, style=solid];
m1_888 -> m1_936  [key=0, style=solid];
m1_936 -> m1_937  [key=0, style=solid];
m1_936 -> m1_929  [key=2, style=dotted];
m1_937 -> m1_938  [key=0, style=solid];
m1_937 -> m1_871  [key=2, style=dotted];
m1_938 -> m1_888  [color=blue, key=0, style=bold];
m1_775 -> m1_776  [key=0, style=solid];
m1_777 -> m1_15  [key=2, style=dotted];
m1_777 -> m1_778  [key=0, style=solid];
m1_777 -> m1_779  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_777 -> m1_780  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_777 -> m1_781  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_777 -> m1_782  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_777 -> m1_783  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_777 -> m1_784  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_777 -> m1_785  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_776 -> m1_777  [key=0, style=solid];
m1_776 -> m1_61  [key=2, style=dotted];
m1_776 -> m1_786  [color=darkseagreen4, key=1, label=sw, style=dashed];
m1_778 -> m1_779  [key=0, style=solid];
m1_779 -> m1_780  [key=0, style=solid];
m1_780 -> m1_781  [key=0, style=solid];
m1_780 -> m1_788  [key=2, style=dotted];
m1_781 -> m1_782  [key=0, style=solid];
m1_782 -> m1_783  [key=0, style=solid];
m1_782 -> m1_139  [key=2, style=dotted];
m1_783 -> m1_784  [key=0, style=solid];
m1_783 -> m1_710  [key=2, style=dotted];
m1_783 -> m1_711  [key=2, style=dotted];
m1_784 -> m1_785  [key=0, style=solid];
m1_784 -> m1_770  [key=2, style=dotted];
m1_784 -> m1_771  [key=2, style=dotted];
m1_785 -> m1_786  [key=0, style=solid];
m1_785 -> m1_265  [key=2, style=dotted];
m1_786 -> m1_219  [key=2, style=dotted];
m1_786 -> m1_64  [key=2, style=dotted];
m1_786 -> m1_787  [key=0, style=solid];
m1_787 -> m1_775  [color=blue, key=0, style=bold];
m1_343 -> m1_344  [key=0, style=solid];
m1_359 -> m1_38  [key=2, style=dotted];
m1_359 -> m1_360  [key=0, style=solid];
m1_346 -> m1_15  [key=2, style=dotted];
m1_346 -> m1_347  [key=0, style=solid];
m1_346 -> m1_348  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_346 -> m1_349  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_346 -> m1_350  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_346 -> m1_351  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_346 -> m1_352  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_346 -> m1_353  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_346 -> m1_354  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_346 -> m1_355  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_346 -> m1_356  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_346 -> m1_357  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_344 -> m1_34  [key=2, style=dotted];
m1_344 -> m1_359  [color=darkseagreen4, key=1, label=sb, style=dashed];
m1_344 -> m1_345  [key=0, style=solid];
m1_358 -> m1_359  [key=0, style=solid];
m1_358 -> m1_360  [color=darkseagreen4, key=1, label=expected, style=dashed];
m1_360 -> m1_361  [key=0, style=solid];
m1_360 -> m1_219  [key=2, style=dotted];
m1_345 -> m1_346  [key=0, style=solid];
m1_345 -> m1_35  [key=2, style=dotted];
m1_347 -> m1_348  [key=0, style=solid];
m1_348 -> m1_349  [key=0, style=solid];
m1_349 -> m1_350  [key=0, style=solid];
m1_349 -> m1_88  [key=2, style=dotted];
m1_350 -> m1_351  [key=0, style=solid];
m1_350 -> m1_93  [key=2, style=dotted];
m1_351 -> m1_352  [key=0, style=solid];
m1_351 -> m1_93  [key=2, style=dotted];
m1_352 -> m1_353  [key=0, style=solid];
m1_352 -> m1_93  [key=2, style=dotted];
m1_353 -> m1_354  [key=0, style=solid];
m1_353 -> m1_314  [key=2, style=dotted];
m1_354 -> m1_355  [key=0, style=solid];
m1_354 -> m1_314  [key=2, style=dotted];
m1_355 -> m1_356  [key=0, style=solid];
m1_355 -> m1_314  [key=2, style=dotted];
m1_356 -> m1_357  [key=0, style=solid];
m1_356 -> m1_98  [key=2, style=dotted];
m1_357 -> m1_358  [key=0, style=solid];
m1_357 -> m1_315  [key=2, style=dotted];
m1_361 -> m1_343  [color=blue, key=0, style=bold];
m1_64 -> m1_65  [key=0, style=solid];
m1_64 -> m1_56  [key=2, style=dotted];
m1_36 -> m1_37  [key=0, style=solid];
m1_36 -> m1_12  [key=2, style=dotted];
m1_180 -> m1_181  [key=0, style=solid];
m1_191 -> m1_38  [key=2, style=dotted];
m1_191 -> m1_192  [key=0, style=solid];
m1_192 -> m1_22  [key=2, style=dotted];
m1_192 -> m1_193  [key=0, style=solid];
m1_183 -> m1_15  [key=2, style=dotted];
m1_183 -> m1_184  [key=0, style=solid];
m1_183 -> m1_185  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_183 -> m1_186  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_183 -> m1_187  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_183 -> m1_188  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_183 -> m1_189  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_185 -> m1_90  [key=2, style=dotted];
m1_185 -> m1_186  [key=0, style=solid];
m1_186 -> m1_90  [key=2, style=dotted];
m1_186 -> m1_187  [key=0, style=solid];
m1_187 -> m1_90  [key=2, style=dotted];
m1_187 -> m1_188  [key=0, style=solid];
m1_188 -> m1_90  [key=2, style=dotted];
m1_188 -> m1_189  [key=0, style=solid];
m1_181 -> m1_34  [key=2, style=dotted];
m1_181 -> m1_191  [color=darkseagreen4, key=1, label=sb, style=dashed];
m1_181 -> m1_182  [key=0, style=solid];
m1_190 -> m1_191  [key=0, style=solid];
m1_190 -> m1_192  [color=darkseagreen4, key=1, label=expected, style=dashed];
m1_182 -> m1_183  [key=0, style=solid];
m1_182 -> m1_35  [key=2, style=dotted];
m1_184 -> m1_185  [key=0, style=solid];
m1_184 -> m1_88  [key=2, style=dotted];
m1_189 -> m1_190  [key=0, style=solid];
m1_189 -> m1_98  [key=2, style=dotted];
m1_193 -> m1_180  [color=blue, key=0, style=bold];
m1_417 -> m1_418  [key=0, style=solid];
m1_426 -> m1_38  [key=2, style=dotted];
m1_426 -> m1_427  [key=0, style=solid];
m1_427 -> m1_22  [key=2, style=dotted];
m1_427 -> m1_428  [key=0, style=solid];
m1_420 -> m1_15  [key=2, style=dotted];
m1_420 -> m1_421  [key=0, style=solid];
m1_420 -> m1_422  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_420 -> m1_423  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_420 -> m1_424  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_418 -> m1_34  [key=2, style=dotted];
m1_418 -> m1_426  [color=darkseagreen4, key=1, label=sb, style=dashed];
m1_418 -> m1_419  [key=0, style=solid];
m1_425 -> m1_426  [key=0, style=solid];
m1_425 -> m1_427  [color=darkseagreen4, key=1, label=expected, style=dashed];
m1_419 -> m1_420  [key=0, style=solid];
m1_419 -> m1_35  [key=2, style=dotted];
m1_421 -> m1_422  [key=0, style=solid];
m1_422 -> m1_423  [key=0, style=solid];
m1_422 -> m1_216  [key=2, style=dotted];
m1_423 -> m1_424  [key=0, style=solid];
m1_423 -> m1_399  [key=2, style=dotted];
m1_424 -> m1_425  [key=0, style=solid];
m1_424 -> m1_265  [key=2, style=dotted];
m1_428 -> m1_417  [color=blue, key=0, style=bold];
m1_101 -> m1_125  [color=green, key=1, label=jsonWriter, style=dashed];
m1_101 -> m1_129  [color=green, key=1, label=jsonWriter, style=dashed];
m1_101 -> m1_15  [key=2, style=dotted];
m1_101 -> m1_102  [key=0, style=solid];
m1_101 -> m1_103  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_101 -> m1_104  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_101 -> m1_105  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_101 -> m1_106  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_101 -> m1_107  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_101 -> m1_108  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_101 -> m1_109  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_101 -> m1_110  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_101 -> m1_111  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_101 -> m1_112  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_101 -> m1_113  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_101 -> m1_114  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_101 -> m1_115  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_101 -> m1_116  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_101 -> m1_117  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_101 -> m1_118  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_101 -> m1_119  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_101 -> m1_120  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_101 -> m1_121  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_101 -> m1_122  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_101 -> m1_123  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_101 -> m1_124  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_101 -> m1_126  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_101 -> m1_127  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_101 -> m1_128  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_101 -> m1_130  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_101 -> m1_131  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_101 -> m1_132  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_101 -> m1_133  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_35 -> m1_36  [key=0, style=solid];
m1_35 -> m1_11  [key=2, style=dotted];
m1_35 -> m1_37  [color=darkseagreen4, key=1, label=o, style=dashed];
m1_35 -> m1_38  [color=darkseagreen4, key=1, label=o, style=dashed];
m1_35 -> m1_39  [color=darkseagreen4, key=1, label=o, style=dashed];
m1_31 -> m1_32  [color=green, key=0, style=solid];
m1_31 -> m1_37  [key=2, style=dotted];
m1_32 -> m1_33  [color=green, key=0, style=solid];
m1_32 -> m1_8  [key=2, style=dotted];
m1_32 -> m1_9  [key=2, style=dotted];
m1_32 -> m1_41  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_32 -> m1_38  [color=green, key=2, style=dotted];
m1_32 -> m1_22  [color=green, key=2, style=dotted];
m1_33 -> m1_34  [key=0, style=solid];
m1_33 -> m1_10  [key=2, style=dotted];
m1_33 -> m1_35  [color=darkseagreen4, key=1, label=creator, style=dashed];
m1_33 -> m1_23  [color=blue, key=0, style=bold];
m1_37 -> m1_38  [key=0, style=solid];
m1_37 -> m1_13  [key=2, style=dotted];
m1_38 -> m1_39  [key=0, style=solid];
m1_38 -> m1_13  [key=2, style=dotted];
m1_39 -> m1_40  [key=0, style=solid];
m1_39 -> m1_13  [key=2, style=dotted];
m1_40 -> m1_31  [color=blue, key=0, style=bold];
m1_40 -> m1_44  [color=darkseagreen4, key=1, label=ms, style=dashed];
m1_40 -> m1_12  [key=2, style=dotted];
m1_40 -> m1_41  [key=0, style=solid];
m1_40 -> m1_42  [color=darkseagreen4, key=1, label=ms, style=dashed];
m1_789 -> m1_790  [key=0, style=solid];
m1_796 -> m1_64  [key=2, style=dotted];
m1_796 -> m1_797  [key=0, style=solid];
m1_796 -> m1_798  [color=darkseagreen4, key=1, label=newText, style=dashed];
m1_796 -> m1_799  [color=darkseagreen4, key=1, label=newText, style=dashed];
m1_797 -> m1_64  [key=2, style=dotted];
m1_797 -> m1_798  [key=0, style=solid];
m1_797 -> m1_799  [color=darkseagreen4, key=1, label=oldText, style=dashed];
m1_791 -> m1_61  [key=2, style=dotted];
m1_791 -> m1_796  [color=darkseagreen4, key=1, label=swNew, style=dashed];
m1_791 -> m1_792  [key=0, style=solid];
m1_791 -> m1_793  [color=darkseagreen4, key=1, label=swNew, style=dashed];
m1_794 -> m1_61  [key=2, style=dotted];
m1_794 -> m1_797  [color=darkseagreen4, key=1, label=swOld, style=dashed];
m1_794 -> m1_795  [key=0, style=solid];
m1_795 -> m1_796  [key=0, style=solid];
m1_795 -> m1_803  [key=2, style=dotted];
m1_795 -> m1_805  [key=2, style=dotted];
m1_798 -> m1_799  [key=0, style=solid];
m1_798 -> m1_800  [key=0, style=solid];
m1_799 -> m1_802  [key=0, style=solid];
m1_799 -> m1_806  [key=2, style=dotted];
m1_799 -> m1_807  [key=2, style=dotted];
m1_790 -> m1_791  [key=0, style=solid];
m1_790 -> m1_795  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_790 -> m1_799  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_790 -> m1_793  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_790 -> m1_800  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_792 -> m1_793  [key=0, style=solid];
m1_793 -> m1_794  [key=0, style=solid];
m1_793 -> m1_793  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m1_793 -> m1_803  [key=2, style=dotted];
m1_793 -> m1_804  [key=2, style=dotted];
m1_800 -> m1_800  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_800 -> m1_801  [key=0, style=solid];
m1_801 -> m1_790  [key=0, style=solid];
m1_801 -> m1_802  [key=0, style=solid];
m1_802 -> m1_789  [color=blue, key=0, style=bold];
m1_126 -> m1_127  [key=0, style=solid];
m1_126 -> m1_151  [key=2, style=dotted];
m1_129 -> m1_130  [color=green, key=0, style=solid];
m1_129 -> m1_153  [color=green, key=2, style=dotted];
m1_128 -> m1_129  [color=green, key=0, style=solid];
m1_128 -> m1_152  [key=2, style=dotted];
m1_128 -> m1_126  [color=blue, key=0, style=bold];
m1_130 -> m1_131  [key=0, style=solid];
m1_130 -> m1_154  [key=2, style=dotted];
m1_130 -> m1_153  [key=2, style=dotted];
m1_130 -> m1_112  [key=2, style=dotted];
m1_130 -> m1_100  [key=2, style=dotted];
m1_130 -> m1_132  [color=darkseagreen4, key=1, label=methodInfo, style=dashed];
m1_137 -> m1_22  [key=2, style=dotted];
m1_137 -> m1_138  [key=0, style=solid];
m1_137 -> m1_129  [color=blue, key=0, style=bold];
m1_102 -> m1_103  [key=0, style=solid];
m1_102 -> m1_139  [key=2, style=dotted];
m1_103 -> m1_104  [key=0, style=solid];
m1_103 -> m1_140  [key=2, style=dotted];
m1_103 -> m1_112  [key=2, style=dotted];
m1_103 -> m1_55  [key=2, style=dotted];
m1_103 -> m1_105  [color=darkseagreen4, key=1, label=namePropertyInfo, style=dashed];
m1_104 -> m1_105  [key=0, style=solid];
m1_104 -> m1_140  [key=2, style=dotted];
m1_104 -> m1_12  [key=2, style=dotted];
m1_105 -> m1_106  [key=0, style=solid];
m1_105 -> m1_141  [key=2, style=dotted];
m1_105 -> m1_47  [key=2, style=dotted];
m1_105 -> m1_108  [color=darkseagreen4, key=1, label=call, style=dashed];
m1_106 -> m1_107  [key=0, style=solid];
m1_106 -> m1_141  [key=2, style=dotted];
m1_106 -> m1_54  [key=2, style=dotted];
m1_106 -> m1_108  [color=darkseagreen4, key=1, label=p, style=dashed];
m1_107 -> m1_108  [key=0, style=solid];
m1_107 -> m1_142  [key=2, style=dotted];
m1_108 -> m1_109  [key=0, style=solid];
m1_108 -> m1_142  [key=2, style=dotted];
m1_108 -> m1_113  [key=2, style=dotted];
m1_108 -> m1_110  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_109 -> m1_110  [key=0, style=solid];
m1_109 -> m1_143  [key=2, style=dotted];
m1_109 -> m1_12  [key=2, style=dotted];
m1_110 -> m1_111  [key=0, style=solid];
m1_110 -> m1_143  [key=2, style=dotted];
m1_110 -> m1_13  [key=2, style=dotted];
m1_111 -> m1_112  [key=0, style=solid];
m1_111 -> m1_144  [key=2, style=dotted];
m1_111 -> m1_102  [color=blue, key=0, style=bold];
m1_112 -> m1_113  [key=0, style=solid];
m1_112 -> m1_144  [key=2, style=dotted];
m1_113 -> m1_114  [key=0, style=solid];
m1_113 -> m1_145  [key=2, style=dotted];
m1_114 -> m1_115  [color=red, key=0, style=solid];
m1_114 -> m1_145  [key=2, style=dotted];
m1_115 -> m1_116  [color=red, key=0, style=solid];
m1_115 -> m1_146  [key=2, style=dotted];
m1_115 -> m1_47  [color=red, key=2, style=dotted];
m1_116 -> m1_117  [key=0, style=solid];
m1_116 -> m1_146  [key=2, style=dotted];
m1_116 -> m1_122  [key=2, style=dotted];
m1_117 -> m1_118  [color=red, key=0, style=solid];
m1_117 -> m1_147  [key=2, style=dotted];
m1_117 -> m1_13  [key=2, style=dotted];
m1_117 -> m1_117  [color=darkseagreen4, key=1, label=myStruct1, style=dashed];
m1_118 -> m1_119  [color=red, key=0, style=solid];
m1_118 -> m1_147  [key=2, style=dotted];
m1_118 -> m1_47  [color=red, key=2, style=dotted];
m1_119 -> m1_120  [key=0, style=solid];
m1_119 -> m1_148  [key=2, style=dotted];
m1_119 -> m1_122  [key=2, style=dotted];
m1_120 -> m1_121  [key=0, style=solid];
m1_120 -> m1_148  [key=2, style=dotted];
m1_120 -> m1_13  [key=2, style=dotted];
m1_120 -> m1_120  [color=darkseagreen4, key=1, label=myStruct2, style=dashed];
m1_121 -> m1_122  [key=0, style=solid];
m1_121 -> m1_149  [key=2, style=dotted];
m1_121 -> m1_114  [color=blue, key=0, style=bold];
m1_122 -> m1_123  [key=0, style=solid];
m1_122 -> m1_149  [key=2, style=dotted];
m1_127 -> m1_128  [key=0, style=solid];
m1_127 -> m1_152  [key=2, style=dotted];
m1_127 -> m1_123  [key=2, style=dotted];
m1_127 -> m1_127  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.TestStruct", style=dashed];
m1_131 -> m1_132  [key=0, style=solid];
m1_131 -> m1_155  [key=2, style=dotted];
m1_131 -> m1_12  [key=2, style=dotted];
m1_132 -> m1_133  [key=0, style=solid];
m1_132 -> m1_156  [key=2, style=dotted];
m1_132 -> m1_155  [key=2, style=dotted];
m1_132 -> m1_47  [key=2, style=dotted];
m1_133 -> m1_134  [key=0, style=solid];
m1_133 -> m1_98  [key=2, style=dotted];
m1_133 -> m1_123  [key=2, style=dotted];
m1_133 -> m1_101  [key=2, style=dotted];
m1_133 -> m1_135  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_134 -> m1_137  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_134 -> m1_64  [key=2, style=dotted];
m1_134 -> m1_135  [key=0, style=solid];
m1_134 -> m1_12  [key=2, style=dotted];
m1_136 -> m1_137  [key=0, style=solid];
m1_136 -> m1_13  [key=2, style=dotted];
m1_136 -> m1_136  [color=darkseagreen4, key=1, label=s, style=dashed];
m1_135 -> m1_136  [key=0, style=solid];
m1_138 -> m1_99  [color=blue, key=0, style=bold];
m1_44 -> m1_45  [color=red, key=0, style=solid];
m1_44 -> m1_54  [key=2, style=dotted];
m1_45 -> m1_46  [color=green, key=0, style=solid];
m1_45 -> m1_47  [color=red, key=2, style=dotted];
m1_45 -> m1_48  [color=red, key=1, label="lambda expression", style=dashed];
m1_45 -> m1_12  [key=2, style=dotted];
m1_45 -> m1_49  [color=darkseagreen4, key=1, label=ms, style=dashed];
m1_46 -> m1_44  [color=blue, key=0, style=bold];
m1_46 -> m1_47  [color=green, key=0, style=solid];
m1_46 -> m1_15  [color=green, key=2, style=dotted];
m1_46 -> m1_51  [color=green, key=2, style=dotted];
m1_46 -> m1_48  [color=green, key=1, label=writer, style=dashed];
m1_620 -> m1_621  [key=0, style=solid];
m1_636 -> m1_38  [key=2, style=dotted];
m1_636 -> m1_637  [key=0, style=solid];
m1_627 -> m1_22  [key=2, style=dotted];
m1_627 -> m1_628  [key=0, style=solid];
m1_625 -> m1_15  [key=2, style=dotted];
m1_625 -> m1_627  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_625 -> m1_626  [key=0, style=solid];
m1_625 -> m1_628  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_625 -> m1_629  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_625 -> m1_630  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_625 -> m1_631  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_625 -> m1_632  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_625 -> m1_633  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_625 -> m1_634  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_621 -> m1_34  [key=2, style=dotted];
m1_621 -> m1_636  [color=darkseagreen4, key=1, label=sb, style=dashed];
m1_621 -> m1_622  [key=0, style=solid];
m1_635 -> m1_636  [key=0, style=solid];
m1_635 -> m1_637  [color=darkseagreen4, key=1, label=expected, style=dashed];
m1_637 -> m1_219  [key=2, style=dotted];
m1_637 -> m1_638  [key=0, style=solid];
m1_626 -> m1_627  [key=0, style=solid];
m1_628 -> m1_629  [key=0, style=solid];
m1_628 -> m1_139  [key=2, style=dotted];
m1_622 -> m1_625  [color=darkseagreen4, key=1, label=sw, style=dashed];
m1_622 -> m1_35  [key=2, style=dotted];
m1_622 -> m1_623  [key=0, style=solid];
m1_624 -> m1_625  [key=0, style=solid];
m1_624 -> m1_616  [key=2, style=dotted];
m1_624 -> m1_629  [color=darkseagreen4, key=1, label=data, style=dashed];
m1_624 -> m1_630  [color=darkseagreen4, key=1, label=data, style=dashed];
m1_624 -> m1_631  [color=darkseagreen4, key=1, label=data, style=dashed];
m1_629 -> m1_630  [key=0, style=solid];
m1_629 -> m1_617  [key=2, style=dotted];
m1_630 -> m1_631  [key=0, style=solid];
m1_630 -> m1_617  [key=2, style=dotted];
m1_631 -> m1_632  [key=0, style=solid];
m1_631 -> m1_63  [key=2, style=dotted];
m1_632 -> m1_633  [key=0, style=solid];
m1_632 -> m1_617  [key=2, style=dotted];
m1_633 -> m1_634  [key=0, style=solid];
m1_633 -> m1_639  [key=2, style=dotted];
m1_634 -> m1_635  [key=0, style=solid];
m1_634 -> m1_98  [key=2, style=dotted];
m1_623 -> m1_624  [key=0, style=solid];
m1_638 -> m1_620  [color=blue, key=0, style=bold];
m1_571 -> m1_572  [key=0, style=solid];
m1_597 -> m1_38  [key=2, style=dotted];
m1_597 -> m1_598  [key=0, style=solid];
m1_577 -> m1_22  [key=2, style=dotted];
m1_577 -> m1_578  [key=0, style=solid];
m1_579 -> m1_22  [key=2, style=dotted];
m1_579 -> m1_580  [key=0, style=solid];
m1_581 -> m1_22  [key=2, style=dotted];
m1_581 -> m1_582  [key=0, style=solid];
m1_583 -> m1_22  [key=2, style=dotted];
m1_583 -> m1_584  [key=0, style=solid];
m1_585 -> m1_22  [key=2, style=dotted];
m1_585 -> m1_586  [key=0, style=solid];
m1_590 -> m1_22  [key=2, style=dotted];
m1_590 -> m1_591  [key=0, style=solid];
m1_592 -> m1_22  [key=2, style=dotted];
m1_592 -> m1_593  [key=0, style=solid];
m1_574 -> m1_15  [key=2, style=dotted];
m1_574 -> m1_577  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_574 -> m1_579  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_574 -> m1_581  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_574 -> m1_583  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_574 -> m1_585  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_574 -> m1_590  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_574 -> m1_592  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_574 -> m1_575  [key=0, style=solid];
m1_574 -> m1_576  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_574 -> m1_578  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_574 -> m1_580  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_574 -> m1_582  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_574 -> m1_584  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_574 -> m1_586  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_574 -> m1_587  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_574 -> m1_588  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_574 -> m1_589  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_574 -> m1_591  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_574 -> m1_593  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_574 -> m1_594  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_574 -> m1_595  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_572 -> m1_34  [key=2, style=dotted];
m1_572 -> m1_597  [color=darkseagreen4, key=1, label=sb, style=dashed];
m1_572 -> m1_573  [key=0, style=solid];
m1_596 -> m1_597  [key=0, style=solid];
m1_596 -> m1_598  [color=darkseagreen4, key=1, label=expected, style=dashed];
m1_598 -> m1_219  [key=2, style=dotted];
m1_598 -> m1_599  [key=0, style=solid];
m1_576 -> m1_577  [key=0, style=solid];
m1_578 -> m1_579  [key=0, style=solid];
m1_580 -> m1_581  [key=0, style=solid];
m1_582 -> m1_583  [key=0, style=solid];
m1_584 -> m1_585  [key=0, style=solid];
m1_586 -> m1_587  [key=0, style=solid];
m1_586 -> m1_16  [key=2, style=dotted];
m1_589 -> m1_590  [key=0, style=solid];
m1_591 -> m1_592  [key=0, style=solid];
m1_593 -> m1_594  [key=0, style=solid];
m1_593 -> m1_17  [key=2, style=dotted];
m1_573 -> m1_574  [key=0, style=solid];
m1_573 -> m1_35  [key=2, style=dotted];
m1_575 -> m1_576  [key=0, style=solid];
m1_587 -> m1_588  [key=0, style=solid];
m1_587 -> m1_17  [key=2, style=dotted];
m1_588 -> m1_589  [key=0, style=solid];
m1_588 -> m1_382  [key=2, style=dotted];
m1_594 -> m1_595  [key=0, style=solid];
m1_594 -> m1_600  [key=2, style=dotted];
m1_595 -> m1_19  [key=2, style=dotted];
m1_595 -> m1_596  [key=0, style=solid];
m1_599 -> m1_571  [color=blue, key=0, style=bold];
m1_362 -> m1_363  [key=0, style=solid];
m1_379 -> m1_38  [key=2, style=dotted];
m1_379 -> m1_380  [key=0, style=solid];
m1_365 -> m1_15  [key=2, style=dotted];
m1_365 -> m1_366  [key=0, style=solid];
m1_365 -> m1_367  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_365 -> m1_368  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_365 -> m1_369  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_365 -> m1_370  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_365 -> m1_371  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_365 -> m1_372  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_365 -> m1_373  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_365 -> m1_374  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_365 -> m1_375  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_365 -> m1_376  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_365 -> m1_377  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_363 -> m1_34  [key=2, style=dotted];
m1_363 -> m1_379  [color=darkseagreen4, key=1, label=sb, style=dashed];
m1_363 -> m1_364  [key=0, style=solid];
m1_377 -> m1_37  [key=2, style=dotted];
m1_377 -> m1_378  [key=0, style=solid];
m1_378 -> m1_379  [key=0, style=solid];
m1_378 -> m1_380  [color=darkseagreen4, key=1, label=expected, style=dashed];
m1_380 -> m1_381  [key=0, style=solid];
m1_380 -> m1_219  [key=2, style=dotted];
m1_364 -> m1_365  [key=0, style=solid];
m1_364 -> m1_35  [key=2, style=dotted];
m1_366 -> m1_367  [key=0, style=solid];
m1_367 -> m1_368  [key=0, style=solid];
m1_368 -> m1_369  [key=0, style=solid];
m1_369 -> m1_370  [key=0, style=solid];
m1_369 -> m1_139  [key=2, style=dotted];
m1_370 -> m1_371  [key=0, style=solid];
m1_370 -> m1_382  [key=2, style=dotted];
m1_371 -> m1_372  [key=0, style=solid];
m1_371 -> m1_382  [key=2, style=dotted];
m1_372 -> m1_373  [key=0, style=solid];
m1_372 -> m1_382  [key=2, style=dotted];
m1_373 -> m1_374  [key=0, style=solid];
m1_373 -> m1_383  [key=2, style=dotted];
m1_374 -> m1_375  [key=0, style=solid];
m1_374 -> m1_383  [key=2, style=dotted];
m1_375 -> m1_376  [key=0, style=solid];
m1_375 -> m1_383  [key=2, style=dotted];
m1_376 -> m1_377  [key=0, style=solid];
m1_376 -> m1_98  [key=2, style=dotted];
m1_381 -> m1_362  [color=blue, key=0, style=bold];
m1_805 -> m1_808  [key=0, style=solid];
m1_805 -> m1_809  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m1_805 -> m1_810  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_805 -> m1_815  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_805 -> m1_816  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_805 -> m1_817  [color=darkseagreen4, key=1, label=char, style=dashed];
m1_805 -> m1_851  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_805 -> m1_852  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m1_805 -> m1_855  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m1_805 -> m1_856  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m1_805 -> m1_859  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m1_805 -> m1_861  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_805 -> m1_862  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m1_805 -> m1_863  [color=darkseagreen4, key=1, label=bool, style=dashed];
m1_805 -> m1_864  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m1_808 -> m1_809  [key=0, style=solid];
m1_808 -> m1_810  [key=0, style=solid];
m1_809 -> m1_810  [key=0, style=solid];
m1_809 -> m1_866  [key=2, style=dotted];
m1_810 -> m1_811  [key=0, style=solid];
m1_810 -> m1_863  [key=0, style=solid];
m1_815 -> m1_816  [key=0, style=solid];
m1_815 -> m1_858  [key=0, style=solid];
m1_816 -> m1_817  [key=0, style=solid];
m1_816 -> m1_819  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_816 -> m1_842  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_816 -> m1_845  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_817 -> m1_815  [key=0, style=solid];
m1_817 -> m1_818  [key=0, style=solid];
m1_851 -> m1_852  [key=0, style=solid];
m1_851 -> m1_868  [key=2, style=dotted];
m1_851 -> m1_860  [color=darkseagreen4, key=1, label=chars, style=dashed];
m1_851 -> m1_862  [color=darkseagreen4, key=1, label=chars, style=dashed];
m1_852 -> m1_853  [key=0, style=solid];
m1_852 -> m1_869  [key=2, style=dotted];
m1_855 -> m1_857  [key=0, style=solid];
m1_855 -> m1_871  [key=2, style=dotted];
m1_856 -> m1_857  [key=0, style=solid];
m1_856 -> m1_872  [key=2, style=dotted];
m1_859 -> m1_863  [key=0, style=solid];
m1_859 -> m1_871  [key=2, style=dotted];
m1_861 -> m1_862  [key=0, style=solid];
m1_861 -> m1_868  [key=2, style=dotted];
m1_862 -> m1_863  [key=0, style=solid];
m1_862 -> m1_869  [key=2, style=dotted];
m1_863 -> m1_865  [key=0, style=solid];
m1_863 -> m1_864  [key=0, style=solid];
m1_864 -> m1_865  [key=0, style=solid];
m1_864 -> m1_866  [key=2, style=dotted];
m1_811 -> m1_852  [color=darkseagreen4, key=1, label=chars, style=dashed];
m1_811 -> m1_862  [color=darkseagreen4, key=1, label=chars, style=dashed];
m1_811 -> m1_812  [key=0, style=solid];
m1_811 -> m1_850  [color=darkseagreen4, key=1, label=chars, style=dashed];
m1_811 -> m1_860  [color=darkseagreen4, key=1, label=chars, style=dashed];
m1_814 -> m1_815  [key=0, style=solid];
m1_814 -> m1_816  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_814 -> m1_852  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_814 -> m1_849  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_814 -> m1_853  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_814 -> m1_857  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_857 -> m1_815  [key=0, style=solid];
m1_857 -> m1_857  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_848 -> m1_815  [key=0, style=solid];
m1_848 -> m1_849  [key=0, style=solid];
m1_858 -> m1_859  [key=0, style=solid];
m1_858 -> m1_860  [key=0, style=solid];
m1_819 -> m1_820  [key=0, style=solid];
m1_819 -> m1_822  [key=0, style=solid];
m1_819 -> m1_824  [key=0, style=solid];
m1_819 -> m1_826  [key=0, style=solid];
m1_819 -> m1_828  [key=0, style=solid];
m1_819 -> m1_830  [key=0, style=solid];
m1_819 -> m1_832  [key=0, style=solid];
m1_819 -> m1_834  [key=0, style=solid];
m1_819 -> m1_836  [key=0, style=solid];
m1_819 -> m1_838  [key=0, style=solid];
m1_819 -> m1_840  [key=0, style=solid];
m1_819 -> m1_842  [key=0, style=solid];
m1_842 -> m1_843  [key=0, style=solid];
m1_842 -> m1_847  [key=0, style=solid];
m1_845 -> m1_846  [key=0, style=solid];
m1_845 -> m1_867  [key=2, style=dotted];
m1_818 -> m1_819  [key=0, style=solid];
m1_850 -> m1_851  [key=0, style=solid];
m1_850 -> m1_852  [key=0, style=solid];
m1_860 -> m1_861  [key=0, style=solid];
m1_860 -> m1_862  [key=0, style=solid];
m1_813 -> m1_852  [color=darkseagreen4, key=1, label=lastWritePosition, style=dashed];
m1_813 -> m1_862  [color=darkseagreen4, key=1, label=lastWritePosition, style=dashed];
m1_813 -> m1_814  [key=0, style=solid];
m1_813 -> m1_858  [color=darkseagreen4, key=1, label=lastWritePosition, style=dashed];
m1_813 -> m1_849  [color=darkseagreen4, key=1, label=lastWritePosition, style=dashed];
m1_853 -> m1_862  [color=darkseagreen4, key=1, label=lastWritePosition, style=dashed];
m1_853 -> m1_858  [color=darkseagreen4, key=1, label=lastWritePosition, style=dashed];
m1_853 -> m1_854  [key=0, style=solid];
m1_847 -> m1_855  [color=darkseagreen4, key=1, label=escapedValue, style=dashed];
m1_847 -> m1_848  [key=0, style=solid];
m1_847 -> m1_854  [color=darkseagreen4, key=1, label=escapedValue, style=dashed];
m1_846 -> m1_855  [color=darkseagreen4, key=1, label=escapedValue, style=dashed];
m1_846 -> m1_848  [key=0, style=solid];
m1_846 -> m1_854  [color=darkseagreen4, key=1, label=escapedValue, style=dashed];
m1_854 -> m1_855  [key=0, style=solid];
m1_854 -> m1_856  [key=0, style=solid];
m1_854 -> m1_870  [key=2, style=dotted];
m1_812 -> m1_856  [color=darkseagreen4, key=1, label=unicodeBuffer, style=dashed];
m1_812 -> m1_845  [color=darkseagreen4, key=1, label=unicodeBuffer, style=dashed];
m1_812 -> m1_813  [key=0, style=solid];
m1_812 -> m1_843  [color=darkseagreen4, key=1, label=unicodeBuffer, style=dashed];
m1_844 -> m1_856  [color=darkseagreen4, key=1, label=unicodeBuffer, style=dashed];
m1_844 -> m1_845  [key=0, style=solid];
m1_849 -> m1_850  [key=0, style=solid];
m1_849 -> m1_853  [key=0, style=solid];
m1_821 -> m1_848  [key=0, style=solid];
m1_823 -> m1_848  [key=0, style=solid];
m1_825 -> m1_848  [key=0, style=solid];
m1_827 -> m1_848  [key=0, style=solid];
m1_829 -> m1_848  [key=0, style=solid];
m1_831 -> m1_848  [key=0, style=solid];
m1_833 -> m1_848  [key=0, style=solid];
m1_835 -> m1_848  [key=0, style=solid];
m1_837 -> m1_848  [key=0, style=solid];
m1_839 -> m1_848  [key=0, style=solid];
m1_841 -> m1_848  [key=0, style=solid];
m1_820 -> m1_821  [key=0, style=solid];
m1_822 -> m1_823  [key=0, style=solid];
m1_824 -> m1_825  [key=0, style=solid];
m1_826 -> m1_827  [key=0, style=solid];
m1_828 -> m1_829  [key=0, style=solid];
m1_830 -> m1_831  [key=0, style=solid];
m1_832 -> m1_833  [key=0, style=solid];
m1_834 -> m1_835  [key=0, style=solid];
m1_836 -> m1_837  [key=0, style=solid];
m1_838 -> m1_839  [key=0, style=solid];
m1_840 -> m1_841  [key=0, style=solid];
m1_843 -> m1_845  [key=0, style=solid];
m1_843 -> m1_844  [key=0, style=solid];
m1_865 -> m1_805  [color=blue, key=0, style=bold];
m1_69 -> m1_70  [key=0, style=solid];
m1_69 -> m1_88  [key=2, style=dotted];
m1_295 -> m1_296  [key=0, style=solid];
m1_311 -> m1_38  [key=2, style=dotted];
m1_311 -> m1_312  [key=0, style=solid];
m1_298 -> m1_15  [key=2, style=dotted];
m1_298 -> m1_299  [key=0, style=solid];
m1_298 -> m1_300  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_298 -> m1_301  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_298 -> m1_302  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_298 -> m1_303  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_298 -> m1_304  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_298 -> m1_305  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_298 -> m1_306  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_298 -> m1_307  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_298 -> m1_308  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_298 -> m1_309  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_296 -> m1_34  [key=2, style=dotted];
m1_296 -> m1_311  [color=darkseagreen4, key=1, label=sb, style=dashed];
m1_296 -> m1_297  [key=0, style=solid];
m1_310 -> m1_311  [key=0, style=solid];
m1_310 -> m1_312  [color=darkseagreen4, key=1, label=expected, style=dashed];
m1_312 -> m1_313  [key=0, style=solid];
m1_312 -> m1_219  [key=2, style=dotted];
m1_297 -> m1_298  [key=0, style=solid];
m1_297 -> m1_35  [key=2, style=dotted];
m1_299 -> m1_300  [key=0, style=solid];
m1_300 -> m1_301  [key=0, style=solid];
m1_301 -> m1_302  [key=0, style=solid];
m1_301 -> m1_88  [key=2, style=dotted];
m1_302 -> m1_303  [key=0, style=solid];
m1_302 -> m1_93  [key=2, style=dotted];
m1_303 -> m1_304  [key=0, style=solid];
m1_303 -> m1_93  [key=2, style=dotted];
m1_304 -> m1_305  [key=0, style=solid];
m1_304 -> m1_93  [key=2, style=dotted];
m1_305 -> m1_306  [key=0, style=solid];
m1_305 -> m1_314  [key=2, style=dotted];
m1_306 -> m1_307  [key=0, style=solid];
m1_306 -> m1_314  [key=2, style=dotted];
m1_307 -> m1_308  [key=0, style=solid];
m1_307 -> m1_314  [key=2, style=dotted];
m1_308 -> m1_309  [key=0, style=solid];
m1_308 -> m1_98  [key=2, style=dotted];
m1_309 -> m1_310  [key=0, style=solid];
m1_309 -> m1_315  [key=2, style=dotted];
m1_313 -> m1_295  [color=blue, key=0, style=bold];
m1_63 -> m1_64  [color=red, key=0, style=solid];
m1_63 -> m1_55  [color=red, key=2, style=dotted];
m1_63 -> m1_47  [color=red, key=2, style=dotted];
m1_63 -> m1_66  [color=red, key=1, label=setter, style=dashed];
m1_47 -> m1_48  [key=0, style=solid];
m1_47 -> m1_52  [key=2, style=dotted];
m1_53 -> m1_48  [color=blue, key=0, style=bold];
m1_740 -> m1_741  [key=0, style=solid];
m1_747 -> m1_22  [key=2, style=dotted];
m1_747 -> m1_748  [key=0, style=solid];
m1_747 -> m1_64  [key=2, style=dotted];
m1_742 -> m1_15  [key=2, style=dotted];
m1_742 -> m1_743  [key=0, style=solid];
m1_742 -> m1_744  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_742 -> m1_745  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_742 -> m1_746  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_741 -> m1_747  [color=darkseagreen4, key=1, label=sw, style=dashed];
m1_741 -> m1_742  [key=0, style=solid];
m1_741 -> m1_61  [key=2, style=dotted];
m1_746 -> m1_747  [key=0, style=solid];
m1_746 -> m1_265  [key=2, style=dotted];
m1_743 -> m1_744  [key=0, style=solid];
m1_744 -> m1_745  [key=0, style=solid];
m1_744 -> m1_16  [key=2, style=dotted];
m1_745 -> m1_746  [key=0, style=solid];
m1_745 -> m1_17  [key=2, style=dotted];
m1_748 -> m1_740  [color=blue, key=0, style=bold];
m1_70 -> m1_71  [color=red, key=0, style=solid];
m1_70 -> m1_89  [key=2, style=dotted];
m1_71 -> m1_72  [color=red, key=0, style=solid];
m1_71 -> m1_47  [color=red, key=2, style=dotted];
m1_71 -> m1_73  [color=red, key=1, label="lambda expression", style=dashed];
m1_71 -> m1_90  [key=2, style=dotted];
m1_72 -> m1_70  [color=blue, key=0, style=bold];
m1_72 -> m1_73  [key=0, style=solid];
m1_72 -> m1_91  [key=2, style=dotted];
m1_887 -> m1_916  [key=0, style=solid];
m1_916 -> m1_917  [key=0, style=solid];
m1_917 -> m1_887  [color=blue, key=0, style=bold];
m1_920 -> m1_921  [key=0, style=solid];
m1_920 -> m1_924  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_921 -> m1_929  [key=2, style=dotted];
m1_921 -> m1_922  [key=0, style=solid];
m1_922 -> m1_923  [key=0, style=solid];
m1_922 -> m1_924  [key=0, style=solid];
m1_923 -> m1_924  [key=0, style=solid];
m1_923 -> m1_866  [key=2, style=dotted];
m1_924 -> m1_925  [key=0, style=solid];
m1_924 -> m1_930  [key=2, style=dotted];
m1_924 -> m1_868  [key=2, style=dotted];
m1_924 -> m1_931  [key=2, style=dotted];
m1_924 -> m1_932  [key=2, style=dotted];
m1_924 -> m1_871  [key=2, style=dotted];
m1_925 -> m1_926  [key=0, style=solid];
m1_925 -> m1_927  [key=0, style=solid];
m1_926 -> m1_927  [key=0, style=solid];
m1_926 -> m1_866  [key=2, style=dotted];
m1_927 -> m1_928  [key=0, style=solid];
m1_927 -> m1_866  [key=2, style=dotted];
m1_928 -> m1_920  [color=blue, key=0, style=bold];
m1_22 -> m1_23  [key=0, style=solid];
m1_23 -> m1_24  [key=0, style=solid];
m1_23 -> m1_11  [key=2, style=dotted];
m1_23 -> m1_25  [color=darkseagreen4, key=1, label=o, style=dashed];
m1_23 -> m1_26  [color=darkseagreen4, key=1, label=o, style=dashed];
m1_24 -> m1_32  [color=green, key=1, label=sb, style=dashed];
m1_24 -> m1_25  [key=0, style=solid];
m1_24 -> m1_34  [key=2, style=dotted];
m1_24 -> m1_12  [key=2, style=dotted];
m1_25 -> m1_26  [key=0, style=solid];
m1_25 -> m1_35  [key=2, style=dotted];
m1_25 -> m1_13  [key=2, style=dotted];
m1_26 -> m1_31  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_26 -> m1_15  [key=2, style=dotted];
m1_26 -> m1_27  [key=0, style=solid];
m1_26 -> m1_28  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_26 -> m1_29  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_26 -> m1_30  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_26 -> m1_13  [key=2, style=dotted];
m1_30 -> m1_31  [key=0, style=solid];
m1_30 -> m1_19  [key=2, style=dotted];
m1_30 -> m1_28  [color=blue, key=0, style=bold];
m1_27 -> m1_28  [key=0, style=solid];
m1_27 -> m1_16  [key=2, style=dotted];
m1_27 -> m1_19  [color=blue, key=0, style=bold];
m1_28 -> m1_29  [key=0, style=solid];
m1_28 -> m1_17  [key=2, style=dotted];
m1_29 -> m1_30  [key=0, style=solid];
m1_29 -> m1_36  [key=2, style=dotted];
m1_29 -> m1_17  [key=2, style=dotted];
m1_29 -> m1_18  [key=2, style=dotted];
m1_474 -> m1_475  [key=0, style=solid];
m1_496 -> m1_38  [key=2, style=dotted];
m1_496 -> m1_22  [key=2, style=dotted];
m1_496 -> m1_497  [key=0, style=solid];
m1_477 -> m1_15  [key=2, style=dotted];
m1_477 -> m1_478  [key=0, style=solid];
m1_477 -> m1_479  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_477 -> m1_480  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_477 -> m1_481  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_477 -> m1_482  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_477 -> m1_483  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_477 -> m1_484  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_477 -> m1_485  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_477 -> m1_486  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_477 -> m1_487  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_477 -> m1_488  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_477 -> m1_489  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_477 -> m1_490  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_477 -> m1_491  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_477 -> m1_492  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_477 -> m1_493  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_477 -> m1_494  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_477 -> m1_495  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_475 -> m1_34  [key=2, style=dotted];
m1_475 -> m1_496  [color=darkseagreen4, key=1, label=sb, style=dashed];
m1_475 -> m1_476  [key=0, style=solid];
m1_495 -> m1_496  [key=0, style=solid];
m1_495 -> m1_98  [key=2, style=dotted];
m1_476 -> m1_477  [key=0, style=solid];
m1_476 -> m1_35  [key=2, style=dotted];
m1_478 -> m1_479  [key=0, style=solid];
m1_479 -> m1_480  [key=0, style=solid];
m1_479 -> m1_88  [key=2, style=dotted];
m1_480 -> m1_481  [key=0, style=solid];
m1_480 -> m1_93  [key=2, style=dotted];
m1_481 -> m1_482  [key=0, style=solid];
m1_481 -> m1_314  [key=2, style=dotted];
m1_482 -> m1_483  [key=0, style=solid];
m1_482 -> m1_93  [key=2, style=dotted];
m1_483 -> m1_484  [key=0, style=solid];
m1_483 -> m1_93  [key=2, style=dotted];
m1_484 -> m1_485  [key=0, style=solid];
m1_484 -> m1_93  [key=2, style=dotted];
m1_485 -> m1_486  [key=0, style=solid];
m1_485 -> m1_93  [key=2, style=dotted];
m1_486 -> m1_487  [key=0, style=solid];
m1_486 -> m1_93  [key=2, style=dotted];
m1_487 -> m1_488  [key=0, style=solid];
m1_487 -> m1_93  [key=2, style=dotted];
m1_488 -> m1_489  [key=0, style=solid];
m1_488 -> m1_93  [key=2, style=dotted];
m1_489 -> m1_490  [key=0, style=solid];
m1_489 -> m1_93  [key=2, style=dotted];
m1_490 -> m1_491  [key=0, style=solid];
m1_490 -> m1_93  [key=2, style=dotted];
m1_491 -> m1_492  [key=0, style=solid];
m1_491 -> m1_93  [key=2, style=dotted];
m1_492 -> m1_493  [key=0, style=solid];
m1_492 -> m1_314  [key=2, style=dotted];
m1_493 -> m1_494  [key=0, style=solid];
m1_493 -> m1_314  [key=2, style=dotted];
m1_494 -> m1_495  [key=0, style=solid];
m1_494 -> m1_314  [key=2, style=dotted];
m1_497 -> m1_474  [color=blue, key=0, style=bold];
m1_941 -> m1_944  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonToken", style=dashed];
m1_941 -> m1_942  [key=0, style=solid];
m1_943 -> m1_945  [key=0, style=solid];
m1_943 -> m1_871  [key=2, style=dotted];
m1_944 -> m1_945  [key=0, style=solid];
m1_944 -> m1_946  [key=2, style=dotted];
m1_942 -> m1_943  [key=0, style=solid];
m1_942 -> m1_944  [key=0, style=solid];
m1_945 -> m1_941  [color=blue, key=0, style=bold];
m1_892 -> m1_893  [key=0, style=solid];
m1_897 -> m1_15  [key=2, style=dotted];
m1_897 -> m1_898  [key=0, style=solid];
m1_897 -> m1_899  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_896 -> m1_897  [key=0, style=solid];
m1_896 -> m1_61  [key=2, style=dotted];
m1_896 -> m1_900  [color=darkseagreen4, key=1, label=stringWriter, style=dashed];
m1_898 -> m1_899  [key=0, style=solid];
m1_898 -> m1_905  [key=2, style=dotted];
m1_899 -> m1_53  [key=2, style=dotted];
m1_899 -> m1_900  [key=0, style=solid];
m1_900 -> m1_219  [key=2, style=dotted];
m1_900 -> m1_64  [key=2, style=dotted];
m1_900 -> m1_901  [key=0, style=solid];
m1_895 -> m1_896  [key=0, style=solid];
m1_895 -> m1_898  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_895 -> m1_904  [key=2, style=dotted];
m1_893 -> m1_898  [color=darkseagreen4, key=1, label=d, style=dashed];
m1_893 -> m1_894  [key=0, style=solid];
m1_893 -> m1_902  [key=2, style=dotted];
m1_894 -> m1_895  [key=0, style=solid];
m1_894 -> m1_903  [key=2, style=dotted];
m1_901 -> m1_892  [color=blue, key=0, style=bold];
m1_561 -> m1_562  [key=0, style=solid];
m1_562 -> m1_564  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_562 -> m1_171  [key=2, style=dotted];
m1_562 -> m1_563  [key=0, style=solid];
m1_563 -> m1_561  [color=blue, key=0, style=bold];
m1_890 -> m1_933  [key=0, style=solid];
m1_933 -> m1_934  [key=0, style=solid];
m1_933 -> m1_929  [key=2, style=dotted];
m1_934 -> m1_935  [key=0, style=solid];
m1_934 -> m1_871  [key=2, style=dotted];
m1_935 -> m1_890  [color=blue, key=0, style=bold];
m1_15 -> m1_16  [key=0, style=solid];
m1_15 -> m1_17  [key=2, style=dotted];
m1_15 -> m1_18  [key=2, style=dotted];
m1_546 -> m1_547  [key=0, style=solid];
m1_41 -> m1_42  [key=0, style=solid];
m1_41 -> m1_15  [key=2, style=dotted];
m1_41 -> m1_51  [key=2, style=dotted];
m1_41 -> m1_43  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_42 -> m1_43  [key=0, style=solid];
m1_42 -> m1_17  [key=2, style=dotted];
m1_42 -> m1_18  [key=2, style=dotted];
m1_42 -> m1_52  [key=2, style=dotted];
m1_43 -> m1_41  [color=blue, key=0, style=bold];
m1_43 -> m1_44  [key=0, style=solid];
m1_43 -> m1_53  [key=2, style=dotted];
m1_48 -> m1_49  [key=0, style=solid];
m1_48 -> m1_53  [key=2, style=dotted];
m1_49 -> m1_50  [key=0, style=solid];
m1_49 -> m1_54  [key=2, style=dotted];
m1_49 -> m1_52  [color=darkseagreen4, key=1, label=p, style=dashed];
m1_50 -> m1_51  [color=red, key=0, style=solid];
m1_50 -> m1_39  [color=blue, key=0, style=bold];
m1_51 -> m1_52  [color=red, key=0, style=solid];
m1_51 -> m1_55  [color=red, key=2, style=dotted];
m1_51 -> m1_47  [color=red, key=2, style=dotted];
m1_61 -> m1_62  [key=0, style=solid];
m1_61 -> m1_54  [key=2, style=dotted];
m1_61 -> m1_66  [color=darkseagreen4, key=1, label=p, style=dashed];
m1_61 -> m1_67  [color=darkseagreen4, key=1, label=p, style=dashed];
m1_66 -> m1_67  [key=0, style=solid];
m1_66 -> m1_56  [key=2, style=dotted];
m1_66 -> m1_34  [key=2, style=dotted];
m1_66 -> m1_85  [color=darkseagreen4, key=1, label=sb, style=dashed];
m1_67 -> m1_68  [key=0, style=solid];
m1_67 -> m1_13  [key=2, style=dotted];
m1_67 -> m1_35  [key=2, style=dotted];
m1_65 -> m1_66  [key=0, style=solid];
m1_65 -> m1_13  [key=2, style=dotted];
m1_68 -> m1_60  [color=blue, key=0, style=bold];
m1_68 -> m1_78  [color=green, key=1, label=jsonWriter, style=dashed];
m1_68 -> m1_15  [key=2, style=dotted];
m1_68 -> m1_69  [key=0, style=solid];
m1_68 -> m1_70  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_68 -> m1_71  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_68 -> m1_72  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_68 -> m1_73  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_68 -> m1_74  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_68 -> m1_75  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_68 -> m1_76  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_68 -> m1_77  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_68 -> m1_79  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_68 -> m1_80  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_68 -> m1_81  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_68 -> m1_82  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_68 -> m1_83  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_73 -> m1_74  [key=0, style=solid];
m1_73 -> m1_92  [key=2, style=dotted];
m1_74 -> m1_75  [color=red, key=0, style=solid];
m1_74 -> m1_80  [key=2, style=dotted];
m1_74 -> m1_76  [color=darkseagreen4, key=1, label=structTest, style=dashed];
m1_74 -> m1_77  [color=darkseagreen4, key=1, label=structTest, style=dashed];
m1_74 -> m1_93  [key=2, style=dotted];
m1_75 -> m1_76  [color=red, key=0, style=solid];
m1_75 -> m1_55  [color=red, key=2, style=dotted];
m1_75 -> m1_47  [color=red, key=2, style=dotted];
m1_75 -> m1_78  [color=red, key=1, label=setter, style=dashed];
m1_75 -> m1_93  [key=2, style=dotted];
m1_76 -> m1_77  [key=0, style=solid];
m1_76 -> m1_56  [key=2, style=dotted];
m1_76 -> m1_93  [key=2, style=dotted];
m1_77 -> m1_78  [color=green, key=0, style=solid];
m1_77 -> m1_13  [key=2, style=dotted];
m1_77 -> m1_94  [key=2, style=dotted];
m1_78 -> m1_79  [color=green, key=0, style=solid];
m1_78 -> m1_81  [key=2, style=dotted];
m1_78 -> m1_56  [key=2, style=dotted];
m1_78 -> m1_90  [color=green, key=2, style=dotted];
m1_79 -> m1_73  [color=blue, key=0, style=bold];
m1_79 -> m1_80  [key=0, style=solid];
m1_79 -> m1_95  [key=2, style=dotted];
m1_85 -> m1_86  [key=0, style=solid];
m1_85 -> m1_38  [key=2, style=dotted];
m1_86 -> m1_87  [color=red, key=0, style=solid];
m1_86 -> m1_69  [key=2, style=dotted];
m1_86 -> m1_88  [color=darkseagreen4, key=1, label=m, style=dashed];
m1_86 -> m1_22  [key=2, style=dotted];
m1_87 -> m1_88  [color=red, key=0, style=solid];
m1_87 -> m1_55  [color=red, key=2, style=dotted];
m1_87 -> m1_47  [color=red, key=2, style=dotted];
m1_87 -> m1_65  [color=blue, key=0, style=bold];
m1_88 -> m1_89  [key=0, style=solid];
m1_88 -> m1_90  [key=2, style=dotted];
m1_88 -> m1_56  [key=2, style=dotted];
m1_174 -> m1_15  [key=2, style=dotted];
m1_174 -> m1_175  [key=0, style=solid];
m1_174 -> m1_176  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_174 -> m1_177  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_555 -> m1_15  [key=2, style=dotted];
m1_555 -> m1_556  [key=0, style=solid];
m1_555 -> m1_557  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_555 -> m1_558  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_555 -> m1_559  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_567 -> m1_15  [key=2, style=dotted];
m1_567 -> m1_568  [key=0, style=solid];
m1_567 -> m1_569  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_553 -> m1_34  [key=2, style=dotted];
m1_553 -> m1_554  [key=0, style=solid];
m1_565 -> m1_34  [key=2, style=dotted];
m1_565 -> m1_566  [key=0, style=solid];
m1_173 -> m1_174  [key=0, style=solid];
m1_173 -> m1_61  [key=2, style=dotted];
m1_175 -> m1_176  [key=0, style=solid];
m1_175 -> m1_139  [key=2, style=dotted];
m1_176 -> m1_177  [key=0, style=solid];
m1_176 -> m1_179  [key=2, style=dotted];
m1_176 -> m1_63  [key=2, style=dotted];
m1_177 -> m1_178  [key=0, style=solid];
m1_177 -> m1_98  [key=2, style=dotted];
m1_544 -> m1_545  [key=0, style=solid];
m1_544 -> m1_534  [key=2, style=dotted];
m1_547 -> m1_548  [key=0, style=solid];
m1_547 -> m1_533  [key=2, style=dotted];
m1_554 -> m1_555  [key=0, style=solid];
m1_554 -> m1_35  [key=2, style=dotted];
m1_556 -> m1_557  [key=0, style=solid];
m1_556 -> m1_88  [key=2, style=dotted];
m1_557 -> m1_558  [key=0, style=solid];
m1_557 -> m1_93  [key=2, style=dotted];
m1_558 -> m1_559  [key=0, style=solid];
m1_558 -> m1_98  [key=2, style=dotted];
m1_559 -> m1_560  [key=0, style=solid];
m1_559 -> m1_98  [key=2, style=dotted];
m1_566 -> m1_567  [key=0, style=solid];
m1_566 -> m1_35  [key=2, style=dotted];
m1_568 -> m1_569  [key=0, style=solid];
m1_569 -> m1_570  [key=0, style=solid];
m1_552 -> m1_553  [key=0, style=solid];
m1_564 -> m1_565  [key=0, style=solid];
m1_172 -> m1_173  [key=0, style=solid];
m1_178 -> m1_172  [color=blue, key=0, style=bold];
m1_543 -> m1_544  [key=0, style=solid];
m1_545 -> m1_543  [color=blue, key=0, style=bold];
m1_548 -> m1_546  [color=blue, key=0, style=bold];
m1_560 -> m1_552  [color=blue, key=0, style=bold];
m1_570 -> m1_564  [color=blue, key=0, style=bold];
m1_889 -> m1_918  [key=0, style=solid];
m1_918 -> m1_919  [key=0, style=solid];
m1_918 -> m1_920  [key=2, style=dotted];
m1_919 -> m1_889  [color=blue, key=0, style=bold];
m1_316 -> m1_317  [key=0, style=solid];
m1_338 -> m1_38  [key=2, style=dotted];
m1_338 -> m1_339  [key=0, style=solid];
m1_319 -> m1_15  [key=2, style=dotted];
m1_319 -> m1_320  [key=0, style=solid];
m1_319 -> m1_321  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_319 -> m1_322  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_319 -> m1_323  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_319 -> m1_324  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_319 -> m1_325  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_319 -> m1_326  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_319 -> m1_327  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_319 -> m1_328  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_319 -> m1_329  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_319 -> m1_330  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_319 -> m1_331  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_319 -> m1_332  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_319 -> m1_333  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_319 -> m1_334  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_319 -> m1_335  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_319 -> m1_336  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_317 -> m1_34  [key=2, style=dotted];
m1_317 -> m1_338  [color=darkseagreen4, key=1, label=sb, style=dashed];
m1_317 -> m1_318  [key=0, style=solid];
m1_337 -> m1_338  [key=0, style=solid];
m1_337 -> m1_339  [color=darkseagreen4, key=1, label=expected, style=dashed];
m1_339 -> m1_340  [key=0, style=solid];
m1_339 -> m1_219  [key=2, style=dotted];
m1_318 -> m1_319  [key=0, style=solid];
m1_318 -> m1_35  [key=2, style=dotted];
m1_320 -> m1_321  [key=0, style=solid];
m1_321 -> m1_322  [key=0, style=solid];
m1_322 -> m1_323  [key=0, style=solid];
m1_322 -> m1_88  [key=2, style=dotted];
m1_323 -> m1_324  [key=0, style=solid];
m1_323 -> m1_93  [key=2, style=dotted];
m1_324 -> m1_325  [key=0, style=solid];
m1_324 -> m1_93  [key=2, style=dotted];
m1_325 -> m1_326  [key=0, style=solid];
m1_325 -> m1_93  [key=2, style=dotted];
m1_326 -> m1_327  [key=0, style=solid];
m1_326 -> m1_314  [key=2, style=dotted];
m1_327 -> m1_328  [key=0, style=solid];
m1_327 -> m1_314  [key=2, style=dotted];
m1_328 -> m1_329  [key=0, style=solid];
m1_328 -> m1_314  [key=2, style=dotted];
m1_329 -> m1_330  [key=0, style=solid];
m1_329 -> m1_341  [key=2, style=dotted];
m1_330 -> m1_331  [key=0, style=solid];
m1_330 -> m1_341  [key=2, style=dotted];
m1_331 -> m1_332  [key=0, style=solid];
m1_331 -> m1_341  [key=2, style=dotted];
m1_332 -> m1_333  [key=0, style=solid];
m1_332 -> m1_342  [key=2, style=dotted];
m1_333 -> m1_334  [key=0, style=solid];
m1_333 -> m1_342  [key=2, style=dotted];
m1_334 -> m1_335  [key=0, style=solid];
m1_334 -> m1_342  [key=2, style=dotted];
m1_335 -> m1_336  [key=0, style=solid];
m1_335 -> m1_98  [key=2, style=dotted];
m1_336 -> m1_337  [key=0, style=solid];
m1_336 -> m1_315  [key=2, style=dotted];
m1_340 -> m1_316  [color=blue, key=0, style=bold];
m1_401 -> m1_402  [key=0, style=solid];
m1_414 -> m1_38  [key=2, style=dotted];
m1_414 -> m1_415  [key=0, style=solid];
m1_404 -> m1_15  [key=2, style=dotted];
m1_404 -> m1_405  [key=0, style=solid];
m1_404 -> m1_406  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_404 -> m1_407  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_404 -> m1_408  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_404 -> m1_409  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_404 -> m1_410  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_404 -> m1_411  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_404 -> m1_412  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_402 -> m1_34  [key=2, style=dotted];
m1_402 -> m1_414  [color=darkseagreen4, key=1, label=sb, style=dashed];
m1_402 -> m1_403  [key=0, style=solid];
m1_413 -> m1_414  [key=0, style=solid];
m1_413 -> m1_415  [color=darkseagreen4, key=1, label=expected, style=dashed];
m1_415 -> m1_416  [key=0, style=solid];
m1_415 -> m1_219  [key=2, style=dotted];
m1_403 -> m1_404  [key=0, style=solid];
m1_403 -> m1_35  [key=2, style=dotted];
m1_405 -> m1_406  [key=0, style=solid];
m1_406 -> m1_407  [key=0, style=solid];
m1_407 -> m1_408  [key=0, style=solid];
m1_407 -> m1_88  [key=2, style=dotted];
m1_408 -> m1_409  [key=0, style=solid];
m1_408 -> m1_93  [key=2, style=dotted];
m1_409 -> m1_410  [key=0, style=solid];
m1_409 -> m1_399  [key=2, style=dotted];
m1_410 -> m1_411  [key=0, style=solid];
m1_410 -> m1_399  [key=2, style=dotted];
m1_411 -> m1_412  [key=0, style=solid];
m1_411 -> m1_314  [key=2, style=dotted];
m1_412 -> m1_413  [key=0, style=solid];
m1_412 -> m1_98  [key=2, style=dotted];
m1_416 -> m1_401  [color=blue, key=0, style=bold];
m1_220 -> m1_221  [key=0, style=solid];
m1_238 -> m1_38  [key=2, style=dotted];
m1_238 -> m1_239  [key=0, style=solid];
m1_223 -> m1_15  [key=2, style=dotted];
m1_223 -> m1_224  [key=0, style=solid];
m1_223 -> m1_225  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_223 -> m1_226  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_223 -> m1_227  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_223 -> m1_228  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_223 -> m1_229  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_223 -> m1_230  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_223 -> m1_231  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_223 -> m1_232  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_223 -> m1_233  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_223 -> m1_234  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_223 -> m1_235  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_223 -> m1_236  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_227 -> m1_90  [key=2, style=dotted];
m1_227 -> m1_228  [key=0, style=solid];
m1_229 -> m1_90  [key=2, style=dotted];
m1_229 -> m1_230  [key=0, style=solid];
m1_232 -> m1_90  [key=2, style=dotted];
m1_232 -> m1_233  [key=0, style=solid];
m1_234 -> m1_90  [key=2, style=dotted];
m1_234 -> m1_235  [key=0, style=solid];
m1_235 -> m1_90  [key=2, style=dotted];
m1_235 -> m1_236  [key=0, style=solid];
m1_221 -> m1_34  [key=2, style=dotted];
m1_221 -> m1_238  [color=darkseagreen4, key=1, label=sb, style=dashed];
m1_221 -> m1_222  [key=0, style=solid];
m1_237 -> m1_238  [key=0, style=solid];
m1_237 -> m1_239  [color=darkseagreen4, key=1, label=expected, style=dashed];
m1_239 -> m1_240  [key=0, style=solid];
m1_239 -> m1_219  [key=2, style=dotted];
m1_222 -> m1_223  [key=0, style=solid];
m1_222 -> m1_35  [key=2, style=dotted];
m1_224 -> m1_225  [key=0, style=solid];
m1_225 -> m1_226  [key=0, style=solid];
m1_225 -> m1_216  [key=2, style=dotted];
m1_226 -> m1_227  [key=0, style=solid];
m1_226 -> m1_217  [key=2, style=dotted];
m1_228 -> m1_229  [key=0, style=solid];
m1_228 -> m1_217  [key=2, style=dotted];
m1_230 -> m1_231  [key=0, style=solid];
m1_230 -> m1_217  [key=2, style=dotted];
m1_231 -> m1_232  [key=0, style=solid];
m1_231 -> m1_88  [key=2, style=dotted];
m1_233 -> m1_234  [key=0, style=solid];
m1_233 -> m1_218  [key=2, style=dotted];
m1_236 -> m1_237  [key=0, style=solid];
m1_236 -> m1_241  [key=2, style=dotted];
m1_240 -> m1_220  [color=blue, key=0, style=bold];
m1_81 -> m1_82  [key=0, style=solid];
m1_81 -> m1_96  [key=2, style=dotted];
m1_749 -> m1_750  [key=0, style=solid];
m1_751 -> m1_15  [key=2, style=dotted];
m1_751 -> m1_752  [key=0, style=solid];
m1_751 -> m1_753  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_751 -> m1_754  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_751 -> m1_755  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_751 -> m1_756  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_751 -> m1_757  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_751 -> m1_758  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_751 -> m1_759  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_751 -> m1_760  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_751 -> m1_761  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_751 -> m1_762  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_751 -> m1_763  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_751 -> m1_764  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_751 -> m1_765  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_751 -> m1_766  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_751 -> m1_767  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_750 -> m1_751  [key=0, style=solid];
m1_750 -> m1_61  [key=2, style=dotted];
m1_750 -> m1_768  [color=darkseagreen4, key=1, label=sw, style=dashed];
m1_752 -> m1_753  [key=0, style=solid];
m1_753 -> m1_754  [key=0, style=solid];
m1_754 -> m1_755  [key=0, style=solid];
m1_754 -> m1_139  [key=2, style=dotted];
m1_755 -> m1_756  [key=0, style=solid];
m1_755 -> m1_710  [key=2, style=dotted];
m1_755 -> m1_711  [key=2, style=dotted];
m1_756 -> m1_757  [key=0, style=solid];
m1_756 -> m1_770  [key=2, style=dotted];
m1_756 -> m1_771  [key=2, style=dotted];
m1_757 -> m1_758  [key=0, style=solid];
m1_758 -> m1_759  [key=0, style=solid];
m1_758 -> m1_710  [key=2, style=dotted];
m1_758 -> m1_711  [key=2, style=dotted];
m1_759 -> m1_760  [key=0, style=solid];
m1_759 -> m1_770  [key=2, style=dotted];
m1_759 -> m1_771  [key=2, style=dotted];
m1_760 -> m1_761  [key=0, style=solid];
m1_761 -> m1_762  [key=0, style=solid];
m1_761 -> m1_710  [key=2, style=dotted];
m1_761 -> m1_711  [key=2, style=dotted];
m1_762 -> m1_763  [key=0, style=solid];
m1_762 -> m1_770  [key=2, style=dotted];
m1_762 -> m1_771  [key=2, style=dotted];
m1_763 -> m1_764  [key=0, style=solid];
m1_763 -> m1_617  [key=2, style=dotted];
m1_764 -> m1_765  [key=0, style=solid];
m1_764 -> m1_772  [key=2, style=dotted];
m1_765 -> m1_766  [key=0, style=solid];
m1_765 -> m1_773  [key=2, style=dotted];
m1_765 -> m1_639  [key=2, style=dotted];
m1_766 -> m1_767  [key=0, style=solid];
m1_766 -> m1_774  [key=2, style=dotted];
m1_767 -> m1_768  [key=0, style=solid];
m1_767 -> m1_265  [key=2, style=dotted];
m1_768 -> m1_219  [key=2, style=dotted];
m1_768 -> m1_64  [key=2, style=dotted];
m1_768 -> m1_769  [key=0, style=solid];
m1_769 -> m1_749  [color=blue, key=0, style=bold];
m1_384 -> m1_385  [key=0, style=solid];
m1_396 -> m1_38  [key=2, style=dotted];
m1_396 -> m1_397  [key=0, style=solid];
m1_387 -> m1_15  [key=2, style=dotted];
m1_387 -> m1_388  [key=0, style=solid];
m1_387 -> m1_389  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_387 -> m1_390  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_387 -> m1_391  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_387 -> m1_392  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_387 -> m1_393  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_387 -> m1_394  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_385 -> m1_34  [key=2, style=dotted];
m1_385 -> m1_396  [color=darkseagreen4, key=1, label=sb, style=dashed];
m1_385 -> m1_386  [key=0, style=solid];
m1_395 -> m1_396  [key=0, style=solid];
m1_395 -> m1_397  [color=darkseagreen4, key=1, label=expected, style=dashed];
m1_397 -> m1_398  [key=0, style=solid];
m1_397 -> m1_219  [key=2, style=dotted];
m1_386 -> m1_387  [key=0, style=solid];
m1_386 -> m1_35  [key=2, style=dotted];
m1_388 -> m1_389  [key=0, style=solid];
m1_389 -> m1_390  [key=0, style=solid];
m1_390 -> m1_391  [key=0, style=solid];
m1_390 -> m1_399  [key=2, style=dotted];
m1_391 -> m1_392  [key=0, style=solid];
m1_391 -> m1_400  [key=2, style=dotted];
m1_392 -> m1_393  [key=0, style=solid];
m1_392 -> m1_88  [key=2, style=dotted];
m1_393 -> m1_394  [key=0, style=solid];
m1_393 -> m1_93  [key=2, style=dotted];
m1_394 -> m1_395  [key=0, style=solid];
m1_394 -> m1_98  [key=2, style=dotted];
m1_398 -> m1_384  [color=blue, key=0, style=bold];
m1_80 -> m1_90  [key=2, style=dotted];
m1_80 -> m1_81  [key=0, style=solid];
m1_82 -> m1_83  [color=red, key=0, style=solid];
m1_82 -> m1_97  [key=2, style=dotted];
m1_83 -> m1_84  [color=red, key=0, style=solid];
m1_83 -> m1_98  [key=2, style=dotted];
m1_83 -> m1_47  [color=red, key=2, style=dotted];
m1_83 -> m1_85  [color=red, key=1, label="lambda expression", style=dashed];
m1_84 -> m1_85  [key=0, style=solid];
m1_84 -> m1_86  [color=darkseagreen4, key=1, label=expected, style=dashed];
m1_84 -> m1_82  [color=blue, key=0, style=bold];
m1_266 -> m1_267  [key=0, style=solid];
m1_270 -> m1_22  [key=2, style=dotted];
m1_270 -> m1_271  [key=0, style=solid];
m1_272 -> m1_22  [key=2, style=dotted];
m1_272 -> m1_273  [key=0, style=solid];
m1_273 -> m1_22  [key=2, style=dotted];
m1_273 -> m1_274  [key=0, style=solid];
m1_275 -> m1_22  [key=2, style=dotted];
m1_275 -> m1_276  [key=0, style=solid];
m1_276 -> m1_22  [key=2, style=dotted];
m1_276 -> m1_277  [key=0, style=solid];
m1_278 -> m1_22  [key=2, style=dotted];
m1_278 -> m1_279  [key=0, style=solid];
m1_279 -> m1_22  [key=2, style=dotted];
m1_279 -> m1_280  [key=0, style=solid];
m1_281 -> m1_22  [key=2, style=dotted];
m1_281 -> m1_282  [key=0, style=solid];
m1_282 -> m1_22  [key=2, style=dotted];
m1_282 -> m1_283  [key=0, style=solid];
m1_284 -> m1_22  [key=2, style=dotted];
m1_284 -> m1_285  [key=0, style=solid];
m1_286 -> m1_22  [key=2, style=dotted];
m1_286 -> m1_287  [key=0, style=solid];
m1_287 -> m1_22  [key=2, style=dotted];
m1_287 -> m1_288  [key=0, style=solid];
m1_289 -> m1_22  [key=2, style=dotted];
m1_289 -> m1_290  [key=0, style=solid];
m1_290 -> m1_22  [key=2, style=dotted];
m1_290 -> m1_291  [key=0, style=solid];
m1_292 -> m1_22  [key=2, style=dotted];
m1_292 -> m1_293  [key=0, style=solid];
m1_293 -> m1_22  [key=2, style=dotted];
m1_293 -> m1_294  [key=0, style=solid];
m1_269 -> m1_15  [key=2, style=dotted];
m1_269 -> m1_270  [key=0, style=solid];
m1_269 -> m1_272  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_269 -> m1_273  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_269 -> m1_275  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_269 -> m1_276  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_269 -> m1_278  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_269 -> m1_279  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_269 -> m1_281  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_269 -> m1_282  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_269 -> m1_284  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_269 -> m1_286  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_269 -> m1_287  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_269 -> m1_289  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_269 -> m1_290  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_269 -> m1_292  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_269 -> m1_293  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_269 -> m1_271  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_269 -> m1_274  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_269 -> m1_277  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_269 -> m1_280  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_269 -> m1_283  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_269 -> m1_285  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_269 -> m1_288  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_269 -> m1_291  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_277 -> m1_90  [key=2, style=dotted];
m1_277 -> m1_278  [key=0, style=solid];
m1_285 -> m1_90  [key=2, style=dotted];
m1_285 -> m1_286  [key=0, style=solid];
m1_267 -> m1_34  [key=2, style=dotted];
m1_267 -> m1_268  [key=0, style=solid];
m1_271 -> m1_272  [key=0, style=solid];
m1_271 -> m1_216  [key=2, style=dotted];
m1_274 -> m1_275  [key=0, style=solid];
m1_274 -> m1_217  [key=2, style=dotted];
m1_280 -> m1_281  [key=0, style=solid];
m1_280 -> m1_217  [key=2, style=dotted];
m1_283 -> m1_284  [key=0, style=solid];
m1_283 -> m1_88  [key=2, style=dotted];
m1_288 -> m1_289  [key=0, style=solid];
m1_288 -> m1_265  [key=2, style=dotted];
m1_291 -> m1_292  [key=0, style=solid];
m1_291 -> m1_19  [key=2, style=dotted];
m1_268 -> m1_269  [key=0, style=solid];
m1_268 -> m1_35  [key=2, style=dotted];
m1_294 -> m1_266  [color=blue, key=0, style=bold];
m1_535 -> m1_536  [key=0, style=solid];
m1_538 -> m1_15  [key=2, style=dotted];
m1_538 -> m1_539  [key=0, style=solid];
m1_538 -> m1_540  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_538 -> m1_544  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_538 -> m1_541  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_538 -> m1_547  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_536 -> m1_34  [key=2, style=dotted];
m1_536 -> m1_537  [key=0, style=solid];
m1_537 -> m1_538  [key=0, style=solid];
m1_537 -> m1_35  [key=2, style=dotted];
m1_539 -> m1_540  [key=0, style=solid];
m1_539 -> m1_533  [key=2, style=dotted];
m1_540 -> m1_541  [key=0, style=solid];
m1_540 -> m1_171  [key=2, style=dotted];
m1_540 -> m1_543  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_541 -> m1_542  [key=0, style=solid];
m1_541 -> m1_171  [key=2, style=dotted];
m1_541 -> m1_546  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_542 -> m1_535  [color=blue, key=0, style=bold];
m1_704 -> m1_705  [key=0, style=solid];
m1_708 -> m1_22  [key=2, style=dotted];
m1_708 -> m1_709  [key=0, style=solid];
m1_708 -> m1_64  [key=2, style=dotted];
m1_706 -> m1_15  [key=2, style=dotted];
m1_706 -> m1_707  [key=0, style=solid];
m1_705 -> m1_708  [color=darkseagreen4, key=1, label=sw, style=dashed];
m1_705 -> m1_706  [key=0, style=solid];
m1_705 -> m1_61  [key=2, style=dotted];
m1_707 -> m1_708  [key=0, style=solid];
m1_707 -> m1_710  [key=2, style=dotted];
m1_707 -> m1_711  [key=2, style=dotted];
m1_709 -> m1_704  [color=blue, key=0, style=bold];
m1_601 -> m1_602  [key=0, style=solid];
m1_611 -> m1_38  [key=2, style=dotted];
m1_611 -> m1_612  [key=0, style=solid];
m1_611 -> m1_613  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_614 -> m1_22  [key=2, style=dotted];
m1_614 -> m1_615  [key=0, style=solid];
m1_614 -> m1_21  [key=2, style=dotted];
m1_608 -> m1_22  [key=2, style=dotted];
m1_608 -> m1_609  [key=0, style=solid];
m1_612 -> m1_22  [key=2, style=dotted];
m1_612 -> m1_613  [key=0, style=solid];
m1_606 -> m1_15  [key=2, style=dotted];
m1_606 -> m1_608  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_606 -> m1_607  [key=0, style=solid];
m1_606 -> m1_609  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_602 -> m1_34  [key=2, style=dotted];
m1_602 -> m1_611  [color=darkseagreen4, key=1, label=sb, style=dashed];
m1_602 -> m1_603  [key=0, style=solid];
m1_610 -> m1_611  [key=0, style=solid];
m1_610 -> m1_612  [color=darkseagreen4, key=1, label=expected, style=dashed];
m1_613 -> m1_614  [key=0, style=solid];
m1_613 -> m1_618  [key=2, style=dotted];
m1_613 -> m1_619  [key=2, style=dotted];
m1_604 -> m1_614  [color=darkseagreen4, key=1, label=text, style=dashed];
m1_604 -> m1_605  [key=0, style=solid];
m1_607 -> m1_608  [key=0, style=solid];
m1_609 -> m1_610  [key=0, style=solid];
m1_609 -> m1_617  [key=2, style=dotted];
m1_603 -> m1_606  [color=darkseagreen4, key=1, label=sw, style=dashed];
m1_603 -> m1_35  [key=2, style=dotted];
m1_603 -> m1_604  [key=0, style=solid];
m1_605 -> m1_606  [key=0, style=solid];
m1_605 -> m1_609  [color=darkseagreen4, key=1, label=data, style=dashed];
m1_605 -> m1_616  [key=2, style=dotted];
m1_615 -> m1_601  [color=blue, key=0, style=bold];
m1_687 -> m1_688  [key=0, style=solid];
m1_700 -> m1_22  [key=2, style=dotted];
m1_700 -> m1_690  [key=0, style=solid];
m1_688 -> m1_700  [color=darkseagreen4, key=1, label=stateArray, style=dashed];
m1_688 -> m1_689  [key=0, style=solid];
m1_688 -> m1_702  [key=2, style=dotted];
m1_689 -> m1_700  [color=darkseagreen4, key=1, label=valueStates, style=dashed];
m1_689 -> m1_690  [key=0, style=solid];
m1_690 -> m1_700  [color=darkseagreen4, key=1, label=valueToken, style=dashed];
m1_690 -> m1_691  [key=0, style=solid];
m1_690 -> m1_701  [key=0, style=solid];
m1_690 -> m1_703  [key=2, style=dotted];
m1_699 -> m1_700  [key=0, style=solid];
m1_691 -> m1_692  [key=0, style=solid];
m1_698 -> m1_699  [key=0, style=solid];
m1_692 -> m1_693  [key=0, style=solid];
m1_697 -> m1_698  [key=0, style=solid];
m1_693 -> m1_694  [key=0, style=solid];
m1_696 -> m1_697  [key=0, style=solid];
m1_694 -> m1_695  [key=0, style=solid];
m1_695 -> m1_696  [key=0, style=solid];
m1_701 -> m1_687  [color=blue, key=0, style=bold];
m1_873 -> m1_874  [key=0, style=solid];
m1_877 -> m1_22  [key=2, style=dotted];
m1_877 -> m1_878  [key=0, style=solid];
m1_879 -> m1_22  [key=2, style=dotted];
m1_879 -> m1_880  [key=0, style=solid];
m1_880 -> m1_22  [key=2, style=dotted];
m1_880 -> m1_881  [key=0, style=solid];
m1_882 -> m1_22  [key=2, style=dotted];
m1_882 -> m1_883  [key=0, style=solid];
m1_884 -> m1_22  [key=2, style=dotted];
m1_884 -> m1_885  [key=0, style=solid];
m1_875 -> m1_877  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_875 -> m1_879  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_875 -> m1_880  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_875 -> m1_882  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_875 -> m1_884  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_875 -> m1_876  [key=0, style=solid];
m1_875 -> m1_887  [key=2, style=dotted];
m1_875 -> m1_878  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_875 -> m1_881  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_875 -> m1_883  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_876 -> m1_877  [key=0, style=solid];
m1_876 -> m1_888  [key=2, style=dotted];
m1_878 -> m1_879  [key=0, style=solid];
m1_878 -> m1_889  [key=2, style=dotted];
m1_881 -> m1_882  [key=0, style=solid];
m1_881 -> m1_890  [key=2, style=dotted];
m1_883 -> m1_884  [key=0, style=solid];
m1_883 -> m1_891  [key=2, style=dotted];
m1_885 -> m1_219  [key=2, style=dotted];
m1_885 -> m1_64  [key=2, style=dotted];
m1_885 -> m1_886  [key=0, style=solid];
m1_874 -> m1_875  [key=0, style=solid];
m1_874 -> m1_885  [color=darkseagreen4, key=1, label=sw, style=dashed];
m1_874 -> m1_61  [key=2, style=dotted];
m1_886 -> m1_873  [color=blue, key=0, style=bold];
m1_906 -> m1_907  [key=0, style=solid];
m1_910 -> m1_15  [key=2, style=dotted];
m1_910 -> m1_911  [key=0, style=solid];
m1_910 -> m1_912  [color=darkseagreen4, key=1, label=w, style=dashed];
m1_909 -> m1_910  [key=0, style=solid];
m1_909 -> m1_61  [key=2, style=dotted];
m1_909 -> m1_913  [color=darkseagreen4, key=1, label=sw, style=dashed];
m1_911 -> m1_912  [key=0, style=solid];
m1_912 -> m1_913  [key=0, style=solid];
m1_912 -> m1_915  [key=2, style=dotted];
m1_913 -> m1_219  [key=2, style=dotted];
m1_913 -> m1_64  [key=2, style=dotted];
m1_913 -> m1_914  [key=0, style=solid];
m1_908 -> m1_909  [key=0, style=solid];
m1_908 -> m1_912  [color=darkseagreen4, key=1, label=r, style=dashed];
m1_908 -> m1_438  [key=2, style=dotted];
m1_908 -> m1_439  [key=2, style=dotted];
m1_907 -> m1_908  [key=0, style=solid];
m1_914 -> m1_906  [color=blue, key=0, style=bold];
m1_442 -> m1_443  [key=0, style=solid];
m1_454 -> m1_38  [key=2, style=dotted];
m1_454 -> m1_22  [key=2, style=dotted];
m1_454 -> m1_455  [key=0, style=solid];
m1_445 -> m1_15  [key=2, style=dotted];
m1_445 -> m1_446  [key=0, style=solid];
m1_445 -> m1_448  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_445 -> m1_450  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_445 -> m1_451  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_445 -> m1_453  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_443 -> m1_34  [key=2, style=dotted];
m1_443 -> m1_454  [color=darkseagreen4, key=1, label=sb, style=dashed];
m1_443 -> m1_444  [key=0, style=solid];
m1_453 -> m1_454  [key=0, style=solid];
m1_453 -> m1_19  [key=2, style=dotted];
m1_444 -> m1_445  [key=0, style=solid];
m1_444 -> m1_35  [key=2, style=dotted];
m1_446 -> m1_447  [key=0, style=solid];
m1_446 -> m1_449  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_446 -> m1_450  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_446 -> m1_452  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_448 -> m1_449  [key=0, style=solid];
m1_448 -> m1_216  [key=2, style=dotted];
m1_450 -> m1_451  [key=0, style=solid];
m1_450 -> m1_217  [key=2, style=dotted];
m1_451 -> m1_452  [key=0, style=solid];
m1_451 -> m1_456  [key=2, style=dotted];
m1_449 -> m1_453  [key=0, style=solid];
m1_449 -> m1_450  [key=0, style=solid];
m1_447 -> m1_448  [key=0, style=solid];
m1_447 -> m1_451  [color=darkseagreen4, key=1, label=rawJson, style=dashed];
m1_452 -> m1_449  [key=0, style=solid];
m1_452 -> m1_452  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_455 -> m1_442  [color=blue, key=0, style=bold];
m1_19 -> m1_20  [key=0, style=solid];
m1_989 -> m1_992  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_989 -> m1_990  [key=0, style=solid];
m1_992 -> m1_806  [key=2, style=dotted];
m1_992 -> m1_993  [key=0, style=solid];
m1_990 -> m1_992  [key=0, style=solid];
m1_990 -> m1_991  [key=0, style=solid];
m1_991 -> m1_993  [key=0, style=solid];
m1_993 -> m1_989  [color=blue, key=0, style=bold];
m1_723 -> m1_724  [key=0, style=solid];
m1_732 -> m1_22  [key=2, style=dotted];
m1_732 -> m1_733  [key=0, style=solid];
m1_732 -> m1_722  [key=2, style=dotted];
m1_729 -> m1_22  [key=2, style=dotted];
m1_729 -> m1_730  [key=0, style=solid];
m1_730 -> m1_22  [key=2, style=dotted];
m1_730 -> m1_731  [key=0, style=solid];
m1_737 -> m1_22  [key=2, style=dotted];
m1_737 -> m1_738  [key=0, style=solid];
m1_738 -> m1_22  [key=2, style=dotted];
m1_738 -> m1_739  [key=0, style=solid];
m1_725 -> m1_15  [key=2, style=dotted];
m1_725 -> m1_726  [key=0, style=solid];
m1_725 -> m1_727  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_734 -> m1_15  [key=2, style=dotted];
m1_734 -> m1_735  [key=0, style=solid];
m1_726 -> m1_732  [color=darkseagreen4, key=1, label=unicode, style=dashed];
m1_726 -> m1_727  [key=0, style=solid];
m1_726 -> m1_735  [color=darkseagreen4, key=1, label=unicode, style=dashed];
m1_731 -> m1_732  [key=0, style=solid];
m1_731 -> m1_438  [key=2, style=dotted];
m1_731 -> m1_439  [key=2, style=dotted];
m1_733 -> m1_734  [key=0, style=solid];
m1_733 -> m1_61  [key=2, style=dotted];
m1_733 -> m1_736  [color=darkseagreen4, key=1, label=sw, style=dashed];
m1_728 -> m1_729  [key=0, style=solid];
m1_728 -> m1_730  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_728 -> m1_64  [key=2, style=dotted];
m1_728 -> m1_731  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_736 -> m1_737  [key=0, style=solid];
m1_736 -> m1_738  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_736 -> m1_64  [key=2, style=dotted];
m1_724 -> m1_725  [key=0, style=solid];
m1_724 -> m1_728  [color=darkseagreen4, key=1, label=sw, style=dashed];
m1_724 -> m1_61  [key=2, style=dotted];
m1_727 -> m1_728  [key=0, style=solid];
m1_727 -> m1_36  [key=2, style=dotted];
m1_735 -> m1_736  [key=0, style=solid];
m1_735 -> m1_36  [key=2, style=dotted];
m1_739 -> m1_723  [color=blue, key=0, style=bold];
m1_429 -> m1_430  [key=0, style=solid];
m1_436 -> m1_22  [key=2, style=dotted];
m1_436 -> m1_437  [key=0, style=solid];
m1_436 -> m1_64  [key=2, style=dotted];
m1_434 -> m1_15  [key=2, style=dotted];
m1_434 -> m1_435  [key=0, style=solid];
m1_435 -> m1_436  [key=0, style=solid];
m1_435 -> m1_441  [key=2, style=dotted];
m1_433 -> m1_436  [color=darkseagreen4, key=1, label=sw, style=dashed];
m1_433 -> m1_434  [key=0, style=solid];
m1_433 -> m1_61  [key=2, style=dotted];
m1_430 -> m1_435  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_430 -> m1_431  [key=0, style=solid];
m1_430 -> m1_438  [key=2, style=dotted];
m1_430 -> m1_439  [key=2, style=dotted];
m1_430 -> m1_432  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_432 -> m1_433  [key=0, style=solid];
m1_432 -> m1_440  [key=2, style=dotted];
m1_431 -> m1_432  [key=0, style=solid];
m1_431 -> m1_440  [key=2, style=dotted];
m1_437 -> m1_429  [color=blue, key=0, style=bold];
m1_168 -> m1_169  [key=0, style=solid];
m1_169 -> m1_172  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_169 -> m1_171  [key=2, style=dotted];
m1_169 -> m1_170  [key=0, style=solid];
m1_170 -> m1_168  [color=blue, key=0, style=bold];
m1_520 -> m1_521  [key=0, style=solid];
m1_531 -> m1_38  [key=2, style=dotted];
m1_531 -> m1_22  [key=2, style=dotted];
m1_531 -> m1_532  [key=0, style=solid];
m1_523 -> m1_15  [key=2, style=dotted];
m1_523 -> m1_524  [key=0, style=solid];
m1_523 -> m1_525  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_523 -> m1_526  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_523 -> m1_527  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_523 -> m1_528  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_523 -> m1_529  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_523 -> m1_530  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_521 -> m1_34  [key=2, style=dotted];
m1_521 -> m1_531  [color=darkseagreen4, key=1, label=sb, style=dashed];
m1_521 -> m1_522  [key=0, style=solid];
m1_530 -> m1_531  [key=0, style=solid];
m1_530 -> m1_533  [key=2, style=dotted];
m1_522 -> m1_523  [key=0, style=solid];
m1_522 -> m1_35  [key=2, style=dotted];
m1_524 -> m1_525  [key=0, style=solid];
m1_524 -> m1_533  [key=2, style=dotted];
m1_525 -> m1_526  [key=0, style=solid];
m1_525 -> m1_534  [key=2, style=dotted];
m1_526 -> m1_527  [key=0, style=solid];
m1_526 -> m1_533  [key=2, style=dotted];
m1_527 -> m1_528  [key=0, style=solid];
m1_527 -> m1_534  [key=2, style=dotted];
m1_528 -> m1_529  [key=0, style=solid];
m1_528 -> m1_534  [key=2, style=dotted];
m1_529 -> m1_530  [key=0, style=solid];
m1_529 -> m1_533  [key=2, style=dotted];
m1_532 -> m1_520  [color=blue, key=0, style=bold];
m1_549 -> m1_550  [key=0, style=solid];
m1_550 -> m1_552  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_550 -> m1_171  [key=2, style=dotted];
m1_550 -> m1_551  [key=0, style=solid];
m1_551 -> m1_549  [color=blue, key=0, style=bold];
m1_640 -> m1_641  [key=0, style=solid];
m1_683 -> m1_38  [key=2, style=dotted];
m1_683 -> m1_684  [key=0, style=solid];
m1_683 -> m1_219  [key=2, style=dotted];
m1_648 -> m1_22  [key=2, style=dotted];
m1_648 -> m1_649  [key=0, style=solid];
m1_650 -> m1_22  [key=2, style=dotted];
m1_650 -> m1_651  [key=0, style=solid];
m1_652 -> m1_22  [key=2, style=dotted];
m1_652 -> m1_653  [key=0, style=solid];
m1_654 -> m1_22  [key=2, style=dotted];
m1_654 -> m1_655  [key=0, style=solid];
m1_656 -> m1_22  [key=2, style=dotted];
m1_656 -> m1_657  [key=0, style=solid];
m1_658 -> m1_22  [key=2, style=dotted];
m1_658 -> m1_659  [key=0, style=solid];
m1_660 -> m1_22  [key=2, style=dotted];
m1_660 -> m1_661  [key=0, style=solid];
m1_662 -> m1_22  [key=2, style=dotted];
m1_662 -> m1_663  [key=0, style=solid];
m1_664 -> m1_22  [key=2, style=dotted];
m1_664 -> m1_665  [key=0, style=solid];
m1_666 -> m1_22  [key=2, style=dotted];
m1_666 -> m1_667  [key=0, style=solid];
m1_668 -> m1_22  [key=2, style=dotted];
m1_668 -> m1_669  [key=0, style=solid];
m1_670 -> m1_22  [key=2, style=dotted];
m1_670 -> m1_671  [key=0, style=solid];
m1_672 -> m1_22  [key=2, style=dotted];
m1_672 -> m1_673  [key=0, style=solid];
m1_674 -> m1_22  [key=2, style=dotted];
m1_674 -> m1_675  [key=0, style=solid];
m1_676 -> m1_22  [key=2, style=dotted];
m1_676 -> m1_677  [key=0, style=solid];
m1_678 -> m1_22  [key=2, style=dotted];
m1_678 -> m1_679  [key=0, style=solid];
m1_680 -> m1_22  [key=2, style=dotted];
m1_680 -> m1_681  [key=0, style=solid];
m1_682 -> m1_22  [key=2, style=dotted];
m1_682 -> m1_683  [key=0, style=solid];
m1_645 -> m1_15  [key=2, style=dotted];
m1_645 -> m1_648  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_645 -> m1_650  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_645 -> m1_652  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_645 -> m1_654  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_645 -> m1_656  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_645 -> m1_658  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_645 -> m1_660  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_645 -> m1_662  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_645 -> m1_664  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_645 -> m1_666  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_645 -> m1_668  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_645 -> m1_670  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_645 -> m1_672  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_645 -> m1_674  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_645 -> m1_676  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_645 -> m1_678  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_645 -> m1_680  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_645 -> m1_682  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_645 -> m1_646  [key=0, style=solid];
m1_645 -> m1_647  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_645 -> m1_649  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_645 -> m1_651  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_645 -> m1_653  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_645 -> m1_655  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_645 -> m1_657  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_645 -> m1_659  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_645 -> m1_661  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_645 -> m1_663  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_645 -> m1_665  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_645 -> m1_667  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_645 -> m1_669  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_645 -> m1_671  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_645 -> m1_673  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_645 -> m1_675  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_645 -> m1_677  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_645 -> m1_679  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_645 -> m1_681  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_641 -> m1_34  [key=2, style=dotted];
m1_641 -> m1_683  [color=darkseagreen4, key=1, label=sb, style=dashed];
m1_641 -> m1_642  [key=0, style=solid];
m1_647 -> m1_648  [key=0, style=solid];
m1_647 -> m1_139  [key=2, style=dotted];
m1_649 -> m1_650  [key=0, style=solid];
m1_649 -> m1_16  [key=2, style=dotted];
m1_651 -> m1_652  [key=0, style=solid];
m1_651 -> m1_17  [key=2, style=dotted];
m1_653 -> m1_654  [key=0, style=solid];
m1_653 -> m1_139  [key=2, style=dotted];
m1_655 -> m1_656  [key=0, style=solid];
m1_655 -> m1_600  [key=2, style=dotted];
m1_657 -> m1_658  [key=0, style=solid];
m1_657 -> m1_139  [key=2, style=dotted];
m1_659 -> m1_660  [key=0, style=solid];
m1_659 -> m1_139  [key=2, style=dotted];
m1_661 -> m1_662  [key=0, style=solid];
m1_661 -> m1_139  [key=2, style=dotted];
m1_663 -> m1_664  [key=0, style=solid];
m1_663 -> m1_19  [key=2, style=dotted];
m1_665 -> m1_666  [key=0, style=solid];
m1_665 -> m1_16  [key=2, style=dotted];
m1_667 -> m1_668  [key=0, style=solid];
m1_667 -> m1_17  [key=2, style=dotted];
m1_669 -> m1_670  [key=0, style=solid];
m1_669 -> m1_685  [key=2, style=dotted];
m1_671 -> m1_672  [key=0, style=solid];
m1_671 -> m1_686  [key=2, style=dotted];
m1_673 -> m1_674  [key=0, style=solid];
m1_673 -> m1_139  [key=2, style=dotted];
m1_675 -> m1_676  [key=0, style=solid];
m1_675 -> m1_600  [key=2, style=dotted];
m1_677 -> m1_678  [key=0, style=solid];
m1_677 -> m1_265  [key=2, style=dotted];
m1_679 -> m1_680  [key=0, style=solid];
m1_679 -> m1_19  [key=2, style=dotted];
m1_681 -> m1_682  [key=0, style=solid];
m1_681 -> m1_98  [key=2, style=dotted];
m1_642 -> m1_645  [color=darkseagreen4, key=1, label=sw, style=dashed];
m1_642 -> m1_35  [key=2, style=dotted];
m1_642 -> m1_643  [key=0, style=solid];
m1_644 -> m1_645  [key=0, style=solid];
m1_644 -> m1_616  [key=2, style=dotted];
m1_646 -> m1_647  [key=0, style=solid];
m1_643 -> m1_644  [key=0, style=solid];
m1_684 -> m1_640  [color=blue, key=0, style=bold];
m1_194 -> m1_195  [key=0, style=solid];
m1_213 -> m1_38  [key=2, style=dotted];
m1_213 -> m1_214  [key=0, style=solid];
m1_211 -> m1_22  [key=2, style=dotted];
m1_211 -> m1_212  [key=0, style=solid];
m1_197 -> m1_15  [key=2, style=dotted];
m1_197 -> m1_211  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_197 -> m1_198  [key=0, style=solid];
m1_197 -> m1_199  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_197 -> m1_200  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_197 -> m1_201  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_197 -> m1_202  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_197 -> m1_203  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_197 -> m1_204  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_197 -> m1_205  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_197 -> m1_206  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_197 -> m1_207  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_197 -> m1_208  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_197 -> m1_209  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_197 -> m1_210  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_201 -> m1_90  [key=2, style=dotted];
m1_201 -> m1_202  [key=0, style=solid];
m1_203 -> m1_90  [key=2, style=dotted];
m1_203 -> m1_204  [key=0, style=solid];
m1_206 -> m1_90  [key=2, style=dotted];
m1_206 -> m1_207  [key=0, style=solid];
m1_208 -> m1_90  [key=2, style=dotted];
m1_208 -> m1_209  [key=0, style=solid];
m1_209 -> m1_90  [key=2, style=dotted];
m1_209 -> m1_210  [key=0, style=solid];
m1_195 -> m1_34  [key=2, style=dotted];
m1_195 -> m1_213  [color=darkseagreen4, key=1, label=sb, style=dashed];
m1_195 -> m1_196  [key=0, style=solid];
m1_212 -> m1_213  [key=0, style=solid];
m1_212 -> m1_214  [color=darkseagreen4, key=1, label=expected, style=dashed];
m1_214 -> m1_215  [key=0, style=solid];
m1_214 -> m1_219  [key=2, style=dotted];
m1_210 -> m1_211  [key=0, style=solid];
m1_210 -> m1_19  [key=2, style=dotted];
m1_196 -> m1_197  [key=0, style=solid];
m1_196 -> m1_35  [key=2, style=dotted];
m1_198 -> m1_199  [key=0, style=solid];
m1_199 -> m1_200  [key=0, style=solid];
m1_199 -> m1_216  [key=2, style=dotted];
m1_200 -> m1_201  [key=0, style=solid];
m1_200 -> m1_217  [key=2, style=dotted];
m1_202 -> m1_203  [key=0, style=solid];
m1_202 -> m1_217  [key=2, style=dotted];
m1_204 -> m1_205  [key=0, style=solid];
m1_204 -> m1_217  [key=2, style=dotted];
m1_205 -> m1_206  [key=0, style=solid];
m1_205 -> m1_88  [key=2, style=dotted];
m1_207 -> m1_208  [key=0, style=solid];
m1_207 -> m1_218  [key=2, style=dotted];
m1_215 -> m1_194  [color=blue, key=0, style=bold];
m1_457 -> m1_458  [key=0, style=solid];
m1_470 -> m1_38  [key=2, style=dotted];
m1_470 -> m1_22  [key=2, style=dotted];
m1_470 -> m1_471  [key=0, style=solid];
m1_460 -> m1_15  [key=2, style=dotted];
m1_460 -> m1_461  [key=0, style=solid];
m1_460 -> m1_462  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_460 -> m1_463  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_460 -> m1_464  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_460 -> m1_465  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_460 -> m1_466  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_460 -> m1_467  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_460 -> m1_468  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_460 -> m1_469  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_466 -> m1_90  [key=2, style=dotted];
m1_466 -> m1_467  [key=0, style=solid];
m1_458 -> m1_34  [key=2, style=dotted];
m1_458 -> m1_470  [color=darkseagreen4, key=1, label=sb, style=dashed];
m1_458 -> m1_459  [key=0, style=solid];
m1_469 -> m1_470  [key=0, style=solid];
m1_469 -> m1_19  [key=2, style=dotted];
m1_459 -> m1_460  [key=0, style=solid];
m1_459 -> m1_35  [key=2, style=dotted];
m1_461 -> m1_462  [key=0, style=solid];
m1_461 -> m1_216  [key=2, style=dotted];
m1_462 -> m1_463  [key=0, style=solid];
m1_462 -> m1_217  [key=2, style=dotted];
m1_463 -> m1_464  [key=0, style=solid];
m1_463 -> m1_472  [key=2, style=dotted];
m1_464 -> m1_465  [key=0, style=solid];
m1_464 -> m1_216  [key=2, style=dotted];
m1_465 -> m1_466  [key=0, style=solid];
m1_465 -> m1_217  [key=2, style=dotted];
m1_467 -> m1_19  [key=2, style=dotted];
m1_467 -> m1_468  [key=0, style=solid];
m1_468 -> m1_469  [key=0, style=solid];
m1_468 -> m1_473  [key=2, style=dotted];
m1_471 -> m1_457  [color=blue, key=0, style=bold];
m1_1003 -> m1_544  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_1003 -> m1_547  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_1004 -> m1_916  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.CustomJsonTextWriter", style=dashed];
m1_1004 -> m1_936  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.CustomJsonTextWriter", style=dashed];
m1_1004 -> m1_918  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.CustomJsonTextWriter", style=dashed];
m1_1004 -> m1_933  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.CustomJsonTextWriter", style=dashed];
m1_1004 -> m1_939  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.CustomJsonTextWriter", style=dashed];
m1_1004 -> m1_921  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.CustomJsonTextWriter", style=dashed];
m1_1004 -> m1_922  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.CustomJsonTextWriter", style=dashed];
m1_1004 -> m1_923  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.CustomJsonTextWriter", style=dashed];
m1_1004 -> m1_924  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.CustomJsonTextWriter", style=dashed];
m1_1004 -> m1_925  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.CustomJsonTextWriter", style=dashed];
m1_1004 -> m1_926  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.CustomJsonTextWriter", style=dashed];
m1_1004 -> m1_927  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.CustomJsonTextWriter", style=dashed];
m1_1004 -> m1_934  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.CustomJsonTextWriter", style=dashed];
m1_1004 -> m1_937  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.CustomJsonTextWriter", style=dashed];
m1_1004 -> m1_943  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.CustomJsonTextWriter", style=dashed];
m1_1004 -> m1_944  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.CustomJsonTextWriter", style=dashed];
m1_1006 -> m1_991  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.ConvertibleInt", style=dashed];
m2_73 -> m2_74  [key=0, style=solid];
m2_73 -> m2_75  [key=0, style=solid];
m2_74 -> m2_75  [key=0, style=solid];
m2_74 -> m2_83  [key=2, style=dotted];
m2_74 -> m2_141  [key=0, style=solid];
m2_74 -> m2_43  [key=2, style=dotted];
m2_75 -> m2_76  [key=0, style=solid];
m2_75 -> m2_84  [key=2, style=dotted];
m2_75 -> m2_79  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m2_75 -> m2_80  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m2_75 -> m2_77  [key=0, style=solid];
m2_76 -> m2_77  [key=0, style=solid];
m2_76 -> m2_85  [key=2, style=dotted];
m2_76 -> m2_141  [key=0, style=solid];
m2_76 -> m2_43  [key=2, style=dotted];
m2_79 -> m2_80  [key=0, style=solid];
m2_79 -> m2_68  [key=2, style=dotted];
m2_79 -> m2_81  [color=darkseagreen4, key=1, label=o, style=dashed];
m2_80 -> m2_81  [key=0, style=solid];
m2_80 -> m2_85  [key=2, style=dotted];
m2_80 -> m2_141  [key=0, style=solid];
m2_80 -> m2_143  [key=2, style=dotted];
m2_77 -> m2_78  [key=0, style=solid];
m2_77 -> m2_86  [key=2, style=dotted];
m2_77 -> m2_79  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m2_78 -> m2_79  [key=0, style=solid];
m2_78 -> m2_87  [key=2, style=dotted];
m2_78 -> m2_88  [key=2, style=dotted];
m2_78 -> m2_141  [key=0, style=solid];
m2_78 -> m2_142  [key=2, style=dotted];
m2_78 -> m2_59  [key=2, style=dotted];
m2_81 -> m2_82  [key=0, style=solid];
m2_81 -> m2_8  [key=2, style=dotted];
m2_81 -> m2_144  [key=2, style=dotted];
m2_81 -> m2_141  [key=0, style=solid];
m2_81 -> m2_145  [key=2, style=dotted];
m2_82 -> m2_73  [color=blue, key=0, style=bold];
m2_82 -> m2_83  [key=0, style=solid];
m2_746 -> m2_747  [key=0, style=solid];
m2_747 -> m2_748  [key=0, style=solid];
m2_748 -> m2_746  [color=blue, key=0, style=bold];
m2_59 -> m2_60  [key=0, style=solid];
m2_59 -> m2_67  [key=2, style=dotted];
m2_551 -> m2_549  [color=blue, key=0, style=bold];
m2_262 -> m2_263  [key=0, style=solid];
m2_515 -> m2_516  [color=green, key=0, style=solid];
m2_515 -> m2_517  [color=green, key=0, style=solid];
m2_356 -> m2_357  [key=0, style=solid];
m2_356 -> m2_144  [key=2, style=dotted];
m2_356 -> m2_400  [key=2, style=dotted];
m2_357 -> m2_358  [key=0, style=solid];
m2_357 -> m2_372  [key=2, style=dotted];
m2_357 -> m2_8  [key=2, style=dotted];
m2_357 -> m2_390  [key=0, style=solid];
m2_358 -> m2_359  [key=0, style=solid];
m2_358 -> m2_372  [key=2, style=dotted];
m2_358 -> m2_8  [key=2, style=dotted];
m2_359 -> m2_360  [key=0, style=solid];
m2_359 -> m2_372  [key=2, style=dotted];
m2_359 -> m2_8  [key=2, style=dotted];
m2_359 -> m2_361  [key=0, style=solid];
m2_360 -> m2_361  [key=0, style=solid];
m2_360 -> m2_372  [key=2, style=dotted];
m2_360 -> m2_8  [key=2, style=dotted];
m2_360 -> m2_366  [key=0, style=solid];
m2_360 -> m2_403  [key=2, style=dotted];
m2_361 -> m2_362  [key=0, style=solid];
m2_361 -> m2_372  [key=2, style=dotted];
m2_361 -> m2_8  [key=2, style=dotted];
m2_361 -> m2_363  [key=0, style=solid];
m2_362 -> m2_363  [key=0, style=solid];
m2_362 -> m2_372  [key=2, style=dotted];
m2_362 -> m2_8  [key=2, style=dotted];
m2_362 -> m2_366  [key=0, style=solid];
m2_362 -> m2_404  [key=2, style=dotted];
m2_363 -> m2_364  [key=0, style=solid];
m2_363 -> m2_372  [key=2, style=dotted];
m2_363 -> m2_8  [key=2, style=dotted];
m2_363 -> m2_365  [key=0, style=solid];
m2_364 -> m2_365  [key=0, style=solid];
m2_364 -> m2_372  [key=2, style=dotted];
m2_364 -> m2_8  [key=2, style=dotted];
m2_364 -> m2_366  [key=0, style=solid];
m2_364 -> m2_405  [key=2, style=dotted];
m2_365 -> m2_366  [key=0, style=solid];
m2_365 -> m2_372  [key=2, style=dotted];
m2_365 -> m2_8  [key=2, style=dotted];
m2_365 -> m2_60  [key=2, style=dotted];
m2_365 -> m2_404  [key=2, style=dotted];
m2_366 -> m2_367  [key=0, style=solid];
m2_366 -> m2_372  [key=2, style=dotted];
m2_366 -> m2_8  [key=2, style=dotted];
m2_366 -> m2_390  [key=0, style=solid];
m2_367 -> m2_368  [key=0, style=solid];
m2_367 -> m2_372  [key=2, style=dotted];
m2_367 -> m2_8  [key=2, style=dotted];
m2_368 -> m2_369  [key=0, style=solid];
m2_368 -> m2_372  [key=2, style=dotted];
m2_368 -> m2_8  [key=2, style=dotted];
m2_368 -> m2_269  [key=2, style=dotted];
m2_368 -> m2_406  [key=2, style=dotted];
m2_369 -> m2_370  [key=0, style=solid];
m2_369 -> m2_372  [key=2, style=dotted];
m2_369 -> m2_8  [key=2, style=dotted];
m2_369 -> m2_390  [key=0, style=solid];
m2_370 -> m2_371  [key=0, style=solid];
m2_370 -> m2_372  [key=2, style=dotted];
m2_370 -> m2_8  [key=2, style=dotted];
m2_371 -> m2_356  [color=blue, key=0, style=bold];
m2_371 -> m2_372  [key=0, style=solid];
m2_371 -> m2_148  [key=2, style=dotted];
m2_371 -> m2_407  [key=2, style=dotted];
m2_110 -> m2_111  [key=0, style=solid];
m2_110 -> m2_150  [key=2, style=dotted];
m2_110 -> m2_152  [key=2, style=dotted];
m2_111 -> m2_112  [key=0, style=solid];
m2_111 -> m2_141  [key=0, style=solid];
m2_111 -> m2_111  [color=darkseagreen4, key=1, label=date1, style=dashed];
m2_111 -> m2_153  [key=2, style=dotted];
m2_112 -> m2_113  [key=0, style=solid];
m2_112 -> m2_96  [key=2, style=dotted];
m2_112 -> m2_50  [key=2, style=dotted];
m2_112 -> m2_115  [key=2, style=dotted];
m2_112 -> m2_116  [key=2, style=dotted];
m2_112 -> m2_106  [key=2, style=dotted];
m2_113 -> m2_114  [key=0, style=solid];
m2_113 -> m2_8  [key=2, style=dotted];
m2_113 -> m2_115  [key=0, style=solid];
m2_114 -> m2_110  [color=blue, key=0, style=bold];
m2_114 -> m2_141  [key=0, style=solid];
m2_114 -> m2_154  [key=2, style=dotted];
m2_733 -> m2_734  [key=0, style=solid];
m2_734 -> m2_735  [key=0, style=solid];
m2_734 -> m2_584  [key=2, style=dotted];
m2_734 -> m2_736  [key=2, style=dotted];
m2_735 -> m2_733  [color=blue, key=0, style=bold];
m2_537 -> m2_538  [key=0, style=solid];
m2_537 -> m2_550  [key=2, style=dotted];
m2_538 -> m2_539  [key=0, style=solid];
m2_538 -> m2_551  [key=2, style=dotted];
m2_538 -> m2_552  [key=2, style=dotted];
m2_538 -> m2_553  [key=2, style=dotted];
m2_539 -> m2_537  [color=blue, key=0, style=bold];
m2_539 -> m2_540  [key=0, style=solid];
m2_539 -> m2_543  [key=2, style=dotted];
m2_555 -> m2_556  [key=0, style=solid];
m2_555 -> m2_391  [color=darkorchid, key=3, label="Local variable string date", style=bold];
m2_556 -> m2_557  [key=0, style=solid];
m2_556 -> m2_558  [key=0, style=solid];
m2_557 -> m2_555  [color=blue, key=0, style=bold];
m2_557 -> m2_559  [key=0, style=solid];
m2_557 -> m2_313  [key=2, style=dotted];
m2_557 -> m2_561  [color=darkseagreen4, key=1, label=date, style=dashed];
m2_557 -> m2_568  [color=darkseagreen4, key=1, label=date, style=dashed];
m2_116 -> m2_117  [key=0, style=solid];
m2_116 -> m2_119  [color=darkseagreen4, key=1, label=bytes2, style=dashed];
m2_116 -> m2_121  [color=darkseagreen4, key=1, label=bytes2, style=dashed];
m2_719 -> m2_720  [key=0, style=solid];
m2_720 -> m2_721  [key=0, style=solid];
m2_721 -> m2_719  [color=blue, key=0, style=bold];
m2_85 -> m2_86  [key=0, style=solid];
m2_85 -> m2_87  [key=0, style=solid];
m2_276 -> m2_277  [key=0, style=solid];
m2_276 -> m2_7  [key=2, style=dotted];
m2_276 -> m2_8  [key=2, style=dotted];
m2_277 -> m2_0  [key=2, style=dotted];
m2_277 -> m2_278  [key=0, style=solid];
m2_278 -> m2_276  [color=blue, key=0, style=bold];
m2_278 -> m2_279  [key=0, style=solid];
m2_278 -> m2_7  [key=2, style=dotted];
m2_278 -> m2_8  [key=2, style=dotted];
m2_413 -> m2_414  [key=0, style=solid];
m2_413 -> m2_511  [key=2, style=dotted];
m2_413 -> m2_512  [key=2, style=dotted];
m2_413 -> m2_418  [color=darkseagreen4, key=1, label=localToUtcDate, style=dashed];
m2_156 -> m2_157  [key=0, style=solid];
m2_156 -> m2_141  [key=2, style=dotted];
m2_156 -> m2_158  [color=darkseagreen4, key=1, label=sw, style=dashed];
m2_156 -> m2_159  [color=darkseagreen4, key=1, label=sw, style=dashed];
m2_326 -> m2_327  [key=0, style=solid];
m2_326 -> m2_316  [color=blue, key=0, style=bold];
m2_327 -> m2_328  [key=0, style=solid];
m2_327 -> m2_196  [key=2, style=dotted];
m2_328 -> m2_329  [key=0, style=solid];
m2_328 -> m2_8  [key=2, style=dotted];
m2_328 -> m2_330  [color=darkseagreen4, key=1, label="params Newtonsoft.Json.JsonConverter[]", style=dashed];
m2_328 -> m2_332  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_328 -> m2_336  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_328 -> m2_339  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_328 -> m2_349  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_328 -> m2_351  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_328 -> m2_353  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_328 -> m2_355  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_328 -> m2_356  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_328 -> m2_360  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_328 -> m2_362  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_328 -> m2_364  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_328 -> m2_365  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_328 -> m2_368  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_328 -> m2_371  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_328 -> m2_375  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_328 -> m2_376  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_328 -> m2_379  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_328 -> m2_382  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_328 -> m2_385  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_328 -> m2_388  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_328 -> m2_342  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_328 -> m2_345  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_329 -> m2_330  [key=0, style=solid];
m2_329 -> m2_196  [key=2, style=dotted];
m2_329 -> m2_334  [key=0, style=solid];
m2_330 -> m2_331  [key=0, style=solid];
m2_330 -> m2_338  [key=2, style=dotted];
m2_330 -> m2_96  [key=2, style=dotted];
m2_330 -> m2_8  [key=2, style=dotted];
m2_330 -> m2_317  [key=2, style=dotted];
m2_330 -> m2_392  [key=2, style=dotted];
m2_330 -> m2_332  [color=darkseagreen4, key=1, label=matchingConverter, style=dashed];
m2_331 -> m2_332  [key=0, style=solid];
m2_331 -> m2_196  [key=2, style=dotted];
m2_331 -> m2_334  [key=0, style=solid];
m2_332 -> m2_333  [key=0, style=solid];
m2_332 -> m2_8  [key=2, style=dotted];
m2_332 -> m2_393  [key=2, style=dotted];
m2_332 -> m2_394  [key=2, style=dotted];
m2_333 -> m2_334  [key=0, style=solid];
m2_333 -> m2_196  [key=2, style=dotted];
m2_333 -> m2_390  [key=0, style=solid];
m2_334 -> m2_335  [key=0, style=solid];
m2_334 -> m2_8  [key=2, style=dotted];
m2_334 -> m2_338  [key=0, style=solid];
m2_334 -> m2_341  [key=0, style=solid];
m2_334 -> m2_344  [key=0, style=solid];
m2_334 -> m2_347  [key=0, style=solid];
m2_334 -> m2_358  [key=0, style=solid];
m2_334 -> m2_367  [key=0, style=solid];
m2_334 -> m2_370  [key=0, style=solid];
m2_334 -> m2_373  [key=0, style=solid];
m2_334 -> m2_378  [key=0, style=solid];
m2_334 -> m2_381  [key=0, style=solid];
m2_334 -> m2_384  [key=0, style=solid];
m2_334 -> m2_387  [key=0, style=solid];
m2_335 -> m2_336  [key=0, style=solid];
m2_335 -> m2_196  [key=2, style=dotted];
m2_336 -> m2_337  [key=0, style=solid];
m2_336 -> m2_8  [key=2, style=dotted];
m2_336 -> m2_269  [key=2, style=dotted];
m2_336 -> m2_395  [key=2, style=dotted];
m2_337 -> m2_326  [color=blue, key=0, style=bold];
m2_337 -> m2_390  [key=0, style=solid];
m2_316 -> m2_317  [key=0, style=solid];
m2_316 -> m2_285  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JTokenType? current", style=bold];
m2_316 -> m2_318  [key=0, style=solid];
m2_316 -> m2_320  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenType?", style=dashed];
m2_316 -> m2_324  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenType?", style=dashed];
m2_316 -> m2_319  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Linq.JTokenType GetStringValueType", style=bold];
m2_317 -> m2_318  [key=0, style=solid];
m2_317 -> m2_26  [key=2, style=dotted];
m2_317 -> m2_319  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_317 -> m2_317  [color=darkorchid, key=3, label="Local variable string orig", style=bold];
m2_318 -> m2_316  [color=blue, key=0, style=bold];
m2_318 -> m2_319  [key=0, style=solid];
m2_318 -> m2_320  [key=0, style=solid];
m2_603 -> m2_604  [key=0, style=solid];
m2_604 -> m2_605  [key=0, style=solid];
m2_604 -> m2_96  [key=2, style=dotted];
m2_604 -> m2_50  [key=2, style=dotted];
m2_604 -> m2_106  [key=2, style=dotted];
m2_605 -> m2_606  [key=0, style=solid];
m2_605 -> m2_8  [key=2, style=dotted];
m2_606 -> m2_603  [color=blue, key=0, style=bold];
m2_773 -> m2_774  [key=0, style=solid];
m2_774 -> m2_775  [key=0, style=solid];
m2_774 -> m2_778  [key=2, style=dotted];
m2_775 -> m2_776  [key=0, style=solid];
m2_775 -> m2_45  [key=2, style=dotted];
m2_776 -> m2_777  [key=0, style=solid];
m2_776 -> m2_8  [key=2, style=dotted];
m2_777 -> m2_773  [color=blue, key=0, style=bold];
m2_256 -> m2_257  [key=0, style=solid];
m2_392 -> m2_393  [key=0, style=solid];
m2_392 -> m2_509  [key=2, style=dotted];
m2_392 -> m2_394  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_392 -> m2_395  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_392 -> m2_396  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_392 -> m2_397  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_392 -> m2_398  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_392 -> m2_399  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_392 -> m2_400  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_403 -> m2_404  [key=0, style=solid];
m2_403 -> m2_509  [key=2, style=dotted];
m2_403 -> m2_405  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_403 -> m2_406  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_403 -> m2_407  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_403 -> m2_408  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_403 -> m2_409  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_403 -> m2_410  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_403 -> m2_411  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_561 -> m2_562  [color=red, key=0, style=solid];
m2_561 -> m2_196  [key=2, style=dotted];
m2_561 -> m2_565  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m2_562 -> m2_563  [color=red, key=0, style=solid];
m2_562 -> m2_568  [color=red, key=0, style=solid];
m2_562 -> m2_8  [color=red, key=2, style=dotted];
m2_563 -> m2_561  [color=blue, key=0, style=bold];
m2_563 -> m2_564  [color=red, key=0, style=solid];
m2_419 -> m2_420  [key=0, style=solid];
m2_419 -> m2_513  [key=2, style=dotted];
m2_419 -> m2_510  [key=2, style=dotted];
m2_419 -> m2_8  [key=2, style=dotted];
m2_172 -> m2_173  [key=0, style=solid];
m2_172 -> m2_174  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_172 -> m2_269  [key=2, style=dotted];
m2_173 -> m2_174  [key=0, style=solid];
m2_173 -> m2_268  [key=0, style=solid];
m2_174 -> m2_175  [key=0, style=solid];
m2_174 -> m2_176  [key=2, style=dotted];
m2_174 -> m2_197  [key=0, style=solid];
m2_175 -> m2_172  [color=blue, key=0, style=bold];
m2_175 -> m2_176  [key=0, style=solid];
m2_175 -> m2_178  [key=0, style=solid];
m2_100 -> m2_101  [key=0, style=solid];
m2_100 -> m2_105  [color=darkseagreen4, key=1, label=date1, style=dashed];
m2_553 -> m2_554  [key=0, style=solid];
m2_405 -> m2_406  [key=0, style=solid];
m2_405 -> m2_510  [key=2, style=dotted];
m2_405 -> m2_8  [key=2, style=dotted];
m2_525 -> m2_526  [key=0, style=solid];
m2_525 -> m2_68  [color=darkorchid, key=3, label="method methodReturn System.TypeCode System.IConvertible.GetTypeCode", style=bold];
m2_525 -> m2_66  [color=darkorchid, key=3, label="method methodReturn System.TypeCode System.IConvertible.GetTypeCode", style=bold];
m2_525 -> m2_545  [key=2, style=dotted];
m2_529 -> m2_530  [color=green, key=0, style=solid];
m2_529 -> m2_531  [color=green, key=0, style=solid];
m2_529 -> m2_545  [key=2, style=dotted];
m2_528 -> m2_529  [color=green, key=0, style=solid];
m2_528 -> m2_531  [color=darkseagreen4, key=1, label=convertable, style=dashed];
m2_528 -> m2_545  [key=2, style=dotted];
m2_530 -> m2_532  [color=green, key=0, style=solid];
m2_530 -> m2_531  [key=0, style=solid];
m2_530 -> m2_545  [key=2, style=dotted];
m2_531 -> m2_532  [key=0, style=solid];
m2_531 -> m2_533  [key=2, style=dotted];
m2_531 -> m2_116  [key=2, style=dotted];
m2_531 -> m2_546  [key=2, style=dotted];
m2_526 -> m2_528  [key=0, style=solid];
m2_526 -> m2_527  [key=0, style=solid];
m2_526 -> m2_545  [key=2, style=dotted];
m2_527 -> m2_532  [key=0, style=solid];
m2_527 -> m2_528  [key=0, style=solid];
m2_527 -> m2_531  [key=0, style=solid];
m2_532 -> m2_525  [color=blue, key=0, style=bold];
m2_532 -> m2_533  [key=0, style=solid];
m2_532 -> m2_534  [key=0, style=solid];
m2_378 -> m2_379  [key=0, style=solid];
m2_4 -> m2_5  [key=0, style=solid];
m2_4 -> m2_7  [key=2, style=dotted];
m2_5 -> m2_4  [color=blue, key=0, style=bold];
m2_5 -> m2_6  [key=0, style=solid];
m2_5 -> m2_8  [key=2, style=dotted];
m2_269 -> m2_270  [key=0, style=solid];
m2_628 -> m2_629  [key=0, style=solid];
m2_629 -> m2_630  [key=0, style=solid];
m2_629 -> m2_517  [key=2, style=dotted];
m2_629 -> m2_637  [key=2, style=dotted];
m2_630 -> m2_631  [key=0, style=solid];
m2_630 -> m2_638  [key=2, style=dotted];
m2_630 -> m2_630  [color=darkseagreen4, key=1, label=dt, style=dashed];
m2_630 -> m2_633  [color=darkseagreen4, key=1, label=dt, style=dashed];
m2_631 -> m2_632  [key=0, style=solid];
m2_631 -> m2_141  [key=2, style=dotted];
m2_631 -> m2_635  [color=darkseagreen4, key=1, label=sw, style=dashed];
m2_633 -> m2_634  [key=0, style=solid];
m2_633 -> m2_639  [key=2, style=dotted];
m2_632 -> m2_633  [key=0, style=solid];
m2_632 -> m2_594  [key=2, style=dotted];
m2_632 -> m2_634  [color=darkseagreen4, key=1, label=writer, style=dashed];
m2_635 -> m2_636  [key=0, style=solid];
m2_635 -> m2_144  [key=2, style=dotted];
m2_635 -> m2_8  [key=2, style=dotted];
m2_634 -> m2_635  [key=0, style=solid];
m2_634 -> m2_596  [key=2, style=dotted];
m2_636 -> m2_628  [color=blue, key=0, style=bold];
m2_388 -> m2_389  [key=0, style=solid];
m2_388 -> m2_413  [key=2, style=dotted];
m2_650 -> m2_651  [key=0, style=solid];
m2_651 -> m2_652  [key=0, style=solid];
m2_651 -> m2_655  [color=darkseagreen4, key=1, label=dt, style=dashed];
m2_652 -> m2_653  [color=red, key=0, style=solid];
m2_652 -> m2_141  [key=2, style=dotted];
m2_655 -> m2_656  [key=0, style=solid];
m2_655 -> m2_649  [key=2, style=dotted];
m2_653 -> m2_654  [color=red, key=0, style=solid];
m2_653 -> m2_594  [color=red, key=2, style=dotted];
m2_653 -> m2_655  [color=red, key=1, label=writer, style=dashed];
m2_653 -> m2_656  [color=red, key=1, label=writer, style=dashed];
m2_654 -> m2_655  [color=red, key=0, style=solid];
m2_656 -> m2_657  [key=0, style=solid];
m2_656 -> m2_596  [key=2, style=dotted];
m2_657 -> m2_650  [color=blue, key=0, style=bold];
m2_857 -> m2_858  [key=0, style=solid];
m2_857 -> m2_859  [color=darkseagreen4, key=1, label="System.MidpointRounding", style=dashed];
m2_858 -> m2_859  [key=0, style=solid];
m2_859 -> m2_860  [key=0, style=solid];
m2_860 -> m2_857  [color=blue, key=0, style=bold];
m2_477 -> m2_478  [key=0, style=solid];
m2_477 -> m2_510  [key=2, style=dotted];
m2_477 -> m2_8  [key=2, style=dotted];
m2_143 -> m2_64  [color=darkorchid, key=3, label="Parameter variable object objB", style=bold];
m2_143 -> m2_162  [key=0, style=solid];
m2_143 -> m2_163  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_143 -> m2_66  [color=darkorchid, key=3, label="method methodReturn int CompareFloat", style=bold];
m2_162 -> m2_60  [key=2, style=dotted];
m2_162 -> m2_163  [key=0, style=solid];
m2_162 -> m2_164  [color=darkseagreen4, key=1, label=d1, style=dashed];
m2_162 -> m2_166  [color=darkseagreen4, key=1, label=d1, style=dashed];
m2_162 -> m2_143  [key=2, style=dotted];
m2_163 -> m2_60  [key=2, style=dotted];
m2_163 -> m2_164  [key=0, style=solid];
m2_163 -> m2_166  [color=darkseagreen4, key=1, label=d2, style=dashed];
m2_163 -> m2_144  [key=2, style=dotted];
m2_163 -> m2_46  [key=2, style=dotted];
m2_164 -> m2_165  [key=0, style=solid];
m2_164 -> m2_166  [key=0, style=solid];
m2_164 -> m2_168  [key=2, style=dotted];
m2_164 -> m2_149  [color=blue, key=0, style=bold];
m2_166 -> m2_167  [key=0, style=solid];
m2_166 -> m2_63  [key=2, style=dotted];
m2_165 -> m2_167  [key=0, style=solid];
m2_167 -> m2_143  [color=blue, key=0, style=bold];
m2_312 -> m2_314  [key=0, style=solid];
m2_312 -> m2_313  [key=0, style=solid];
m2_250 -> m2_251  [key=0, style=solid];
m2_251 -> m2_252  [key=0, style=solid];
m2_251 -> m2_26  [key=2, style=dotted];
m2_251 -> m2_253  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_252 -> m2_250  [color=blue, key=0, style=bold];
m2_252 -> m2_253  [key=0, style=solid];
m2_679 -> m2_680  [key=0, style=solid];
m2_680 -> m2_681  [key=0, style=solid];
m2_680 -> m2_695  [key=2, style=dotted];
m2_680 -> m2_684  [color=darkseagreen4, key=1, label=sb, style=dashed];
m2_680 -> m2_686  [color=darkseagreen4, key=1, label=sb, style=dashed];
m2_680 -> m2_689  [color=darkseagreen4, key=1, label=sb, style=dashed];
m2_680 -> m2_691  [color=darkseagreen4, key=1, label=sb, style=dashed];
m2_681 -> m2_682  [key=0, style=solid];
m2_681 -> m2_683  [color=darkseagreen4, key=1, label=depth, style=dashed];
m2_681 -> m2_688  [color=darkseagreen4, key=1, label=depth, style=dashed];
m2_681 -> m2_681  [color=darkorchid, key=3, label="Local variable int depth", style=bold];
m2_684 -> m2_685  [key=0, style=solid];
m2_684 -> m2_696  [key=2, style=dotted];
m2_686 -> m2_687  [key=0, style=solid];
m2_686 -> m2_696  [key=2, style=dotted];
m2_689 -> m2_690  [key=0, style=solid];
m2_689 -> m2_696  [key=2, style=dotted];
m2_691 -> m2_692  [key=0, style=solid];
m2_691 -> m2_697  [key=2, style=dotted];
m2_691 -> m2_693  [color=darkseagreen4, key=1, label=json, style=dashed];
m2_682 -> m2_683  [key=0, style=solid];
m2_682 -> m2_685  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_682 -> m2_207  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m2_683 -> m2_684  [key=0, style=solid];
m2_683 -> m2_686  [key=0, style=solid];
m2_688 -> m2_689  [key=0, style=solid];
m2_688 -> m2_691  [key=0, style=solid];
m2_688 -> m2_207  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m2_685 -> m2_683  [key=0, style=solid];
m2_685 -> m2_685  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_687 -> m2_688  [key=0, style=solid];
m2_687 -> m2_690  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_690 -> m2_688  [key=0, style=solid];
m2_690 -> m2_690  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_692 -> m2_693  [key=0, style=solid];
m2_692 -> m2_86  [key=2, style=dotted];
m2_693 -> m2_694  [key=0, style=solid];
m2_693 -> m2_84  [key=2, style=dotted];
m2_693 -> m2_83  [key=2, style=dotted];
m2_693 -> m2_68  [key=2, style=dotted];
m2_694 -> m2_679  [color=blue, key=0, style=bold];
m2_752 -> m2_753  [key=0, style=solid];
m2_753 -> m2_754  [key=0, style=solid];
m2_754 -> m2_752  [color=blue, key=0, style=bold];
m2_710 -> m2_711  [key=0, style=solid];
m2_711 -> m2_712  [key=0, style=solid];
m2_711 -> m2_713  [key=2, style=dotted];
m2_711 -> m2_714  [key=2, style=dotted];
m2_711 -> m2_715  [key=2, style=dotted];
m2_712 -> m2_710  [color=blue, key=0, style=bold];
m2_567 -> m2_568  [key=0, style=solid];
m2_567 -> m2_8  [key=2, style=dotted];
m2_568 -> m2_569  [key=0, style=solid];
m2_568 -> m2_572  [key=2, style=dotted];
m2_569 -> m2_567  [color=blue, key=0, style=bold];
m2_569 -> m2_545  [color=blue, key=0, style=bold];
m2_422 -> m2_425  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_422 -> m2_430  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JValue other", style=bold];
m2_422 -> m2_42  [color=darkorchid, key=3, label="method methodReturn bool Equals", style=bold];
m2_422 -> m2_423  [key=0, style=solid];
m2_422 -> m2_37  [color=darkorchid, key=3, label="method methodReturn bool Equals", style=bold];
m2_422 -> m2_513  [key=2, style=dotted];
m2_422 -> m2_8  [key=2, style=dotted];
m2_425 -> m2_426  [key=0, style=solid];
m2_425 -> m2_42  [key=2, style=dotted];
m2_425 -> m2_509  [key=2, style=dotted];
m2_425 -> m2_427  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_425 -> m2_428  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_425 -> m2_429  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_425 -> m2_430  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_425 -> m2_431  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_425 -> m2_432  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_425 -> m2_433  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_423 -> m2_425  [key=0, style=solid];
m2_423 -> m2_424  [key=0, style=solid];
m2_423 -> m2_312  [key=2, style=dotted];
m2_423 -> m2_426  [color=darkseagreen4, key=1, label=ticksLocal, style=dashed];
m2_423 -> m2_427  [color=darkseagreen4, key=1, label=ticksLocal, style=dashed];
m2_423 -> m2_430  [color=darkseagreen4, key=1, label=ticksLocal, style=dashed];
m2_423 -> m2_431  [color=darkseagreen4, key=1, label=ticksLocal, style=dashed];
m2_423 -> m2_432  [color=darkseagreen4, key=1, label=ticksLocal, style=dashed];
m2_423 -> m2_433  [color=darkseagreen4, key=1, label=ticksLocal, style=dashed];
m2_424 -> m2_426  [key=0, style=solid];
m2_424 -> m2_425  [key=0, style=solid];
m2_424 -> m2_511  [key=2, style=dotted];
m2_424 -> m2_512  [key=2, style=dotted];
m2_424 -> m2_429  [color=darkseagreen4, key=1, label=localToUtcDate, style=dashed];
m2_426 -> m2_422  [color=blue, key=0, style=bold];
m2_426 -> m2_427  [key=0, style=solid];
m2_426 -> m2_510  [key=2, style=dotted];
m2_426 -> m2_8  [key=2, style=dotted];
m2_150 -> m2_151  [key=0, style=solid];
m2_95 -> m2_148  [key=2, style=dotted];
m2_95 -> m2_96  [key=0, style=solid];
m2_95 -> m2_97  [color=darkseagreen4, key=1, label=b1, style=dashed];
m2_372 -> m2_390  [key=0, style=solid];
m2_564 -> m2_565  [key=0, style=solid];
m2_564 -> m2_571  [key=2, style=dotted];
m2_564 -> m2_566  [color=darkseagreen4, key=1, label=valueTicks, style=dashed];
m2_565 -> m2_566  [key=0, style=solid];
m2_565 -> m2_571  [key=2, style=dotted];
m2_565 -> m2_567  [color=darkseagreen4, key=1, label=parsedTicks, style=dashed];
m2_566 -> m2_564  [color=blue, key=0, style=bold];
m2_566 -> m2_567  [key=0, style=solid];
m2_566 -> m2_566  [color=darkseagreen4, key=1, label=valueTicks, style=dashed];
m2_268 -> m2_169  [color=blue, key=0, style=bold];
m2_61 -> m2_62  [key=0, style=solid];
m2_61 -> m2_8  [key=2, style=dotted];
m2_257 -> m2_258  [key=0, style=solid];
m2_257 -> m2_268  [key=0, style=solid];
m2_258 -> m2_259  [key=0, style=solid];
m2_258 -> m2_262  [key=2, style=dotted];
m2_259 -> m2_260  [key=0, style=solid];
m2_259 -> m2_263  [key=2, style=dotted];
m2_260 -> m2_261  [key=0, style=solid];
m2_260 -> m2_8  [key=2, style=dotted];
m2_261 -> m2_257  [color=blue, key=0, style=bold];
m2_261 -> m2_268  [key=0, style=solid];
m2_400 -> m2_401  [key=0, style=solid];
m2_400 -> m2_8  [key=2, style=dotted];
m2_401 -> m2_402  [key=0, style=solid];
m2_401 -> m2_96  [key=2, style=dotted];
m2_401 -> m2_403  [color=darkseagreen4, key=1, label=year2000local, style=dashed];
m2_401 -> m2_404  [color=darkseagreen4, key=1, label=year2000local, style=dashed];
m2_401 -> m2_405  [color=darkseagreen4, key=1, label=year2000local, style=dashed];
m2_401 -> m2_408  [color=darkseagreen4, key=1, label=year2000local, style=dashed];
m2_401 -> m2_409  [color=darkseagreen4, key=1, label=year2000local, style=dashed];
m2_401 -> m2_410  [color=darkseagreen4, key=1, label=year2000local, style=dashed];
m2_401 -> m2_411  [color=darkseagreen4, key=1, label=year2000local, style=dashed];
m2_552 -> m2_553  [key=0, style=solid];
m2_554 -> m2_552  [color=blue, key=0, style=bold];
m2_389 -> m2_390  [key=0, style=solid];
m2_313 -> m2_315  [key=0, style=solid];
m2_64 -> m2_517  [color=darkorchid, key=3, label="Parameter variable object objB", style=bold];
m2_64 -> m2_68  [color=darkorchid, key=3, label="method methodReturn int Compare", style=bold];
m2_64 -> m2_65  [key=0, style=solid];
m2_64 -> m2_67  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_64 -> m2_69  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_64 -> m2_71  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenType", style=dashed];
m2_64 -> m2_73  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_64 -> m2_74  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_64 -> m2_75  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_64 -> m2_76  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_64 -> m2_77  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_64 -> m2_78  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_64 -> m2_79  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_64 -> m2_80  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_64 -> m2_81  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_64 -> m2_83  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_64 -> m2_84  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_64 -> m2_85  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_64 -> m2_86  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_64 -> m2_87  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_64 -> m2_91  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_64 -> m2_92  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_64 -> m2_95  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_64 -> m2_96  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_64 -> m2_99  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_64 -> m2_100  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_64 -> m2_102  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_64 -> m2_103  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_64 -> m2_104  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_64 -> m2_106  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_64 -> m2_108  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_64 -> m2_109  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_64 -> m2_110  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_64 -> m2_113  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_64 -> m2_115  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_64 -> m2_116  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_64 -> m2_123  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_64 -> m2_125  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_64 -> m2_126  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_64 -> m2_129  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_64 -> m2_131  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_64 -> m2_132  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_64 -> m2_135  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_64 -> m2_137  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_64 -> m2_138  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_64 -> m2_140  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenType", style=dashed];
m2_64 -> m2_66  [color=darkorchid, key=3, label="method methodReturn int Compare", style=bold];
m2_64 -> m2_70  [color=darkorchid, key=3, label="method methodReturn int Compare", style=bold];
m2_64 -> m2_43  [color=darkorchid, key=3, label="method methodReturn int Compare", style=bold];
m2_64 -> m2_143  [color=darkorchid, key=3, label="method methodReturn int Compare", style=bold];
m2_64 -> m2_480  [color=darkorchid, key=3, label="Parameter variable object objB", style=bold];
m2_68 -> m2_141  [key=0, style=solid];
m2_67 -> m2_68  [key=0, style=solid];
m2_67 -> m2_69  [key=0, style=solid];
m2_65 -> m2_67  [key=0, style=solid];
m2_65 -> m2_66  [key=0, style=solid];
m2_65 -> m2_55  [color=blue, key=0, style=bold];
m2_69 -> m2_70  [key=0, style=solid];
m2_69 -> m2_71  [key=0, style=solid];
m2_71 -> m2_72  [key=0, style=solid];
m2_71 -> m2_82  [key=0, style=solid];
m2_71 -> m2_88  [key=0, style=solid];
m2_71 -> m2_94  [key=0, style=solid];
m2_71 -> m2_98  [key=0, style=solid];
m2_71 -> m2_112  [key=0, style=solid];
m2_71 -> m2_122  [key=0, style=solid];
m2_71 -> m2_128  [key=0, style=solid];
m2_71 -> m2_134  [key=0, style=solid];
m2_71 -> m2_140  [key=0, style=solid];
m2_83 -> m2_84  [key=0, style=solid];
m2_83 -> m2_85  [key=0, style=solid];
m2_84 -> m2_141  [key=0, style=solid];
m2_84 -> m2_43  [key=2, style=dotted];
m2_86 -> m2_141  [key=0, style=solid];
m2_86 -> m2_43  [key=2, style=dotted];
m2_87 -> m2_141  [key=0, style=solid];
m2_87 -> m2_143  [key=2, style=dotted];
m2_91 -> m2_92  [key=0, style=solid];
m2_91 -> m2_146  [key=2, style=dotted];
m2_91 -> m2_93  [color=darkseagreen4, key=1, label=s1, style=dashed];
m2_91 -> m2_95  [key=2, style=dotted];
m2_91 -> m2_96  [key=2, style=dotted];
m2_92 -> m2_93  [key=0, style=solid];
m2_92 -> m2_146  [key=2, style=dotted];
m2_92 -> m2_45  [key=2, style=dotted];
m2_96 -> m2_148  [key=2, style=dotted];
m2_96 -> m2_97  [key=0, style=solid];
m2_99 -> m2_100  [key=0, style=solid];
m2_99 -> m2_106  [key=0, style=solid];
m2_99 -> m2_97  [color=blue, key=0, style=bold];
m2_102 -> m2_103  [key=0, style=solid];
m2_102 -> m2_104  [key=0, style=solid];
m2_103 -> m2_105  [key=0, style=solid];
m2_103 -> m2_104  [key=0, style=solid];
m2_103 -> m2_50  [key=2, style=dotted];
m2_103 -> m2_106  [key=2, style=dotted];
m2_104 -> m2_150  [key=2, style=dotted];
m2_104 -> m2_105  [key=0, style=solid];
m2_104 -> m2_8  [key=2, style=dotted];
m2_106 -> m2_107  [key=0, style=solid];
m2_106 -> m2_111  [color=darkseagreen4, key=1, label=date1, style=dashed];
m2_108 -> m2_109  [key=0, style=solid];
m2_108 -> m2_110  [key=0, style=solid];
m2_108 -> m2_50  [key=2, style=dotted];
m2_109 -> m2_111  [key=0, style=solid];
m2_109 -> m2_107  [color=blue, key=0, style=bold];
m2_115 -> m2_116  [key=0, style=solid];
m2_115 -> m2_117  [color=darkseagreen4, key=1, label=bytes1, style=dashed];
m2_115 -> m2_121  [color=darkseagreen4, key=1, label=bytes1, style=dashed];
m2_123 -> m2_124  [key=0, style=solid];
m2_123 -> m2_125  [key=0, style=solid];
m2_123 -> m2_141  [key=2, style=dotted];
m2_123 -> m2_126  [color=darkseagreen4, key=1, label=sw, style=dashed];
m2_125 -> m2_126  [key=0, style=solid];
m2_125 -> m2_127  [color=darkseagreen4, key=1, label=guid1, style=dashed];
m2_125 -> m2_143  [key=2, style=dotted];
m2_126 -> m2_127  [key=0, style=solid];
m2_126 -> m2_144  [key=2, style=dotted];
m2_126 -> m2_46  [key=2, style=dotted];
m2_129 -> m2_130  [key=0, style=solid];
m2_129 -> m2_131  [key=0, style=solid];
m2_129 -> m2_143  [key=2, style=dotted];
m2_131 -> m2_132  [key=0, style=solid];
m2_131 -> m2_133  [color=darkseagreen4, key=1, label=sw, style=dashed];
m2_131 -> m2_141  [key=2, style=dotted];
m2_131 -> m2_134  [color=darkseagreen4, key=1, label=sw, style=dashed];
m2_132 -> m2_133  [key=0, style=solid];
m2_132 -> m2_86  [key=2, style=dotted];
m2_135 -> m2_136  [key=0, style=solid];
m2_135 -> m2_137  [key=0, style=solid];
m2_135 -> m2_141  [key=2, style=dotted];
m2_135 -> m2_138  [color=darkseagreen4, key=1, label=sw, style=dashed];
m2_137 -> m2_138  [key=0, style=solid];
m2_137 -> m2_139  [color=darkseagreen4, key=1, label=ts1, style=dashed];
m2_137 -> m2_143  [key=2, style=dotted];
m2_138 -> m2_139  [key=0, style=solid];
m2_138 -> m2_144  [key=2, style=dotted];
m2_138 -> m2_8  [key=2, style=dotted];
m2_140 -> m2_161  [key=2, style=dotted];
m2_140 -> m2_141  [key=0, style=solid];
m2_140 -> m2_160  [key=2, style=dotted];
m2_66 -> m2_141  [key=0, style=solid];
m2_70 -> m2_141  [key=0, style=solid];
m2_70 -> m2_71  [key=0, style=solid];
m2_93 -> m2_141  [key=0, style=solid];
m2_93 -> m2_147  [key=2, style=dotted];
m2_93 -> m2_94  [key=0, style=solid];
m2_93 -> m2_46  [key=2, style=dotted];
m2_97 -> m2_141  [key=0, style=solid];
m2_97 -> m2_149  [key=2, style=dotted];
m2_97 -> m2_98  [key=0, style=solid];
m2_105 -> m2_141  [key=0, style=solid];
m2_105 -> m2_151  [key=2, style=dotted];
m2_105 -> m2_101  [color=blue, key=0, style=bold];
m2_121 -> m2_141  [key=0, style=solid];
m2_121 -> m2_155  [key=2, style=dotted];
m2_121 -> m2_122  [key=0, style=solid];
m2_118 -> m2_141  [key=0, style=solid];
m2_118 -> m2_119  [key=0, style=solid];
m2_118 -> m2_50  [key=2, style=dotted];
m2_118 -> m2_116  [key=2, style=dotted];
m2_120 -> m2_141  [key=0, style=solid];
m2_120 -> m2_121  [key=0, style=solid];
m2_124 -> m2_141  [key=0, style=solid];
m2_124 -> m2_154  [key=2, style=dotted];
m2_124 -> m2_125  [key=0, style=solid];
m2_124 -> m2_142  [key=2, style=dotted];
m2_124 -> m2_128  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m2_124 -> m2_129  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m2_127 -> m2_141  [key=0, style=solid];
m2_127 -> m2_127  [color=darkseagreen4, key=1, label=guid1, style=dashed];
m2_127 -> m2_156  [key=2, style=dotted];
m2_127 -> m2_128  [key=0, style=solid];
m2_127 -> m2_129  [color=darkseagreen4, key=1, label=sw, style=dashed];
m2_127 -> m2_130  [color=darkseagreen4, key=1, label=sw, style=dashed];
m2_130 -> m2_141  [key=0, style=solid];
m2_130 -> m2_154  [key=2, style=dotted];
m2_130 -> m2_131  [key=0, style=solid];
m2_130 -> m2_144  [key=2, style=dotted];
m2_130 -> m2_8  [key=2, style=dotted];
m2_133 -> m2_141  [key=0, style=solid];
m2_133 -> m2_157  [key=2, style=dotted];
m2_133 -> m2_158  [key=2, style=dotted];
m2_133 -> m2_134  [key=0, style=solid];
m2_133 -> m2_143  [key=2, style=dotted];
m2_136 -> m2_141  [key=0, style=solid];
m2_136 -> m2_154  [key=2, style=dotted];
m2_136 -> m2_137  [key=0, style=solid];
m2_136 -> m2_145  [key=2, style=dotted];
m2_139 -> m2_141  [key=0, style=solid];
m2_139 -> m2_139  [color=darkseagreen4, key=1, label=ts1, style=dashed];
m2_139 -> m2_159  [key=2, style=dotted];
m2_139 -> m2_120  [color=blue, key=0, style=bold];
m2_72 -> m2_73  [key=0, style=solid];
m2_72 -> m2_70  [color=blue, key=0, style=bold];
m2_88 -> m2_89  [key=0, style=solid];
m2_94 -> m2_95  [key=0, style=solid];
m2_94 -> m2_89  [color=blue, key=0, style=bold];
m2_98 -> m2_99  [key=0, style=solid];
m2_98 -> m2_50  [key=2, style=dotted];
m2_98 -> m2_100  [key=2, style=dotted];
m2_122 -> m2_123  [key=0, style=solid];
m2_122 -> m2_140  [key=2, style=dotted];
m2_122 -> m2_125  [color=darkseagreen4, key=1, label=l, style=dashed];
m2_122 -> m2_129  [color=darkseagreen4, key=1, label=l, style=dashed];
m2_122 -> m2_133  [color=darkseagreen4, key=1, label=l, style=dashed];
m2_122 -> m2_137  [color=darkseagreen4, key=1, label=l, style=dashed];
m2_128 -> m2_129  [key=0, style=solid];
m2_134 -> m2_135  [key=0, style=solid];
m2_134 -> m2_144  [key=2, style=dotted];
m2_134 -> m2_8  [key=2, style=dotted];
m2_90 -> m2_91  [key=0, style=solid];
m2_101 -> m2_102  [key=0, style=solid];
m2_107 -> m2_108  [key=0, style=solid];
m2_117 -> m2_118  [key=0, style=solid];
m2_117 -> m2_119  [key=0, style=solid];
m2_119 -> m2_121  [key=0, style=solid];
m2_119 -> m2_120  [key=0, style=solid];
m2_119 -> m2_117  [color=blue, key=0, style=bold];
m2_89 -> m2_90  [key=0, style=solid];
m2_141 -> m2_64  [color=blue, key=0, style=bold];
m2_50 -> m2_51  [key=0, style=solid];
m2_50 -> m2_53  [key=0, style=solid];
m2_285 -> m2_314  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_285 -> m2_286  [key=0, style=solid];
m2_285 -> m2_288  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_285 -> m2_290  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_285 -> m2_291  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenType?", style=dashed];
m2_285 -> m2_292  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_285 -> m2_294  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_285 -> m2_296  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_285 -> m2_298  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_285 -> m2_300  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_285 -> m2_302  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_285 -> m2_304  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_285 -> m2_306  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_285 -> m2_308  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_285 -> m2_310  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_285 -> m2_312  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_285 -> m2_32  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m2_285 -> m2_287  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Linq.JTokenType GetValueType", style=bold];
m2_285 -> m2_316  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Linq.JTokenType GetValueType", style=bold];
m2_285 -> m2_293  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Linq.JTokenType GetValueType", style=bold];
m2_285 -> m2_299  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Linq.JTokenType GetValueType", style=bold];
m2_285 -> m2_301  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Linq.JTokenType GetValueType", style=bold];
m2_285 -> m2_305  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Linq.JTokenType GetValueType", style=bold];
m2_285 -> m2_307  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Linq.JTokenType GetValueType", style=bold];
m2_285 -> m2_309  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Linq.JTokenType GetValueType", style=bold];
m2_285 -> m2_311  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Linq.JTokenType GetValueType", style=bold];
m2_285 -> m2_313  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Linq.JTokenType GetValueType", style=bold];
m2_314 -> m2_317  [key=2, style=dotted];
m2_314 -> m2_315  [key=0, style=solid];
m2_314 -> m2_154  [key=2, style=dotted];
m2_314 -> m2_160  [key=2, style=dotted];
m2_286 -> m2_287  [key=0, style=solid];
m2_286 -> m2_288  [key=0, style=solid];
m2_286 -> m2_7  [key=2, style=dotted];
m2_286 -> m2_8  [key=2, style=dotted];
m2_288 -> m2_289  [key=0, style=solid];
m2_288 -> m2_290  [key=0, style=solid];
m2_288 -> m2_7  [key=2, style=dotted];
m2_288 -> m2_8  [key=2, style=dotted];
m2_290 -> m2_291  [key=0, style=solid];
m2_290 -> m2_292  [key=0, style=solid];
m2_290 -> m2_7  [key=2, style=dotted];
m2_290 -> m2_8  [key=2, style=dotted];
m2_291 -> m2_315  [key=0, style=solid];
m2_291 -> m2_316  [key=2, style=dotted];
m2_291 -> m2_292  [key=0, style=solid];
m2_292 -> m2_293  [key=0, style=solid];
m2_292 -> m2_294  [key=0, style=solid];
m2_292 -> m2_7  [key=2, style=dotted];
m2_292 -> m2_8  [key=2, style=dotted];
m2_294 -> m2_295  [key=0, style=solid];
m2_294 -> m2_296  [key=0, style=solid];
m2_294 -> m2_7  [key=2, style=dotted];
m2_294 -> m2_8  [key=2, style=dotted];
m2_296 -> m2_297  [key=0, style=solid];
m2_296 -> m2_298  [key=0, style=solid];
m2_296 -> m2_313  [key=2, style=dotted];
m2_296 -> m2_8  [key=2, style=dotted];
m2_298 -> m2_299  [key=0, style=solid];
m2_298 -> m2_300  [key=0, style=solid];
m2_298 -> m2_7  [key=2, style=dotted];
m2_298 -> m2_8  [key=2, style=dotted];
m2_300 -> m2_301  [key=0, style=solid];
m2_300 -> m2_302  [key=0, style=solid];
m2_300 -> m2_315  [key=2, style=dotted];
m2_300 -> m2_8  [key=2, style=dotted];
m2_302 -> m2_303  [key=0, style=solid];
m2_302 -> m2_304  [key=0, style=solid];
m2_302 -> m2_7  [key=2, style=dotted];
m2_302 -> m2_8  [key=2, style=dotted];
m2_304 -> m2_305  [key=0, style=solid];
m2_304 -> m2_306  [key=0, style=solid];
m2_304 -> m2_7  [key=2, style=dotted];
m2_304 -> m2_8  [key=2, style=dotted];
m2_306 -> m2_307  [key=0, style=solid];
m2_306 -> m2_308  [key=0, style=solid];
m2_306 -> m2_7  [key=2, style=dotted];
m2_306 -> m2_8  [key=2, style=dotted];
m2_308 -> m2_309  [key=0, style=solid];
m2_308 -> m2_310  [key=0, style=solid];
m2_308 -> m2_7  [key=2, style=dotted];
m2_308 -> m2_8  [key=2, style=dotted];
m2_310 -> m2_312  [key=0, style=solid];
m2_310 -> m2_311  [key=0, style=solid];
m2_310 -> m2_7  [key=2, style=dotted];
m2_310 -> m2_8  [key=2, style=dotted];
m2_287 -> m2_315  [key=0, style=solid];
m2_287 -> m2_288  [key=0, style=solid];
m2_293 -> m2_315  [key=0, style=solid];
m2_293 -> m2_294  [key=0, style=solid];
m2_293 -> m2_312  [key=2, style=dotted];
m2_299 -> m2_315  [key=0, style=solid];
m2_299 -> m2_300  [key=0, style=solid];
m2_299 -> m2_314  [key=2, style=dotted];
m2_301 -> m2_315  [key=0, style=solid];
m2_301 -> m2_302  [key=0, style=solid];
m2_305 -> m2_315  [key=0, style=solid];
m2_305 -> m2_306  [key=0, style=solid];
m2_307 -> m2_315  [key=0, style=solid];
m2_307 -> m2_308  [key=0, style=solid];
m2_309 -> m2_315  [key=0, style=solid];
m2_309 -> m2_310  [key=0, style=solid];
m2_311 -> m2_315  [key=0, style=solid];
m2_311 -> m2_269  [color=blue, key=0, style=bold];
m2_289 -> m2_315  [key=0, style=solid];
m2_289 -> m2_290  [key=0, style=solid];
m2_295 -> m2_315  [key=0, style=solid];
m2_295 -> m2_296  [key=0, style=solid];
m2_295 -> m2_312  [key=2, style=dotted];
m2_297 -> m2_315  [key=0, style=solid];
m2_297 -> m2_298  [key=0, style=solid];
m2_297 -> m2_314  [key=2, style=dotted];
m2_303 -> m2_315  [key=0, style=solid];
m2_303 -> m2_304  [key=0, style=solid];
m2_315 -> m2_285  [color=blue, key=0, style=bold];
m2_460 -> m2_461  [key=0, style=solid];
m2_460 -> m2_8  [key=2, style=dotted];
m2_187 -> m2_188  [key=0, style=solid];
m2_613 -> m2_614  [key=0, style=solid];
m2_614 -> m2_615  [key=0, style=solid];
m2_614 -> m2_624  [color=darkseagreen4, key=1, label=now, style=dashed];
m2_615 -> m2_616  [color=red, key=0, style=solid];
m2_615 -> m2_626  [key=2, style=dotted];
m2_615 -> m2_620  [color=darkseagreen4, key=1, label=dict, style=dashed];
m2_624 -> m2_625  [key=0, style=solid];
m2_624 -> m2_8  [key=2, style=dotted];
m2_616 -> m2_617  [color=red, key=0, style=solid];
m2_616 -> m2_50  [color=red, key=2, style=dotted];
m2_616 -> m2_618  [color=red, key=1, label=settings, style=dashed];
m2_616 -> m2_619  [color=red, key=1, label=settings, style=dashed];
m2_616 -> m2_620  [color=red, key=1, label=settings, style=dashed];
m2_616 -> m2_622  [color=red, key=1, label=settings, style=dashed];
m2_620 -> m2_621  [key=0, style=solid];
m2_620 -> m2_106  [key=2, style=dotted];
m2_620 -> m2_622  [color=darkseagreen4, key=1, label=json, style=dashed];
m2_617 -> m2_618  [color=red, key=0, style=solid];
m2_618 -> m2_619  [color=red, key=0, style=solid];
m2_619 -> m2_620  [color=red, key=0, style=solid];
m2_622 -> m2_623  [key=0, style=solid];
m2_622 -> m2_627  [key=2, style=dotted];
m2_621 -> m2_622  [key=0, style=solid];
m2_621 -> m2_626  [key=2, style=dotted];
m2_621 -> m2_623  [color=darkseagreen4, key=1, label=newDict, style=dashed];
m2_623 -> m2_624  [key=0, style=solid];
m2_625 -> m2_613  [color=blue, key=0, style=bold];
m2_516 -> m2_519  [color=green, key=0, style=solid];
m2_511 -> m2_513  [color=darkseagreen4, key=1, label="out object", style=dashed];
m2_511 -> m2_512  [key=0, style=solid];
m2_761 -> m2_762  [key=0, style=solid];
m2_762 -> m2_763  [key=0, style=solid];
m2_763 -> m2_761  [color=blue, key=0, style=bold];
m2_449 -> m2_453  [key=0, style=solid];
m2_449 -> m2_446  [color=darkorchid, key=3, label="Parameter variable string format", style=bold];
m2_449 -> m2_457  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_449 -> m2_450  [color=darkorchid, key=3, label="Parameter variable System.IFormatProvider formatProvider", style=bold];
m2_449 -> m2_8  [key=2, style=dotted];
m2_453 -> m2_454  [key=0, style=solid];
m2_453 -> m2_455  [key=0, style=solid];
m2_453 -> m2_516  [key=2, style=dotted];
m2_453 -> m2_513  [key=2, style=dotted];
m2_453 -> m2_510  [key=2, style=dotted];
m2_453 -> m2_8  [key=2, style=dotted];
m2_455 -> m2_456  [key=0, style=solid];
m2_455 -> m2_457  [color=darkseagreen4, key=1, label=unixEpoc, style=dashed];
m2_455 -> m2_312  [key=2, style=dotted];
m2_455 -> m2_459  [color=darkseagreen4, key=1, label=unixEpoc, style=dashed];
m2_455 -> m2_463  [color=darkseagreen4, key=1, label=unixEpoc, style=dashed];
m2_455 -> m2_464  [color=darkseagreen4, key=1, label=unixEpoc, style=dashed];
m2_458 -> m2_459  [key=0, style=solid];
m2_458 -> m2_269  [key=2, style=dotted];
m2_458 -> m2_8  [key=2, style=dotted];
m2_454 -> m2_459  [key=0, style=solid];
m2_454 -> m2_455  [key=0, style=solid];
m2_454 -> m2_8  [key=2, style=dotted];
m2_456 -> m2_458  [key=0, style=solid];
m2_456 -> m2_457  [key=0, style=solid];
m2_456 -> m2_515  [key=2, style=dotted];
m2_456 -> m2_512  [key=2, style=dotted];
m2_456 -> m2_459  [color=darkseagreen4, key=1, label=utcTolocalDate, style=dashed];
m2_457 -> m2_459  [key=0, style=solid];
m2_457 -> m2_460  [key=2, style=dotted];
m2_457 -> m2_458  [key=0, style=solid];
m2_457 -> m2_509  [key=2, style=dotted];
m2_457 -> m2_461  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_457 -> m2_462  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_457 -> m2_463  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_457 -> m2_464  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_457 -> m2_465  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_459 -> m2_449  [color=blue, key=0, style=bold];
m2_459 -> m2_460  [key=0, style=solid];
m2_459 -> m2_510  [key=2, style=dotted];
m2_459 -> m2_8  [key=2, style=dotted];
m2_201 -> m2_202  [key=0, style=solid];
m2_201 -> m2_142  [key=2, style=dotted];
m2_201 -> m2_206  [color=darkseagreen4, key=1, label=d1, style=dashed];
m2_201 -> m2_210  [color=darkseagreen4, key=1, label=d1, style=dashed];
m2_201 -> m2_214  [color=darkseagreen4, key=1, label=d1, style=dashed];
m2_201 -> m2_218  [color=darkseagreen4, key=1, label=d1, style=dashed];
m2_202 -> m2_203  [key=0, style=solid];
m2_202 -> m2_196  [key=2, style=dotted];
m2_202 -> m2_142  [key=2, style=dotted];
m2_202 -> m2_206  [color=darkseagreen4, key=1, label=d2, style=dashed];
m2_202 -> m2_210  [color=darkseagreen4, key=1, label=d2, style=dashed];
m2_202 -> m2_214  [color=darkseagreen4, key=1, label=d2, style=dashed];
m2_202 -> m2_218  [color=darkseagreen4, key=1, label=d2, style=dashed];
m2_203 -> m2_204  [key=0, style=solid];
m2_203 -> m2_85  [key=2, style=dotted];
m2_203 -> m2_208  [key=0, style=solid];
m2_203 -> m2_212  [key=0, style=solid];
m2_203 -> m2_216  [key=0, style=solid];
m2_204 -> m2_201  [color=blue, key=0, style=bold];
m2_204 -> m2_205  [key=0, style=solid];
m2_847 -> m2_848  [key=0, style=solid];
m2_848 -> m2_849  [key=0, style=solid];
m2_848 -> m2_852  [key=2, style=dotted];
m2_848 -> m2_140  [key=2, style=dotted];
m2_849 -> m2_850  [key=0, style=solid];
m2_849 -> m2_45  [key=2, style=dotted];
m2_850 -> m2_851  [key=0, style=solid];
m2_850 -> m2_8  [key=2, style=dotted];
m2_851 -> m2_847  [color=blue, key=0, style=bold];
m2_263 -> m2_264  [key=0, style=solid];
m2_572 -> m2_570  [color=blue, key=0, style=bold];
m2_570 -> m2_571  [key=0, style=solid];
m2_571 -> m2_572  [key=0, style=solid];
m2_571 -> m2_586  [key=0, style=solid];
m2_571 -> m2_545  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m2_571 -> m2_561  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m2_571 -> m2_546  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m2_571 -> m2_575  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m2_749 -> m2_750  [key=0, style=solid];
m2_750 -> m2_751  [key=0, style=solid];
m2_751 -> m2_749  [color=blue, key=0, style=bold];
m2_320 -> m2_321  [key=0, style=solid];
m2_320 -> m2_325  [key=0, style=solid];
m2_320 -> m2_327  [key=2, style=dotted];
m2_324 -> m2_326  [key=0, style=solid];
m2_324 -> m2_327  [key=2, style=dotted];
m2_324 -> m2_319  [color=blue, key=0, style=bold];
m2_319 -> m2_326  [key=0, style=solid];
m2_319 -> m2_320  [key=0, style=solid];
m2_325 -> m2_326  [key=0, style=solid];
m2_321 -> m2_322  [key=0, style=solid];
m2_321 -> m2_45  [key=2, style=dotted];
m2_323 -> m2_324  [key=0, style=solid];
m2_323 -> m2_196  [key=2, style=dotted];
m2_322 -> m2_323  [key=0, style=solid];
m2_322 -> m2_325  [key=2, style=dotted];
m2_322 -> m2_322  [color=darkseagreen4, key=1, label=serialized, style=dashed];
m2_408 -> m2_409  [key=0, style=solid];
m2_408 -> m2_513  [key=2, style=dotted];
m2_408 -> m2_510  [key=2, style=dotted];
m2_408 -> m2_8  [key=2, style=dotted];
m2_159 -> m2_160  [key=0, style=solid];
m2_159 -> m2_144  [key=2, style=dotted];
m2_159 -> m2_46  [key=2, style=dotted];
m2_152 -> m2_153  [key=0, style=solid];
m2_152 -> m2_141  [key=2, style=dotted];
m2_152 -> m2_154  [color=darkseagreen4, key=1, label=sw, style=dashed];
m2_152 -> m2_155  [color=darkseagreen4, key=1, label=sw, style=dashed];
m2_338 -> m2_339  [key=0, style=solid];
m2_60 -> m2_61  [key=0, style=solid];
m2_60 -> m2_68  [key=2, style=dotted];
m2_60 -> m2_63  [color=darkseagreen4, key=1, label=s, style=dashed];
m2_436 -> m2_437  [key=0, style=solid];
m2_436 -> m2_66  [color=darkorchid, key=3, label="method methodReturn int GetHashCode", style=bold];
m2_436 -> m2_8  [key=2, style=dotted];
m2_437 -> m2_438  [key=0, style=solid];
m2_437 -> m2_439  [key=0, style=solid];
m2_437 -> m2_510  [key=2, style=dotted];
m2_437 -> m2_8  [key=2, style=dotted];
m2_439 -> m2_440  [key=0, style=solid];
m2_439 -> m2_418  [key=2, style=dotted];
m2_439 -> m2_8  [key=2, style=dotted];
m2_438 -> m2_440  [key=0, style=solid];
m2_438 -> m2_439  [key=0, style=solid];
m2_438 -> m2_8  [key=2, style=dotted];
m2_440 -> m2_436  [color=blue, key=0, style=bold];
m2_440 -> m2_441  [key=0, style=solid];
m2_440 -> m2_513  [key=2, style=dotted];
m2_440 -> m2_510  [key=2, style=dotted];
m2_440 -> m2_8  [key=2, style=dotted];
m2_55 -> m2_56  [key=0, style=solid];
m2_55 -> m2_57  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m2_55 -> m2_58  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m2_55 -> m2_60  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m2_55 -> m2_63  [color=darkorchid, key=3, label="method methodReturn object ReadJson", style=bold];
m2_56 -> m2_57  [key=0, style=solid];
m2_56 -> m2_66  [key=2, style=dotted];
m2_57 -> m2_58  [key=0, style=solid];
m2_57 -> m2_66  [key=2, style=dotted];
m2_58 -> m2_59  [key=0, style=solid];
m2_58 -> m2_62  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m2_62 -> m2_63  [key=0, style=solid];
m2_62 -> m2_67  [key=2, style=dotted];
m2_63 -> m2_64  [key=0, style=solid];
m2_63 -> m2_69  [key=2, style=dotted];
m2_177 -> m2_178  [key=0, style=solid];
m2_177 -> m2_268  [key=0, style=solid];
m2_178 -> m2_179  [key=0, style=solid];
m2_178 -> m2_54  [key=2, style=dotted];
m2_178 -> m2_55  [key=2, style=dotted];
m2_178 -> m2_183  [color=darkseagreen4, key=1, label=i1, style=dashed];
m2_178 -> m2_187  [color=darkseagreen4, key=1, label=i1, style=dashed];
m2_178 -> m2_191  [color=darkseagreen4, key=1, label=i1, style=dashed];
m2_178 -> m2_195  [color=darkseagreen4, key=1, label=i1, style=dashed];
m2_179 -> m2_177  [color=blue, key=0, style=bold];
m2_179 -> m2_180  [key=0, style=solid];
m2_179 -> m2_55  [key=2, style=dotted];
m2_179 -> m2_183  [color=darkseagreen4, key=1, label=i2, style=dashed];
m2_179 -> m2_187  [color=darkseagreen4, key=1, label=i2, style=dashed];
m2_179 -> m2_191  [color=darkseagreen4, key=1, label=i2, style=dashed];
m2_179 -> m2_195  [color=darkseagreen4, key=1, label=i2, style=dashed];
m2_149 -> m2_150  [key=0, style=solid];
m2_151 -> m2_152  [key=0, style=solid];
m2_151 -> m2_140  [key=2, style=dotted];
m2_151 -> m2_154  [color=darkseagreen4, key=1, label=l, style=dashed];
m2_151 -> m2_158  [color=darkseagreen4, key=1, label=l, style=dashed];
m2_151 -> m2_162  [color=darkseagreen4, key=1, label=l, style=dashed];
m2_154 -> m2_155  [key=0, style=solid];
m2_154 -> m2_143  [key=2, style=dotted];
m2_158 -> m2_159  [key=0, style=solid];
m2_158 -> m2_143  [key=2, style=dotted];
m2_153 -> m2_154  [key=0, style=solid];
m2_153 -> m2_50  [key=2, style=dotted];
m2_153 -> m2_165  [key=2, style=dotted];
m2_153 -> m2_166  [key=2, style=dotted];
m2_153 -> m2_157  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m2_153 -> m2_158  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m2_155 -> m2_156  [key=0, style=solid];
m2_155 -> m2_144  [key=2, style=dotted];
m2_155 -> m2_46  [key=2, style=dotted];
m2_157 -> m2_158  [key=0, style=solid];
m2_157 -> m2_167  [key=2, style=dotted];
m2_160 -> m2_161  [key=0, style=solid];
m2_160 -> m2_141  [key=2, style=dotted];
m2_160 -> m2_162  [color=darkseagreen4, key=1, label=sw, style=dashed];
m2_160 -> m2_163  [color=darkseagreen4, key=1, label=sw, style=dashed];
m2_161 -> m2_162  [key=0, style=solid];
m2_161 -> m2_50  [key=2, style=dotted];
m2_161 -> m2_168  [key=2, style=dotted];
m2_640 -> m2_641  [key=0, style=solid];
m2_641 -> m2_642  [key=0, style=solid];
m2_641 -> m2_96  [key=2, style=dotted];
m2_642 -> m2_643  [key=0, style=solid];
m2_642 -> m2_648  [key=2, style=dotted];
m2_642 -> m2_642  [color=darkseagreen4, key=1, label=dt, style=dashed];
m2_642 -> m2_645  [color=darkseagreen4, key=1, label=dt, style=dashed];
m2_643 -> m2_644  [key=0, style=solid];
m2_643 -> m2_141  [key=2, style=dotted];
m2_645 -> m2_646  [key=0, style=solid];
m2_645 -> m2_649  [key=2, style=dotted];
m2_644 -> m2_645  [key=0, style=solid];
m2_644 -> m2_594  [key=2, style=dotted];
m2_644 -> m2_646  [color=darkseagreen4, key=1, label=writer, style=dashed];
m2_646 -> m2_647  [key=0, style=solid];
m2_646 -> m2_596  [key=2, style=dotted];
m2_647 -> m2_640  [color=blue, key=0, style=bold];
m2_546 -> m2_573  [key=0, style=solid];
m2_546 -> m2_574  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonConverter", style=dashed];
m2_546 -> m2_575  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonConverter", style=dashed];
m2_546 -> m2_576  [color=darkseagreen4, key=1, label=T, style=dashed];
m2_546 -> m2_578  [color=darkseagreen4, key=1, label=T, style=dashed];
m2_546 -> m2_509  [color=darkorchid, key=3, label="Parameter variable T value", style=bold];
m2_546 -> m2_547  [key=0, style=solid];
m2_573 -> m2_574  [key=0, style=solid];
m2_573 -> m2_583  [key=2, style=dotted];
m2_573 -> m2_575  [color=darkseagreen4, key=1, label=date, style=dashed];
m2_574 -> m2_575  [key=0, style=solid];
m2_574 -> m2_584  [key=2, style=dotted];
m2_574 -> m2_543  [key=2, style=dotted];
m2_575 -> m2_576  [key=0, style=solid];
m2_575 -> m2_585  [key=2, style=dotted];
m2_575 -> m2_579  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m2_575 -> m2_573  [color=blue, key=0, style=bold];
m2_576 -> m2_577  [key=0, style=solid];
m2_576 -> m2_582  [key=0, style=solid];
m2_576 -> m2_8  [key=2, style=dotted];
m2_578 -> m2_579  [key=0, style=solid];
m2_578 -> m2_571  [key=2, style=dotted];
m2_578 -> m2_580  [color=darkseagreen4, key=1, label=valueTicks, style=dashed];
m2_578 -> m2_576  [color=blue, key=0, style=bold];
m2_579 -> m2_580  [key=0, style=solid];
m2_579 -> m2_571  [key=2, style=dotted];
m2_579 -> m2_581  [color=darkseagreen4, key=1, label=parsedTicks, style=dashed];
m2_577 -> m2_578  [key=0, style=solid];
m2_577 -> m2_579  [key=2, style=dotted];
m2_580 -> m2_581  [key=0, style=solid];
m2_580 -> m2_580  [color=darkseagreen4, key=1, label=valueTicks, style=dashed];
m2_580 -> m2_433  [color=green, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_580 -> m2_1  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_580 -> m2_2  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_580 -> m2_38  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_580 -> m2_40  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_580 -> m2_271  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_580 -> m2_329  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_580 -> m2_330  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_580 -> m2_332  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_580 -> m2_334  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_580 -> m2_336  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_580 -> m2_339  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_580 -> m2_348  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_580 -> m2_349  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_580 -> m2_350  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_580 -> m2_351  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_580 -> m2_352  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_580 -> m2_353  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_580 -> m2_354  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_580 -> m2_355  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_580 -> m2_356  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_580 -> m2_359  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_580 -> m2_360  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_580 -> m2_361  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_580 -> m2_362  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_580 -> m2_363  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_580 -> m2_364  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_580 -> m2_365  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_580 -> m2_368  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_580 -> m2_371  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_580 -> m2_374  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_580 -> m2_375  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_580 -> m2_376  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_580 -> m2_379  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_580 -> m2_382  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_580 -> m2_385  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_580 -> m2_388  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_580 -> m2_391  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_580 -> m2_415  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_580 -> m2_416  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_580 -> m2_425  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_580 -> m2_432  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_580 -> m2_437  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_580 -> m2_439  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_580 -> m2_442  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_580 -> m2_444  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_580 -> m2_447  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_580 -> m2_451  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_580 -> m2_453  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_580 -> m2_455  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_580 -> m2_458  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_580 -> m2_462  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_580 -> m2_518  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_580 -> m2_523  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_580 -> m2_526  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_580 -> m2_528  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_580 -> m2_535  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_580 -> m2_538  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_580 -> m2_541  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_580 -> m2_544  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_580 -> m2_547  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_580 -> m2_550  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_580 -> m2_553  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_580 -> m2_556  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_580 -> m2_559  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_580 -> m2_562  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_580 -> m2_565  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_580 -> m2_568  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_580 -> m2_571  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_580 -> m2_574  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_580 -> m2_577  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_581 -> m2_582  [key=0, style=solid];
m2_581 -> m2_8  [key=2, style=dotted];
m2_582 -> m2_546  [color=blue, key=0, style=bold];
m2_544 -> m2_545  [key=0, style=solid];
m2_545 -> m2_555  [key=0, style=solid];
m2_545 -> m2_556  [color=darkseagreen4, key=1, label=T, style=dashed];
m2_545 -> m2_557  [color=darkseagreen4, key=1, label=T, style=dashed];
m2_545 -> m2_558  [color=darkseagreen4, key=1, label=T, style=dashed];
m2_545 -> m2_559  [color=darkseagreen4, key=1, label="Newtonsoft.Json.DateFormatHandling", style=dashed];
m2_545 -> m2_560  [color=darkseagreen4, key=1, label="Newtonsoft.Json.DateTimeZoneHandling", style=dashed];
m2_545 -> m2_562  [color=red, key=1, label=T, style=dashed];
m2_545 -> m2_564  [color=darkseagreen4, key=1, label=T, style=dashed];
m2_545 -> m2_509  [color=darkorchid, key=3, label="Parameter variable T value", style=bold];
m2_545 -> m2_207  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.DateTimeZoneHandling timeZoneHandling", style=bold];
m2_545 -> m2_265  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.DateTimeZoneHandling timeZoneHandling", style=bold];
m2_545 -> m2_142  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.DateTimeZoneHandling timeZoneHandling", style=bold];
m2_545 -> m2_383  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.DateTimeZoneHandling timeZoneHandling", style=bold];
m2_545 -> m2_543  [color=blue, key=0, style=bold];
m2_558 -> m2_559  [key=0, style=solid];
m2_558 -> m2_315  [key=2, style=dotted];
m2_558 -> m2_561  [color=darkseagreen4, key=1, label=date, style=dashed];
m2_558 -> m2_568  [color=darkseagreen4, key=1, label=date, style=dashed];
m2_559 -> m2_560  [key=0, style=solid];
m2_559 -> m2_570  [key=2, style=dotted];
m2_559 -> m2_543  [key=2, style=dotted];
m2_560 -> m2_561  [key=0, style=solid];
m2_560 -> m2_568  [key=0, style=solid];
m2_560 -> m2_558  [color=blue, key=0, style=bold];
m2_716 -> m2_717  [key=0, style=solid];
m2_717 -> m2_718  [key=0, style=solid];
m2_717 -> m2_54  [key=2, style=dotted];
m2_718 -> m2_716  [color=blue, key=0, style=bold];
m2_841 -> m2_842  [key=0, style=solid];
m2_842 -> m2_843  [key=0, style=solid];
m2_842 -> m2_846  [key=2, style=dotted];
m2_843 -> m2_844  [key=0, style=solid];
m2_843 -> m2_45  [key=2, style=dotted];
m2_844 -> m2_845  [key=0, style=solid];
m2_844 -> m2_8  [key=2, style=dotted];
m2_845 -> m2_841  [color=blue, key=0, style=bold];
m2_461 -> m2_462  [key=0, style=solid];
m2_461 -> m2_8  [key=2, style=dotted];
m2_462 -> m2_463  [key=0, style=solid];
m2_462 -> m2_464  [key=2, style=dotted];
m2_462 -> m2_465  [key=2, style=dotted];
m2_462 -> m2_8  [key=2, style=dotted];
m2_463 -> m2_461  [color=blue, key=0, style=bold];
m2_463 -> m2_464  [key=0, style=solid];
m2_463 -> m2_510  [key=2, style=dotted];
m2_463 -> m2_8  [key=2, style=dotted];
m2_42 -> m2_35  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JValue v2", style=bold];
m2_42 -> m2_420  [key=0, style=solid];
m2_42 -> m2_422  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JValue v2", style=bold];
m2_42 -> m2_43  [key=0, style=solid];
m2_42 -> m2_45  [key=2, style=dotted];
m2_420 -> m2_64  [key=2, style=dotted];
m2_420 -> m2_421  [key=0, style=solid];
m2_420 -> m2_513  [key=2, style=dotted];
m2_420 -> m2_510  [key=2, style=dotted];
m2_420 -> m2_8  [key=2, style=dotted];
m2_421 -> m2_42  [color=blue, key=0, style=bold];
m2_421 -> m2_422  [key=0, style=solid];
m2_421 -> m2_513  [key=2, style=dotted];
m2_421 -> m2_510  [key=2, style=dotted];
m2_421 -> m2_8  [key=2, style=dotted];
m2_464 -> m2_465  [key=0, style=solid];
m2_464 -> m2_516  [key=2, style=dotted];
m2_464 -> m2_513  [key=2, style=dotted];
m2_464 -> m2_510  [key=2, style=dotted];
m2_464 -> m2_8  [key=2, style=dotted];
m2_148 -> m2_146  [color=blue, key=0, style=bold];
m2_548 -> m2_546  [color=blue, key=0, style=bold];
m2_658 -> m2_659  [key=0, style=solid];
m2_659 -> m2_660  [key=0, style=solid];
m2_659 -> m2_666  [key=2, style=dotted];
m2_659 -> m2_667  [key=2, style=dotted];
m2_660 -> m2_661  [key=0, style=solid];
m2_660 -> m2_662  [color=darkseagreen4, key=1, label=v, style=dashed];
m2_660 -> m2_663  [color=darkseagreen4, key=1, label=v, style=dashed];
m2_661 -> m2_662  [key=0, style=solid];
m2_661 -> m2_8  [key=2, style=dotted];
m2_662 -> m2_663  [key=0, style=solid];
m2_662 -> m2_584  [key=2, style=dotted];
m2_662 -> m2_8  [key=2, style=dotted];
m2_663 -> m2_664  [key=0, style=solid];
m2_663 -> m2_666  [key=2, style=dotted];
m2_663 -> m2_668  [key=2, style=dotted];
m2_663 -> m2_8  [key=2, style=dotted];
m2_664 -> m2_665  [key=0, style=solid];
m2_664 -> m2_666  [key=2, style=dotted];
m2_664 -> m2_26  [key=2, style=dotted];
m2_664 -> m2_669  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_665 -> m2_658  [color=blue, key=0, style=bold];
m2_607 -> m2_608  [key=0, style=solid];
m2_608 -> m2_609  [key=0, style=solid];
m2_608 -> m2_608  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m2_609 -> m2_610  [key=0, style=solid];
m2_609 -> m2_196  [key=2, style=dotted];
m2_609 -> m2_611  [color=darkseagreen4, key=1, label=m, style=dashed];
m2_610 -> m2_611  [key=0, style=solid];
m2_611 -> m2_612  [key=0, style=solid];
m2_611 -> m2_8  [key=2, style=dotted];
m2_612 -> m2_607  [color=blue, key=0, style=bold];
m2_583 -> m2_588  [key=0, style=solid];
m2_583 -> m2_590  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_583 -> m2_546  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonConverter converter", style=bold];
m2_588 -> m2_589  [key=0, style=solid];
m2_588 -> m2_141  [key=2, style=dotted];
m2_588 -> m2_592  [color=darkseagreen4, key=1, label=sw, style=dashed];
m2_590 -> m2_591  [key=0, style=solid];
m2_590 -> m2_595  [key=2, style=dotted];
m2_589 -> m2_590  [key=0, style=solid];
m2_589 -> m2_594  [key=2, style=dotted];
m2_589 -> m2_591  [color=darkseagreen4, key=1, label=writer, style=dashed];
m2_592 -> m2_593  [key=0, style=solid];
m2_592 -> m2_144  [key=2, style=dotted];
m2_591 -> m2_592  [key=0, style=solid];
m2_591 -> m2_596  [key=2, style=dotted];
m2_593 -> m2_583  [color=blue, key=0, style=bold];
m2_379 -> m2_380  [key=0, style=solid];
m2_379 -> m2_410  [key=2, style=dotted];
m2_380 -> m2_381  [key=0, style=solid];
m2_380 -> m2_383  [color=darkseagreen4, key=1, label=v, style=dashed];
m2_380 -> m2_385  [color=darkseagreen4, key=1, label=v, style=dashed];
m2_380 -> m2_390  [key=0, style=solid];
m2_381 -> m2_382  [key=0, style=solid];
m2_381 -> m2_388  [key=2, style=dotted];
m2_383 -> m2_384  [key=0, style=solid];
m2_383 -> m2_389  [key=2, style=dotted];
m2_383 -> m2_390  [key=0, style=solid];
m2_385 -> m2_386  [key=0, style=solid];
m2_385 -> m2_389  [key=2, style=dotted];
m2_385 -> m2_412  [key=2, style=dotted];
m2_382 -> m2_383  [key=0, style=solid];
m2_382 -> m2_8  [key=2, style=dotted];
m2_382 -> m2_411  [key=2, style=dotted];
m2_384 -> m2_385  [key=0, style=solid];
m2_384 -> m2_8  [key=2, style=dotted];
m2_386 -> m2_387  [key=0, style=solid];
m2_386 -> m2_8  [key=2, style=dotted];
m2_386 -> m2_390  [key=0, style=solid];
m2_387 -> m2_379  [color=blue, key=0, style=bold];
m2_387 -> m2_388  [key=0, style=solid];
m2_240 -> m2_241  [key=0, style=solid];
m2_390 -> m2_391  [key=0, style=solid];
m2_390 -> m2_328  [color=blue, key=0, style=bold];
m2_391 -> m2_392  [key=0, style=solid];
m2_391 -> m2_391  [color=darkorchid, key=3, label="Local variable Newtonsoft.Json.Tests.JsonConvertTest.DateTimeResult result", style=bold];
m2_391 -> m2_509  [color=darkorchid, key=3, label="Local variable Newtonsoft.Json.Tests.JsonConvertTest.DateTimeResult result", style=bold];
m2_391 -> m2_390  [key=0, style=solid];
m2_391 -> m2_161  [key=2, style=dotted];
m2_393 -> m2_394  [key=0, style=solid];
m2_393 -> m2_8  [key=2, style=dotted];
m2_394 -> m2_395  [key=0, style=solid];
m2_394 -> m2_510  [key=2, style=dotted];
m2_394 -> m2_8  [key=2, style=dotted];
m2_395 -> m2_396  [key=0, style=solid];
m2_395 -> m2_8  [key=2, style=dotted];
m2_396 -> m2_397  [key=0, style=solid];
m2_396 -> m2_8  [key=2, style=dotted];
m2_397 -> m2_398  [key=0, style=solid];
m2_397 -> m2_8  [key=2, style=dotted];
m2_397 -> m2_422  [color=darkorchid, key=3, label="method methodReturn bool Equals", style=bold];
m2_397 -> m2_446  [color=darkorchid, key=3, label="Property variable string IsoDateUnspecified", style=bold];
m2_397 -> m2_37  [color=darkorchid, key=3, label="method methodReturn bool Equals", style=bold];
m2_398 -> m2_399  [key=0, style=solid];
m2_398 -> m2_510  [key=2, style=dotted];
m2_398 -> m2_8  [key=2, style=dotted];
m2_399 -> m2_400  [key=0, style=solid];
m2_399 -> m2_8  [key=2, style=dotted];
m2_402 -> m2_403  [key=0, style=solid];
m2_402 -> m2_511  [key=2, style=dotted];
m2_402 -> m2_512  [key=2, style=dotted];
m2_402 -> m2_407  [color=darkseagreen4, key=1, label=localToUtcDate, style=dashed];
m2_404 -> m2_405  [key=0, style=solid];
m2_404 -> m2_510  [key=2, style=dotted];
m2_404 -> m2_8  [key=2, style=dotted];
m2_409 -> m2_410  [key=0, style=solid];
m2_409 -> m2_513  [key=2, style=dotted];
m2_409 -> m2_510  [key=2, style=dotted];
m2_409 -> m2_8  [key=2, style=dotted];
m2_410 -> m2_411  [key=0, style=solid];
m2_410 -> m2_513  [key=2, style=dotted];
m2_410 -> m2_510  [key=2, style=dotted];
m2_410 -> m2_8  [key=2, style=dotted];
m2_411 -> m2_412  [key=0, style=solid];
m2_411 -> m2_513  [key=2, style=dotted];
m2_411 -> m2_8  [key=2, style=dotted];
m2_407 -> m2_408  [key=0, style=solid];
m2_407 -> m2_8  [key=2, style=dotted];
m2_406 -> m2_407  [key=0, style=solid];
m2_406 -> m2_8  [key=2, style=dotted];
m2_412 -> m2_413  [key=0, style=solid];
m2_412 -> m2_514  [key=2, style=dotted];
m2_412 -> m2_414  [color=darkseagreen4, key=1, label=millisecondsLocal, style=dashed];
m2_412 -> m2_415  [color=darkseagreen4, key=1, label=millisecondsLocal, style=dashed];
m2_412 -> m2_416  [color=darkseagreen4, key=1, label=millisecondsLocal, style=dashed];
m2_412 -> m2_419  [color=darkseagreen4, key=1, label=millisecondsLocal, style=dashed];
m2_412 -> m2_420  [color=darkseagreen4, key=1, label=millisecondsLocal, style=dashed];
m2_412 -> m2_421  [color=darkseagreen4, key=1, label=millisecondsLocal, style=dashed];
m2_412 -> m2_422  [color=darkseagreen4, key=1, label=millisecondsLocal, style=dashed];
m2_414 -> m2_415  [key=0, style=solid];
m2_414 -> m2_509  [key=2, style=dotted];
m2_414 -> m2_416  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_414 -> m2_417  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_414 -> m2_418  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_414 -> m2_419  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_414 -> m2_420  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_414 -> m2_421  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_414 -> m2_422  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_415 -> m2_416  [key=0, style=solid];
m2_415 -> m2_510  [key=2, style=dotted];
m2_415 -> m2_8  [key=2, style=dotted];
m2_415 -> m2_418  [key=2, style=dotted];
m2_416 -> m2_417  [key=0, style=solid];
m2_416 -> m2_510  [key=2, style=dotted];
m2_416 -> m2_8  [key=2, style=dotted];
m2_416 -> m2_419  [key=2, style=dotted];
m2_418 -> m2_419  [key=0, style=solid];
m2_418 -> m2_8  [key=2, style=dotted];
m2_417 -> m2_418  [key=0, style=solid];
m2_417 -> m2_8  [key=2, style=dotted];
m2_417 -> m2_414  [color=blue, key=0, style=bold];
m2_427 -> m2_428  [key=0, style=solid];
m2_427 -> m2_510  [key=2, style=dotted];
m2_427 -> m2_8  [key=2, style=dotted];
m2_427 -> m2_433  [color=green, key=1, label=object, style=dashed];
m2_427 -> m2_430  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_430 -> m2_431  [key=0, style=solid];
m2_430 -> m2_513  [key=2, style=dotted];
m2_430 -> m2_510  [key=2, style=dotted];
m2_430 -> m2_8  [key=2, style=dotted];
m2_430 -> m2_432  [color=darkseagreen4, key=1, label=otherValue, style=dashed];
m2_431 -> m2_432  [key=0, style=solid];
m2_431 -> m2_513  [key=2, style=dotted];
m2_431 -> m2_510  [key=2, style=dotted];
m2_431 -> m2_8  [key=2, style=dotted];
m2_431 -> m2_433  [color=green, key=0, style=solid];
m2_432 -> m2_433  [key=0, style=solid];
m2_432 -> m2_513  [key=2, style=dotted];
m2_432 -> m2_510  [key=2, style=dotted];
m2_432 -> m2_8  [key=2, style=dotted];
m2_432 -> m2_434  [key=0, style=solid];
m2_432 -> m2_422  [key=2, style=dotted];
m2_433 -> m2_434  [color=green, key=0, style=solid];
m2_433 -> m2_513  [key=2, style=dotted];
m2_433 -> m2_8  [key=2, style=dotted];
m2_433 -> m2_435  [color=green, key=2, style=dotted];
m2_429 -> m2_430  [key=0, style=solid];
m2_429 -> m2_8  [key=2, style=dotted];
m2_429 -> m2_434  [key=0, style=solid];
m2_429 -> m2_446  [color=darkorchid, key=3, label="Property variable string MsDateLocal", style=bold];
m2_428 -> m2_429  [key=0, style=solid];
m2_428 -> m2_8  [key=2, style=dotted];
m2_428 -> m2_430  [key=0, style=solid];
m2_434 -> m2_435  [key=0, style=solid];
m2_434 -> m2_96  [key=2, style=dotted];
m2_434 -> m2_437  [color=darkseagreen4, key=1, label=year2000Unspecified, style=dashed];
m2_434 -> m2_440  [color=darkseagreen4, key=1, label=year2000Unspecified, style=dashed];
m2_434 -> m2_441  [color=darkseagreen4, key=1, label=year2000Unspecified, style=dashed];
m2_434 -> m2_442  [color=darkseagreen4, key=1, label=year2000Unspecified, style=dashed];
m2_434 -> m2_443  [color=darkseagreen4, key=1, label=year2000Unspecified, style=dashed];
m2_434 -> m2_427  [color=blue, key=0, style=bold];
m2_435 -> m2_436  [key=0, style=solid];
m2_435 -> m2_509  [key=2, style=dotted];
m2_435 -> m2_437  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_435 -> m2_438  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_435 -> m2_439  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_435 -> m2_440  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_435 -> m2_441  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_435 -> m2_442  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_435 -> m2_443  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_441 -> m2_442  [key=0, style=solid];
m2_441 -> m2_513  [key=2, style=dotted];
m2_441 -> m2_510  [key=2, style=dotted];
m2_441 -> m2_8  [key=2, style=dotted];
m2_442 -> m2_443  [key=0, style=solid];
m2_442 -> m2_513  [key=2, style=dotted];
m2_442 -> m2_510  [key=2, style=dotted];
m2_442 -> m2_8  [key=2, style=dotted];
m2_442 -> m2_444  [key=0, style=solid];
m2_443 -> m2_444  [key=0, style=solid];
m2_443 -> m2_515  [key=2, style=dotted];
m2_443 -> m2_513  [key=2, style=dotted];
m2_443 -> m2_8  [key=2, style=dotted];
m2_443 -> m2_445  [key=0, style=solid];
m2_444 -> m2_445  [key=0, style=solid];
m2_444 -> m2_96  [key=2, style=dotted];
m2_444 -> m2_446  [color=darkseagreen4, key=1, label=year2000Utc, style=dashed];
m2_444 -> m2_448  [color=darkseagreen4, key=1, label=year2000Utc, style=dashed];
m2_444 -> m2_452  [color=darkseagreen4, key=1, label=year2000Utc, style=dashed];
m2_444 -> m2_453  [color=darkseagreen4, key=1, label=year2000Utc, style=dashed];
m2_444 -> m2_269  [key=2, style=dotted];
m2_445 -> m2_446  [key=0, style=solid];
m2_445 -> m2_515  [key=2, style=dotted];
m2_445 -> m2_512  [key=2, style=dotted];
m2_445 -> m2_448  [color=darkseagreen4, key=1, label=utcTolocalDate, style=dashed];
m2_445 -> m2_441  [color=blue, key=0, style=bold];
m2_446 -> m2_447  [key=0, style=solid];
m2_446 -> m2_509  [key=2, style=dotted];
m2_446 -> m2_448  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_446 -> m2_449  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_446 -> m2_450  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_446 -> m2_451  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_446 -> m2_452  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_446 -> m2_453  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_446 -> m2_454  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_446 -> m2_258  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.DateTimeZoneHandling timeZoneHandling", style=bold];
m2_448 -> m2_449  [key=0, style=solid];
m2_448 -> m2_510  [key=2, style=dotted];
m2_448 -> m2_8  [key=2, style=dotted];
m2_448 -> m2_446  [color=blue, key=0, style=bold];
m2_452 -> m2_453  [key=0, style=solid];
m2_452 -> m2_510  [key=2, style=dotted];
m2_452 -> m2_8  [key=2, style=dotted];
m2_452 -> m2_450  [color=blue, key=0, style=bold];
m2_447 -> m2_448  [key=0, style=solid];
m2_447 -> m2_8  [key=2, style=dotted];
m2_447 -> m2_449  [key=2, style=dotted];
m2_450 -> m2_451  [key=0, style=solid];
m2_450 -> m2_8  [key=2, style=dotted];
m2_450 -> m2_449  [color=darkorchid, key=3, label="method methodReturn string ToString", style=bold];
m2_451 -> m2_452  [key=0, style=solid];
m2_451 -> m2_8  [key=2, style=dotted];
m2_451 -> m2_449  [key=2, style=dotted];
m2_465 -> m2_466  [key=0, style=solid];
m2_465 -> m2_8  [key=2, style=dotted];
m2_466 -> m2_467  [key=0, style=solid];
m2_466 -> m2_509  [key=2, style=dotted];
m2_466 -> m2_468  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_466 -> m2_469  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_466 -> m2_470  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_466 -> m2_471  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_466 -> m2_472  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_466 -> m2_473  [color=darkseagreen4, key=1, label="System.Dynamic.ConvertBinder", style=dashed];
m2_466 -> m2_474  [color=darkseagreen4, key=1, label="System.Dynamic.ConvertBinder", style=dashed];
m2_466 -> m2_39  [color=darkorchid, key=3, label="method methodReturn bool TryConvert", style=bold];
m2_466 -> m2_446  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m2_466 -> m2_466  [color=darkorchid, key=3, label="Parameter variable object result", style=bold];
m2_467 -> m2_468  [key=0, style=solid];
m2_467 -> m2_8  [key=2, style=dotted];
m2_467 -> m2_470  [key=0, style=solid];
m2_468 -> m2_469  [key=0, style=solid];
m2_468 -> m2_510  [key=2, style=dotted];
m2_468 -> m2_8  [key=2, style=dotted];
m2_469 -> m2_470  [key=0, style=solid];
m2_469 -> m2_8  [key=2, style=dotted];
m2_469 -> m2_476  [key=0, style=solid];
m2_470 -> m2_471  [key=0, style=solid];
m2_470 -> m2_8  [key=2, style=dotted];
m2_470 -> m2_474  [color=darkseagreen4, key=1, label=value, style=dashed];
m2_471 -> m2_472  [key=0, style=solid];
m2_471 -> m2_8  [key=2, style=dotted];
m2_471 -> m2_474  [key=0, style=solid];
m2_472 -> m2_473  [key=0, style=solid];
m2_472 -> m2_510  [key=2, style=dotted];
m2_472 -> m2_8  [key=2, style=dotted];
m2_473 -> m2_474  [key=0, style=solid];
m2_473 -> m2_8  [key=2, style=dotted];
m2_473 -> m2_476  [key=0, style=solid];
m2_473 -> m2_477  [key=2, style=dotted];
m2_474 -> m2_475  [key=0, style=solid];
m2_474 -> m2_8  [key=2, style=dotted];
m2_474 -> m2_476  [color=darkseagreen4, key=1, label="out object", style=dashed];
m2_474 -> m2_478  [key=2, style=dotted];
m2_475 -> m2_476  [key=0, style=solid];
m2_475 -> m2_509  [key=2, style=dotted];
m2_475 -> m2_477  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_475 -> m2_478  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_475 -> m2_479  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_475 -> m2_480  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_475 -> m2_481  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_475 -> m2_482  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_475 -> m2_483  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_476 -> m2_477  [key=0, style=solid];
m2_476 -> m2_8  [key=2, style=dotted];
m2_476 -> m2_466  [color=blue, key=0, style=bold];
m2_478 -> m2_479  [key=0, style=solid];
m2_478 -> m2_8  [key=2, style=dotted];
m2_479 -> m2_480  [key=0, style=solid];
m2_479 -> m2_8  [key=2, style=dotted];
m2_479 -> m2_39  [color=darkorchid, key=3, label="method methodReturn bool TryBinaryOperation", style=bold];
m2_479 -> m2_483  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_479 -> m2_486  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_479 -> m2_489  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_479 -> m2_492  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_479 -> m2_495  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_479 -> m2_498  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_479 -> m2_37  [color=darkorchid, key=3, label="method methodReturn bool TryBinaryOperation", style=bold];
m2_479 -> m2_481  [color=darkseagreen4, key=1, label="System.Dynamic.BinaryOperationBinder", style=dashed];
m2_479 -> m2_508  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_480 -> m2_481  [key=0, style=solid];
m2_480 -> m2_8  [key=2, style=dotted];
m2_480 -> m2_483  [color=darkseagreen4, key=1, label=compareValue, style=dashed];
m2_480 -> m2_486  [color=darkseagreen4, key=1, label=compareValue, style=dashed];
m2_480 -> m2_489  [color=darkseagreen4, key=1, label=compareValue, style=dashed];
m2_480 -> m2_492  [color=darkseagreen4, key=1, label=compareValue, style=dashed];
m2_480 -> m2_495  [color=darkseagreen4, key=1, label=compareValue, style=dashed];
m2_480 -> m2_498  [color=darkseagreen4, key=1, label=compareValue, style=dashed];
m2_480 -> m2_508  [color=darkseagreen4, key=1, label=compareValue, style=dashed];
m2_481 -> m2_482  [key=0, style=solid];
m2_481 -> m2_510  [key=2, style=dotted];
m2_481 -> m2_8  [key=2, style=dotted];
m2_481 -> m2_485  [key=0, style=solid];
m2_481 -> m2_488  [key=0, style=solid];
m2_481 -> m2_491  [key=0, style=solid];
m2_481 -> m2_494  [key=0, style=solid];
m2_481 -> m2_497  [key=0, style=solid];
m2_481 -> m2_500  [key=0, style=solid];
m2_482 -> m2_483  [key=0, style=solid];
m2_482 -> m2_8  [key=2, style=dotted];
m2_483 -> m2_484  [key=0, style=solid];
m2_483 -> m2_8  [key=2, style=dotted];
m2_483 -> m2_64  [key=2, style=dotted];
m2_484 -> m2_485  [key=0, style=solid];
m2_484 -> m2_517  [key=2, style=dotted];
m2_484 -> m2_509  [key=2, style=dotted];
m2_484 -> m2_486  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_484 -> m2_513  [key=0, style=solid];
m2_485 -> m2_486  [key=0, style=solid];
m2_485 -> m2_8  [key=2, style=dotted];
m2_486 -> m2_487  [key=0, style=solid];
m2_486 -> m2_8  [key=2, style=dotted];
m2_486 -> m2_64  [key=2, style=dotted];
m2_487 -> m2_488  [key=0, style=solid];
m2_487 -> m2_517  [key=2, style=dotted];
m2_487 -> m2_518  [key=2, style=dotted];
m2_487 -> m2_509  [key=2, style=dotted];
m2_487 -> m2_489  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_487 -> m2_513  [key=0, style=solid];
m2_488 -> m2_489  [key=0, style=solid];
m2_488 -> m2_8  [key=2, style=dotted];
m2_489 -> m2_490  [key=0, style=solid];
m2_489 -> m2_8  [key=2, style=dotted];
m2_489 -> m2_64  [key=2, style=dotted];
m2_490 -> m2_491  [key=0, style=solid];
m2_490 -> m2_517  [key=2, style=dotted];
m2_490 -> m2_518  [key=2, style=dotted];
m2_490 -> m2_509  [key=2, style=dotted];
m2_490 -> m2_492  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_490 -> m2_513  [key=0, style=solid];
m2_491 -> m2_492  [key=0, style=solid];
m2_491 -> m2_8  [key=2, style=dotted];
m2_492 -> m2_493  [key=0, style=solid];
m2_492 -> m2_8  [key=2, style=dotted];
m2_492 -> m2_64  [key=2, style=dotted];
m2_493 -> m2_494  [key=0, style=solid];
m2_493 -> m2_517  [key=2, style=dotted];
m2_493 -> m2_518  [key=2, style=dotted];
m2_493 -> m2_509  [key=2, style=dotted];
m2_493 -> m2_495  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_493 -> m2_513  [key=0, style=solid];
m2_494 -> m2_495  [key=0, style=solid];
m2_494 -> m2_8  [key=2, style=dotted];
m2_495 -> m2_496  [key=0, style=solid];
m2_495 -> m2_8  [key=2, style=dotted];
m2_495 -> m2_64  [key=2, style=dotted];
m2_495 -> m2_495  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m2_496 -> m2_497  [key=0, style=solid];
m2_496 -> m2_314  [key=2, style=dotted];
m2_496 -> m2_509  [key=2, style=dotted];
m2_496 -> m2_498  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_496 -> m2_513  [key=0, style=solid];
m2_497 -> m2_498  [key=0, style=solid];
m2_497 -> m2_8  [key=2, style=dotted];
m2_498 -> m2_499  [key=0, style=solid];
m2_498 -> m2_8  [key=2, style=dotted];
m2_498 -> m2_64  [key=2, style=dotted];
m2_499 -> m2_500  [key=0, style=solid];
m2_499 -> m2_509  [key=2, style=dotted];
m2_499 -> m2_501  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_499 -> m2_513  [key=0, style=solid];
m2_500 -> m2_501  [key=0, style=solid];
m2_500 -> m2_8  [key=2, style=dotted];
m2_501 -> m2_502  [key=0, style=solid];
m2_501 -> m2_8  [key=2, style=dotted];
m2_502 -> m2_503  [key=0, style=solid];
m2_502 -> m2_509  [key=2, style=dotted];
m2_502 -> m2_504  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_503 -> m2_504  [key=0, style=solid];
m2_503 -> m2_8  [key=2, style=dotted];
m2_504 -> m2_505  [key=0, style=solid];
m2_504 -> m2_8  [key=2, style=dotted];
m2_505 -> m2_506  [key=0, style=solid];
m2_505 -> m2_509  [key=2, style=dotted];
m2_505 -> m2_507  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_506 -> m2_507  [key=0, style=solid];
m2_506 -> m2_8  [key=2, style=dotted];
m2_507 -> m2_508  [key=0, style=solid];
m2_507 -> m2_8  [key=2, style=dotted];
m2_508 -> m2_390  [color=blue, key=0, style=bold];
m2_508 -> m2_169  [key=2, style=dotted];
m2_508 -> m2_509  [key=0, style=solid];
m2_508 -> m2_511  [key=0, style=solid];
m2_270 -> m2_271  [key=0, style=solid];
m2_271 -> m2_272  [key=0, style=solid];
m2_271 -> m2_4  [key=2, style=dotted];
m2_272 -> m2_273  [key=0, style=solid];
m2_272 -> m2_7  [key=2, style=dotted];
m2_272 -> m2_8  [key=2, style=dotted];
m2_272 -> m2_270  [color=blue, key=0, style=bold];
m2_273 -> m2_274  [key=0, style=solid];
m2_274 -> m2_275  [key=0, style=solid];
m2_274 -> m2_7  [key=2, style=dotted];
m2_274 -> m2_8  [key=2, style=dotted];
m2_274 -> m2_0  [key=2, style=dotted];
m2_275 -> m2_276  [key=0, style=solid];
m2_275 -> m2_273  [color=blue, key=0, style=bold];
m2_279 -> m2_280  [key=0, style=solid];
m2_280 -> m2_281  [key=0, style=solid];
m2_280 -> m2_7  [key=2, style=dotted];
m2_280 -> m2_8  [key=2, style=dotted];
m2_280 -> m2_0  [key=2, style=dotted];
m2_281 -> m2_282  [key=0, style=solid];
m2_281 -> m2_279  [color=blue, key=0, style=bold];
m2_282 -> m2_283  [key=0, style=solid];
m2_282 -> m2_7  [key=2, style=dotted];
m2_282 -> m2_8  [key=2, style=dotted];
m2_283 -> m2_284  [key=0, style=solid];
m2_283 -> m2_0  [key=2, style=dotted];
m2_284 -> m2_285  [key=0, style=solid];
m2_284 -> m2_7  [key=2, style=dotted];
m2_284 -> m2_8  [key=2, style=dotted];
m2_284 -> m2_282  [color=blue, key=0, style=bold];
m2_0 -> m2_1  [key=0, style=solid];
m2_0 -> m2_2  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenType", style=dashed];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_3  [color=darkseagreen4, key=1, label=nonAsciiChar, style=dashed];
m2_1 -> m2_5  [color=darkseagreen4, key=1, label=nonAsciiChar, style=dashed];
m2_1 -> m2_1  [color=darkorchid, key=3, label="Local variable char nonAsciiChar", style=bold];
m2_2 -> m2_3  [key=0, style=solid];
m2_2 -> m2_2  [color=darkorchid, key=3, label="Local variable char escapableNonQuoteAsciiChar", style=bold];
m2_3 -> m2_4  [key=0, style=solid];
m2_3 -> m2_0  [color=blue, key=0, style=bold];
m2_6 -> m2_0  [color=blue, key=0, style=bold];
m2_264 -> m2_265  [key=0, style=solid];
m2_265 -> m2_266  [key=0, style=solid];
m2_265 -> m2_268  [key=2, style=dotted];
m2_266 -> m2_267  [key=0, style=solid];
m2_266 -> m2_8  [key=2, style=dotted];
m2_266 -> m2_268  [color=darkseagreen4, key=1, label="out object", style=dashed];
m2_267 -> m2_264  [color=blue, key=0, style=bold];
m2_267 -> m2_268  [key=0, style=solid];
m2_872 -> m2_873  [key=0, style=solid];
m2_873 -> m2_874  [key=0, style=solid];
m2_873 -> m2_876  [key=2, style=dotted];
m2_873 -> m2_45  [key=2, style=dotted];
m2_874 -> m2_875  [key=0, style=solid];
m2_874 -> m2_8  [key=2, style=dotted];
m2_875 -> m2_872  [color=blue, key=0, style=bold];
m2_549 -> m2_550  [key=0, style=solid];
m2_550 -> m2_551  [key=0, style=solid];
m2_534 -> m2_535  [key=0, style=solid];
m2_534 -> m2_315  [key=2, style=dotted];
m2_534 -> m2_547  [key=2, style=dotted];
m2_535 -> m2_536  [key=0, style=solid];
m2_535 -> m2_548  [key=2, style=dotted];
m2_535 -> m2_537  [color=darkseagreen4, key=1, label=ms, style=dashed];
m2_535 -> m2_538  [color=darkseagreen4, key=1, label=ms, style=dashed];
m2_536 -> m2_534  [color=blue, key=0, style=bold];
m2_536 -> m2_537  [key=0, style=solid];
m2_536 -> m2_549  [key=2, style=dotted];
m2_32 -> m2_33  [key=0, style=solid];
m2_33 -> m2_32  [color=blue, key=0, style=bold];
m2_33 -> m2_34  [key=0, style=solid];
m2_33 -> m2_26  [key=2, style=dotted];
m2_33 -> m2_35  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_33 -> m2_33  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m2_17 -> m2_18  [key=0, style=solid];
m2_18 -> m2_19  [key=0, style=solid];
m2_18 -> m2_20  [color=darkseagreen4, key=1, label=json, style=dashed];
m2_18 -> m2_18  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m2_19 -> m2_20  [key=0, style=solid];
m2_19 -> m2_15  [key=2, style=dotted];
m2_19 -> m2_21  [color=darkseagreen4, key=1, label=o, style=dashed];
m2_20 -> m2_21  [key=0, style=solid];
m2_20 -> m2_16  [key=2, style=dotted];
m2_21 -> m2_22  [key=0, style=solid];
m2_21 -> m2_8  [key=2, style=dotted];
m2_22 -> m2_17  [color=blue, key=0, style=bold];
m2_764 -> m2_765  [key=0, style=solid];
m2_765 -> m2_766  [key=0, style=solid];
m2_765 -> m2_715  [key=2, style=dotted];
m2_766 -> m2_764  [color=blue, key=0, style=bold];
m2_169 -> m2_39  [color=darkorchid, key=3, label="method methodReturn bool Operation", style=bold];
m2_169 -> m2_480  [color=darkorchid, key=3, label="Parameter variable object objB", style=bold];
m2_169 -> m2_37  [color=darkorchid, key=3, label="method methodReturn bool Operation", style=bold];
m2_169 -> m2_170  [key=0, style=solid];
m2_169 -> m2_171  [color=darkseagreen4, key=1, label="System.Linq.Expressions.ExpressionType", style=dashed];
m2_169 -> m2_172  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_169 -> m2_174  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_169 -> m2_175  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_169 -> m2_178  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_169 -> m2_179  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_169 -> m2_180  [color=darkseagreen4, key=1, label="System.Linq.Expressions.ExpressionType", style=dashed];
m2_169 -> m2_197  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_169 -> m2_198  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_169 -> m2_201  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_169 -> m2_202  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_169 -> m2_203  [color=darkseagreen4, key=1, label="System.Linq.Expressions.ExpressionType", style=dashed];
m2_169 -> m2_220  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_169 -> m2_221  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_169 -> m2_224  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_169 -> m2_225  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_169 -> m2_226  [color=darkseagreen4, key=1, label="System.Linq.Expressions.ExpressionType", style=dashed];
m2_169 -> m2_243  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_169 -> m2_244  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_169 -> m2_247  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_169 -> m2_248  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_169 -> m2_249  [color=darkseagreen4, key=1, label="System.Linq.Expressions.ExpressionType", style=dashed];
m2_169 -> m2_479  [color=darkorchid, key=3, label="Parameter variable object result", style=bold];
m2_247 -> m2_144  [key=2, style=dotted];
m2_247 -> m2_248  [key=0, style=solid];
m2_247 -> m2_252  [color=darkseagreen4, key=1, label=l1, style=dashed];
m2_247 -> m2_256  [color=darkseagreen4, key=1, label=l1, style=dashed];
m2_247 -> m2_260  [color=darkseagreen4, key=1, label=l1, style=dashed];
m2_247 -> m2_264  [color=darkseagreen4, key=1, label=l1, style=dashed];
m2_247 -> m2_240  [key=2, style=dotted];
m2_248 -> m2_144  [key=2, style=dotted];
m2_248 -> m2_249  [key=0, style=solid];
m2_248 -> m2_252  [color=darkseagreen4, key=1, label=l2, style=dashed];
m2_248 -> m2_256  [color=darkseagreen4, key=1, label=l2, style=dashed];
m2_248 -> m2_260  [color=darkseagreen4, key=1, label=l2, style=dashed];
m2_248 -> m2_264  [color=darkseagreen4, key=1, label=l2, style=dashed];
m2_248 -> m2_8  [key=2, style=dotted];
m2_224 -> m2_60  [key=2, style=dotted];
m2_224 -> m2_225  [key=0, style=solid];
m2_224 -> m2_229  [color=darkseagreen4, key=1, label=d1, style=dashed];
m2_224 -> m2_233  [color=darkseagreen4, key=1, label=d1, style=dashed];
m2_224 -> m2_237  [color=darkseagreen4, key=1, label=d1, style=dashed];
m2_224 -> m2_241  [color=darkseagreen4, key=1, label=d1, style=dashed];
m2_224 -> m2_8  [key=2, style=dotted];
m2_225 -> m2_60  [key=2, style=dotted];
m2_225 -> m2_226  [key=0, style=solid];
m2_225 -> m2_229  [color=darkseagreen4, key=1, label=d2, style=dashed];
m2_225 -> m2_233  [color=darkseagreen4, key=1, label=d2, style=dashed];
m2_225 -> m2_237  [color=darkseagreen4, key=1, label=d2, style=dashed];
m2_225 -> m2_241  [color=darkseagreen4, key=1, label=d2, style=dashed];
m2_225 -> m2_227  [color=darkseagreen4, key=1, label=data, style=dashed];
m2_225 -> m2_225  [color=darkorchid, key=3, label="Local variable string data", style=bold];
m2_170 -> m2_171  [key=0, style=solid];
m2_170 -> m2_174  [key=0, style=solid];
m2_170 -> m2_50  [key=2, style=dotted];
m2_171 -> m2_172  [key=0, style=solid];
m2_171 -> m2_174  [key=0, style=solid];
m2_171 -> m2_169  [color=blue, key=0, style=bold];
m2_180 -> m2_181  [key=0, style=solid];
m2_180 -> m2_185  [key=0, style=solid];
m2_180 -> m2_189  [key=0, style=solid];
m2_180 -> m2_193  [key=0, style=solid];
m2_197 -> m2_198  [key=0, style=solid];
m2_197 -> m2_220  [key=0, style=solid];
m2_198 -> m2_199  [key=0, style=solid];
m2_198 -> m2_201  [key=0, style=solid];
m2_198 -> m2_196  [key=2, style=dotted];
m2_220 -> m2_221  [key=0, style=solid];
m2_220 -> m2_243  [key=0, style=solid];
m2_220 -> m2_8  [key=2, style=dotted];
m2_221 -> m2_224  [key=0, style=solid];
m2_221 -> m2_222  [key=0, style=solid];
m2_221 -> m2_240  [key=2, style=dotted];
m2_226 -> m2_227  [key=0, style=solid];
m2_226 -> m2_231  [key=0, style=solid];
m2_226 -> m2_235  [key=0, style=solid];
m2_226 -> m2_239  [key=0, style=solid];
m2_226 -> m2_228  [color=darkseagreen4, key=1, label=expected, style=dashed];
m2_226 -> m2_226  [color=darkorchid, key=3, label="Local variable string expected", style=bold];
m2_243 -> m2_244  [key=0, style=solid];
m2_243 -> m2_266  [key=0, style=solid];
m2_243 -> m2_240  [key=2, style=dotted];
m2_244 -> m2_247  [key=0, style=solid];
m2_244 -> m2_245  [key=0, style=solid];
m2_244 -> m2_8  [key=2, style=dotted];
m2_249 -> m2_258  [key=0, style=solid];
m2_249 -> m2_250  [key=0, style=solid];
m2_249 -> m2_254  [key=0, style=solid];
m2_249 -> m2_262  [key=0, style=solid];
m2_249 -> m2_241  [color=blue, key=0, style=bold];
m2_229 -> m2_230  [key=0, style=solid];
m2_229 -> m2_240  [key=2, style=dotted];
m2_233 -> m2_234  [key=0, style=solid];
m2_233 -> m2_240  [key=2, style=dotted];
m2_237 -> m2_238  [key=0, style=solid];
m2_237 -> m2_240  [key=2, style=dotted];
m2_241 -> m2_242  [key=0, style=solid];
m2_184 -> m2_268  [key=0, style=solid];
m2_184 -> m2_185  [key=0, style=solid];
m2_184 -> m2_187  [key=2, style=dotted];
m2_188 -> m2_268  [key=0, style=solid];
m2_188 -> m2_189  [key=0, style=solid];
m2_192 -> m2_268  [key=0, style=solid];
m2_192 -> m2_193  [key=0, style=solid];
m2_196 -> m2_268  [key=0, style=solid];
m2_200 -> m2_268  [key=0, style=solid];
m2_200 -> m2_197  [color=blue, key=0, style=bold];
m2_207 -> m2_268  [key=0, style=solid];
m2_207 -> m2_208  [key=0, style=solid];
m2_207 -> m2_240  [key=2, style=dotted];
m2_211 -> m2_268  [key=0, style=solid];
m2_211 -> m2_212  [key=0, style=solid];
m2_211 -> m2_240  [key=2, style=dotted];
m2_215 -> m2_268  [key=0, style=solid];
m2_215 -> m2_216  [key=0, style=solid];
m2_215 -> m2_240  [key=2, style=dotted];
m2_219 -> m2_268  [key=0, style=solid];
m2_219 -> m2_220  [key=0, style=solid];
m2_219 -> m2_240  [key=2, style=dotted];
m2_223 -> m2_268  [key=0, style=solid];
m2_223 -> m2_224  [key=0, style=solid];
m2_223 -> m2_240  [key=2, style=dotted];
m2_230 -> m2_268  [key=0, style=solid];
m2_230 -> m2_231  [key=0, style=solid];
m2_230 -> m2_8  [key=2, style=dotted];
m2_234 -> m2_268  [key=0, style=solid];
m2_234 -> m2_235  [key=0, style=solid];
m2_234 -> m2_8  [key=2, style=dotted];
m2_238 -> m2_268  [key=0, style=solid];
m2_238 -> m2_239  [key=0, style=solid];
m2_238 -> m2_8  [key=2, style=dotted];
m2_242 -> m2_268  [key=0, style=solid];
m2_242 -> m2_243  [key=0, style=solid];
m2_246 -> m2_268  [key=0, style=solid];
m2_246 -> m2_247  [key=0, style=solid];
m2_246 -> m2_8  [key=2, style=dotted];
m2_253 -> m2_268  [key=0, style=solid];
m2_253 -> m2_254  [key=0, style=solid];
m2_176 -> m2_177  [key=0, style=solid];
m2_183 -> m2_184  [key=0, style=solid];
m2_191 -> m2_192  [key=0, style=solid];
m2_191 -> m2_188  [color=blue, key=0, style=bold];
m2_195 -> m2_196  [key=0, style=solid];
m2_195 -> m2_192  [color=blue, key=0, style=bold];
m2_181 -> m2_182  [key=0, style=solid];
m2_185 -> m2_186  [key=0, style=solid];
m2_185 -> m2_85  [key=2, style=dotted];
m2_189 -> m2_190  [key=0, style=solid];
m2_189 -> m2_187  [key=2, style=dotted];
m2_193 -> m2_194  [key=0, style=solid];
m2_193 -> m2_196  [key=2, style=dotted];
m2_199 -> m2_200  [key=0, style=solid];
m2_199 -> m2_85  [key=2, style=dotted];
m2_206 -> m2_207  [key=0, style=solid];
m2_210 -> m2_211  [key=0, style=solid];
m2_210 -> m2_8  [key=2, style=dotted];
m2_214 -> m2_215  [key=0, style=solid];
m2_214 -> m2_8  [key=2, style=dotted];
m2_218 -> m2_219  [key=0, style=solid];
m2_218 -> m2_8  [key=2, style=dotted];
m2_208 -> m2_209  [key=0, style=solid];
m2_208 -> m2_8  [key=2, style=dotted];
m2_212 -> m2_213  [key=0, style=solid];
m2_212 -> m2_8  [key=2, style=dotted];
m2_216 -> m2_217  [key=0, style=solid];
m2_216 -> m2_8  [key=2, style=dotted];
m2_222 -> m2_223  [key=0, style=solid];
m2_222 -> m2_8  [key=2, style=dotted];
m2_227 -> m2_228  [key=0, style=solid];
m2_227 -> m2_240  [key=2, style=dotted];
m2_231 -> m2_232  [key=0, style=solid];
m2_231 -> m2_240  [key=2, style=dotted];
m2_235 -> m2_236  [key=0, style=solid];
m2_235 -> m2_240  [key=2, style=dotted];
m2_239 -> m2_240  [key=0, style=solid];
m2_239 -> m2_205  [color=blue, key=0, style=bold];
m2_245 -> m2_246  [key=0, style=solid];
m2_245 -> m2_240  [key=2, style=dotted];
m2_254 -> m2_255  [key=0, style=solid];
m2_254 -> m2_256  [key=2, style=dotted];
m2_254 -> m2_7  [key=2, style=dotted];
m2_255 -> m2_256  [key=0, style=solid];
m2_255 -> m2_253  [color=blue, key=0, style=bold];
m2_228 -> m2_229  [key=0, style=solid];
m2_228 -> m2_8  [key=2, style=dotted];
m2_232 -> m2_233  [key=0, style=solid];
m2_232 -> m2_8  [key=2, style=dotted];
m2_236 -> m2_237  [key=0, style=solid];
m2_236 -> m2_8  [key=2, style=dotted];
m2_182 -> m2_183  [key=0, style=solid];
m2_182 -> m2_180  [color=blue, key=0, style=bold];
m2_186 -> m2_187  [key=0, style=solid];
m2_186 -> m2_183  [color=blue, key=0, style=bold];
m2_190 -> m2_191  [key=0, style=solid];
m2_190 -> m2_8  [key=2, style=dotted];
m2_194 -> m2_195  [key=0, style=solid];
m2_194 -> m2_85  [key=2, style=dotted];
m2_205 -> m2_206  [key=0, style=solid];
m2_209 -> m2_210  [key=0, style=solid];
m2_209 -> m2_240  [key=2, style=dotted];
m2_213 -> m2_214  [key=0, style=solid];
m2_213 -> m2_240  [key=2, style=dotted];
m2_217 -> m2_218  [key=0, style=solid];
m2_217 -> m2_240  [key=2, style=dotted];
m2_512 -> m2_513  [key=0, style=solid];
m2_704 -> m2_705  [key=0, style=solid];
m2_704 -> m2_706  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_705 -> m2_706  [key=0, style=solid];
m2_706 -> m2_707  [key=0, style=solid];
m2_707 -> m2_704  [color=blue, key=0, style=bold];
m2_672 -> m2_673  [key=0, style=solid];
m2_673 -> m2_674  [key=0, style=solid];
m2_673 -> m2_83  [key=2, style=dotted];
m2_674 -> m2_675  [key=0, style=solid];
m2_674 -> m2_84  [key=2, style=dotted];
m2_674 -> m2_676  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m2_675 -> m2_676  [key=0, style=solid];
m2_675 -> m2_66  [key=2, style=dotted];
m2_675 -> m2_678  [key=2, style=dotted];
m2_676 -> m2_677  [key=0, style=solid];
m2_676 -> m2_8  [key=2, style=dotted];
m2_677 -> m2_672  [color=blue, key=0, style=bold];
m2_864 -> m2_865  [key=0, style=solid];
m2_865 -> m2_866  [key=0, style=solid];
m2_865 -> m2_54  [key=2, style=dotted];
m2_866 -> m2_864  [color=blue, key=0, style=bold];
m2_540 -> m2_541  [key=0, style=solid];
m2_540 -> m2_554  [key=2, style=dotted];
m2_541 -> m2_542  [key=0, style=solid];
m2_542 -> m2_540  [color=blue, key=0, style=bold];
m2_542 -> m2_509  [color=blue, key=0, style=bold];
m2_543 -> m2_544  [key=0, style=solid];
m2_54 -> m2_43  [color=blue, key=0, style=bold];
m2_755 -> m2_756  [key=0, style=solid];
m2_756 -> m2_757  [key=0, style=solid];
m2_757 -> m2_755  [color=blue, key=0, style=bold];
m2_339 -> m2_340  [key=0, style=solid];
m2_339 -> m2_269  [key=2, style=dotted];
m2_339 -> m2_396  [key=2, style=dotted];
m2_348 -> m2_349  [key=0, style=solid];
m2_348 -> m2_350  [key=0, style=solid];
m2_348 -> m2_355  [key=2, style=dotted];
m2_348 -> m2_8  [key=2, style=dotted];
m2_349 -> m2_357  [key=0, style=solid];
m2_349 -> m2_399  [key=2, style=dotted];
m2_349 -> m2_350  [key=0, style=solid];
m2_349 -> m2_355  [key=2, style=dotted];
m2_349 -> m2_8  [key=2, style=dotted];
m2_350 -> m2_351  [key=0, style=solid];
m2_350 -> m2_352  [key=0, style=solid];
m2_350 -> m2_355  [key=2, style=dotted];
m2_350 -> m2_8  [key=2, style=dotted];
m2_351 -> m2_357  [key=0, style=solid];
m2_351 -> m2_400  [key=2, style=dotted];
m2_351 -> m2_352  [key=0, style=solid];
m2_351 -> m2_355  [key=2, style=dotted];
m2_351 -> m2_8  [key=2, style=dotted];
m2_352 -> m2_353  [key=0, style=solid];
m2_352 -> m2_354  [key=0, style=solid];
m2_352 -> m2_355  [key=2, style=dotted];
m2_352 -> m2_8  [key=2, style=dotted];
m2_353 -> m2_357  [key=0, style=solid];
m2_353 -> m2_401  [key=2, style=dotted];
m2_353 -> m2_354  [key=0, style=solid];
m2_353 -> m2_355  [key=2, style=dotted];
m2_353 -> m2_8  [key=2, style=dotted];
m2_354 -> m2_355  [key=0, style=solid];
m2_354 -> m2_356  [key=0, style=solid];
m2_354 -> m2_339  [color=blue, key=0, style=bold];
m2_355 -> m2_357  [key=0, style=solid];
m2_355 -> m2_402  [key=2, style=dotted];
m2_374 -> m2_375  [key=0, style=solid];
m2_374 -> m2_376  [key=0, style=solid];
m2_374 -> m2_374  [color=darkorchid, key=3, label="Local variable string v", style=bold];
m2_375 -> m2_377  [key=0, style=solid];
m2_375 -> m2_408  [key=2, style=dotted];
m2_375 -> m2_376  [key=0, style=solid];
m2_375 -> m2_378  [key=2, style=dotted];
m2_376 -> m2_377  [key=0, style=solid];
m2_376 -> m2_150  [key=2, style=dotted];
m2_376 -> m2_409  [key=2, style=dotted];
m2_376 -> m2_8  [key=2, style=dotted];
m2_341 -> m2_342  [key=0, style=solid];
m2_341 -> m2_355  [key=2, style=dotted];
m2_341 -> m2_8  [key=2, style=dotted];
m2_344 -> m2_345  [key=0, style=solid];
m2_344 -> m2_355  [key=2, style=dotted];
m2_344 -> m2_8  [key=2, style=dotted];
m2_347 -> m2_348  [key=0, style=solid];
m2_347 -> m2_355  [key=2, style=dotted];
m2_347 -> m2_8  [key=2, style=dotted];
m2_373 -> m2_374  [key=0, style=solid];
m2_340 -> m2_390  [key=0, style=solid];
m2_340 -> m2_341  [key=0, style=solid];
m2_340 -> m2_355  [key=2, style=dotted];
m2_340 -> m2_8  [key=2, style=dotted];
m2_377 -> m2_390  [key=0, style=solid];
m2_377 -> m2_373  [color=blue, key=0, style=bold];
m2_342 -> m2_343  [key=0, style=solid];
m2_342 -> m2_397  [key=2, style=dotted];
m2_342 -> m2_355  [key=2, style=dotted];
m2_342 -> m2_8  [key=2, style=dotted];
m2_345 -> m2_346  [key=0, style=solid];
m2_345 -> m2_398  [key=2, style=dotted];
m2_345 -> m2_355  [key=2, style=dotted];
m2_345 -> m2_8  [key=2, style=dotted];
m2_343 -> m2_390  [key=0, style=solid];
m2_343 -> m2_344  [key=0, style=solid];
m2_343 -> m2_355  [key=2, style=dotted];
m2_343 -> m2_8  [key=2, style=dotted];
m2_346 -> m2_390  [key=0, style=solid];
m2_346 -> m2_347  [key=0, style=solid];
m2_346 -> m2_355  [key=2, style=dotted];
m2_346 -> m2_8  [key=2, style=dotted];
m2_770 -> m2_771  [key=0, style=solid];
m2_771 -> m2_772  [key=0, style=solid];
m2_772 -> m2_770  [color=blue, key=0, style=bold];
m2_547 -> m2_548  [key=0, style=solid];
m2_509 -> m2_509  [color=darkseagreen4, key=1, label="out object", style=dashed];
m2_509 -> m2_510  [key=0, style=solid];
m2_509 -> m2_32  [key=2, style=dotted];
m2_509 -> m2_519  [key=0, style=solid];
m2_509 -> m2_521  [color=red, key=1, label=T, style=dashed];
m2_509 -> m2_522  [color=darkseagreen4, key=1, label=T, style=dashed];
m2_509 -> m2_523  [color=darkseagreen4, key=1, label=T, style=dashed];
m2_509 -> m2_524  [color=darkseagreen4, key=1, label=T, style=dashed];
m2_509 -> m2_525  [color=darkseagreen4, key=1, label=T, style=dashed];
m2_509 -> m2_526  [color=darkseagreen4, key=1, label=T, style=dashed];
m2_509 -> m2_527  [color=darkseagreen4, key=1, label=T, style=dashed];
m2_509 -> m2_528  [color=darkseagreen4, key=1, label=T, style=dashed];
m2_509 -> m2_529  [color=darkseagreen4, key=1, label=T, style=dashed];
m2_509 -> m2_530  [color=darkseagreen4, key=1, label=T, style=dashed];
m2_509 -> m2_531  [color=darkseagreen4, key=1, label=T, style=dashed];
m2_509 -> m2_532  [color=darkseagreen4, key=1, label=T, style=dashed];
m2_509 -> m2_533  [color=darkseagreen4, key=1, label=T, style=dashed];
m2_509 -> m2_534  [color=darkseagreen4, key=1, label=T, style=dashed];
m2_509 -> m2_537  [color=darkseagreen4, key=1, label=T, style=dashed];
m2_509 -> m2_392  [color=darkorchid, key=3, label="Parameter variable string name", style=bold];
m2_509 -> m2_403  [color=darkorchid, key=3, label="Parameter variable string name", style=bold];
m2_509 -> m2_414  [color=darkorchid, key=3, label="Parameter variable string name", style=bold];
m2_509 -> m2_425  [color=darkorchid, key=3, label="Parameter variable string name", style=bold];
m2_509 -> m2_435  [color=darkorchid, key=3, label="Parameter variable string name", style=bold];
m2_509 -> m2_446  [color=darkorchid, key=3, label="Parameter variable string name", style=bold];
m2_509 -> m2_457  [color=darkorchid, key=3, label="Parameter variable string name", style=bold];
m2_509 -> m2_466  [color=darkorchid, key=3, label="Parameter variable string name", style=bold];
m2_509 -> m2_475  [color=darkorchid, key=3, label="Parameter variable string name", style=bold];
m2_509 -> m2_484  [color=darkorchid, key=3, label="Parameter variable string name", style=bold];
m2_509 -> m2_487  [color=darkorchid, key=3, label="Parameter variable string name", style=bold];
m2_509 -> m2_490  [color=darkorchid, key=3, label="Parameter variable string name", style=bold];
m2_509 -> m2_493  [color=darkorchid, key=3, label="Parameter variable string name", style=bold];
m2_509 -> m2_496  [color=darkorchid, key=3, label="Parameter variable string name", style=bold];
m2_509 -> m2_499  [color=darkorchid, key=3, label="Parameter variable string name", style=bold];
m2_509 -> m2_502  [color=darkorchid, key=3, label="Parameter variable string name", style=bold];
m2_509 -> m2_505  [color=darkorchid, key=3, label="Parameter variable string name", style=bold];
m2_509 -> m2_401  [color=darkorchid, key=3, label="Parameter variable T value", style=bold];
m2_509 -> m2_412  [color=darkorchid, key=3, label="Parameter variable T value", style=bold];
m2_509 -> m2_423  [color=darkorchid, key=3, label="Parameter variable T value", style=bold];
m2_509 -> m2_434  [color=darkorchid, key=3, label="Parameter variable T value", style=bold];
m2_509 -> m2_444  [color=darkorchid, key=3, label="Parameter variable T value", style=bold];
m2_509 -> m2_455  [color=darkorchid, key=3, label="Parameter variable T value", style=bold];
m2_509 -> m2_520  [color=red, key=3, label="method methodReturn Newtonsoft.Json.Tests.JsonConvertTest.DateTimeResult TestDateTime", style=bold];
m2_510 -> m2_513  [key=0, style=solid];
m2_513 -> m2_479  [color=blue, key=0, style=bold];
m2_533 -> m2_535  [key=0, style=solid];
m2_533 -> m2_315  [key=2, style=dotted];
m2_533 -> m2_547  [key=2, style=dotted];
m2_9 -> m2_10  [key=0, style=solid];
m2_10 -> m2_11  [key=0, style=solid];
m2_10 -> m2_12  [color=darkseagreen4, key=1, label=json, style=dashed];
m2_10 -> m2_10  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m2_11 -> m2_12  [key=0, style=solid];
m2_11 -> m2_15  [key=2, style=dotted];
m2_11 -> m2_13  [color=darkseagreen4, key=1, label=o, style=dashed];
m2_12 -> m2_13  [key=0, style=solid];
m2_12 -> m2_16  [key=2, style=dotted];
m2_13 -> m2_14  [key=0, style=solid];
m2_13 -> m2_8  [key=2, style=dotted];
m2_14 -> m2_9  [color=blue, key=0, style=bold];
m2_517 -> m2_518  [key=0, style=solid];
m2_730 -> m2_731  [key=0, style=solid];
m2_731 -> m2_732  [key=0, style=solid];
m2_732 -> m2_730  [color=blue, key=0, style=bold];
m2_46 -> m2_54  [key=0, style=solid];
m2_727 -> m2_728  [key=0, style=solid];
m2_27 -> m2_28  [key=0, style=solid];
m2_28 -> m2_29  [key=0, style=solid];
m2_28 -> m2_30  [color=darkseagreen4, key=1, label=json, style=dashed];
m2_29 -> m2_30  [key=0, style=solid];
m2_29 -> m2_15  [key=2, style=dotted];
m2_30 -> m2_31  [key=0, style=solid];
m2_30 -> m2_16  [key=2, style=dotted];
m2_31 -> m2_27  [color=blue, key=0, style=bold];
m2_35 -> m2_36  [key=0, style=solid];
m2_35 -> m2_38  [color=darkseagreen4, key=1, label=other, style=dashed];
m2_35 -> m2_40  [color=darkseagreen4, key=1, label=other, style=dashed];
m2_36 -> m2_37  [key=0, style=solid];
m2_36 -> m2_38  [color=darkseagreen4, key=1, label=json, style=dashed];
m2_37 -> m2_38  [key=0, style=solid];
m2_37 -> m2_15  [key=2, style=dotted];
m2_37 -> m2_41  [key=0, style=solid];
m2_38 -> m2_39  [key=0, style=solid];
m2_38 -> m2_16  [key=2, style=dotted];
m2_38 -> m2_40  [key=0, style=solid];
m2_39 -> m2_35  [color=blue, key=0, style=bold];
m2_39 -> m2_41  [key=0, style=solid];
m2_47 -> m2_48  [key=0, style=solid];
m2_47 -> m2_50  [key=0, style=solid];
m2_48 -> m2_49  [key=0, style=solid];
m2_48 -> m2_50  [key=2, style=dotted];
m2_49 -> m2_47  [color=blue, key=0, style=bold];
m2_49 -> m2_54  [key=0, style=solid];
m2_49 -> m2_59  [key=2, style=dotted];
m2_49 -> m2_57  [key=2, style=dotted];
m2_49 -> m2_58  [key=2, style=dotted];
m2_146 -> m2_147  [key=0, style=solid];
m2_147 -> m2_148  [key=0, style=solid];
m2_147 -> m2_50  [key=2, style=dotted];
m2_669 -> m2_670  [key=0, style=solid];
m2_670 -> m2_671  [key=0, style=solid];
m2_670 -> m2_666  [key=2, style=dotted];
m2_670 -> m2_667  [key=2, style=dotted];
m2_671 -> m2_669  [color=blue, key=0, style=bold];
m2_728 -> m2_729  [key=0, style=solid];
m2_728 -> m2_45  [key=2, style=dotted];
m2_729 -> m2_727  [color=blue, key=0, style=bold];
m2_585 -> m2_597  [key=0, style=solid];
m2_585 -> m2_599  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonConverter", style=dashed];
m2_585 -> m2_573  [color=darkorchid, key=3, label="Parameter variable string text", style=bold];
m2_585 -> m2_546  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonConverter converter", style=bold];
m2_597 -> m2_598  [key=0, style=solid];
m2_597 -> m2_84  [key=2, style=dotted];
m2_597 -> m2_83  [key=2, style=dotted];
m2_597 -> m2_599  [color=darkseagreen4, key=1, label=reader, style=dashed];
m2_599 -> m2_600  [key=0, style=solid];
m2_599 -> m2_602  [key=2, style=dotted];
m2_598 -> m2_599  [key=0, style=solid];
m2_598 -> m2_601  [key=2, style=dotted];
m2_600 -> m2_585  [color=blue, key=0, style=bold];
m2_34 -> m2_32  [color=blue, key=0, style=bold];
m2_34 -> m2_35  [key=0, style=solid];
m2_34 -> m2_39  [color=darkorchid, key=3, label="method methodReturn bool DeepEquals", style=bold];
m2_34 -> m2_42  [color=darkorchid, key=3, label="method methodReturn bool DeepEquals", style=bold];
m2_34 -> m2_37  [color=darkorchid, key=3, label="method methodReturn bool DeepEquals", style=bold];
m2_43 -> m2_64  [color=darkorchid, key=3, label="Parameter variable object i2", style=bold];
m2_43 -> m2_44  [key=0, style=solid];
m2_43 -> m2_47  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_43 -> m2_48  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_43 -> m2_50  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_43 -> m2_51  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_43 -> m2_46  [key=2, style=dotted];
m2_51 -> m2_60  [key=2, style=dotted];
m2_51 -> m2_52  [key=0, style=solid];
m2_44 -> m2_45  [key=0, style=solid];
m2_44 -> m2_55  [key=2, style=dotted];
m2_44 -> m2_56  [key=2, style=dotted];
m2_44 -> m2_46  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_44 -> m2_53  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_44 -> m2_40  [color=blue, key=0, style=bold];
m2_52 -> m2_54  [key=0, style=solid];
m2_52 -> m2_61  [key=2, style=dotted];
m2_52 -> m2_62  [key=2, style=dotted];
m2_52 -> m2_63  [key=2, style=dotted];
m2_52 -> m2_53  [key=0, style=solid];
m2_53 -> m2_54  [key=0, style=solid];
m2_53 -> m2_51  [color=blue, key=0, style=bold];
m2_45 -> m2_47  [key=0, style=solid];
m2_45 -> m2_46  [key=0, style=solid];
m2_767 -> m2_768  [key=0, style=solid];
m2_768 -> m2_769  [key=0, style=solid];
m2_768 -> m2_54  [key=2, style=dotted];
m2_769 -> m2_767  [color=blue, key=0, style=bold];
m2_779 -> m2_780  [key=0, style=solid];
m2_780 -> m2_781  [key=0, style=solid];
m2_780 -> m2_784  [key=2, style=dotted];
m2_781 -> m2_782  [key=0, style=solid];
m2_781 -> m2_45  [key=2, style=dotted];
m2_782 -> m2_783  [key=0, style=solid];
m2_782 -> m2_8  [key=2, style=dotted];
m2_783 -> m2_779  [color=blue, key=0, style=bold];
m2_698 -> m2_699  [key=0, style=solid];
m2_699 -> m2_700  [key=0, style=solid];
m2_699 -> m2_703  [key=2, style=dotted];
m2_700 -> m2_701  [key=0, style=solid];
m2_700 -> m2_45  [key=2, style=dotted];
m2_701 -> m2_702  [key=0, style=solid];
m2_701 -> m2_8  [key=2, style=dotted];
m2_702 -> m2_698  [color=blue, key=0, style=bold];
m2_758 -> m2_759  [key=0, style=solid];
m2_759 -> m2_760  [key=0, style=solid];
m2_760 -> m2_758  [color=blue, key=0, style=bold];
m2_519 -> m2_520  [color=red, key=0, style=solid];
m2_519 -> m2_543  [key=2, style=dotted];
m2_519 -> m2_514  [color=blue, key=0, style=bold];
m2_521 -> m2_522  [color=red, key=0, style=solid];
m2_521 -> m2_545  [color=red, key=2, style=dotted];
m2_521 -> m2_523  [key=0, style=solid];
m2_522 -> m2_523  [key=0, style=solid];
m2_522 -> m2_526  [key=0, style=solid];
m2_522 -> m2_524  [key=0, style=solid];
m2_523 -> m2_524  [key=0, style=solid];
m2_523 -> m2_545  [key=2, style=dotted];
m2_523 -> m2_64  [key=2, style=dotted];
m2_524 -> m2_525  [key=0, style=solid];
m2_524 -> m2_545  [key=2, style=dotted];
m2_524 -> m2_520  [color=blue, key=0, style=bold];
m2_520 -> m2_521  [color=red, key=0, style=solid];
m2_520 -> m2_544  [color=red, key=2, style=dotted];
m2_520 -> m2_523  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m2_520 -> m2_524  [color=red, key=1, label=result, style=dashed];
m2_520 -> m2_525  [color=red, key=1, label=result, style=dashed];
m2_520 -> m2_526  [color=red, key=1, label=result, style=dashed];
m2_520 -> m2_528  [color=red, key=1, label=result, style=dashed];
m2_520 -> m2_529  [color=red, key=1, label=result, style=dashed];
m2_520 -> m2_530  [color=red, key=1, label=result, style=dashed];
m2_520 -> m2_541  [color=red, key=1, label=result, style=dashed];
m2_520 -> m2_68  [color=darkorchid, key=3, label="method methodReturn int CompareTo", style=bold];
m2_520 -> m2_64  [color=darkorchid, key=3, label="method methodReturn int CompareTo", style=bold];
m2_518 -> m2_519  [key=0, style=solid];
m2_518 -> m2_64  [key=2, style=dotted];
m2_23 -> m2_24  [key=0, style=solid];
m2_24 -> m2_25  [key=0, style=solid];
m2_24 -> m2_26  [key=2, style=dotted];
m2_24 -> m2_27  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_24 -> m2_24  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m2_25 -> m2_23  [color=blue, key=0, style=bold];
m2_785 -> m2_786  [key=0, style=solid];
m2_786 -> m2_787  [key=0, style=solid];
m2_786 -> m2_823  [key=2, style=dotted];
m2_787 -> m2_788  [key=0, style=solid];
m2_787 -> m2_45  [key=2, style=dotted];
m2_788 -> m2_789  [key=0, style=solid];
m2_788 -> m2_8  [key=2, style=dotted];
m2_789 -> m2_790  [key=0, style=solid];
m2_789 -> m2_824  [key=2, style=dotted];
m2_790 -> m2_791  [key=0, style=solid];
m2_790 -> m2_45  [key=2, style=dotted];
m2_791 -> m2_792  [key=0, style=solid];
m2_791 -> m2_8  [key=2, style=dotted];
m2_792 -> m2_793  [key=0, style=solid];
m2_792 -> m2_825  [key=2, style=dotted];
m2_793 -> m2_794  [key=0, style=solid];
m2_793 -> m2_45  [key=2, style=dotted];
m2_794 -> m2_795  [key=0, style=solid];
m2_794 -> m2_8  [key=2, style=dotted];
m2_795 -> m2_796  [key=0, style=solid];
m2_795 -> m2_826  [key=2, style=dotted];
m2_796 -> m2_797  [key=0, style=solid];
m2_796 -> m2_45  [key=2, style=dotted];
m2_797 -> m2_798  [key=0, style=solid];
m2_797 -> m2_8  [key=2, style=dotted];
m2_798 -> m2_799  [key=0, style=solid];
m2_798 -> m2_827  [key=2, style=dotted];
m2_799 -> m2_800  [key=0, style=solid];
m2_799 -> m2_45  [key=2, style=dotted];
m2_800 -> m2_801  [key=0, style=solid];
m2_800 -> m2_8  [key=2, style=dotted];
m2_801 -> m2_802  [key=0, style=solid];
m2_801 -> m2_828  [key=2, style=dotted];
m2_802 -> m2_803  [key=0, style=solid];
m2_802 -> m2_45  [key=2, style=dotted];
m2_803 -> m2_804  [key=0, style=solid];
m2_803 -> m2_8  [key=2, style=dotted];
m2_804 -> m2_805  [key=0, style=solid];
m2_804 -> m2_829  [key=2, style=dotted];
m2_805 -> m2_806  [key=0, style=solid];
m2_805 -> m2_45  [key=2, style=dotted];
m2_806 -> m2_807  [key=0, style=solid];
m2_806 -> m2_8  [key=2, style=dotted];
m2_807 -> m2_808  [key=0, style=solid];
m2_807 -> m2_830  [key=2, style=dotted];
m2_808 -> m2_809  [key=0, style=solid];
m2_808 -> m2_45  [key=2, style=dotted];
m2_809 -> m2_810  [key=0, style=solid];
m2_809 -> m2_8  [key=2, style=dotted];
m2_810 -> m2_811  [key=0, style=solid];
m2_810 -> m2_831  [key=2, style=dotted];
m2_811 -> m2_812  [key=0, style=solid];
m2_811 -> m2_45  [key=2, style=dotted];
m2_812 -> m2_813  [key=0, style=solid];
m2_812 -> m2_8  [key=2, style=dotted];
m2_813 -> m2_814  [key=0, style=solid];
m2_813 -> m2_832  [key=2, style=dotted];
m2_814 -> m2_815  [key=0, style=solid];
m2_814 -> m2_45  [key=2, style=dotted];
m2_815 -> m2_816  [key=0, style=solid];
m2_815 -> m2_8  [key=2, style=dotted];
m2_816 -> m2_817  [key=0, style=solid];
m2_816 -> m2_833  [key=2, style=dotted];
m2_817 -> m2_818  [key=0, style=solid];
m2_817 -> m2_45  [key=2, style=dotted];
m2_818 -> m2_819  [key=0, style=solid];
m2_818 -> m2_8  [key=2, style=dotted];
m2_819 -> m2_820  [key=0, style=solid];
m2_819 -> m2_834  [key=2, style=dotted];
m2_820 -> m2_821  [key=0, style=solid];
m2_820 -> m2_45  [key=2, style=dotted];
m2_821 -> m2_822  [key=0, style=solid];
m2_821 -> m2_8  [key=2, style=dotted];
m2_822 -> m2_785  [color=blue, key=0, style=bold];
m2_708 -> m2_709  [key=0, style=solid];
m2_709 -> m2_708  [color=blue, key=0, style=bold];
m2_855 -> m2_856  [key=0, style=solid];
m2_856 -> m2_855  [color=blue, key=0, style=bold];
m2_861 -> m2_862  [key=0, style=solid];
m2_862 -> m2_863  [key=0, style=solid];
m2_863 -> m2_861  [color=blue, key=0, style=bold];
m2_737 -> m2_738  [key=0, style=solid];
m2_738 -> m2_739  [key=0, style=solid];
m2_739 -> m2_737  [color=blue, key=0, style=bold];
m2_743 -> m2_744  [key=0, style=solid];
m2_744 -> m2_745  [key=0, style=solid];
m2_745 -> m2_743  [color=blue, key=0, style=bold];
m2_722 -> m2_723  [key=0, style=solid];
m2_723 -> m2_724  [key=0, style=solid];
m2_723 -> m2_726  [key=2, style=dotted];
m2_723 -> m2_728  [color=darkseagreen4, key=1, label=value, style=dashed];
m2_724 -> m2_725  [key=0, style=solid];
m2_724 -> m2_26  [key=2, style=dotted];
m2_724 -> m2_727  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_725 -> m2_722  [color=blue, key=0, style=bold];
m2_586 -> m2_587  [key=0, style=solid];
m2_587 -> m2_571  [color=blue, key=0, style=bold];
m2_835 -> m2_836  [key=0, style=solid];
m2_836 -> m2_837  [key=0, style=solid];
m2_836 -> m2_840  [key=2, style=dotted];
m2_837 -> m2_838  [key=0, style=solid];
m2_837 -> m2_45  [key=2, style=dotted];
m2_838 -> m2_839  [key=0, style=solid];
m2_838 -> m2_8  [key=2, style=dotted];
m2_839 -> m2_835  [color=blue, key=0, style=bold];
m2_40 -> m2_41  [key=0, style=solid];
m2_40 -> m2_42  [key=2, style=dotted];
m2_41 -> m2_42  [key=0, style=solid];
m2_41 -> m2_34  [color=blue, key=0, style=bold];
m2_853 -> m2_854  [key=0, style=solid];
m2_854 -> m2_853  [color=blue, key=0, style=bold];
m2_514 -> m2_515  [color=green, key=0, style=solid];
m2_514 -> m2_517  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_514 -> m2_68  [color=darkorchid, key=3, label="method methodReturn int System.IComparable.CompareTo", style=bold];
m2_514 -> m2_64  [color=darkorchid, key=3, label="method methodReturn int System.IComparable.CompareTo", style=bold];
m2_740 -> m2_741  [key=0, style=solid];
m2_741 -> m2_742  [key=0, style=solid];
m2_742 -> m2_740  [color=blue, key=0, style=bold];
m2_867 -> m2_868  [key=0, style=solid];
m2_868 -> m2_869  [key=0, style=solid];
m2_868 -> m2_870  [key=2, style=dotted];
m2_868 -> m2_871  [key=2, style=dotted];
m2_869 -> m2_867  [color=blue, key=0, style=bold];
m2_877 -> m2_392  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m2_877 -> m2_394  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m2_877 -> m2_398  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m2_877 -> m2_403  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m2_877 -> m2_404  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m2_877 -> m2_405  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m2_877 -> m2_408  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m2_877 -> m2_409  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m2_877 -> m2_410  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m2_877 -> m2_414  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m2_877 -> m2_415  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m2_877 -> m2_416  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m2_877 -> m2_419  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m2_877 -> m2_420  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m2_877 -> m2_421  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m2_877 -> m2_425  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m2_877 -> m2_426  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m2_877 -> m2_427  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m2_877 -> m2_430  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m2_877 -> m2_431  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m2_877 -> m2_432  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m2_877 -> m2_435  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m2_877 -> m2_437  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m2_877 -> m2_440  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m2_877 -> m2_441  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m2_877 -> m2_442  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m2_877 -> m2_446  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m2_877 -> m2_448  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m2_877 -> m2_452  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m2_877 -> m2_453  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m2_877 -> m2_457  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m2_877 -> m2_459  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m2_877 -> m2_463  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m2_877 -> m2_464  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m2_877 -> m2_466  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m2_877 -> m2_468  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m2_877 -> m2_472  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m2_877 -> m2_475  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m2_877 -> m2_477  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m2_877 -> m2_481  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m2_877 -> m2_484  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m2_877 -> m2_487  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m2_877 -> m2_490  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m2_877 -> m2_493  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m2_877 -> m2_496  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m2_877 -> m2_499  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m2_877 -> m2_502  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m2_877 -> m2_505  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m2_878 -> m2_705  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest.ClobberingJsonConverter", style=dashed];
m2_878 -> m2_706  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest.ClobberingJsonConverter", style=dashed];
m2_878 -> m2_711  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest.ClobberingJsonConverter", style=dashed];
m2_879 -> m2_728  [color=darkseagreen4, key=1, label=value, style=dashed];
m2_880 -> m2_731  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest.OverloadsJsonConverterer", style=dashed];
m2_880 -> m2_734  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest.OverloadsJsonConverterer", style=dashed];
m2_880 -> m2_738  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest.OverloadsJsonConverterer", style=dashed];
m2_880 -> m2_741  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest.OverloadsJsonConverterer", style=dashed];
m2_880 -> m2_744  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest.OverloadsJsonConverterer", style=dashed];
m2_880 -> m2_747  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest.OverloadsJsonConverterer", style=dashed];
m2_880 -> m2_750  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest.OverloadsJsonConverterer", style=dashed];
m2_880 -> m2_753  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest.OverloadsJsonConverterer", style=dashed];
m2_880 -> m2_756  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest.OverloadsJsonConverterer", style=dashed];
m2_880 -> m2_759  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest.OverloadsJsonConverterer", style=dashed];
m2_880 -> m2_762  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest.OverloadsJsonConverterer", style=dashed];
m2_880 -> m2_765  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest.OverloadsJsonConverterer", style=dashed];
m2_881 -> m2_858  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest.RoundingJsonConverter", style=dashed];
m2_881 -> m2_859  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest.RoundingJsonConverter", style=dashed];
m2_881 -> m2_868  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest.RoundingJsonConverter", style=dashed];
m3_16 -> m3_17  [key=0, style=solid];
m3_17 -> m3_18  [key=0, style=solid];
m3_17 -> m3_38  [key=2, style=dotted];
m3_17 -> m3_33  [color=darkseagreen4, key=1, label=specTests, style=dashed];
m3_17 -> m3_34  [color=darkseagreen4, key=1, label=specTests, style=dashed];
m3_17 -> m3_35  [color=darkseagreen4, key=1, label=specTests, style=dashed];
m3_18 -> m3_19  [key=0, style=solid];
m3_33 -> m3_34  [key=0, style=solid];
m3_34 -> m3_25  [key=0, style=solid];
m3_34 -> m3_45  [key=2, style=dotted];
m3_35 -> m3_36  [key=0, style=solid];
m3_35 -> m3_46  [key=2, style=dotted];
m3_35 -> m3_47  [key=2, style=dotted];
m3_35 -> m3_35  [color=darkseagreen4, key=1, label=specTests, style=dashed];
m3_35 -> m3_48  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_19 -> m3_20  [key=0, style=solid];
m3_19 -> m3_39  [key=2, style=dotted];
m3_20 -> m3_21  [key=0, style=solid];
m3_20 -> m3_40  [key=2, style=dotted];
m3_21 -> m3_22  [key=0, style=solid];
m3_21 -> m3_35  [key=0, style=solid];
m3_21 -> m3_27  [color=darkseagreen4, key=1, label=testFile, style=dashed];
m3_22 -> m3_23  [key=0, style=solid];
m3_22 -> m3_41  [key=2, style=dotted];
m3_27 -> m3_28  [key=0, style=solid];
m3_27 -> m3_44  [key=2, style=dotted];
m3_23 -> m3_24  [key=0, style=solid];
m3_23 -> m3_42  [key=2, style=dotted];
m3_24 -> m3_25  [key=0, style=solid];
m3_24 -> m3_21  [key=0, style=solid];
m3_24 -> m3_28  [color=darkseagreen4, key=1, label=testCase, style=dashed];
m3_24 -> m3_29  [color=darkseagreen4, key=1, label=testCase, style=dashed];
m3_25 -> m3_26  [key=0, style=solid];
m3_25 -> m3_24  [key=0, style=solid];
m3_25 -> m3_30  [color=darkseagreen4, key=1, label=test, style=dashed];
m3_25 -> m3_31  [color=darkseagreen4, key=1, label=test, style=dashed];
m3_25 -> m3_32  [color=darkseagreen4, key=1, label=test, style=dashed];
m3_28 -> m3_29  [key=0, style=solid];
m3_29 -> m3_30  [key=0, style=solid];
m3_26 -> m3_27  [key=0, style=solid];
m3_26 -> m3_43  [key=2, style=dotted];
m3_26 -> m3_28  [color=darkseagreen4, key=1, label=jsonSchemaSpecTest, style=dashed];
m3_26 -> m3_29  [color=darkseagreen4, key=1, label=jsonSchemaSpecTest, style=dashed];
m3_26 -> m3_30  [color=darkseagreen4, key=1, label=jsonSchemaSpecTest, style=dashed];
m3_26 -> m3_31  [color=darkseagreen4, key=1, label=jsonSchemaSpecTest, style=dashed];
m3_26 -> m3_32  [color=darkseagreen4, key=1, label=jsonSchemaSpecTest, style=dashed];
m3_26 -> m3_33  [color=darkseagreen4, key=1, label=jsonSchemaSpecTest, style=dashed];
m3_26 -> m3_34  [color=darkseagreen4, key=1, label=jsonSchemaSpecTest, style=dashed];
m3_30 -> m3_31  [key=0, style=solid];
m3_31 -> m3_32  [key=0, style=solid];
m3_32 -> m3_33  [key=0, style=solid];
m3_36 -> m3_37  [key=0, style=solid];
m3_37 -> m3_16  [color=blue, key=0, style=bold];
m3_3 -> m3_4  [key=0, style=solid];
m3_3 -> m3_6  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTest", style=dashed];
m3_3 -> m3_8  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTest", style=dashed];
m3_4 -> m3_5  [key=0, style=solid];
m3_4 -> m3_10  [key=2, style=dotted];
m3_4 -> m3_11  [key=2, style=dotted];
m3_4 -> m3_6  [color=darkseagreen4, key=1, label=s, style=dashed];
m3_6 -> m3_7  [key=0, style=solid];
m3_6 -> m3_12  [key=2, style=dotted];
m3_6 -> m3_8  [color=darkseagreen4, key=1, label=v, style=dashed];
m3_8 -> m3_9  [key=0, style=solid];
m3_8 -> m3_14  [key=2, style=dotted];
m3_8 -> m3_15  [key=2, style=dotted];
m3_5 -> m3_6  [key=0, style=solid];
m3_7 -> m3_8  [key=0, style=solid];
m3_7 -> m3_13  [key=2, style=dotted];
m3_9 -> m3_3  [color=blue, key=0, style=bold];
m3_48 -> m3_49  [key=0, style=solid];
m3_49 -> m3_50  [key=0, style=solid];
m3_50 -> m3_48  [color=blue, key=0, style=bold];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_2  [key=0, style=solid];
m3_2 -> m3_0  [color=blue, key=0, style=bold];
m3_51 -> m3_1  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTest", style=dashed];
m4_8 -> m4_9  [key=0, style=solid];
m4_8 -> m4_25  [key=2, style=dotted];
m4_9 -> m4_10  [key=0, style=solid];
m4_9 -> m4_25  [key=2, style=dotted];
m4_9 -> m4_26  [key=2, style=dotted];
m4_10 -> m4_8  [color=blue, key=0, style=bold];
m4_10 -> m4_25  [key=2, style=dotted];
m4_10 -> m4_11  [key=0, style=solid];
m4_11 -> m4_12  [key=0, style=solid];
m4_11 -> m4_14  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.JsonWriterException Create", style=bold];
m4_11 -> m4_25  [key=2, style=dotted];
m4_12 -> m4_13  [key=0, style=solid];
m4_12 -> m4_14  [key=2, style=dotted];
m4_12 -> m4_25  [key=2, style=dotted];
m4_12 -> m4_26  [key=2, style=dotted];
m4_13 -> m4_11  [color=blue, key=0, style=bold];
m4_13 -> m4_14  [color=green, key=0, style=solid];
m4_13 -> m4_25  [key=2, style=dotted];
m4_839 -> m4_840  [key=0, style=solid];
m4_840 -> m4_21  [key=2, style=dotted];
m4_840 -> m4_22  [key=2, style=dotted];
m4_840 -> m4_841  [key=0, style=solid];
m4_840 -> m4_844  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_841 -> m4_842  [key=0, style=solid];
m4_841 -> m4_172  [key=2, style=dotted];
m4_841 -> m4_843  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_842 -> m4_839  [color=blue, key=0, style=bold];
m4_1869 -> m4_1870  [key=0, style=solid];
m4_1874 -> m4_25  [key=2, style=dotted];
m4_1874 -> m4_1875  [key=0, style=solid];
m4_1870 -> m4_21  [key=2, style=dotted];
m4_1870 -> m4_22  [key=2, style=dotted];
m4_1870 -> m4_1871  [key=0, style=solid];
m4_1870 -> m4_1872  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1870 -> m4_1873  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1870 -> m4_1875  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1870 -> m4_1876  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1873 -> m4_26  [key=2, style=dotted];
m4_1873 -> m4_1874  [key=0, style=solid];
m4_1875 -> m4_23  [key=2, style=dotted];
m4_1875 -> m4_24  [key=2, style=dotted];
m4_1875 -> m4_1876  [key=0, style=solid];
m4_1871 -> m4_23  [key=2, style=dotted];
m4_1871 -> m4_24  [key=2, style=dotted];
m4_1871 -> m4_1872  [key=0, style=solid];
m4_1872 -> m4_23  [key=2, style=dotted];
m4_1872 -> m4_24  [key=2, style=dotted];
m4_1872 -> m4_1873  [key=0, style=solid];
m4_1876 -> m4_23  [key=2, style=dotted];
m4_1876 -> m4_1877  [key=0, style=solid];
m4_1876 -> m4_158  [key=2, style=dotted];
m4_1877 -> m4_1869  [color=blue, key=0, style=bold];
m4_215 -> m4_216  [key=0, style=solid];
m4_219 -> m4_25  [key=2, style=dotted];
m4_219 -> m4_220  [key=0, style=solid];
m4_221 -> m4_25  [key=2, style=dotted];
m4_221 -> m4_222  [key=0, style=solid];
m4_223 -> m4_25  [key=2, style=dotted];
m4_223 -> m4_224  [key=0, style=solid];
m4_224 -> m4_25  [key=2, style=dotted];
m4_224 -> m4_225  [key=0, style=solid];
m4_226 -> m4_25  [key=2, style=dotted];
m4_226 -> m4_227  [key=0, style=solid];
m4_217 -> m4_21  [key=2, style=dotted];
m4_217 -> m4_22  [key=2, style=dotted];
m4_217 -> m4_219  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_217 -> m4_221  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_217 -> m4_223  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_217 -> m4_224  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_217 -> m4_226  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_217 -> m4_218  [key=0, style=solid];
m4_217 -> m4_220  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_217 -> m4_222  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_217 -> m4_225  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_217 -> m4_227  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_218 -> m4_219  [key=0, style=solid];
m4_218 -> m4_23  [key=2, style=dotted];
m4_218 -> m4_24  [key=2, style=dotted];
m4_220 -> m4_221  [key=0, style=solid];
m4_220 -> m4_23  [key=2, style=dotted];
m4_220 -> m4_24  [key=2, style=dotted];
m4_222 -> m4_223  [key=0, style=solid];
m4_222 -> m4_23  [key=2, style=dotted];
m4_222 -> m4_24  [key=2, style=dotted];
m4_225 -> m4_226  [key=0, style=solid];
m4_225 -> m4_23  [key=2, style=dotted];
m4_225 -> m4_24  [key=2, style=dotted];
m4_227 -> m4_23  [key=2, style=dotted];
m4_227 -> m4_228  [key=0, style=solid];
m4_227 -> m4_158  [key=2, style=dotted];
m4_216 -> m4_217  [key=0, style=solid];
m4_228 -> m4_215  [color=blue, key=0, style=bold];
m4_1163 -> m4_1164  [key=0, style=solid];
m4_1168 -> m4_25  [key=2, style=dotted];
m4_1168 -> m4_1169  [key=0, style=solid];
m4_1170 -> m4_25  [key=2, style=dotted];
m4_1170 -> m4_1171  [key=0, style=solid];
m4_1171 -> m4_25  [key=2, style=dotted];
m4_1171 -> m4_1172  [key=0, style=solid];
m4_1173 -> m4_25  [key=2, style=dotted];
m4_1173 -> m4_1174  [key=0, style=solid];
m4_1174 -> m4_25  [key=2, style=dotted];
m4_1174 -> m4_1175  [key=0, style=solid];
m4_1176 -> m4_25  [key=2, style=dotted];
m4_1176 -> m4_1177  [key=0, style=solid];
m4_1177 -> m4_25  [key=2, style=dotted];
m4_1177 -> m4_1178  [key=0, style=solid];
m4_1179 -> m4_25  [key=2, style=dotted];
m4_1179 -> m4_1180  [key=0, style=solid];
m4_1166 -> m4_21  [key=2, style=dotted];
m4_1166 -> m4_1168  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1166 -> m4_1170  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1166 -> m4_1171  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1166 -> m4_1173  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1166 -> m4_1174  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1166 -> m4_1176  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1166 -> m4_1177  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1166 -> m4_1179  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1166 -> m4_1167  [key=0, style=solid];
m4_1166 -> m4_1169  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1166 -> m4_1172  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1166 -> m4_1175  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1166 -> m4_1178  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1165 -> m4_22  [key=2, style=dotted];
m4_1165 -> m4_1166  [key=0, style=solid];
m4_1167 -> m4_1168  [key=0, style=solid];
m4_1167 -> m4_378  [key=2, style=dotted];
m4_1169 -> m4_1170  [key=0, style=solid];
m4_1169 -> m4_378  [key=2, style=dotted];
m4_1172 -> m4_1173  [key=0, style=solid];
m4_1172 -> m4_378  [key=2, style=dotted];
m4_1175 -> m4_1176  [key=0, style=solid];
m4_1175 -> m4_378  [key=2, style=dotted];
m4_1178 -> m4_1179  [key=0, style=solid];
m4_1178 -> m4_378  [key=2, style=dotted];
m4_1164 -> m4_1165  [key=0, style=solid];
m4_1180 -> m4_1163  [color=blue, key=0, style=bold];
m4_674 -> m4_675  [key=0, style=solid];
m4_675 -> m4_21  [key=2, style=dotted];
m4_675 -> m4_22  [key=2, style=dotted];
m4_675 -> m4_676  [key=0, style=solid];
m4_675 -> m4_679  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_676 -> m4_677  [key=0, style=solid];
m4_676 -> m4_172  [key=2, style=dotted];
m4_676 -> m4_678  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_677 -> m4_674  [color=blue, key=0, style=bold];
m4_1543 -> m4_1544  [key=0, style=solid];
m4_1547 -> m4_25  [key=2, style=dotted];
m4_1547 -> m4_1548  [key=0, style=solid];
m4_1549 -> m4_25  [key=2, style=dotted];
m4_1549 -> m4_1550  [key=0, style=solid];
m4_1551 -> m4_25  [key=2, style=dotted];
m4_1551 -> m4_1552  [key=0, style=solid];
m4_1552 -> m4_25  [key=2, style=dotted];
m4_1552 -> m4_1552  [color=darkorchid, key=3, label="Local variable string s", style=bold];
m4_1552 -> m4_1553  [key=0, style=solid];
m4_1553 -> m4_25  [key=2, style=dotted];
m4_1553 -> m4_1554  [key=0, style=solid];
m4_1553 -> m4_1484  [key=2, style=dotted];
m4_1553 -> m4_1557  [key=2, style=dotted];
m4_1555 -> m4_25  [key=2, style=dotted];
m4_1555 -> m4_1556  [key=0, style=solid];
m4_1545 -> m4_21  [key=2, style=dotted];
m4_1545 -> m4_22  [key=2, style=dotted];
m4_1545 -> m4_1547  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1545 -> m4_1549  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1545 -> m4_1551  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1545 -> m4_1552  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1545 -> m4_1553  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1545 -> m4_1555  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1545 -> m4_1546  [key=0, style=solid];
m4_1545 -> m4_1548  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1545 -> m4_1550  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1545 -> m4_1554  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1546 -> m4_1547  [key=0, style=solid];
m4_1546 -> m4_23  [key=2, style=dotted];
m4_1546 -> m4_24  [key=2, style=dotted];
m4_1548 -> m4_1549  [key=0, style=solid];
m4_1548 -> m4_23  [key=2, style=dotted];
m4_1548 -> m4_24  [key=2, style=dotted];
m4_1550 -> m4_1551  [key=0, style=solid];
m4_1550 -> m4_1386  [key=2, style=dotted];
m4_1554 -> m4_1555  [key=0, style=solid];
m4_1554 -> m4_23  [key=2, style=dotted];
m4_1554 -> m4_24  [key=2, style=dotted];
m4_1544 -> m4_1545  [key=0, style=solid];
m4_1556 -> m4_1543  [color=blue, key=0, style=bold];
m4_880 -> m4_881  [key=0, style=solid];
m4_892 -> m4_25  [key=2, style=dotted];
m4_892 -> m4_893  [key=0, style=solid];
m4_907 -> m4_25  [key=2, style=dotted];
m4_907 -> m4_908  [key=0, style=solid];
m4_889 -> m4_25  [key=2, style=dotted];
m4_889 -> m4_890  [key=0, style=solid];
m4_891 -> m4_25  [key=2, style=dotted];
m4_891 -> m4_892  [key=0, style=solid];
m4_894 -> m4_25  [key=2, style=dotted];
m4_894 -> m4_895  [key=0, style=solid];
m4_896 -> m4_25  [key=2, style=dotted];
m4_896 -> m4_897  [key=0, style=solid];
m4_897 -> m4_25  [key=2, style=dotted];
m4_897 -> m4_898  [key=0, style=solid];
m4_898 -> m4_25  [key=2, style=dotted];
m4_898 -> m4_899  [key=0, style=solid];
m4_900 -> m4_25  [key=2, style=dotted];
m4_900 -> m4_901  [key=0, style=solid];
m4_901 -> m4_25  [key=2, style=dotted];
m4_901 -> m4_902  [key=0, style=solid];
m4_903 -> m4_25  [key=2, style=dotted];
m4_903 -> m4_904  [key=0, style=solid];
m4_904 -> m4_25  [key=2, style=dotted];
m4_904 -> m4_905  [key=0, style=solid];
m4_906 -> m4_25  [key=2, style=dotted];
m4_906 -> m4_907  [key=0, style=solid];
m4_909 -> m4_25  [key=2, style=dotted];
m4_909 -> m4_910  [key=0, style=solid];
m4_911 -> m4_25  [key=2, style=dotted];
m4_911 -> m4_912  [key=0, style=solid];
m4_913 -> m4_25  [key=2, style=dotted];
m4_913 -> m4_914  [key=0, style=solid];
m4_915 -> m4_25  [key=2, style=dotted];
m4_915 -> m4_916  [key=0, style=solid];
m4_916 -> m4_25  [key=2, style=dotted];
m4_916 -> m4_917  [key=0, style=solid];
m4_918 -> m4_25  [key=2, style=dotted];
m4_918 -> m4_919  [key=0, style=solid];
m4_920 -> m4_25  [key=2, style=dotted];
m4_920 -> m4_921  [key=0, style=solid];
m4_922 -> m4_25  [key=2, style=dotted];
m4_922 -> m4_923  [key=0, style=solid];
m4_887 -> m4_21  [key=2, style=dotted];
m4_887 -> m4_892  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_887 -> m4_907  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_887 -> m4_889  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_887 -> m4_891  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_887 -> m4_894  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_887 -> m4_896  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_887 -> m4_897  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_887 -> m4_898  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_887 -> m4_900  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_887 -> m4_901  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_887 -> m4_903  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_887 -> m4_904  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_887 -> m4_906  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_887 -> m4_909  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_887 -> m4_911  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_887 -> m4_913  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_887 -> m4_915  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_887 -> m4_916  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_887 -> m4_918  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_887 -> m4_920  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_887 -> m4_922  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_887 -> m4_888  [key=0, style=solid];
m4_887 -> m4_358  [key=2, style=dotted];
m4_887 -> m4_396  [key=2, style=dotted];
m4_887 -> m4_397  [key=2, style=dotted];
m4_887 -> m4_890  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_887 -> m4_893  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_887 -> m4_895  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_887 -> m4_899  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_887 -> m4_902  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_887 -> m4_905  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_887 -> m4_908  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_887 -> m4_910  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_887 -> m4_912  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_887 -> m4_914  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_887 -> m4_917  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_887 -> m4_919  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_887 -> m4_921  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_884 -> m4_22  [key=2, style=dotted];
m4_884 -> m4_885  [key=0, style=solid];
m4_881 -> m4_892  [color=darkseagreen4, key=1, label=newLinesText, style=dashed];
m4_881 -> m4_907  [color=darkseagreen4, key=1, label=newLinesText, style=dashed];
m4_881 -> m4_884  [color=darkseagreen4, key=1, label=newLinesText, style=dashed];
m4_881 -> m4_882  [key=0, style=solid];
m4_893 -> m4_894  [key=0, style=solid];
m4_893 -> m4_23  [key=2, style=dotted];
m4_893 -> m4_24  [key=2, style=dotted];
m4_908 -> m4_909  [key=0, style=solid];
m4_908 -> m4_23  [key=2, style=dotted];
m4_908 -> m4_24  [key=2, style=dotted];
m4_888 -> m4_889  [key=0, style=solid];
m4_888 -> m4_23  [key=2, style=dotted];
m4_888 -> m4_24  [key=2, style=dotted];
m4_890 -> m4_891  [key=0, style=solid];
m4_890 -> m4_23  [key=2, style=dotted];
m4_890 -> m4_24  [key=2, style=dotted];
m4_895 -> m4_896  [key=0, style=solid];
m4_895 -> m4_23  [key=2, style=dotted];
m4_895 -> m4_24  [key=2, style=dotted];
m4_899 -> m4_900  [key=0, style=solid];
m4_899 -> m4_23  [key=2, style=dotted];
m4_899 -> m4_24  [key=2, style=dotted];
m4_902 -> m4_903  [key=0, style=solid];
m4_902 -> m4_23  [key=2, style=dotted];
m4_902 -> m4_24  [key=2, style=dotted];
m4_905 -> m4_906  [key=0, style=solid];
m4_905 -> m4_23  [key=2, style=dotted];
m4_905 -> m4_24  [key=2, style=dotted];
m4_910 -> m4_911  [key=0, style=solid];
m4_910 -> m4_23  [key=2, style=dotted];
m4_910 -> m4_24  [key=2, style=dotted];
m4_912 -> m4_913  [key=0, style=solid];
m4_912 -> m4_23  [key=2, style=dotted];
m4_912 -> m4_24  [key=2, style=dotted];
m4_914 -> m4_915  [key=0, style=solid];
m4_914 -> m4_23  [key=2, style=dotted];
m4_914 -> m4_24  [key=2, style=dotted];
m4_917 -> m4_918  [key=0, style=solid];
m4_917 -> m4_23  [key=2, style=dotted];
m4_917 -> m4_24  [key=2, style=dotted];
m4_919 -> m4_920  [key=0, style=solid];
m4_919 -> m4_23  [key=2, style=dotted];
m4_919 -> m4_24  [key=2, style=dotted];
m4_921 -> m4_922  [key=0, style=solid];
m4_921 -> m4_23  [key=2, style=dotted];
m4_921 -> m4_24  [key=2, style=dotted];
m4_882 -> m4_887  [color=darkseagreen4, key=1, label=json, style=dashed];
m4_882 -> m4_883  [key=0, style=solid];
m4_885 -> m4_887  [key=0, style=solid];
m4_885 -> m4_886  [key=0, style=solid];
m4_885 -> m4_924  [key=2, style=dotted];
m4_883 -> m4_884  [key=0, style=solid];
m4_883 -> m4_886  [color=darkseagreen4, key=1, label=count, style=dashed];
m4_886 -> m4_885  [key=0, style=solid];
m4_886 -> m4_886  [color=darkseagreen4, key=1, label=count, style=dashed];
m4_923 -> m4_880  [color=blue, key=0, style=bold];
m4_14 -> m4_15  [color=green, key=0, style=solid];
m4_14 -> m4_16  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_14 -> m4_11  [color=darkorchid, key=3, label="Parameter variable System.Exception ex", style=bold];
m4_14 -> m4_25  [color=green, key=2, style=dotted];
m4_15 -> m4_16  [key=0, style=solid];
m4_15 -> m4_18  [key=2, style=dotted];
m4_15 -> m4_15  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_15 -> m4_26  [key=2, style=dotted];
m4_15 -> m4_25  [key=2, style=dotted];
m4_16 -> m4_17  [key=0, style=solid];
m4_16 -> m4_8  [key=2, style=dotted];
m4_16 -> m4_25  [key=2, style=dotted];
m4_17 -> m4_14  [color=blue, key=0, style=bold];
m4_17 -> m4_25  [key=2, style=dotted];
m4_17 -> m4_18  [key=0, style=solid];
m4_2790 -> m4_2791  [key=0, style=solid];
m4_2794 -> m4_25  [key=2, style=dotted];
m4_2794 -> m4_2795  [key=0, style=solid];
m4_2793 -> m4_2794  [key=0, style=solid];
m4_2793 -> m4_2798  [key=2, style=dotted];
m4_2792 -> m4_2793  [key=0, style=solid];
m4_2792 -> m4_2797  [key=2, style=dotted];
m4_2791 -> m4_2792  [key=0, style=solid];
m4_2791 -> m4_2796  [key=2, style=dotted];
m4_2795 -> m4_2790  [color=blue, key=0, style=bold];
m4_1902 -> m4_1903  [key=0, style=solid];
m4_1904 -> m4_21  [key=2, style=dotted];
m4_1904 -> m4_22  [key=2, style=dotted];
m4_1904 -> m4_1905  [key=0, style=solid];
m4_1904 -> m4_1909  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1903 -> m4_1904  [key=0, style=solid];
m4_1905 -> m4_1906  [key=0, style=solid];
m4_1905 -> m4_1907  [key=2, style=dotted];
m4_1905 -> m4_1908  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1906 -> m4_1902  [color=blue, key=0, style=bold];
m4_2423 -> m4_2424  [key=0, style=solid];
m4_2425 -> m4_21  [key=2, style=dotted];
m4_2425 -> m4_22  [key=2, style=dotted];
m4_2425 -> m4_2426  [key=0, style=solid];
m4_2425 -> m4_2429  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2424 -> m4_2425  [key=0, style=solid];
m4_2424 -> m4_2424  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m4_2426 -> m4_2427  [key=0, style=solid];
m4_2426 -> m4_172  [key=2, style=dotted];
m4_2426 -> m4_2428  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_2427 -> m4_2423  [color=blue, key=0, style=bold];
m4_135 -> m4_136  [key=0, style=solid];
m4_139 -> m4_25  [key=2, style=dotted];
m4_139 -> m4_140  [key=0, style=solid];
m4_141 -> m4_25  [key=2, style=dotted];
m4_141 -> m4_142  [key=0, style=solid];
m4_143 -> m4_25  [key=2, style=dotted];
m4_143 -> m4_144  [key=0, style=solid];
m4_145 -> m4_25  [key=2, style=dotted];
m4_145 -> m4_146  [key=0, style=solid];
m4_147 -> m4_25  [key=2, style=dotted];
m4_147 -> m4_148  [key=0, style=solid];
m4_148 -> m4_25  [key=2, style=dotted];
m4_148 -> m4_149  [key=0, style=solid];
m4_149 -> m4_25  [key=2, style=dotted];
m4_149 -> m4_150  [key=0, style=solid];
m4_149 -> m4_157  [key=2, style=dotted];
m4_151 -> m4_25  [key=2, style=dotted];
m4_151 -> m4_152  [key=0, style=solid];
m4_155 -> m4_25  [key=2, style=dotted];
m4_155 -> m4_156  [key=0, style=solid];
m4_155 -> m4_157  [key=2, style=dotted];
m4_137 -> m4_21  [key=2, style=dotted];
m4_137 -> m4_22  [key=2, style=dotted];
m4_137 -> m4_139  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_137 -> m4_141  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_137 -> m4_143  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_137 -> m4_145  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_137 -> m4_147  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_137 -> m4_148  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_137 -> m4_149  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_137 -> m4_151  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_137 -> m4_138  [key=0, style=solid];
m4_137 -> m4_140  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_137 -> m4_142  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_137 -> m4_144  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_137 -> m4_146  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_137 -> m4_150  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_137 -> m4_152  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_138 -> m4_139  [key=0, style=solid];
m4_138 -> m4_23  [key=2, style=dotted];
m4_138 -> m4_24  [key=2, style=dotted];
m4_140 -> m4_141  [key=0, style=solid];
m4_140 -> m4_23  [key=2, style=dotted];
m4_140 -> m4_24  [key=2, style=dotted];
m4_142 -> m4_143  [key=0, style=solid];
m4_142 -> m4_23  [key=2, style=dotted];
m4_142 -> m4_24  [key=2, style=dotted];
m4_144 -> m4_145  [key=0, style=solid];
m4_144 -> m4_23  [key=2, style=dotted];
m4_144 -> m4_24  [key=2, style=dotted];
m4_146 -> m4_147  [key=0, style=solid];
m4_146 -> m4_23  [key=2, style=dotted];
m4_146 -> m4_24  [key=2, style=dotted];
m4_150 -> m4_151  [key=0, style=solid];
m4_150 -> m4_23  [key=2, style=dotted];
m4_150 -> m4_24  [key=2, style=dotted];
m4_152 -> m4_23  [key=2, style=dotted];
m4_152 -> m4_153  [key=0, style=solid];
m4_152 -> m4_158  [key=2, style=dotted];
m4_154 -> m4_155  [key=0, style=solid];
m4_136 -> m4_137  [key=0, style=solid];
m4_136 -> m4_153  [color=darkseagreen4, key=1, label=json, style=dashed];
m4_153 -> m4_154  [key=0, style=solid];
m4_153 -> m4_159  [key=2, style=dotted];
m4_156 -> m4_135  [color=blue, key=0, style=bold];
m4_1591 -> m4_1592  [key=0, style=solid];
m4_1595 -> m4_25  [key=2, style=dotted];
m4_1595 -> m4_1596  [key=0, style=solid];
m4_1597 -> m4_25  [key=2, style=dotted];
m4_1597 -> m4_1598  [key=0, style=solid];
m4_1599 -> m4_25  [key=2, style=dotted];
m4_1599 -> m4_1600  [key=0, style=solid];
m4_1600 -> m4_25  [key=2, style=dotted];
m4_1600 -> m4_1601  [key=0, style=solid];
m4_1601 -> m4_25  [key=2, style=dotted];
m4_1601 -> m4_1602  [key=0, style=solid];
m4_1593 -> m4_21  [key=2, style=dotted];
m4_1593 -> m4_22  [key=2, style=dotted];
m4_1593 -> m4_1595  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1593 -> m4_1597  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1593 -> m4_1599  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1593 -> m4_1600  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1593 -> m4_1601  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1593 -> m4_1594  [key=0, style=solid];
m4_1593 -> m4_1596  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1593 -> m4_1598  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1594 -> m4_1595  [key=0, style=solid];
m4_1594 -> m4_23  [key=2, style=dotted];
m4_1594 -> m4_24  [key=2, style=dotted];
m4_1596 -> m4_1597  [key=0, style=solid];
m4_1596 -> m4_23  [key=2, style=dotted];
m4_1596 -> m4_24  [key=2, style=dotted];
m4_1598 -> m4_1599  [key=0, style=solid];
m4_1598 -> m4_244  [key=2, style=dotted];
m4_1592 -> m4_1593  [key=0, style=solid];
m4_1592 -> m4_1592  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m4_1602 -> m4_1591  [color=blue, key=0, style=bold];
m4_373 -> m4_374  [key=0, style=solid];
m4_375 -> m4_21  [key=2, style=dotted];
m4_375 -> m4_22  [key=2, style=dotted];
m4_375 -> m4_376  [key=0, style=solid];
m4_374 -> m4_375  [key=0, style=solid];
m4_376 -> m4_376  [key=0, style=solid];
m4_376 -> m4_377  [key=0, style=solid];
m4_376 -> m4_378  [key=2, style=dotted];
m4_377 -> m4_373  [color=blue, key=0, style=bold];
m4_2361 -> m4_2362  [key=0, style=solid];
m4_2364 -> m4_25  [key=2, style=dotted];
m4_2364 -> m4_2365  [key=0, style=solid];
m4_2364 -> m4_1392  [key=2, style=dotted];
m4_2365 -> m4_25  [key=2, style=dotted];
m4_2365 -> m4_2366  [key=0, style=solid];
m4_2365 -> m4_1392  [key=2, style=dotted];
m4_2363 -> m4_21  [key=2, style=dotted];
m4_2363 -> m4_22  [key=2, style=dotted];
m4_2363 -> m4_2364  [key=0, style=solid];
m4_2363 -> m4_2365  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2362 -> m4_2363  [key=0, style=solid];
m4_2366 -> m4_2361  [color=blue, key=0, style=bold];
m4_2501 -> m4_2502  [key=0, style=solid];
m4_2503 -> m4_21  [key=2, style=dotted];
m4_2503 -> m4_22  [key=2, style=dotted];
m4_2503 -> m4_2504  [key=0, style=solid];
m4_2503 -> m4_2505  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2503 -> m4_2508  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2502 -> m4_2503  [key=0, style=solid];
m4_2504 -> m4_23  [key=2, style=dotted];
m4_2504 -> m4_24  [key=2, style=dotted];
m4_2504 -> m4_2505  [key=0, style=solid];
m4_2505 -> m4_2506  [key=0, style=solid];
m4_2505 -> m4_1907  [key=2, style=dotted];
m4_2505 -> m4_2507  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_2506 -> m4_2501  [color=blue, key=0, style=bold];
m4_1435 -> m4_1436  [key=0, style=solid];
m4_1436 -> m4_21  [key=2, style=dotted];
m4_1436 -> m4_22  [key=2, style=dotted];
m4_1436 -> m4_1437  [key=0, style=solid];
m4_1436 -> m4_1440  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1437 -> m4_1438  [key=0, style=solid];
m4_1437 -> m4_172  [key=2, style=dotted];
m4_1437 -> m4_1439  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1438 -> m4_1435  [color=blue, key=0, style=bold];
m4_2641 -> m4_2642  [key=0, style=solid];
m4_2650 -> m4_25  [key=2, style=dotted];
m4_2650 -> m4_2651  [key=0, style=solid];
m4_2650 -> m4_257  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m4_2655 -> m4_25  [key=2, style=dotted];
m4_2655 -> m4_2656  [key=0, style=solid];
m4_2643 -> m4_21  [key=2, style=dotted];
m4_2643 -> m4_2650  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_2643 -> m4_2655  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_2643 -> m4_2644  [key=0, style=solid];
m4_2643 -> m4_2646  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_2643 -> m4_2664  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_2643 -> m4_2647  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_2643 -> m4_2667  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_2643 -> m4_2649  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_2643 -> m4_2652  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_2643 -> m4_2670  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_2643 -> m4_2654  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_2643 -> m4_2657  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_2643 -> m4_2673  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_2643 -> m4_2658  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_2643 -> m4_2676  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_2643 -> m4_2659  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_2643 -> m4_2679  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_2642 -> m4_22  [key=2, style=dotted];
m4_2642 -> m4_2643  [key=0, style=solid];
m4_2642 -> m4_2662  [key=2, style=dotted];
m4_2642 -> m4_2645  [color=darkseagreen4, key=1, label=toggleReaderError, style=dashed];
m4_2642 -> m4_2648  [color=darkseagreen4, key=1, label=toggleReaderError, style=dashed];
m4_2642 -> m4_2651  [color=darkseagreen4, key=1, label=toggleReaderError, style=dashed];
m4_2642 -> m4_2653  [color=darkseagreen4, key=1, label=toggleReaderError, style=dashed];
m4_2642 -> m4_2656  [color=darkseagreen4, key=1, label=toggleReaderError, style=dashed];
m4_2642 -> m4_2660  [color=darkseagreen4, key=1, label=toggleReaderError, style=dashed];
m4_2645 -> m4_2567  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m4_2645 -> m4_2646  [key=0, style=solid];
m4_2649 -> m4_2650  [key=0, style=solid];
m4_2649 -> m4_23  [key=2, style=dotted];
m4_2649 -> m4_24  [key=2, style=dotted];
m4_2651 -> m4_2652  [key=0, style=solid];
m4_2654 -> m4_2655  [key=0, style=solid];
m4_2654 -> m4_23  [key=2, style=dotted];
m4_2654 -> m4_24  [key=2, style=dotted];
m4_2654 -> m4_2654  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m4_2656 -> m4_2657  [key=0, style=solid];
m4_2644 -> m4_23  [key=2, style=dotted];
m4_2644 -> m4_24  [key=2, style=dotted];
m4_2644 -> m4_2645  [key=0, style=solid];
m4_2646 -> m4_2647  [key=0, style=solid];
m4_2646 -> m4_172  [key=2, style=dotted];
m4_2646 -> m4_2663  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_2647 -> m4_2648  [key=0, style=solid];
m4_2647 -> m4_172  [key=2, style=dotted];
m4_2647 -> m4_2666  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_2652 -> m4_2653  [key=0, style=solid];
m4_2652 -> m4_172  [key=2, style=dotted];
m4_2652 -> m4_2669  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_2657 -> m4_2658  [key=0, style=solid];
m4_2657 -> m4_172  [key=2, style=dotted];
m4_2657 -> m4_2672  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_2658 -> m4_2659  [key=0, style=solid];
m4_2658 -> m4_172  [key=2, style=dotted];
m4_2658 -> m4_2675  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_2659 -> m4_2660  [key=0, style=solid];
m4_2659 -> m4_172  [key=2, style=dotted];
m4_2659 -> m4_2678  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_2648 -> m4_2649  [key=0, style=solid];
m4_2653 -> m4_2654  [key=0, style=solid];
m4_2660 -> m4_2661  [key=0, style=solid];
m4_2661 -> m4_2641  [color=blue, key=0, style=bold];
m4_2353 -> m4_2354  [key=0, style=solid];
m4_2355 -> m4_21  [key=2, style=dotted];
m4_2355 -> m4_22  [key=2, style=dotted];
m4_2355 -> m4_2356  [key=0, style=solid];
m4_2355 -> m4_2359  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2354 -> m4_2355  [key=0, style=solid];
m4_2356 -> m4_2357  [key=0, style=solid];
m4_2356 -> m4_172  [key=2, style=dotted];
m4_2356 -> m4_2358  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_2357 -> m4_2353  [color=blue, key=0, style=bold];
m4_1335 -> m4_1336  [key=0, style=solid];
m4_1339 -> m4_25  [key=2, style=dotted];
m4_1339 -> m4_1340  [key=0, style=solid];
m4_1341 -> m4_25  [key=2, style=dotted];
m4_1341 -> m4_1342  [key=0, style=solid];
m4_1342 -> m4_25  [key=2, style=dotted];
m4_1342 -> m4_1343  [key=0, style=solid];
m4_1343 -> m4_25  [key=2, style=dotted];
m4_1343 -> m4_1344  [key=0, style=solid];
m4_1345 -> m4_25  [key=2, style=dotted];
m4_1345 -> m4_1346  [key=0, style=solid];
m4_1346 -> m4_25  [key=2, style=dotted];
m4_1346 -> m4_1347  [key=0, style=solid];
m4_1347 -> m4_25  [key=2, style=dotted];
m4_1347 -> m4_1348  [key=0, style=solid];
m4_1349 -> m4_25  [key=2, style=dotted];
m4_1349 -> m4_1350  [key=0, style=solid];
m4_1350 -> m4_25  [key=2, style=dotted];
m4_1350 -> m4_1351  [key=0, style=solid];
m4_1351 -> m4_25  [key=2, style=dotted];
m4_1351 -> m4_1352  [key=0, style=solid];
m4_1353 -> m4_25  [key=2, style=dotted];
m4_1353 -> m4_1354  [key=0, style=solid];
m4_1337 -> m4_21  [key=2, style=dotted];
m4_1337 -> m4_1339  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1337 -> m4_1341  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1337 -> m4_1342  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1337 -> m4_1343  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1337 -> m4_1345  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1337 -> m4_1346  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1337 -> m4_1347  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1337 -> m4_1349  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1337 -> m4_1350  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1337 -> m4_1351  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1337 -> m4_1353  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1337 -> m4_1338  [key=0, style=solid];
m4_1337 -> m4_1340  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1337 -> m4_1344  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1337 -> m4_1348  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1337 -> m4_1352  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1337 -> m4_1354  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1336 -> m4_22  [key=2, style=dotted];
m4_1336 -> m4_1337  [key=0, style=solid];
m4_1338 -> m4_1339  [key=0, style=solid];
m4_1338 -> m4_23  [key=2, style=dotted];
m4_1338 -> m4_24  [key=2, style=dotted];
m4_1340 -> m4_1341  [key=0, style=solid];
m4_1340 -> m4_176  [key=2, style=dotted];
m4_1344 -> m4_1345  [key=0, style=solid];
m4_1344 -> m4_176  [key=2, style=dotted];
m4_1348 -> m4_1349  [key=0, style=solid];
m4_1348 -> m4_176  [key=2, style=dotted];
m4_1352 -> m4_1353  [key=0, style=solid];
m4_1352 -> m4_23  [key=2, style=dotted];
m4_1352 -> m4_24  [key=2, style=dotted];
m4_1354 -> m4_23  [key=2, style=dotted];
m4_1354 -> m4_1355  [key=0, style=solid];
m4_1354 -> m4_158  [key=2, style=dotted];
m4_1355 -> m4_1335  [color=blue, key=0, style=bold];
m4_832 -> m4_833  [key=0, style=solid];
m4_833 -> m4_21  [key=2, style=dotted];
m4_833 -> m4_22  [key=2, style=dotted];
m4_833 -> m4_834  [key=0, style=solid];
m4_833 -> m4_837  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_834 -> m4_835  [key=0, style=solid];
m4_834 -> m4_172  [key=2, style=dotted];
m4_834 -> m4_836  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_835 -> m4_832  [color=blue, key=0, style=bold];
m4_1911 -> m4_1912  [key=0, style=solid];
m4_1915 -> m4_25  [key=2, style=dotted];
m4_1915 -> m4_1916  [key=0, style=solid];
m4_1917 -> m4_25  [key=2, style=dotted];
m4_1917 -> m4_1918  [key=0, style=solid];
m4_1919 -> m4_25  [key=2, style=dotted];
m4_1919 -> m4_1920  [key=0, style=solid];
m4_1921 -> m4_25  [key=2, style=dotted];
m4_1921 -> m4_1922  [key=0, style=solid];
m4_1923 -> m4_25  [key=2, style=dotted];
m4_1923 -> m4_1924  [key=0, style=solid];
m4_1925 -> m4_25  [key=2, style=dotted];
m4_1925 -> m4_1926  [key=0, style=solid];
m4_1927 -> m4_25  [key=2, style=dotted];
m4_1927 -> m4_1928  [key=0, style=solid];
m4_1929 -> m4_25  [key=2, style=dotted];
m4_1929 -> m4_1930  [key=0, style=solid];
m4_1931 -> m4_25  [key=2, style=dotted];
m4_1931 -> m4_1932  [key=0, style=solid];
m4_1913 -> m4_21  [key=2, style=dotted];
m4_1913 -> m4_1915  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1913 -> m4_1917  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1913 -> m4_1919  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1913 -> m4_1921  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1913 -> m4_1923  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1913 -> m4_1925  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1913 -> m4_1927  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1913 -> m4_1929  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1913 -> m4_1931  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1913 -> m4_1914  [key=0, style=solid];
m4_1913 -> m4_358  [key=2, style=dotted];
m4_1913 -> m4_396  [key=2, style=dotted];
m4_1913 -> m4_397  [key=2, style=dotted];
m4_1913 -> m4_1916  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1913 -> m4_1918  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1913 -> m4_1920  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1913 -> m4_1922  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1913 -> m4_1924  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1913 -> m4_1926  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1913 -> m4_1928  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1913 -> m4_1930  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1913 -> m4_1932  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1914 -> m4_1915  [key=0, style=solid];
m4_1914 -> m4_23  [key=2, style=dotted];
m4_1914 -> m4_24  [key=2, style=dotted];
m4_1916 -> m4_1917  [key=0, style=solid];
m4_1916 -> m4_23  [key=2, style=dotted];
m4_1916 -> m4_24  [key=2, style=dotted];
m4_1918 -> m4_1919  [key=0, style=solid];
m4_1918 -> m4_23  [key=2, style=dotted];
m4_1918 -> m4_24  [key=2, style=dotted];
m4_1920 -> m4_1921  [key=0, style=solid];
m4_1920 -> m4_23  [key=2, style=dotted];
m4_1920 -> m4_24  [key=2, style=dotted];
m4_1922 -> m4_1923  [key=0, style=solid];
m4_1922 -> m4_23  [key=2, style=dotted];
m4_1922 -> m4_24  [key=2, style=dotted];
m4_1924 -> m4_1925  [key=0, style=solid];
m4_1924 -> m4_23  [key=2, style=dotted];
m4_1924 -> m4_24  [key=2, style=dotted];
m4_1926 -> m4_1927  [key=0, style=solid];
m4_1926 -> m4_23  [key=2, style=dotted];
m4_1926 -> m4_24  [key=2, style=dotted];
m4_1928 -> m4_1929  [key=0, style=solid];
m4_1928 -> m4_23  [key=2, style=dotted];
m4_1928 -> m4_24  [key=2, style=dotted];
m4_1930 -> m4_1931  [key=0, style=solid];
m4_1930 -> m4_23  [key=2, style=dotted];
m4_1930 -> m4_24  [key=2, style=dotted];
m4_1932 -> m4_23  [key=2, style=dotted];
m4_1932 -> m4_1933  [key=0, style=solid];
m4_1932 -> m4_158  [key=2, style=dotted];
m4_1912 -> m4_1913  [key=0, style=solid];
m4_1933 -> m4_1911  [color=blue, key=0, style=bold];
m4_2662 -> m4_2835  [key=0, style=solid];
m4_2835 -> m4_2836  [key=0, style=solid];
m4_2836 -> m4_2662  [color=blue, key=0, style=bold];
m4_1987 -> m4_1988  [key=0, style=solid];
m4_1988 -> m4_21  [key=2, style=dotted];
m4_1988 -> m4_22  [key=2, style=dotted];
m4_1988 -> m4_1989  [key=0, style=solid];
m4_1988 -> m4_1990  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1988 -> m4_1991  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1988 -> m4_1996  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1988 -> m4_1992  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1988 -> m4_1993  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1989 -> m4_23  [key=2, style=dotted];
m4_1989 -> m4_1990  [key=0, style=solid];
m4_1990 -> m4_1991  [key=0, style=solid];
m4_1990 -> m4_116  [key=2, style=dotted];
m4_1990 -> m4_953  [key=2, style=dotted];
m4_1991 -> m4_1992  [key=0, style=solid];
m4_1991 -> m4_172  [key=2, style=dotted];
m4_1991 -> m4_1995  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1992 -> m4_1993  [key=0, style=solid];
m4_1992 -> m4_116  [key=2, style=dotted];
m4_1992 -> m4_953  [key=2, style=dotted];
m4_1993 -> m4_23  [key=2, style=dotted];
m4_1993 -> m4_24  [key=2, style=dotted];
m4_1993 -> m4_1994  [key=0, style=solid];
m4_1994 -> m4_1987  [color=blue, key=0, style=bold];
m4_2739 -> m4_2740  [key=0, style=solid];
m4_2753 -> m4_21  [key=2, style=dotted];
m4_2753 -> m4_2754  [key=0, style=solid];
m4_2753 -> m4_2758  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_2752 -> m4_2753  [key=0, style=solid];
m4_2752 -> m4_2768  [key=2, style=dotted];
m4_2752 -> m4_2769  [key=2, style=dotted];
m4_2754 -> m4_23  [key=2, style=dotted];
m4_2754 -> m4_2755  [key=0, style=solid];
m4_2754 -> m4_2759  [key=0, style=solid];
m4_2758 -> m4_2754  [key=0, style=solid];
m4_2758 -> m4_808  [key=2, style=dotted];
m4_2749 -> m4_2752  [color=darkseagreen4, key=1, label=stream, style=dashed];
m4_2749 -> m4_2750  [key=0, style=solid];
m4_2749 -> m4_2767  [key=2, style=dotted];
m4_2751 -> m4_2752  [key=0, style=solid];
m4_2751 -> m4_2755  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_2755 -> m4_2758  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_2755 -> m4_2755  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_2755 -> m4_2756  [key=0, style=solid];
m4_2759 -> m4_2760  [key=0, style=solid];
m4_2759 -> m4_2770  [key=2, style=dotted];
m4_2756 -> m4_2758  [key=0, style=solid];
m4_2756 -> m4_2757  [key=0, style=solid];
m4_2757 -> m4_2758  [key=0, style=solid];
m4_2750 -> m4_1160  [key=2, style=dotted];
m4_2750 -> m4_2751  [key=0, style=solid];
m4_2748 -> m4_2749  [key=0, style=solid];
m4_2748 -> m4_2766  [key=2, style=dotted];
m4_2746 -> m4_2749  [color=darkseagreen4, key=1, label=socket, style=dashed];
m4_2746 -> m4_2748  [color=darkseagreen4, key=1, label=socket, style=dashed];
m4_2746 -> m4_2747  [key=0, style=solid];
m4_2746 -> m4_2765  [key=2, style=dotted];
m4_2743 -> m4_2759  [color=darkseagreen4, key=1, label=clientReceivedEvent, style=dashed];
m4_2743 -> m4_2744  [key=0, style=solid];
m4_2743 -> m4_2762  [key=2, style=dotted];
m4_2743 -> m4_2780  [color=darkseagreen4, key=1, label=clientReceivedEvent, style=dashed];
m4_2760 -> m4_808  [key=2, style=dotted];
m4_2760 -> m4_2761  [key=0, style=solid];
m4_2740 -> m4_2748  [color=darkseagreen4, key=1, label=port, style=dashed];
m4_2740 -> m4_2741  [key=0, style=solid];
m4_2740 -> m4_2744  [color=darkseagreen4, key=1, label=port, style=dashed];
m4_2740 -> m4_2772  [color=darkseagreen4, key=1, label=port, style=dashed];
m4_2747 -> m4_2748  [key=0, style=solid];
m4_2745 -> m4_2746  [key=0, style=solid];
m4_2745 -> m4_2764  [key=2, style=dotted];
m4_2742 -> m4_2743  [key=0, style=solid];
m4_2742 -> m4_2745  [color=darkseagreen4, key=1, label=serverStartedEvent, style=dashed];
m4_2742 -> m4_2762  [key=2, style=dotted];
m4_2742 -> m4_2744  [color=darkseagreen4, key=1, label=serverStartedEvent, style=dashed];
m4_2742 -> m4_2774  [color=darkseagreen4, key=1, label=serverStartedEvent, style=dashed];
m4_2744 -> m4_2745  [key=0, style=solid];
m4_2744 -> m4_2763  [key=2, style=dotted];
m4_2744 -> m4_2771  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_2741 -> m4_2776  [color=darkseagreen4, key=1, label=jsonArrayElementsCount, style=dashed];
m4_2741 -> m4_2742  [key=0, style=solid];
m4_2741 -> m4_2744  [color=darkseagreen4, key=1, label=jsonArrayElementsCount, style=dashed];
m4_2761 -> m4_2739  [color=blue, key=0, style=bold];
m4_695 -> m4_696  [key=0, style=solid];
m4_699 -> m4_25  [key=2, style=dotted];
m4_699 -> m4_700  [key=0, style=solid];
m4_697 -> m4_21  [key=2, style=dotted];
m4_697 -> m4_22  [key=2, style=dotted];
m4_697 -> m4_699  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_697 -> m4_698  [key=0, style=solid];
m4_697 -> m4_706  [key=2, style=dotted];
m4_697 -> m4_703  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_698 -> m4_699  [key=0, style=solid];
m4_698 -> m4_23  [key=2, style=dotted];
m4_700 -> m4_701  [key=0, style=solid];
m4_700 -> m4_702  [color=darkseagreen4, key=1, label=j, style=dashed];
m4_700 -> m4_704  [color=darkseagreen4, key=1, label=j, style=dashed];
m4_696 -> m4_697  [key=0, style=solid];
m4_696 -> m4_702  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_703 -> m4_704  [key=0, style=solid];
m4_703 -> m4_172  [key=2, style=dotted];
m4_703 -> m4_707  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_702 -> m4_708  [color=darkseagreen4, key=1, label=total, style=dashed];
m4_702 -> m4_703  [key=0, style=solid];
m4_701 -> m4_702  [key=0, style=solid];
m4_701 -> m4_705  [key=0, style=solid];
m4_704 -> m4_701  [key=0, style=solid];
m4_704 -> m4_704  [color=darkseagreen4, key=1, label=j, style=dashed];
m4_705 -> m4_695  [color=blue, key=0, style=bold];
m4_1400 -> m4_1401  [key=0, style=solid];
m4_1401 -> m4_21  [key=2, style=dotted];
m4_1401 -> m4_22  [key=2, style=dotted];
m4_1401 -> m4_1402  [key=0, style=solid];
m4_1401 -> m4_1405  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1402 -> m4_1403  [key=0, style=solid];
m4_1402 -> m4_172  [key=2, style=dotted];
m4_1402 -> m4_1404  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1403 -> m4_1400  [color=blue, key=0, style=bold];
m4_379 -> m4_380  [key=0, style=solid];
m4_385 -> m4_25  [key=2, style=dotted];
m4_385 -> m4_386  [key=0, style=solid];
m4_386 -> m4_25  [key=2, style=dotted];
m4_386 -> m4_387  [key=0, style=solid];
m4_388 -> m4_25  [key=2, style=dotted];
m4_388 -> m4_389  [key=0, style=solid];
m4_390 -> m4_25  [key=2, style=dotted];
m4_390 -> m4_391  [key=0, style=solid];
m4_392 -> m4_25  [key=2, style=dotted];
m4_392 -> m4_393  [key=0, style=solid];
m4_394 -> m4_25  [key=2, style=dotted];
m4_394 -> m4_395  [key=0, style=solid];
m4_381 -> m4_21  [key=2, style=dotted];
m4_381 -> m4_385  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_381 -> m4_386  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_381 -> m4_388  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_381 -> m4_390  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_381 -> m4_392  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_381 -> m4_394  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_381 -> m4_382  [key=0, style=solid];
m4_381 -> m4_358  [key=2, style=dotted];
m4_381 -> m4_396  [key=2, style=dotted];
m4_381 -> m4_397  [key=2, style=dotted];
m4_381 -> m4_383  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_381 -> m4_384  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_381 -> m4_387  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_381 -> m4_389  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_381 -> m4_391  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_381 -> m4_393  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_384 -> m4_385  [key=0, style=solid];
m4_384 -> m4_24  [key=2, style=dotted];
m4_384 -> m4_378  [key=2, style=dotted];
m4_387 -> m4_388  [key=0, style=solid];
m4_387 -> m4_24  [key=2, style=dotted];
m4_387 -> m4_378  [key=2, style=dotted];
m4_389 -> m4_390  [key=0, style=solid];
m4_389 -> m4_24  [key=2, style=dotted];
m4_389 -> m4_378  [key=2, style=dotted];
m4_391 -> m4_392  [key=0, style=solid];
m4_391 -> m4_24  [key=2, style=dotted];
m4_391 -> m4_378  [key=2, style=dotted];
m4_393 -> m4_394  [key=0, style=solid];
m4_393 -> m4_24  [key=2, style=dotted];
m4_393 -> m4_378  [key=2, style=dotted];
m4_380 -> m4_381  [key=0, style=solid];
m4_382 -> m4_24  [key=2, style=dotted];
m4_382 -> m4_383  [key=0, style=solid];
m4_382 -> m4_378  [key=2, style=dotted];
m4_383 -> m4_24  [key=2, style=dotted];
m4_383 -> m4_384  [key=0, style=solid];
m4_383 -> m4_378  [key=2, style=dotted];
m4_395 -> m4_379  [color=blue, key=0, style=bold];
m4_1181 -> m4_1182  [key=0, style=solid];
m4_1186 -> m4_25  [key=2, style=dotted];
m4_1186 -> m4_1187  [key=0, style=solid];
m4_1188 -> m4_25  [key=2, style=dotted];
m4_1188 -> m4_1189  [key=0, style=solid];
m4_1189 -> m4_25  [key=2, style=dotted];
m4_1189 -> m4_1190  [key=0, style=solid];
m4_1190 -> m4_25  [key=2, style=dotted];
m4_1190 -> m4_1191  [key=0, style=solid];
m4_1190 -> m4_333  [key=2, style=dotted];
m4_1192 -> m4_25  [key=2, style=dotted];
m4_1192 -> m4_1193  [key=0, style=solid];
m4_1194 -> m4_25  [key=2, style=dotted];
m4_1194 -> m4_1195  [key=0, style=solid];
m4_1184 -> m4_21  [key=2, style=dotted];
m4_1184 -> m4_22  [key=2, style=dotted];
m4_1184 -> m4_1186  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1184 -> m4_1188  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1184 -> m4_1189  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1184 -> m4_1190  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1184 -> m4_1192  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1184 -> m4_1194  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1184 -> m4_1185  [key=0, style=solid];
m4_1184 -> m4_1187  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1184 -> m4_1191  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1184 -> m4_1193  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1185 -> m4_1186  [key=0, style=solid];
m4_1185 -> m4_23  [key=2, style=dotted];
m4_1187 -> m4_1188  [key=0, style=solid];
m4_1187 -> m4_23  [key=2, style=dotted];
m4_1191 -> m4_1192  [key=0, style=solid];
m4_1191 -> m4_23  [key=2, style=dotted];
m4_1191 -> m4_24  [key=2, style=dotted];
m4_1193 -> m4_1194  [key=0, style=solid];
m4_1193 -> m4_23  [key=2, style=dotted];
m4_1193 -> m4_158  [key=2, style=dotted];
m4_1183 -> m4_1184  [key=0, style=solid];
m4_1183 -> m4_605  [key=2, style=dotted];
m4_1182 -> m4_1183  [key=0, style=solid];
m4_1195 -> m4_1181  [color=blue, key=0, style=bold];
m4_872 -> m4_873  [key=0, style=solid];
m4_873 -> m4_21  [key=2, style=dotted];
m4_873 -> m4_22  [key=2, style=dotted];
m4_873 -> m4_874  [key=0, style=solid];
m4_873 -> m4_875  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_873 -> m4_878  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_874 -> m4_24  [key=2, style=dotted];
m4_874 -> m4_875  [key=0, style=solid];
m4_874 -> m4_378  [key=2, style=dotted];
m4_875 -> m4_876  [key=0, style=solid];
m4_875 -> m4_172  [key=2, style=dotted];
m4_875 -> m4_877  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_876 -> m4_872  [color=blue, key=0, style=bold];
m4_2037 -> m4_2038  [key=0, style=solid];
m4_2042 -> m4_25  [key=2, style=dotted];
m4_2042 -> m4_2043  [key=0, style=solid];
m4_2044 -> m4_25  [key=2, style=dotted];
m4_2044 -> m4_2045  [key=0, style=solid];
m4_2046 -> m4_25  [key=2, style=dotted];
m4_2046 -> m4_2047  [key=0, style=solid];
m4_2048 -> m4_25  [key=2, style=dotted];
m4_2048 -> m4_2049  [key=0, style=solid];
m4_2050 -> m4_25  [key=2, style=dotted];
m4_2050 -> m4_2051  [key=0, style=solid];
m4_2052 -> m4_25  [key=2, style=dotted];
m4_2052 -> m4_2052  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m4_2052 -> m4_2053  [key=0, style=solid];
m4_2054 -> m4_25  [key=2, style=dotted];
m4_2054 -> m4_2055  [key=0, style=solid];
m4_2056 -> m4_25  [key=2, style=dotted];
m4_2056 -> m4_2057  [key=0, style=solid];
m4_2058 -> m4_25  [key=2, style=dotted];
m4_2058 -> m4_2059  [key=0, style=solid];
m4_2060 -> m4_25  [key=2, style=dotted];
m4_2060 -> m4_2061  [key=0, style=solid];
m4_2039 -> m4_21  [key=2, style=dotted];
m4_2039 -> m4_22  [key=2, style=dotted];
m4_2039 -> m4_2042  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2039 -> m4_2044  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2039 -> m4_2046  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2039 -> m4_2048  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2039 -> m4_2050  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2039 -> m4_2052  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2039 -> m4_2054  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2039 -> m4_2056  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2039 -> m4_2058  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2039 -> m4_2060  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2039 -> m4_2040  [key=0, style=solid];
m4_2039 -> m4_2041  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2039 -> m4_2043  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2039 -> m4_2045  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2039 -> m4_2047  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2039 -> m4_2049  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2039 -> m4_2051  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2039 -> m4_2053  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2039 -> m4_2055  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2039 -> m4_2057  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2039 -> m4_2059  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2049 -> m4_26  [key=2, style=dotted];
m4_2049 -> m4_2050  [key=0, style=solid];
m4_2055 -> m4_26  [key=2, style=dotted];
m4_2055 -> m4_2056  [key=0, style=solid];
m4_2055 -> m4_871  [key=2, style=dotted];
m4_2057 -> m4_26  [key=2, style=dotted];
m4_2057 -> m4_2058  [key=0, style=solid];
m4_2057 -> m4_871  [key=2, style=dotted];
m4_2041 -> m4_2042  [key=0, style=solid];
m4_2041 -> m4_176  [key=2, style=dotted];
m4_2043 -> m4_2044  [key=0, style=solid];
m4_2043 -> m4_244  [key=2, style=dotted];
m4_2045 -> m4_2046  [key=0, style=solid];
m4_2045 -> m4_1968  [key=2, style=dotted];
m4_2047 -> m4_2048  [key=0, style=solid];
m4_2047 -> m4_1386  [key=2, style=dotted];
m4_2051 -> m4_2052  [key=0, style=solid];
m4_2051 -> m4_116  [key=2, style=dotted];
m4_2053 -> m4_2054  [key=0, style=solid];
m4_2053 -> m4_1846  [key=2, style=dotted];
m4_2059 -> m4_2060  [key=0, style=solid];
m4_2059 -> m4_116  [key=2, style=dotted];
m4_2059 -> m4_871  [key=2, style=dotted];
m4_2038 -> m4_2039  [key=0, style=solid];
m4_2040 -> m4_23  [key=2, style=dotted];
m4_2040 -> m4_2041  [key=0, style=solid];
m4_2061 -> m4_2037  [color=blue, key=0, style=bold];
m4_1855 -> m4_1856  [key=0, style=solid];
m4_1857 -> m4_25  [key=2, style=dotted];
m4_1857 -> m4_1858  [key=0, style=solid];
m4_1857 -> m4_1846  [key=2, style=dotted];
m4_1856 -> m4_21  [key=2, style=dotted];
m4_1856 -> m4_22  [key=2, style=dotted];
m4_1856 -> m4_1857  [key=0, style=solid];
m4_1858 -> m4_1855  [color=blue, key=0, style=bold];
m4_2329 -> m4_2330  [key=0, style=solid];
m4_2331 -> m4_21  [key=2, style=dotted];
m4_2331 -> m4_22  [key=2, style=dotted];
m4_2331 -> m4_2332  [key=0, style=solid];
m4_2331 -> m4_2335  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2330 -> m4_2331  [key=0, style=solid];
m4_2332 -> m4_2333  [key=0, style=solid];
m4_2332 -> m4_172  [key=2, style=dotted];
m4_2332 -> m4_2334  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_2333 -> m4_2329  [color=blue, key=0, style=bold];
m4_2699 -> m4_2700  [key=0, style=solid];
m4_2700 -> m4_2704  [color=darkseagreen4, key=1, label=json, style=dashed];
m4_2700 -> m4_2701  [key=0, style=solid];
m4_2701 -> m4_2703  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_2701 -> m4_172  [key=2, style=dotted];
m4_2701 -> m4_2702  [key=0, style=solid];
m4_2702 -> m4_2699  [color=blue, key=0, style=bold];
m4_83 -> m4_84  [key=0, style=solid];
m4_87 -> m4_25  [key=2, style=dotted];
m4_87 -> m4_88  [key=0, style=solid];
m4_89 -> m4_25  [key=2, style=dotted];
m4_89 -> m4_90  [key=0, style=solid];
m4_91 -> m4_25  [key=2, style=dotted];
m4_91 -> m4_92  [key=0, style=solid];
m4_93 -> m4_25  [key=2, style=dotted];
m4_93 -> m4_94  [key=0, style=solid];
m4_94 -> m4_25  [key=2, style=dotted];
m4_94 -> m4_95  [key=0, style=solid];
m4_96 -> m4_25  [key=2, style=dotted];
m4_96 -> m4_97  [key=0, style=solid];
m4_97 -> m4_25  [key=2, style=dotted];
m4_97 -> m4_98  [key=0, style=solid];
m4_99 -> m4_25  [key=2, style=dotted];
m4_99 -> m4_100  [key=0, style=solid];
m4_100 -> m4_25  [key=2, style=dotted];
m4_100 -> m4_101  [key=0, style=solid];
m4_102 -> m4_25  [key=2, style=dotted];
m4_102 -> m4_103  [key=0, style=solid];
m4_104 -> m4_25  [key=2, style=dotted];
m4_104 -> m4_105  [key=0, style=solid];
m4_85 -> m4_21  [key=2, style=dotted];
m4_85 -> m4_22  [key=2, style=dotted];
m4_85 -> m4_87  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_85 -> m4_89  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_85 -> m4_91  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_85 -> m4_93  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_85 -> m4_94  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_85 -> m4_96  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_85 -> m4_97  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_85 -> m4_99  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_85 -> m4_100  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_85 -> m4_102  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_85 -> m4_104  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_85 -> m4_86  [key=0, style=solid];
m4_85 -> m4_88  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_85 -> m4_90  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_85 -> m4_92  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_85 -> m4_95  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_85 -> m4_98  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_85 -> m4_101  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_85 -> m4_103  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_86 -> m4_87  [key=0, style=solid];
m4_86 -> m4_23  [key=2, style=dotted];
m4_86 -> m4_24  [key=2, style=dotted];
m4_88 -> m4_89  [key=0, style=solid];
m4_88 -> m4_23  [key=2, style=dotted];
m4_88 -> m4_24  [key=2, style=dotted];
m4_90 -> m4_91  [key=0, style=solid];
m4_90 -> m4_23  [key=2, style=dotted];
m4_90 -> m4_24  [key=2, style=dotted];
m4_92 -> m4_93  [key=0, style=solid];
m4_92 -> m4_23  [key=2, style=dotted];
m4_92 -> m4_24  [key=2, style=dotted];
m4_95 -> m4_96  [key=0, style=solid];
m4_95 -> m4_23  [key=2, style=dotted];
m4_95 -> m4_24  [key=2, style=dotted];
m4_98 -> m4_99  [key=0, style=solid];
m4_98 -> m4_23  [key=2, style=dotted];
m4_98 -> m4_24  [key=2, style=dotted];
m4_101 -> m4_102  [key=0, style=solid];
m4_101 -> m4_23  [key=2, style=dotted];
m4_101 -> m4_24  [key=2, style=dotted];
m4_103 -> m4_104  [key=0, style=solid];
m4_103 -> m4_23  [key=2, style=dotted];
m4_103 -> m4_24  [key=2, style=dotted];
m4_84 -> m4_85  [key=0, style=solid];
m4_105 -> m4_83  [color=blue, key=0, style=bold];
m4_1001 -> m4_1002  [key=0, style=solid];
m4_1004 -> m4_25  [key=2, style=dotted];
m4_1004 -> m4_1005  [key=0, style=solid];
m4_1004 -> m4_176  [key=2, style=dotted];
m4_1006 -> m4_25  [key=2, style=dotted];
m4_1006 -> m4_1007  [key=0, style=solid];
m4_1006 -> m4_176  [key=2, style=dotted];
m4_1008 -> m4_25  [key=2, style=dotted];
m4_1008 -> m4_1009  [key=0, style=solid];
m4_1008 -> m4_176  [key=2, style=dotted];
m4_1010 -> m4_25  [key=2, style=dotted];
m4_1010 -> m4_1011  [key=0, style=solid];
m4_1010 -> m4_176  [key=2, style=dotted];
m4_1012 -> m4_25  [key=2, style=dotted];
m4_1012 -> m4_1013  [key=0, style=solid];
m4_1012 -> m4_176  [key=2, style=dotted];
m4_1014 -> m4_25  [key=2, style=dotted];
m4_1014 -> m4_1015  [key=0, style=solid];
m4_1014 -> m4_176  [key=2, style=dotted];
m4_1024 -> m4_25  [key=2, style=dotted];
m4_1024 -> m4_1025  [key=0, style=solid];
m4_1024 -> m4_176  [key=2, style=dotted];
m4_1003 -> m4_21  [key=2, style=dotted];
m4_1003 -> m4_22  [key=2, style=dotted];
m4_1003 -> m4_1004  [key=0, style=solid];
m4_1005 -> m4_21  [key=2, style=dotted];
m4_1005 -> m4_22  [key=2, style=dotted];
m4_1005 -> m4_1006  [key=0, style=solid];
m4_1007 -> m4_21  [key=2, style=dotted];
m4_1007 -> m4_22  [key=2, style=dotted];
m4_1007 -> m4_1008  [key=0, style=solid];
m4_1009 -> m4_21  [key=2, style=dotted];
m4_1009 -> m4_22  [key=2, style=dotted];
m4_1009 -> m4_1010  [key=0, style=solid];
m4_1011 -> m4_21  [key=2, style=dotted];
m4_1011 -> m4_22  [key=2, style=dotted];
m4_1011 -> m4_1012  [key=0, style=solid];
m4_1011 -> m4_1028  [key=2, style=dotted];
m4_1013 -> m4_21  [key=2, style=dotted];
m4_1013 -> m4_22  [key=2, style=dotted];
m4_1013 -> m4_1014  [key=0, style=solid];
m4_1013 -> m4_1028  [key=2, style=dotted];
m4_1015 -> m4_21  [key=2, style=dotted];
m4_1015 -> m4_22  [key=2, style=dotted];
m4_1015 -> m4_1016  [key=0, style=solid];
m4_1015 -> m4_1029  [key=2, style=dotted];
m4_1015 -> m4_1031  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1017 -> m4_21  [key=2, style=dotted];
m4_1017 -> m4_22  [key=2, style=dotted];
m4_1017 -> m4_1018  [key=0, style=solid];
m4_1017 -> m4_1034  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1019 -> m4_21  [key=2, style=dotted];
m4_1019 -> m4_22  [key=2, style=dotted];
m4_1019 -> m4_1020  [key=0, style=solid];
m4_1019 -> m4_1037  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1021 -> m4_21  [key=2, style=dotted];
m4_1021 -> m4_22  [key=2, style=dotted];
m4_1021 -> m4_1022  [key=0, style=solid];
m4_1021 -> m4_1040  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1023 -> m4_21  [key=2, style=dotted];
m4_1023 -> m4_22  [key=2, style=dotted];
m4_1023 -> m4_1024  [key=0, style=solid];
m4_1025 -> m4_21  [key=2, style=dotted];
m4_1025 -> m4_22  [key=2, style=dotted];
m4_1025 -> m4_1026  [key=0, style=solid];
m4_1025 -> m4_1043  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1002 -> m4_1003  [key=0, style=solid];
m4_1016 -> m4_1017  [key=0, style=solid];
m4_1016 -> m4_172  [key=2, style=dotted];
m4_1016 -> m4_1030  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1018 -> m4_1019  [key=0, style=solid];
m4_1018 -> m4_172  [key=2, style=dotted];
m4_1018 -> m4_1033  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1020 -> m4_1021  [key=0, style=solid];
m4_1020 -> m4_172  [key=2, style=dotted];
m4_1020 -> m4_1036  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1022 -> m4_1023  [key=0, style=solid];
m4_1022 -> m4_172  [key=2, style=dotted];
m4_1022 -> m4_1039  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1026 -> m4_1027  [key=0, style=solid];
m4_1026 -> m4_172  [key=2, style=dotted];
m4_1026 -> m4_1042  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1027 -> m4_1001  [color=blue, key=0, style=bold];
m4_2446 -> m4_2447  [key=0, style=solid];
m4_2447 -> m4_21  [key=2, style=dotted];
m4_2447 -> m4_22  [key=2, style=dotted];
m4_2447 -> m4_2448  [key=0, style=solid];
m4_2447 -> m4_2449  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2447 -> m4_2450  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2447 -> m4_2453  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2448 -> m4_24  [key=2, style=dotted];
m4_2448 -> m4_2449  [key=0, style=solid];
m4_2448 -> m4_378  [key=2, style=dotted];
m4_2449 -> m4_24  [key=2, style=dotted];
m4_2449 -> m4_2450  [key=0, style=solid];
m4_2449 -> m4_378  [key=2, style=dotted];
m4_2450 -> m4_2451  [key=0, style=solid];
m4_2450 -> m4_172  [key=2, style=dotted];
m4_2450 -> m4_2452  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_2451 -> m4_2446  [color=blue, key=0, style=bold];
m4_321 -> m4_322  [key=0, style=solid];
m4_327 -> m4_25  [key=2, style=dotted];
m4_327 -> m4_328  [key=0, style=solid];
m4_329 -> m4_25  [key=2, style=dotted];
m4_329 -> m4_330  [key=0, style=solid];
m4_331 -> m4_25  [key=2, style=dotted];
m4_331 -> m4_332  [key=0, style=solid];
m4_323 -> m4_21  [key=2, style=dotted];
m4_323 -> m4_22  [key=2, style=dotted];
m4_323 -> m4_327  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_323 -> m4_324  [key=0, style=solid];
m4_323 -> m4_325  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_323 -> m4_326  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_323 -> m4_328  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_326 -> m4_327  [key=0, style=solid];
m4_326 -> m4_23  [key=2, style=dotted];
m4_326 -> m4_24  [key=2, style=dotted];
m4_328 -> m4_329  [key=0, style=solid];
m4_328 -> m4_333  [key=2, style=dotted];
m4_328 -> m4_330  [color=darkseagreen4, key=1, label=s, style=dashed];
m4_330 -> m4_331  [key=0, style=solid];
m4_330 -> m4_334  [key=2, style=dotted];
m4_322 -> m4_323  [key=0, style=solid];
m4_324 -> m4_23  [key=2, style=dotted];
m4_324 -> m4_24  [key=2, style=dotted];
m4_324 -> m4_325  [key=0, style=solid];
m4_325 -> m4_23  [key=2, style=dotted];
m4_325 -> m4_24  [key=2, style=dotted];
m4_325 -> m4_326  [key=0, style=solid];
m4_332 -> m4_321  [color=blue, key=0, style=bold];
m4_1314 -> m4_1315  [key=0, style=solid];
m4_1318 -> m4_25  [key=2, style=dotted];
m4_1318 -> m4_1319  [key=0, style=solid];
m4_1320 -> m4_25  [key=2, style=dotted];
m4_1320 -> m4_1321  [key=0, style=solid];
m4_1321 -> m4_25  [key=2, style=dotted];
m4_1321 -> m4_1322  [key=0, style=solid];
m4_1322 -> m4_25  [key=2, style=dotted];
m4_1322 -> m4_1323  [key=0, style=solid];
m4_1324 -> m4_25  [key=2, style=dotted];
m4_1324 -> m4_1325  [key=0, style=solid];
m4_1325 -> m4_25  [key=2, style=dotted];
m4_1325 -> m4_1326  [key=0, style=solid];
m4_1326 -> m4_25  [key=2, style=dotted];
m4_1326 -> m4_1327  [key=0, style=solid];
m4_1328 -> m4_25  [key=2, style=dotted];
m4_1328 -> m4_1329  [key=0, style=solid];
m4_1329 -> m4_25  [key=2, style=dotted];
m4_1329 -> m4_1330  [key=0, style=solid];
m4_1330 -> m4_25  [key=2, style=dotted];
m4_1330 -> m4_1331  [key=0, style=solid];
m4_1332 -> m4_25  [key=2, style=dotted];
m4_1332 -> m4_1333  [key=0, style=solid];
m4_1316 -> m4_21  [key=2, style=dotted];
m4_1316 -> m4_1318  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1316 -> m4_1320  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1316 -> m4_1321  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1316 -> m4_1322  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1316 -> m4_1324  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1316 -> m4_1325  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1316 -> m4_1326  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1316 -> m4_1328  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1316 -> m4_1329  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1316 -> m4_1330  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1316 -> m4_1332  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1316 -> m4_1317  [key=0, style=solid];
m4_1316 -> m4_1319  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1316 -> m4_1323  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1316 -> m4_1327  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1316 -> m4_1331  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1316 -> m4_1333  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1315 -> m4_22  [key=2, style=dotted];
m4_1315 -> m4_1316  [key=0, style=solid];
m4_1317 -> m4_1318  [key=0, style=solid];
m4_1317 -> m4_23  [key=2, style=dotted];
m4_1317 -> m4_24  [key=2, style=dotted];
m4_1319 -> m4_1320  [key=0, style=solid];
m4_1319 -> m4_23  [key=2, style=dotted];
m4_1323 -> m4_1324  [key=0, style=solid];
m4_1323 -> m4_23  [key=2, style=dotted];
m4_1327 -> m4_1328  [key=0, style=solid];
m4_1327 -> m4_23  [key=2, style=dotted];
m4_1331 -> m4_1332  [key=0, style=solid];
m4_1331 -> m4_23  [key=2, style=dotted];
m4_1331 -> m4_24  [key=2, style=dotted];
m4_1333 -> m4_23  [key=2, style=dotted];
m4_1333 -> m4_1334  [key=0, style=solid];
m4_1333 -> m4_158  [key=2, style=dotted];
m4_1334 -> m4_1314  [color=blue, key=0, style=bold];
m4_1969 -> m4_1970  [key=0, style=solid];
m4_1970 -> m4_21  [key=2, style=dotted];
m4_1970 -> m4_22  [key=2, style=dotted];
m4_1970 -> m4_1971  [key=0, style=solid];
m4_1970 -> m4_1974  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1971 -> m4_1972  [key=0, style=solid];
m4_1971 -> m4_172  [key=2, style=dotted];
m4_1971 -> m4_1973  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1972 -> m4_1969  [color=blue, key=0, style=bold];
m4_1364 -> m4_1365  [key=0, style=solid];
m4_1367 -> m4_25  [key=2, style=dotted];
m4_1367 -> m4_1368  [key=0, style=solid];
m4_1365 -> m4_21  [key=2, style=dotted];
m4_1365 -> m4_22  [key=2, style=dotted];
m4_1365 -> m4_1367  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1365 -> m4_1366  [key=0, style=solid];
m4_1366 -> m4_1367  [key=0, style=solid];
m4_1366 -> m4_244  [key=2, style=dotted];
m4_1366 -> m4_871  [key=2, style=dotted];
m4_1368 -> m4_1364  [color=blue, key=0, style=bold];
m4_756 -> m4_757  [key=0, style=solid];
m4_764 -> m4_25  [key=2, style=dotted];
m4_764 -> m4_765  [key=0, style=solid];
m4_765 -> m4_25  [key=2, style=dotted];
m4_765 -> m4_766  [key=0, style=solid];
m4_758 -> m4_21  [key=2, style=dotted];
m4_758 -> m4_22  [key=2, style=dotted];
m4_758 -> m4_764  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_758 -> m4_765  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_758 -> m4_759  [key=0, style=solid];
m4_758 -> m4_761  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_758 -> m4_763  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_763 -> m4_764  [key=0, style=solid];
m4_763 -> m4_23  [key=2, style=dotted];
m4_763 -> m4_24  [key=2, style=dotted];
m4_757 -> m4_758  [key=0, style=solid];
m4_759 -> m4_760  [key=0, style=solid];
m4_759 -> m4_762  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_761 -> m4_23  [key=2, style=dotted];
m4_761 -> m4_24  [key=2, style=dotted];
m4_761 -> m4_762  [key=0, style=solid];
m4_760 -> m4_763  [key=0, style=solid];
m4_760 -> m4_761  [key=0, style=solid];
m4_762 -> m4_760  [key=0, style=solid];
m4_762 -> m4_762  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_766 -> m4_756  [color=blue, key=0, style=bold];
m4_1210 -> m4_1211  [key=0, style=solid];
m4_1214 -> m4_25  [key=2, style=dotted];
m4_1214 -> m4_1215  [key=0, style=solid];
m4_1216 -> m4_25  [key=2, style=dotted];
m4_1216 -> m4_1217  [key=0, style=solid];
m4_1217 -> m4_25  [key=2, style=dotted];
m4_1217 -> m4_1218  [key=0, style=solid];
m4_1219 -> m4_25  [key=2, style=dotted];
m4_1219 -> m4_1220  [key=0, style=solid];
m4_1220 -> m4_25  [key=2, style=dotted];
m4_1220 -> m4_1221  [key=0, style=solid];
m4_1222 -> m4_25  [key=2, style=dotted];
m4_1222 -> m4_1223  [key=0, style=solid];
m4_1223 -> m4_25  [key=2, style=dotted];
m4_1223 -> m4_1224  [key=0, style=solid];
m4_1225 -> m4_25  [key=2, style=dotted];
m4_1225 -> m4_1226  [key=0, style=solid];
m4_1226 -> m4_25  [key=2, style=dotted];
m4_1226 -> m4_1227  [key=0, style=solid];
m4_1228 -> m4_25  [key=2, style=dotted];
m4_1228 -> m4_1229  [key=0, style=solid];
m4_1229 -> m4_25  [key=2, style=dotted];
m4_1229 -> m4_1230  [key=0, style=solid];
m4_1231 -> m4_25  [key=2, style=dotted];
m4_1231 -> m4_1232  [key=0, style=solid];
m4_1232 -> m4_25  [key=2, style=dotted];
m4_1232 -> m4_1233  [key=0, style=solid];
m4_1234 -> m4_25  [key=2, style=dotted];
m4_1234 -> m4_1235  [key=0, style=solid];
m4_1235 -> m4_25  [key=2, style=dotted];
m4_1235 -> m4_1236  [key=0, style=solid];
m4_1237 -> m4_25  [key=2, style=dotted];
m4_1237 -> m4_1238  [key=0, style=solid];
m4_1238 -> m4_25  [key=2, style=dotted];
m4_1238 -> m4_1239  [key=0, style=solid];
m4_1240 -> m4_25  [key=2, style=dotted];
m4_1240 -> m4_1241  [key=0, style=solid];
m4_1241 -> m4_25  [key=2, style=dotted];
m4_1241 -> m4_1242  [key=0, style=solid];
m4_1243 -> m4_25  [key=2, style=dotted];
m4_1243 -> m4_1244  [key=0, style=solid];
m4_1244 -> m4_25  [key=2, style=dotted];
m4_1244 -> m4_1245  [key=0, style=solid];
m4_1246 -> m4_25  [key=2, style=dotted];
m4_1246 -> m4_1247  [key=0, style=solid];
m4_1247 -> m4_25  [key=2, style=dotted];
m4_1247 -> m4_1248  [key=0, style=solid];
m4_1249 -> m4_25  [key=2, style=dotted];
m4_1249 -> m4_1250  [key=0, style=solid];
m4_1250 -> m4_25  [key=2, style=dotted];
m4_1250 -> m4_1251  [key=0, style=solid];
m4_1252 -> m4_25  [key=2, style=dotted];
m4_1252 -> m4_1253  [key=0, style=solid];
m4_1253 -> m4_25  [key=2, style=dotted];
m4_1253 -> m4_1254  [key=0, style=solid];
m4_1255 -> m4_25  [key=2, style=dotted];
m4_1255 -> m4_1256  [key=0, style=solid];
m4_1256 -> m4_25  [key=2, style=dotted];
m4_1256 -> m4_1257  [key=0, style=solid];
m4_1258 -> m4_25  [key=2, style=dotted];
m4_1258 -> m4_1259  [key=0, style=solid];
m4_1259 -> m4_25  [key=2, style=dotted];
m4_1259 -> m4_1260  [key=0, style=solid];
m4_1261 -> m4_25  [key=2, style=dotted];
m4_1261 -> m4_1262  [key=0, style=solid];
m4_1262 -> m4_25  [key=2, style=dotted];
m4_1262 -> m4_1263  [key=0, style=solid];
m4_1264 -> m4_25  [key=2, style=dotted];
m4_1264 -> m4_1265  [key=0, style=solid];
m4_1265 -> m4_25  [key=2, style=dotted];
m4_1265 -> m4_1266  [key=0, style=solid];
m4_1267 -> m4_25  [key=2, style=dotted];
m4_1267 -> m4_1268  [key=0, style=solid];
m4_1268 -> m4_25  [key=2, style=dotted];
m4_1268 -> m4_1269  [key=0, style=solid];
m4_1270 -> m4_25  [key=2, style=dotted];
m4_1270 -> m4_1271  [key=0, style=solid];
m4_1212 -> m4_21  [key=2, style=dotted];
m4_1212 -> m4_22  [key=2, style=dotted];
m4_1212 -> m4_1214  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1216  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1217  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1219  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1220  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1222  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1223  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1225  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1226  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1228  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1229  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1231  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1232  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1234  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1235  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1237  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1238  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1240  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1241  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1243  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1244  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1246  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1247  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1249  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1250  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1252  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1253  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1255  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1256  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1258  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1259  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1261  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1262  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1264  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1265  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1267  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1268  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1270  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1213  [key=0, style=solid];
m4_1212 -> m4_1215  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1218  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1221  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1224  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1227  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1230  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1233  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1236  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1239  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1242  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1245  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1248  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1251  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1254  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1257  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1260  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1263  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1266  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1212 -> m4_1269  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1213 -> m4_1214  [key=0, style=solid];
m4_1213 -> m4_378  [key=2, style=dotted];
m4_1215 -> m4_1216  [key=0, style=solid];
m4_1215 -> m4_378  [key=2, style=dotted];
m4_1218 -> m4_1219  [key=0, style=solid];
m4_1218 -> m4_378  [key=2, style=dotted];
m4_1221 -> m4_1222  [key=0, style=solid];
m4_1221 -> m4_378  [key=2, style=dotted];
m4_1224 -> m4_1225  [key=0, style=solid];
m4_1224 -> m4_378  [key=2, style=dotted];
m4_1227 -> m4_1228  [key=0, style=solid];
m4_1227 -> m4_378  [key=2, style=dotted];
m4_1230 -> m4_1231  [key=0, style=solid];
m4_1230 -> m4_378  [key=2, style=dotted];
m4_1233 -> m4_1234  [key=0, style=solid];
m4_1233 -> m4_378  [key=2, style=dotted];
m4_1236 -> m4_1237  [key=0, style=solid];
m4_1236 -> m4_378  [key=2, style=dotted];
m4_1239 -> m4_1240  [key=0, style=solid];
m4_1239 -> m4_378  [key=2, style=dotted];
m4_1242 -> m4_1243  [key=0, style=solid];
m4_1242 -> m4_378  [key=2, style=dotted];
m4_1245 -> m4_1246  [key=0, style=solid];
m4_1245 -> m4_378  [key=2, style=dotted];
m4_1248 -> m4_1249  [key=0, style=solid];
m4_1248 -> m4_378  [key=2, style=dotted];
m4_1251 -> m4_1252  [key=0, style=solid];
m4_1251 -> m4_378  [key=2, style=dotted];
m4_1254 -> m4_1255  [key=0, style=solid];
m4_1254 -> m4_378  [key=2, style=dotted];
m4_1257 -> m4_1258  [key=0, style=solid];
m4_1257 -> m4_378  [key=2, style=dotted];
m4_1260 -> m4_1261  [key=0, style=solid];
m4_1260 -> m4_378  [key=2, style=dotted];
m4_1263 -> m4_1264  [key=0, style=solid];
m4_1263 -> m4_378  [key=2, style=dotted];
m4_1266 -> m4_1267  [key=0, style=solid];
m4_1266 -> m4_378  [key=2, style=dotted];
m4_1269 -> m4_1270  [key=0, style=solid];
m4_1269 -> m4_378  [key=2, style=dotted];
m4_1211 -> m4_1212  [key=0, style=solid];
m4_1271 -> m4_1210  [color=blue, key=0, style=bold];
m4_1575 -> m4_1576  [key=0, style=solid];
m4_1580 -> m4_25  [key=2, style=dotted];
m4_1580 -> m4_1581  [key=0, style=solid];
m4_1582 -> m4_25  [key=2, style=dotted];
m4_1582 -> m4_1583  [key=0, style=solid];
m4_1584 -> m4_25  [key=2, style=dotted];
m4_1584 -> m4_1585  [key=0, style=solid];
m4_1585 -> m4_25  [key=2, style=dotted];
m4_1585 -> m4_1586  [key=0, style=solid];
m4_1589 -> m4_25  [key=2, style=dotted];
m4_1589 -> m4_1590  [key=0, style=solid];
m4_1587 -> m4_25  [key=2, style=dotted];
m4_1587 -> m4_1587  [color=darkseagreen4, key=1, label=dt, style=dashed];
m4_1587 -> m4_1588  [key=0, style=solid];
m4_1587 -> m4_1557  [key=2, style=dotted];
m4_1577 -> m4_21  [key=2, style=dotted];
m4_1577 -> m4_22  [key=2, style=dotted];
m4_1577 -> m4_1580  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1577 -> m4_1582  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1577 -> m4_1584  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1577 -> m4_1585  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1577 -> m4_1589  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1577 -> m4_1578  [key=0, style=solid];
m4_1577 -> m4_1579  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1577 -> m4_1581  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1577 -> m4_1583  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1577 -> m4_1586  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1577 -> m4_1588  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1579 -> m4_1580  [key=0, style=solid];
m4_1579 -> m4_23  [key=2, style=dotted];
m4_1579 -> m4_24  [key=2, style=dotted];
m4_1581 -> m4_1582  [key=0, style=solid];
m4_1581 -> m4_23  [key=2, style=dotted];
m4_1581 -> m4_24  [key=2, style=dotted];
m4_1583 -> m4_1584  [key=0, style=solid];
m4_1583 -> m4_1386  [key=2, style=dotted];
m4_1586 -> m4_1587  [key=0, style=solid];
m4_1588 -> m4_1589  [key=0, style=solid];
m4_1588 -> m4_23  [key=2, style=dotted];
m4_1588 -> m4_24  [key=2, style=dotted];
m4_1576 -> m4_1577  [key=0, style=solid];
m4_1578 -> m4_1579  [key=0, style=solid];
m4_1578 -> m4_1574  [key=2, style=dotted];
m4_1590 -> m4_1575  [color=blue, key=0, style=bold];
m4_27 -> m4_28  [key=0, style=solid];
m4_31 -> m4_25  [key=2, style=dotted];
m4_31 -> m4_32  [key=0, style=solid];
m4_32 -> m4_25  [key=2, style=dotted];
m4_32 -> m4_33  [key=0, style=solid];
m4_33 -> m4_25  [key=2, style=dotted];
m4_33 -> m4_34  [key=0, style=solid];
m4_35 -> m4_25  [key=2, style=dotted];
m4_35 -> m4_36  [key=0, style=solid];
m4_36 -> m4_25  [key=2, style=dotted];
m4_36 -> m4_37  [key=0, style=solid];
m4_37 -> m4_25  [key=2, style=dotted];
m4_37 -> m4_38  [key=0, style=solid];
m4_41 -> m4_25  [key=2, style=dotted];
m4_41 -> m4_42  [key=0, style=solid];
m4_42 -> m4_25  [key=2, style=dotted];
m4_42 -> m4_43  [key=0, style=solid];
m4_43 -> m4_25  [key=2, style=dotted];
m4_43 -> m4_44  [key=0, style=solid];
m4_45 -> m4_25  [key=2, style=dotted];
m4_45 -> m4_46  [key=0, style=solid];
m4_46 -> m4_25  [key=2, style=dotted];
m4_46 -> m4_47  [key=0, style=solid];
m4_47 -> m4_25  [key=2, style=dotted];
m4_47 -> m4_48  [key=0, style=solid];
m4_49 -> m4_25  [key=2, style=dotted];
m4_49 -> m4_50  [key=0, style=solid];
m4_50 -> m4_25  [key=2, style=dotted];
m4_50 -> m4_51  [key=0, style=solid];
m4_51 -> m4_25  [key=2, style=dotted];
m4_51 -> m4_52  [key=0, style=solid];
m4_53 -> m4_25  [key=2, style=dotted];
m4_53 -> m4_54  [key=0, style=solid];
m4_54 -> m4_25  [key=2, style=dotted];
m4_54 -> m4_55  [key=0, style=solid];
m4_55 -> m4_25  [key=2, style=dotted];
m4_55 -> m4_56  [key=0, style=solid];
m4_59 -> m4_25  [key=2, style=dotted];
m4_59 -> m4_60  [key=0, style=solid];
m4_60 -> m4_25  [key=2, style=dotted];
m4_60 -> m4_61  [key=0, style=solid];
m4_61 -> m4_25  [key=2, style=dotted];
m4_61 -> m4_62  [key=0, style=solid];
m4_63 -> m4_25  [key=2, style=dotted];
m4_63 -> m4_64  [key=0, style=solid];
m4_64 -> m4_25  [key=2, style=dotted];
m4_64 -> m4_65  [key=0, style=solid];
m4_65 -> m4_25  [key=2, style=dotted];
m4_65 -> m4_66  [key=0, style=solid];
m4_67 -> m4_25  [key=2, style=dotted];
m4_67 -> m4_68  [key=0, style=solid];
m4_68 -> m4_25  [key=2, style=dotted];
m4_68 -> m4_69  [key=0, style=solid];
m4_69 -> m4_25  [key=2, style=dotted];
m4_69 -> m4_70  [key=0, style=solid];
m4_71 -> m4_25  [key=2, style=dotted];
m4_71 -> m4_72  [key=0, style=solid];
m4_72 -> m4_25  [key=2, style=dotted];
m4_72 -> m4_73  [key=0, style=solid];
m4_73 -> m4_25  [key=2, style=dotted];
m4_73 -> m4_74  [key=0, style=solid];
m4_75 -> m4_25  [key=2, style=dotted];
m4_75 -> m4_76  [key=0, style=solid];
m4_76 -> m4_25  [key=2, style=dotted];
m4_76 -> m4_77  [key=0, style=solid];
m4_77 -> m4_25  [key=2, style=dotted];
m4_77 -> m4_78  [key=0, style=solid];
m4_79 -> m4_25  [key=2, style=dotted];
m4_79 -> m4_80  [key=0, style=solid];
m4_80 -> m4_25  [key=2, style=dotted];
m4_80 -> m4_81  [key=0, style=solid];
m4_81 -> m4_25  [key=2, style=dotted];
m4_81 -> m4_82  [key=0, style=solid];
m4_29 -> m4_21  [key=2, style=dotted];
m4_29 -> m4_22  [key=2, style=dotted];
m4_29 -> m4_31  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_29 -> m4_32  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_29 -> m4_33  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_29 -> m4_35  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_29 -> m4_36  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_29 -> m4_37  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_29 -> m4_30  [key=0, style=solid];
m4_29 -> m4_34  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_39 -> m4_21  [key=2, style=dotted];
m4_39 -> m4_22  [key=2, style=dotted];
m4_39 -> m4_41  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_39 -> m4_42  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_39 -> m4_43  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_39 -> m4_45  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_39 -> m4_46  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_39 -> m4_47  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_39 -> m4_49  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_39 -> m4_50  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_39 -> m4_51  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_39 -> m4_53  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_39 -> m4_54  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_39 -> m4_55  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_39 -> m4_40  [key=0, style=solid];
m4_39 -> m4_44  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_39 -> m4_48  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_39 -> m4_52  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_57 -> m4_21  [key=2, style=dotted];
m4_57 -> m4_22  [key=2, style=dotted];
m4_57 -> m4_59  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_57 -> m4_60  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_57 -> m4_61  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_57 -> m4_63  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_57 -> m4_64  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_57 -> m4_65  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_57 -> m4_67  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_57 -> m4_68  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_57 -> m4_69  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_57 -> m4_71  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_57 -> m4_72  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_57 -> m4_73  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_57 -> m4_75  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_57 -> m4_76  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_57 -> m4_77  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_57 -> m4_79  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_57 -> m4_80  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_57 -> m4_81  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_57 -> m4_58  [key=0, style=solid];
m4_57 -> m4_62  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_57 -> m4_66  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_57 -> m4_70  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_57 -> m4_74  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_57 -> m4_78  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_30 -> m4_31  [key=0, style=solid];
m4_30 -> m4_23  [key=2, style=dotted];
m4_30 -> m4_24  [key=2, style=dotted];
m4_34 -> m4_35  [key=0, style=solid];
m4_34 -> m4_23  [key=2, style=dotted];
m4_34 -> m4_24  [key=2, style=dotted];
m4_38 -> m4_39  [key=0, style=solid];
m4_40 -> m4_41  [key=0, style=solid];
m4_40 -> m4_23  [key=2, style=dotted];
m4_40 -> m4_24  [key=2, style=dotted];
m4_44 -> m4_45  [key=0, style=solid];
m4_44 -> m4_23  [key=2, style=dotted];
m4_44 -> m4_24  [key=2, style=dotted];
m4_48 -> m4_49  [key=0, style=solid];
m4_48 -> m4_23  [key=2, style=dotted];
m4_48 -> m4_24  [key=2, style=dotted];
m4_52 -> m4_53  [key=0, style=solid];
m4_52 -> m4_23  [key=2, style=dotted];
m4_52 -> m4_24  [key=2, style=dotted];
m4_56 -> m4_57  [key=0, style=solid];
m4_58 -> m4_59  [key=0, style=solid];
m4_58 -> m4_23  [key=2, style=dotted];
m4_58 -> m4_24  [key=2, style=dotted];
m4_62 -> m4_63  [key=0, style=solid];
m4_62 -> m4_23  [key=2, style=dotted];
m4_62 -> m4_24  [key=2, style=dotted];
m4_66 -> m4_67  [key=0, style=solid];
m4_66 -> m4_23  [key=2, style=dotted];
m4_66 -> m4_24  [key=2, style=dotted];
m4_70 -> m4_71  [key=0, style=solid];
m4_70 -> m4_23  [key=2, style=dotted];
m4_70 -> m4_24  [key=2, style=dotted];
m4_74 -> m4_75  [key=0, style=solid];
m4_74 -> m4_23  [key=2, style=dotted];
m4_74 -> m4_24  [key=2, style=dotted];
m4_78 -> m4_79  [key=0, style=solid];
m4_78 -> m4_23  [key=2, style=dotted];
m4_78 -> m4_24  [key=2, style=dotted];
m4_28 -> m4_29  [key=0, style=solid];
m4_82 -> m4_27  [color=blue, key=0, style=bold];
m4_177 -> m4_178  [key=0, style=solid];
m4_181 -> m4_25  [key=2, style=dotted];
m4_181 -> m4_182  [key=0, style=solid];
m4_187 -> m4_25  [key=2, style=dotted];
m4_187 -> m4_188  [key=0, style=solid];
m4_179 -> m4_21  [key=2, style=dotted];
m4_179 -> m4_22  [key=2, style=dotted];
m4_179 -> m4_181  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_179 -> m4_187  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_179 -> m4_180  [key=0, style=solid];
m4_179 -> m4_182  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_179 -> m4_191  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_179 -> m4_183  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_179 -> m4_194  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_179 -> m4_184  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_179 -> m4_197  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_179 -> m4_185  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_179 -> m4_200  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_179 -> m4_186  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_179 -> m4_188  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_180 -> m4_181  [key=0, style=solid];
m4_180 -> m4_23  [key=2, style=dotted];
m4_180 -> m4_24  [key=2, style=dotted];
m4_182 -> m4_183  [key=0, style=solid];
m4_182 -> m4_172  [key=2, style=dotted];
m4_182 -> m4_190  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_186 -> m4_187  [key=0, style=solid];
m4_186 -> m4_23  [key=2, style=dotted];
m4_186 -> m4_24  [key=2, style=dotted];
m4_188 -> m4_23  [key=2, style=dotted];
m4_188 -> m4_189  [key=0, style=solid];
m4_188 -> m4_158  [key=2, style=dotted];
m4_178 -> m4_179  [key=0, style=solid];
m4_183 -> m4_184  [key=0, style=solid];
m4_183 -> m4_172  [key=2, style=dotted];
m4_183 -> m4_193  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_184 -> m4_185  [key=0, style=solid];
m4_184 -> m4_172  [key=2, style=dotted];
m4_184 -> m4_196  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_185 -> m4_186  [key=0, style=solid];
m4_185 -> m4_172  [key=2, style=dotted];
m4_185 -> m4_199  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_189 -> m4_177  [color=blue, key=0, style=bold];
m4_1780 -> m4_1781  [key=0, style=solid];
m4_1782 -> m4_21  [key=2, style=dotted];
m4_1782 -> m4_22  [key=2, style=dotted];
m4_1782 -> m4_1783  [key=0, style=solid];
m4_1782 -> m4_1784  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1782 -> m4_1785  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1781 -> m4_1782  [key=0, style=solid];
m4_1783 -> m4_23  [key=2, style=dotted];
m4_1783 -> m4_24  [key=2, style=dotted];
m4_1783 -> m4_1784  [key=0, style=solid];
m4_1784 -> m4_23  [key=2, style=dotted];
m4_1784 -> m4_24  [key=2, style=dotted];
m4_1784 -> m4_1785  [key=0, style=solid];
m4_1785 -> m4_23  [key=2, style=dotted];
m4_1785 -> m4_1786  [key=0, style=solid];
m4_1785 -> m4_158  [key=2, style=dotted];
m4_1786 -> m4_1780  [color=blue, key=0, style=bold];
m4_825 -> m4_826  [key=0, style=solid];
m4_826 -> m4_21  [key=2, style=dotted];
m4_826 -> m4_22  [key=2, style=dotted];
m4_826 -> m4_827  [key=0, style=solid];
m4_826 -> m4_830  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_827 -> m4_828  [key=0, style=solid];
m4_827 -> m4_172  [key=2, style=dotted];
m4_827 -> m4_829  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_828 -> m4_825  [color=blue, key=0, style=bold];
m4_290 -> m4_291  [key=0, style=solid];
m4_295 -> m4_25  [key=2, style=dotted];
m4_295 -> m4_296  [key=0, style=solid];
m4_292 -> m4_21  [key=2, style=dotted];
m4_292 -> m4_22  [key=2, style=dotted];
m4_292 -> m4_295  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_292 -> m4_293  [key=0, style=solid];
m4_292 -> m4_294  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_292 -> m4_296  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_292 -> m4_299  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_294 -> m4_295  [key=0, style=solid];
m4_294 -> m4_23  [key=2, style=dotted];
m4_294 -> m4_24  [key=2, style=dotted];
m4_296 -> m4_297  [key=0, style=solid];
m4_296 -> m4_172  [key=2, style=dotted];
m4_296 -> m4_298  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_291 -> m4_292  [key=0, style=solid];
m4_293 -> m4_294  [key=0, style=solid];
m4_297 -> m4_290  [color=blue, key=0, style=bold];
m4_633 -> m4_634  [key=0, style=solid];
m4_637 -> m4_25  [key=2, style=dotted];
m4_637 -> m4_638  [key=0, style=solid];
m4_639 -> m4_25  [key=2, style=dotted];
m4_639 -> m4_640  [key=0, style=solid];
m4_641 -> m4_25  [key=2, style=dotted];
m4_641 -> m4_642  [key=0, style=solid];
m4_643 -> m4_25  [key=2, style=dotted];
m4_643 -> m4_644  [key=0, style=solid];
m4_645 -> m4_25  [key=2, style=dotted];
m4_645 -> m4_646  [key=0, style=solid];
m4_647 -> m4_25  [key=2, style=dotted];
m4_647 -> m4_648  [key=0, style=solid];
m4_649 -> m4_25  [key=2, style=dotted];
m4_649 -> m4_650  [key=0, style=solid];
m4_651 -> m4_25  [key=2, style=dotted];
m4_651 -> m4_652  [key=0, style=solid];
m4_653 -> m4_25  [key=2, style=dotted];
m4_653 -> m4_654  [key=0, style=solid];
m4_655 -> m4_25  [key=2, style=dotted];
m4_655 -> m4_656  [key=0, style=solid];
m4_655 -> m4_660  [color=darkorchid, key=3, label="Property variable string Message", style=bold];
m4_657 -> m4_25  [key=2, style=dotted];
m4_657 -> m4_658  [key=0, style=solid];
m4_658 -> m4_25  [key=2, style=dotted];
m4_658 -> m4_659  [key=0, style=solid];
m4_660 -> m4_25  [key=2, style=dotted];
m4_660 -> m4_661  [key=0, style=solid];
m4_661 -> m4_25  [key=2, style=dotted];
m4_661 -> m4_662  [key=0, style=solid];
m4_635 -> m4_21  [key=2, style=dotted];
m4_635 -> m4_637  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_635 -> m4_639  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_635 -> m4_641  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_635 -> m4_643  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_635 -> m4_645  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_635 -> m4_647  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_635 -> m4_649  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_635 -> m4_651  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_635 -> m4_653  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_635 -> m4_655  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_635 -> m4_657  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_635 -> m4_658  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_635 -> m4_660  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_635 -> m4_661  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_635 -> m4_636  [key=0, style=solid];
m4_635 -> m4_358  [key=2, style=dotted];
m4_635 -> m4_396  [key=2, style=dotted];
m4_635 -> m4_397  [key=2, style=dotted];
m4_635 -> m4_638  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_635 -> m4_640  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_635 -> m4_642  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_635 -> m4_644  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_635 -> m4_646  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_635 -> m4_648  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_635 -> m4_650  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_635 -> m4_652  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_635 -> m4_654  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_635 -> m4_656  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_635 -> m4_659  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_635 -> m4_662  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_636 -> m4_637  [key=0, style=solid];
m4_636 -> m4_23  [key=2, style=dotted];
m4_636 -> m4_24  [key=2, style=dotted];
m4_638 -> m4_639  [key=0, style=solid];
m4_638 -> m4_23  [key=2, style=dotted];
m4_638 -> m4_24  [key=2, style=dotted];
m4_640 -> m4_641  [key=0, style=solid];
m4_640 -> m4_23  [key=2, style=dotted];
m4_640 -> m4_24  [key=2, style=dotted];
m4_642 -> m4_643  [key=0, style=solid];
m4_642 -> m4_23  [key=2, style=dotted];
m4_642 -> m4_24  [key=2, style=dotted];
m4_644 -> m4_645  [key=0, style=solid];
m4_644 -> m4_23  [key=2, style=dotted];
m4_644 -> m4_24  [key=2, style=dotted];
m4_646 -> m4_647  [key=0, style=solid];
m4_646 -> m4_23  [key=2, style=dotted];
m4_646 -> m4_24  [key=2, style=dotted];
m4_648 -> m4_649  [key=0, style=solid];
m4_648 -> m4_23  [key=2, style=dotted];
m4_648 -> m4_24  [key=2, style=dotted];
m4_650 -> m4_651  [key=0, style=solid];
m4_650 -> m4_23  [key=2, style=dotted];
m4_650 -> m4_24  [key=2, style=dotted];
m4_652 -> m4_653  [key=0, style=solid];
m4_652 -> m4_23  [key=2, style=dotted];
m4_652 -> m4_24  [key=2, style=dotted];
m4_654 -> m4_655  [key=0, style=solid];
m4_654 -> m4_23  [key=2, style=dotted];
m4_654 -> m4_24  [key=2, style=dotted];
m4_656 -> m4_657  [key=0, style=solid];
m4_656 -> m4_23  [key=2, style=dotted];
m4_656 -> m4_24  [key=2, style=dotted];
m4_659 -> m4_660  [key=0, style=solid];
m4_659 -> m4_23  [key=2, style=dotted];
m4_659 -> m4_24  [key=2, style=dotted];
m4_662 -> m4_23  [key=2, style=dotted];
m4_662 -> m4_663  [key=0, style=solid];
m4_662 -> m4_158  [key=2, style=dotted];
m4_634 -> m4_635  [key=0, style=solid];
m4_663 -> m4_633  [color=blue, key=0, style=bold];
m4_248 -> m4_249  [key=0, style=solid];
m4_252 -> m4_25  [key=2, style=dotted];
m4_252 -> m4_253  [key=0, style=solid];
m4_254 -> m4_25  [key=2, style=dotted];
m4_254 -> m4_255  [key=0, style=solid];
m4_256 -> m4_25  [key=2, style=dotted];
m4_256 -> m4_257  [key=0, style=solid];
m4_258 -> m4_25  [key=2, style=dotted];
m4_258 -> m4_259  [key=0, style=solid];
m4_250 -> m4_21  [key=2, style=dotted];
m4_250 -> m4_22  [key=2, style=dotted];
m4_250 -> m4_252  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_250 -> m4_254  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_250 -> m4_256  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_250 -> m4_258  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_250 -> m4_251  [key=0, style=solid];
m4_250 -> m4_253  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_250 -> m4_255  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_250 -> m4_257  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_250 -> m4_259  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_250 -> m4_262  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_251 -> m4_252  [key=0, style=solid];
m4_251 -> m4_23  [key=2, style=dotted];
m4_251 -> m4_24  [key=2, style=dotted];
m4_253 -> m4_254  [key=0, style=solid];
m4_253 -> m4_23  [key=2, style=dotted];
m4_253 -> m4_24  [key=2, style=dotted];
m4_255 -> m4_256  [key=0, style=solid];
m4_255 -> m4_23  [key=2, style=dotted];
m4_255 -> m4_24  [key=2, style=dotted];
m4_257 -> m4_258  [key=0, style=solid];
m4_257 -> m4_23  [key=2, style=dotted];
m4_257 -> m4_24  [key=2, style=dotted];
m4_259 -> m4_260  [key=0, style=solid];
m4_259 -> m4_172  [key=2, style=dotted];
m4_259 -> m4_261  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_249 -> m4_250  [key=0, style=solid];
m4_260 -> m4_248  [color=blue, key=0, style=bold];
m4_996 -> m4_997  [key=0, style=solid];
m4_998 -> m4_21  [key=2, style=dotted];
m4_998 -> m4_22  [key=2, style=dotted];
m4_998 -> m4_999  [key=0, style=solid];
m4_997 -> m4_998  [key=0, style=solid];
m4_999 -> m4_23  [key=2, style=dotted];
m4_999 -> m4_999  [key=0, style=solid];
m4_999 -> m4_1000  [key=0, style=solid];
m4_1000 -> m4_996  [color=blue, key=0, style=bold];
m4_1803 -> m4_1804  [key=0, style=solid];
m4_1805 -> m4_21  [key=2, style=dotted];
m4_1805 -> m4_22  [key=2, style=dotted];
m4_1805 -> m4_1806  [key=0, style=solid];
m4_1805 -> m4_1807  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1805 -> m4_1808  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1805 -> m4_1809  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1804 -> m4_1805  [key=0, style=solid];
m4_1806 -> m4_23  [key=2, style=dotted];
m4_1806 -> m4_24  [key=2, style=dotted];
m4_1806 -> m4_1807  [key=0, style=solid];
m4_1807 -> m4_23  [key=2, style=dotted];
m4_1807 -> m4_24  [key=2, style=dotted];
m4_1807 -> m4_1808  [key=0, style=solid];
m4_1808 -> m4_23  [key=2, style=dotted];
m4_1808 -> m4_24  [key=2, style=dotted];
m4_1808 -> m4_1809  [key=0, style=solid];
m4_1809 -> m4_23  [key=2, style=dotted];
m4_1809 -> m4_1810  [key=0, style=solid];
m4_1809 -> m4_158  [key=2, style=dotted];
m4_1810 -> m4_1803  [color=blue, key=0, style=bold];
m4_2391 -> m4_2392  [key=0, style=solid];
m4_2393 -> m4_21  [key=2, style=dotted];
m4_2393 -> m4_22  [key=2, style=dotted];
m4_2393 -> m4_2394  [key=0, style=solid];
m4_2393 -> m4_2397  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2392 -> m4_2393  [key=0, style=solid];
m4_2394 -> m4_2395  [key=0, style=solid];
m4_2394 -> m4_172  [key=2, style=dotted];
m4_2394 -> m4_2396  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_2395 -> m4_2391  [color=blue, key=0, style=bold];
m4_1629 -> m4_1630  [key=0, style=solid];
m4_1630 -> m4_21  [key=2, style=dotted];
m4_1630 -> m4_22  [key=2, style=dotted];
m4_1630 -> m4_1631  [key=0, style=solid];
m4_1630 -> m4_1634  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1631 -> m4_1632  [key=0, style=solid];
m4_1631 -> m4_172  [key=2, style=dotted];
m4_1631 -> m4_1633  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1632 -> m4_1629  [color=blue, key=0, style=bold];
m4_586 -> m4_587  [key=0, style=solid];
m4_587 -> m4_589  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_587 -> m4_172  [key=2, style=dotted];
m4_587 -> m4_588  [key=0, style=solid];
m4_588 -> m4_586  [color=blue, key=0, style=bold];
m4_865 -> m4_866  [key=0, style=solid];
m4_869 -> m4_25  [key=2, style=dotted];
m4_869 -> m4_870  [key=0, style=solid];
m4_866 -> m4_21  [key=2, style=dotted];
m4_866 -> m4_22  [key=2, style=dotted];
m4_866 -> m4_869  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_866 -> m4_867  [key=0, style=solid];
m4_866 -> m4_868  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_868 -> m4_869  [key=0, style=solid];
m4_868 -> m4_846  [key=2, style=dotted];
m4_868 -> m4_871  [key=2, style=dotted];
m4_867 -> m4_24  [key=2, style=dotted];
m4_867 -> m4_868  [key=0, style=solid];
m4_867 -> m4_378  [key=2, style=dotted];
m4_870 -> m4_865  [color=blue, key=0, style=bold];
m4_424 -> m4_425  [key=0, style=solid];
m4_426 -> m4_21  [key=2, style=dotted];
m4_426 -> m4_22  [key=2, style=dotted];
m4_426 -> m4_427  [key=0, style=solid];
m4_425 -> m4_426  [key=0, style=solid];
m4_427 -> m4_23  [key=2, style=dotted];
m4_427 -> m4_427  [key=0, style=solid];
m4_427 -> m4_428  [key=0, style=solid];
m4_428 -> m4_424  [color=blue, key=0, style=bold];
m4_1045 -> m4_1046  [key=0, style=solid];
m4_1048 -> m4_25  [key=2, style=dotted];
m4_1048 -> m4_1049  [key=0, style=solid];
m4_1048 -> m4_244  [key=2, style=dotted];
m4_1050 -> m4_25  [key=2, style=dotted];
m4_1050 -> m4_1051  [key=0, style=solid];
m4_1050 -> m4_244  [key=2, style=dotted];
m4_1052 -> m4_25  [key=2, style=dotted];
m4_1052 -> m4_1053  [key=0, style=solid];
m4_1052 -> m4_244  [key=2, style=dotted];
m4_1054 -> m4_25  [key=2, style=dotted];
m4_1054 -> m4_1055  [key=0, style=solid];
m4_1054 -> m4_244  [key=2, style=dotted];
m4_1061 -> m4_25  [key=2, style=dotted];
m4_1061 -> m4_1062  [key=0, style=solid];
m4_1061 -> m4_244  [key=2, style=dotted];
m4_1063 -> m4_25  [key=2, style=dotted];
m4_1063 -> m4_1064  [key=0, style=solid];
m4_1063 -> m4_244  [key=2, style=dotted];
m4_1047 -> m4_21  [key=2, style=dotted];
m4_1047 -> m4_22  [key=2, style=dotted];
m4_1047 -> m4_1048  [key=0, style=solid];
m4_1049 -> m4_21  [key=2, style=dotted];
m4_1049 -> m4_22  [key=2, style=dotted];
m4_1049 -> m4_1050  [key=0, style=solid];
m4_1051 -> m4_21  [key=2, style=dotted];
m4_1051 -> m4_22  [key=2, style=dotted];
m4_1051 -> m4_1052  [key=0, style=solid];
m4_1053 -> m4_21  [key=2, style=dotted];
m4_1053 -> m4_22  [key=2, style=dotted];
m4_1053 -> m4_1054  [key=0, style=solid];
m4_1055 -> m4_21  [key=2, style=dotted];
m4_1055 -> m4_22  [key=2, style=dotted];
m4_1055 -> m4_1056  [key=0, style=solid];
m4_1055 -> m4_1068  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1057 -> m4_21  [key=2, style=dotted];
m4_1057 -> m4_22  [key=2, style=dotted];
m4_1057 -> m4_1058  [key=0, style=solid];
m4_1057 -> m4_1059  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1057 -> m4_1071  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1060 -> m4_21  [key=2, style=dotted];
m4_1060 -> m4_22  [key=2, style=dotted];
m4_1060 -> m4_1061  [key=0, style=solid];
m4_1062 -> m4_21  [key=2, style=dotted];
m4_1062 -> m4_22  [key=2, style=dotted];
m4_1062 -> m4_1063  [key=0, style=solid];
m4_1064 -> m4_21  [key=2, style=dotted];
m4_1064 -> m4_22  [key=2, style=dotted];
m4_1064 -> m4_1065  [key=0, style=solid];
m4_1064 -> m4_1074  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1046 -> m4_1047  [key=0, style=solid];
m4_1056 -> m4_1057  [key=0, style=solid];
m4_1056 -> m4_172  [key=2, style=dotted];
m4_1056 -> m4_1067  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1058 -> m4_1059  [key=0, style=solid];
m4_1059 -> m4_1060  [key=0, style=solid];
m4_1059 -> m4_172  [key=2, style=dotted];
m4_1059 -> m4_1070  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1065 -> m4_1066  [key=0, style=solid];
m4_1065 -> m4_172  [key=2, style=dotted];
m4_1065 -> m4_1073  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1066 -> m4_1045  [color=blue, key=0, style=bold];
m4_437 -> m4_438  [key=0, style=solid];
m4_441 -> m4_25  [key=2, style=dotted];
m4_441 -> m4_442  [key=0, style=solid];
m4_442 -> m4_25  [key=2, style=dotted];
m4_442 -> m4_443  [key=0, style=solid];
m4_443 -> m4_25  [key=2, style=dotted];
m4_443 -> m4_444  [key=0, style=solid];
m4_445 -> m4_25  [key=2, style=dotted];
m4_445 -> m4_446  [key=0, style=solid];
m4_446 -> m4_25  [key=2, style=dotted];
m4_446 -> m4_447  [key=0, style=solid];
m4_447 -> m4_25  [key=2, style=dotted];
m4_447 -> m4_448  [key=0, style=solid];
m4_449 -> m4_25  [key=2, style=dotted];
m4_449 -> m4_450  [key=0, style=solid];
m4_450 -> m4_25  [key=2, style=dotted];
m4_450 -> m4_451  [key=0, style=solid];
m4_451 -> m4_25  [key=2, style=dotted];
m4_451 -> m4_452  [key=0, style=solid];
m4_452 -> m4_25  [key=2, style=dotted];
m4_452 -> m4_453  [key=0, style=solid];
m4_454 -> m4_25  [key=2, style=dotted];
m4_454 -> m4_455  [key=0, style=solid];
m4_455 -> m4_25  [key=2, style=dotted];
m4_455 -> m4_456  [key=0, style=solid];
m4_456 -> m4_25  [key=2, style=dotted];
m4_456 -> m4_457  [key=0, style=solid];
m4_457 -> m4_25  [key=2, style=dotted];
m4_457 -> m4_458  [key=0, style=solid];
m4_459 -> m4_25  [key=2, style=dotted];
m4_459 -> m4_460  [key=0, style=solid];
m4_460 -> m4_25  [key=2, style=dotted];
m4_460 -> m4_461  [key=0, style=solid];
m4_461 -> m4_25  [key=2, style=dotted];
m4_461 -> m4_462  [key=0, style=solid];
m4_462 -> m4_25  [key=2, style=dotted];
m4_462 -> m4_463  [key=0, style=solid];
m4_464 -> m4_25  [key=2, style=dotted];
m4_464 -> m4_465  [key=0, style=solid];
m4_465 -> m4_25  [key=2, style=dotted];
m4_465 -> m4_466  [key=0, style=solid];
m4_466 -> m4_25  [key=2, style=dotted];
m4_466 -> m4_467  [key=0, style=solid];
m4_468 -> m4_25  [key=2, style=dotted];
m4_468 -> m4_469  [key=0, style=solid];
m4_469 -> m4_25  [key=2, style=dotted];
m4_469 -> m4_470  [key=0, style=solid];
m4_470 -> m4_25  [key=2, style=dotted];
m4_470 -> m4_471  [key=0, style=solid];
m4_471 -> m4_25  [key=2, style=dotted];
m4_471 -> m4_472  [key=0, style=solid];
m4_472 -> m4_25  [key=2, style=dotted];
m4_472 -> m4_473  [key=0, style=solid];
m4_474 -> m4_25  [key=2, style=dotted];
m4_474 -> m4_475  [key=0, style=solid];
m4_475 -> m4_25  [key=2, style=dotted];
m4_475 -> m4_476  [key=0, style=solid];
m4_476 -> m4_25  [key=2, style=dotted];
m4_476 -> m4_477  [key=0, style=solid];
m4_477 -> m4_25  [key=2, style=dotted];
m4_477 -> m4_478  [key=0, style=solid];
m4_478 -> m4_25  [key=2, style=dotted];
m4_478 -> m4_472  [color=darkorchid, key=3, label="Property variable System.Collections.Generic.ICollection<Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqSection> FullSections", style=bold];
m4_478 -> m4_479  [key=0, style=solid];
m4_480 -> m4_25  [key=2, style=dotted];
m4_480 -> m4_481  [key=0, style=solid];
m4_481 -> m4_25  [key=2, style=dotted];
m4_481 -> m4_482  [key=0, style=solid];
m4_482 -> m4_25  [key=2, style=dotted];
m4_482 -> m4_483  [key=0, style=solid];
m4_484 -> m4_25  [key=2, style=dotted];
m4_484 -> m4_485  [key=0, style=solid];
m4_485 -> m4_25  [key=2, style=dotted];
m4_485 -> m4_486  [key=0, style=solid];
m4_486 -> m4_25  [key=2, style=dotted];
m4_486 -> m4_487  [key=0, style=solid];
m4_440 -> m4_21  [key=2, style=dotted];
m4_440 -> m4_441  [key=0, style=solid];
m4_440 -> m4_442  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_443  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_445  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_446  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_447  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_449  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_450  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_451  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_452  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_454  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_455  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_456  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_457  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_459  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_460  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_461  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_462  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_464  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_465  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_466  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_468  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_469  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_470  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_471  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_472  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_474  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_475  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_476  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_477  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_478  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_480  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_481  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_482  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_484  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_485  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_486  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_444  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_448  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_453  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_458  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_463  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_467  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_473  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_479  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_483  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_440 -> m4_487  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_439 -> m4_22  [key=2, style=dotted];
m4_439 -> m4_440  [key=0, style=solid];
m4_444 -> m4_445  [key=0, style=solid];
m4_444 -> m4_23  [key=2, style=dotted];
m4_448 -> m4_449  [key=0, style=solid];
m4_448 -> m4_23  [key=2, style=dotted];
m4_453 -> m4_454  [key=0, style=solid];
m4_453 -> m4_23  [key=2, style=dotted];
m4_458 -> m4_459  [key=0, style=solid];
m4_458 -> m4_23  [key=2, style=dotted];
m4_463 -> m4_464  [key=0, style=solid];
m4_463 -> m4_23  [key=2, style=dotted];
m4_467 -> m4_468  [key=0, style=solid];
m4_467 -> m4_23  [key=2, style=dotted];
m4_473 -> m4_474  [key=0, style=solid];
m4_473 -> m4_23  [key=2, style=dotted];
m4_479 -> m4_480  [key=0, style=solid];
m4_479 -> m4_23  [key=2, style=dotted];
m4_483 -> m4_484  [key=0, style=solid];
m4_483 -> m4_23  [key=2, style=dotted];
m4_487 -> m4_23  [key=2, style=dotted];
m4_487 -> m4_488  [key=0, style=solid];
m4_487 -> m4_158  [key=2, style=dotted];
m4_438 -> m4_439  [key=0, style=solid];
m4_488 -> m4_437  [color=blue, key=0, style=bold];
m4_398 -> m4_399  [key=0, style=solid];
m4_400 -> m4_21  [key=2, style=dotted];
m4_400 -> m4_22  [key=2, style=dotted];
m4_400 -> m4_401  [key=0, style=solid];
m4_400 -> m4_404  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_399 -> m4_400  [key=0, style=solid];
m4_401 -> m4_415  [color=darkorchid, key=3, label="Property variable System.Version IgnoredProperty", style=bold];
m4_401 -> m4_402  [key=0, style=solid];
m4_401 -> m4_172  [key=2, style=dotted];
m4_401 -> m4_403  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_402 -> m4_398  [color=blue, key=0, style=bold];
m4_1643 -> m4_1644  [key=0, style=solid];
m4_1644 -> m4_21  [key=2, style=dotted];
m4_1644 -> m4_22  [key=2, style=dotted];
m4_1644 -> m4_1645  [key=0, style=solid];
m4_1644 -> m4_1648  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1645 -> m4_1646  [key=0, style=solid];
m4_1645 -> m4_172  [key=2, style=dotted];
m4_1645 -> m4_1647  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1646 -> m4_1643  [color=blue, key=0, style=bold];
m4_1664 -> m4_1665  [key=0, style=solid];
m4_1669 -> m4_25  [key=2, style=dotted];
m4_1669 -> m4_1670  [key=0, style=solid];
m4_1671 -> m4_25  [key=2, style=dotted];
m4_1671 -> m4_1672  [key=0, style=solid];
m4_1673 -> m4_25  [key=2, style=dotted];
m4_1673 -> m4_1674  [key=0, style=solid];
m4_1674 -> m4_25  [key=2, style=dotted];
m4_1674 -> m4_1675  [key=0, style=solid];
m4_1677 -> m4_25  [key=2, style=dotted];
m4_1677 -> m4_1678  [key=0, style=solid];
m4_1675 -> m4_25  [key=2, style=dotted];
m4_1675 -> m4_1676  [key=0, style=solid];
m4_1666 -> m4_21  [key=2, style=dotted];
m4_1666 -> m4_22  [key=2, style=dotted];
m4_1666 -> m4_1669  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1666 -> m4_1671  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1666 -> m4_1673  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1666 -> m4_1674  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1666 -> m4_1677  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1666 -> m4_1667  [key=0, style=solid];
m4_1666 -> m4_1668  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1666 -> m4_1670  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1666 -> m4_1672  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1666 -> m4_1676  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1668 -> m4_1669  [key=0, style=solid];
m4_1668 -> m4_23  [key=2, style=dotted];
m4_1668 -> m4_24  [key=2, style=dotted];
m4_1670 -> m4_1671  [key=0, style=solid];
m4_1670 -> m4_23  [key=2, style=dotted];
m4_1670 -> m4_24  [key=2, style=dotted];
m4_1672 -> m4_1673  [key=0, style=solid];
m4_1672 -> m4_1675  [color=darkseagreen4, key=1, label=d, style=dashed];
m4_1672 -> m4_244  [key=2, style=dotted];
m4_1676 -> m4_1677  [key=0, style=solid];
m4_1676 -> m4_23  [key=2, style=dotted];
m4_1676 -> m4_24  [key=2, style=dotted];
m4_1665 -> m4_1666  [key=0, style=solid];
m4_1667 -> m4_1668  [key=0, style=solid];
m4_1667 -> m4_1574  [key=2, style=dotted];
m4_1678 -> m4_1664  [color=blue, key=0, style=bold];
m4_1679 -> m4_1680  [key=0, style=solid];
m4_1687 -> m4_25  [key=2, style=dotted];
m4_1687 -> m4_1688  [key=0, style=solid];
m4_1687 -> m4_1689  [key=2, style=dotted];
m4_1681 -> m4_21  [key=2, style=dotted];
m4_1681 -> m4_22  [key=2, style=dotted];
m4_1681 -> m4_1687  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1681 -> m4_1682  [key=0, style=solid];
m4_1681 -> m4_1684  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1681 -> m4_1686  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1686 -> m4_1687  [key=0, style=solid];
m4_1686 -> m4_23  [key=2, style=dotted];
m4_1686 -> m4_24  [key=2, style=dotted];
m4_1680 -> m4_1681  [key=0, style=solid];
m4_1682 -> m4_1683  [key=0, style=solid];
m4_1682 -> m4_1685  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_1684 -> m4_23  [key=2, style=dotted];
m4_1684 -> m4_1685  [key=0, style=solid];
m4_1683 -> m4_1686  [key=0, style=solid];
m4_1683 -> m4_1684  [key=0, style=solid];
m4_1685 -> m4_1683  [key=0, style=solid];
m4_1685 -> m4_1685  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_1688 -> m4_1679  [color=blue, key=0, style=bold];
m4_2510 -> m4_2511  [key=0, style=solid];
m4_2514 -> m4_25  [key=2, style=dotted];
m4_2514 -> m4_2515  [key=0, style=solid];
m4_2516 -> m4_25  [key=2, style=dotted];
m4_2516 -> m4_2517  [key=0, style=solid];
m4_2518 -> m4_25  [key=2, style=dotted];
m4_2518 -> m4_2519  [key=0, style=solid];
m4_2520 -> m4_25  [key=2, style=dotted];
m4_2520 -> m4_2520  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m4_2520 -> m4_2521  [key=0, style=solid];
m4_2522 -> m4_25  [key=2, style=dotted];
m4_2522 -> m4_2523  [key=0, style=solid];
m4_2524 -> m4_25  [key=2, style=dotted];
m4_2524 -> m4_2525  [key=0, style=solid];
m4_2526 -> m4_25  [key=2, style=dotted];
m4_2526 -> m4_2527  [key=0, style=solid];
m4_2528 -> m4_25  [key=2, style=dotted];
m4_2528 -> m4_2529  [key=0, style=solid];
m4_2530 -> m4_25  [key=2, style=dotted];
m4_2530 -> m4_2531  [key=0, style=solid];
m4_2532 -> m4_25  [key=2, style=dotted];
m4_2532 -> m4_2533  [key=0, style=solid];
m4_2534 -> m4_25  [key=2, style=dotted];
m4_2534 -> m4_2535  [key=0, style=solid];
m4_2536 -> m4_25  [key=2, style=dotted];
m4_2536 -> m4_2537  [key=0, style=solid];
m4_2512 -> m4_21  [key=2, style=dotted];
m4_2512 -> m4_22  [key=2, style=dotted];
m4_2512 -> m4_2514  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2512 -> m4_2516  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2512 -> m4_2518  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2512 -> m4_2520  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2512 -> m4_2522  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2512 -> m4_2524  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2512 -> m4_2526  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2512 -> m4_2528  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2512 -> m4_2530  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2512 -> m4_2532  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2512 -> m4_2534  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2512 -> m4_2536  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2512 -> m4_2512  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m4_2512 -> m4_2513  [key=0, style=solid];
m4_2512 -> m4_2515  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2512 -> m4_2540  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2512 -> m4_2517  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2512 -> m4_2519  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2512 -> m4_2521  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2512 -> m4_2523  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2512 -> m4_2525  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2512 -> m4_2527  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2512 -> m4_2543  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2512 -> m4_2529  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2512 -> m4_2531  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2512 -> m4_2533  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2512 -> m4_2535  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2512 -> m4_2537  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2513 -> m4_2514  [key=0, style=solid];
m4_2513 -> m4_23  [key=2, style=dotted];
m4_2513 -> m4_24  [key=2, style=dotted];
m4_2515 -> m4_2516  [key=0, style=solid];
m4_2515 -> m4_1907  [key=2, style=dotted];
m4_2515 -> m4_2539  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_2517 -> m4_2518  [key=0, style=solid];
m4_2517 -> m4_23  [key=2, style=dotted];
m4_2517 -> m4_24  [key=2, style=dotted];
m4_2519 -> m4_2520  [key=0, style=solid];
m4_2519 -> m4_23  [key=2, style=dotted];
m4_2519 -> m4_24  [key=2, style=dotted];
m4_2521 -> m4_2522  [key=0, style=solid];
m4_2521 -> m4_23  [key=2, style=dotted];
m4_2521 -> m4_24  [key=2, style=dotted];
m4_2523 -> m4_2524  [key=0, style=solid];
m4_2523 -> m4_23  [key=2, style=dotted];
m4_2523 -> m4_24  [key=2, style=dotted];
m4_2525 -> m4_2526  [key=0, style=solid];
m4_2525 -> m4_23  [key=2, style=dotted];
m4_2525 -> m4_24  [key=2, style=dotted];
m4_2527 -> m4_2528  [key=0, style=solid];
m4_2527 -> m4_1907  [key=2, style=dotted];
m4_2527 -> m4_2542  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_2529 -> m4_2530  [key=0, style=solid];
m4_2529 -> m4_23  [key=2, style=dotted];
m4_2529 -> m4_24  [key=2, style=dotted];
m4_2531 -> m4_2532  [key=0, style=solid];
m4_2531 -> m4_23  [key=2, style=dotted];
m4_2531 -> m4_24  [key=2, style=dotted];
m4_2533 -> m4_2534  [key=0, style=solid];
m4_2533 -> m4_23  [key=2, style=dotted];
m4_2533 -> m4_24  [key=2, style=dotted];
m4_2535 -> m4_2536  [key=0, style=solid];
m4_2535 -> m4_23  [key=2, style=dotted];
m4_2535 -> m4_24  [key=2, style=dotted];
m4_2535 -> m4_2535  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m4_2537 -> m4_23  [key=2, style=dotted];
m4_2537 -> m4_2538  [key=0, style=solid];
m4_2537 -> m4_158  [key=2, style=dotted];
m4_2511 -> m4_2512  [key=0, style=solid];
m4_2538 -> m4_2510  [color=blue, key=0, style=bold];
m4_1636 -> m4_1637  [key=0, style=solid];
m4_1637 -> m4_21  [key=2, style=dotted];
m4_1637 -> m4_22  [key=2, style=dotted];
m4_1637 -> m4_1638  [key=0, style=solid];
m4_1637 -> m4_1641  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1638 -> m4_1639  [key=0, style=solid];
m4_1638 -> m4_172  [key=2, style=dotted];
m4_1638 -> m4_1640  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1639 -> m4_1636  [color=blue, key=0, style=bold];
m4_229 -> m4_230  [key=0, style=solid];
m4_231 -> m4_21  [key=2, style=dotted];
m4_231 -> m4_22  [key=2, style=dotted];
m4_231 -> m4_232  [key=0, style=solid];
m4_231 -> m4_239  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_233 -> m4_21  [key=2, style=dotted];
m4_233 -> m4_22  [key=2, style=dotted];
m4_233 -> m4_234  [key=0, style=solid];
m4_233 -> m4_242  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_235 -> m4_21  [key=2, style=dotted];
m4_235 -> m4_22  [key=2, style=dotted];
m4_235 -> m4_236  [key=0, style=solid];
m4_235 -> m4_246  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_230 -> m4_231  [key=0, style=solid];
m4_230 -> m4_233  [color=darkseagreen4, key=1, label=json, style=dashed];
m4_230 -> m4_235  [color=darkseagreen4, key=1, label=json, style=dashed];
m4_232 -> m4_233  [key=0, style=solid];
m4_232 -> m4_172  [key=2, style=dotted];
m4_232 -> m4_238  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_234 -> m4_235  [key=0, style=solid];
m4_234 -> m4_172  [key=2, style=dotted];
m4_234 -> m4_241  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_236 -> m4_237  [key=0, style=solid];
m4_236 -> m4_172  [key=2, style=dotted];
m4_236 -> m4_245  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_237 -> m4_229  [color=blue, key=0, style=bold];
m4_1414 -> m4_1415  [key=0, style=solid];
m4_1415 -> m4_21  [key=2, style=dotted];
m4_1415 -> m4_22  [key=2, style=dotted];
m4_1415 -> m4_1416  [key=0, style=solid];
m4_1415 -> m4_1419  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1416 -> m4_1417  [key=0, style=solid];
m4_1416 -> m4_172  [key=2, style=dotted];
m4_1416 -> m4_1418  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1417 -> m4_1414  [color=blue, key=0, style=bold];
m4_349 -> m4_350  [key=0, style=solid];
m4_351 -> m4_21  [key=2, style=dotted];
m4_351 -> m4_352  [key=0, style=solid];
m4_351 -> m4_358  [key=2, style=dotted];
m4_351 -> m4_353  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_350 -> m4_351  [key=0, style=solid];
m4_350 -> m4_356  [key=2, style=dotted];
m4_350 -> m4_357  [key=2, style=dotted];
m4_352 -> m4_23  [key=2, style=dotted];
m4_352 -> m4_353  [key=0, style=solid];
m4_353 -> m4_354  [key=0, style=solid];
m4_354 -> m4_355  [key=0, style=solid];
m4_355 -> m4_349  [color=blue, key=0, style=bold];
m4_1650 -> m4_1651  [key=0, style=solid];
m4_1654 -> m4_25  [key=2, style=dotted];
m4_1654 -> m4_1655  [key=0, style=solid];
m4_1656 -> m4_25  [key=2, style=dotted];
m4_1656 -> m4_1657  [key=0, style=solid];
m4_1658 -> m4_25  [key=2, style=dotted];
m4_1658 -> m4_1659  [key=0, style=solid];
m4_1659 -> m4_25  [key=2, style=dotted];
m4_1659 -> m4_1660  [key=0, style=solid];
m4_1662 -> m4_25  [key=2, style=dotted];
m4_1662 -> m4_1663  [key=0, style=solid];
m4_1660 -> m4_25  [key=2, style=dotted];
m4_1660 -> m4_1661  [key=0, style=solid];
m4_1652 -> m4_21  [key=2, style=dotted];
m4_1652 -> m4_22  [key=2, style=dotted];
m4_1652 -> m4_1654  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1652 -> m4_1656  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1652 -> m4_1658  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1652 -> m4_1659  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1652 -> m4_1662  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1652 -> m4_1653  [key=0, style=solid];
m4_1652 -> m4_1655  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1652 -> m4_1657  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1652 -> m4_1661  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1653 -> m4_1654  [key=0, style=solid];
m4_1653 -> m4_23  [key=2, style=dotted];
m4_1653 -> m4_24  [key=2, style=dotted];
m4_1655 -> m4_1656  [key=0, style=solid];
m4_1655 -> m4_23  [key=2, style=dotted];
m4_1655 -> m4_24  [key=2, style=dotted];
m4_1657 -> m4_1658  [key=0, style=solid];
m4_1657 -> m4_1660  [color=darkseagreen4, key=1, label=d, style=dashed];
m4_1657 -> m4_244  [key=2, style=dotted];
m4_1661 -> m4_1662  [key=0, style=solid];
m4_1661 -> m4_23  [key=2, style=dotted];
m4_1661 -> m4_24  [key=2, style=dotted];
m4_1651 -> m4_1652  [key=0, style=solid];
m4_1663 -> m4_1650  [color=blue, key=0, style=bold];
m4_1111 -> m4_1112  [key=0, style=solid];
m4_1146 -> m4_25  [key=2, style=dotted];
m4_1146 -> m4_1147  [key=0, style=solid];
m4_1146 -> m4_1159  [key=2, style=dotted];
m4_1141 -> m4_21  [key=2, style=dotted];
m4_1141 -> m4_22  [key=2, style=dotted];
m4_1141 -> m4_1142  [key=0, style=solid];
m4_1141 -> m4_1161  [key=2, style=dotted];
m4_1141 -> m4_1145  [color=darkseagreen4, key=1, label=jsonObject, style=dashed];
m4_1139 -> m4_1146  [color=darkseagreen4, key=1, label=json, style=dashed];
m4_1139 -> m4_1141  [color=darkseagreen4, key=1, label=json, style=dashed];
m4_1139 -> m4_1140  [key=0, style=solid];
m4_1139 -> m4_1159  [key=2, style=dotted];
m4_1145 -> m4_1146  [key=0, style=solid];
m4_1145 -> m4_1162  [key=2, style=dotted];
m4_1142 -> m4_1146  [color=darkseagreen4, key=1, label=sb, style=dashed];
m4_1142 -> m4_1143  [key=0, style=solid];
m4_1142 -> m4_1148  [key=2, style=dotted];
m4_1140 -> m4_1141  [key=0, style=solid];
m4_1140 -> m4_1145  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m4_1140 -> m4_1160  [key=2, style=dotted];
m4_1112 -> m4_1139  [color=darkseagreen4, key=1, label=sb, style=dashed];
m4_1112 -> m4_1113  [key=0, style=solid];
m4_1112 -> m4_1148  [key=2, style=dotted];
m4_1138 -> m4_1139  [key=0, style=solid];
m4_1138 -> m4_631  [key=2, style=dotted];
m4_1144 -> m4_1145  [key=0, style=solid];
m4_1144 -> m4_628  [key=2, style=dotted];
m4_1143 -> m4_1144  [key=0, style=solid];
m4_1143 -> m4_1149  [key=2, style=dotted];
m4_1113 -> m4_1114  [key=0, style=solid];
m4_1113 -> m4_1149  [key=2, style=dotted];
m4_1114 -> m4_1138  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m4_1114 -> m4_1115  [key=0, style=solid];
m4_1114 -> m4_628  [key=2, style=dotted];
m4_1114 -> m4_1116  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m4_1114 -> m4_1117  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m4_1114 -> m4_1118  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m4_1114 -> m4_1119  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m4_1114 -> m4_1120  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m4_1114 -> m4_1121  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m4_1114 -> m4_1122  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m4_1114 -> m4_1123  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m4_1114 -> m4_1126  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m4_1114 -> m4_1128  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m4_1114 -> m4_1129  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m4_1114 -> m4_1130  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m4_1114 -> m4_1131  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m4_1114 -> m4_1132  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m4_1114 -> m4_1133  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m4_1114 -> m4_1134  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m4_1114 -> m4_1135  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m4_1114 -> m4_1136  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m4_1114 -> m4_1137  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m4_1137 -> m4_1138  [key=0, style=solid];
m4_1137 -> m4_1158  [key=2, style=dotted];
m4_1115 -> m4_1116  [key=0, style=solid];
m4_1115 -> m4_1150  [key=2, style=dotted];
m4_1116 -> m4_1117  [key=0, style=solid];
m4_1116 -> m4_1151  [key=2, style=dotted];
m4_1117 -> m4_1118  [key=0, style=solid];
m4_1117 -> m4_1152  [key=2, style=dotted];
m4_1118 -> m4_1119  [key=0, style=solid];
m4_1118 -> m4_1153  [key=2, style=dotted];
m4_1119 -> m4_1120  [key=0, style=solid];
m4_1119 -> m4_1154  [key=2, style=dotted];
m4_1120 -> m4_1121  [key=0, style=solid];
m4_1120 -> m4_1153  [key=2, style=dotted];
m4_1121 -> m4_1122  [key=0, style=solid];
m4_1121 -> m4_1155  [key=2, style=dotted];
m4_1122 -> m4_1123  [key=0, style=solid];
m4_1122 -> m4_1153  [key=2, style=dotted];
m4_1123 -> m4_1124  [key=0, style=solid];
m4_1123 -> m4_1150  [key=2, style=dotted];
m4_1126 -> m4_1126  [color=darkorchid, key=3, label="Local variable string expectedJson", style=bold];
m4_1126 -> m4_1127  [key=0, style=solid];
m4_1126 -> m4_1154  [key=2, style=dotted];
m4_1128 -> m4_1129  [key=0, style=solid];
m4_1128 -> m4_1152  [key=2, style=dotted];
m4_1129 -> m4_1130  [key=0, style=solid];
m4_1129 -> m4_1153  [key=2, style=dotted];
m4_1130 -> m4_1131  [key=0, style=solid];
m4_1130 -> m4_1156  [key=2, style=dotted];
m4_1131 -> m4_1132  [key=0, style=solid];
m4_1131 -> m4_1157  [key=2, style=dotted];
m4_1132 -> m4_1133  [key=0, style=solid];
m4_1132 -> m4_1154  [key=2, style=dotted];
m4_1133 -> m4_631  [key=2, style=dotted];
m4_1133 -> m4_1134  [key=0, style=solid];
m4_1134 -> m4_1135  [key=0, style=solid];
m4_1134 -> m4_1157  [key=2, style=dotted];
m4_1135 -> m4_1136  [key=0, style=solid];
m4_1135 -> m4_1155  [key=2, style=dotted];
m4_1136 -> m4_1137  [key=0, style=solid];
m4_1136 -> m4_1158  [key=2, style=dotted];
m4_1124 -> m4_1126  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_1124 -> m4_1125  [key=0, style=solid];
m4_1124 -> m4_1127  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_1125 -> m4_1126  [key=0, style=solid];
m4_1125 -> m4_1128  [key=0, style=solid];
m4_1127 -> m4_1125  [key=0, style=solid];
m4_1127 -> m4_1127  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_1147 -> m4_1111  [color=blue, key=0, style=bold];
m4_2367 -> m4_2368  [key=0, style=solid];
m4_2369 -> m4_21  [key=2, style=dotted];
m4_2369 -> m4_22  [key=2, style=dotted];
m4_2369 -> m4_2370  [key=0, style=solid];
m4_2369 -> m4_2373  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2368 -> m4_2369  [key=0, style=solid];
m4_2370 -> m4_2371  [key=0, style=solid];
m4_2370 -> m4_172  [key=2, style=dotted];
m4_2370 -> m4_2372  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_2371 -> m4_2367  [color=blue, key=0, style=bold];
m4_2545 -> m4_2546  [key=0, style=solid];
m4_2550 -> m4_25  [key=2, style=dotted];
m4_2550 -> m4_2551  [key=0, style=solid];
m4_2552 -> m4_25  [key=2, style=dotted];
m4_2552 -> m4_2553  [key=0, style=solid];
m4_2553 -> m4_25  [key=2, style=dotted];
m4_2553 -> m4_2553  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m4_2553 -> m4_2554  [key=0, style=solid];
m4_2555 -> m4_25  [key=2, style=dotted];
m4_2555 -> m4_2556  [key=0, style=solid];
m4_2556 -> m4_25  [key=2, style=dotted];
m4_2556 -> m4_2557  [key=0, style=solid];
m4_2558 -> m4_25  [key=2, style=dotted];
m4_2558 -> m4_2559  [key=0, style=solid];
m4_2559 -> m4_25  [key=2, style=dotted];
m4_2559 -> m4_2560  [key=0, style=solid];
m4_2561 -> m4_25  [key=2, style=dotted];
m4_2561 -> m4_2562  [key=0, style=solid];
m4_2562 -> m4_25  [key=2, style=dotted];
m4_2562 -> m4_2563  [key=0, style=solid];
m4_2564 -> m4_25  [key=2, style=dotted];
m4_2564 -> m4_2565  [key=0, style=solid];
m4_2565 -> m4_25  [key=2, style=dotted];
m4_2565 -> m4_2566  [key=0, style=solid];
m4_2567 -> m4_25  [key=2, style=dotted];
m4_2567 -> m4_2567  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m4_2567 -> m4_2568  [key=0, style=solid];
m4_2568 -> m4_25  [key=2, style=dotted];
m4_2568 -> m4_2569  [key=0, style=solid];
m4_2570 -> m4_25  [key=2, style=dotted];
m4_2570 -> m4_2571  [key=0, style=solid];
m4_2571 -> m4_25  [key=2, style=dotted];
m4_2571 -> m4_2572  [key=0, style=solid];
m4_2573 -> m4_25  [key=2, style=dotted];
m4_2573 -> m4_2574  [key=0, style=solid];
m4_2574 -> m4_25  [key=2, style=dotted];
m4_2574 -> m4_2575  [key=0, style=solid];
m4_2576 -> m4_25  [key=2, style=dotted];
m4_2576 -> m4_2577  [key=0, style=solid];
m4_2577 -> m4_25  [key=2, style=dotted];
m4_2577 -> m4_2578  [key=0, style=solid];
m4_2579 -> m4_25  [key=2, style=dotted];
m4_2579 -> m4_2580  [key=0, style=solid];
m4_2580 -> m4_25  [key=2, style=dotted];
m4_2580 -> m4_2581  [key=0, style=solid];
m4_2582 -> m4_25  [key=2, style=dotted];
m4_2582 -> m4_2583  [key=0, style=solid];
m4_2583 -> m4_25  [key=2, style=dotted];
m4_2583 -> m4_2567  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m4_2583 -> m4_2584  [key=0, style=solid];
m4_2547 -> m4_21  [key=2, style=dotted];
m4_2547 -> m4_2550  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2547 -> m4_2552  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2547 -> m4_2553  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2547 -> m4_2555  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2547 -> m4_2556  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2547 -> m4_2558  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2547 -> m4_2559  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2547 -> m4_2561  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2547 -> m4_2562  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2547 -> m4_2564  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2547 -> m4_2565  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2547 -> m4_2567  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2547 -> m4_2568  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2547 -> m4_2570  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2547 -> m4_2571  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2547 -> m4_2573  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2547 -> m4_2574  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2547 -> m4_2576  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2547 -> m4_2577  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2547 -> m4_2579  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2547 -> m4_2580  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2547 -> m4_2582  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2547 -> m4_2583  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2547 -> m4_2548  [key=0, style=solid];
m4_2547 -> m4_358  [key=2, style=dotted];
m4_2547 -> m4_396  [key=2, style=dotted];
m4_2547 -> m4_397  [key=2, style=dotted];
m4_2547 -> m4_2549  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2547 -> m4_2551  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2547 -> m4_2554  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2547 -> m4_2557  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2547 -> m4_2560  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2547 -> m4_2563  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2547 -> m4_2566  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2547 -> m4_2569  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2547 -> m4_2572  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2547 -> m4_2575  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2547 -> m4_2578  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2547 -> m4_2581  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2547 -> m4_2584  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2549 -> m4_2550  [key=0, style=solid];
m4_2549 -> m4_23  [key=2, style=dotted];
m4_2549 -> m4_24  [key=2, style=dotted];
m4_2551 -> m4_2552  [key=0, style=solid];
m4_2551 -> m4_23  [key=2, style=dotted];
m4_2551 -> m4_24  [key=2, style=dotted];
m4_2554 -> m4_2555  [key=0, style=solid];
m4_2554 -> m4_23  [key=2, style=dotted];
m4_2554 -> m4_24  [key=2, style=dotted];
m4_2557 -> m4_2558  [key=0, style=solid];
m4_2557 -> m4_23  [key=2, style=dotted];
m4_2557 -> m4_24  [key=2, style=dotted];
m4_2560 -> m4_2561  [key=0, style=solid];
m4_2560 -> m4_23  [key=2, style=dotted];
m4_2560 -> m4_24  [key=2, style=dotted];
m4_2563 -> m4_2564  [key=0, style=solid];
m4_2563 -> m4_23  [key=2, style=dotted];
m4_2563 -> m4_24  [key=2, style=dotted];
m4_2566 -> m4_2567  [key=0, style=solid];
m4_2566 -> m4_23  [key=2, style=dotted];
m4_2566 -> m4_24  [key=2, style=dotted];
m4_2569 -> m4_2570  [key=0, style=solid];
m4_2569 -> m4_23  [key=2, style=dotted];
m4_2569 -> m4_24  [key=2, style=dotted];
m4_2572 -> m4_2573  [key=0, style=solid];
m4_2572 -> m4_23  [key=2, style=dotted];
m4_2572 -> m4_24  [key=2, style=dotted];
m4_2575 -> m4_2576  [key=0, style=solid];
m4_2575 -> m4_23  [key=2, style=dotted];
m4_2575 -> m4_24  [key=2, style=dotted];
m4_2578 -> m4_2579  [key=0, style=solid];
m4_2578 -> m4_23  [key=2, style=dotted];
m4_2578 -> m4_24  [key=2, style=dotted];
m4_2581 -> m4_2582  [key=0, style=solid];
m4_2581 -> m4_23  [key=2, style=dotted];
m4_2581 -> m4_24  [key=2, style=dotted];
m4_2584 -> m4_23  [key=2, style=dotted];
m4_2584 -> m4_24  [key=2, style=dotted];
m4_2584 -> m4_2585  [key=0, style=solid];
m4_2546 -> m4_2547  [key=0, style=solid];
m4_2548 -> m4_23  [key=2, style=dotted];
m4_2548 -> m4_24  [key=2, style=dotted];
m4_2548 -> m4_2549  [key=0, style=solid];
m4_2585 -> m4_2545  [color=blue, key=0, style=bold];
m4_1701 -> m4_1702  [key=0, style=solid];
m4_1705 -> m4_25  [key=2, style=dotted];
m4_1705 -> m4_1706  [key=0, style=solid];
m4_1706 -> m4_25  [key=2, style=dotted];
m4_1706 -> m4_1707  [key=0, style=solid];
m4_1708 -> m4_25  [key=2, style=dotted];
m4_1708 -> m4_1709  [key=0, style=solid];
m4_1703 -> m4_21  [key=2, style=dotted];
m4_1703 -> m4_22  [key=2, style=dotted];
m4_1703 -> m4_1705  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1703 -> m4_1706  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1703 -> m4_1708  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1703 -> m4_1704  [key=0, style=solid];
m4_1703 -> m4_1707  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1704 -> m4_1705  [key=0, style=solid];
m4_1704 -> m4_23  [key=2, style=dotted];
m4_1704 -> m4_24  [key=2, style=dotted];
m4_1704 -> m4_1704  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m4_1707 -> m4_1708  [key=0, style=solid];
m4_1707 -> m4_23  [key=2, style=dotted];
m4_1707 -> m4_24  [key=2, style=dotted];
m4_1702 -> m4_1703  [key=0, style=solid];
m4_1709 -> m4_1701  [color=blue, key=0, style=bold];
m4_1622 -> m4_1623  [key=0, style=solid];
m4_1623 -> m4_21  [key=2, style=dotted];
m4_1623 -> m4_22  [key=2, style=dotted];
m4_1623 -> m4_1624  [key=0, style=solid];
m4_1623 -> m4_1627  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1624 -> m4_1625  [key=0, style=solid];
m4_1624 -> m4_172  [key=2, style=dotted];
m4_1624 -> m4_1626  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1625 -> m4_1622  [color=blue, key=0, style=bold];
m4_1076 -> m4_1077  [key=0, style=solid];
m4_1080 -> m4_25  [key=2, style=dotted];
m4_1080 -> m4_1081  [key=0, style=solid];
m4_1081 -> m4_25  [key=2, style=dotted];
m4_1081 -> m4_1082  [key=0, style=solid];
m4_1084 -> m4_25  [key=2, style=dotted];
m4_1084 -> m4_1085  [key=0, style=solid];
m4_1085 -> m4_25  [key=2, style=dotted];
m4_1085 -> m4_1086  [key=0, style=solid];
m4_1088 -> m4_25  [key=2, style=dotted];
m4_1088 -> m4_1089  [key=0, style=solid];
m4_1089 -> m4_25  [key=2, style=dotted];
m4_1089 -> m4_1090  [key=0, style=solid];
m4_1092 -> m4_25  [key=2, style=dotted];
m4_1092 -> m4_1093  [key=0, style=solid];
m4_1093 -> m4_25  [key=2, style=dotted];
m4_1093 -> m4_1094  [key=0, style=solid];
m4_1098 -> m4_25  [key=2, style=dotted];
m4_1098 -> m4_1099  [key=0, style=solid];
m4_1099 -> m4_25  [key=2, style=dotted];
m4_1099 -> m4_1100  [key=0, style=solid];
m4_1078 -> m4_21  [key=2, style=dotted];
m4_1078 -> m4_22  [key=2, style=dotted];
m4_1078 -> m4_1080  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1078 -> m4_1081  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1078 -> m4_1079  [key=0, style=solid];
m4_1082 -> m4_21  [key=2, style=dotted];
m4_1082 -> m4_22  [key=2, style=dotted];
m4_1082 -> m4_1084  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1082 -> m4_1085  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1082 -> m4_1083  [key=0, style=solid];
m4_1086 -> m4_21  [key=2, style=dotted];
m4_1086 -> m4_22  [key=2, style=dotted];
m4_1086 -> m4_1088  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1086 -> m4_1089  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1086 -> m4_1087  [key=0, style=solid];
m4_1090 -> m4_21  [key=2, style=dotted];
m4_1090 -> m4_22  [key=2, style=dotted];
m4_1090 -> m4_1092  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1090 -> m4_1093  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1090 -> m4_1091  [key=0, style=solid];
m4_1094 -> m4_21  [key=2, style=dotted];
m4_1094 -> m4_22  [key=2, style=dotted];
m4_1094 -> m4_1095  [key=0, style=solid];
m4_1094 -> m4_1106  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1096 -> m4_21  [key=2, style=dotted];
m4_1096 -> m4_22  [key=2, style=dotted];
m4_1096 -> m4_1098  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1096 -> m4_1099  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1096 -> m4_1097  [key=0, style=solid];
m4_1100 -> m4_21  [key=2, style=dotted];
m4_1100 -> m4_22  [key=2, style=dotted];
m4_1100 -> m4_1101  [key=0, style=solid];
m4_1102 -> m4_21  [key=2, style=dotted];
m4_1102 -> m4_22  [key=2, style=dotted];
m4_1102 -> m4_1103  [key=0, style=solid];
m4_1102 -> m4_1109  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1079 -> m4_1080  [key=0, style=solid];
m4_1079 -> m4_23  [key=2, style=dotted];
m4_1079 -> m4_24  [key=2, style=dotted];
m4_1083 -> m4_1084  [key=0, style=solid];
m4_1083 -> m4_23  [key=2, style=dotted];
m4_1083 -> m4_24  [key=2, style=dotted];
m4_1087 -> m4_1088  [key=0, style=solid];
m4_1087 -> m4_23  [key=2, style=dotted];
m4_1087 -> m4_24  [key=2, style=dotted];
m4_1091 -> m4_1092  [key=0, style=solid];
m4_1091 -> m4_23  [key=2, style=dotted];
m4_1091 -> m4_24  [key=2, style=dotted];
m4_1097 -> m4_1098  [key=0, style=solid];
m4_1097 -> m4_23  [key=2, style=dotted];
m4_1097 -> m4_24  [key=2, style=dotted];
m4_1077 -> m4_1078  [key=0, style=solid];
m4_1095 -> m4_1096  [key=0, style=solid];
m4_1095 -> m4_172  [key=2, style=dotted];
m4_1095 -> m4_1105  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1101 -> m4_1102  [key=0, style=solid];
m4_1101 -> m4_23  [key=2, style=dotted];
m4_1101 -> m4_158  [key=2, style=dotted];
m4_1103 -> m4_1104  [key=0, style=solid];
m4_1103 -> m4_172  [key=2, style=dotted];
m4_1103 -> m4_1108  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1104 -> m4_1076  [color=blue, key=0, style=bold];
m4_820 -> m4_821  [key=0, style=solid];
m4_823 -> m4_25  [key=2, style=dotted];
m4_823 -> m4_824  [key=0, style=solid];
m4_821 -> m4_21  [key=2, style=dotted];
m4_821 -> m4_22  [key=2, style=dotted];
m4_821 -> m4_823  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_821 -> m4_822  [key=0, style=solid];
m4_822 -> m4_823  [key=0, style=solid];
m4_822 -> m4_24  [key=2, style=dotted];
m4_822 -> m4_378  [key=2, style=dotted];
m4_824 -> m4_820  [color=blue, key=0, style=bold];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_0  [color=blue, key=0, style=bold];
m4_1 -> m4_2  [key=0, style=solid];
m4_406 -> m4_407  [key=0, style=solid];
m4_410 -> m4_25  [key=2, style=dotted];
m4_410 -> m4_411  [key=0, style=solid];
m4_412 -> m4_25  [key=2, style=dotted];
m4_412 -> m4_413  [key=0, style=solid];
m4_414 -> m4_25  [key=2, style=dotted];
m4_414 -> m4_415  [key=0, style=solid];
m4_416 -> m4_25  [key=2, style=dotted];
m4_416 -> m4_417  [key=0, style=solid];
m4_418 -> m4_25  [key=2, style=dotted];
m4_418 -> m4_419  [key=0, style=solid];
m4_408 -> m4_21  [key=2, style=dotted];
m4_408 -> m4_22  [key=2, style=dotted];
m4_408 -> m4_410  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_408 -> m4_412  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_408 -> m4_414  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_408 -> m4_416  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_408 -> m4_418  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_408 -> m4_409  [key=0, style=solid];
m4_408 -> m4_411  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_408 -> m4_413  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_408 -> m4_415  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_408 -> m4_417  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_408 -> m4_419  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_408 -> m4_422  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_409 -> m4_410  [key=0, style=solid];
m4_409 -> m4_23  [key=2, style=dotted];
m4_411 -> m4_412  [key=0, style=solid];
m4_411 -> m4_23  [key=2, style=dotted];
m4_413 -> m4_414  [key=0, style=solid];
m4_413 -> m4_23  [key=2, style=dotted];
m4_415 -> m4_416  [key=0, style=solid];
m4_415 -> m4_23  [key=2, style=dotted];
m4_417 -> m4_418  [key=0, style=solid];
m4_417 -> m4_23  [key=2, style=dotted];
m4_419 -> m4_420  [key=0, style=solid];
m4_419 -> m4_172  [key=2, style=dotted];
m4_419 -> m4_421  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_407 -> m4_408  [key=0, style=solid];
m4_420 -> m4_406  [color=blue, key=0, style=bold];
m4_1196 -> m4_1197  [key=0, style=solid];
m4_1200 -> m4_25  [key=2, style=dotted];
m4_1200 -> m4_1201  [key=0, style=solid];
m4_1202 -> m4_25  [key=2, style=dotted];
m4_1202 -> m4_1203  [key=0, style=solid];
m4_1204 -> m4_25  [key=2, style=dotted];
m4_1204 -> m4_1205  [key=0, style=solid];
m4_1204 -> m4_1208  [key=2, style=dotted];
m4_1204 -> m4_1209  [key=2, style=dotted];
m4_1206 -> m4_25  [key=2, style=dotted];
m4_1206 -> m4_1207  [key=0, style=solid];
m4_1198 -> m4_21  [key=2, style=dotted];
m4_1198 -> m4_22  [key=2, style=dotted];
m4_1198 -> m4_1200  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1198 -> m4_1202  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1198 -> m4_1204  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1198 -> m4_1206  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1198 -> m4_1199  [key=0, style=solid];
m4_1198 -> m4_1201  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1198 -> m4_1203  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1198 -> m4_1205  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1199 -> m4_1200  [key=0, style=solid];
m4_1199 -> m4_23  [key=2, style=dotted];
m4_1201 -> m4_1202  [key=0, style=solid];
m4_1201 -> m4_23  [key=2, style=dotted];
m4_1203 -> m4_1204  [key=0, style=solid];
m4_1203 -> m4_23  [key=2, style=dotted];
m4_1205 -> m4_1206  [key=0, style=solid];
m4_1205 -> m4_23  [key=2, style=dotted];
m4_1197 -> m4_1198  [key=0, style=solid];
m4_1207 -> m4_1196  [color=blue, key=0, style=bold];
m4_2415 -> m4_2416  [key=0, style=solid];
m4_2417 -> m4_21  [key=2, style=dotted];
m4_2417 -> m4_22  [key=2, style=dotted];
m4_2417 -> m4_2418  [key=0, style=solid];
m4_2417 -> m4_2421  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2416 -> m4_2417  [key=0, style=solid];
m4_2418 -> m4_2419  [key=0, style=solid];
m4_2418 -> m4_172  [key=2, style=dotted];
m4_2418 -> m4_2420  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_2419 -> m4_2415  [color=blue, key=0, style=bold];
m4_120 -> m4_121  [key=0, style=solid];
m4_126 -> m4_25  [key=2, style=dotted];
m4_126 -> m4_127  [key=0, style=solid];
m4_122 -> m4_21  [key=2, style=dotted];
m4_122 -> m4_22  [key=2, style=dotted];
m4_122 -> m4_126  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_122 -> m4_123  [key=0, style=solid];
m4_122 -> m4_124  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_122 -> m4_125  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_125 -> m4_126  [key=0, style=solid];
m4_125 -> m4_23  [key=2, style=dotted];
m4_121 -> m4_122  [key=0, style=solid];
m4_123 -> m4_23  [key=2, style=dotted];
m4_123 -> m4_124  [key=0, style=solid];
m4_124 -> m4_23  [key=2, style=dotted];
m4_124 -> m4_125  [key=0, style=solid];
m4_127 -> m4_120  [color=blue, key=0, style=bold];
m4_160 -> m4_161  [key=0, style=solid];
m4_164 -> m4_25  [key=2, style=dotted];
m4_164 -> m4_165  [key=0, style=solid];
m4_166 -> m4_25  [key=2, style=dotted];
m4_166 -> m4_167  [key=0, style=solid];
m4_169 -> m4_25  [key=2, style=dotted];
m4_169 -> m4_170  [key=0, style=solid];
m4_162 -> m4_21  [key=2, style=dotted];
m4_162 -> m4_22  [key=2, style=dotted];
m4_162 -> m4_164  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_162 -> m4_166  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_162 -> m4_169  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_162 -> m4_163  [key=0, style=solid];
m4_162 -> m4_165  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_162 -> m4_167  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_162 -> m4_174  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_162 -> m4_168  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_162 -> m4_170  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_163 -> m4_164  [key=0, style=solid];
m4_163 -> m4_23  [key=2, style=dotted];
m4_163 -> m4_24  [key=2, style=dotted];
m4_165 -> m4_166  [key=0, style=solid];
m4_165 -> m4_23  [key=2, style=dotted];
m4_165 -> m4_24  [key=2, style=dotted];
m4_167 -> m4_168  [key=0, style=solid];
m4_167 -> m4_172  [key=2, style=dotted];
m4_167 -> m4_173  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_168 -> m4_169  [key=0, style=solid];
m4_168 -> m4_23  [key=2, style=dotted];
m4_168 -> m4_24  [key=2, style=dotted];
m4_170 -> m4_23  [key=2, style=dotted];
m4_170 -> m4_171  [key=0, style=solid];
m4_170 -> m4_158  [key=2, style=dotted];
m4_161 -> m4_162  [key=0, style=solid];
m4_171 -> m4_160  [color=blue, key=0, style=bold];
m4_489 -> m4_490  [key=0, style=solid];
m4_493 -> m4_25  [key=2, style=dotted];
m4_493 -> m4_494  [key=0, style=solid];
m4_495 -> m4_25  [key=2, style=dotted];
m4_495 -> m4_496  [key=0, style=solid];
m4_496 -> m4_25  [key=2, style=dotted];
m4_496 -> m4_497  [key=0, style=solid];
m4_497 -> m4_25  [key=2, style=dotted];
m4_497 -> m4_498  [key=0, style=solid];
m4_499 -> m4_25  [key=2, style=dotted];
m4_499 -> m4_500  [key=0, style=solid];
m4_500 -> m4_25  [key=2, style=dotted];
m4_500 -> m4_501  [key=0, style=solid];
m4_501 -> m4_25  [key=2, style=dotted];
m4_501 -> m4_502  [key=0, style=solid];
m4_503 -> m4_25  [key=2, style=dotted];
m4_503 -> m4_504  [key=0, style=solid];
m4_504 -> m4_25  [key=2, style=dotted];
m4_504 -> m4_505  [key=0, style=solid];
m4_505 -> m4_25  [key=2, style=dotted];
m4_505 -> m4_506  [key=0, style=solid];
m4_506 -> m4_25  [key=2, style=dotted];
m4_506 -> m4_507  [key=0, style=solid];
m4_507 -> m4_25  [key=2, style=dotted];
m4_507 -> m4_508  [key=0, style=solid];
m4_509 -> m4_25  [key=2, style=dotted];
m4_509 -> m4_510  [key=0, style=solid];
m4_510 -> m4_25  [key=2, style=dotted];
m4_510 -> m4_511  [key=0, style=solid];
m4_511 -> m4_25  [key=2, style=dotted];
m4_511 -> m4_512  [key=0, style=solid];
m4_513 -> m4_25  [key=2, style=dotted];
m4_513 -> m4_514  [key=0, style=solid];
m4_514 -> m4_25  [key=2, style=dotted];
m4_514 -> m4_515  [key=0, style=solid];
m4_515 -> m4_25  [key=2, style=dotted];
m4_515 -> m4_516  [key=0, style=solid];
m4_517 -> m4_25  [key=2, style=dotted];
m4_517 -> m4_518  [key=0, style=solid];
m4_518 -> m4_25  [key=2, style=dotted];
m4_518 -> m4_519  [key=0, style=solid];
m4_519 -> m4_25  [key=2, style=dotted];
m4_519 -> m4_520  [key=0, style=solid];
m4_520 -> m4_25  [key=2, style=dotted];
m4_520 -> m4_521  [key=0, style=solid];
m4_522 -> m4_25  [key=2, style=dotted];
m4_522 -> m4_523  [key=0, style=solid];
m4_523 -> m4_25  [key=2, style=dotted];
m4_523 -> m4_524  [key=0, style=solid];
m4_524 -> m4_25  [key=2, style=dotted];
m4_524 -> m4_525  [key=0, style=solid];
m4_525 -> m4_25  [key=2, style=dotted];
m4_525 -> m4_526  [key=0, style=solid];
m4_527 -> m4_25  [key=2, style=dotted];
m4_527 -> m4_528  [key=0, style=solid];
m4_528 -> m4_25  [key=2, style=dotted];
m4_528 -> m4_529  [key=0, style=solid];
m4_529 -> m4_25  [key=2, style=dotted];
m4_529 -> m4_530  [key=0, style=solid];
m4_530 -> m4_25  [key=2, style=dotted];
m4_530 -> m4_531  [key=0, style=solid];
m4_532 -> m4_25  [key=2, style=dotted];
m4_532 -> m4_533  [key=0, style=solid];
m4_533 -> m4_25  [key=2, style=dotted];
m4_533 -> m4_534  [key=0, style=solid];
m4_534 -> m4_25  [key=2, style=dotted];
m4_534 -> m4_535  [key=0, style=solid];
m4_535 -> m4_25  [key=2, style=dotted];
m4_535 -> m4_536  [key=0, style=solid];
m4_537 -> m4_25  [key=2, style=dotted];
m4_537 -> m4_538  [key=0, style=solid];
m4_538 -> m4_25  [key=2, style=dotted];
m4_538 -> m4_539  [key=0, style=solid];
m4_539 -> m4_25  [key=2, style=dotted];
m4_539 -> m4_540  [key=0, style=solid];
m4_540 -> m4_25  [key=2, style=dotted];
m4_540 -> m4_541  [key=0, style=solid];
m4_542 -> m4_25  [key=2, style=dotted];
m4_542 -> m4_543  [key=0, style=solid];
m4_543 -> m4_25  [key=2, style=dotted];
m4_543 -> m4_544  [key=0, style=solid];
m4_544 -> m4_25  [key=2, style=dotted];
m4_544 -> m4_545  [key=0, style=solid];
m4_546 -> m4_25  [key=2, style=dotted];
m4_546 -> m4_547  [key=0, style=solid];
m4_547 -> m4_25  [key=2, style=dotted];
m4_547 -> m4_548  [key=0, style=solid];
m4_548 -> m4_25  [key=2, style=dotted];
m4_548 -> m4_549  [key=0, style=solid];
m4_550 -> m4_25  [key=2, style=dotted];
m4_550 -> m4_551  [key=0, style=solid];
m4_551 -> m4_25  [key=2, style=dotted];
m4_551 -> m4_552  [key=0, style=solid];
m4_552 -> m4_25  [key=2, style=dotted];
m4_552 -> m4_553  [key=0, style=solid];
m4_554 -> m4_25  [key=2, style=dotted];
m4_554 -> m4_555  [key=0, style=solid];
m4_555 -> m4_25  [key=2, style=dotted];
m4_555 -> m4_556  [key=0, style=solid];
m4_556 -> m4_25  [key=2, style=dotted];
m4_556 -> m4_557  [key=0, style=solid];
m4_558 -> m4_25  [key=2, style=dotted];
m4_558 -> m4_559  [key=0, style=solid];
m4_559 -> m4_25  [key=2, style=dotted];
m4_559 -> m4_560  [key=0, style=solid];
m4_560 -> m4_25  [key=2, style=dotted];
m4_560 -> m4_561  [key=0, style=solid];
m4_562 -> m4_25  [key=2, style=dotted];
m4_562 -> m4_563  [key=0, style=solid];
m4_563 -> m4_25  [key=2, style=dotted];
m4_563 -> m4_564  [key=0, style=solid];
m4_564 -> m4_25  [key=2, style=dotted];
m4_564 -> m4_565  [key=0, style=solid];
m4_566 -> m4_25  [key=2, style=dotted];
m4_566 -> m4_567  [key=0, style=solid];
m4_567 -> m4_25  [key=2, style=dotted];
m4_567 -> m4_568  [key=0, style=solid];
m4_568 -> m4_25  [key=2, style=dotted];
m4_568 -> m4_569  [key=0, style=solid];
m4_570 -> m4_25  [key=2, style=dotted];
m4_570 -> m4_571  [key=0, style=solid];
m4_571 -> m4_25  [key=2, style=dotted];
m4_571 -> m4_572  [key=0, style=solid];
m4_572 -> m4_25  [key=2, style=dotted];
m4_572 -> m4_572  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m4_572 -> m4_573  [key=0, style=solid];
m4_574 -> m4_25  [key=2, style=dotted];
m4_574 -> m4_575  [key=0, style=solid];
m4_575 -> m4_25  [key=2, style=dotted];
m4_575 -> m4_576  [key=0, style=solid];
m4_576 -> m4_25  [key=2, style=dotted];
m4_576 -> m4_577  [key=0, style=solid];
m4_578 -> m4_25  [key=2, style=dotted];
m4_578 -> m4_579  [key=0, style=solid];
m4_579 -> m4_25  [key=2, style=dotted];
m4_579 -> m4_580  [key=0, style=solid];
m4_580 -> m4_25  [key=2, style=dotted];
m4_580 -> m4_581  [key=0, style=solid];
m4_582 -> m4_25  [key=2, style=dotted];
m4_582 -> m4_583  [key=0, style=solid];
m4_583 -> m4_25  [key=2, style=dotted];
m4_583 -> m4_584  [key=0, style=solid];
m4_584 -> m4_25  [key=2, style=dotted];
m4_584 -> m4_585  [key=0, style=solid];
m4_492 -> m4_21  [key=2, style=dotted];
m4_492 -> m4_493  [key=0, style=solid];
m4_492 -> m4_495  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_496  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_497  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_499  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_500  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_501  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_503  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_504  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_505  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_506  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_507  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_509  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_510  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_511  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_513  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_514  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_515  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_517  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_518  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_519  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_520  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_522  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_523  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_524  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_525  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_527  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_528  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_529  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_530  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_532  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_533  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_534  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_535  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_537  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_538  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_539  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_540  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_542  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_543  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_544  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_546  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_547  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_548  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_550  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_551  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_552  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_554  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_555  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_556  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_558  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_559  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_560  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_562  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_563  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_564  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_566  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_567  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_568  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_570  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_571  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_572  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_574  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_575  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_576  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_578  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_579  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_580  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_582  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_583  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_584  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_494  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_498  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_502  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_508  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_512  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_516  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_521  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_526  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_531  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_536  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_541  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_545  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_549  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_553  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_557  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_561  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_565  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_569  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_573  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_577  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_492 -> m4_581  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_491 -> m4_22  [key=2, style=dotted];
m4_491 -> m4_492  [key=0, style=solid];
m4_490 -> m4_472  [color=darkorchid, key=3, label="Property variable System.Collections.Generic.ICollection<Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqSection> Sections", style=bold];
m4_490 -> m4_491  [key=0, style=solid];
m4_494 -> m4_495  [key=0, style=solid];
m4_494 -> m4_378  [key=2, style=dotted];
m4_498 -> m4_499  [key=0, style=solid];
m4_498 -> m4_378  [key=2, style=dotted];
m4_502 -> m4_503  [key=0, style=solid];
m4_502 -> m4_378  [key=2, style=dotted];
m4_508 -> m4_509  [key=0, style=solid];
m4_508 -> m4_378  [key=2, style=dotted];
m4_512 -> m4_513  [key=0, style=solid];
m4_512 -> m4_378  [key=2, style=dotted];
m4_516 -> m4_517  [key=0, style=solid];
m4_516 -> m4_378  [key=2, style=dotted];
m4_521 -> m4_522  [key=0, style=solid];
m4_521 -> m4_378  [key=2, style=dotted];
m4_526 -> m4_527  [key=0, style=solid];
m4_526 -> m4_378  [key=2, style=dotted];
m4_531 -> m4_532  [key=0, style=solid];
m4_531 -> m4_378  [key=2, style=dotted];
m4_536 -> m4_537  [key=0, style=solid];
m4_536 -> m4_378  [key=2, style=dotted];
m4_541 -> m4_542  [key=0, style=solid];
m4_541 -> m4_378  [key=2, style=dotted];
m4_545 -> m4_546  [key=0, style=solid];
m4_545 -> m4_378  [key=2, style=dotted];
m4_549 -> m4_550  [key=0, style=solid];
m4_549 -> m4_378  [key=2, style=dotted];
m4_553 -> m4_554  [key=0, style=solid];
m4_553 -> m4_378  [key=2, style=dotted];
m4_557 -> m4_558  [key=0, style=solid];
m4_557 -> m4_378  [key=2, style=dotted];
m4_561 -> m4_562  [key=0, style=solid];
m4_561 -> m4_378  [key=2, style=dotted];
m4_565 -> m4_566  [key=0, style=solid];
m4_565 -> m4_378  [key=2, style=dotted];
m4_569 -> m4_570  [key=0, style=solid];
m4_569 -> m4_378  [key=2, style=dotted];
m4_573 -> m4_574  [key=0, style=solid];
m4_573 -> m4_378  [key=2, style=dotted];
m4_577 -> m4_578  [key=0, style=solid];
m4_577 -> m4_378  [key=2, style=dotted];
m4_581 -> m4_582  [key=0, style=solid];
m4_581 -> m4_378  [key=2, style=dotted];
m4_585 -> m4_489  [color=blue, key=0, style=bold];
m4_1954 -> m4_1955  [key=0, style=solid];
m4_1955 -> m4_21  [key=2, style=dotted];
m4_1955 -> m4_22  [key=2, style=dotted];
m4_1955 -> m4_1956  [key=0, style=solid];
m4_1955 -> m4_1959  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1956 -> m4_1957  [key=0, style=solid];
m4_1956 -> m4_172  [key=2, style=dotted];
m4_1956 -> m4_1958  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1957 -> m4_1954  [color=blue, key=0, style=bold];
m4_688 -> m4_689  [key=0, style=solid];
m4_689 -> m4_21  [key=2, style=dotted];
m4_689 -> m4_22  [key=2, style=dotted];
m4_689 -> m4_690  [key=0, style=solid];
m4_689 -> m4_693  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_690 -> m4_691  [key=0, style=solid];
m4_690 -> m4_172  [key=2, style=dotted];
m4_690 -> m4_692  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_691 -> m4_688  [color=blue, key=0, style=bold];
m4_855 -> m4_856  [key=0, style=solid];
m4_858 -> m4_21  [key=2, style=dotted];
m4_858 -> m4_22  [key=2, style=dotted];
m4_858 -> m4_859  [key=0, style=solid];
m4_858 -> m4_861  [key=2, style=dotted];
m4_858 -> m4_863  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_857 -> m4_858  [key=0, style=solid];
m4_857 -> m4_357  [key=2, style=dotted];
m4_859 -> m4_860  [key=0, style=solid];
m4_859 -> m4_172  [key=2, style=dotted];
m4_859 -> m4_862  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_856 -> m4_857  [key=0, style=solid];
m4_860 -> m4_855  [color=blue, key=0, style=bold];
m4_2431 -> m4_2432  [key=0, style=solid];
m4_2433 -> m4_21  [key=2, style=dotted];
m4_2433 -> m4_22  [key=2, style=dotted];
m4_2433 -> m4_2434  [key=0, style=solid];
m4_2433 -> m4_2437  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2432 -> m4_2433  [key=0, style=solid];
m4_2434 -> m4_2435  [key=0, style=solid];
m4_2434 -> m4_172  [key=2, style=dotted];
m4_2434 -> m4_2436  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_2435 -> m4_2431  [color=blue, key=0, style=bold];
m4_1834 -> m4_1835  [key=0, style=solid];
m4_1838 -> m4_25  [key=2, style=dotted];
m4_1838 -> m4_1839  [key=0, style=solid];
m4_1840 -> m4_25  [key=2, style=dotted];
m4_1840 -> m4_1841  [key=0, style=solid];
m4_1836 -> m4_21  [key=2, style=dotted];
m4_1836 -> m4_22  [key=2, style=dotted];
m4_1836 -> m4_1838  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1836 -> m4_1840  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1836 -> m4_1837  [key=0, style=solid];
m4_1836 -> m4_1839  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1837 -> m4_1838  [key=0, style=solid];
m4_1837 -> m4_23  [key=2, style=dotted];
m4_1837 -> m4_24  [key=2, style=dotted];
m4_1839 -> m4_1840  [key=0, style=solid];
m4_1839 -> m4_23  [key=2, style=dotted];
m4_1839 -> m4_24  [key=2, style=dotted];
m4_1835 -> m4_1836  [key=0, style=solid];
m4_1841 -> m4_1834  [color=blue, key=0, style=bold];
m4_727 -> m4_728  [key=0, style=solid];
m4_731 -> m4_25  [key=2, style=dotted];
m4_731 -> m4_732  [key=0, style=solid];
m4_737 -> m4_25  [key=2, style=dotted];
m4_737 -> m4_738  [key=0, style=solid];
m4_729 -> m4_21  [key=2, style=dotted];
m4_729 -> m4_731  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_729 -> m4_730  [key=0, style=solid];
m4_729 -> m4_741  [key=2, style=dotted];
m4_729 -> m4_742  [key=2, style=dotted];
m4_735 -> m4_21  [key=2, style=dotted];
m4_735 -> m4_737  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_735 -> m4_736  [key=0, style=solid];
m4_735 -> m4_741  [key=2, style=dotted];
m4_735 -> m4_742  [key=2, style=dotted];
m4_730 -> m4_731  [key=0, style=solid];
m4_730 -> m4_23  [key=2, style=dotted];
m4_732 -> m4_733  [key=0, style=solid];
m4_732 -> m4_734  [color=darkseagreen4, key=1, label=j, style=dashed];
m4_732 -> m4_738  [color=darkseagreen4, key=1, label=j, style=dashed];
m4_736 -> m4_737  [key=0, style=solid];
m4_736 -> m4_23  [key=2, style=dotted];
m4_738 -> m4_738  [color=darkseagreen4, key=1, label=j, style=dashed];
m4_738 -> m4_733  [key=0, style=solid];
m4_728 -> m4_729  [key=0, style=solid];
m4_728 -> m4_740  [key=2, style=dotted];
m4_728 -> m4_734  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_734 -> m4_735  [key=0, style=solid];
m4_733 -> m4_734  [key=0, style=solid];
m4_733 -> m4_739  [key=0, style=solid];
m4_739 -> m4_727  [color=blue, key=0, style=bold];
m4_1470 -> m4_1471  [key=0, style=solid];
m4_1474 -> m4_25  [key=2, style=dotted];
m4_1474 -> m4_1475  [key=0, style=solid];
m4_1476 -> m4_25  [key=2, style=dotted];
m4_1476 -> m4_1477  [key=0, style=solid];
m4_1478 -> m4_25  [key=2, style=dotted];
m4_1478 -> m4_1479  [key=0, style=solid];
m4_1479 -> m4_25  [key=2, style=dotted];
m4_1479 -> m4_1480  [key=0, style=solid];
m4_1480 -> m4_25  [key=2, style=dotted];
m4_1480 -> m4_1481  [key=0, style=solid];
m4_1480 -> m4_1484  [key=2, style=dotted];
m4_1480 -> m4_1485  [key=2, style=dotted];
m4_1480 -> m4_1486  [key=2, style=dotted];
m4_1482 -> m4_25  [key=2, style=dotted];
m4_1482 -> m4_1483  [key=0, style=solid];
m4_1472 -> m4_21  [key=2, style=dotted];
m4_1472 -> m4_22  [key=2, style=dotted];
m4_1472 -> m4_1474  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1472 -> m4_1476  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1472 -> m4_1478  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1472 -> m4_1479  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1472 -> m4_1480  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1472 -> m4_1482  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1472 -> m4_1473  [key=0, style=solid];
m4_1472 -> m4_1475  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1472 -> m4_1477  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1472 -> m4_1481  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1473 -> m4_1474  [key=0, style=solid];
m4_1473 -> m4_23  [key=2, style=dotted];
m4_1473 -> m4_24  [key=2, style=dotted];
m4_1475 -> m4_1476  [key=0, style=solid];
m4_1475 -> m4_23  [key=2, style=dotted];
m4_1475 -> m4_24  [key=2, style=dotted];
m4_1477 -> m4_1478  [key=0, style=solid];
m4_1477 -> m4_1386  [key=2, style=dotted];
m4_1481 -> m4_1482  [key=0, style=solid];
m4_1481 -> m4_23  [key=2, style=dotted];
m4_1481 -> m4_24  [key=2, style=dotted];
m4_1471 -> m4_1472  [key=0, style=solid];
m4_1483 -> m4_1470  [color=blue, key=0, style=bold];
m4_971 -> m4_972  [key=0, style=solid];
m4_975 -> m4_25  [key=2, style=dotted];
m4_975 -> m4_976  [key=0, style=solid];
m4_977 -> m4_25  [key=2, style=dotted];
m4_977 -> m4_978  [key=0, style=solid];
m4_978 -> m4_25  [key=2, style=dotted];
m4_978 -> m4_979  [key=0, style=solid];
m4_980 -> m4_25  [key=2, style=dotted];
m4_980 -> m4_981  [key=0, style=solid];
m4_981 -> m4_25  [key=2, style=dotted];
m4_981 -> m4_982  [key=0, style=solid];
m4_983 -> m4_25  [key=2, style=dotted];
m4_983 -> m4_984  [key=0, style=solid];
m4_984 -> m4_25  [key=2, style=dotted];
m4_984 -> m4_985  [key=0, style=solid];
m4_985 -> m4_25  [key=2, style=dotted];
m4_985 -> m4_986  [key=0, style=solid];
m4_986 -> m4_25  [key=2, style=dotted];
m4_986 -> m4_987  [key=0, style=solid];
m4_988 -> m4_25  [key=2, style=dotted];
m4_988 -> m4_989  [key=0, style=solid];
m4_989 -> m4_25  [key=2, style=dotted];
m4_989 -> m4_990  [key=0, style=solid];
m4_974 -> m4_21  [key=2, style=dotted];
m4_974 -> m4_975  [key=0, style=solid];
m4_974 -> m4_977  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_974 -> m4_978  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_974 -> m4_980  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_974 -> m4_981  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_974 -> m4_983  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_974 -> m4_984  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_974 -> m4_985  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_974 -> m4_986  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_974 -> m4_988  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_974 -> m4_989  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_974 -> m4_976  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_974 -> m4_979  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_974 -> m4_982  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_974 -> m4_987  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_973 -> m4_22  [key=2, style=dotted];
m4_973 -> m4_974  [key=0, style=solid];
m4_976 -> m4_977  [key=0, style=solid];
m4_976 -> m4_378  [key=2, style=dotted];
m4_979 -> m4_980  [key=0, style=solid];
m4_979 -> m4_378  [key=2, style=dotted];
m4_982 -> m4_983  [key=0, style=solid];
m4_982 -> m4_378  [key=2, style=dotted];
m4_987 -> m4_988  [key=0, style=solid];
m4_987 -> m4_378  [key=2, style=dotted];
m4_972 -> m4_973  [key=0, style=solid];
m4_990 -> m4_971  [color=blue, key=0, style=bold];
m4_2264 -> m4_2265  [key=0, style=solid];
m4_2268 -> m4_25  [key=2, style=dotted];
m4_2268 -> m4_2269  [key=0, style=solid];
m4_2269 -> m4_25  [key=2, style=dotted];
m4_2269 -> m4_2270  [key=0, style=solid];
m4_2266 -> m4_21  [key=2, style=dotted];
m4_2266 -> m4_22  [key=2, style=dotted];
m4_2266 -> m4_2268  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2266 -> m4_2269  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2266 -> m4_2267  [key=0, style=solid];
m4_2267 -> m4_2268  [key=0, style=solid];
m4_2267 -> m4_244  [key=2, style=dotted];
m4_2265 -> m4_2266  [key=0, style=solid];
m4_2270 -> m4_2264  [color=blue, key=0, style=bold];
m4_6 -> m4_7  [key=0, style=solid];
m4_6 -> m4_25  [key=2, style=dotted];
m4_6 -> m4_26  [key=2, style=dotted];
m4_7 -> m4_6  [color=blue, key=0, style=bold];
m4_7 -> m4_25  [key=2, style=dotted];
m4_7 -> m4_8  [key=0, style=solid];
m4_711 -> m4_712  [key=0, style=solid];
m4_716 -> m4_25  [key=2, style=dotted];
m4_716 -> m4_717  [key=0, style=solid];
m4_715 -> m4_25  [key=2, style=dotted];
m4_715 -> m4_716  [key=0, style=solid];
m4_713 -> m4_21  [key=2, style=dotted];
m4_713 -> m4_22  [key=2, style=dotted];
m4_713 -> m4_716  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_713 -> m4_715  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_713 -> m4_714  [key=0, style=solid];
m4_713 -> m4_706  [key=2, style=dotted];
m4_713 -> m4_720  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_712 -> m4_716  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_712 -> m4_713  [key=0, style=solid];
m4_712 -> m4_719  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_717 -> m4_717  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m4_717 -> m4_718  [key=0, style=solid];
m4_717 -> m4_719  [color=darkseagreen4, key=1, label=j, style=dashed];
m4_717 -> m4_721  [color=darkseagreen4, key=1, label=j, style=dashed];
m4_714 -> m4_715  [key=0, style=solid];
m4_714 -> m4_23  [key=2, style=dotted];
m4_720 -> m4_721  [key=0, style=solid];
m4_720 -> m4_172  [key=2, style=dotted];
m4_720 -> m4_723  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_719 -> m4_724  [color=darkseagreen4, key=1, label=total, style=dashed];
m4_719 -> m4_720  [key=0, style=solid];
m4_718 -> m4_719  [key=0, style=solid];
m4_718 -> m4_722  [key=0, style=solid];
m4_721 -> m4_718  [key=0, style=solid];
m4_721 -> m4_721  [color=darkseagreen4, key=1, label=j, style=dashed];
m4_722 -> m4_711  [color=blue, key=0, style=bold];
m4_1961 -> m4_1962  [key=0, style=solid];
m4_1962 -> m4_21  [key=2, style=dotted];
m4_1962 -> m4_22  [key=2, style=dotted];
m4_1962 -> m4_1963  [key=0, style=solid];
m4_1962 -> m4_1966  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1963 -> m4_1964  [key=0, style=solid];
m4_1963 -> m4_172  [key=2, style=dotted];
m4_1963 -> m4_1965  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1964 -> m4_1961  [color=blue, key=0, style=bold];
m4_681 -> m4_682  [key=0, style=solid];
m4_682 -> m4_21  [key=2, style=dotted];
m4_682 -> m4_22  [key=2, style=dotted];
m4_682 -> m4_683  [key=0, style=solid];
m4_682 -> m4_686  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_683 -> m4_684  [key=0, style=solid];
m4_683 -> m4_172  [key=2, style=dotted];
m4_683 -> m4_685  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_684 -> m4_681  [color=blue, key=0, style=bold];
m4_18 -> m4_19  [key=0, style=solid];
m4_18 -> m4_23  [key=2, style=dotted];
m4_18 -> m4_24  [key=2, style=dotted];
m4_2837 -> m4_2838  [key=0, style=solid];
m4_2837 -> m4_2840  [color=darkseagreen4, key=1, label="char[]", style=dashed];
m4_2838 -> m4_2839  [key=0, style=solid];
m4_2838 -> m4_2840  [key=0, style=solid];
m4_2840 -> m4_2841  [key=0, style=solid];
m4_2840 -> m4_2843  [key=2, style=dotted];
m4_2839 -> m4_2841  [key=0, style=solid];
m4_2839 -> m4_2842  [key=2, style=dotted];
m4_2841 -> m4_2837  [color=blue, key=0, style=bold];
m4_1998 -> m4_1999  [key=0, style=solid];
m4_2002 -> m4_25  [key=2, style=dotted];
m4_2002 -> m4_26  [key=2, style=dotted];
m4_2002 -> m4_2003  [key=0, style=solid];
m4_1999 -> m4_21  [key=2, style=dotted];
m4_1999 -> m4_22  [key=2, style=dotted];
m4_1999 -> m4_2002  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1999 -> m4_2000  [key=0, style=solid];
m4_1999 -> m4_2001  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1999 -> m4_2006  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1999 -> m4_2003  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2001 -> m4_2002  [key=0, style=solid];
m4_2001 -> m4_172  [key=2, style=dotted];
m4_2001 -> m4_2005  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_2003 -> m4_23  [key=2, style=dotted];
m4_2003 -> m4_24  [key=2, style=dotted];
m4_2003 -> m4_2004  [key=0, style=solid];
m4_2000 -> m4_23  [key=2, style=dotted];
m4_2000 -> m4_2001  [key=0, style=solid];
m4_2004 -> m4_1998  [color=blue, key=0, style=bold];
m4_925 -> m4_926  [key=0, style=solid];
m4_929 -> m4_25  [key=2, style=dotted];
m4_929 -> m4_930  [key=0, style=solid];
m4_930 -> m4_25  [key=2, style=dotted];
m4_930 -> m4_931  [key=0, style=solid];
m4_932 -> m4_25  [key=2, style=dotted];
m4_932 -> m4_933  [key=0, style=solid];
m4_933 -> m4_25  [key=2, style=dotted];
m4_933 -> m4_934  [key=0, style=solid];
m4_935 -> m4_25  [key=2, style=dotted];
m4_935 -> m4_936  [key=0, style=solid];
m4_926 -> m4_21  [key=2, style=dotted];
m4_926 -> m4_22  [key=2, style=dotted];
m4_926 -> m4_929  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_926 -> m4_930  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_926 -> m4_932  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_926 -> m4_933  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_926 -> m4_935  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_926 -> m4_927  [key=0, style=solid];
m4_926 -> m4_928  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_926 -> m4_931  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_926 -> m4_934  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_926 -> m4_936  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_928 -> m4_929  [key=0, style=solid];
m4_928 -> m4_24  [key=2, style=dotted];
m4_928 -> m4_378  [key=2, style=dotted];
m4_931 -> m4_932  [key=0, style=solid];
m4_931 -> m4_24  [key=2, style=dotted];
m4_931 -> m4_378  [key=2, style=dotted];
m4_934 -> m4_935  [key=0, style=solid];
m4_934 -> m4_24  [key=2, style=dotted];
m4_934 -> m4_378  [key=2, style=dotted];
m4_936 -> m4_937  [key=0, style=solid];
m4_936 -> m4_378  [key=2, style=dotted];
m4_936 -> m4_158  [key=2, style=dotted];
m4_927 -> m4_24  [key=2, style=dotted];
m4_927 -> m4_928  [key=0, style=solid];
m4_927 -> m4_378  [key=2, style=dotted];
m4_937 -> m4_925  [color=blue, key=0, style=bold];
m4_1811 -> m4_1812  [key=0, style=solid];
m4_1815 -> m4_25  [key=2, style=dotted];
m4_1815 -> m4_1816  [key=0, style=solid];
m4_1817 -> m4_25  [key=2, style=dotted];
m4_1817 -> m4_1818  [key=0, style=solid];
m4_1813 -> m4_21  [key=2, style=dotted];
m4_1813 -> m4_22  [key=2, style=dotted];
m4_1813 -> m4_1815  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1813 -> m4_1817  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1813 -> m4_1814  [key=0, style=solid];
m4_1813 -> m4_1816  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1814 -> m4_1815  [key=0, style=solid];
m4_1814 -> m4_23  [key=2, style=dotted];
m4_1814 -> m4_24  [key=2, style=dotted];
m4_1816 -> m4_1817  [key=0, style=solid];
m4_1816 -> m4_23  [key=2, style=dotted];
m4_1816 -> m4_24  [key=2, style=dotted];
m4_1812 -> m4_1813  [key=0, style=solid];
m4_1818 -> m4_1811  [color=blue, key=0, style=bold];
m4_1795 -> m4_1796  [key=0, style=solid];
m4_1797 -> m4_21  [key=2, style=dotted];
m4_1797 -> m4_22  [key=2, style=dotted];
m4_1797 -> m4_1798  [key=0, style=solid];
m4_1797 -> m4_1801  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1796 -> m4_1797  [key=0, style=solid];
m4_1798 -> m4_1799  [key=0, style=solid];
m4_1798 -> m4_172  [key=2, style=dotted];
m4_1798 -> m4_1800  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1799 -> m4_1795  [color=blue, key=0, style=bold];
m4_396 -> m4_2849  [key=0, style=solid];
m4_2849 -> m4_396  [color=blue, key=0, style=bold];
m4_1944 -> m4_1945  [key=0, style=solid];
m4_1945 -> m4_21  [key=2, style=dotted];
m4_1945 -> m4_22  [key=2, style=dotted];
m4_1945 -> m4_1946  [key=0, style=solid];
m4_1945 -> m4_1947  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1945 -> m4_1952  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1945 -> m4_1948  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1945 -> m4_1949  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1946 -> m4_23  [key=2, style=dotted];
m4_1946 -> m4_1947  [key=0, style=solid];
m4_1947 -> m4_1948  [key=0, style=solid];
m4_1947 -> m4_172  [key=2, style=dotted];
m4_1947 -> m4_1951  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1948 -> m4_1949  [key=0, style=solid];
m4_1948 -> m4_116  [key=2, style=dotted];
m4_1948 -> m4_953  [key=2, style=dotted];
m4_1949 -> m4_23  [key=2, style=dotted];
m4_1949 -> m4_24  [key=2, style=dotted];
m4_1949 -> m4_1950  [key=0, style=solid];
m4_1950 -> m4_1944  [color=blue, key=0, style=bold];
m4_2375 -> m4_2376  [key=0, style=solid];
m4_2377 -> m4_21  [key=2, style=dotted];
m4_2377 -> m4_22  [key=2, style=dotted];
m4_2377 -> m4_2378  [key=0, style=solid];
m4_2377 -> m4_2381  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2376 -> m4_2377  [key=0, style=solid];
m4_2378 -> m4_2378  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m4_2378 -> m4_2379  [key=0, style=solid];
m4_2378 -> m4_172  [key=2, style=dotted];
m4_2378 -> m4_2380  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_2379 -> m4_2375  [color=blue, key=0, style=bold];
m4_1878 -> m4_1879  [key=0, style=solid];
m4_1879 -> m4_21  [key=2, style=dotted];
m4_1879 -> m4_22  [key=2, style=dotted];
m4_1879 -> m4_1880  [key=0, style=solid];
m4_1879 -> m4_1881  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1879 -> m4_1882  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1879 -> m4_1888  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1879 -> m4_1883  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1879 -> m4_1884  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1879 -> m4_1885  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1880 -> m4_23  [key=2, style=dotted];
m4_1880 -> m4_24  [key=2, style=dotted];
m4_1880 -> m4_1881  [key=0, style=solid];
m4_1881 -> m4_23  [key=2, style=dotted];
m4_1881 -> m4_24  [key=2, style=dotted];
m4_1881 -> m4_1882  [key=0, style=solid];
m4_1882 -> m4_1883  [key=0, style=solid];
m4_1882 -> m4_172  [key=2, style=dotted];
m4_1882 -> m4_1887  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1883 -> m4_23  [key=2, style=dotted];
m4_1883 -> m4_24  [key=2, style=dotted];
m4_1883 -> m4_1884  [key=0, style=solid];
m4_1884 -> m4_23  [key=2, style=dotted];
m4_1884 -> m4_24  [key=2, style=dotted];
m4_1884 -> m4_1885  [key=0, style=solid];
m4_1885 -> m4_23  [key=2, style=dotted];
m4_1885 -> m4_1886  [key=0, style=solid];
m4_1885 -> m4_158  [key=2, style=dotted];
m4_1886 -> m4_1878  [color=blue, key=0, style=bold];
m4_664 -> m4_665  [key=0, style=solid];
m4_672 -> m4_25  [key=2, style=dotted];
m4_672 -> m4_673  [key=0, style=solid];
m4_666 -> m4_21  [key=2, style=dotted];
m4_666 -> m4_22  [key=2, style=dotted];
m4_666 -> m4_672  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_666 -> m4_667  [key=0, style=solid];
m4_666 -> m4_669  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_666 -> m4_671  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_671 -> m4_672  [key=0, style=solid];
m4_671 -> m4_23  [key=2, style=dotted];
m4_665 -> m4_666  [key=0, style=solid];
m4_667 -> m4_668  [key=0, style=solid];
m4_667 -> m4_670  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_669 -> m4_23  [key=2, style=dotted];
m4_669 -> m4_670  [key=0, style=solid];
m4_668 -> m4_671  [key=0, style=solid];
m4_668 -> m4_669  [key=0, style=solid];
m4_670 -> m4_668  [key=0, style=solid];
m4_670 -> m4_670  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_673 -> m4_664  [color=blue, key=0, style=bold];
m4_847 -> m4_848  [key=0, style=solid];
m4_848 -> m4_21  [key=2, style=dotted];
m4_848 -> m4_22  [key=2, style=dotted];
m4_848 -> m4_849  [key=0, style=solid];
m4_848 -> m4_852  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_849 -> m4_850  [key=0, style=solid];
m4_849 -> m4_172  [key=2, style=dotted];
m4_849 -> m4_851  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_850 -> m4_847  [color=blue, key=0, style=bold];
m4_1603 -> m4_1604  [key=0, style=solid];
m4_1607 -> m4_25  [key=2, style=dotted];
m4_1607 -> m4_1608  [key=0, style=solid];
m4_1609 -> m4_25  [key=2, style=dotted];
m4_1609 -> m4_1610  [key=0, style=solid];
m4_1605 -> m4_21  [key=2, style=dotted];
m4_1605 -> m4_22  [key=2, style=dotted];
m4_1605 -> m4_1607  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1605 -> m4_1609  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1605 -> m4_1606  [key=0, style=solid];
m4_1605 -> m4_1608  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1605 -> m4_1610  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1605 -> m4_1613  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1606 -> m4_1607  [key=0, style=solid];
m4_1606 -> m4_23  [key=2, style=dotted];
m4_1606 -> m4_24  [key=2, style=dotted];
m4_1608 -> m4_1609  [key=0, style=solid];
m4_1608 -> m4_23  [key=2, style=dotted];
m4_1608 -> m4_24  [key=2, style=dotted];
m4_1610 -> m4_1611  [key=0, style=solid];
m4_1610 -> m4_172  [key=2, style=dotted];
m4_1610 -> m4_1612  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1604 -> m4_1605  [key=0, style=solid];
m4_1611 -> m4_1603  [color=blue, key=0, style=bold];
m4_1387 -> m4_1388  [key=0, style=solid];
m4_1390 -> m4_25  [key=2, style=dotted];
m4_1390 -> m4_1391  [key=0, style=solid];
m4_1388 -> m4_21  [key=2, style=dotted];
m4_1388 -> m4_22  [key=2, style=dotted];
m4_1388 -> m4_1390  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1388 -> m4_1389  [key=0, style=solid];
m4_1389 -> m4_1390  [key=0, style=solid];
m4_1389 -> m4_1392  [key=2, style=dotted];
m4_1389 -> m4_871  [key=2, style=dotted];
m4_1391 -> m4_1387  [color=blue, key=0, style=bold];
m4_1737 -> m4_1738  [key=0, style=solid];
m4_1741 -> m4_25  [key=2, style=dotted];
m4_1741 -> m4_1742  [key=0, style=solid];
m4_1743 -> m4_25  [key=2, style=dotted];
m4_1743 -> m4_1744  [key=0, style=solid];
m4_1745 -> m4_25  [key=2, style=dotted];
m4_1745 -> m4_1746  [key=0, style=solid];
m4_1747 -> m4_25  [key=2, style=dotted];
m4_1747 -> m4_1748  [key=0, style=solid];
m4_1749 -> m4_25  [key=2, style=dotted];
m4_1749 -> m4_1750  [key=0, style=solid];
m4_1751 -> m4_25  [key=2, style=dotted];
m4_1751 -> m4_1752  [key=0, style=solid];
m4_1753 -> m4_25  [key=2, style=dotted];
m4_1753 -> m4_1754  [key=0, style=solid];
m4_1755 -> m4_25  [key=2, style=dotted];
m4_1755 -> m4_1756  [key=0, style=solid];
m4_1757 -> m4_25  [key=2, style=dotted];
m4_1757 -> m4_1758  [key=0, style=solid];
m4_1759 -> m4_25  [key=2, style=dotted];
m4_1759 -> m4_1760  [key=0, style=solid];
m4_1761 -> m4_25  [key=2, style=dotted];
m4_1761 -> m4_1762  [key=0, style=solid];
m4_1763 -> m4_25  [key=2, style=dotted];
m4_1763 -> m4_1764  [key=0, style=solid];
m4_1765 -> m4_25  [key=2, style=dotted];
m4_1765 -> m4_1766  [key=0, style=solid];
m4_1767 -> m4_25  [key=2, style=dotted];
m4_1767 -> m4_1768  [key=0, style=solid];
m4_1769 -> m4_25  [key=2, style=dotted];
m4_1769 -> m4_1770  [key=0, style=solid];
m4_1771 -> m4_25  [key=2, style=dotted];
m4_1771 -> m4_1772  [key=0, style=solid];
m4_1773 -> m4_25  [key=2, style=dotted];
m4_1773 -> m4_1774  [key=0, style=solid];
m4_1775 -> m4_25  [key=2, style=dotted];
m4_1775 -> m4_1776  [key=0, style=solid];
m4_1777 -> m4_25  [key=2, style=dotted];
m4_1777 -> m4_1778  [key=0, style=solid];
m4_1738 -> m4_21  [key=2, style=dotted];
m4_1738 -> m4_22  [key=2, style=dotted];
m4_1738 -> m4_1741  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1738 -> m4_1743  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1738 -> m4_1745  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1738 -> m4_1747  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1738 -> m4_1749  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1738 -> m4_1751  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1738 -> m4_1753  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1738 -> m4_1755  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1738 -> m4_1757  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1738 -> m4_1759  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1738 -> m4_1761  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1738 -> m4_1763  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1738 -> m4_1765  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1738 -> m4_1767  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1738 -> m4_1769  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1738 -> m4_1771  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1738 -> m4_1773  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1738 -> m4_1775  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1738 -> m4_1777  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1738 -> m4_1739  [key=0, style=solid];
m4_1738 -> m4_1740  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1738 -> m4_1742  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1738 -> m4_1744  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1738 -> m4_1746  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1738 -> m4_1748  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1738 -> m4_1750  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1738 -> m4_1752  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1738 -> m4_1754  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1738 -> m4_1756  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1738 -> m4_1758  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1738 -> m4_1760  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1738 -> m4_1762  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1738 -> m4_1764  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1738 -> m4_1766  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1738 -> m4_1768  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1738 -> m4_1770  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1738 -> m4_1772  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1738 -> m4_1774  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1738 -> m4_1776  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1738 -> m4_1778  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1740 -> m4_1741  [key=0, style=solid];
m4_1740 -> m4_23  [key=2, style=dotted];
m4_1740 -> m4_24  [key=2, style=dotted];
m4_1742 -> m4_1743  [key=0, style=solid];
m4_1742 -> m4_23  [key=2, style=dotted];
m4_1742 -> m4_24  [key=2, style=dotted];
m4_1744 -> m4_1745  [key=0, style=solid];
m4_1744 -> m4_23  [key=2, style=dotted];
m4_1744 -> m4_24  [key=2, style=dotted];
m4_1746 -> m4_1747  [key=0, style=solid];
m4_1746 -> m4_23  [key=2, style=dotted];
m4_1746 -> m4_24  [key=2, style=dotted];
m4_1748 -> m4_1749  [key=0, style=solid];
m4_1748 -> m4_23  [key=2, style=dotted];
m4_1748 -> m4_24  [key=2, style=dotted];
m4_1750 -> m4_1751  [key=0, style=solid];
m4_1750 -> m4_23  [key=2, style=dotted];
m4_1750 -> m4_24  [key=2, style=dotted];
m4_1752 -> m4_1753  [key=0, style=solid];
m4_1752 -> m4_23  [key=2, style=dotted];
m4_1752 -> m4_24  [key=2, style=dotted];
m4_1754 -> m4_1755  [key=0, style=solid];
m4_1754 -> m4_23  [key=2, style=dotted];
m4_1754 -> m4_24  [key=2, style=dotted];
m4_1756 -> m4_1757  [key=0, style=solid];
m4_1756 -> m4_23  [key=2, style=dotted];
m4_1756 -> m4_24  [key=2, style=dotted];
m4_1758 -> m4_1759  [key=0, style=solid];
m4_1758 -> m4_23  [key=2, style=dotted];
m4_1758 -> m4_24  [key=2, style=dotted];
m4_1760 -> m4_1761  [key=0, style=solid];
m4_1760 -> m4_23  [key=2, style=dotted];
m4_1760 -> m4_24  [key=2, style=dotted];
m4_1762 -> m4_1763  [key=0, style=solid];
m4_1762 -> m4_23  [key=2, style=dotted];
m4_1762 -> m4_24  [key=2, style=dotted];
m4_1764 -> m4_1765  [key=0, style=solid];
m4_1764 -> m4_23  [key=2, style=dotted];
m4_1764 -> m4_24  [key=2, style=dotted];
m4_1766 -> m4_1767  [key=0, style=solid];
m4_1766 -> m4_23  [key=2, style=dotted];
m4_1766 -> m4_24  [key=2, style=dotted];
m4_1768 -> m4_1769  [key=0, style=solid];
m4_1768 -> m4_23  [key=2, style=dotted];
m4_1768 -> m4_24  [key=2, style=dotted];
m4_1770 -> m4_1771  [key=0, style=solid];
m4_1770 -> m4_23  [key=2, style=dotted];
m4_1770 -> m4_24  [key=2, style=dotted];
m4_1772 -> m4_1773  [key=0, style=solid];
m4_1772 -> m4_23  [key=2, style=dotted];
m4_1772 -> m4_24  [key=2, style=dotted];
m4_1774 -> m4_1775  [key=0, style=solid];
m4_1774 -> m4_23  [key=2, style=dotted];
m4_1774 -> m4_24  [key=2, style=dotted];
m4_1776 -> m4_1777  [key=0, style=solid];
m4_1776 -> m4_23  [key=2, style=dotted];
m4_1776 -> m4_24  [key=2, style=dotted];
m4_1778 -> m4_23  [key=2, style=dotted];
m4_1778 -> m4_1779  [key=0, style=solid];
m4_1778 -> m4_158  [key=2, style=dotted];
m4_1739 -> m4_1740  [key=0, style=solid];
m4_1779 -> m4_1737  [color=blue, key=0, style=bold];
m4_2439 -> m4_2440  [key=0, style=solid];
m4_2442 -> m4_21  [key=2, style=dotted];
m4_2442 -> m4_22  [key=2, style=dotted];
m4_2442 -> m4_2442  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m4_2442 -> m4_2443  [key=0, style=solid];
m4_2441 -> m4_2442  [key=0, style=solid];
m4_2441 -> m4_861  [key=2, style=dotted];
m4_2443 -> m4_2444  [key=0, style=solid];
m4_2443 -> m4_116  [key=2, style=dotted];
m4_2440 -> m4_2441  [key=0, style=solid];
m4_2440 -> m4_357  [key=2, style=dotted];
m4_2440 -> m4_2444  [color=darkseagreen4, key=1, label=data, style=dashed];
m4_2444 -> m4_953  [key=2, style=dotted];
m4_2444 -> m4_2445  [key=0, style=solid];
m4_2445 -> m4_2439  [color=blue, key=0, style=bold];
m4_2241 -> m4_2242  [key=0, style=solid];
m4_2245 -> m4_25  [key=2, style=dotted];
m4_2245 -> m4_2246  [key=0, style=solid];
m4_2246 -> m4_25  [key=2, style=dotted];
m4_2246 -> m4_2247  [key=0, style=solid];
m4_2243 -> m4_21  [key=2, style=dotted];
m4_2243 -> m4_2245  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2243 -> m4_2246  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2243 -> m4_2244  [key=0, style=solid];
m4_2243 -> m4_358  [key=2, style=dotted];
m4_2243 -> m4_396  [key=2, style=dotted];
m4_2243 -> m4_397  [key=2, style=dotted];
m4_2243 -> m4_2247  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2244 -> m4_2245  [key=0, style=solid];
m4_2244 -> m4_23  [key=2, style=dotted];
m4_2244 -> m4_24  [key=2, style=dotted];
m4_2247 -> m4_23  [key=2, style=dotted];
m4_2247 -> m4_2248  [key=0, style=solid];
m4_2247 -> m4_158  [key=2, style=dotted];
m4_2242 -> m4_2243  [key=0, style=solid];
m4_2248 -> m4_2241  [color=blue, key=0, style=bold];
m4_1847 -> m4_1848  [key=0, style=solid];
m4_1849 -> m4_25  [key=2, style=dotted];
m4_1849 -> m4_1850  [key=0, style=solid];
m4_1849 -> m4_1846  [key=2, style=dotted];
m4_1848 -> m4_21  [key=2, style=dotted];
m4_1848 -> m4_22  [key=2, style=dotted];
m4_1848 -> m4_1849  [key=0, style=solid];
m4_1850 -> m4_1847  [color=blue, key=0, style=bold];
m4_2801 -> m4_2803  [key=0, style=solid];
m4_2803 -> m4_2804  [key=0, style=solid];
m4_2804 -> m4_2801  [color=blue, key=0, style=bold];
m4_809 -> m4_810  [key=0, style=solid];
m4_816 -> m4_25  [key=2, style=dotted];
m4_816 -> m4_817  [key=0, style=solid];
m4_817 -> m4_25  [key=2, style=dotted];
m4_817 -> m4_818  [key=0, style=solid];
m4_812 -> m4_21  [key=2, style=dotted];
m4_812 -> m4_22  [key=2, style=dotted];
m4_812 -> m4_813  [key=0, style=solid];
m4_812 -> m4_814  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_811 -> m4_816  [color=darkseagreen4, key=1, label=arrayPool, style=dashed];
m4_811 -> m4_817  [color=darkseagreen4, key=1, label=arrayPool, style=dashed];
m4_811 -> m4_812  [key=0, style=solid];
m4_811 -> m4_807  [key=2, style=dotted];
m4_811 -> m4_813  [color=darkseagreen4, key=1, label=arrayPool, style=dashed];
m4_815 -> m4_816  [key=0, style=solid];
m4_815 -> m4_819  [key=2, style=dotted];
m4_810 -> m4_812  [color=darkseagreen4, key=1, label=json, style=dashed];
m4_810 -> m4_811  [key=0, style=solid];
m4_813 -> m4_814  [key=0, style=solid];
m4_814 -> m4_23  [key=2, style=dotted];
m4_814 -> m4_815  [key=0, style=solid];
m4_814 -> m4_814  [key=0, style=solid];
m4_818 -> m4_809  [color=blue, key=0, style=bold];
m4_2257 -> m4_2258  [key=0, style=solid];
m4_2261 -> m4_25  [key=2, style=dotted];
m4_2261 -> m4_2262  [key=0, style=solid];
m4_2262 -> m4_25  [key=2, style=dotted];
m4_2262 -> m4_2263  [key=0, style=solid];
m4_2259 -> m4_21  [key=2, style=dotted];
m4_2259 -> m4_22  [key=2, style=dotted];
m4_2259 -> m4_2261  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2259 -> m4_2262  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2259 -> m4_2260  [key=0, style=solid];
m4_2260 -> m4_2261  [key=0, style=solid];
m4_2260 -> m4_244  [key=2, style=dotted];
m4_2258 -> m4_2259  [key=0, style=solid];
m4_2263 -> m4_2257  [color=blue, key=0, style=bold];
m4_1272 -> m4_1273  [key=0, style=solid];
m4_1276 -> m4_25  [key=2, style=dotted];
m4_1276 -> m4_1277  [key=0, style=solid];
m4_1278 -> m4_25  [key=2, style=dotted];
m4_1278 -> m4_1279  [key=0, style=solid];
m4_1280 -> m4_25  [key=2, style=dotted];
m4_1280 -> m4_1281  [key=0, style=solid];
m4_1274 -> m4_21  [key=2, style=dotted];
m4_1274 -> m4_22  [key=2, style=dotted];
m4_1274 -> m4_1276  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1274 -> m4_1278  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1274 -> m4_1280  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1274 -> m4_1275  [key=0, style=solid];
m4_1274 -> m4_1277  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1274 -> m4_1279  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1274 -> m4_1281  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1274 -> m4_1284  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1275 -> m4_1276  [key=0, style=solid];
m4_1275 -> m4_23  [key=2, style=dotted];
m4_1277 -> m4_1278  [key=0, style=solid];
m4_1277 -> m4_23  [key=2, style=dotted];
m4_1279 -> m4_1280  [key=0, style=solid];
m4_1279 -> m4_23  [key=2, style=dotted];
m4_1281 -> m4_1282  [key=0, style=solid];
m4_1281 -> m4_172  [key=2, style=dotted];
m4_1281 -> m4_1283  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1273 -> m4_1274  [key=0, style=solid];
m4_1282 -> m4_1272  [color=blue, key=0, style=bold];
m4_1819 -> m4_1820  [key=0, style=solid];
m4_1823 -> m4_25  [key=2, style=dotted];
m4_1823 -> m4_1824  [key=0, style=solid];
m4_1825 -> m4_25  [key=2, style=dotted];
m4_1825 -> m4_1826  [key=0, style=solid];
m4_1821 -> m4_21  [key=2, style=dotted];
m4_1821 -> m4_22  [key=2, style=dotted];
m4_1821 -> m4_1823  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1821 -> m4_1825  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1821 -> m4_1822  [key=0, style=solid];
m4_1821 -> m4_1824  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1822 -> m4_1823  [key=0, style=solid];
m4_1822 -> m4_23  [key=2, style=dotted];
m4_1822 -> m4_24  [key=2, style=dotted];
m4_1824 -> m4_1825  [key=0, style=solid];
m4_1824 -> m4_23  [key=2, style=dotted];
m4_1824 -> m4_24  [key=2, style=dotted];
m4_1820 -> m4_1821  [key=0, style=solid];
m4_1826 -> m4_1819  [color=blue, key=0, style=bold];
m4_1286 -> m4_1287  [key=0, style=solid];
m4_1292 -> m4_25  [key=2, style=dotted];
m4_1292 -> m4_1293  [key=0, style=solid];
m4_1288 -> m4_21  [key=2, style=dotted];
m4_1288 -> m4_1289  [key=0, style=solid];
m4_1287 -> m4_22  [key=2, style=dotted];
m4_1287 -> m4_1288  [key=0, style=solid];
m4_1291 -> m4_1292  [key=0, style=solid];
m4_1291 -> m4_1295  [key=2, style=dotted];
m4_1289 -> m4_1291  [color=darkseagreen4, key=1, label=data, style=dashed];
m4_1289 -> m4_1290  [key=0, style=solid];
m4_1289 -> m4_116  [key=2, style=dotted];
m4_1290 -> m4_1291  [key=0, style=solid];
m4_1290 -> m4_1294  [key=2, style=dotted];
m4_1293 -> m4_1286  [color=blue, key=0, style=bold];
m4_599 -> m4_600  [key=0, style=solid];
m4_603 -> m4_25  [key=2, style=dotted];
m4_603 -> m4_604  [key=0, style=solid];
m4_601 -> m4_21  [key=2, style=dotted];
m4_601 -> m4_22  [key=2, style=dotted];
m4_601 -> m4_603  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_601 -> m4_602  [key=0, style=solid];
m4_600 -> m4_603  [color=darkseagreen4, key=1, label=s, style=dashed];
m4_600 -> m4_601  [key=0, style=solid];
m4_600 -> m4_605  [key=2, style=dotted];
m4_602 -> m4_603  [key=0, style=solid];
m4_602 -> m4_378  [key=2, style=dotted];
m4_604 -> m4_599  [color=blue, key=0, style=bold];
m4_1374 -> m4_1375  [key=0, style=solid];
m4_1375 -> m4_21  [key=2, style=dotted];
m4_1375 -> m4_22  [key=2, style=dotted];
m4_1375 -> m4_1376  [key=0, style=solid];
m4_1375 -> m4_1379  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1376 -> m4_1377  [key=0, style=solid];
m4_1376 -> m4_172  [key=2, style=dotted];
m4_1376 -> m4_1378  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1377 -> m4_1374  [color=blue, key=0, style=bold];
m4_2 -> m4_3  [key=0, style=solid];
m4_2 -> m4_14  [color=green, key=1, label=reader, style=dashed];
m4_2 -> m4_21  [key=2, style=dotted];
m4_2 -> m4_22  [key=2, style=dotted];
m4_2 -> m4_4  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2 -> m4_5  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2 -> m4_6  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2 -> m4_7  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2 -> m4_8  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2 -> m4_9  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2 -> m4_10  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2 -> m4_11  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2 -> m4_12  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2 -> m4_13  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2 -> m4_15  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2 -> m4_16  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2 -> m4_17  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2 -> m4_18  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2 -> m4_19  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_3 -> m4_2  [color=blue, key=0, style=bold];
m4_3 -> m4_4  [key=0, style=solid];
m4_1827 -> m4_1828  [key=0, style=solid];
m4_1828 -> m4_21  [key=2, style=dotted];
m4_1828 -> m4_22  [key=2, style=dotted];
m4_1828 -> m4_1829  [key=0, style=solid];
m4_1828 -> m4_1832  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1829 -> m4_1830  [key=0, style=solid];
m4_1829 -> m4_172  [key=2, style=dotted];
m4_1829 -> m4_1831  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1830 -> m4_1827  [color=blue, key=0, style=bold];
m4_2707 -> m4_2708  [key=0, style=solid];
m4_2711 -> m4_25  [key=2, style=dotted];
m4_2711 -> m4_2712  [key=0, style=solid];
m4_2712 -> m4_25  [key=2, style=dotted];
m4_2712 -> m4_2713  [key=0, style=solid];
m4_2714 -> m4_25  [key=2, style=dotted];
m4_2714 -> m4_2715  [key=0, style=solid];
m4_2715 -> m4_25  [key=2, style=dotted];
m4_2715 -> m4_2716  [key=0, style=solid];
m4_2717 -> m4_25  [key=2, style=dotted];
m4_2717 -> m4_2718  [key=0, style=solid];
m4_2718 -> m4_25  [key=2, style=dotted];
m4_2718 -> m4_2719  [key=0, style=solid];
m4_2720 -> m4_25  [key=2, style=dotted];
m4_2720 -> m4_2721  [key=0, style=solid];
m4_2721 -> m4_25  [key=2, style=dotted];
m4_2721 -> m4_2722  [key=0, style=solid];
m4_2726 -> m4_25  [key=2, style=dotted];
m4_2726 -> m4_2727  [key=0, style=solid];
m4_2727 -> m4_25  [key=2, style=dotted];
m4_2727 -> m4_2728  [key=0, style=solid];
m4_2729 -> m4_25  [key=2, style=dotted];
m4_2729 -> m4_2730  [key=0, style=solid];
m4_2730 -> m4_25  [key=2, style=dotted];
m4_2730 -> m4_2731  [key=0, style=solid];
m4_2732 -> m4_25  [key=2, style=dotted];
m4_2732 -> m4_2733  [key=0, style=solid];
m4_2733 -> m4_25  [key=2, style=dotted];
m4_2733 -> m4_2734  [key=0, style=solid];
m4_2735 -> m4_25  [key=2, style=dotted];
m4_2735 -> m4_2736  [key=0, style=solid];
m4_2736 -> m4_25  [key=2, style=dotted];
m4_2736 -> m4_2737  [key=0, style=solid];
m4_2709 -> m4_21  [key=2, style=dotted];
m4_2709 -> m4_22  [key=2, style=dotted];
m4_2709 -> m4_2711  [color=darkseagreen4, key=1, label=r, style=dashed];
m4_2709 -> m4_2712  [color=darkseagreen4, key=1, label=r, style=dashed];
m4_2709 -> m4_2714  [color=darkseagreen4, key=1, label=r, style=dashed];
m4_2709 -> m4_2715  [color=darkseagreen4, key=1, label=r, style=dashed];
m4_2709 -> m4_2717  [color=darkseagreen4, key=1, label=r, style=dashed];
m4_2709 -> m4_2718  [color=darkseagreen4, key=1, label=r, style=dashed];
m4_2709 -> m4_2720  [color=darkseagreen4, key=1, label=r, style=dashed];
m4_2709 -> m4_2721  [color=darkseagreen4, key=1, label=r, style=dashed];
m4_2709 -> m4_2710  [key=0, style=solid];
m4_2709 -> m4_2713  [color=darkseagreen4, key=1, label=r, style=dashed];
m4_2709 -> m4_2716  [color=darkseagreen4, key=1, label=r, style=dashed];
m4_2709 -> m4_2719  [color=darkseagreen4, key=1, label=r, style=dashed];
m4_2709 -> m4_2722  [color=darkseagreen4, key=1, label=r, style=dashed];
m4_2724 -> m4_21  [key=2, style=dotted];
m4_2724 -> m4_22  [key=2, style=dotted];
m4_2724 -> m4_2726  [color=darkseagreen4, key=1, label=r, style=dashed];
m4_2724 -> m4_2727  [color=darkseagreen4, key=1, label=r, style=dashed];
m4_2724 -> m4_2729  [color=darkseagreen4, key=1, label=r, style=dashed];
m4_2724 -> m4_2730  [color=darkseagreen4, key=1, label=r, style=dashed];
m4_2724 -> m4_2732  [color=darkseagreen4, key=1, label=r, style=dashed];
m4_2724 -> m4_2733  [color=darkseagreen4, key=1, label=r, style=dashed];
m4_2724 -> m4_2735  [color=darkseagreen4, key=1, label=r, style=dashed];
m4_2724 -> m4_2736  [color=darkseagreen4, key=1, label=r, style=dashed];
m4_2724 -> m4_2725  [key=0, style=solid];
m4_2724 -> m4_2728  [color=darkseagreen4, key=1, label=r, style=dashed];
m4_2724 -> m4_2731  [color=darkseagreen4, key=1, label=r, style=dashed];
m4_2724 -> m4_2734  [color=darkseagreen4, key=1, label=r, style=dashed];
m4_2724 -> m4_2737  [color=darkseagreen4, key=1, label=r, style=dashed];
m4_2710 -> m4_2711  [key=0, style=solid];
m4_2710 -> m4_23  [key=2, style=dotted];
m4_2710 -> m4_24  [key=2, style=dotted];
m4_2713 -> m4_2714  [key=0, style=solid];
m4_2713 -> m4_23  [key=2, style=dotted];
m4_2713 -> m4_24  [key=2, style=dotted];
m4_2716 -> m4_2717  [key=0, style=solid];
m4_2716 -> m4_23  [key=2, style=dotted];
m4_2716 -> m4_24  [key=2, style=dotted];
m4_2719 -> m4_2720  [key=0, style=solid];
m4_2719 -> m4_23  [key=2, style=dotted];
m4_2719 -> m4_24  [key=2, style=dotted];
m4_2722 -> m4_23  [key=2, style=dotted];
m4_2722 -> m4_2723  [key=0, style=solid];
m4_2722 -> m4_158  [key=2, style=dotted];
m4_2725 -> m4_2726  [key=0, style=solid];
m4_2725 -> m4_23  [key=2, style=dotted];
m4_2725 -> m4_24  [key=2, style=dotted];
m4_2728 -> m4_2729  [key=0, style=solid];
m4_2728 -> m4_23  [key=2, style=dotted];
m4_2728 -> m4_24  [key=2, style=dotted];
m4_2731 -> m4_2732  [key=0, style=solid];
m4_2731 -> m4_23  [key=2, style=dotted];
m4_2731 -> m4_24  [key=2, style=dotted];
m4_2734 -> m4_2735  [key=0, style=solid];
m4_2734 -> m4_23  [key=2, style=dotted];
m4_2734 -> m4_24  [key=2, style=dotted];
m4_2737 -> m4_23  [key=2, style=dotted];
m4_2737 -> m4_2738  [key=0, style=solid];
m4_2737 -> m4_158  [key=2, style=dotted];
m4_2708 -> m4_2709  [key=0, style=solid];
m4_2723 -> m4_2724  [key=0, style=solid];
m4_2738 -> m4_2707  [color=blue, key=0, style=bold];
m4_938 -> m4_939  [key=0, style=solid];
m4_943 -> m4_25  [key=2, style=dotted];
m4_943 -> m4_944  [key=0, style=solid];
m4_945 -> m4_25  [key=2, style=dotted];
m4_945 -> m4_946  [key=0, style=solid];
m4_948 -> m4_25  [key=2, style=dotted];
m4_948 -> m4_949  [key=0, style=solid];
m4_950 -> m4_25  [key=2, style=dotted];
m4_950 -> m4_951  [key=0, style=solid];
m4_941 -> m4_21  [key=2, style=dotted];
m4_941 -> m4_22  [key=2, style=dotted];
m4_941 -> m4_943  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_941 -> m4_945  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_941 -> m4_948  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_941 -> m4_950  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_941 -> m4_942  [key=0, style=solid];
m4_941 -> m4_861  [key=2, style=dotted];
m4_941 -> m4_944  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_941 -> m4_946  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_941 -> m4_949  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_941 -> m4_951  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_942 -> m4_943  [key=0, style=solid];
m4_942 -> m4_24  [key=2, style=dotted];
m4_942 -> m4_378  [key=2, style=dotted];
m4_944 -> m4_945  [key=0, style=solid];
m4_944 -> m4_24  [key=2, style=dotted];
m4_944 -> m4_378  [key=2, style=dotted];
m4_946 -> m4_947  [key=0, style=solid];
m4_946 -> m4_846  [key=2, style=dotted];
m4_947 -> m4_948  [key=0, style=solid];
m4_947 -> m4_953  [key=2, style=dotted];
m4_949 -> m4_950  [key=0, style=solid];
m4_949 -> m4_24  [key=2, style=dotted];
m4_949 -> m4_378  [key=2, style=dotted];
m4_951 -> m4_952  [key=0, style=solid];
m4_951 -> m4_378  [key=2, style=dotted];
m4_951 -> m4_158  [key=2, style=dotted];
m4_940 -> m4_941  [key=0, style=solid];
m4_940 -> m4_947  [color=darkseagreen4, key=1, label=helloWorldData, style=dashed];
m4_940 -> m4_357  [key=2, style=dotted];
m4_939 -> m4_940  [key=0, style=solid];
m4_952 -> m4_938  [color=blue, key=0, style=bold];
m4_301 -> m4_302  [key=0, style=solid];
m4_305 -> m4_25  [key=2, style=dotted];
m4_305 -> m4_306  [key=0, style=solid];
m4_307 -> m4_25  [key=2, style=dotted];
m4_307 -> m4_308  [key=0, style=solid];
m4_309 -> m4_25  [key=2, style=dotted];
m4_309 -> m4_310  [key=0, style=solid];
m4_311 -> m4_25  [key=2, style=dotted];
m4_311 -> m4_312  [key=0, style=solid];
m4_313 -> m4_25  [key=2, style=dotted];
m4_313 -> m4_314  [key=0, style=solid];
m4_315 -> m4_25  [key=2, style=dotted];
m4_315 -> m4_316  [key=0, style=solid];
m4_316 -> m4_25  [key=2, style=dotted];
m4_316 -> m4_317  [key=0, style=solid];
m4_318 -> m4_25  [key=2, style=dotted];
m4_318 -> m4_319  [key=0, style=solid];
m4_319 -> m4_25  [key=2, style=dotted];
m4_319 -> m4_320  [key=0, style=solid];
m4_303 -> m4_21  [key=2, style=dotted];
m4_303 -> m4_22  [key=2, style=dotted];
m4_303 -> m4_305  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_303 -> m4_307  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_303 -> m4_309  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_303 -> m4_311  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_303 -> m4_313  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_303 -> m4_315  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_303 -> m4_316  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_303 -> m4_318  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_303 -> m4_319  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_303 -> m4_304  [key=0, style=solid];
m4_303 -> m4_306  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_303 -> m4_308  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_303 -> m4_310  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_303 -> m4_312  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_303 -> m4_314  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_303 -> m4_317  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_304 -> m4_305  [key=0, style=solid];
m4_304 -> m4_23  [key=2, style=dotted];
m4_304 -> m4_24  [key=2, style=dotted];
m4_306 -> m4_307  [key=0, style=solid];
m4_306 -> m4_23  [key=2, style=dotted];
m4_306 -> m4_24  [key=2, style=dotted];
m4_308 -> m4_309  [key=0, style=solid];
m4_308 -> m4_23  [key=2, style=dotted];
m4_308 -> m4_24  [key=2, style=dotted];
m4_310 -> m4_311  [key=0, style=solid];
m4_310 -> m4_23  [key=2, style=dotted];
m4_310 -> m4_24  [key=2, style=dotted];
m4_312 -> m4_313  [key=0, style=solid];
m4_312 -> m4_23  [key=2, style=dotted];
m4_312 -> m4_24  [key=2, style=dotted];
m4_314 -> m4_315  [key=0, style=solid];
m4_314 -> m4_23  [key=2, style=dotted];
m4_314 -> m4_24  [key=2, style=dotted];
m4_317 -> m4_318  [key=0, style=solid];
m4_317 -> m4_23  [key=2, style=dotted];
m4_317 -> m4_24  [key=2, style=dotted];
m4_302 -> m4_303  [key=0, style=solid];
m4_320 -> m4_301  [color=blue, key=0, style=bold];
m4_793 -> m4_794  [key=0, style=solid];
m4_804 -> m4_25  [key=2, style=dotted];
m4_804 -> m4_805  [key=0, style=solid];
m4_805 -> m4_25  [key=2, style=dotted];
m4_805 -> m4_806  [key=0, style=solid];
m4_798 -> m4_21  [key=2, style=dotted];
m4_798 -> m4_22  [key=2, style=dotted];
m4_798 -> m4_799  [key=0, style=solid];
m4_798 -> m4_800  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_795 -> m4_804  [color=darkseagreen4, key=1, label=arrayPool, style=dashed];
m4_795 -> m4_805  [color=darkseagreen4, key=1, label=arrayPool, style=dashed];
m4_795 -> m4_796  [key=0, style=solid];
m4_795 -> m4_807  [key=2, style=dotted];
m4_795 -> m4_799  [color=darkseagreen4, key=1, label=arrayPool, style=dashed];
m4_795 -> m4_802  [color=darkseagreen4, key=1, label=arrayPool, style=dashed];
m4_797 -> m4_804  [key=0, style=solid];
m4_797 -> m4_798  [key=0, style=solid];
m4_794 -> m4_798  [color=darkseagreen4, key=1, label=json, style=dashed];
m4_794 -> m4_795  [key=0, style=solid];
m4_794 -> m4_605  [key=2, style=dotted];
m4_799 -> m4_800  [key=0, style=solid];
m4_800 -> m4_23  [key=2, style=dotted];
m4_800 -> m4_800  [key=0, style=solid];
m4_800 -> m4_801  [key=0, style=solid];
m4_796 -> m4_797  [key=0, style=solid];
m4_796 -> m4_801  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_796 -> m4_803  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_802 -> m4_803  [key=0, style=solid];
m4_802 -> m4_808  [key=2, style=dotted];
m4_803 -> m4_797  [key=0, style=solid];
m4_803 -> m4_803  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_801 -> m4_802  [key=0, style=solid];
m4_801 -> m4_803  [key=0, style=solid];
m4_806 -> m4_793  [color=blue, key=0, style=bold];
m4_2681 -> m4_2682  [key=0, style=solid];
m4_2693 -> m4_25  [key=2, style=dotted];
m4_2693 -> m4_2694  [key=0, style=solid];
m4_2695 -> m4_25  [key=2, style=dotted];
m4_2695 -> m4_2696  [key=0, style=solid];
m4_2690 -> m4_21  [key=2, style=dotted];
m4_2690 -> m4_2691  [key=0, style=solid];
m4_2690 -> m4_2692  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2690 -> m4_2694  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2690 -> m4_2696  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2689 -> m4_22  [key=2, style=dotted];
m4_2689 -> m4_2690  [key=0, style=solid];
m4_2692 -> m4_2693  [key=0, style=solid];
m4_2692 -> m4_244  [key=2, style=dotted];
m4_2694 -> m4_2695  [key=0, style=solid];
m4_2694 -> m4_244  [key=2, style=dotted];
m4_2696 -> m4_23  [key=2, style=dotted];
m4_2696 -> m4_24  [key=2, style=dotted];
m4_2696 -> m4_2697  [key=0, style=solid];
m4_2691 -> m4_23  [key=2, style=dotted];
m4_2691 -> m4_24  [key=2, style=dotted];
m4_2691 -> m4_2692  [key=0, style=solid];
m4_2688 -> m4_2689  [key=0, style=solid];
m4_2688 -> m4_632  [key=2, style=dotted];
m4_2682 -> m4_2688  [color=darkseagreen4, key=1, label=sw, style=dashed];
m4_2682 -> m4_2683  [key=0, style=solid];
m4_2682 -> m4_627  [key=2, style=dotted];
m4_2687 -> m4_2688  [key=0, style=solid];
m4_2687 -> m4_631  [key=2, style=dotted];
m4_2683 -> m4_2687  [color=darkseagreen4, key=1, label=writer, style=dashed];
m4_2683 -> m4_628  [key=2, style=dotted];
m4_2683 -> m4_2684  [key=0, style=solid];
m4_2683 -> m4_2685  [color=darkseagreen4, key=1, label=writer, style=dashed];
m4_2683 -> m4_2686  [color=darkseagreen4, key=1, label=writer, style=dashed];
m4_2686 -> m4_2687  [key=0, style=solid];
m4_2686 -> m4_2698  [key=2, style=dotted];
m4_2684 -> m4_2685  [key=0, style=solid];
m4_2684 -> m4_629  [key=2, style=dotted];
m4_2685 -> m4_2686  [key=0, style=solid];
m4_2685 -> m4_2698  [key=2, style=dotted];
m4_2697 -> m4_2681  [color=blue, key=0, style=bold];
m4_4 -> m4_5  [key=0, style=solid];
m4_4 -> m4_23  [key=2, style=dotted];
m4_4 -> m4_24  [key=2, style=dotted];
m4_5 -> m4_4  [color=blue, key=0, style=bold];
m4_5 -> m4_25  [key=2, style=dotted];
m4_5 -> m4_6  [key=0, style=solid];
m4_19 -> m4_25  [key=2, style=dotted];
m4_19 -> m4_20  [key=0, style=solid];
m4_19 -> m4_9  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriterException", style=dashed];
m4_20 -> m4_0  [color=blue, key=0, style=bold];
m4_2771 -> m4_2772  [key=0, style=solid];
m4_590 -> m4_21  [key=2, style=dotted];
m4_590 -> m4_591  [key=0, style=solid];
m4_708 -> m4_21  [key=2, style=dotted];
m4_708 -> m4_22  [key=2, style=dotted];
m4_708 -> m4_709  [key=0, style=solid];
m4_708 -> m4_706  [key=2, style=dotted];
m4_724 -> m4_21  [key=2, style=dotted];
m4_724 -> m4_22  [key=2, style=dotted];
m4_724 -> m4_725  [key=0, style=solid];
m4_724 -> m4_706  [key=2, style=dotted];
m4_2704 -> m4_21  [key=2, style=dotted];
m4_2704 -> m4_22  [key=2, style=dotted];
m4_2704 -> m4_2705  [key=0, style=solid];
m4_1900 -> m4_26  [key=2, style=dotted];
m4_1900 -> m4_1901  [key=0, style=solid];
m4_2006 -> m4_26  [key=2, style=dotted];
m4_2006 -> m4_2007  [key=0, style=solid];
m4_2017 -> m4_26  [key=2, style=dotted];
m4_2017 -> m4_2018  [key=0, style=solid];
m4_2335 -> m4_26  [key=2, style=dotted];
m4_2335 -> m4_2336  [key=0, style=solid];
m4_2351 -> m4_26  [key=2, style=dotted];
m4_2351 -> m4_2352  [key=0, style=solid];
m4_2381 -> m4_26  [key=2, style=dotted];
m4_2381 -> m4_2382  [key=0, style=solid];
m4_2429 -> m4_26  [key=2, style=dotted];
m4_2429 -> m4_2430  [key=0, style=solid];
m4_2437 -> m4_26  [key=2, style=dotted];
m4_2437 -> m4_2438  [key=0, style=solid];
m4_174 -> m4_176  [key=2, style=dotted];
m4_174 -> m4_175  [key=0, style=solid];
m4_191 -> m4_176  [key=2, style=dotted];
m4_191 -> m4_192  [key=0, style=solid];
m4_194 -> m4_176  [key=2, style=dotted];
m4_194 -> m4_195  [key=0, style=solid];
m4_197 -> m4_176  [key=2, style=dotted];
m4_197 -> m4_198  [key=0, style=solid];
m4_200 -> m4_176  [key=2, style=dotted];
m4_200 -> m4_201  [key=0, style=solid];
m4_239 -> m4_23  [key=2, style=dotted];
m4_239 -> m4_240  [key=0, style=solid];
m4_242 -> m4_244  [key=2, style=dotted];
m4_242 -> m4_243  [key=0, style=solid];
m4_246 -> m4_176  [key=2, style=dotted];
m4_246 -> m4_247  [key=0, style=solid];
m4_262 -> m4_23  [key=2, style=dotted];
m4_262 -> m4_263  [key=0, style=solid];
m4_299 -> m4_23  [key=2, style=dotted];
m4_299 -> m4_300  [key=0, style=solid];
m4_404 -> m4_23  [key=2, style=dotted];
m4_404 -> m4_404  [key=0, style=solid];
m4_404 -> m4_405  [key=0, style=solid];
m4_422 -> m4_23  [key=2, style=dotted];
m4_422 -> m4_423  [key=0, style=solid];
m4_435 -> m4_23  [key=2, style=dotted];
m4_435 -> m4_435  [key=0, style=solid];
m4_435 -> m4_436  [key=0, style=solid];
m4_589 -> m4_590  [key=0, style=solid];
m4_591 -> m4_589  [color=blue, key=0, style=bold];
m4_597 -> m4_598  [key=0, style=solid];
m4_597 -> m4_378  [key=2, style=dotted];
m4_679 -> m4_23  [key=2, style=dotted];
m4_679 -> m4_680  [key=0, style=solid];
m4_686 -> m4_23  [key=2, style=dotted];
m4_686 -> m4_687  [key=0, style=solid];
m4_693 -> m4_23  [key=2, style=dotted];
m4_693 -> m4_694  [key=0, style=solid];
m4_707 -> m4_708  [key=0, style=solid];
m4_709 -> m4_176  [key=2, style=dotted];
m4_709 -> m4_710  [key=0, style=solid];
m4_723 -> m4_724  [key=0, style=solid];
m4_725 -> m4_176  [key=2, style=dotted];
m4_725 -> m4_726  [key=0, style=solid];
m4_830 -> m4_831  [key=0, style=solid];
m4_830 -> m4_378  [key=2, style=dotted];
m4_837 -> m4_838  [key=0, style=solid];
m4_837 -> m4_378  [key=2, style=dotted];
m4_844 -> m4_845  [key=0, style=solid];
m4_844 -> m4_846  [key=2, style=dotted];
m4_852 -> m4_853  [key=0, style=solid];
m4_852 -> m4_854  [key=2, style=dotted];
m4_863 -> m4_864  [key=0, style=solid];
m4_863 -> m4_846  [key=2, style=dotted];
m4_878 -> m4_879  [key=0, style=solid];
m4_878 -> m4_378  [key=2, style=dotted];
m4_1031 -> m4_176  [key=2, style=dotted];
m4_1031 -> m4_1032  [key=0, style=solid];
m4_1034 -> m4_176  [key=2, style=dotted];
m4_1034 -> m4_1035  [key=0, style=solid];
m4_1037 -> m4_176  [key=2, style=dotted];
m4_1037 -> m4_1038  [key=0, style=solid];
m4_1040 -> m4_176  [key=2, style=dotted];
m4_1040 -> m4_1041  [key=0, style=solid];
m4_1043 -> m4_176  [key=2, style=dotted];
m4_1043 -> m4_1044  [key=0, style=solid];
m4_1068 -> m4_244  [key=2, style=dotted];
m4_1068 -> m4_1069  [key=0, style=solid];
m4_1071 -> m4_23  [key=2, style=dotted];
m4_1071 -> m4_1072  [key=0, style=solid];
m4_1074 -> m4_244  [key=2, style=dotted];
m4_1074 -> m4_1075  [key=0, style=solid];
m4_1106 -> m4_23  [key=2, style=dotted];
m4_1106 -> m4_1107  [key=0, style=solid];
m4_1109 -> m4_23  [key=2, style=dotted];
m4_1109 -> m4_1110  [key=0, style=solid];
m4_1284 -> m4_23  [key=2, style=dotted];
m4_1284 -> m4_1285  [key=0, style=solid];
m4_1362 -> m4_23  [key=2, style=dotted];
m4_1362 -> m4_1363  [key=0, style=solid];
m4_1379 -> m4_1380  [key=0, style=solid];
m4_1379 -> m4_116  [key=2, style=dotted];
m4_1398 -> m4_244  [key=2, style=dotted];
m4_1398 -> m4_1399  [key=0, style=solid];
m4_1405 -> m4_244  [key=2, style=dotted];
m4_1405 -> m4_1406  [key=0, style=solid];
m4_1412 -> m4_1413  [key=0, style=solid];
m4_1412 -> m4_116  [key=2, style=dotted];
m4_1419 -> m4_1420  [key=0, style=solid];
m4_1419 -> m4_1386  [key=2, style=dotted];
m4_1433 -> m4_1434  [key=0, style=solid];
m4_1433 -> m4_116  [key=2, style=dotted];
m4_1440 -> m4_1441  [key=0, style=solid];
m4_1440 -> m4_116  [key=2, style=dotted];
m4_1511 -> m4_1512  [key=0, style=solid];
m4_1511 -> m4_1386  [key=2, style=dotted];
m4_1613 -> m4_176  [key=2, style=dotted];
m4_1613 -> m4_1614  [key=0, style=solid];
m4_1620 -> m4_23  [key=2, style=dotted];
m4_1620 -> m4_1621  [key=0, style=solid];
m4_1627 -> m4_23  [key=2, style=dotted];
m4_1627 -> m4_1628  [key=0, style=solid];
m4_1634 -> m4_23  [key=2, style=dotted];
m4_1634 -> m4_1635  [key=0, style=solid];
m4_1641 -> m4_23  [key=2, style=dotted];
m4_1641 -> m4_1642  [key=0, style=solid];
m4_1648 -> m4_23  [key=2, style=dotted];
m4_1648 -> m4_1649  [key=0, style=solid];
m4_1793 -> m4_23  [key=2, style=dotted];
m4_1793 -> m4_1794  [key=0, style=solid];
m4_1801 -> m4_23  [key=2, style=dotted];
m4_1801 -> m4_1802  [key=0, style=solid];
m4_1832 -> m4_23  [key=2, style=dotted];
m4_1832 -> m4_1833  [key=0, style=solid];
m4_1867 -> m4_1846  [key=2, style=dotted];
m4_1867 -> m4_1868  [key=0, style=solid];
m4_1888 -> m4_23  [key=2, style=dotted];
m4_1888 -> m4_1889  [key=0, style=solid];
m4_1909 -> m4_23  [key=2, style=dotted];
m4_1909 -> m4_24  [key=2, style=dotted];
m4_1909 -> m4_1910  [key=0, style=solid];
m4_1942 -> m4_176  [key=2, style=dotted];
m4_1942 -> m4_1943  [key=0, style=solid];
m4_1952 -> m4_1953  [key=0, style=solid];
m4_1952 -> m4_116  [key=2, style=dotted];
m4_1959 -> m4_176  [key=2, style=dotted];
m4_1959 -> m4_1960  [key=0, style=solid];
m4_1966 -> m4_1967  [key=0, style=solid];
m4_1966 -> m4_1968  [key=2, style=dotted];
m4_1974 -> m4_1975  [key=0, style=solid];
m4_1974 -> m4_116  [key=2, style=dotted];
m4_1985 -> m4_176  [key=2, style=dotted];
m4_1985 -> m4_1986  [key=0, style=solid];
m4_1996 -> m4_1997  [key=0, style=solid];
m4_1996 -> m4_116  [key=2, style=dotted];
m4_2029 -> m4_2030  [key=0, style=solid];
m4_2029 -> m4_1968  [key=2, style=dotted];
m4_2032 -> m4_2033  [key=0, style=solid];
m4_2032 -> m4_1968  [key=2, style=dotted];
m4_2035 -> m4_2036  [key=0, style=solid];
m4_2035 -> m4_1968  [key=2, style=dotted];
m4_2255 -> m4_23  [key=2, style=dotted];
m4_2255 -> m4_2256  [key=0, style=solid];
m4_2343 -> m4_1392  [key=2, style=dotted];
m4_2343 -> m4_2344  [key=0, style=solid];
m4_2359 -> m4_1392  [key=2, style=dotted];
m4_2359 -> m4_2360  [key=0, style=solid];
m4_2373 -> m4_1392  [key=2, style=dotted];
m4_2373 -> m4_2374  [key=0, style=solid];
m4_2389 -> m4_1846  [key=2, style=dotted];
m4_2389 -> m4_2390  [key=0, style=solid];
m4_2397 -> m4_1846  [key=2, style=dotted];
m4_2397 -> m4_2398  [key=0, style=solid];
m4_2405 -> m4_2406  [key=0, style=solid];
m4_2405 -> m4_116  [key=2, style=dotted];
m4_2413 -> m4_2414  [key=0, style=solid];
m4_2413 -> m4_1968  [key=2, style=dotted];
m4_2421 -> m4_2422  [key=0, style=solid];
m4_2421 -> m4_1968  [key=2, style=dotted];
m4_2453 -> m4_2454  [key=0, style=solid];
m4_2453 -> m4_378  [key=2, style=dotted];
m4_2508 -> m4_23  [key=2, style=dotted];
m4_2508 -> m4_24  [key=2, style=dotted];
m4_2508 -> m4_2509  [key=0, style=solid];
m4_2540 -> m4_23  [key=2, style=dotted];
m4_2540 -> m4_24  [key=2, style=dotted];
m4_2540 -> m4_2541  [key=0, style=solid];
m4_2543 -> m4_23  [key=2, style=dotted];
m4_2543 -> m4_24  [key=2, style=dotted];
m4_2543 -> m4_2544  [key=0, style=solid];
m4_2664 -> m4_23  [key=2, style=dotted];
m4_2664 -> m4_2665  [key=0, style=solid];
m4_2667 -> m4_23  [key=2, style=dotted];
m4_2667 -> m4_2668  [key=0, style=solid];
m4_2670 -> m4_23  [key=2, style=dotted];
m4_2670 -> m4_2671  [key=0, style=solid];
m4_2673 -> m4_23  [key=2, style=dotted];
m4_2673 -> m4_2674  [key=0, style=solid];
m4_2676 -> m4_23  [key=2, style=dotted];
m4_2676 -> m4_2677  [key=0, style=solid];
m4_2679 -> m4_23  [key=2, style=dotted];
m4_2679 -> m4_2680  [key=0, style=solid];
m4_2703 -> m4_2704  [key=0, style=solid];
m4_2705 -> m4_23  [key=2, style=dotted];
m4_2705 -> m4_2705  [key=0, style=solid];
m4_2705 -> m4_2706  [key=0, style=solid];
m4_1899 -> m4_1900  [key=0, style=solid];
m4_1901 -> m4_1899  [color=blue, key=0, style=bold];
m4_2005 -> m4_2006  [key=0, style=solid];
m4_2007 -> m4_2005  [color=blue, key=0, style=bold];
m4_2016 -> m4_2017  [key=0, style=solid];
m4_2018 -> m4_2016  [color=blue, key=0, style=bold];
m4_2334 -> m4_2335  [key=0, style=solid];
m4_2336 -> m4_2334  [color=blue, key=0, style=bold];
m4_2350 -> m4_2351  [key=0, style=solid];
m4_2352 -> m4_2350  [color=blue, key=0, style=bold];
m4_2380 -> m4_2381  [key=0, style=solid];
m4_2382 -> m4_2380  [color=blue, key=0, style=bold];
m4_2428 -> m4_2429  [key=0, style=solid];
m4_2430 -> m4_2428  [color=blue, key=0, style=bold];
m4_2436 -> m4_2437  [key=0, style=solid];
m4_2438 -> m4_2436  [color=blue, key=0, style=bold];
m4_173 -> m4_174  [key=0, style=solid];
m4_190 -> m4_191  [key=0, style=solid];
m4_261 -> m4_262  [key=0, style=solid];
m4_298 -> m4_299  [key=0, style=solid];
m4_421 -> m4_422  [key=0, style=solid];
m4_1283 -> m4_1284  [key=0, style=solid];
m4_1510 -> m4_1511  [key=0, style=solid];
m4_1612 -> m4_1613  [key=0, style=solid];
m4_1866 -> m4_1867  [key=0, style=solid];
m4_1941 -> m4_1942  [key=0, style=solid];
m4_1984 -> m4_1985  [key=0, style=solid];
m4_2034 -> m4_2035  [key=0, style=solid];
m4_2539 -> m4_2540  [key=0, style=solid];
m4_2542 -> m4_2543  [key=0, style=solid];
m4_175 -> m4_173  [color=blue, key=0, style=bold];
m4_192 -> m4_190  [color=blue, key=0, style=bold];
m4_193 -> m4_194  [key=0, style=solid];
m4_195 -> m4_193  [color=blue, key=0, style=bold];
m4_196 -> m4_197  [key=0, style=solid];
m4_198 -> m4_196  [color=blue, key=0, style=bold];
m4_199 -> m4_200  [key=0, style=solid];
m4_201 -> m4_199  [color=blue, key=0, style=bold];
m4_238 -> m4_239  [key=0, style=solid];
m4_240 -> m4_238  [color=blue, key=0, style=bold];
m4_241 -> m4_242  [key=0, style=solid];
m4_243 -> m4_241  [color=blue, key=0, style=bold];
m4_245 -> m4_246  [key=0, style=solid];
m4_247 -> m4_245  [color=blue, key=0, style=bold];
m4_263 -> m4_261  [color=blue, key=0, style=bold];
m4_300 -> m4_298  [color=blue, key=0, style=bold];
m4_403 -> m4_404  [key=0, style=solid];
m4_405 -> m4_403  [color=blue, key=0, style=bold];
m4_423 -> m4_421  [color=blue, key=0, style=bold];
m4_434 -> m4_435  [key=0, style=solid];
m4_436 -> m4_434  [color=blue, key=0, style=bold];
m4_596 -> m4_597  [key=0, style=solid];
m4_598 -> m4_596  [color=blue, key=0, style=bold];
m4_678 -> m4_679  [key=0, style=solid];
m4_680 -> m4_678  [color=blue, key=0, style=bold];
m4_685 -> m4_686  [key=0, style=solid];
m4_687 -> m4_685  [color=blue, key=0, style=bold];
m4_692 -> m4_693  [key=0, style=solid];
m4_694 -> m4_692  [color=blue, key=0, style=bold];
m4_710 -> m4_707  [color=blue, key=0, style=bold];
m4_726 -> m4_723  [color=blue, key=0, style=bold];
m4_829 -> m4_830  [key=0, style=solid];
m4_831 -> m4_829  [color=blue, key=0, style=bold];
m4_836 -> m4_837  [key=0, style=solid];
m4_838 -> m4_836  [color=blue, key=0, style=bold];
m4_843 -> m4_844  [key=0, style=solid];
m4_845 -> m4_843  [color=blue, key=0, style=bold];
m4_851 -> m4_852  [key=0, style=solid];
m4_853 -> m4_851  [color=blue, key=0, style=bold];
m4_862 -> m4_863  [key=0, style=solid];
m4_864 -> m4_862  [color=blue, key=0, style=bold];
m4_877 -> m4_878  [key=0, style=solid];
m4_879 -> m4_877  [color=blue, key=0, style=bold];
m4_1030 -> m4_1031  [key=0, style=solid];
m4_1032 -> m4_1030  [color=blue, key=0, style=bold];
m4_1033 -> m4_1034  [key=0, style=solid];
m4_1035 -> m4_1033  [color=blue, key=0, style=bold];
m4_1036 -> m4_1037  [key=0, style=solid];
m4_1038 -> m4_1036  [color=blue, key=0, style=bold];
m4_1039 -> m4_1040  [key=0, style=solid];
m4_1041 -> m4_1039  [color=blue, key=0, style=bold];
m4_1042 -> m4_1043  [key=0, style=solid];
m4_1044 -> m4_1042  [color=blue, key=0, style=bold];
m4_1067 -> m4_1068  [key=0, style=solid];
m4_1069 -> m4_1067  [color=blue, key=0, style=bold];
m4_1070 -> m4_1071  [key=0, style=solid];
m4_1072 -> m4_1070  [color=blue, key=0, style=bold];
m4_1073 -> m4_1074  [key=0, style=solid];
m4_1075 -> m4_1073  [color=blue, key=0, style=bold];
m4_1105 -> m4_1106  [key=0, style=solid];
m4_1107 -> m4_1105  [color=blue, key=0, style=bold];
m4_1108 -> m4_1109  [key=0, style=solid];
m4_1110 -> m4_1108  [color=blue, key=0, style=bold];
m4_1285 -> m4_1283  [color=blue, key=0, style=bold];
m4_1361 -> m4_1362  [key=0, style=solid];
m4_1363 -> m4_1361  [color=blue, key=0, style=bold];
m4_1378 -> m4_1379  [key=0, style=solid];
m4_1380 -> m4_1378  [color=blue, key=0, style=bold];
m4_1397 -> m4_1398  [key=0, style=solid];
m4_1399 -> m4_1397  [color=blue, key=0, style=bold];
m4_1404 -> m4_1405  [key=0, style=solid];
m4_1406 -> m4_1404  [color=blue, key=0, style=bold];
m4_1411 -> m4_1412  [key=0, style=solid];
m4_1413 -> m4_1411  [color=blue, key=0, style=bold];
m4_1418 -> m4_1419  [key=0, style=solid];
m4_1420 -> m4_1418  [color=blue, key=0, style=bold];
m4_1432 -> m4_1433  [key=0, style=solid];
m4_1434 -> m4_1432  [color=blue, key=0, style=bold];
m4_1439 -> m4_1440  [key=0, style=solid];
m4_1441 -> m4_1439  [color=blue, key=0, style=bold];
m4_1512 -> m4_1510  [color=blue, key=0, style=bold];
m4_1614 -> m4_1612  [color=blue, key=0, style=bold];
m4_1619 -> m4_1620  [key=0, style=solid];
m4_1621 -> m4_1619  [color=blue, key=0, style=bold];
m4_1626 -> m4_1627  [key=0, style=solid];
m4_1628 -> m4_1626  [color=blue, key=0, style=bold];
m4_1633 -> m4_1634  [key=0, style=solid];
m4_1635 -> m4_1633  [color=blue, key=0, style=bold];
m4_1640 -> m4_1641  [key=0, style=solid];
m4_1642 -> m4_1640  [color=blue, key=0, style=bold];
m4_1647 -> m4_1648  [key=0, style=solid];
m4_1649 -> m4_1647  [color=blue, key=0, style=bold];
m4_1792 -> m4_1793  [key=0, style=solid];
m4_1794 -> m4_1792  [color=blue, key=0, style=bold];
m4_1800 -> m4_1801  [key=0, style=solid];
m4_1802 -> m4_1800  [color=blue, key=0, style=bold];
m4_1831 -> m4_1832  [key=0, style=solid];
m4_1833 -> m4_1831  [color=blue, key=0, style=bold];
m4_1868 -> m4_1866  [color=blue, key=0, style=bold];
m4_1887 -> m4_1888  [key=0, style=solid];
m4_1889 -> m4_1887  [color=blue, key=0, style=bold];
m4_1908 -> m4_1909  [key=0, style=solid];
m4_1910 -> m4_1908  [color=blue, key=0, style=bold];
m4_1943 -> m4_1941  [color=blue, key=0, style=bold];
m4_1951 -> m4_1952  [key=0, style=solid];
m4_1953 -> m4_1951  [color=blue, key=0, style=bold];
m4_1958 -> m4_1959  [key=0, style=solid];
m4_1960 -> m4_1958  [color=blue, key=0, style=bold];
m4_1965 -> m4_1966  [key=0, style=solid];
m4_1967 -> m4_1965  [color=blue, key=0, style=bold];
m4_1973 -> m4_1974  [key=0, style=solid];
m4_1975 -> m4_1973  [color=blue, key=0, style=bold];
m4_1986 -> m4_1984  [color=blue, key=0, style=bold];
m4_1995 -> m4_1996  [key=0, style=solid];
m4_1997 -> m4_1995  [color=blue, key=0, style=bold];
m4_2028 -> m4_2029  [key=0, style=solid];
m4_2030 -> m4_2028  [color=blue, key=0, style=bold];
m4_2031 -> m4_2032  [key=0, style=solid];
m4_2033 -> m4_2031  [color=blue, key=0, style=bold];
m4_2036 -> m4_2034  [color=blue, key=0, style=bold];
m4_2254 -> m4_2255  [key=0, style=solid];
m4_2256 -> m4_2254  [color=blue, key=0, style=bold];
m4_2342 -> m4_2343  [key=0, style=solid];
m4_2344 -> m4_2342  [color=blue, key=0, style=bold];
m4_2358 -> m4_2359  [key=0, style=solid];
m4_2360 -> m4_2358  [color=blue, key=0, style=bold];
m4_2372 -> m4_2373  [key=0, style=solid];
m4_2374 -> m4_2372  [color=blue, key=0, style=bold];
m4_2388 -> m4_2389  [key=0, style=solid];
m4_2390 -> m4_2388  [color=blue, key=0, style=bold];
m4_2396 -> m4_2397  [key=0, style=solid];
m4_2398 -> m4_2396  [color=blue, key=0, style=bold];
m4_2404 -> m4_2405  [key=0, style=solid];
m4_2406 -> m4_2404  [color=blue, key=0, style=bold];
m4_2412 -> m4_2413  [key=0, style=solid];
m4_2414 -> m4_2412  [color=blue, key=0, style=bold];
m4_2420 -> m4_2421  [key=0, style=solid];
m4_2422 -> m4_2420  [color=blue, key=0, style=bold];
m4_2452 -> m4_2453  [key=0, style=solid];
m4_2454 -> m4_2452  [color=blue, key=0, style=bold];
m4_2507 -> m4_2508  [key=0, style=solid];
m4_2509 -> m4_2507  [color=blue, key=0, style=bold];
m4_2541 -> m4_2539  [color=blue, key=0, style=bold];
m4_2544 -> m4_2542  [color=blue, key=0, style=bold];
m4_2663 -> m4_2664  [key=0, style=solid];
m4_2665 -> m4_2663  [color=blue, key=0, style=bold];
m4_2666 -> m4_2667  [key=0, style=solid];
m4_2668 -> m4_2666  [color=blue, key=0, style=bold];
m4_2669 -> m4_2670  [key=0, style=solid];
m4_2671 -> m4_2669  [color=blue, key=0, style=bold];
m4_2672 -> m4_2673  [key=0, style=solid];
m4_2674 -> m4_2672  [color=blue, key=0, style=bold];
m4_2675 -> m4_2676  [key=0, style=solid];
m4_2677 -> m4_2675  [color=blue, key=0, style=bold];
m4_2678 -> m4_2679  [key=0, style=solid];
m4_2680 -> m4_2678  [color=blue, key=0, style=bold];
m4_2706 -> m4_2703  [color=blue, key=0, style=bold];
m4_2777 -> m4_357  [key=2, style=dotted];
m4_2777 -> m4_2769  [key=2, style=dotted];
m4_2777 -> m4_2778  [key=0, style=solid];
m4_2777 -> m4_2779  [color=darkseagreen4, key=1, label=bytes, style=dashed];
m4_2779 -> m4_808  [key=2, style=dotted];
m4_2779 -> m4_2780  [key=0, style=solid];
m4_2776 -> m4_2777  [key=0, style=solid];
m4_2776 -> m4_2786  [key=2, style=dotted];
m4_2776 -> m4_2787  [key=2, style=dotted];
m4_2776 -> m4_2788  [key=2, style=dotted];
m4_2778 -> m4_2779  [key=0, style=solid];
m4_2778 -> m4_2789  [key=2, style=dotted];
m4_2780 -> m4_2781  [key=0, style=solid];
m4_2780 -> m4_2764  [key=2, style=dotted];
m4_2774 -> m4_2770  [key=2, style=dotted];
m4_2774 -> m4_2775  [key=0, style=solid];
m4_2775 -> m4_2776  [key=0, style=solid];
m4_2775 -> m4_2778  [color=darkseagreen4, key=1, label=serverSocket, style=dashed];
m4_2775 -> m4_2785  [key=2, style=dotted];
m4_2772 -> m4_2775  [color=darkseagreen4, key=1, label=server, style=dashed];
m4_2772 -> m4_2773  [key=0, style=solid];
m4_2772 -> m4_2782  [key=2, style=dotted];
m4_2772 -> m4_2783  [key=2, style=dotted];
m4_2773 -> m4_2774  [key=0, style=solid];
m4_2773 -> m4_2784  [key=2, style=dotted];
m4_2781 -> m4_2771  [color=blue, key=0, style=bold];
m4_1690 -> m4_1691  [key=0, style=solid];
m4_1698 -> m4_25  [key=2, style=dotted];
m4_1698 -> m4_1698  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m4_1698 -> m4_1699  [key=0, style=solid];
m4_1692 -> m4_21  [key=2, style=dotted];
m4_1692 -> m4_22  [key=2, style=dotted];
m4_1692 -> m4_1698  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1692 -> m4_1693  [key=0, style=solid];
m4_1692 -> m4_1695  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1692 -> m4_1697  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1692 -> m4_1699  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1697 -> m4_1698  [key=0, style=solid];
m4_1697 -> m4_23  [key=2, style=dotted];
m4_1697 -> m4_24  [key=2, style=dotted];
m4_1699 -> m4_23  [key=2, style=dotted];
m4_1699 -> m4_1700  [key=0, style=solid];
m4_1699 -> m4_158  [key=2, style=dotted];
m4_1691 -> m4_1692  [key=0, style=solid];
m4_1693 -> m4_1694  [key=0, style=solid];
m4_1693 -> m4_1696  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_1695 -> m4_23  [key=2, style=dotted];
m4_1695 -> m4_24  [key=2, style=dotted];
m4_1695 -> m4_1696  [key=0, style=solid];
m4_1694 -> m4_1697  [key=0, style=solid];
m4_1694 -> m4_1695  [key=0, style=solid];
m4_1696 -> m4_1694  [key=0, style=solid];
m4_1696 -> m4_1696  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_1700 -> m4_1690  [color=blue, key=0, style=bold];
m4_2094 -> m4_2095  [key=0, style=solid];
m4_2098 -> m4_25  [key=2, style=dotted];
m4_2098 -> m4_2099  [key=0, style=solid];
m4_2100 -> m4_25  [key=2, style=dotted];
m4_2100 -> m4_2101  [key=0, style=solid];
m4_2102 -> m4_25  [key=2, style=dotted];
m4_2102 -> m4_2102  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m4_2102 -> m4_2103  [key=0, style=solid];
m4_2104 -> m4_25  [key=2, style=dotted];
m4_2104 -> m4_2105  [key=0, style=solid];
m4_2105 -> m4_25  [key=2, style=dotted];
m4_2105 -> m4_2106  [key=0, style=solid];
m4_2107 -> m4_25  [key=2, style=dotted];
m4_2107 -> m4_2108  [key=0, style=solid];
m4_2109 -> m4_25  [key=2, style=dotted];
m4_2109 -> m4_2110  [key=0, style=solid];
m4_2110 -> m4_25  [key=2, style=dotted];
m4_2110 -> m4_2111  [key=0, style=solid];
m4_2112 -> m4_25  [key=2, style=dotted];
m4_2112 -> m4_2113  [key=0, style=solid];
m4_2114 -> m4_25  [key=2, style=dotted];
m4_2114 -> m4_2115  [key=0, style=solid];
m4_2116 -> m4_25  [key=2, style=dotted];
m4_2116 -> m4_2117  [key=0, style=solid];
m4_2117 -> m4_25  [key=2, style=dotted];
m4_2117 -> m4_2118  [key=0, style=solid];
m4_2119 -> m4_25  [key=2, style=dotted];
m4_2119 -> m4_2120  [key=0, style=solid];
m4_2121 -> m4_25  [key=2, style=dotted];
m4_2121 -> m4_2122  [key=0, style=solid];
m4_2122 -> m4_25  [key=2, style=dotted];
m4_2122 -> m4_2123  [key=0, style=solid];
m4_2123 -> m4_25  [key=2, style=dotted];
m4_2123 -> m4_2124  [key=0, style=solid];
m4_2125 -> m4_25  [key=2, style=dotted];
m4_2125 -> m4_2126  [key=0, style=solid];
m4_2127 -> m4_25  [key=2, style=dotted];
m4_2127 -> m4_2128  [key=0, style=solid];
m4_2129 -> m4_25  [key=2, style=dotted];
m4_2129 -> m4_2130  [key=0, style=solid];
m4_2131 -> m4_25  [key=2, style=dotted];
m4_2131 -> m4_2132  [key=0, style=solid];
m4_2096 -> m4_21  [key=2, style=dotted];
m4_2096 -> m4_2098  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2096 -> m4_2100  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2096 -> m4_2102  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2096 -> m4_2104  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2096 -> m4_2105  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2096 -> m4_2107  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2096 -> m4_2109  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2096 -> m4_2110  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2096 -> m4_2112  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2096 -> m4_2114  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2096 -> m4_2116  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2096 -> m4_2117  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2096 -> m4_2119  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2096 -> m4_2121  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2096 -> m4_2122  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2096 -> m4_2123  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2096 -> m4_2125  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2096 -> m4_2127  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2096 -> m4_2129  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2096 -> m4_2131  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2096 -> m4_2097  [key=0, style=solid];
m4_2096 -> m4_358  [key=2, style=dotted];
m4_2096 -> m4_396  [key=2, style=dotted];
m4_2096 -> m4_397  [key=2, style=dotted];
m4_2096 -> m4_2099  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2096 -> m4_2101  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2096 -> m4_2103  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2096 -> m4_2106  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2096 -> m4_2108  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2096 -> m4_2111  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2096 -> m4_2113  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2096 -> m4_2115  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2096 -> m4_2118  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2096 -> m4_2120  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2096 -> m4_2124  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2096 -> m4_2126  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2096 -> m4_2128  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2096 -> m4_2130  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2097 -> m4_2098  [key=0, style=solid];
m4_2097 -> m4_23  [key=2, style=dotted];
m4_2097 -> m4_24  [key=2, style=dotted];
m4_2099 -> m4_2100  [key=0, style=solid];
m4_2099 -> m4_23  [key=2, style=dotted];
m4_2099 -> m4_24  [key=2, style=dotted];
m4_2101 -> m4_2102  [key=0, style=solid];
m4_2101 -> m4_23  [key=2, style=dotted];
m4_2101 -> m4_24  [key=2, style=dotted];
m4_2103 -> m4_2104  [key=0, style=solid];
m4_2103 -> m4_23  [key=2, style=dotted];
m4_2103 -> m4_24  [key=2, style=dotted];
m4_2106 -> m4_2107  [key=0, style=solid];
m4_2106 -> m4_23  [key=2, style=dotted];
m4_2106 -> m4_24  [key=2, style=dotted];
m4_2108 -> m4_2109  [key=0, style=solid];
m4_2108 -> m4_23  [key=2, style=dotted];
m4_2108 -> m4_24  [key=2, style=dotted];
m4_2111 -> m4_2112  [key=0, style=solid];
m4_2111 -> m4_23  [key=2, style=dotted];
m4_2111 -> m4_24  [key=2, style=dotted];
m4_2113 -> m4_2114  [key=0, style=solid];
m4_2113 -> m4_23  [key=2, style=dotted];
m4_2113 -> m4_24  [key=2, style=dotted];
m4_2115 -> m4_2116  [key=0, style=solid];
m4_2115 -> m4_23  [key=2, style=dotted];
m4_2115 -> m4_24  [key=2, style=dotted];
m4_2118 -> m4_2119  [key=0, style=solid];
m4_2118 -> m4_23  [key=2, style=dotted];
m4_2118 -> m4_24  [key=2, style=dotted];
m4_2120 -> m4_2121  [key=0, style=solid];
m4_2120 -> m4_23  [key=2, style=dotted];
m4_2120 -> m4_24  [key=2, style=dotted];
m4_2124 -> m4_2125  [key=0, style=solid];
m4_2124 -> m4_23  [key=2, style=dotted];
m4_2124 -> m4_24  [key=2, style=dotted];
m4_2126 -> m4_2127  [key=0, style=solid];
m4_2126 -> m4_23  [key=2, style=dotted];
m4_2126 -> m4_24  [key=2, style=dotted];
m4_2128 -> m4_2129  [key=0, style=solid];
m4_2128 -> m4_23  [key=2, style=dotted];
m4_2128 -> m4_24  [key=2, style=dotted];
m4_2130 -> m4_2131  [key=0, style=solid];
m4_2130 -> m4_23  [key=2, style=dotted];
m4_2130 -> m4_24  [key=2, style=dotted];
m4_2095 -> m4_2096  [key=0, style=solid];
m4_2132 -> m4_2094  [color=blue, key=0, style=bold];
m4_2455 -> m4_2456  [key=0, style=solid];
m4_2458 -> m4_25  [key=2, style=dotted];
m4_2458 -> m4_2459  [key=0, style=solid];
m4_2458 -> m4_1574  [key=2, style=dotted];
m4_2458 -> m4_2499  [key=2, style=dotted];
m4_2459 -> m4_25  [key=2, style=dotted];
m4_2459 -> m4_2460  [key=0, style=solid];
m4_2459 -> m4_2500  [key=2, style=dotted];
m4_2464 -> m4_25  [key=2, style=dotted];
m4_2464 -> m4_2465  [key=0, style=solid];
m4_2465 -> m4_25  [key=2, style=dotted];
m4_2465 -> m4_2466  [key=0, style=solid];
m4_2467 -> m4_25  [key=2, style=dotted];
m4_2467 -> m4_2468  [key=0, style=solid];
m4_2468 -> m4_25  [key=2, style=dotted];
m4_2468 -> m4_2469  [key=0, style=solid];
m4_2470 -> m4_25  [key=2, style=dotted];
m4_2470 -> m4_2471  [key=0, style=solid];
m4_2471 -> m4_25  [key=2, style=dotted];
m4_2471 -> m4_2472  [key=0, style=solid];
m4_2473 -> m4_25  [key=2, style=dotted];
m4_2473 -> m4_2474  [key=0, style=solid];
m4_2474 -> m4_25  [key=2, style=dotted];
m4_2474 -> m4_2475  [key=0, style=solid];
m4_2476 -> m4_25  [key=2, style=dotted];
m4_2476 -> m4_2477  [key=0, style=solid];
m4_2477 -> m4_25  [key=2, style=dotted];
m4_2477 -> m4_2478  [key=0, style=solid];
m4_2482 -> m4_25  [key=2, style=dotted];
m4_2482 -> m4_2483  [key=0, style=solid];
m4_2483 -> m4_25  [key=2, style=dotted];
m4_2483 -> m4_2484  [key=0, style=solid];
m4_2485 -> m4_25  [key=2, style=dotted];
m4_2485 -> m4_2486  [key=0, style=solid];
m4_2486 -> m4_25  [key=2, style=dotted];
m4_2486 -> m4_2487  [key=0, style=solid];
m4_2488 -> m4_25  [key=2, style=dotted];
m4_2488 -> m4_2489  [key=0, style=solid];
m4_2489 -> m4_25  [key=2, style=dotted];
m4_2489 -> m4_2490  [key=0, style=solid];
m4_2491 -> m4_25  [key=2, style=dotted];
m4_2491 -> m4_2492  [key=0, style=solid];
m4_2492 -> m4_25  [key=2, style=dotted];
m4_2492 -> m4_2493  [key=0, style=solid];
m4_2494 -> m4_25  [key=2, style=dotted];
m4_2494 -> m4_2495  [key=0, style=solid];
m4_2495 -> m4_25  [key=2, style=dotted];
m4_2495 -> m4_2496  [key=0, style=solid];
m4_2461 -> m4_21  [key=2, style=dotted];
m4_2461 -> m4_22  [key=2, style=dotted];
m4_2461 -> m4_2464  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2461 -> m4_2465  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2461 -> m4_2467  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2461 -> m4_2468  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2461 -> m4_2470  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2461 -> m4_2471  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2461 -> m4_2473  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2461 -> m4_2474  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2461 -> m4_2476  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2461 -> m4_2477  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2461 -> m4_2462  [key=0, style=solid];
m4_2461 -> m4_2463  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2461 -> m4_2466  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2461 -> m4_2469  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2461 -> m4_2472  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2461 -> m4_2475  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2461 -> m4_2478  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2479 -> m4_21  [key=2, style=dotted];
m4_2479 -> m4_22  [key=2, style=dotted];
m4_2479 -> m4_2482  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2479 -> m4_2483  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2479 -> m4_2485  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2479 -> m4_2486  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2479 -> m4_2488  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2479 -> m4_2489  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2479 -> m4_2491  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2479 -> m4_2492  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2479 -> m4_2494  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2479 -> m4_2495  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2479 -> m4_2480  [key=0, style=solid];
m4_2479 -> m4_2481  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2479 -> m4_2484  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2479 -> m4_2487  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2479 -> m4_2490  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2479 -> m4_2493  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2479 -> m4_2496  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2457 -> m4_2458  [key=0, style=solid];
m4_2457 -> m4_2459  [color=darkseagreen4, key=1, label=d, style=dashed];
m4_2457 -> m4_2498  [key=2, style=dotted];
m4_2460 -> m4_2461  [key=0, style=solid];
m4_2460 -> m4_2479  [color=darkseagreen4, key=1, label=json, style=dashed];
m4_2463 -> m4_2464  [key=0, style=solid];
m4_2463 -> m4_23  [key=2, style=dotted];
m4_2466 -> m4_2467  [key=0, style=solid];
m4_2466 -> m4_23  [key=2, style=dotted];
m4_2469 -> m4_2470  [key=0, style=solid];
m4_2469 -> m4_23  [key=2, style=dotted];
m4_2472 -> m4_2473  [key=0, style=solid];
m4_2472 -> m4_23  [key=2, style=dotted];
m4_2475 -> m4_2476  [key=0, style=solid];
m4_2475 -> m4_23  [key=2, style=dotted];
m4_2478 -> m4_2479  [key=0, style=solid];
m4_2478 -> m4_23  [key=2, style=dotted];
m4_2481 -> m4_2482  [key=0, style=solid];
m4_2481 -> m4_244  [key=2, style=dotted];
m4_2484 -> m4_2485  [key=0, style=solid];
m4_2484 -> m4_244  [key=2, style=dotted];
m4_2487 -> m4_2488  [key=0, style=solid];
m4_2487 -> m4_244  [key=2, style=dotted];
m4_2490 -> m4_2491  [key=0, style=solid];
m4_2490 -> m4_244  [key=2, style=dotted];
m4_2493 -> m4_2494  [key=0, style=solid];
m4_2493 -> m4_244  [key=2, style=dotted];
m4_2496 -> m4_23  [key=2, style=dotted];
m4_2496 -> m4_2497  [key=0, style=solid];
m4_2462 -> m4_23  [key=2, style=dotted];
m4_2462 -> m4_2463  [key=0, style=solid];
m4_2480 -> m4_23  [key=2, style=dotted];
m4_2480 -> m4_2481  [key=0, style=solid];
m4_2456 -> m4_2457  [key=0, style=solid];
m4_2497 -> m4_2455  [color=blue, key=0, style=bold];
m4_1428 -> m4_1429  [key=0, style=solid];
m4_1429 -> m4_21  [key=2, style=dotted];
m4_1429 -> m4_22  [key=2, style=dotted];
m4_1429 -> m4_1430  [key=0, style=solid];
m4_1429 -> m4_1433  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1430 -> m4_1431  [key=0, style=solid];
m4_1430 -> m4_172  [key=2, style=dotted];
m4_1430 -> m4_1432  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1431 -> m4_1428  [color=blue, key=0, style=bold];
m4_2796 -> m4_2799  [key=0, style=solid];
m4_2799 -> m4_2800  [key=0, style=solid];
m4_2799 -> m4_2801  [key=2, style=dotted];
m4_2799 -> m4_2802  [key=2, style=dotted];
m4_2800 -> m4_2796  [color=blue, key=0, style=bold];
m4_1859 -> m4_1860  [key=0, style=solid];
m4_1863 -> m4_25  [key=2, style=dotted];
m4_1863 -> m4_1864  [key=0, style=solid];
m4_1863 -> m4_1846  [key=2, style=dotted];
m4_1860 -> m4_21  [key=2, style=dotted];
m4_1860 -> m4_22  [key=2, style=dotted];
m4_1860 -> m4_1863  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1860 -> m4_1861  [key=0, style=solid];
m4_1860 -> m4_1862  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1860 -> m4_1867  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1860 -> m4_1864  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1862 -> m4_1863  [key=0, style=solid];
m4_1862 -> m4_172  [key=2, style=dotted];
m4_1862 -> m4_1866  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1864 -> m4_23  [key=2, style=dotted];
m4_1864 -> m4_24  [key=2, style=dotted];
m4_1864 -> m4_1865  [key=0, style=solid];
m4_1861 -> m4_23  [key=2, style=dotted];
m4_1861 -> m4_24  [key=2, style=dotted];
m4_1861 -> m4_1862  [key=0, style=solid];
m4_1865 -> m4_1859  [color=blue, key=0, style=bold];
m4_1934 -> m4_1935  [key=0, style=solid];
m4_1938 -> m4_25  [key=2, style=dotted];
m4_1938 -> m4_1939  [key=0, style=solid];
m4_1938 -> m4_176  [key=2, style=dotted];
m4_1935 -> m4_21  [key=2, style=dotted];
m4_1935 -> m4_22  [key=2, style=dotted];
m4_1935 -> m4_1938  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1935 -> m4_1936  [key=0, style=solid];
m4_1935 -> m4_1937  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1935 -> m4_1942  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1935 -> m4_1939  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1937 -> m4_1938  [key=0, style=solid];
m4_1937 -> m4_172  [key=2, style=dotted];
m4_1937 -> m4_1941  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1939 -> m4_23  [key=2, style=dotted];
m4_1939 -> m4_24  [key=2, style=dotted];
m4_1939 -> m4_1940  [key=0, style=solid];
m4_1936 -> m4_23  [key=2, style=dotted];
m4_1936 -> m4_1937  [key=0, style=solid];
m4_1940 -> m4_1934  [color=blue, key=0, style=bold];
m4_1356 -> m4_1357  [key=0, style=solid];
m4_1357 -> m4_21  [key=2, style=dotted];
m4_1357 -> m4_22  [key=2, style=dotted];
m4_1357 -> m4_1358  [key=0, style=solid];
m4_1357 -> m4_1359  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1357 -> m4_1362  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1358 -> m4_23  [key=2, style=dotted];
m4_1358 -> m4_1359  [key=0, style=solid];
m4_1359 -> m4_1360  [key=0, style=solid];
m4_1359 -> m4_172  [key=2, style=dotted];
m4_1359 -> m4_1361  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1360 -> m4_1356  [color=blue, key=0, style=bold];
m4_2383 -> m4_2384  [key=0, style=solid];
m4_2385 -> m4_21  [key=2, style=dotted];
m4_2385 -> m4_22  [key=2, style=dotted];
m4_2385 -> m4_2386  [key=0, style=solid];
m4_2385 -> m4_2389  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2384 -> m4_2385  [key=0, style=solid];
m4_2386 -> m4_2387  [key=0, style=solid];
m4_2386 -> m4_172  [key=2, style=dotted];
m4_2386 -> m4_2388  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_2387 -> m4_2383  [color=blue, key=0, style=bold];
m4_1527 -> m4_1528  [key=0, style=solid];
m4_1531 -> m4_25  [key=2, style=dotted];
m4_1531 -> m4_1532  [key=0, style=solid];
m4_1533 -> m4_25  [key=2, style=dotted];
m4_1533 -> m4_1534  [key=0, style=solid];
m4_1535 -> m4_25  [key=2, style=dotted];
m4_1535 -> m4_1536  [key=0, style=solid];
m4_1536 -> m4_25  [key=2, style=dotted];
m4_1536 -> m4_1537  [key=0, style=solid];
m4_1537 -> m4_25  [key=2, style=dotted];
m4_1537 -> m4_1538  [key=0, style=solid];
m4_1537 -> m4_1484  [key=2, style=dotted];
m4_1537 -> m4_1485  [key=2, style=dotted];
m4_1537 -> m4_1486  [key=2, style=dotted];
m4_1537 -> m4_1541  [key=2, style=dotted];
m4_1537 -> m4_1542  [key=2, style=dotted];
m4_1539 -> m4_25  [key=2, style=dotted];
m4_1539 -> m4_1540  [key=0, style=solid];
m4_1529 -> m4_21  [key=2, style=dotted];
m4_1529 -> m4_22  [key=2, style=dotted];
m4_1529 -> m4_1531  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1529 -> m4_1533  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1529 -> m4_1535  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1529 -> m4_1536  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1529 -> m4_1537  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1529 -> m4_1539  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1529 -> m4_1530  [key=0, style=solid];
m4_1529 -> m4_1532  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1529 -> m4_1534  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1529 -> m4_1538  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1530 -> m4_1531  [key=0, style=solid];
m4_1530 -> m4_23  [key=2, style=dotted];
m4_1530 -> m4_24  [key=2, style=dotted];
m4_1532 -> m4_1533  [key=0, style=solid];
m4_1532 -> m4_23  [key=2, style=dotted];
m4_1532 -> m4_24  [key=2, style=dotted];
m4_1534 -> m4_1535  [key=0, style=solid];
m4_1534 -> m4_1386  [key=2, style=dotted];
m4_1538 -> m4_1539  [key=0, style=solid];
m4_1538 -> m4_23  [key=2, style=dotted];
m4_1538 -> m4_24  [key=2, style=dotted];
m4_1528 -> m4_1529  [key=0, style=solid];
m4_1540 -> m4_1527  [color=blue, key=0, style=bold];
m4_429 -> m4_430  [key=0, style=solid];
m4_431 -> m4_21  [key=2, style=dotted];
m4_431 -> m4_22  [key=2, style=dotted];
m4_431 -> m4_432  [key=0, style=solid];
m4_431 -> m4_435  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_430 -> m4_431  [key=0, style=solid];
m4_432 -> m4_433  [key=0, style=solid];
m4_432 -> m4_172  [key=2, style=dotted];
m4_432 -> m4_434  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_433 -> m4_429  [color=blue, key=0, style=bold];
m4_606 -> m4_607  [key=0, style=solid];
m4_622 -> m4_25  [key=2, style=dotted];
m4_622 -> m4_623  [key=0, style=solid];
m4_617 -> m4_21  [key=2, style=dotted];
m4_617 -> m4_22  [key=2, style=dotted];
m4_617 -> m4_622  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_617 -> m4_618  [key=0, style=solid];
m4_617 -> m4_621  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_617 -> m4_624  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_617 -> m4_625  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_621 -> m4_622  [key=0, style=solid];
m4_621 -> m4_23  [key=2, style=dotted];
m4_621 -> m4_24  [key=2, style=dotted];
m4_619 -> m4_622  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_619 -> m4_620  [key=0, style=solid];
m4_619 -> m4_623  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_623 -> m4_623  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_623 -> m4_620  [key=0, style=solid];
m4_616 -> m4_617  [key=0, style=solid];
m4_616 -> m4_632  [key=2, style=dotted];
m4_618 -> m4_23  [key=2, style=dotted];
m4_618 -> m4_24  [key=2, style=dotted];
m4_618 -> m4_619  [key=0, style=solid];
m4_624 -> m4_23  [key=2, style=dotted];
m4_624 -> m4_24  [key=2, style=dotted];
m4_624 -> m4_625  [key=0, style=solid];
m4_625 -> m4_23  [key=2, style=dotted];
m4_625 -> m4_626  [key=0, style=solid];
m4_625 -> m4_158  [key=2, style=dotted];
m4_620 -> m4_621  [key=0, style=solid];
m4_620 -> m4_624  [key=0, style=solid];
m4_608 -> m4_616  [color=darkseagreen4, key=1, label=sw, style=dashed];
m4_608 -> m4_609  [key=0, style=solid];
m4_608 -> m4_627  [key=2, style=dotted];
m4_615 -> m4_616  [key=0, style=solid];
m4_615 -> m4_631  [key=2, style=dotted];
m4_607 -> m4_620  [color=darkseagreen4, key=1, label=valueCount, style=dashed];
m4_607 -> m4_608  [key=0, style=solid];
m4_607 -> m4_612  [color=darkseagreen4, key=1, label=valueCount, style=dashed];
m4_609 -> m4_615  [color=darkseagreen4, key=1, label=writer, style=dashed];
m4_609 -> m4_628  [key=2, style=dotted];
m4_609 -> m4_610  [key=0, style=solid];
m4_609 -> m4_613  [color=darkseagreen4, key=1, label=writer, style=dashed];
m4_612 -> m4_615  [key=0, style=solid];
m4_612 -> m4_613  [key=0, style=solid];
m4_610 -> m4_611  [key=0, style=solid];
m4_610 -> m4_629  [key=2, style=dotted];
m4_613 -> m4_614  [key=0, style=solid];
m4_613 -> m4_630  [key=2, style=dotted];
m4_611 -> m4_612  [key=0, style=solid];
m4_611 -> m4_613  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_611 -> m4_614  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_614 -> m4_612  [key=0, style=solid];
m4_614 -> m4_614  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_626 -> m4_606  [color=blue, key=0, style=bold];
m4_1501 -> m4_1502  [key=0, style=solid];
m4_1505 -> m4_25  [key=2, style=dotted];
m4_1505 -> m4_1506  [key=0, style=solid];
m4_1507 -> m4_25  [key=2, style=dotted];
m4_1507 -> m4_1508  [key=0, style=solid];
m4_1503 -> m4_21  [key=2, style=dotted];
m4_1503 -> m4_22  [key=2, style=dotted];
m4_1503 -> m4_1505  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1503 -> m4_1507  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1503 -> m4_1504  [key=0, style=solid];
m4_1503 -> m4_1506  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1503 -> m4_1508  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1503 -> m4_1511  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1504 -> m4_1505  [key=0, style=solid];
m4_1504 -> m4_23  [key=2, style=dotted];
m4_1504 -> m4_24  [key=2, style=dotted];
m4_1506 -> m4_1507  [key=0, style=solid];
m4_1506 -> m4_23  [key=2, style=dotted];
m4_1506 -> m4_24  [key=2, style=dotted];
m4_1508 -> m4_1509  [key=0, style=solid];
m4_1508 -> m4_172  [key=2, style=dotted];
m4_1508 -> m4_1510  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1502 -> m4_1503  [key=0, style=solid];
m4_1509 -> m4_1501  [color=blue, key=0, style=bold];
m4_1457 -> m4_1458  [key=0, style=solid];
m4_1461 -> m4_25  [key=2, style=dotted];
m4_1461 -> m4_1462  [key=0, style=solid];
m4_1463 -> m4_25  [key=2, style=dotted];
m4_1463 -> m4_1464  [key=0, style=solid];
m4_1465 -> m4_25  [key=2, style=dotted];
m4_1465 -> m4_1465  [color=darkorchid, key=3, label="Local variable string value", style=bold];
m4_1465 -> m4_1466  [key=0, style=solid];
m4_1466 -> m4_25  [key=2, style=dotted];
m4_1466 -> m4_1467  [key=0, style=solid];
m4_1468 -> m4_25  [key=2, style=dotted];
m4_1468 -> m4_1469  [key=0, style=solid];
m4_1459 -> m4_21  [key=2, style=dotted];
m4_1459 -> m4_22  [key=2, style=dotted];
m4_1459 -> m4_1461  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1459 -> m4_1463  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1459 -> m4_1465  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1459 -> m4_1466  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1459 -> m4_1468  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1459 -> m4_1460  [key=0, style=solid];
m4_1459 -> m4_1462  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1459 -> m4_1464  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1459 -> m4_1467  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1460 -> m4_1461  [key=0, style=solid];
m4_1460 -> m4_23  [key=2, style=dotted];
m4_1460 -> m4_24  [key=2, style=dotted];
m4_1462 -> m4_1463  [key=0, style=solid];
m4_1462 -> m4_23  [key=2, style=dotted];
m4_1462 -> m4_24  [key=2, style=dotted];
m4_1464 -> m4_1465  [key=0, style=solid];
m4_1464 -> m4_23  [key=2, style=dotted];
m4_1464 -> m4_24  [key=2, style=dotted];
m4_1467 -> m4_1468  [key=0, style=solid];
m4_1467 -> m4_23  [key=2, style=dotted];
m4_1467 -> m4_24  [key=2, style=dotted];
m4_1458 -> m4_1459  [key=0, style=solid];
m4_1469 -> m4_1457  [color=blue, key=0, style=bold];
m4_1513 -> m4_1514  [key=0, style=solid];
m4_1517 -> m4_25  [key=2, style=dotted];
m4_1517 -> m4_1518  [key=0, style=solid];
m4_1519 -> m4_25  [key=2, style=dotted];
m4_1519 -> m4_1520  [key=0, style=solid];
m4_1521 -> m4_25  [key=2, style=dotted];
m4_1521 -> m4_1522  [key=0, style=solid];
m4_1522 -> m4_25  [key=2, style=dotted];
m4_1522 -> m4_1523  [key=0, style=solid];
m4_1523 -> m4_25  [key=2, style=dotted];
m4_1523 -> m4_1524  [key=0, style=solid];
m4_1523 -> m4_1484  [key=2, style=dotted];
m4_1523 -> m4_1485  [key=2, style=dotted];
m4_1523 -> m4_1486  [key=2, style=dotted];
m4_1525 -> m4_25  [key=2, style=dotted];
m4_1525 -> m4_1526  [key=0, style=solid];
m4_1515 -> m4_21  [key=2, style=dotted];
m4_1515 -> m4_22  [key=2, style=dotted];
m4_1515 -> m4_1517  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1515 -> m4_1519  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1515 -> m4_1521  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1515 -> m4_1522  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1515 -> m4_1523  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1515 -> m4_1525  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1515 -> m4_1516  [key=0, style=solid];
m4_1515 -> m4_1518  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1515 -> m4_1520  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1515 -> m4_1524  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1516 -> m4_1517  [key=0, style=solid];
m4_1516 -> m4_23  [key=2, style=dotted];
m4_1516 -> m4_24  [key=2, style=dotted];
m4_1518 -> m4_1519  [key=0, style=solid];
m4_1518 -> m4_23  [key=2, style=dotted];
m4_1518 -> m4_24  [key=2, style=dotted];
m4_1520 -> m4_1521  [key=0, style=solid];
m4_1520 -> m4_1386  [key=2, style=dotted];
m4_1524 -> m4_1525  [key=0, style=solid];
m4_1524 -> m4_23  [key=2, style=dotted];
m4_1524 -> m4_24  [key=2, style=dotted];
m4_1514 -> m4_1515  [key=0, style=solid];
m4_1526 -> m4_1513  [color=blue, key=0, style=bold];
m4_106 -> m4_107  [key=0, style=solid];
m4_110 -> m4_25  [key=2, style=dotted];
m4_110 -> m4_111  [key=0, style=solid];
m4_114 -> m4_25  [key=2, style=dotted];
m4_114 -> m4_115  [key=0, style=solid];
m4_107 -> m4_21  [key=2, style=dotted];
m4_107 -> m4_22  [key=2, style=dotted];
m4_107 -> m4_108  [key=0, style=solid];
m4_111 -> m4_21  [key=2, style=dotted];
m4_111 -> m4_22  [key=2, style=dotted];
m4_111 -> m4_112  [key=0, style=solid];
m4_108 -> m4_110  [color=darkseagreen4, key=1, label=data, style=dashed];
m4_108 -> m4_109  [key=0, style=solid];
m4_108 -> m4_116  [key=2, style=dotted];
m4_109 -> m4_110  [key=0, style=solid];
m4_109 -> m4_117  [key=2, style=dotted];
m4_112 -> m4_114  [color=darkseagreen4, key=1, label=data, style=dashed];
m4_112 -> m4_113  [key=0, style=solid];
m4_112 -> m4_116  [key=2, style=dotted];
m4_113 -> m4_114  [key=0, style=solid];
m4_113 -> m4_118  [key=2, style=dotted];
m4_113 -> m4_119  [key=2, style=dotted];
m4_115 -> m4_106  [color=blue, key=0, style=bold];
m4_359 -> m4_360  [key=0, style=solid];
m4_361 -> m4_21  [key=2, style=dotted];
m4_361 -> m4_362  [key=0, style=solid];
m4_361 -> m4_358  [key=2, style=dotted];
m4_361 -> m4_363  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_366 -> m4_21  [key=2, style=dotted];
m4_366 -> m4_367  [key=0, style=solid];
m4_366 -> m4_358  [key=2, style=dotted];
m4_366 -> m4_368  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_360 -> m4_361  [key=0, style=solid];
m4_360 -> m4_371  [key=2, style=dotted];
m4_360 -> m4_362  [color=darkseagreen4, key=1, label=ms, style=dashed];
m4_360 -> m4_364  [color=darkseagreen4, key=1, label=ms, style=dashed];
m4_362 -> m4_24  [key=2, style=dotted];
m4_362 -> m4_363  [key=0, style=solid];
m4_363 -> m4_364  [key=0, style=solid];
m4_363 -> m4_372  [key=2, style=dotted];
m4_365 -> m4_366  [key=0, style=solid];
m4_365 -> m4_371  [key=2, style=dotted];
m4_365 -> m4_367  [color=darkseagreen4, key=1, label=ms, style=dashed];
m4_365 -> m4_369  [color=darkseagreen4, key=1, label=ms, style=dashed];
m4_367 -> m4_24  [key=2, style=dotted];
m4_367 -> m4_368  [key=0, style=solid];
m4_368 -> m4_369  [key=0, style=solid];
m4_368 -> m4_372  [key=2, style=dotted];
m4_369 -> m4_24  [key=2, style=dotted];
m4_369 -> m4_370  [key=0, style=solid];
m4_364 -> m4_365  [key=0, style=solid];
m4_364 -> m4_158  [key=2, style=dotted];
m4_370 -> m4_359  [color=blue, key=0, style=bold];
m4_1393 -> m4_1394  [key=0, style=solid];
m4_1394 -> m4_21  [key=2, style=dotted];
m4_1394 -> m4_22  [key=2, style=dotted];
m4_1394 -> m4_1395  [key=0, style=solid];
m4_1394 -> m4_1398  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1395 -> m4_1396  [key=0, style=solid];
m4_1395 -> m4_172  [key=2, style=dotted];
m4_1395 -> m4_1397  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1396 -> m4_1393  [color=blue, key=0, style=bold];
m4_2586 -> m4_2587  [key=0, style=solid];
m4_2592 -> m4_25  [key=2, style=dotted];
m4_2592 -> m4_2593  [key=0, style=solid];
m4_2592 -> m4_2639  [key=2, style=dotted];
m4_2593 -> m4_25  [key=2, style=dotted];
m4_2593 -> m4_2594  [key=0, style=solid];
m4_2595 -> m4_25  [key=2, style=dotted];
m4_2595 -> m4_2596  [key=0, style=solid];
m4_2595 -> m4_2639  [key=2, style=dotted];
m4_2596 -> m4_25  [key=2, style=dotted];
m4_2596 -> m4_2597  [key=0, style=solid];
m4_2602 -> m4_25  [key=2, style=dotted];
m4_2602 -> m4_2603  [key=0, style=solid];
m4_2602 -> m4_2640  [key=2, style=dotted];
m4_2603 -> m4_25  [key=2, style=dotted];
m4_2603 -> m4_2604  [key=0, style=solid];
m4_2605 -> m4_25  [key=2, style=dotted];
m4_2605 -> m4_2606  [key=0, style=solid];
m4_2605 -> m4_2640  [key=2, style=dotted];
m4_2606 -> m4_25  [key=2, style=dotted];
m4_2606 -> m4_2607  [key=0, style=solid];
m4_2612 -> m4_25  [key=2, style=dotted];
m4_2612 -> m4_2613  [key=0, style=solid];
m4_2613 -> m4_25  [key=2, style=dotted];
m4_2613 -> m4_2614  [key=0, style=solid];
m4_2615 -> m4_25  [key=2, style=dotted];
m4_2615 -> m4_2616  [key=0, style=solid];
m4_2616 -> m4_25  [key=2, style=dotted];
m4_2616 -> m4_2617  [key=0, style=solid];
m4_2622 -> m4_25  [key=2, style=dotted];
m4_2622 -> m4_2623  [key=0, style=solid];
m4_2622 -> m4_2640  [key=2, style=dotted];
m4_2623 -> m4_25  [key=2, style=dotted];
m4_2623 -> m4_2624  [key=0, style=solid];
m4_2625 -> m4_25  [key=2, style=dotted];
m4_2625 -> m4_2625  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m4_2625 -> m4_2626  [key=0, style=solid];
m4_2625 -> m4_2640  [key=2, style=dotted];
m4_2626 -> m4_25  [key=2, style=dotted];
m4_2626 -> m4_2627  [key=0, style=solid];
m4_2632 -> m4_25  [key=2, style=dotted];
m4_2632 -> m4_2633  [key=0, style=solid];
m4_2632 -> m4_2639  [key=2, style=dotted];
m4_2633 -> m4_25  [key=2, style=dotted];
m4_2633 -> m4_2634  [key=0, style=solid];
m4_2635 -> m4_25  [key=2, style=dotted];
m4_2635 -> m4_2636  [key=0, style=solid];
m4_2635 -> m4_2639  [key=2, style=dotted];
m4_2636 -> m4_25  [key=2, style=dotted];
m4_2636 -> m4_2637  [key=0, style=solid];
m4_2588 -> m4_21  [key=2, style=dotted];
m4_2588 -> m4_22  [key=2, style=dotted];
m4_2588 -> m4_2592  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2588 -> m4_2593  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2588 -> m4_2595  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2588 -> m4_2596  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2588 -> m4_2589  [key=0, style=solid];
m4_2588 -> m4_2590  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2588 -> m4_2591  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2588 -> m4_2594  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2588 -> m4_2597  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2598 -> m4_21  [key=2, style=dotted];
m4_2598 -> m4_22  [key=2, style=dotted];
m4_2598 -> m4_2602  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2598 -> m4_2603  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2598 -> m4_2605  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2598 -> m4_2606  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2598 -> m4_2599  [key=0, style=solid];
m4_2598 -> m4_2600  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2598 -> m4_2601  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2598 -> m4_2604  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2598 -> m4_2607  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2608 -> m4_21  [key=2, style=dotted];
m4_2608 -> m4_22  [key=2, style=dotted];
m4_2608 -> m4_2612  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2608 -> m4_2613  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2608 -> m4_2615  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2608 -> m4_2616  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2608 -> m4_2609  [key=0, style=solid];
m4_2608 -> m4_2610  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2608 -> m4_2611  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2608 -> m4_2614  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2608 -> m4_2617  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2618 -> m4_21  [key=2, style=dotted];
m4_2618 -> m4_22  [key=2, style=dotted];
m4_2618 -> m4_2622  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2618 -> m4_2623  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2618 -> m4_2625  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2618 -> m4_2626  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2618 -> m4_2618  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m4_2618 -> m4_2619  [key=0, style=solid];
m4_2618 -> m4_2620  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2618 -> m4_2621  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2618 -> m4_2624  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2618 -> m4_2627  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2628 -> m4_21  [key=2, style=dotted];
m4_2628 -> m4_22  [key=2, style=dotted];
m4_2628 -> m4_2632  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2628 -> m4_2633  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2628 -> m4_2635  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2628 -> m4_2636  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2628 -> m4_2629  [key=0, style=solid];
m4_2628 -> m4_2630  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2628 -> m4_2631  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2628 -> m4_2634  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2628 -> m4_2637  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2589 -> m4_2567  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m4_2589 -> m4_2590  [key=0, style=solid];
m4_2591 -> m4_2592  [key=0, style=solid];
m4_2591 -> m4_23  [key=2, style=dotted];
m4_2591 -> m4_24  [key=2, style=dotted];
m4_2594 -> m4_2595  [key=0, style=solid];
m4_2594 -> m4_23  [key=2, style=dotted];
m4_2594 -> m4_24  [key=2, style=dotted];
m4_2597 -> m4_2598  [key=0, style=solid];
m4_2597 -> m4_23  [key=2, style=dotted];
m4_2597 -> m4_24  [key=2, style=dotted];
m4_2601 -> m4_2602  [key=0, style=solid];
m4_2601 -> m4_23  [key=2, style=dotted];
m4_2601 -> m4_24  [key=2, style=dotted];
m4_2604 -> m4_2605  [key=0, style=solid];
m4_2604 -> m4_23  [key=2, style=dotted];
m4_2604 -> m4_24  [key=2, style=dotted];
m4_2607 -> m4_2608  [key=0, style=solid];
m4_2607 -> m4_23  [key=2, style=dotted];
m4_2607 -> m4_24  [key=2, style=dotted];
m4_2611 -> m4_2612  [key=0, style=solid];
m4_2611 -> m4_23  [key=2, style=dotted];
m4_2611 -> m4_24  [key=2, style=dotted];
m4_2614 -> m4_2615  [key=0, style=solid];
m4_2614 -> m4_23  [key=2, style=dotted];
m4_2614 -> m4_24  [key=2, style=dotted];
m4_2617 -> m4_2618  [key=0, style=solid];
m4_2617 -> m4_23  [key=2, style=dotted];
m4_2617 -> m4_24  [key=2, style=dotted];
m4_2621 -> m4_2622  [key=0, style=solid];
m4_2621 -> m4_1386  [key=2, style=dotted];
m4_2624 -> m4_2625  [key=0, style=solid];
m4_2624 -> m4_1386  [key=2, style=dotted];
m4_2627 -> m4_2628  [key=0, style=solid];
m4_2627 -> m4_23  [key=2, style=dotted];
m4_2627 -> m4_24  [key=2, style=dotted];
m4_2631 -> m4_2632  [key=0, style=solid];
m4_2631 -> m4_257  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m4_2631 -> m4_1968  [key=2, style=dotted];
m4_2634 -> m4_2635  [key=0, style=solid];
m4_2634 -> m4_1968  [key=2, style=dotted];
m4_2637 -> m4_23  [key=2, style=dotted];
m4_2637 -> m4_24  [key=2, style=dotted];
m4_2637 -> m4_2638  [key=0, style=solid];
m4_2587 -> m4_2588  [key=0, style=solid];
m4_2587 -> m4_2598  [color=darkseagreen4, key=1, label=json, style=dashed];
m4_2587 -> m4_2608  [color=darkseagreen4, key=1, label=json, style=dashed];
m4_2587 -> m4_2618  [color=darkseagreen4, key=1, label=json, style=dashed];
m4_2587 -> m4_2628  [color=darkseagreen4, key=1, label=json, style=dashed];
m4_2590 -> m4_23  [key=2, style=dotted];
m4_2590 -> m4_24  [key=2, style=dotted];
m4_2590 -> m4_2591  [key=0, style=solid];
m4_2599 -> m4_2600  [key=0, style=solid];
m4_2600 -> m4_23  [key=2, style=dotted];
m4_2600 -> m4_24  [key=2, style=dotted];
m4_2600 -> m4_2601  [key=0, style=solid];
m4_2609 -> m4_2610  [key=0, style=solid];
m4_2610 -> m4_23  [key=2, style=dotted];
m4_2610 -> m4_24  [key=2, style=dotted];
m4_2610 -> m4_2611  [key=0, style=solid];
m4_2619 -> m4_2620  [key=0, style=solid];
m4_2620 -> m4_23  [key=2, style=dotted];
m4_2620 -> m4_24  [key=2, style=dotted];
m4_2620 -> m4_2621  [key=0, style=solid];
m4_2629 -> m4_2630  [key=0, style=solid];
m4_2630 -> m4_23  [key=2, style=dotted];
m4_2630 -> m4_24  [key=2, style=dotted];
m4_2630 -> m4_2631  [key=0, style=solid];
m4_2638 -> m4_2586  [color=blue, key=0, style=bold];
m4_592 -> m4_593  [key=0, style=solid];
m4_593 -> m4_21  [key=2, style=dotted];
m4_593 -> m4_22  [key=2, style=dotted];
m4_593 -> m4_594  [key=0, style=solid];
m4_593 -> m4_597  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_594 -> m4_595  [key=0, style=solid];
m4_594 -> m4_172  [key=2, style=dotted];
m4_594 -> m4_596  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_595 -> m4_592  [color=blue, key=0, style=bold];
m4_1787 -> m4_1788  [key=0, style=solid];
m4_1789 -> m4_21  [key=2, style=dotted];
m4_1789 -> m4_22  [key=2, style=dotted];
m4_1789 -> m4_1790  [key=0, style=solid];
m4_1789 -> m4_1793  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1788 -> m4_1789  [key=0, style=solid];
m4_1790 -> m4_1791  [key=0, style=solid];
m4_1790 -> m4_172  [key=2, style=dotted];
m4_1790 -> m4_1792  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1791 -> m4_1787  [color=blue, key=0, style=bold];
m4_2062 -> m4_2063  [key=0, style=solid];
m4_2066 -> m4_25  [key=2, style=dotted];
m4_2066 -> m4_2067  [key=0, style=solid];
m4_2068 -> m4_25  [key=2, style=dotted];
m4_2068 -> m4_2069  [key=0, style=solid];
m4_2069 -> m4_25  [key=2, style=dotted];
m4_2069 -> m4_2070  [key=0, style=solid];
m4_2069 -> m4_176  [key=2, style=dotted];
m4_2070 -> m4_25  [key=2, style=dotted];
m4_2070 -> m4_2071  [key=0, style=solid];
m4_2071 -> m4_25  [key=2, style=dotted];
m4_2071 -> m4_2072  [key=0, style=solid];
m4_2071 -> m4_176  [key=2, style=dotted];
m4_2072 -> m4_25  [key=2, style=dotted];
m4_2072 -> m4_2073  [key=0, style=solid];
m4_2073 -> m4_25  [key=2, style=dotted];
m4_2073 -> m4_26  [key=2, style=dotted];
m4_2073 -> m4_2074  [key=0, style=solid];
m4_2074 -> m4_25  [key=2, style=dotted];
m4_2074 -> m4_2075  [key=0, style=solid];
m4_2075 -> m4_25  [key=2, style=dotted];
m4_2075 -> m4_26  [key=2, style=dotted];
m4_2075 -> m4_2076  [key=0, style=solid];
m4_2076 -> m4_25  [key=2, style=dotted];
m4_2076 -> m4_2076  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m4_2076 -> m4_2077  [key=0, style=solid];
m4_2077 -> m4_25  [key=2, style=dotted];
m4_2077 -> m4_26  [key=2, style=dotted];
m4_2077 -> m4_2078  [key=0, style=solid];
m4_2078 -> m4_25  [key=2, style=dotted];
m4_2078 -> m4_2079  [key=0, style=solid];
m4_2079 -> m4_25  [key=2, style=dotted];
m4_2079 -> m4_2080  [key=0, style=solid];
m4_2079 -> m4_176  [key=2, style=dotted];
m4_2080 -> m4_25  [key=2, style=dotted];
m4_2080 -> m4_2081  [key=0, style=solid];
m4_2081 -> m4_25  [key=2, style=dotted];
m4_2081 -> m4_2082  [key=0, style=solid];
m4_2081 -> m4_244  [key=2, style=dotted];
m4_2082 -> m4_25  [key=2, style=dotted];
m4_2082 -> m4_2083  [key=0, style=solid];
m4_2083 -> m4_25  [key=2, style=dotted];
m4_2083 -> m4_2084  [key=0, style=solid];
m4_2083 -> m4_244  [key=2, style=dotted];
m4_2084 -> m4_25  [key=2, style=dotted];
m4_2084 -> m4_2085  [key=0, style=solid];
m4_2086 -> m4_25  [key=2, style=dotted];
m4_2086 -> m4_2087  [key=0, style=solid];
m4_2088 -> m4_25  [key=2, style=dotted];
m4_2088 -> m4_2089  [key=0, style=solid];
m4_2090 -> m4_25  [key=2, style=dotted];
m4_2090 -> m4_2091  [key=0, style=solid];
m4_2091 -> m4_25  [key=2, style=dotted];
m4_2091 -> m4_2092  [key=0, style=solid];
m4_2091 -> m4_176  [key=2, style=dotted];
m4_2092 -> m4_25  [key=2, style=dotted];
m4_2092 -> m4_2093  [key=0, style=solid];
m4_2064 -> m4_21  [key=2, style=dotted];
m4_2064 -> m4_2066  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2064 -> m4_2068  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2064 -> m4_2069  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2064 -> m4_2070  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2064 -> m4_2071  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2064 -> m4_2072  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2064 -> m4_2073  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2064 -> m4_2074  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2064 -> m4_2075  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2064 -> m4_2076  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2064 -> m4_2077  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2064 -> m4_2078  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2064 -> m4_2079  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2064 -> m4_2080  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2064 -> m4_2081  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2064 -> m4_2082  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2064 -> m4_2083  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2064 -> m4_2084  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2064 -> m4_2086  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2064 -> m4_2088  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2064 -> m4_2090  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2064 -> m4_2091  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2064 -> m4_2092  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2064 -> m4_2065  [key=0, style=solid];
m4_2064 -> m4_358  [key=2, style=dotted];
m4_2064 -> m4_396  [key=2, style=dotted];
m4_2064 -> m4_397  [key=2, style=dotted];
m4_2064 -> m4_2067  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2064 -> m4_2085  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2064 -> m4_2087  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2064 -> m4_2089  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2065 -> m4_2066  [key=0, style=solid];
m4_2065 -> m4_23  [key=2, style=dotted];
m4_2065 -> m4_24  [key=2, style=dotted];
m4_2067 -> m4_2068  [key=0, style=solid];
m4_2067 -> m4_23  [key=2, style=dotted];
m4_2067 -> m4_24  [key=2, style=dotted];
m4_2085 -> m4_2086  [key=0, style=solid];
m4_2085 -> m4_116  [key=2, style=dotted];
m4_2085 -> m4_953  [key=2, style=dotted];
m4_2087 -> m4_2088  [key=0, style=solid];
m4_2087 -> m4_23  [key=2, style=dotted];
m4_2087 -> m4_24  [key=2, style=dotted];
m4_2089 -> m4_2090  [key=0, style=solid];
m4_2089 -> m4_23  [key=2, style=dotted];
m4_2089 -> m4_24  [key=2, style=dotted];
m4_2063 -> m4_2064  [key=0, style=solid];
m4_2093 -> m4_2062  [color=blue, key=0, style=bold];
m4_335 -> m4_336  [key=0, style=solid];
m4_336 -> m4_25  [key=2, style=dotted];
m4_336 -> m4_337  [key=0, style=solid];
m4_336 -> m4_349  [key=2, style=dotted];
m4_337 -> m4_25  [key=2, style=dotted];
m4_337 -> m4_338  [key=0, style=solid];
m4_337 -> m4_349  [key=2, style=dotted];
m4_338 -> m4_25  [key=2, style=dotted];
m4_338 -> m4_339  [key=0, style=solid];
m4_338 -> m4_349  [key=2, style=dotted];
m4_339 -> m4_25  [key=2, style=dotted];
m4_339 -> m4_340  [key=0, style=solid];
m4_339 -> m4_349  [key=2, style=dotted];
m4_340 -> m4_25  [key=2, style=dotted];
m4_340 -> m4_341  [key=0, style=solid];
m4_340 -> m4_349  [key=2, style=dotted];
m4_341 -> m4_25  [key=2, style=dotted];
m4_341 -> m4_342  [key=0, style=solid];
m4_341 -> m4_349  [key=2, style=dotted];
m4_342 -> m4_25  [key=2, style=dotted];
m4_342 -> m4_343  [key=0, style=solid];
m4_342 -> m4_349  [key=2, style=dotted];
m4_343 -> m4_25  [key=2, style=dotted];
m4_343 -> m4_344  [key=0, style=solid];
m4_343 -> m4_349  [key=2, style=dotted];
m4_344 -> m4_25  [key=2, style=dotted];
m4_344 -> m4_345  [key=0, style=solid];
m4_344 -> m4_349  [key=2, style=dotted];
m4_345 -> m4_25  [key=2, style=dotted];
m4_345 -> m4_346  [key=0, style=solid];
m4_345 -> m4_349  [key=2, style=dotted];
m4_346 -> m4_25  [key=2, style=dotted];
m4_346 -> m4_347  [key=0, style=solid];
m4_346 -> m4_349  [key=2, style=dotted];
m4_347 -> m4_25  [key=2, style=dotted];
m4_347 -> m4_348  [key=0, style=solid];
m4_347 -> m4_349  [key=2, style=dotted];
m4_348 -> m4_335  [color=blue, key=0, style=bold];
m4_1381 -> m4_1382  [key=0, style=solid];
m4_1384 -> m4_25  [key=2, style=dotted];
m4_1384 -> m4_1385  [key=0, style=solid];
m4_1382 -> m4_21  [key=2, style=dotted];
m4_1382 -> m4_22  [key=2, style=dotted];
m4_1382 -> m4_1384  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1382 -> m4_1383  [key=0, style=solid];
m4_1383 -> m4_1384  [key=0, style=solid];
m4_1383 -> m4_1386  [key=2, style=dotted];
m4_1383 -> m4_871  [key=2, style=dotted];
m4_1385 -> m4_1381  [color=blue, key=0, style=bold];
m4_2271 -> m4_2272  [key=0, style=solid];
m4_2275 -> m4_25  [key=2, style=dotted];
m4_2275 -> m4_2276  [key=0, style=solid];
m4_2277 -> m4_25  [key=2, style=dotted];
m4_2277 -> m4_2278  [key=0, style=solid];
m4_2279 -> m4_25  [key=2, style=dotted];
m4_2279 -> m4_2280  [key=0, style=solid];
m4_2281 -> m4_25  [key=2, style=dotted];
m4_2281 -> m4_2282  [key=0, style=solid];
m4_2283 -> m4_25  [key=2, style=dotted];
m4_2283 -> m4_2284  [key=0, style=solid];
m4_2283 -> m4_257  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m4_2285 -> m4_25  [key=2, style=dotted];
m4_2285 -> m4_2286  [key=0, style=solid];
m4_2273 -> m4_21  [key=2, style=dotted];
m4_2273 -> m4_22  [key=2, style=dotted];
m4_2273 -> m4_2275  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2273 -> m4_2277  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2273 -> m4_2279  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2273 -> m4_2281  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2273 -> m4_2283  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2273 -> m4_2285  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2273 -> m4_2274  [key=0, style=solid];
m4_2273 -> m4_2276  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2273 -> m4_2278  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2273 -> m4_2280  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2273 -> m4_2282  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2273 -> m4_2284  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2274 -> m4_2275  [key=0, style=solid];
m4_2274 -> m4_23  [key=2, style=dotted];
m4_2276 -> m4_2277  [key=0, style=solid];
m4_2276 -> m4_23  [key=2, style=dotted];
m4_2278 -> m4_2279  [key=0, style=solid];
m4_2278 -> m4_23  [key=2, style=dotted];
m4_2280 -> m4_2281  [key=0, style=solid];
m4_2280 -> m4_23  [key=2, style=dotted];
m4_2282 -> m4_2283  [key=0, style=solid];
m4_2282 -> m4_23  [key=2, style=dotted];
m4_2284 -> m4_2285  [key=0, style=solid];
m4_2284 -> m4_23  [key=2, style=dotted];
m4_2272 -> m4_2273  [key=0, style=solid];
m4_2286 -> m4_2271  [color=blue, key=0, style=bold];
m4_264 -> m4_265  [key=0, style=solid];
m4_269 -> m4_25  [key=2, style=dotted];
m4_269 -> m4_270  [key=0, style=solid];
m4_271 -> m4_25  [key=2, style=dotted];
m4_271 -> m4_272  [key=0, style=solid];
m4_272 -> m4_25  [key=2, style=dotted];
m4_272 -> m4_273  [key=0, style=solid];
m4_273 -> m4_25  [key=2, style=dotted];
m4_273 -> m4_274  [key=0, style=solid];
m4_275 -> m4_25  [key=2, style=dotted];
m4_275 -> m4_276  [key=0, style=solid];
m4_276 -> m4_25  [key=2, style=dotted];
m4_276 -> m4_277  [key=0, style=solid];
m4_277 -> m4_25  [key=2, style=dotted];
m4_277 -> m4_278  [key=0, style=solid];
m4_279 -> m4_25  [key=2, style=dotted];
m4_279 -> m4_280  [key=0, style=solid];
m4_280 -> m4_25  [key=2, style=dotted];
m4_280 -> m4_281  [key=0, style=solid];
m4_281 -> m4_25  [key=2, style=dotted];
m4_281 -> m4_282  [key=0, style=solid];
m4_283 -> m4_25  [key=2, style=dotted];
m4_283 -> m4_284  [key=0, style=solid];
m4_283 -> m4_289  [key=2, style=dotted];
m4_284 -> m4_25  [key=2, style=dotted];
m4_284 -> m4_285  [key=0, style=solid];
m4_285 -> m4_25  [key=2, style=dotted];
m4_285 -> m4_286  [key=0, style=solid];
m4_287 -> m4_25  [key=2, style=dotted];
m4_287 -> m4_288  [key=0, style=solid];
m4_266 -> m4_21  [key=2, style=dotted];
m4_266 -> m4_22  [key=2, style=dotted];
m4_266 -> m4_269  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_266 -> m4_271  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_266 -> m4_272  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_266 -> m4_273  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_266 -> m4_275  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_266 -> m4_276  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_266 -> m4_277  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_266 -> m4_279  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_266 -> m4_280  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_266 -> m4_281  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_266 -> m4_283  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_266 -> m4_284  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_266 -> m4_285  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_266 -> m4_287  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_266 -> m4_267  [key=0, style=solid];
m4_266 -> m4_268  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_266 -> m4_270  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_266 -> m4_274  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_266 -> m4_278  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_266 -> m4_282  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_266 -> m4_286  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_268 -> m4_269  [key=0, style=solid];
m4_268 -> m4_23  [key=2, style=dotted];
m4_268 -> m4_24  [key=2, style=dotted];
m4_270 -> m4_271  [key=0, style=solid];
m4_270 -> m4_23  [key=2, style=dotted];
m4_270 -> m4_24  [key=2, style=dotted];
m4_274 -> m4_275  [key=0, style=solid];
m4_274 -> m4_23  [key=2, style=dotted];
m4_274 -> m4_24  [key=2, style=dotted];
m4_278 -> m4_279  [key=0, style=solid];
m4_278 -> m4_23  [key=2, style=dotted];
m4_278 -> m4_24  [key=2, style=dotted];
m4_282 -> m4_283  [key=0, style=solid];
m4_282 -> m4_23  [key=2, style=dotted];
m4_282 -> m4_24  [key=2, style=dotted];
m4_286 -> m4_287  [key=0, style=solid];
m4_286 -> m4_23  [key=2, style=dotted];
m4_286 -> m4_24  [key=2, style=dotted];
m4_265 -> m4_266  [key=0, style=solid];
m4_267 -> m4_268  [key=0, style=solid];
m4_288 -> m4_264  [color=blue, key=0, style=bold];
m4_1421 -> m4_1422  [key=0, style=solid];
m4_1424 -> m4_25  [key=2, style=dotted];
m4_1424 -> m4_1425  [key=0, style=solid];
m4_1425 -> m4_25  [key=2, style=dotted];
m4_1425 -> m4_1426  [key=0, style=solid];
m4_1426 -> m4_25  [key=2, style=dotted];
m4_1426 -> m4_1427  [key=0, style=solid];
m4_1422 -> m4_21  [key=2, style=dotted];
m4_1422 -> m4_22  [key=2, style=dotted];
m4_1422 -> m4_1423  [key=0, style=solid];
m4_1423 -> m4_1424  [key=0, style=solid];
m4_1423 -> m4_1425  [color=darkseagreen4, key=1, label=data, style=dashed];
m4_1423 -> m4_1426  [color=darkseagreen4, key=1, label=data, style=dashed];
m4_1423 -> m4_116  [key=2, style=dotted];
m4_1427 -> m4_1421  [color=blue, key=0, style=bold];
m4_2019 -> m4_2020  [key=0, style=solid];
m4_2025 -> m4_25  [key=2, style=dotted];
m4_2025 -> m4_2026  [key=0, style=solid];
m4_2025 -> m4_176  [key=2, style=dotted];
m4_2020 -> m4_21  [key=2, style=dotted];
m4_2020 -> m4_22  [key=2, style=dotted];
m4_2020 -> m4_2025  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2020 -> m4_2021  [key=0, style=solid];
m4_2020 -> m4_2022  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2020 -> m4_2029  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2020 -> m4_2023  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2020 -> m4_2032  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2020 -> m4_2024  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2020 -> m4_2035  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2020 -> m4_2026  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2024 -> m4_2025  [key=0, style=solid];
m4_2024 -> m4_172  [key=2, style=dotted];
m4_2024 -> m4_2034  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_2026 -> m4_23  [key=2, style=dotted];
m4_2026 -> m4_24  [key=2, style=dotted];
m4_2026 -> m4_2027  [key=0, style=solid];
m4_2021 -> m4_23  [key=2, style=dotted];
m4_2021 -> m4_2022  [key=0, style=solid];
m4_2022 -> m4_2023  [key=0, style=solid];
m4_2022 -> m4_172  [key=2, style=dotted];
m4_2022 -> m4_2028  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_2023 -> m4_2024  [key=0, style=solid];
m4_2023 -> m4_172  [key=2, style=dotted];
m4_2023 -> m4_2031  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_2027 -> m4_2019  [color=blue, key=0, style=bold];
m4_1976 -> m4_1977  [key=0, style=solid];
m4_1981 -> m4_25  [key=2, style=dotted];
m4_1981 -> m4_1982  [key=0, style=solid];
m4_1981 -> m4_176  [key=2, style=dotted];
m4_1977 -> m4_21  [key=2, style=dotted];
m4_1977 -> m4_22  [key=2, style=dotted];
m4_1977 -> m4_1981  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1977 -> m4_1978  [key=0, style=solid];
m4_1977 -> m4_1979  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1977 -> m4_1980  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1977 -> m4_1985  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1977 -> m4_1982  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1980 -> m4_1981  [key=0, style=solid];
m4_1980 -> m4_172  [key=2, style=dotted];
m4_1980 -> m4_1984  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1982 -> m4_23  [key=2, style=dotted];
m4_1982 -> m4_24  [key=2, style=dotted];
m4_1982 -> m4_1983  [key=0, style=solid];
m4_1978 -> m4_23  [key=2, style=dotted];
m4_1978 -> m4_1979  [key=0, style=solid];
m4_1979 -> m4_176  [key=2, style=dotted];
m4_1979 -> m4_1980  [key=0, style=solid];
m4_1983 -> m4_1976  [color=blue, key=0, style=bold];
m4_1710 -> m4_1711  [key=0, style=solid];
m4_1714 -> m4_25  [key=2, style=dotted];
m4_1714 -> m4_1715  [key=0, style=solid];
m4_1715 -> m4_25  [key=2, style=dotted];
m4_1715 -> m4_1716  [key=0, style=solid];
m4_1717 -> m4_25  [key=2, style=dotted];
m4_1717 -> m4_1718  [key=0, style=solid];
m4_1712 -> m4_21  [key=2, style=dotted];
m4_1712 -> m4_22  [key=2, style=dotted];
m4_1712 -> m4_1714  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1712 -> m4_1715  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1712 -> m4_1717  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1712 -> m4_1713  [key=0, style=solid];
m4_1712 -> m4_1716  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1713 -> m4_1714  [key=0, style=solid];
m4_1713 -> m4_23  [key=2, style=dotted];
m4_1713 -> m4_24  [key=2, style=dotted];
m4_1713 -> m4_1704  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m4_1716 -> m4_1717  [key=0, style=solid];
m4_1716 -> m4_23  [key=2, style=dotted];
m4_1716 -> m4_24  [key=2, style=dotted];
m4_1711 -> m4_1712  [key=0, style=solid];
m4_1718 -> m4_1710  [color=blue, key=0, style=bold];
m4_1296 -> m4_1297  [key=0, style=solid];
m4_1300 -> m4_25  [key=2, style=dotted];
m4_1300 -> m4_1301  [key=0, style=solid];
m4_1302 -> m4_25  [key=2, style=dotted];
m4_1302 -> m4_1303  [key=0, style=solid];
m4_1303 -> m4_25  [key=2, style=dotted];
m4_1303 -> m4_1304  [key=0, style=solid];
m4_1305 -> m4_25  [key=2, style=dotted];
m4_1305 -> m4_1306  [key=0, style=solid];
m4_1306 -> m4_25  [key=2, style=dotted];
m4_1306 -> m4_1307  [key=0, style=solid];
m4_1308 -> m4_25  [key=2, style=dotted];
m4_1308 -> m4_1309  [key=0, style=solid];
m4_1309 -> m4_25  [key=2, style=dotted];
m4_1309 -> m4_1310  [key=0, style=solid];
m4_1311 -> m4_25  [key=2, style=dotted];
m4_1311 -> m4_1312  [key=0, style=solid];
m4_1298 -> m4_21  [key=2, style=dotted];
m4_1298 -> m4_1300  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1298 -> m4_1302  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1298 -> m4_1303  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1298 -> m4_1305  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1298 -> m4_1306  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1298 -> m4_1308  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1298 -> m4_1309  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1298 -> m4_1311  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1298 -> m4_1299  [key=0, style=solid];
m4_1298 -> m4_1301  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1298 -> m4_1304  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1298 -> m4_1307  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1298 -> m4_1310  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1298 -> m4_1312  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1297 -> m4_22  [key=2, style=dotted];
m4_1297 -> m4_1298  [key=0, style=solid];
m4_1299 -> m4_1300  [key=0, style=solid];
m4_1299 -> m4_23  [key=2, style=dotted];
m4_1299 -> m4_24  [key=2, style=dotted];
m4_1301 -> m4_1302  [key=0, style=solid];
m4_1301 -> m4_23  [key=2, style=dotted];
m4_1301 -> m4_24  [key=2, style=dotted];
m4_1304 -> m4_1305  [key=0, style=solid];
m4_1304 -> m4_23  [key=2, style=dotted];
m4_1304 -> m4_24  [key=2, style=dotted];
m4_1307 -> m4_1308  [key=0, style=solid];
m4_1307 -> m4_23  [key=2, style=dotted];
m4_1307 -> m4_24  [key=2, style=dotted];
m4_1310 -> m4_1311  [key=0, style=solid];
m4_1310 -> m4_23  [key=2, style=dotted];
m4_1310 -> m4_24  [key=2, style=dotted];
m4_1312 -> m4_23  [key=2, style=dotted];
m4_1312 -> m4_1313  [key=0, style=solid];
m4_1312 -> m4_158  [key=2, style=dotted];
m4_1313 -> m4_1296  [color=blue, key=0, style=bold];
m4_954 -> m4_955  [key=0, style=solid];
m4_959 -> m4_25  [key=2, style=dotted];
m4_959 -> m4_960  [key=0, style=solid];
m4_962 -> m4_25  [key=2, style=dotted];
m4_962 -> m4_963  [key=0, style=solid];
m4_966 -> m4_25  [key=2, style=dotted];
m4_966 -> m4_967  [key=0, style=solid];
m4_968 -> m4_25  [key=2, style=dotted];
m4_968 -> m4_969  [key=0, style=solid];
m4_957 -> m4_21  [key=2, style=dotted];
m4_957 -> m4_22  [key=2, style=dotted];
m4_957 -> m4_959  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_957 -> m4_962  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_957 -> m4_966  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_957 -> m4_968  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_957 -> m4_958  [key=0, style=solid];
m4_957 -> m4_861  [key=2, style=dotted];
m4_957 -> m4_960  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_957 -> m4_961  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_957 -> m4_963  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_957 -> m4_964  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_957 -> m4_967  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_957 -> m4_969  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_958 -> m4_959  [key=0, style=solid];
m4_958 -> m4_24  [key=2, style=dotted];
m4_958 -> m4_378  [key=2, style=dotted];
m4_960 -> m4_24  [key=2, style=dotted];
m4_960 -> m4_961  [key=0, style=solid];
m4_960 -> m4_378  [key=2, style=dotted];
m4_961 -> m4_962  [key=0, style=solid];
m4_961 -> m4_24  [key=2, style=dotted];
m4_961 -> m4_378  [key=2, style=dotted];
m4_963 -> m4_24  [key=2, style=dotted];
m4_963 -> m4_964  [key=0, style=solid];
m4_963 -> m4_378  [key=2, style=dotted];
m4_965 -> m4_966  [key=0, style=solid];
m4_965 -> m4_953  [key=2, style=dotted];
m4_967 -> m4_968  [key=0, style=solid];
m4_967 -> m4_24  [key=2, style=dotted];
m4_967 -> m4_378  [key=2, style=dotted];
m4_969 -> m4_970  [key=0, style=solid];
m4_969 -> m4_378  [key=2, style=dotted];
m4_969 -> m4_158  [key=2, style=dotted];
m4_956 -> m4_957  [key=0, style=solid];
m4_956 -> m4_965  [color=darkseagreen4, key=1, label=helloWorldData, style=dashed];
m4_956 -> m4_357  [key=2, style=dotted];
m4_964 -> m4_965  [key=0, style=solid];
m4_964 -> m4_846  [key=2, style=dotted];
m4_955 -> m4_956  [key=0, style=solid];
m4_970 -> m4_954  [color=blue, key=0, style=bold];
m4_743 -> m4_744  [key=0, style=solid];
m4_747 -> m4_25  [key=2, style=dotted];
m4_747 -> m4_748  [key=0, style=solid];
m4_753 -> m4_25  [key=2, style=dotted];
m4_753 -> m4_754  [key=0, style=solid];
m4_745 -> m4_21  [key=2, style=dotted];
m4_745 -> m4_747  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_745 -> m4_746  [key=0, style=solid];
m4_745 -> m4_741  [key=2, style=dotted];
m4_745 -> m4_742  [key=2, style=dotted];
m4_751 -> m4_21  [key=2, style=dotted];
m4_751 -> m4_753  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_751 -> m4_752  [key=0, style=solid];
m4_751 -> m4_741  [key=2, style=dotted];
m4_751 -> m4_742  [key=2, style=dotted];
m4_746 -> m4_747  [key=0, style=solid];
m4_746 -> m4_23  [key=2, style=dotted];
m4_748 -> m4_749  [key=0, style=solid];
m4_748 -> m4_750  [color=darkseagreen4, key=1, label=j, style=dashed];
m4_748 -> m4_754  [color=darkseagreen4, key=1, label=j, style=dashed];
m4_752 -> m4_753  [key=0, style=solid];
m4_752 -> m4_23  [key=2, style=dotted];
m4_754 -> m4_754  [color=darkseagreen4, key=1, label=j, style=dashed];
m4_754 -> m4_749  [key=0, style=solid];
m4_744 -> m4_745  [key=0, style=solid];
m4_744 -> m4_740  [key=2, style=dotted];
m4_744 -> m4_750  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_750 -> m4_751  [key=0, style=solid];
m4_749 -> m4_750  [key=0, style=solid];
m4_749 -> m4_755  [key=0, style=solid];
m4_755 -> m4_743  [color=blue, key=0, style=bold];
m4_1369 -> m4_1370  [key=0, style=solid];
m4_1372 -> m4_25  [key=2, style=dotted];
m4_1372 -> m4_1373  [key=0, style=solid];
m4_1370 -> m4_21  [key=2, style=dotted];
m4_1370 -> m4_22  [key=2, style=dotted];
m4_1370 -> m4_1372  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1370 -> m4_1371  [key=0, style=solid];
m4_1371 -> m4_1372  [key=0, style=solid];
m4_1371 -> m4_116  [key=2, style=dotted];
m4_1371 -> m4_871  [key=2, style=dotted];
m4_1373 -> m4_1369  [color=blue, key=0, style=bold];
m4_2337 -> m4_2338  [key=0, style=solid];
m4_2339 -> m4_21  [key=2, style=dotted];
m4_2339 -> m4_22  [key=2, style=dotted];
m4_2339 -> m4_2340  [key=0, style=solid];
m4_2339 -> m4_2343  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2338 -> m4_2339  [key=0, style=solid];
m4_2340 -> m4_2341  [key=0, style=solid];
m4_2340 -> m4_172  [key=2, style=dotted];
m4_2340 -> m4_2342  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_2341 -> m4_2337  [color=blue, key=0, style=bold];
m4_1890 -> m4_1891  [key=0, style=solid];
m4_1891 -> m4_21  [key=2, style=dotted];
m4_1891 -> m4_22  [key=2, style=dotted];
m4_1891 -> m4_1892  [key=0, style=solid];
m4_1891 -> m4_1893  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1891 -> m4_1894  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1891 -> m4_1900  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1891 -> m4_1895  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1891 -> m4_1896  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1891 -> m4_1897  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1892 -> m4_23  [key=2, style=dotted];
m4_1892 -> m4_24  [key=2, style=dotted];
m4_1892 -> m4_1893  [key=0, style=solid];
m4_1893 -> m4_23  [key=2, style=dotted];
m4_1893 -> m4_24  [key=2, style=dotted];
m4_1893 -> m4_1894  [key=0, style=solid];
m4_1894 -> m4_1895  [key=0, style=solid];
m4_1894 -> m4_172  [key=2, style=dotted];
m4_1894 -> m4_1899  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1895 -> m4_23  [key=2, style=dotted];
m4_1895 -> m4_24  [key=2, style=dotted];
m4_1895 -> m4_1896  [key=0, style=solid];
m4_1896 -> m4_23  [key=2, style=dotted];
m4_1896 -> m4_24  [key=2, style=dotted];
m4_1896 -> m4_1897  [key=0, style=solid];
m4_1897 -> m4_23  [key=2, style=dotted];
m4_1897 -> m4_1898  [key=0, style=solid];
m4_1897 -> m4_158  [key=2, style=dotted];
m4_1898 -> m4_1890  [color=blue, key=0, style=bold];
m4_2399 -> m4_2400  [key=0, style=solid];
m4_2401 -> m4_21  [key=2, style=dotted];
m4_2401 -> m4_22  [key=2, style=dotted];
m4_2401 -> m4_2402  [key=0, style=solid];
m4_2401 -> m4_2405  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2400 -> m4_2401  [key=0, style=solid];
m4_2402 -> m4_2403  [key=0, style=solid];
m4_2402 -> m4_172  [key=2, style=dotted];
m4_2402 -> m4_2404  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_2403 -> m4_2399  [color=blue, key=0, style=bold];
m4_1719 -> m4_1720  [key=0, style=solid];
m4_1723 -> m4_25  [key=2, style=dotted];
m4_1723 -> m4_1724  [key=0, style=solid];
m4_1725 -> m4_25  [key=2, style=dotted];
m4_1725 -> m4_1726  [key=0, style=solid];
m4_1727 -> m4_25  [key=2, style=dotted];
m4_1727 -> m4_1728  [key=0, style=solid];
m4_1729 -> m4_25  [key=2, style=dotted];
m4_1729 -> m4_1730  [key=0, style=solid];
m4_1731 -> m4_25  [key=2, style=dotted];
m4_1731 -> m4_1732  [key=0, style=solid];
m4_1733 -> m4_25  [key=2, style=dotted];
m4_1733 -> m4_1734  [key=0, style=solid];
m4_1735 -> m4_25  [key=2, style=dotted];
m4_1735 -> m4_1736  [key=0, style=solid];
m4_1721 -> m4_21  [key=2, style=dotted];
m4_1721 -> m4_22  [key=2, style=dotted];
m4_1721 -> m4_1723  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1721 -> m4_1725  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1721 -> m4_1727  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1721 -> m4_1729  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1721 -> m4_1731  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1721 -> m4_1733  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1721 -> m4_1735  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1721 -> m4_1722  [key=0, style=solid];
m4_1721 -> m4_1724  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1721 -> m4_1726  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1721 -> m4_1728  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1721 -> m4_1730  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1721 -> m4_1732  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1721 -> m4_1734  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1722 -> m4_1723  [key=0, style=solid];
m4_1722 -> m4_23  [key=2, style=dotted];
m4_1722 -> m4_24  [key=2, style=dotted];
m4_1724 -> m4_1725  [key=0, style=solid];
m4_1724 -> m4_23  [key=2, style=dotted];
m4_1724 -> m4_24  [key=2, style=dotted];
m4_1726 -> m4_1727  [key=0, style=solid];
m4_1726 -> m4_23  [key=2, style=dotted];
m4_1726 -> m4_24  [key=2, style=dotted];
m4_1728 -> m4_1729  [key=0, style=solid];
m4_1728 -> m4_23  [key=2, style=dotted];
m4_1728 -> m4_24  [key=2, style=dotted];
m4_1730 -> m4_1731  [key=0, style=solid];
m4_1730 -> m4_23  [key=2, style=dotted];
m4_1730 -> m4_24  [key=2, style=dotted];
m4_1732 -> m4_1733  [key=0, style=solid];
m4_1732 -> m4_23  [key=2, style=dotted];
m4_1732 -> m4_24  [key=2, style=dotted];
m4_1734 -> m4_1735  [key=0, style=solid];
m4_1734 -> m4_23  [key=2, style=dotted];
m4_1734 -> m4_24  [key=2, style=dotted];
m4_1720 -> m4_1721  [key=0, style=solid];
m4_1736 -> m4_1719  [color=blue, key=0, style=bold];
m4_2008 -> m4_2009  [key=0, style=solid];
m4_2013 -> m4_25  [key=2, style=dotted];
m4_2013 -> m4_26  [key=2, style=dotted];
m4_2013 -> m4_2014  [key=0, style=solid];
m4_2009 -> m4_21  [key=2, style=dotted];
m4_2009 -> m4_22  [key=2, style=dotted];
m4_2009 -> m4_2013  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2009 -> m4_2010  [key=0, style=solid];
m4_2009 -> m4_2011  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2009 -> m4_2012  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2009 -> m4_2017  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2009 -> m4_2014  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2012 -> m4_2013  [key=0, style=solid];
m4_2012 -> m4_172  [key=2, style=dotted];
m4_2012 -> m4_2016  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_2014 -> m4_23  [key=2, style=dotted];
m4_2014 -> m4_24  [key=2, style=dotted];
m4_2014 -> m4_2015  [key=0, style=solid];
m4_2010 -> m4_23  [key=2, style=dotted];
m4_2010 -> m4_2011  [key=0, style=solid];
m4_2011 -> m4_176  [key=2, style=dotted];
m4_2011 -> m4_2012  [key=0, style=solid];
m4_2015 -> m4_2008  [color=blue, key=0, style=bold];
m4_2249 -> m4_2250  [key=0, style=solid];
m4_2251 -> m4_21  [key=2, style=dotted];
m4_2251 -> m4_2252  [key=0, style=solid];
m4_2251 -> m4_358  [key=2, style=dotted];
m4_2251 -> m4_396  [key=2, style=dotted];
m4_2251 -> m4_397  [key=2, style=dotted];
m4_2251 -> m4_2255  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2250 -> m4_2251  [key=0, style=solid];
m4_2252 -> m4_2253  [key=0, style=solid];
m4_2252 -> m4_172  [key=2, style=dotted];
m4_2252 -> m4_2254  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_2253 -> m4_2249  [color=blue, key=0, style=bold];
m4_1842 -> m4_1843  [key=0, style=solid];
m4_1844 -> m4_25  [key=2, style=dotted];
m4_1844 -> m4_1845  [key=0, style=solid];
m4_1844 -> m4_1846  [key=2, style=dotted];
m4_1843 -> m4_21  [key=2, style=dotted];
m4_1843 -> m4_22  [key=2, style=dotted];
m4_1843 -> m4_1844  [key=0, style=solid];
m4_1845 -> m4_1842  [color=blue, key=0, style=bold];
m4_2407 -> m4_2408  [key=0, style=solid];
m4_2409 -> m4_21  [key=2, style=dotted];
m4_2409 -> m4_22  [key=2, style=dotted];
m4_2409 -> m4_2410  [key=0, style=solid];
m4_2409 -> m4_2413  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2408 -> m4_2409  [key=0, style=solid];
m4_2410 -> m4_2411  [key=0, style=solid];
m4_2410 -> m4_172  [key=2, style=dotted];
m4_2410 -> m4_2412  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_2411 -> m4_2407  [color=blue, key=0, style=bold];
m4_2133 -> m4_2134  [key=0, style=solid];
m4_2137 -> m4_25  [key=2, style=dotted];
m4_2137 -> m4_2138  [key=0, style=solid];
m4_2138 -> m4_25  [key=2, style=dotted];
m4_2138 -> m4_2139  [key=0, style=solid];
m4_2139 -> m4_25  [key=2, style=dotted];
m4_2139 -> m4_2140  [key=0, style=solid];
m4_2141 -> m4_25  [key=2, style=dotted];
m4_2141 -> m4_2142  [key=0, style=solid];
m4_2142 -> m4_25  [key=2, style=dotted];
m4_2142 -> m4_2143  [key=0, style=solid];
m4_2144 -> m4_25  [key=2, style=dotted];
m4_2144 -> m4_2145  [key=0, style=solid];
m4_2145 -> m4_25  [key=2, style=dotted];
m4_2145 -> m4_2146  [key=0, style=solid];
m4_2147 -> m4_25  [key=2, style=dotted];
m4_2147 -> m4_2148  [key=0, style=solid];
m4_2148 -> m4_25  [key=2, style=dotted];
m4_2148 -> m4_2149  [key=0, style=solid];
m4_2149 -> m4_25  [key=2, style=dotted];
m4_2149 -> m4_2150  [key=0, style=solid];
m4_2151 -> m4_25  [key=2, style=dotted];
m4_2151 -> m4_2152  [key=0, style=solid];
m4_2152 -> m4_25  [key=2, style=dotted];
m4_2152 -> m4_2153  [key=0, style=solid];
m4_2154 -> m4_25  [key=2, style=dotted];
m4_2154 -> m4_2155  [key=0, style=solid];
m4_2155 -> m4_25  [key=2, style=dotted];
m4_2155 -> m4_2156  [key=0, style=solid];
m4_2156 -> m4_25  [key=2, style=dotted];
m4_2156 -> m4_2157  [key=0, style=solid];
m4_2158 -> m4_25  [key=2, style=dotted];
m4_2158 -> m4_2159  [key=0, style=solid];
m4_2159 -> m4_25  [key=2, style=dotted];
m4_2159 -> m4_2160  [key=0, style=solid];
m4_2160 -> m4_25  [key=2, style=dotted];
m4_2160 -> m4_2161  [key=0, style=solid];
m4_2162 -> m4_25  [key=2, style=dotted];
m4_2162 -> m4_2163  [key=0, style=solid];
m4_2163 -> m4_25  [key=2, style=dotted];
m4_2163 -> m4_2164  [key=0, style=solid];
m4_2164 -> m4_25  [key=2, style=dotted];
m4_2164 -> m4_2165  [key=0, style=solid];
m4_2166 -> m4_25  [key=2, style=dotted];
m4_2166 -> m4_2167  [key=0, style=solid];
m4_2167 -> m4_25  [key=2, style=dotted];
m4_2167 -> m4_2168  [key=0, style=solid];
m4_2168 -> m4_25  [key=2, style=dotted];
m4_2168 -> m4_2169  [key=0, style=solid];
m4_2170 -> m4_25  [key=2, style=dotted];
m4_2170 -> m4_2171  [key=0, style=solid];
m4_2171 -> m4_25  [key=2, style=dotted];
m4_2171 -> m4_2172  [key=0, style=solid];
m4_2173 -> m4_25  [key=2, style=dotted];
m4_2173 -> m4_2174  [key=0, style=solid];
m4_2174 -> m4_25  [key=2, style=dotted];
m4_2174 -> m4_2175  [key=0, style=solid];
m4_2175 -> m4_25  [key=2, style=dotted];
m4_2175 -> m4_2176  [key=0, style=solid];
m4_2177 -> m4_25  [key=2, style=dotted];
m4_2177 -> m4_2178  [key=0, style=solid];
m4_2179 -> m4_25  [key=2, style=dotted];
m4_2179 -> m4_2180  [key=0, style=solid];
m4_2180 -> m4_25  [key=2, style=dotted];
m4_2180 -> m4_2181  [key=0, style=solid];
m4_2182 -> m4_25  [key=2, style=dotted];
m4_2182 -> m4_2183  [key=0, style=solid];
m4_2183 -> m4_25  [key=2, style=dotted];
m4_2183 -> m4_2184  [key=0, style=solid];
m4_2185 -> m4_25  [key=2, style=dotted];
m4_2185 -> m4_2186  [key=0, style=solid];
m4_2186 -> m4_25  [key=2, style=dotted];
m4_2186 -> m4_2187  [key=0, style=solid];
m4_2188 -> m4_25  [key=2, style=dotted];
m4_2188 -> m4_2189  [key=0, style=solid];
m4_2189 -> m4_25  [key=2, style=dotted];
m4_2189 -> m4_2189  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m4_2189 -> m4_2190  [key=0, style=solid];
m4_2191 -> m4_25  [key=2, style=dotted];
m4_2191 -> m4_2192  [key=0, style=solid];
m4_2193 -> m4_25  [key=2, style=dotted];
m4_2193 -> m4_2194  [key=0, style=solid];
m4_2194 -> m4_25  [key=2, style=dotted];
m4_2194 -> m4_2195  [key=0, style=solid];
m4_2196 -> m4_25  [key=2, style=dotted];
m4_2196 -> m4_2197  [key=0, style=solid];
m4_2198 -> m4_25  [key=2, style=dotted];
m4_2198 -> m4_2199  [key=0, style=solid];
m4_2200 -> m4_25  [key=2, style=dotted];
m4_2200 -> m4_2201  [key=0, style=solid];
m4_2202 -> m4_25  [key=2, style=dotted];
m4_2202 -> m4_2203  [key=0, style=solid];
m4_2204 -> m4_25  [key=2, style=dotted];
m4_2204 -> m4_2205  [key=0, style=solid];
m4_2206 -> m4_25  [key=2, style=dotted];
m4_2206 -> m4_2207  [key=0, style=solid];
m4_2208 -> m4_25  [key=2, style=dotted];
m4_2208 -> m4_2209  [key=0, style=solid];
m4_2210 -> m4_25  [key=2, style=dotted];
m4_2210 -> m4_2211  [key=0, style=solid];
m4_2212 -> m4_25  [key=2, style=dotted];
m4_2212 -> m4_2213  [key=0, style=solid];
m4_2213 -> m4_25  [key=2, style=dotted];
m4_2213 -> m4_2214  [key=0, style=solid];
m4_2215 -> m4_25  [key=2, style=dotted];
m4_2215 -> m4_2216  [key=0, style=solid];
m4_2216 -> m4_25  [key=2, style=dotted];
m4_2216 -> m4_2217  [key=0, style=solid];
m4_2135 -> m4_21  [key=2, style=dotted];
m4_2135 -> m4_2137  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2138  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2139  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2141  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2142  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2144  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2145  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2147  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2148  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2149  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2151  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2152  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2154  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2155  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2156  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2158  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2159  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2160  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2162  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2163  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2164  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2166  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2167  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2168  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2170  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2171  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2173  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2174  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2175  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2177  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2179  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2180  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2182  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2183  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2185  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2186  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2188  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2189  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2191  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2193  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2194  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2196  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2198  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2200  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2202  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2204  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2206  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2208  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2210  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2212  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2213  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2215  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2216  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2136  [key=0, style=solid];
m4_2135 -> m4_358  [key=2, style=dotted];
m4_2135 -> m4_396  [key=2, style=dotted];
m4_2135 -> m4_397  [key=2, style=dotted];
m4_2135 -> m4_2140  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2143  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2146  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2150  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2153  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2157  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2161  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2165  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2169  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2172  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2176  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2178  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2181  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2184  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2187  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2190  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2192  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2195  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2197  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2199  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2201  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2203  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2205  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2207  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2209  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2211  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2214  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2135 -> m4_2217  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2136 -> m4_2137  [key=0, style=solid];
m4_2136 -> m4_23  [key=2, style=dotted];
m4_2136 -> m4_24  [key=2, style=dotted];
m4_2140 -> m4_2141  [key=0, style=solid];
m4_2140 -> m4_23  [key=2, style=dotted];
m4_2140 -> m4_24  [key=2, style=dotted];
m4_2143 -> m4_2144  [key=0, style=solid];
m4_2143 -> m4_23  [key=2, style=dotted];
m4_2143 -> m4_24  [key=2, style=dotted];
m4_2146 -> m4_2147  [key=0, style=solid];
m4_2146 -> m4_23  [key=2, style=dotted];
m4_2146 -> m4_24  [key=2, style=dotted];
m4_2150 -> m4_2151  [key=0, style=solid];
m4_2150 -> m4_23  [key=2, style=dotted];
m4_2150 -> m4_24  [key=2, style=dotted];
m4_2153 -> m4_2154  [key=0, style=solid];
m4_2153 -> m4_23  [key=2, style=dotted];
m4_2153 -> m4_24  [key=2, style=dotted];
m4_2157 -> m4_2158  [key=0, style=solid];
m4_2157 -> m4_23  [key=2, style=dotted];
m4_2157 -> m4_24  [key=2, style=dotted];
m4_2161 -> m4_2162  [key=0, style=solid];
m4_2161 -> m4_23  [key=2, style=dotted];
m4_2161 -> m4_24  [key=2, style=dotted];
m4_2165 -> m4_2166  [key=0, style=solid];
m4_2165 -> m4_23  [key=2, style=dotted];
m4_2165 -> m4_24  [key=2, style=dotted];
m4_2169 -> m4_2170  [key=0, style=solid];
m4_2169 -> m4_23  [key=2, style=dotted];
m4_2169 -> m4_24  [key=2, style=dotted];
m4_2172 -> m4_2173  [key=0, style=solid];
m4_2172 -> m4_23  [key=2, style=dotted];
m4_2172 -> m4_24  [key=2, style=dotted];
m4_2176 -> m4_2177  [key=0, style=solid];
m4_2176 -> m4_23  [key=2, style=dotted];
m4_2176 -> m4_24  [key=2, style=dotted];
m4_2178 -> m4_2179  [key=0, style=solid];
m4_2178 -> m4_23  [key=2, style=dotted];
m4_2178 -> m4_24  [key=2, style=dotted];
m4_2181 -> m4_2182  [key=0, style=solid];
m4_2181 -> m4_23  [key=2, style=dotted];
m4_2181 -> m4_24  [key=2, style=dotted];
m4_2184 -> m4_2185  [key=0, style=solid];
m4_2184 -> m4_23  [key=2, style=dotted];
m4_2184 -> m4_24  [key=2, style=dotted];
m4_2187 -> m4_2188  [key=0, style=solid];
m4_2187 -> m4_23  [key=2, style=dotted];
m4_2187 -> m4_24  [key=2, style=dotted];
m4_2190 -> m4_2191  [key=0, style=solid];
m4_2190 -> m4_23  [key=2, style=dotted];
m4_2190 -> m4_24  [key=2, style=dotted];
m4_2192 -> m4_2193  [key=0, style=solid];
m4_2192 -> m4_23  [key=2, style=dotted];
m4_2192 -> m4_24  [key=2, style=dotted];
m4_2195 -> m4_2196  [key=0, style=solid];
m4_2195 -> m4_23  [key=2, style=dotted];
m4_2195 -> m4_24  [key=2, style=dotted];
m4_2197 -> m4_2198  [key=0, style=solid];
m4_2197 -> m4_23  [key=2, style=dotted];
m4_2197 -> m4_24  [key=2, style=dotted];
m4_2199 -> m4_2200  [key=0, style=solid];
m4_2199 -> m4_23  [key=2, style=dotted];
m4_2199 -> m4_24  [key=2, style=dotted];
m4_2201 -> m4_2202  [key=0, style=solid];
m4_2201 -> m4_23  [key=2, style=dotted];
m4_2201 -> m4_24  [key=2, style=dotted];
m4_2203 -> m4_2204  [key=0, style=solid];
m4_2203 -> m4_23  [key=2, style=dotted];
m4_2203 -> m4_24  [key=2, style=dotted];
m4_2205 -> m4_2206  [key=0, style=solid];
m4_2205 -> m4_23  [key=2, style=dotted];
m4_2205 -> m4_24  [key=2, style=dotted];
m4_2207 -> m4_2208  [key=0, style=solid];
m4_2207 -> m4_23  [key=2, style=dotted];
m4_2207 -> m4_24  [key=2, style=dotted];
m4_2209 -> m4_2210  [key=0, style=solid];
m4_2209 -> m4_23  [key=2, style=dotted];
m4_2209 -> m4_24  [key=2, style=dotted];
m4_2211 -> m4_2212  [key=0, style=solid];
m4_2211 -> m4_23  [key=2, style=dotted];
m4_2211 -> m4_24  [key=2, style=dotted];
m4_2214 -> m4_2215  [key=0, style=solid];
m4_2214 -> m4_23  [key=2, style=dotted];
m4_2214 -> m4_24  [key=2, style=dotted];
m4_2217 -> m4_23  [key=2, style=dotted];
m4_2217 -> m4_2218  [key=0, style=solid];
m4_2217 -> m4_158  [key=2, style=dotted];
m4_2134 -> m4_2135  [key=0, style=solid];
m4_2134 -> m4_2134  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Tests.TestObjects.Organization.Person GetPerson", style=bold];
m4_2218 -> m4_2133  [color=blue, key=0, style=bold];
m4_1558 -> m4_1559  [key=0, style=solid];
m4_1563 -> m4_25  [key=2, style=dotted];
m4_1563 -> m4_1564  [key=0, style=solid];
m4_1565 -> m4_25  [key=2, style=dotted];
m4_1565 -> m4_1566  [key=0, style=solid];
m4_1567 -> m4_25  [key=2, style=dotted];
m4_1567 -> m4_1568  [key=0, style=solid];
m4_1568 -> m4_25  [key=2, style=dotted];
m4_1568 -> m4_1569  [key=0, style=solid];
m4_1572 -> m4_25  [key=2, style=dotted];
m4_1572 -> m4_1573  [key=0, style=solid];
m4_1570 -> m4_25  [key=2, style=dotted];
m4_1570 -> m4_1570  [color=darkseagreen4, key=1, label=dt, style=dashed];
m4_1570 -> m4_1571  [key=0, style=solid];
m4_1570 -> m4_1557  [key=2, style=dotted];
m4_1560 -> m4_21  [key=2, style=dotted];
m4_1560 -> m4_22  [key=2, style=dotted];
m4_1560 -> m4_1563  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1560 -> m4_1565  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1560 -> m4_1567  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1560 -> m4_1568  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1560 -> m4_1572  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1560 -> m4_1561  [key=0, style=solid];
m4_1560 -> m4_1562  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1560 -> m4_1564  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1560 -> m4_1566  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1560 -> m4_1569  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1560 -> m4_1571  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1562 -> m4_1563  [key=0, style=solid];
m4_1562 -> m4_23  [key=2, style=dotted];
m4_1562 -> m4_24  [key=2, style=dotted];
m4_1564 -> m4_1565  [key=0, style=solid];
m4_1564 -> m4_23  [key=2, style=dotted];
m4_1564 -> m4_24  [key=2, style=dotted];
m4_1566 -> m4_1567  [key=0, style=solid];
m4_1566 -> m4_1386  [key=2, style=dotted];
m4_1569 -> m4_1570  [key=0, style=solid];
m4_1571 -> m4_1572  [key=0, style=solid];
m4_1571 -> m4_23  [key=2, style=dotted];
m4_1571 -> m4_24  [key=2, style=dotted];
m4_1559 -> m4_1560  [key=0, style=solid];
m4_1561 -> m4_1562  [key=0, style=solid];
m4_1561 -> m4_1574  [key=2, style=dotted];
m4_1573 -> m4_1558  [color=blue, key=0, style=bold];
m4_128 -> m4_129  [key=0, style=solid];
m4_132 -> m4_25  [key=2, style=dotted];
m4_132 -> m4_133  [key=0, style=solid];
m4_133 -> m4_25  [key=2, style=dotted];
m4_133 -> m4_134  [key=0, style=solid];
m4_130 -> m4_21  [key=2, style=dotted];
m4_130 -> m4_22  [key=2, style=dotted];
m4_130 -> m4_132  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_130 -> m4_133  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_130 -> m4_131  [key=0, style=solid];
m4_131 -> m4_132  [key=0, style=solid];
m4_131 -> m4_23  [key=2, style=dotted];
m4_131 -> m4_24  [key=2, style=dotted];
m4_129 -> m4_130  [key=0, style=solid];
m4_134 -> m4_128  [color=blue, key=0, style=bold];
m4_202 -> m4_203  [key=0, style=solid];
m4_206 -> m4_25  [key=2, style=dotted];
m4_206 -> m4_207  [key=0, style=solid];
m4_208 -> m4_25  [key=2, style=dotted];
m4_208 -> m4_209  [key=0, style=solid];
m4_212 -> m4_25  [key=2, style=dotted];
m4_212 -> m4_213  [key=0, style=solid];
m4_204 -> m4_21  [key=2, style=dotted];
m4_204 -> m4_22  [key=2, style=dotted];
m4_204 -> m4_206  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_204 -> m4_208  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_204 -> m4_212  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_204 -> m4_205  [key=0, style=solid];
m4_204 -> m4_207  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_204 -> m4_209  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_204 -> m4_211  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_204 -> m4_213  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_205 -> m4_206  [key=0, style=solid];
m4_205 -> m4_23  [key=2, style=dotted];
m4_205 -> m4_24  [key=2, style=dotted];
m4_207 -> m4_208  [key=0, style=solid];
m4_207 -> m4_23  [key=2, style=dotted];
m4_207 -> m4_24  [key=2, style=dotted];
m4_209 -> m4_210  [key=0, style=solid];
m4_209 -> m4_211  [key=0, style=solid];
m4_209 -> m4_116  [key=2, style=dotted];
m4_211 -> m4_212  [key=0, style=solid];
m4_211 -> m4_23  [key=2, style=dotted];
m4_211 -> m4_24  [key=2, style=dotted];
m4_213 -> m4_23  [key=2, style=dotted];
m4_213 -> m4_214  [key=0, style=solid];
m4_213 -> m4_158  [key=2, style=dotted];
m4_203 -> m4_204  [key=0, style=solid];
m4_210 -> m4_211  [key=0, style=solid];
m4_214 -> m4_202  [color=blue, key=0, style=bold];
m4_2287 -> m4_2288  [key=0, style=solid];
m4_2291 -> m4_25  [key=2, style=dotted];
m4_2291 -> m4_2292  [key=0, style=solid];
m4_2292 -> m4_25  [key=2, style=dotted];
m4_2292 -> m4_2293  [key=0, style=solid];
m4_2292 -> m4_1392  [key=2, style=dotted];
m4_2293 -> m4_25  [key=2, style=dotted];
m4_2293 -> m4_2294  [key=0, style=solid];
m4_2294 -> m4_25  [key=2, style=dotted];
m4_2294 -> m4_2295  [key=0, style=solid];
m4_2294 -> m4_1392  [key=2, style=dotted];
m4_2295 -> m4_25  [key=2, style=dotted];
m4_2295 -> m4_2296  [key=0, style=solid];
m4_2296 -> m4_25  [key=2, style=dotted];
m4_2296 -> m4_2297  [key=0, style=solid];
m4_2296 -> m4_1392  [key=2, style=dotted];
m4_2297 -> m4_25  [key=2, style=dotted];
m4_2297 -> m4_2298  [key=0, style=solid];
m4_2298 -> m4_25  [key=2, style=dotted];
m4_2298 -> m4_2299  [key=0, style=solid];
m4_2298 -> m4_1392  [key=2, style=dotted];
m4_2299 -> m4_25  [key=2, style=dotted];
m4_2299 -> m4_2300  [key=0, style=solid];
m4_2300 -> m4_25  [key=2, style=dotted];
m4_2300 -> m4_2301  [key=0, style=solid];
m4_2300 -> m4_1392  [key=2, style=dotted];
m4_2301 -> m4_25  [key=2, style=dotted];
m4_2301 -> m4_2302  [key=0, style=solid];
m4_2302 -> m4_25  [key=2, style=dotted];
m4_2302 -> m4_2303  [key=0, style=solid];
m4_2302 -> m4_1392  [key=2, style=dotted];
m4_2303 -> m4_25  [key=2, style=dotted];
m4_2303 -> m4_2304  [key=0, style=solid];
m4_2304 -> m4_25  [key=2, style=dotted];
m4_2304 -> m4_2305  [key=0, style=solid];
m4_2304 -> m4_1392  [key=2, style=dotted];
m4_2305 -> m4_25  [key=2, style=dotted];
m4_2305 -> m4_2306  [key=0, style=solid];
m4_2306 -> m4_25  [key=2, style=dotted];
m4_2306 -> m4_2307  [key=0, style=solid];
m4_2306 -> m4_1392  [key=2, style=dotted];
m4_2307 -> m4_25  [key=2, style=dotted];
m4_2307 -> m4_2308  [key=0, style=solid];
m4_2308 -> m4_25  [key=2, style=dotted];
m4_2308 -> m4_2309  [key=0, style=solid];
m4_2308 -> m4_1392  [key=2, style=dotted];
m4_2309 -> m4_25  [key=2, style=dotted];
m4_2309 -> m4_2310  [key=0, style=solid];
m4_2310 -> m4_25  [key=2, style=dotted];
m4_2310 -> m4_2311  [key=0, style=solid];
m4_2310 -> m4_1392  [key=2, style=dotted];
m4_2311 -> m4_25  [key=2, style=dotted];
m4_2311 -> m4_2312  [key=0, style=solid];
m4_2312 -> m4_25  [key=2, style=dotted];
m4_2312 -> m4_2313  [key=0, style=solid];
m4_2312 -> m4_1392  [key=2, style=dotted];
m4_2313 -> m4_25  [key=2, style=dotted];
m4_2313 -> m4_2314  [key=0, style=solid];
m4_2314 -> m4_25  [key=2, style=dotted];
m4_2314 -> m4_2315  [key=0, style=solid];
m4_2314 -> m4_1392  [key=2, style=dotted];
m4_2315 -> m4_25  [key=2, style=dotted];
m4_2315 -> m4_2316  [key=0, style=solid];
m4_2316 -> m4_25  [key=2, style=dotted];
m4_2316 -> m4_2317  [key=0, style=solid];
m4_2316 -> m4_1392  [key=2, style=dotted];
m4_2317 -> m4_25  [key=2, style=dotted];
m4_2317 -> m4_2318  [key=0, style=solid];
m4_2318 -> m4_25  [key=2, style=dotted];
m4_2318 -> m4_2319  [key=0, style=solid];
m4_2318 -> m4_1392  [key=2, style=dotted];
m4_2319 -> m4_25  [key=2, style=dotted];
m4_2319 -> m4_2320  [key=0, style=solid];
m4_2320 -> m4_25  [key=2, style=dotted];
m4_2320 -> m4_2321  [key=0, style=solid];
m4_2320 -> m4_1392  [key=2, style=dotted];
m4_2321 -> m4_25  [key=2, style=dotted];
m4_2321 -> m4_2322  [key=0, style=solid];
m4_2322 -> m4_25  [key=2, style=dotted];
m4_2322 -> m4_2323  [key=0, style=solid];
m4_2322 -> m4_1392  [key=2, style=dotted];
m4_2323 -> m4_25  [key=2, style=dotted];
m4_2323 -> m4_2324  [key=0, style=solid];
m4_2324 -> m4_25  [key=2, style=dotted];
m4_2324 -> m4_2325  [key=0, style=solid];
m4_2325 -> m4_25  [key=2, style=dotted];
m4_2325 -> m4_2326  [key=0, style=solid];
m4_2325 -> m4_1392  [key=2, style=dotted];
m4_2326 -> m4_25  [key=2, style=dotted];
m4_2326 -> m4_2327  [key=0, style=solid];
m4_2327 -> m4_25  [key=2, style=dotted];
m4_2327 -> m4_2328  [key=0, style=solid];
m4_2289 -> m4_21  [key=2, style=dotted];
m4_2289 -> m4_22  [key=2, style=dotted];
m4_2289 -> m4_2291  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2289 -> m4_2292  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2289 -> m4_2293  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2289 -> m4_2294  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2289 -> m4_2295  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2289 -> m4_2296  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2289 -> m4_2297  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2289 -> m4_2298  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2289 -> m4_2299  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2289 -> m4_2300  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2289 -> m4_2301  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2289 -> m4_2302  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2289 -> m4_2303  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2289 -> m4_2304  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2289 -> m4_2305  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2289 -> m4_2306  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2289 -> m4_2307  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2289 -> m4_2308  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2289 -> m4_2309  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2289 -> m4_2310  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2289 -> m4_2311  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2289 -> m4_2312  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2289 -> m4_2313  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2289 -> m4_2314  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2289 -> m4_2315  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2289 -> m4_2316  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2289 -> m4_2317  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2289 -> m4_2318  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2289 -> m4_2319  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2289 -> m4_2320  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2289 -> m4_2321  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2289 -> m4_2322  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2289 -> m4_2323  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2289 -> m4_2324  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2289 -> m4_2325  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2289 -> m4_2326  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2289 -> m4_2327  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2289 -> m4_2290  [key=0, style=solid];
m4_2290 -> m4_2291  [key=0, style=solid];
m4_2290 -> m4_23  [key=2, style=dotted];
m4_2290 -> m4_24  [key=2, style=dotted];
m4_2288 -> m4_2289  [key=0, style=solid];
m4_2288 -> m4_2288  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m4_2328 -> m4_2287  [color=blue, key=0, style=bold];
m4_1407 -> m4_1408  [key=0, style=solid];
m4_1408 -> m4_21  [key=2, style=dotted];
m4_1408 -> m4_22  [key=2, style=dotted];
m4_1408 -> m4_1409  [key=0, style=solid];
m4_1408 -> m4_1412  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1409 -> m4_1410  [key=0, style=solid];
m4_1409 -> m4_172  [key=2, style=dotted];
m4_1409 -> m4_1411  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1410 -> m4_1407  [color=blue, key=0, style=bold];
m4_1851 -> m4_1852  [key=0, style=solid];
m4_1853 -> m4_25  [key=2, style=dotted];
m4_1853 -> m4_1854  [key=0, style=solid];
m4_1853 -> m4_1846  [key=2, style=dotted];
m4_1852 -> m4_21  [key=2, style=dotted];
m4_1852 -> m4_22  [key=2, style=dotted];
m4_1852 -> m4_1853  [key=0, style=solid];
m4_1854 -> m4_1851  [color=blue, key=0, style=bold];
m4_1487 -> m4_1488  [key=0, style=solid];
m4_1491 -> m4_25  [key=2, style=dotted];
m4_1491 -> m4_1492  [key=0, style=solid];
m4_1493 -> m4_25  [key=2, style=dotted];
m4_1493 -> m4_1494  [key=0, style=solid];
m4_1495 -> m4_25  [key=2, style=dotted];
m4_1495 -> m4_1496  [key=0, style=solid];
m4_1496 -> m4_25  [key=2, style=dotted];
m4_1496 -> m4_1497  [key=0, style=solid];
m4_1497 -> m4_25  [key=2, style=dotted];
m4_1497 -> m4_1498  [key=0, style=solid];
m4_1497 -> m4_1484  [key=2, style=dotted];
m4_1497 -> m4_1485  [key=2, style=dotted];
m4_1497 -> m4_1486  [key=2, style=dotted];
m4_1499 -> m4_25  [key=2, style=dotted];
m4_1499 -> m4_1500  [key=0, style=solid];
m4_1489 -> m4_21  [key=2, style=dotted];
m4_1489 -> m4_22  [key=2, style=dotted];
m4_1489 -> m4_1491  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1489 -> m4_1493  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1489 -> m4_1495  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1489 -> m4_1496  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1489 -> m4_1497  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1489 -> m4_1499  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1489 -> m4_1490  [key=0, style=solid];
m4_1489 -> m4_1492  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1489 -> m4_1494  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1489 -> m4_1498  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1490 -> m4_1491  [key=0, style=solid];
m4_1490 -> m4_23  [key=2, style=dotted];
m4_1490 -> m4_24  [key=2, style=dotted];
m4_1492 -> m4_1493  [key=0, style=solid];
m4_1492 -> m4_23  [key=2, style=dotted];
m4_1492 -> m4_24  [key=2, style=dotted];
m4_1494 -> m4_1495  [key=0, style=solid];
m4_1494 -> m4_1386  [key=2, style=dotted];
m4_1498 -> m4_1499  [key=0, style=solid];
m4_1498 -> m4_23  [key=2, style=dotted];
m4_1498 -> m4_24  [key=2, style=dotted];
m4_1498 -> m4_1498  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m4_1488 -> m4_1489  [key=0, style=solid];
m4_1500 -> m4_1487  [color=blue, key=0, style=bold];
m4_1615 -> m4_1616  [key=0, style=solid];
m4_1616 -> m4_21  [key=2, style=dotted];
m4_1616 -> m4_22  [key=2, style=dotted];
m4_1616 -> m4_1617  [key=0, style=solid];
m4_1616 -> m4_1620  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1617 -> m4_1618  [key=0, style=solid];
m4_1617 -> m4_172  [key=2, style=dotted];
m4_1617 -> m4_1619  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1618 -> m4_1615  [color=blue, key=0, style=bold];
m4_2345 -> m4_2346  [key=0, style=solid];
m4_2347 -> m4_21  [key=2, style=dotted];
m4_2347 -> m4_22  [key=2, style=dotted];
m4_2347 -> m4_2348  [key=0, style=solid];
m4_2347 -> m4_2351  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2346 -> m4_2347  [key=0, style=solid];
m4_2348 -> m4_2349  [key=0, style=solid];
m4_2348 -> m4_172  [key=2, style=dotted];
m4_2348 -> m4_2350  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_2349 -> m4_2345  [color=blue, key=0, style=bold];
m4_2219 -> m4_2220  [key=0, style=solid];
m4_2223 -> m4_25  [key=2, style=dotted];
m4_2223 -> m4_2224  [key=0, style=solid];
m4_2225 -> m4_25  [key=2, style=dotted];
m4_2225 -> m4_2226  [key=0, style=solid];
m4_2226 -> m4_25  [key=2, style=dotted];
m4_2226 -> m4_2227  [key=0, style=solid];
m4_2228 -> m4_25  [key=2, style=dotted];
m4_2228 -> m4_2229  [key=0, style=solid];
m4_2229 -> m4_25  [key=2, style=dotted];
m4_2229 -> m4_2230  [key=0, style=solid];
m4_2231 -> m4_25  [key=2, style=dotted];
m4_2231 -> m4_2232  [key=0, style=solid];
m4_2232 -> m4_25  [key=2, style=dotted];
m4_2232 -> m4_2233  [key=0, style=solid];
m4_2234 -> m4_25  [key=2, style=dotted];
m4_2234 -> m4_2235  [key=0, style=solid];
m4_2235 -> m4_25  [key=2, style=dotted];
m4_2235 -> m4_2236  [key=0, style=solid];
m4_2237 -> m4_25  [key=2, style=dotted];
m4_2237 -> m4_2238  [key=0, style=solid];
m4_2238 -> m4_25  [key=2, style=dotted];
m4_2238 -> m4_2239  [key=0, style=solid];
m4_2221 -> m4_21  [key=2, style=dotted];
m4_2221 -> m4_2223  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2221 -> m4_2225  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2221 -> m4_2226  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2221 -> m4_2228  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2221 -> m4_2229  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2221 -> m4_2231  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2221 -> m4_2232  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2221 -> m4_2234  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2221 -> m4_2235  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2221 -> m4_2237  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2221 -> m4_2238  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2221 -> m4_2222  [key=0, style=solid];
m4_2221 -> m4_358  [key=2, style=dotted];
m4_2221 -> m4_396  [key=2, style=dotted];
m4_2221 -> m4_397  [key=2, style=dotted];
m4_2221 -> m4_2224  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2221 -> m4_2227  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2221 -> m4_2230  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2221 -> m4_2233  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2221 -> m4_2236  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2221 -> m4_2239  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2222 -> m4_2223  [key=0, style=solid];
m4_2222 -> m4_23  [key=2, style=dotted];
m4_2222 -> m4_2220  [color=darkorchid, key=3, label="Property variable string TestProperty1", style=bold];
m4_2224 -> m4_2225  [key=0, style=solid];
m4_2224 -> m4_176  [key=2, style=dotted];
m4_2227 -> m4_2228  [key=0, style=solid];
m4_2227 -> m4_176  [key=2, style=dotted];
m4_2230 -> m4_2231  [key=0, style=solid];
m4_2230 -> m4_176  [key=2, style=dotted];
m4_2233 -> m4_2234  [key=0, style=solid];
m4_2233 -> m4_176  [key=2, style=dotted];
m4_2236 -> m4_2237  [key=0, style=solid];
m4_2236 -> m4_23  [key=2, style=dotted];
m4_2239 -> m4_23  [key=2, style=dotted];
m4_2239 -> m4_2240  [key=0, style=solid];
m4_2239 -> m4_158  [key=2, style=dotted];
m4_2220 -> m4_2221  [key=0, style=solid];
m4_2240 -> m4_2219  [color=blue, key=0, style=bold];
m4_1442 -> m4_1443  [key=0, style=solid];
m4_1446 -> m4_25  [key=2, style=dotted];
m4_1446 -> m4_1447  [key=0, style=solid];
m4_1448 -> m4_25  [key=2, style=dotted];
m4_1448 -> m4_1449  [key=0, style=solid];
m4_1449 -> m4_25  [key=2, style=dotted];
m4_1449 -> m4_1450  [key=0, style=solid];
m4_1451 -> m4_25  [key=2, style=dotted];
m4_1451 -> m4_1452  [key=0, style=solid];
m4_1452 -> m4_25  [key=2, style=dotted];
m4_1452 -> m4_1453  [key=0, style=solid];
m4_1454 -> m4_25  [key=2, style=dotted];
m4_1454 -> m4_1455  [key=0, style=solid];
m4_1444 -> m4_21  [key=2, style=dotted];
m4_1444 -> m4_22  [key=2, style=dotted];
m4_1444 -> m4_1446  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1444 -> m4_1448  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1444 -> m4_1449  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1444 -> m4_1451  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1444 -> m4_1452  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1444 -> m4_1454  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1444 -> m4_1445  [key=0, style=solid];
m4_1444 -> m4_1447  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1444 -> m4_1450  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1444 -> m4_1453  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1444 -> m4_1455  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1445 -> m4_1446  [key=0, style=solid];
m4_1445 -> m4_23  [key=2, style=dotted];
m4_1445 -> m4_24  [key=2, style=dotted];
m4_1447 -> m4_1448  [key=0, style=solid];
m4_1447 -> m4_23  [key=2, style=dotted];
m4_1447 -> m4_24  [key=2, style=dotted];
m4_1450 -> m4_1451  [key=0, style=solid];
m4_1450 -> m4_23  [key=2, style=dotted];
m4_1450 -> m4_24  [key=2, style=dotted];
m4_1453 -> m4_1454  [key=0, style=solid];
m4_1453 -> m4_23  [key=2, style=dotted];
m4_1453 -> m4_24  [key=2, style=dotted];
m4_1455 -> m4_23  [key=2, style=dotted];
m4_1455 -> m4_1456  [key=0, style=solid];
m4_1455 -> m4_158  [key=2, style=dotted];
m4_1443 -> m4_1444  [key=0, style=solid];
m4_1456 -> m4_1442  [color=blue, key=0, style=bold];
m4_2877 -> m4_336  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m4_2877 -> m4_337  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m4_2877 -> m4_338  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m4_2877 -> m4_339  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m4_2877 -> m4_340  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m4_2877 -> m4_341  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m4_2877 -> m4_342  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m4_2877 -> m4_343  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m4_2877 -> m4_344  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m4_2877 -> m4_345  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m4_2877 -> m4_346  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m4_2877 -> m4_347  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m4_2885 -> m4_708  [color=darkseagreen4, key=1, label=total, style=dashed];
m4_2886 -> m4_724  [color=darkseagreen4, key=1, label=total, style=dashed];
m4_2949 -> m4_2704  [color=darkseagreen4, key=1, label=json, style=dashed];
m4_2919 -> m4_1900  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2928 -> m4_2006  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2929 -> m4_2017  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2932 -> m4_2335  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2934 -> m4_2351  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2937 -> m4_2381  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2943 -> m4_2429  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2944 -> m4_2437  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2872 -> m4_174  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_2873 -> m4_191  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_2873 -> m4_194  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_2873 -> m4_197  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_2873 -> m4_200  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_2874 -> m4_239  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2874 -> m4_242  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2874 -> m4_246  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2875 -> m4_262  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2876 -> m4_299  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2878 -> m4_404  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2879 -> m4_422  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2880 -> m4_435  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2881 -> m4_597  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2882 -> m4_679  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2883 -> m4_686  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2884 -> m4_693  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2889 -> m4_830  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2890 -> m4_837  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2891 -> m4_844  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2892 -> m4_852  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2893 -> m4_863  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2894 -> m4_878  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2895 -> m4_1031  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2895 -> m4_1034  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2895 -> m4_1037  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2895 -> m4_1040  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2895 -> m4_1043  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2896 -> m4_1068  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2896 -> m4_1071  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2896 -> m4_1074  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2897 -> m4_1106  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2897 -> m4_1109  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2898 -> m4_1284  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2899 -> m4_1362  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2900 -> m4_1379  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2901 -> m4_1398  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2902 -> m4_1405  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2903 -> m4_1412  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2904 -> m4_1419  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2905 -> m4_1433  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2906 -> m4_1440  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2907 -> m4_1511  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2908 -> m4_1613  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2909 -> m4_1620  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2910 -> m4_1627  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2911 -> m4_1634  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2912 -> m4_1641  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2913 -> m4_1648  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2914 -> m4_1793  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2915 -> m4_1801  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2916 -> m4_1832  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2917 -> m4_1867  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2918 -> m4_1888  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2920 -> m4_1909  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2921 -> m4_1942  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2922 -> m4_1952  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2923 -> m4_1959  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2924 -> m4_1966  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2925 -> m4_1974  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2926 -> m4_1985  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2927 -> m4_1996  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2930 -> m4_2029  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2930 -> m4_2032  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2930 -> m4_2035  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2931 -> m4_2255  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2933 -> m4_2343  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2935 -> m4_2359  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2936 -> m4_2373  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2938 -> m4_2389  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2939 -> m4_2397  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2940 -> m4_2405  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2941 -> m4_2413  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2942 -> m4_2421  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2945 -> m4_2453  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2946 -> m4_2508  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2947 -> m4_2540  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2947 -> m4_2543  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2948 -> m4_2664  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_2948 -> m4_2667  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_2948 -> m4_2670  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_2948 -> m4_2673  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_2948 -> m4_2676  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_2948 -> m4_2679  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_2955 -> m4_2835  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.ToggleReaderError", style=dashed];
m4_2955 -> m4_2838  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.ToggleReaderError", style=dashed];
m4_2955 -> m4_2840  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.ToggleReaderError", style=dashed];
m4_2952 -> m4_2776  [color=darkseagreen4, key=1, label=jsonArrayElementsCount, style=dashed];
m4_2953 -> m4_2780  [color=darkseagreen4, key=1, label=clientReceivedEvent, style=dashed];
m4_2951 -> m4_2774  [color=darkseagreen4, key=1, label=serverStartedEvent, style=dashed];
m4_2950 -> m4_2772  [color=darkseagreen4, key=1, label=port, style=dashed];
m5_511 -> m5_512  [key=0, style=solid];
m5_512 -> m5_513  [key=0, style=solid];
m5_512 -> m5_25  [key=2, style=dotted];
m5_512 -> m5_26  [key=2, style=dotted];
m5_512 -> m5_516  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_513 -> m5_514  [key=0, style=solid];
m5_513 -> m5_39  [key=2, style=dotted];
m5_513 -> m5_515  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_514 -> m5_511  [color=blue, key=0, style=bold];
m5_756 -> m5_757  [key=0, style=solid];
m5_757 -> m5_758  [key=0, style=solid];
m5_758 -> m5_759  [key=0, style=solid];
m5_758 -> m5_26  [key=2, style=dotted];
m5_759 -> m5_760  [key=0, style=solid];
m5_759 -> m5_25  [key=2, style=dotted];
m5_759 -> m5_761  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_759 -> m5_762  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_759 -> m5_763  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_759 -> m5_764  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_759 -> m5_765  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_759 -> m5_766  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_759 -> m5_767  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_759 -> m5_768  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_759 -> m5_769  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_759 -> m5_770  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_759 -> m5_771  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_759 -> m5_772  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_760 -> m5_761  [key=0, style=solid];
m5_760 -> m5_122  [key=2, style=dotted];
m5_761 -> m5_762  [key=0, style=solid];
m5_761 -> m5_29  [key=2, style=dotted];
m5_762 -> m5_763  [key=0, style=solid];
m5_762 -> m5_122  [key=2, style=dotted];
m5_763 -> m5_764  [key=0, style=solid];
m5_763 -> m5_29  [key=2, style=dotted];
m5_764 -> m5_765  [key=0, style=solid];
m5_764 -> m5_29  [key=2, style=dotted];
m5_765 -> m5_766  [key=0, style=solid];
m5_765 -> m5_122  [key=2, style=dotted];
m5_766 -> m5_767  [key=0, style=solid];
m5_766 -> m5_29  [key=2, style=dotted];
m5_767 -> m5_768  [key=0, style=solid];
m5_767 -> m5_29  [key=2, style=dotted];
m5_768 -> m5_769  [key=0, style=solid];
m5_768 -> m5_122  [key=2, style=dotted];
m5_769 -> m5_770  [key=0, style=solid];
m5_769 -> m5_29  [key=2, style=dotted];
m5_770 -> m5_771  [key=0, style=solid];
m5_770 -> m5_29  [key=2, style=dotted];
m5_771 -> m5_772  [key=0, style=solid];
m5_771 -> m5_122  [key=2, style=dotted];
m5_772 -> m5_773  [key=0, style=solid];
m5_772 -> m5_29  [key=2, style=dotted];
m5_773 -> m5_756  [color=blue, key=0, style=bold];
m5_1125 -> m5_1126  [key=0, style=solid];
m5_1126 -> m5_1127  [key=0, style=solid];
m5_1127 -> m5_1128  [key=0, style=solid];
m5_1127 -> m5_25  [key=2, style=dotted];
m5_1127 -> m5_26  [key=2, style=dotted];
m5_1127 -> m5_1129  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1127 -> m5_1130  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1127 -> m5_1131  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1127 -> m5_1132  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1127 -> m5_1133  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1127 -> m5_1134  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1127 -> m5_1135  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1127 -> m5_1136  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1127 -> m5_1137  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1128 -> m5_1129  [key=0, style=solid];
m5_1128 -> m5_27  [key=2, style=dotted];
m5_1128 -> m5_28  [key=2, style=dotted];
m5_1129 -> m5_1130  [key=0, style=solid];
m5_1129 -> m5_29  [key=2, style=dotted];
m5_1130 -> m5_1131  [key=0, style=solid];
m5_1130 -> m5_27  [key=2, style=dotted];
m5_1130 -> m5_28  [key=2, style=dotted];
m5_1131 -> m5_1132  [key=0, style=solid];
m5_1131 -> m5_29  [key=2, style=dotted];
m5_1132 -> m5_1133  [key=0, style=solid];
m5_1132 -> m5_981  [key=2, style=dotted];
m5_1133 -> m5_1134  [key=0, style=solid];
m5_1133 -> m5_29  [key=2, style=dotted];
m5_1134 -> m5_1135  [key=0, style=solid];
m5_1134 -> m5_29  [key=2, style=dotted];
m5_1135 -> m5_1136  [key=0, style=solid];
m5_1135 -> m5_1066  [key=2, style=dotted];
m5_1135 -> m5_1139  [key=2, style=dotted];
m5_1135 -> m5_29  [key=2, style=dotted];
m5_1136 -> m5_1137  [key=0, style=solid];
m5_1136 -> m5_27  [key=2, style=dotted];
m5_1136 -> m5_28  [key=2, style=dotted];
m5_1137 -> m5_1138  [key=0, style=solid];
m5_1137 -> m5_29  [key=2, style=dotted];
m5_1138 -> m5_1125  [color=blue, key=0, style=bold];
m5_544 -> m5_545  [key=0, style=solid];
m5_545 -> m5_546  [key=0, style=solid];
m5_545 -> m5_548  [color=darkseagreen4, key=1, label=newLinesText, style=dashed];
m5_545 -> m5_556  [color=darkseagreen4, key=1, label=newLinesText, style=dashed];
m5_545 -> m5_571  [color=darkseagreen4, key=1, label=newLinesText, style=dashed];
m5_546 -> m5_547  [key=0, style=solid];
m5_546 -> m5_551  [color=darkseagreen4, key=1, label=json, style=dashed];
m5_548 -> m5_549  [key=0, style=solid];
m5_548 -> m5_26  [key=2, style=dotted];
m5_556 -> m5_557  [key=0, style=solid];
m5_556 -> m5_29  [key=2, style=dotted];
m5_571 -> m5_572  [key=0, style=solid];
m5_571 -> m5_29  [key=2, style=dotted];
m5_547 -> m5_548  [key=0, style=solid];
m5_547 -> m5_550  [color=darkseagreen4, key=1, label=count, style=dashed];
m5_551 -> m5_552  [key=0, style=solid];
m5_551 -> m5_25  [key=2, style=dotted];
m5_551 -> m5_100  [key=2, style=dotted];
m5_551 -> m5_141  [key=2, style=dotted];
m5_551 -> m5_142  [key=2, style=dotted];
m5_551 -> m5_553  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_551 -> m5_554  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_551 -> m5_555  [color=red, key=1, label=reader, style=dashed];
m5_551 -> m5_556  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_551 -> m5_557  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_551 -> m5_558  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_551 -> m5_559  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_551 -> m5_560  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_551 -> m5_561  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_551 -> m5_562  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_551 -> m5_563  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_551 -> m5_564  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_551 -> m5_565  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_551 -> m5_566  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_551 -> m5_567  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_551 -> m5_568  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_551 -> m5_569  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_551 -> m5_570  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_551 -> m5_571  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_551 -> m5_572  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_551 -> m5_573  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_551 -> m5_574  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_551 -> m5_575  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_551 -> m5_576  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_551 -> m5_577  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_551 -> m5_578  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_551 -> m5_579  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_551 -> m5_580  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_551 -> m5_581  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_551 -> m5_582  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_551 -> m5_583  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_551 -> m5_584  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_551 -> m5_585  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_551 -> m5_586  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_550 -> m5_549  [key=0, style=solid];
m5_550 -> m5_550  [color=darkseagreen4, key=1, label=count, style=dashed];
m5_549 -> m5_550  [key=0, style=solid];
m5_549 -> m5_551  [key=0, style=solid];
m5_549 -> m5_588  [key=2, style=dotted];
m5_552 -> m5_553  [key=0, style=solid];
m5_552 -> m5_27  [key=2, style=dotted];
m5_552 -> m5_28  [key=2, style=dotted];
m5_553 -> m5_554  [key=0, style=solid];
m5_553 -> m5_29  [key=2, style=dotted];
m5_554 -> m5_555  [color=red, key=0, style=solid];
m5_554 -> m5_27  [key=2, style=dotted];
m5_554 -> m5_28  [key=2, style=dotted];
m5_555 -> m5_556  [color=red, key=0, style=solid];
m5_555 -> m5_29  [color=red, key=2, style=dotted];
m5_557 -> m5_558  [key=0, style=solid];
m5_557 -> m5_27  [key=2, style=dotted];
m5_557 -> m5_28  [key=2, style=dotted];
m5_558 -> m5_559  [key=0, style=solid];
m5_558 -> m5_29  [key=2, style=dotted];
m5_559 -> m5_560  [key=0, style=solid];
m5_559 -> m5_27  [key=2, style=dotted];
m5_559 -> m5_28  [key=2, style=dotted];
m5_560 -> m5_561  [key=0, style=solid];
m5_560 -> m5_29  [key=2, style=dotted];
m5_561 -> m5_562  [key=0, style=solid];
m5_561 -> m5_29  [key=2, style=dotted];
m5_562 -> m5_563  [key=0, style=solid];
m5_562 -> m5_29  [key=2, style=dotted];
m5_563 -> m5_564  [key=0, style=solid];
m5_563 -> m5_27  [key=2, style=dotted];
m5_563 -> m5_28  [key=2, style=dotted];
m5_564 -> m5_565  [key=0, style=solid];
m5_564 -> m5_29  [key=2, style=dotted];
m5_565 -> m5_566  [key=0, style=solid];
m5_565 -> m5_29  [key=2, style=dotted];
m5_566 -> m5_567  [key=0, style=solid];
m5_566 -> m5_27  [key=2, style=dotted];
m5_566 -> m5_28  [key=2, style=dotted];
m5_567 -> m5_568  [key=0, style=solid];
m5_567 -> m5_29  [key=2, style=dotted];
m5_568 -> m5_569  [key=0, style=solid];
m5_568 -> m5_29  [key=2, style=dotted];
m5_569 -> m5_570  [key=0, style=solid];
m5_569 -> m5_27  [key=2, style=dotted];
m5_569 -> m5_28  [key=2, style=dotted];
m5_570 -> m5_571  [key=0, style=solid];
m5_570 -> m5_29  [key=2, style=dotted];
m5_572 -> m5_573  [key=0, style=solid];
m5_572 -> m5_27  [key=2, style=dotted];
m5_572 -> m5_28  [key=2, style=dotted];
m5_573 -> m5_574  [key=0, style=solid];
m5_573 -> m5_29  [key=2, style=dotted];
m5_574 -> m5_575  [key=0, style=solid];
m5_574 -> m5_27  [key=2, style=dotted];
m5_574 -> m5_28  [key=2, style=dotted];
m5_575 -> m5_576  [key=0, style=solid];
m5_575 -> m5_29  [key=2, style=dotted];
m5_576 -> m5_577  [key=0, style=solid];
m5_576 -> m5_27  [key=2, style=dotted];
m5_576 -> m5_28  [key=2, style=dotted];
m5_577 -> m5_578  [key=0, style=solid];
m5_577 -> m5_29  [key=2, style=dotted];
m5_578 -> m5_579  [key=0, style=solid];
m5_578 -> m5_27  [key=2, style=dotted];
m5_578 -> m5_28  [key=2, style=dotted];
m5_579 -> m5_580  [key=0, style=solid];
m5_579 -> m5_29  [key=2, style=dotted];
m5_580 -> m5_581  [key=0, style=solid];
m5_580 -> m5_29  [key=2, style=dotted];
m5_581 -> m5_582  [key=0, style=solid];
m5_581 -> m5_27  [key=2, style=dotted];
m5_581 -> m5_28  [key=2, style=dotted];
m5_582 -> m5_583  [key=0, style=solid];
m5_582 -> m5_29  [key=2, style=dotted];
m5_583 -> m5_584  [key=0, style=solid];
m5_583 -> m5_27  [key=2, style=dotted];
m5_583 -> m5_28  [key=2, style=dotted];
m5_584 -> m5_585  [key=0, style=solid];
m5_584 -> m5_29  [key=2, style=dotted];
m5_585 -> m5_586  [key=0, style=solid];
m5_585 -> m5_27  [key=2, style=dotted];
m5_585 -> m5_28  [key=2, style=dotted];
m5_586 -> m5_587  [key=0, style=solid];
m5_586 -> m5_29  [key=2, style=dotted];
m5_587 -> m5_544  [color=blue, key=0, style=bold];
m5_1381 -> m5_1382  [key=0, style=solid];
m5_1382 -> m5_1383  [key=0, style=solid];
m5_1383 -> m5_1384  [key=0, style=solid];
m5_1383 -> m5_25  [key=2, style=dotted];
m5_1383 -> m5_26  [key=2, style=dotted];
m5_1383 -> m5_1388  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1384 -> m5_1385  [key=0, style=solid];
m5_1384 -> m5_1386  [key=2, style=dotted];
m5_1384 -> m5_1387  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_1385 -> m5_1381  [color=blue, key=0, style=bold];
m5_1173 -> m5_1174  [key=0, style=solid];
m5_1174 -> m5_1175  [key=0, style=solid];
m5_1175 -> m5_1176  [key=0, style=solid];
m5_1175 -> m5_25  [key=2, style=dotted];
m5_1175 -> m5_26  [key=2, style=dotted];
m5_1175 -> m5_1177  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1175 -> m5_1178  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1175 -> m5_1179  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1175 -> m5_1180  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1175 -> m5_1181  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1175 -> m5_1182  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1175 -> m5_1183  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1176 -> m5_1177  [key=0, style=solid];
m5_1176 -> m5_27  [key=2, style=dotted];
m5_1176 -> m5_28  [key=2, style=dotted];
m5_1177 -> m5_1178  [key=0, style=solid];
m5_1177 -> m5_29  [key=2, style=dotted];
m5_1178 -> m5_1179  [key=0, style=solid];
m5_1178 -> m5_27  [key=2, style=dotted];
m5_1178 -> m5_28  [key=2, style=dotted];
m5_1179 -> m5_1180  [key=0, style=solid];
m5_1179 -> m5_29  [key=2, style=dotted];
m5_1180 -> m5_1181  [key=0, style=solid];
m5_1180 -> m5_963  [key=2, style=dotted];
m5_1181 -> m5_1182  [key=0, style=solid];
m5_1181 -> m5_29  [key=2, style=dotted];
m5_1182 -> m5_1183  [key=0, style=solid];
m5_1182 -> m5_29  [key=2, style=dotted];
m5_1183 -> m5_1184  [key=0, style=solid];
m5_1183 -> m5_29  [key=2, style=dotted];
m5_1184 -> m5_1173  [color=blue, key=0, style=bold];
m5_116 -> m5_117  [key=0, style=solid];
m5_117 -> m5_118  [key=0, style=solid];
m5_118 -> m5_119  [key=0, style=solid];
m5_118 -> m5_25  [key=2, style=dotted];
m5_118 -> m5_26  [key=2, style=dotted];
m5_118 -> m5_120  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_119 -> m5_120  [key=0, style=solid];
m5_119 -> m5_121  [key=0, style=solid];
m5_119 -> m5_122  [key=2, style=dotted];
m5_120 -> m5_119  [key=0, style=solid];
m5_120 -> m5_123  [key=2, style=dotted];
m5_121 -> m5_116  [color=blue, key=0, style=bold];
m5_1538 -> m5_1539  [key=0, style=solid];
m5_1539 -> m5_1540  [key=0, style=solid];
m5_1540 -> m5_1541  [key=0, style=solid];
m5_1540 -> m5_25  [key=2, style=dotted];
m5_1540 -> m5_26  [key=2, style=dotted];
m5_1540 -> m5_1542  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1540 -> m5_1545  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1541 -> m5_1542  [key=0, style=solid];
m5_1541 -> m5_27  [key=2, style=dotted];
m5_1541 -> m5_28  [key=2, style=dotted];
m5_1542 -> m5_1543  [key=0, style=solid];
m5_1542 -> m5_1386  [key=2, style=dotted];
m5_1542 -> m5_1544  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_1543 -> m5_1538  [color=blue, key=0, style=bold];
m5_1017 -> m5_1018  [key=0, style=solid];
m5_1018 -> m5_1019  [key=0, style=solid];
m5_1018 -> m5_25  [key=2, style=dotted];
m5_1018 -> m5_26  [key=2, style=dotted];
m5_1018 -> m5_1022  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1019 -> m5_1020  [key=0, style=solid];
m5_1019 -> m5_39  [key=2, style=dotted];
m5_1019 -> m5_1021  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_1020 -> m5_1017  [color=blue, key=0, style=bold];
m5_1679 -> m5_1680  [key=0, style=solid];
m5_1680 -> m5_1681  [key=0, style=solid];
m5_1680 -> m5_1700  [key=2, style=dotted];
m5_1680 -> m5_26  [key=2, style=dotted];
m5_1680 -> m5_1683  [color=darkseagreen4, key=1, label=toggleReaderError, style=dashed];
m5_1680 -> m5_1686  [color=darkseagreen4, key=1, label=toggleReaderError, style=dashed];
m5_1680 -> m5_1689  [color=darkseagreen4, key=1, label=toggleReaderError, style=dashed];
m5_1680 -> m5_1691  [color=darkseagreen4, key=1, label=toggleReaderError, style=dashed];
m5_1680 -> m5_1694  [color=darkseagreen4, key=1, label=toggleReaderError, style=dashed];
m5_1680 -> m5_1698  [color=darkseagreen4, key=1, label=toggleReaderError, style=dashed];
m5_1681 -> m5_1682  [key=0, style=solid];
m5_1681 -> m5_25  [key=2, style=dotted];
m5_1681 -> m5_1684  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m5_1681 -> m5_1702  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m5_1681 -> m5_1685  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m5_1681 -> m5_1705  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m5_1681 -> m5_1687  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m5_1681 -> m5_1688  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m5_1681 -> m5_1690  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m5_1681 -> m5_1708  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m5_1681 -> m5_1692  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m5_1681 -> m5_1693  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m5_1681 -> m5_1695  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m5_1681 -> m5_1711  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m5_1681 -> m5_1696  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m5_1681 -> m5_1714  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m5_1681 -> m5_1697  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m5_1681 -> m5_1717  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m5_1683 -> m5_1684  [key=0, style=solid];
m5_1686 -> m5_1687  [key=0, style=solid];
m5_1689 -> m5_1690  [key=0, style=solid];
m5_1691 -> m5_1692  [key=0, style=solid];
m5_1694 -> m5_1695  [key=0, style=solid];
m5_1698 -> m5_1699  [key=0, style=solid];
m5_1682 -> m5_1683  [key=0, style=solid];
m5_1682 -> m5_27  [key=2, style=dotted];
m5_1682 -> m5_28  [key=2, style=dotted];
m5_1684 -> m5_1685  [key=0, style=solid];
m5_1684 -> m5_39  [key=2, style=dotted];
m5_1684 -> m5_1701  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_1685 -> m5_1686  [key=0, style=solid];
m5_1685 -> m5_39  [key=2, style=dotted];
m5_1685 -> m5_1704  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_1687 -> m5_1688  [key=0, style=solid];
m5_1687 -> m5_27  [key=2, style=dotted];
m5_1687 -> m5_28  [key=2, style=dotted];
m5_1688 -> m5_1689  [key=0, style=solid];
m5_1688 -> m5_29  [key=2, style=dotted];
m5_1690 -> m5_1691  [key=0, style=solid];
m5_1690 -> m5_39  [key=2, style=dotted];
m5_1690 -> m5_1707  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_1692 -> m5_1693  [key=0, style=solid];
m5_1692 -> m5_27  [key=2, style=dotted];
m5_1692 -> m5_28  [key=2, style=dotted];
m5_1693 -> m5_1694  [key=0, style=solid];
m5_1693 -> m5_29  [key=2, style=dotted];
m5_1695 -> m5_1696  [key=0, style=solid];
m5_1695 -> m5_39  [key=2, style=dotted];
m5_1695 -> m5_1710  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_1696 -> m5_1697  [key=0, style=solid];
m5_1696 -> m5_39  [key=2, style=dotted];
m5_1696 -> m5_1713  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_1697 -> m5_1698  [key=0, style=solid];
m5_1697 -> m5_39  [key=2, style=dotted];
m5_1697 -> m5_1716  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_1699 -> m5_1679  [color=blue, key=0, style=bold];
m5_504 -> m5_505  [key=0, style=solid];
m5_505 -> m5_506  [key=0, style=solid];
m5_505 -> m5_25  [key=2, style=dotted];
m5_505 -> m5_26  [key=2, style=dotted];
m5_505 -> m5_509  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_506 -> m5_507  [key=0, style=solid];
m5_506 -> m5_39  [key=2, style=dotted];
m5_506 -> m5_508  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_507 -> m5_504  [color=blue, key=0, style=bold];
m5_929 -> m5_930  [key=0, style=solid];
m5_930 -> m5_931  [key=0, style=solid];
m5_930 -> m5_26  [key=2, style=dotted];
m5_931 -> m5_932  [key=0, style=solid];
m5_931 -> m5_25  [key=2, style=dotted];
m5_931 -> m5_933  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_931 -> m5_934  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_931 -> m5_935  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_931 -> m5_936  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_931 -> m5_937  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_931 -> m5_938  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_931 -> m5_939  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_931 -> m5_940  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_931 -> m5_941  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_931 -> m5_942  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_931 -> m5_943  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_931 -> m5_944  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_931 -> m5_945  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_931 -> m5_946  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_931 -> m5_947  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_931 -> m5_948  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_932 -> m5_933  [key=0, style=solid];
m5_932 -> m5_27  [key=2, style=dotted];
m5_932 -> m5_28  [key=2, style=dotted];
m5_933 -> m5_934  [key=0, style=solid];
m5_933 -> m5_29  [key=2, style=dotted];
m5_934 -> m5_935  [key=0, style=solid];
m5_934 -> m5_435  [key=2, style=dotted];
m5_935 -> m5_936  [key=0, style=solid];
m5_935 -> m5_29  [key=2, style=dotted];
m5_936 -> m5_937  [key=0, style=solid];
m5_936 -> m5_29  [key=2, style=dotted];
m5_937 -> m5_938  [key=0, style=solid];
m5_937 -> m5_29  [key=2, style=dotted];
m5_938 -> m5_939  [key=0, style=solid];
m5_938 -> m5_435  [key=2, style=dotted];
m5_939 -> m5_940  [key=0, style=solid];
m5_939 -> m5_29  [key=2, style=dotted];
m5_940 -> m5_941  [key=0, style=solid];
m5_940 -> m5_29  [key=2, style=dotted];
m5_941 -> m5_942  [key=0, style=solid];
m5_941 -> m5_29  [key=2, style=dotted];
m5_942 -> m5_943  [key=0, style=solid];
m5_942 -> m5_435  [key=2, style=dotted];
m5_943 -> m5_944  [key=0, style=solid];
m5_943 -> m5_29  [key=2, style=dotted];
m5_944 -> m5_945  [key=0, style=solid];
m5_944 -> m5_29  [key=2, style=dotted];
m5_945 -> m5_946  [key=0, style=solid];
m5_945 -> m5_29  [key=2, style=dotted];
m5_946 -> m5_947  [key=0, style=solid];
m5_946 -> m5_27  [key=2, style=dotted];
m5_946 -> m5_28  [key=2, style=dotted];
m5_947 -> m5_948  [key=0, style=solid];
m5_947 -> m5_29  [key=2, style=dotted];
m5_948 -> m5_949  [key=0, style=solid];
m5_948 -> m5_27  [key=2, style=dotted];
m5_948 -> m5_115  [key=2, style=dotted];
m5_949 -> m5_929  [color=blue, key=0, style=bold];
m5_1390 -> m5_1391  [key=0, style=solid];
m5_1391 -> m5_1392  [key=0, style=solid];
m5_1392 -> m5_1393  [key=0, style=solid];
m5_1392 -> m5_25  [key=2, style=dotted];
m5_1392 -> m5_100  [key=2, style=dotted];
m5_1392 -> m5_141  [key=2, style=dotted];
m5_1392 -> m5_142  [key=2, style=dotted];
m5_1392 -> m5_1394  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1392 -> m5_1395  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1392 -> m5_1396  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1392 -> m5_1397  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1392 -> m5_1398  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1392 -> m5_1399  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1392 -> m5_1400  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1392 -> m5_1401  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1392 -> m5_1402  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1392 -> m5_1403  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1392 -> m5_1404  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1392 -> m5_1405  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1392 -> m5_1406  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1392 -> m5_1407  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1392 -> m5_1408  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1392 -> m5_1409  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1392 -> m5_1410  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1392 -> m5_1411  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1393 -> m5_1394  [key=0, style=solid];
m5_1393 -> m5_27  [key=2, style=dotted];
m5_1393 -> m5_28  [key=2, style=dotted];
m5_1394 -> m5_1395  [key=0, style=solid];
m5_1394 -> m5_29  [key=2, style=dotted];
m5_1395 -> m5_1396  [key=0, style=solid];
m5_1395 -> m5_27  [key=2, style=dotted];
m5_1395 -> m5_28  [key=2, style=dotted];
m5_1396 -> m5_1397  [key=0, style=solid];
m5_1396 -> m5_29  [key=2, style=dotted];
m5_1397 -> m5_1398  [key=0, style=solid];
m5_1397 -> m5_27  [key=2, style=dotted];
m5_1397 -> m5_28  [key=2, style=dotted];
m5_1398 -> m5_1399  [key=0, style=solid];
m5_1398 -> m5_29  [key=2, style=dotted];
m5_1399 -> m5_1400  [key=0, style=solid];
m5_1399 -> m5_27  [key=2, style=dotted];
m5_1399 -> m5_28  [key=2, style=dotted];
m5_1400 -> m5_1401  [key=0, style=solid];
m5_1400 -> m5_29  [key=2, style=dotted];
m5_1401 -> m5_1402  [key=0, style=solid];
m5_1401 -> m5_27  [key=2, style=dotted];
m5_1401 -> m5_28  [key=2, style=dotted];
m5_1402 -> m5_1403  [key=0, style=solid];
m5_1402 -> m5_29  [key=2, style=dotted];
m5_1403 -> m5_1404  [key=0, style=solid];
m5_1403 -> m5_27  [key=2, style=dotted];
m5_1403 -> m5_28  [key=2, style=dotted];
m5_1404 -> m5_1405  [key=0, style=solid];
m5_1404 -> m5_29  [key=2, style=dotted];
m5_1405 -> m5_1406  [key=0, style=solid];
m5_1405 -> m5_27  [key=2, style=dotted];
m5_1405 -> m5_28  [key=2, style=dotted];
m5_1406 -> m5_1407  [key=0, style=solid];
m5_1406 -> m5_29  [key=2, style=dotted];
m5_1407 -> m5_1408  [key=0, style=solid];
m5_1407 -> m5_27  [key=2, style=dotted];
m5_1407 -> m5_28  [key=2, style=dotted];
m5_1408 -> m5_1409  [key=0, style=solid];
m5_1408 -> m5_29  [key=2, style=dotted];
m5_1409 -> m5_1410  [key=0, style=solid];
m5_1409 -> m5_27  [key=2, style=dotted];
m5_1409 -> m5_28  [key=2, style=dotted];
m5_1410 -> m5_1411  [key=0, style=solid];
m5_1410 -> m5_29  [key=2, style=dotted];
m5_1411 -> m5_1412  [key=0, style=solid];
m5_1411 -> m5_27  [key=2, style=dotted];
m5_1411 -> m5_115  [key=2, style=dotted];
m5_1412 -> m5_1390  [color=blue, key=0, style=bold];
m5_1700 -> m5_1737  [key=0, style=solid];
m5_1737 -> m5_1738  [key=0, style=solid];
m5_1738 -> m5_1700  [color=blue, key=0, style=bold];
m5_419 -> m5_420  [key=0, style=solid];
m5_420 -> m5_421  [key=0, style=solid];
m5_420 -> m5_426  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_421 -> m5_422  [key=0, style=solid];
m5_421 -> m5_25  [key=2, style=dotted];
m5_421 -> m5_26  [key=2, style=dotted];
m5_421 -> m5_430  [key=2, style=dotted];
m5_421 -> m5_423  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_421 -> m5_427  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_426 -> m5_427  [key=0, style=solid];
m5_426 -> m5_432  [color=darkseagreen4, key=1, label=total, style=dashed];
m5_422 -> m5_423  [key=0, style=solid];
m5_422 -> m5_27  [key=2, style=dotted];
m5_423 -> m5_424  [key=0, style=solid];
m5_423 -> m5_29  [key=2, style=dotted];
m5_427 -> m5_428  [key=0, style=solid];
m5_427 -> m5_39  [key=2, style=dotted];
m5_427 -> m5_431  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_424 -> m5_425  [key=0, style=solid];
m5_424 -> m5_426  [color=darkseagreen4, key=1, label=j, style=dashed];
m5_424 -> m5_428  [color=darkseagreen4, key=1, label=j, style=dashed];
m5_425 -> m5_426  [key=0, style=solid];
m5_425 -> m5_429  [key=0, style=solid];
m5_428 -> m5_425  [key=0, style=solid];
m5_428 -> m5_428  [color=darkseagreen4, key=1, label=j, style=dashed];
m5_429 -> m5_419  [color=blue, key=0, style=bold];
m5_124 -> m5_125  [key=0, style=solid];
m5_125 -> m5_126  [key=0, style=solid];
m5_126 -> m5_127  [key=0, style=solid];
m5_126 -> m5_25  [key=2, style=dotted];
m5_126 -> m5_100  [key=2, style=dotted];
m5_126 -> m5_141  [key=2, style=dotted];
m5_126 -> m5_142  [key=2, style=dotted];
m5_126 -> m5_128  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_126 -> m5_129  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_126 -> m5_130  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_126 -> m5_131  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_126 -> m5_132  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_126 -> m5_133  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_126 -> m5_134  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_126 -> m5_135  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_126 -> m5_136  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_126 -> m5_137  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_126 -> m5_138  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_126 -> m5_139  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_127 -> m5_128  [key=0, style=solid];
m5_127 -> m5_122  [key=2, style=dotted];
m5_127 -> m5_28  [key=2, style=dotted];
m5_128 -> m5_129  [key=0, style=solid];
m5_128 -> m5_122  [key=2, style=dotted];
m5_128 -> m5_28  [key=2, style=dotted];
m5_129 -> m5_130  [key=0, style=solid];
m5_129 -> m5_122  [key=2, style=dotted];
m5_129 -> m5_28  [key=2, style=dotted];
m5_130 -> m5_131  [key=0, style=solid];
m5_130 -> m5_29  [key=2, style=dotted];
m5_131 -> m5_132  [key=0, style=solid];
m5_131 -> m5_29  [key=2, style=dotted];
m5_132 -> m5_133  [key=0, style=solid];
m5_132 -> m5_122  [key=2, style=dotted];
m5_132 -> m5_28  [key=2, style=dotted];
m5_133 -> m5_134  [key=0, style=solid];
m5_133 -> m5_29  [key=2, style=dotted];
m5_134 -> m5_135  [key=0, style=solid];
m5_134 -> m5_122  [key=2, style=dotted];
m5_134 -> m5_28  [key=2, style=dotted];
m5_135 -> m5_136  [key=0, style=solid];
m5_135 -> m5_29  [key=2, style=dotted];
m5_136 -> m5_137  [key=0, style=solid];
m5_136 -> m5_122  [key=2, style=dotted];
m5_136 -> m5_28  [key=2, style=dotted];
m5_137 -> m5_138  [key=0, style=solid];
m5_137 -> m5_29  [key=2, style=dotted];
m5_138 -> m5_139  [key=0, style=solid];
m5_138 -> m5_122  [key=2, style=dotted];
m5_138 -> m5_28  [key=2, style=dotted];
m5_139 -> m5_140  [key=0, style=solid];
m5_139 -> m5_29  [key=2, style=dotted];
m5_140 -> m5_124  [color=blue, key=0, style=bold];
m5_536 -> m5_537  [key=0, style=solid];
m5_537 -> m5_538  [key=0, style=solid];
m5_537 -> m5_25  [key=2, style=dotted];
m5_537 -> m5_26  [key=2, style=dotted];
m5_537 -> m5_539  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_537 -> m5_542  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_538 -> m5_539  [key=0, style=solid];
m5_538 -> m5_122  [key=2, style=dotted];
m5_538 -> m5_28  [key=2, style=dotted];
m5_539 -> m5_540  [key=0, style=solid];
m5_539 -> m5_39  [key=2, style=dotted];
m5_539 -> m5_541  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_540 -> m5_536  [color=blue, key=0, style=bold];
m5_774 -> m5_775  [key=0, style=solid];
m5_775 -> m5_776  [key=0, style=solid];
m5_776 -> m5_777  [key=0, style=solid];
m5_776 -> m5_350  [key=2, style=dotted];
m5_777 -> m5_778  [key=0, style=solid];
m5_777 -> m5_25  [key=2, style=dotted];
m5_777 -> m5_26  [key=2, style=dotted];
m5_777 -> m5_779  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_777 -> m5_780  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_777 -> m5_781  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_777 -> m5_782  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_777 -> m5_783  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_777 -> m5_784  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_777 -> m5_785  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_777 -> m5_786  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_777 -> m5_787  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_778 -> m5_779  [key=0, style=solid];
m5_778 -> m5_27  [key=2, style=dotted];
m5_779 -> m5_780  [key=0, style=solid];
m5_779 -> m5_29  [key=2, style=dotted];
m5_780 -> m5_781  [key=0, style=solid];
m5_780 -> m5_27  [key=2, style=dotted];
m5_781 -> m5_782  [key=0, style=solid];
m5_781 -> m5_29  [key=2, style=dotted];
m5_782 -> m5_783  [key=0, style=solid];
m5_782 -> m5_29  [key=2, style=dotted];
m5_783 -> m5_784  [key=0, style=solid];
m5_783 -> m5_75  [key=2, style=dotted];
m5_783 -> m5_29  [key=2, style=dotted];
m5_784 -> m5_785  [key=0, style=solid];
m5_784 -> m5_27  [key=2, style=dotted];
m5_784 -> m5_28  [key=2, style=dotted];
m5_785 -> m5_786  [key=0, style=solid];
m5_785 -> m5_29  [key=2, style=dotted];
m5_786 -> m5_787  [key=0, style=solid];
m5_786 -> m5_27  [key=2, style=dotted];
m5_786 -> m5_115  [key=2, style=dotted];
m5_787 -> m5_788  [key=0, style=solid];
m5_787 -> m5_29  [key=2, style=dotted];
m5_788 -> m5_774  [color=blue, key=0, style=bold];
m5_665 -> m5_666  [key=0, style=solid];
m5_666 -> m5_667  [key=0, style=solid];
m5_667 -> m5_668  [key=0, style=solid];
m5_667 -> m5_25  [key=2, style=dotted];
m5_667 -> m5_26  [key=2, style=dotted];
m5_668 -> m5_669  [key=0, style=solid];
m5_668 -> m5_435  [key=2, style=dotted];
m5_668 -> m5_29  [key=2, style=dotted];
m5_669 -> m5_670  [key=0, style=solid];
m5_669 -> m5_25  [key=2, style=dotted];
m5_669 -> m5_26  [key=2, style=dotted];
m5_670 -> m5_671  [key=0, style=solid];
m5_670 -> m5_435  [key=2, style=dotted];
m5_670 -> m5_29  [key=2, style=dotted];
m5_671 -> m5_672  [key=0, style=solid];
m5_671 -> m5_25  [key=2, style=dotted];
m5_671 -> m5_26  [key=2, style=dotted];
m5_672 -> m5_673  [key=0, style=solid];
m5_672 -> m5_435  [key=2, style=dotted];
m5_672 -> m5_29  [key=2, style=dotted];
m5_673 -> m5_674  [key=0, style=solid];
m5_673 -> m5_25  [key=2, style=dotted];
m5_673 -> m5_26  [key=2, style=dotted];
m5_674 -> m5_675  [key=0, style=solid];
m5_674 -> m5_435  [key=2, style=dotted];
m5_674 -> m5_29  [key=2, style=dotted];
m5_675 -> m5_676  [key=0, style=solid];
m5_675 -> m5_25  [key=2, style=dotted];
m5_675 -> m5_26  [key=2, style=dotted];
m5_675 -> m5_690  [key=2, style=dotted];
m5_676 -> m5_677  [key=0, style=solid];
m5_676 -> m5_435  [key=2, style=dotted];
m5_676 -> m5_29  [key=2, style=dotted];
m5_677 -> m5_678  [key=0, style=solid];
m5_677 -> m5_25  [key=2, style=dotted];
m5_677 -> m5_26  [key=2, style=dotted];
m5_677 -> m5_690  [key=2, style=dotted];
m5_678 -> m5_679  [key=0, style=solid];
m5_678 -> m5_435  [key=2, style=dotted];
m5_678 -> m5_29  [key=2, style=dotted];
m5_679 -> m5_680  [key=0, style=solid];
m5_679 -> m5_25  [key=2, style=dotted];
m5_679 -> m5_26  [key=2, style=dotted];
m5_679 -> m5_691  [key=2, style=dotted];
m5_679 -> m5_693  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_680 -> m5_681  [key=0, style=solid];
m5_680 -> m5_39  [key=2, style=dotted];
m5_680 -> m5_692  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_681 -> m5_682  [key=0, style=solid];
m5_681 -> m5_25  [key=2, style=dotted];
m5_681 -> m5_26  [key=2, style=dotted];
m5_681 -> m5_696  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_682 -> m5_683  [key=0, style=solid];
m5_682 -> m5_39  [key=2, style=dotted];
m5_682 -> m5_695  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_683 -> m5_684  [key=0, style=solid];
m5_683 -> m5_25  [key=2, style=dotted];
m5_683 -> m5_26  [key=2, style=dotted];
m5_683 -> m5_699  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_684 -> m5_685  [key=0, style=solid];
m5_684 -> m5_39  [key=2, style=dotted];
m5_684 -> m5_698  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_685 -> m5_686  [key=0, style=solid];
m5_685 -> m5_25  [key=2, style=dotted];
m5_685 -> m5_26  [key=2, style=dotted];
m5_686 -> m5_687  [key=0, style=solid];
m5_686 -> m5_435  [key=2, style=dotted];
m5_686 -> m5_29  [key=2, style=dotted];
m5_687 -> m5_688  [key=0, style=solid];
m5_687 -> m5_25  [key=2, style=dotted];
m5_687 -> m5_26  [key=2, style=dotted];
m5_687 -> m5_702  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_688 -> m5_689  [key=0, style=solid];
m5_688 -> m5_39  [key=2, style=dotted];
m5_688 -> m5_701  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_689 -> m5_665  [color=blue, key=0, style=bold];
m5_1482 -> m5_1483  [key=0, style=solid];
m5_1483 -> m5_1484  [key=0, style=solid];
m5_1483 -> m5_25  [key=2, style=dotted];
m5_1483 -> m5_26  [key=2, style=dotted];
m5_1483 -> m5_1485  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1483 -> m5_1486  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1483 -> m5_1489  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1484 -> m5_1485  [key=0, style=solid];
m5_1484 -> m5_122  [key=2, style=dotted];
m5_1484 -> m5_28  [key=2, style=dotted];
m5_1485 -> m5_1486  [key=0, style=solid];
m5_1485 -> m5_122  [key=2, style=dotted];
m5_1485 -> m5_28  [key=2, style=dotted];
m5_1486 -> m5_1487  [key=0, style=solid];
m5_1486 -> m5_39  [key=2, style=dotted];
m5_1486 -> m5_1488  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_1487 -> m5_1482  [color=blue, key=0, style=bold];
m5_63 -> m5_64  [key=0, style=solid];
m5_64 -> m5_65  [key=0, style=solid];
m5_65 -> m5_66  [key=0, style=solid];
m5_65 -> m5_25  [key=2, style=dotted];
m5_65 -> m5_26  [key=2, style=dotted];
m5_65 -> m5_67  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_65 -> m5_68  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_65 -> m5_69  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_65 -> m5_70  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_66 -> m5_67  [key=0, style=solid];
m5_66 -> m5_27  [key=2, style=dotted];
m5_66 -> m5_28  [key=2, style=dotted];
m5_67 -> m5_68  [key=0, style=solid];
m5_67 -> m5_27  [key=2, style=dotted];
m5_67 -> m5_28  [key=2, style=dotted];
m5_68 -> m5_69  [key=0, style=solid];
m5_68 -> m5_27  [key=2, style=dotted];
m5_68 -> m5_28  [key=2, style=dotted];
m5_69 -> m5_70  [key=0, style=solid];
m5_69 -> m5_29  [key=2, style=dotted];
m5_70 -> m5_71  [key=0, style=solid];
m5_70 -> m5_75  [key=2, style=dotted];
m5_70 -> m5_72  [color=darkseagreen4, key=1, label=s, style=dashed];
m5_71 -> m5_72  [key=0, style=solid];
m5_71 -> m5_29  [key=2, style=dotted];
m5_72 -> m5_73  [key=0, style=solid];
m5_72 -> m5_76  [key=2, style=dotted];
m5_73 -> m5_74  [key=0, style=solid];
m5_73 -> m5_29  [key=2, style=dotted];
m5_74 -> m5_63  [color=blue, key=0, style=bold];
m5_908 -> m5_909  [key=0, style=solid];
m5_909 -> m5_910  [key=0, style=solid];
m5_909 -> m5_26  [key=2, style=dotted];
m5_910 -> m5_911  [key=0, style=solid];
m5_910 -> m5_25  [key=2, style=dotted];
m5_910 -> m5_912  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_910 -> m5_913  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_910 -> m5_914  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_910 -> m5_915  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_910 -> m5_916  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_910 -> m5_917  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_910 -> m5_918  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_910 -> m5_919  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_910 -> m5_920  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_910 -> m5_921  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_910 -> m5_922  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_910 -> m5_923  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_910 -> m5_924  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_910 -> m5_925  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_910 -> m5_926  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_910 -> m5_927  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_911 -> m5_912  [key=0, style=solid];
m5_911 -> m5_27  [key=2, style=dotted];
m5_911 -> m5_28  [key=2, style=dotted];
m5_912 -> m5_913  [key=0, style=solid];
m5_912 -> m5_29  [key=2, style=dotted];
m5_913 -> m5_914  [key=0, style=solid];
m5_913 -> m5_27  [key=2, style=dotted];
m5_914 -> m5_915  [key=0, style=solid];
m5_914 -> m5_29  [key=2, style=dotted];
m5_915 -> m5_916  [key=0, style=solid];
m5_915 -> m5_29  [key=2, style=dotted];
m5_916 -> m5_917  [key=0, style=solid];
m5_916 -> m5_29  [key=2, style=dotted];
m5_917 -> m5_918  [key=0, style=solid];
m5_917 -> m5_27  [key=2, style=dotted];
m5_918 -> m5_919  [key=0, style=solid];
m5_918 -> m5_29  [key=2, style=dotted];
m5_919 -> m5_920  [key=0, style=solid];
m5_919 -> m5_29  [key=2, style=dotted];
m5_920 -> m5_921  [key=0, style=solid];
m5_920 -> m5_29  [key=2, style=dotted];
m5_921 -> m5_922  [key=0, style=solid];
m5_921 -> m5_27  [key=2, style=dotted];
m5_922 -> m5_923  [key=0, style=solid];
m5_922 -> m5_29  [key=2, style=dotted];
m5_923 -> m5_924  [key=0, style=solid];
m5_923 -> m5_29  [key=2, style=dotted];
m5_924 -> m5_925  [key=0, style=solid];
m5_924 -> m5_29  [key=2, style=dotted];
m5_925 -> m5_926  [key=0, style=solid];
m5_925 -> m5_27  [key=2, style=dotted];
m5_925 -> m5_28  [key=2, style=dotted];
m5_926 -> m5_927  [key=0, style=solid];
m5_926 -> m5_29  [key=2, style=dotted];
m5_927 -> m5_928  [key=0, style=solid];
m5_927 -> m5_27  [key=2, style=dotted];
m5_927 -> m5_115  [key=2, style=dotted];
m5_928 -> m5_908  [color=blue, key=0, style=bold];
m5_958 -> m5_959  [key=0, style=solid];
m5_959 -> m5_960  [key=0, style=solid];
m5_959 -> m5_25  [key=2, style=dotted];
m5_959 -> m5_26  [key=2, style=dotted];
m5_959 -> m5_961  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_960 -> m5_961  [key=0, style=solid];
m5_960 -> m5_963  [key=2, style=dotted];
m5_960 -> m5_535  [key=2, style=dotted];
m5_961 -> m5_962  [key=0, style=solid];
m5_961 -> m5_29  [key=2, style=dotted];
m5_962 -> m5_958  [color=blue, key=0, style=bold];
m5_481 -> m5_482  [key=0, style=solid];
m5_482 -> m5_483  [key=0, style=solid];
m5_483 -> m5_484  [key=0, style=solid];
m5_483 -> m5_25  [key=2, style=dotted];
m5_483 -> m5_26  [key=2, style=dotted];
m5_483 -> m5_486  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_483 -> m5_488  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_483 -> m5_489  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_483 -> m5_490  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_484 -> m5_485  [key=0, style=solid];
m5_484 -> m5_487  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_486 -> m5_487  [key=0, style=solid];
m5_486 -> m5_27  [key=2, style=dotted];
m5_486 -> m5_28  [key=2, style=dotted];
m5_488 -> m5_489  [key=0, style=solid];
m5_488 -> m5_27  [key=2, style=dotted];
m5_488 -> m5_28  [key=2, style=dotted];
m5_489 -> m5_490  [key=0, style=solid];
m5_489 -> m5_29  [key=2, style=dotted];
m5_490 -> m5_491  [key=0, style=solid];
m5_490 -> m5_29  [key=2, style=dotted];
m5_485 -> m5_486  [key=0, style=solid];
m5_485 -> m5_488  [key=0, style=solid];
m5_487 -> m5_485  [key=0, style=solid];
m5_487 -> m5_487  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_491 -> m5_481  [color=blue, key=0, style=bold];
m5_803 -> m5_804  [key=0, style=solid];
m5_804 -> m5_805  [key=0, style=solid];
m5_805 -> m5_806  [key=0, style=solid];
m5_805 -> m5_25  [key=2, style=dotted];
m5_805 -> m5_26  [key=2, style=dotted];
m5_805 -> m5_807  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_805 -> m5_808  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_805 -> m5_809  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_805 -> m5_810  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_805 -> m5_811  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_805 -> m5_812  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_805 -> m5_813  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_805 -> m5_814  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_805 -> m5_815  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_805 -> m5_816  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_805 -> m5_817  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_805 -> m5_818  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_805 -> m5_819  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_805 -> m5_820  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_805 -> m5_821  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_805 -> m5_822  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_805 -> m5_823  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_805 -> m5_824  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_805 -> m5_825  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_805 -> m5_826  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_805 -> m5_827  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_805 -> m5_828  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_805 -> m5_829  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_805 -> m5_830  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_805 -> m5_831  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_805 -> m5_832  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_805 -> m5_833  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_805 -> m5_834  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_805 -> m5_835  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_805 -> m5_836  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_805 -> m5_837  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_805 -> m5_838  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_805 -> m5_839  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_805 -> m5_840  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_805 -> m5_841  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_805 -> m5_842  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_805 -> m5_843  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_805 -> m5_844  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_805 -> m5_845  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_805 -> m5_846  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_805 -> m5_847  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_805 -> m5_848  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_805 -> m5_849  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_805 -> m5_850  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_805 -> m5_851  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_805 -> m5_852  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_805 -> m5_853  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_805 -> m5_854  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_805 -> m5_855  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_805 -> m5_856  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_805 -> m5_857  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_805 -> m5_858  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_805 -> m5_859  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_805 -> m5_860  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_805 -> m5_861  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_805 -> m5_862  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_805 -> m5_863  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_806 -> m5_807  [key=0, style=solid];
m5_806 -> m5_122  [key=2, style=dotted];
m5_807 -> m5_808  [key=0, style=solid];
m5_807 -> m5_29  [key=2, style=dotted];
m5_808 -> m5_809  [key=0, style=solid];
m5_808 -> m5_122  [key=2, style=dotted];
m5_809 -> m5_810  [key=0, style=solid];
m5_809 -> m5_29  [key=2, style=dotted];
m5_810 -> m5_811  [key=0, style=solid];
m5_810 -> m5_29  [key=2, style=dotted];
m5_811 -> m5_812  [key=0, style=solid];
m5_811 -> m5_122  [key=2, style=dotted];
m5_812 -> m5_813  [key=0, style=solid];
m5_812 -> m5_29  [key=2, style=dotted];
m5_813 -> m5_814  [key=0, style=solid];
m5_813 -> m5_29  [key=2, style=dotted];
m5_814 -> m5_815  [key=0, style=solid];
m5_814 -> m5_122  [key=2, style=dotted];
m5_815 -> m5_816  [key=0, style=solid];
m5_815 -> m5_29  [key=2, style=dotted];
m5_816 -> m5_817  [key=0, style=solid];
m5_816 -> m5_29  [key=2, style=dotted];
m5_817 -> m5_818  [key=0, style=solid];
m5_817 -> m5_122  [key=2, style=dotted];
m5_818 -> m5_819  [key=0, style=solid];
m5_818 -> m5_29  [key=2, style=dotted];
m5_819 -> m5_820  [key=0, style=solid];
m5_819 -> m5_29  [key=2, style=dotted];
m5_820 -> m5_821  [key=0, style=solid];
m5_820 -> m5_122  [key=2, style=dotted];
m5_821 -> m5_822  [key=0, style=solid];
m5_821 -> m5_29  [key=2, style=dotted];
m5_822 -> m5_823  [key=0, style=solid];
m5_822 -> m5_29  [key=2, style=dotted];
m5_823 -> m5_824  [key=0, style=solid];
m5_823 -> m5_122  [key=2, style=dotted];
m5_824 -> m5_825  [key=0, style=solid];
m5_824 -> m5_29  [key=2, style=dotted];
m5_825 -> m5_826  [key=0, style=solid];
m5_825 -> m5_29  [key=2, style=dotted];
m5_826 -> m5_827  [key=0, style=solid];
m5_826 -> m5_122  [key=2, style=dotted];
m5_827 -> m5_828  [key=0, style=solid];
m5_827 -> m5_29  [key=2, style=dotted];
m5_828 -> m5_829  [key=0, style=solid];
m5_828 -> m5_29  [key=2, style=dotted];
m5_829 -> m5_830  [key=0, style=solid];
m5_829 -> m5_122  [key=2, style=dotted];
m5_830 -> m5_831  [key=0, style=solid];
m5_830 -> m5_29  [key=2, style=dotted];
m5_831 -> m5_832  [key=0, style=solid];
m5_831 -> m5_29  [key=2, style=dotted];
m5_832 -> m5_833  [key=0, style=solid];
m5_832 -> m5_122  [key=2, style=dotted];
m5_833 -> m5_834  [key=0, style=solid];
m5_833 -> m5_29  [key=2, style=dotted];
m5_834 -> m5_835  [key=0, style=solid];
m5_834 -> m5_29  [key=2, style=dotted];
m5_835 -> m5_836  [key=0, style=solid];
m5_835 -> m5_122  [key=2, style=dotted];
m5_836 -> m5_837  [key=0, style=solid];
m5_836 -> m5_29  [key=2, style=dotted];
m5_837 -> m5_838  [key=0, style=solid];
m5_837 -> m5_29  [key=2, style=dotted];
m5_838 -> m5_839  [key=0, style=solid];
m5_838 -> m5_122  [key=2, style=dotted];
m5_839 -> m5_840  [key=0, style=solid];
m5_839 -> m5_29  [key=2, style=dotted];
m5_840 -> m5_841  [key=0, style=solid];
m5_840 -> m5_29  [key=2, style=dotted];
m5_841 -> m5_842  [key=0, style=solid];
m5_841 -> m5_122  [key=2, style=dotted];
m5_842 -> m5_843  [key=0, style=solid];
m5_842 -> m5_29  [key=2, style=dotted];
m5_843 -> m5_844  [key=0, style=solid];
m5_843 -> m5_29  [key=2, style=dotted];
m5_844 -> m5_845  [key=0, style=solid];
m5_844 -> m5_122  [key=2, style=dotted];
m5_845 -> m5_846  [key=0, style=solid];
m5_845 -> m5_29  [key=2, style=dotted];
m5_846 -> m5_847  [key=0, style=solid];
m5_846 -> m5_29  [key=2, style=dotted];
m5_847 -> m5_848  [key=0, style=solid];
m5_847 -> m5_122  [key=2, style=dotted];
m5_848 -> m5_849  [key=0, style=solid];
m5_848 -> m5_29  [key=2, style=dotted];
m5_849 -> m5_850  [key=0, style=solid];
m5_849 -> m5_29  [key=2, style=dotted];
m5_850 -> m5_851  [key=0, style=solid];
m5_850 -> m5_122  [key=2, style=dotted];
m5_851 -> m5_852  [key=0, style=solid];
m5_851 -> m5_29  [key=2, style=dotted];
m5_852 -> m5_853  [key=0, style=solid];
m5_852 -> m5_29  [key=2, style=dotted];
m5_853 -> m5_854  [key=0, style=solid];
m5_853 -> m5_122  [key=2, style=dotted];
m5_854 -> m5_855  [key=0, style=solid];
m5_854 -> m5_29  [key=2, style=dotted];
m5_855 -> m5_856  [key=0, style=solid];
m5_855 -> m5_29  [key=2, style=dotted];
m5_856 -> m5_857  [key=0, style=solid];
m5_856 -> m5_122  [key=2, style=dotted];
m5_857 -> m5_858  [key=0, style=solid];
m5_857 -> m5_29  [key=2, style=dotted];
m5_858 -> m5_859  [key=0, style=solid];
m5_858 -> m5_29  [key=2, style=dotted];
m5_859 -> m5_860  [key=0, style=solid];
m5_859 -> m5_122  [key=2, style=dotted];
m5_860 -> m5_861  [key=0, style=solid];
m5_860 -> m5_29  [key=2, style=dotted];
m5_861 -> m5_862  [key=0, style=solid];
m5_861 -> m5_29  [key=2, style=dotted];
m5_862 -> m5_863  [key=0, style=solid];
m5_862 -> m5_122  [key=2, style=dotted];
m5_863 -> m5_864  [key=0, style=solid];
m5_863 -> m5_29  [key=2, style=dotted];
m5_864 -> m5_803  [color=blue, key=0, style=bold];
m5_1157 -> m5_1158  [key=0, style=solid];
m5_1158 -> m5_1159  [key=0, style=solid];
m5_1159 -> m5_1160  [key=0, style=solid];
m5_1159 -> m5_25  [key=2, style=dotted];
m5_1159 -> m5_26  [key=2, style=dotted];
m5_1159 -> m5_1161  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1159 -> m5_1162  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1159 -> m5_1163  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1159 -> m5_1164  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1159 -> m5_1165  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1159 -> m5_1166  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1159 -> m5_1167  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1159 -> m5_1168  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1159 -> m5_1170  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1159 -> m5_1171  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1160 -> m5_1161  [key=0, style=solid];
m5_1160 -> m5_1156  [key=2, style=dotted];
m5_1161 -> m5_1162  [key=0, style=solid];
m5_1161 -> m5_27  [key=2, style=dotted];
m5_1161 -> m5_28  [key=2, style=dotted];
m5_1162 -> m5_1163  [key=0, style=solid];
m5_1162 -> m5_29  [key=2, style=dotted];
m5_1163 -> m5_1164  [key=0, style=solid];
m5_1163 -> m5_27  [key=2, style=dotted];
m5_1163 -> m5_28  [key=2, style=dotted];
m5_1164 -> m5_1165  [key=0, style=solid];
m5_1164 -> m5_29  [key=2, style=dotted];
m5_1165 -> m5_1166  [key=0, style=solid];
m5_1165 -> m5_981  [key=2, style=dotted];
m5_1166 -> m5_1167  [key=0, style=solid];
m5_1166 -> m5_29  [key=2, style=dotted];
m5_1167 -> m5_1168  [key=0, style=solid];
m5_1167 -> m5_29  [key=2, style=dotted];
m5_1168 -> m5_1169  [key=0, style=solid];
m5_1170 -> m5_1171  [key=0, style=solid];
m5_1170 -> m5_27  [key=2, style=dotted];
m5_1170 -> m5_28  [key=2, style=dotted];
m5_1171 -> m5_1172  [key=0, style=solid];
m5_1171 -> m5_29  [key=2, style=dotted];
m5_1169 -> m5_1170  [key=0, style=solid];
m5_1169 -> m5_1139  [key=2, style=dotted];
m5_1169 -> m5_29  [key=2, style=dotted];
m5_1169 -> m5_1169  [color=darkseagreen4, key=1, label=dt, style=dashed];
m5_1172 -> m5_1157  [color=blue, key=0, style=bold];
m5_1319 -> m5_1320  [key=0, style=solid];
m5_1320 -> m5_1321  [key=0, style=solid];
m5_1321 -> m5_1322  [key=0, style=solid];
m5_1321 -> m5_25  [key=2, style=dotted];
m5_1321 -> m5_26  [key=2, style=dotted];
m5_1321 -> m5_1323  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1321 -> m5_1324  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1322 -> m5_1323  [key=0, style=solid];
m5_1322 -> m5_27  [key=2, style=dotted];
m5_1322 -> m5_28  [key=2, style=dotted];
m5_1323 -> m5_1324  [key=0, style=solid];
m5_1323 -> m5_27  [key=2, style=dotted];
m5_1323 -> m5_28  [key=2, style=dotted];
m5_1324 -> m5_1325  [key=0, style=solid];
m5_1324 -> m5_27  [key=2, style=dotted];
m5_1324 -> m5_115  [key=2, style=dotted];
m5_1325 -> m5_1319  [color=blue, key=0, style=bold];
m5_497 -> m5_498  [key=0, style=solid];
m5_498 -> m5_499  [key=0, style=solid];
m5_498 -> m5_25  [key=2, style=dotted];
m5_498 -> m5_26  [key=2, style=dotted];
m5_498 -> m5_502  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_499 -> m5_500  [key=0, style=solid];
m5_499 -> m5_39  [key=2, style=dotted];
m5_499 -> m5_501  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_500 -> m5_497  [color=blue, key=0, style=bold];
m5_31 -> m5_32  [key=0, style=solid];
m5_32 -> m5_33  [key=0, style=solid];
m5_33 -> m5_34  [key=0, style=solid];
m5_33 -> m5_25  [key=2, style=dotted];
m5_33 -> m5_26  [key=2, style=dotted];
m5_33 -> m5_35  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_33 -> m5_36  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_33 -> m5_37  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_33 -> m5_41  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_34 -> m5_35  [key=0, style=solid];
m5_35 -> m5_36  [key=0, style=solid];
m5_35 -> m5_27  [key=2, style=dotted];
m5_35 -> m5_28  [key=2, style=dotted];
m5_36 -> m5_37  [key=0, style=solid];
m5_36 -> m5_29  [key=2, style=dotted];
m5_37 -> m5_38  [key=0, style=solid];
m5_37 -> m5_39  [key=2, style=dotted];
m5_37 -> m5_40  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_38 -> m5_31  [color=blue, key=0, style=bold];
m5_1746 -> m5_1747  [key=0, style=solid];
m5_1746 -> m5_1749  [color=darkseagreen4, key=1, label=int, style=dashed];
m5_1747 -> m5_1748  [key=0, style=solid];
m5_1749 -> m5_1750  [key=0, style=solid];
m5_1748 -> m5_1749  [key=0, style=solid];
m5_1750 -> m5_1746  [color=blue, key=0, style=bold];
m5_378 -> m5_379  [key=0, style=solid];
m5_379 -> m5_380  [key=0, style=solid];
m5_380 -> m5_381  [key=0, style=solid];
m5_380 -> m5_25  [key=2, style=dotted];
m5_380 -> m5_100  [key=2, style=dotted];
m5_380 -> m5_141  [key=2, style=dotted];
m5_380 -> m5_142  [key=2, style=dotted];
m5_380 -> m5_382  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_380 -> m5_383  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_380 -> m5_384  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_380 -> m5_385  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_380 -> m5_386  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_380 -> m5_387  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_380 -> m5_388  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_380 -> m5_389  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_380 -> m5_390  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_380 -> m5_391  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_380 -> m5_392  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_380 -> m5_393  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_380 -> m5_394  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_380 -> m5_395  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_380 -> m5_396  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_380 -> m5_397  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_380 -> m5_398  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_380 -> m5_399  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_380 -> m5_400  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_380 -> m5_401  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_380 -> m5_402  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_380 -> m5_403  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_380 -> m5_404  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_380 -> m5_405  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_380 -> m5_406  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_380 -> m5_407  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_381 -> m5_382  [key=0, style=solid];
m5_381 -> m5_27  [key=2, style=dotted];
m5_381 -> m5_28  [key=2, style=dotted];
m5_382 -> m5_383  [key=0, style=solid];
m5_382 -> m5_29  [key=2, style=dotted];
m5_383 -> m5_384  [key=0, style=solid];
m5_383 -> m5_27  [key=2, style=dotted];
m5_383 -> m5_28  [key=2, style=dotted];
m5_384 -> m5_385  [key=0, style=solid];
m5_384 -> m5_29  [key=2, style=dotted];
m5_385 -> m5_386  [key=0, style=solid];
m5_385 -> m5_27  [key=2, style=dotted];
m5_385 -> m5_28  [key=2, style=dotted];
m5_386 -> m5_387  [key=0, style=solid];
m5_386 -> m5_29  [key=2, style=dotted];
m5_387 -> m5_388  [key=0, style=solid];
m5_387 -> m5_27  [key=2, style=dotted];
m5_387 -> m5_28  [key=2, style=dotted];
m5_388 -> m5_389  [key=0, style=solid];
m5_388 -> m5_29  [key=2, style=dotted];
m5_389 -> m5_390  [key=0, style=solid];
m5_389 -> m5_27  [key=2, style=dotted];
m5_389 -> m5_28  [key=2, style=dotted];
m5_390 -> m5_391  [key=0, style=solid];
m5_390 -> m5_29  [key=2, style=dotted];
m5_391 -> m5_392  [key=0, style=solid];
m5_391 -> m5_27  [key=2, style=dotted];
m5_391 -> m5_28  [key=2, style=dotted];
m5_392 -> m5_393  [key=0, style=solid];
m5_392 -> m5_29  [key=2, style=dotted];
m5_393 -> m5_394  [key=0, style=solid];
m5_393 -> m5_27  [key=2, style=dotted];
m5_393 -> m5_28  [key=2, style=dotted];
m5_394 -> m5_395  [key=0, style=solid];
m5_394 -> m5_29  [key=2, style=dotted];
m5_395 -> m5_396  [key=0, style=solid];
m5_395 -> m5_27  [key=2, style=dotted];
m5_395 -> m5_28  [key=2, style=dotted];
m5_396 -> m5_397  [key=0, style=solid];
m5_396 -> m5_29  [key=2, style=dotted];
m5_397 -> m5_398  [key=0, style=solid];
m5_397 -> m5_27  [key=2, style=dotted];
m5_397 -> m5_28  [key=2, style=dotted];
m5_398 -> m5_399  [key=0, style=solid];
m5_398 -> m5_29  [key=2, style=dotted];
m5_399 -> m5_400  [key=0, style=solid];
m5_399 -> m5_27  [key=2, style=dotted];
m5_399 -> m5_28  [key=2, style=dotted];
m5_400 -> m5_401  [key=0, style=solid];
m5_400 -> m5_29  [key=2, style=dotted];
m5_401 -> m5_402  [key=0, style=solid];
m5_401 -> m5_27  [key=2, style=dotted];
m5_401 -> m5_28  [key=2, style=dotted];
m5_402 -> m5_403  [key=0, style=solid];
m5_402 -> m5_29  [key=2, style=dotted];
m5_403 -> m5_404  [key=0, style=solid];
m5_403 -> m5_29  [key=2, style=dotted];
m5_404 -> m5_405  [key=0, style=solid];
m5_404 -> m5_27  [key=2, style=dotted];
m5_404 -> m5_28  [key=2, style=dotted];
m5_405 -> m5_406  [key=0, style=solid];
m5_405 -> m5_29  [key=2, style=dotted];
m5_406 -> m5_407  [key=0, style=solid];
m5_406 -> m5_29  [key=2, style=dotted];
m5_407 -> m5_408  [key=0, style=solid];
m5_407 -> m5_27  [key=2, style=dotted];
m5_407 -> m5_115  [key=2, style=dotted];
m5_408 -> m5_378  [color=blue, key=0, style=bold];
m5_660 -> m5_661  [key=0, style=solid];
m5_661 -> m5_662  [key=0, style=solid];
m5_662 -> m5_663  [key=0, style=solid];
m5_662 -> m5_25  [key=2, style=dotted];
m5_662 -> m5_26  [key=2, style=dotted];
m5_663 -> m5_663  [key=0, style=solid];
m5_663 -> m5_664  [key=0, style=solid];
m5_663 -> m5_27  [key=2, style=dotted];
m5_664 -> m5_660  [color=blue, key=0, style=bold];
m5_1342 -> m5_1343  [key=0, style=solid];
m5_1343 -> m5_1344  [key=0, style=solid];
m5_1344 -> m5_1345  [key=0, style=solid];
m5_1344 -> m5_25  [key=2, style=dotted];
m5_1344 -> m5_26  [key=2, style=dotted];
m5_1344 -> m5_1346  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1344 -> m5_1347  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1344 -> m5_1348  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1345 -> m5_1346  [key=0, style=solid];
m5_1345 -> m5_27  [key=2, style=dotted];
m5_1345 -> m5_28  [key=2, style=dotted];
m5_1346 -> m5_1347  [key=0, style=solid];
m5_1346 -> m5_27  [key=2, style=dotted];
m5_1346 -> m5_28  [key=2, style=dotted];
m5_1347 -> m5_1348  [key=0, style=solid];
m5_1347 -> m5_27  [key=2, style=dotted];
m5_1347 -> m5_28  [key=2, style=dotted];
m5_1348 -> m5_1349  [key=0, style=solid];
m5_1348 -> m5_27  [key=2, style=dotted];
m5_1348 -> m5_115  [key=2, style=dotted];
m5_1349 -> m5_1342  [color=blue, key=0, style=bold];
m5_331 -> m5_332  [key=0, style=solid];
m5_332 -> m5_333  [key=0, style=solid];
m5_332 -> m5_39  [key=2, style=dotted];
m5_332 -> m5_334  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_333 -> m5_331  [color=blue, key=0, style=bold];
m5_529 -> m5_530  [key=0, style=solid];
m5_530 -> m5_531  [key=0, style=solid];
m5_530 -> m5_25  [key=2, style=dotted];
m5_530 -> m5_26  [key=2, style=dotted];
m5_530 -> m5_532  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_530 -> m5_533  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_531 -> m5_532  [key=0, style=solid];
m5_531 -> m5_122  [key=2, style=dotted];
m5_531 -> m5_28  [key=2, style=dotted];
m5_532 -> m5_533  [key=0, style=solid];
m5_532 -> m5_518  [key=2, style=dotted];
m5_532 -> m5_535  [key=2, style=dotted];
m5_533 -> m5_534  [key=0, style=solid];
m5_533 -> m5_29  [key=2, style=dotted];
m5_534 -> m5_529  [color=blue, key=0, style=bold];
m5_169 -> m5_170  [key=0, style=solid];
m5_170 -> m5_171  [key=0, style=solid];
m5_171 -> m5_172  [key=0, style=solid];
m5_171 -> m5_25  [key=2, style=dotted];
m5_171 -> m5_26  [key=2, style=dotted];
m5_172 -> m5_172  [key=0, style=solid];
m5_172 -> m5_173  [key=0, style=solid];
m5_172 -> m5_27  [key=2, style=dotted];
m5_173 -> m5_169  [color=blue, key=0, style=bold];
m5_1225 -> m5_1226  [key=0, style=solid];
m5_1226 -> m5_1227  [key=0, style=solid];
m5_1226 -> m5_25  [key=2, style=dotted];
m5_1226 -> m5_26  [key=2, style=dotted];
m5_1226 -> m5_1230  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1227 -> m5_1228  [key=0, style=solid];
m5_1227 -> m5_39  [key=2, style=dotted];
m5_1227 -> m5_1229  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_1228 -> m5_1225  [color=blue, key=0, style=bold];
m5_182 -> m5_183  [key=0, style=solid];
m5_183 -> m5_184  [key=0, style=solid];
m5_184 -> m5_185  [key=0, style=solid];
m5_184 -> m5_26  [key=2, style=dotted];
m5_185 -> m5_186  [key=0, style=solid];
m5_185 -> m5_25  [key=2, style=dotted];
m5_185 -> m5_187  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_185 -> m5_188  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_185 -> m5_189  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_185 -> m5_190  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_185 -> m5_191  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_185 -> m5_192  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_185 -> m5_193  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_185 -> m5_194  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_185 -> m5_195  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_185 -> m5_196  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_185 -> m5_197  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_185 -> m5_198  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_185 -> m5_199  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_185 -> m5_200  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_185 -> m5_201  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_185 -> m5_202  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_185 -> m5_203  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_185 -> m5_204  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_185 -> m5_205  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_185 -> m5_206  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_185 -> m5_207  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_185 -> m5_208  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_185 -> m5_209  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_185 -> m5_210  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_185 -> m5_211  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_185 -> m5_212  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_185 -> m5_213  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_185 -> m5_214  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_185 -> m5_215  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_185 -> m5_216  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_185 -> m5_217  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_185 -> m5_218  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_185 -> m5_219  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_185 -> m5_220  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_185 -> m5_221  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_185 -> m5_222  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_185 -> m5_223  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_185 -> m5_224  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_185 -> m5_225  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_185 -> m5_226  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_185 -> m5_227  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_185 -> m5_228  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_185 -> m5_229  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_185 -> m5_230  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_185 -> m5_231  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_185 -> m5_232  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_186 -> m5_187  [key=0, style=solid];
m5_186 -> m5_29  [key=2, style=dotted];
m5_187 -> m5_188  [key=0, style=solid];
m5_187 -> m5_29  [key=2, style=dotted];
m5_188 -> m5_189  [key=0, style=solid];
m5_188 -> m5_29  [key=2, style=dotted];
m5_189 -> m5_190  [key=0, style=solid];
m5_189 -> m5_27  [key=2, style=dotted];
m5_190 -> m5_191  [key=0, style=solid];
m5_190 -> m5_29  [key=2, style=dotted];
m5_191 -> m5_192  [key=0, style=solid];
m5_191 -> m5_29  [key=2, style=dotted];
m5_192 -> m5_193  [key=0, style=solid];
m5_192 -> m5_29  [key=2, style=dotted];
m5_193 -> m5_194  [key=0, style=solid];
m5_193 -> m5_27  [key=2, style=dotted];
m5_194 -> m5_195  [key=0, style=solid];
m5_194 -> m5_29  [key=2, style=dotted];
m5_195 -> m5_196  [key=0, style=solid];
m5_195 -> m5_29  [key=2, style=dotted];
m5_196 -> m5_197  [key=0, style=solid];
m5_196 -> m5_29  [key=2, style=dotted];
m5_197 -> m5_198  [key=0, style=solid];
m5_197 -> m5_29  [key=2, style=dotted];
m5_198 -> m5_199  [key=0, style=solid];
m5_198 -> m5_27  [key=2, style=dotted];
m5_199 -> m5_200  [key=0, style=solid];
m5_199 -> m5_29  [key=2, style=dotted];
m5_200 -> m5_201  [key=0, style=solid];
m5_200 -> m5_29  [key=2, style=dotted];
m5_201 -> m5_202  [key=0, style=solid];
m5_201 -> m5_29  [key=2, style=dotted];
m5_202 -> m5_203  [key=0, style=solid];
m5_202 -> m5_29  [key=2, style=dotted];
m5_203 -> m5_204  [key=0, style=solid];
m5_203 -> m5_27  [key=2, style=dotted];
m5_204 -> m5_205  [key=0, style=solid];
m5_204 -> m5_29  [key=2, style=dotted];
m5_205 -> m5_206  [key=0, style=solid];
m5_205 -> m5_29  [key=2, style=dotted];
m5_206 -> m5_207  [key=0, style=solid];
m5_206 -> m5_29  [key=2, style=dotted];
m5_207 -> m5_208  [key=0, style=solid];
m5_207 -> m5_29  [key=2, style=dotted];
m5_208 -> m5_209  [key=0, style=solid];
m5_208 -> m5_27  [key=2, style=dotted];
m5_209 -> m5_210  [key=0, style=solid];
m5_209 -> m5_29  [key=2, style=dotted];
m5_210 -> m5_211  [key=0, style=solid];
m5_210 -> m5_29  [key=2, style=dotted];
m5_211 -> m5_212  [key=0, style=solid];
m5_211 -> m5_29  [key=2, style=dotted];
m5_212 -> m5_213  [key=0, style=solid];
m5_212 -> m5_27  [key=2, style=dotted];
m5_213 -> m5_214  [key=0, style=solid];
m5_213 -> m5_29  [key=2, style=dotted];
m5_214 -> m5_215  [key=0, style=solid];
m5_214 -> m5_29  [key=2, style=dotted];
m5_215 -> m5_216  [key=0, style=solid];
m5_215 -> m5_29  [key=2, style=dotted];
m5_216 -> m5_217  [key=0, style=solid];
m5_216 -> m5_29  [key=2, style=dotted];
m5_217 -> m5_218  [key=0, style=solid];
m5_217 -> m5_29  [key=2, style=dotted];
m5_218 -> m5_219  [key=0, style=solid];
m5_218 -> m5_27  [key=2, style=dotted];
m5_219 -> m5_220  [key=0, style=solid];
m5_219 -> m5_29  [key=2, style=dotted];
m5_220 -> m5_221  [key=0, style=solid];
m5_220 -> m5_29  [key=2, style=dotted];
m5_221 -> m5_222  [key=0, style=solid];
m5_221 -> m5_29  [key=2, style=dotted];
m5_222 -> m5_223  [key=0, style=solid];
m5_222 -> m5_29  [key=2, style=dotted];
m5_223 -> m5_224  [key=0, style=solid];
m5_223 -> m5_29  [key=2, style=dotted];
m5_224 -> m5_225  [key=0, style=solid];
m5_224 -> m5_27  [key=2, style=dotted];
m5_225 -> m5_226  [key=0, style=solid];
m5_225 -> m5_29  [key=2, style=dotted];
m5_226 -> m5_227  [key=0, style=solid];
m5_226 -> m5_29  [key=2, style=dotted];
m5_227 -> m5_228  [key=0, style=solid];
m5_227 -> m5_29  [key=2, style=dotted];
m5_228 -> m5_229  [key=0, style=solid];
m5_228 -> m5_27  [key=2, style=dotted];
m5_229 -> m5_230  [key=0, style=solid];
m5_229 -> m5_29  [key=2, style=dotted];
m5_230 -> m5_231  [key=0, style=solid];
m5_230 -> m5_29  [key=2, style=dotted];
m5_231 -> m5_232  [key=0, style=solid];
m5_231 -> m5_29  [key=2, style=dotted];
m5_232 -> m5_233  [key=0, style=solid];
m5_232 -> m5_27  [key=2, style=dotted];
m5_232 -> m5_115  [key=2, style=dotted];
m5_233 -> m5_182  [color=blue, key=0, style=bold];
m5_143 -> m5_144  [key=0, style=solid];
m5_144 -> m5_145  [key=0, style=solid];
m5_145 -> m5_146  [key=0, style=solid];
m5_145 -> m5_25  [key=2, style=dotted];
m5_145 -> m5_26  [key=2, style=dotted];
m5_145 -> m5_149  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_146 -> m5_147  [key=0, style=solid];
m5_146 -> m5_39  [key=2, style=dotted];
m5_146 -> m5_148  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_147 -> m5_143  [color=blue, key=0, style=bold];
m5_1218 -> m5_1219  [key=0, style=solid];
m5_1219 -> m5_1220  [key=0, style=solid];
m5_1219 -> m5_25  [key=2, style=dotted];
m5_1219 -> m5_26  [key=2, style=dotted];
m5_1219 -> m5_1223  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1220 -> m5_1221  [key=0, style=solid];
m5_1220 -> m5_39  [key=2, style=dotted];
m5_1220 -> m5_1222  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_1221 -> m5_1218  [color=blue, key=0, style=bold];
m5_1246 -> m5_1247  [key=0, style=solid];
m5_1247 -> m5_1248  [key=0, style=solid];
m5_1248 -> m5_1249  [key=0, style=solid];
m5_1248 -> m5_25  [key=2, style=dotted];
m5_1248 -> m5_26  [key=2, style=dotted];
m5_1248 -> m5_1250  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1248 -> m5_1251  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1248 -> m5_1252  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1248 -> m5_1253  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1248 -> m5_1254  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1248 -> m5_1255  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1248 -> m5_1256  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1248 -> m5_1258  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1248 -> m5_1259  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1249 -> m5_1250  [key=0, style=solid];
m5_1249 -> m5_1156  [key=2, style=dotted];
m5_1250 -> m5_1251  [key=0, style=solid];
m5_1250 -> m5_27  [key=2, style=dotted];
m5_1250 -> m5_28  [key=2, style=dotted];
m5_1251 -> m5_1252  [key=0, style=solid];
m5_1251 -> m5_29  [key=2, style=dotted];
m5_1252 -> m5_1253  [key=0, style=solid];
m5_1252 -> m5_27  [key=2, style=dotted];
m5_1252 -> m5_28  [key=2, style=dotted];
m5_1253 -> m5_1254  [key=0, style=solid];
m5_1253 -> m5_29  [key=2, style=dotted];
m5_1254 -> m5_1255  [key=0, style=solid];
m5_1254 -> m5_963  [key=2, style=dotted];
m5_1254 -> m5_1257  [color=darkseagreen4, key=1, label=d, style=dashed];
m5_1255 -> m5_1256  [key=0, style=solid];
m5_1255 -> m5_29  [key=2, style=dotted];
m5_1256 -> m5_1257  [key=0, style=solid];
m5_1256 -> m5_29  [key=2, style=dotted];
m5_1258 -> m5_1259  [key=0, style=solid];
m5_1258 -> m5_27  [key=2, style=dotted];
m5_1258 -> m5_28  [key=2, style=dotted];
m5_1259 -> m5_1260  [key=0, style=solid];
m5_1259 -> m5_29  [key=2, style=dotted];
m5_1257 -> m5_1258  [key=0, style=solid];
m5_1257 -> m5_29  [key=2, style=dotted];
m5_1260 -> m5_1246  [color=blue, key=0, style=bold];
m5_1261 -> m5_1262  [key=0, style=solid];
m5_1262 -> m5_1263  [key=0, style=solid];
m5_1263 -> m5_1264  [key=0, style=solid];
m5_1263 -> m5_25  [key=2, style=dotted];
m5_1263 -> m5_26  [key=2, style=dotted];
m5_1263 -> m5_1266  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1263 -> m5_1268  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1263 -> m5_1269  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1264 -> m5_1265  [key=0, style=solid];
m5_1264 -> m5_1267  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_1266 -> m5_1267  [key=0, style=solid];
m5_1266 -> m5_27  [key=2, style=dotted];
m5_1268 -> m5_1269  [key=0, style=solid];
m5_1268 -> m5_27  [key=2, style=dotted];
m5_1268 -> m5_28  [key=2, style=dotted];
m5_1269 -> m5_1270  [key=0, style=solid];
m5_1269 -> m5_1271  [key=2, style=dotted];
m5_1269 -> m5_29  [key=2, style=dotted];
m5_1265 -> m5_1266  [key=0, style=solid];
m5_1265 -> m5_1268  [key=0, style=solid];
m5_1267 -> m5_1265  [key=0, style=solid];
m5_1267 -> m5_1267  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_1270 -> m5_1261  [color=blue, key=0, style=bold];
m5_1547 -> m5_1548  [key=0, style=solid];
m5_1548 -> m5_1549  [key=0, style=solid];
m5_1549 -> m5_1550  [key=0, style=solid];
m5_1549 -> m5_25  [key=2, style=dotted];
m5_1549 -> m5_26  [key=2, style=dotted];
m5_1549 -> m5_1551  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1549 -> m5_1552  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1549 -> m5_1577  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1549 -> m5_1553  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1549 -> m5_1554  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1549 -> m5_1555  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1549 -> m5_1556  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1549 -> m5_1557  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1549 -> m5_1558  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1549 -> m5_1559  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1549 -> m5_1560  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1549 -> m5_1561  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1549 -> m5_1562  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1549 -> m5_1563  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1549 -> m5_1564  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1549 -> m5_1580  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1549 -> m5_1565  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1549 -> m5_1566  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1549 -> m5_1567  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1549 -> m5_1568  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1549 -> m5_1569  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1549 -> m5_1570  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1549 -> m5_1571  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1549 -> m5_1572  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1549 -> m5_1573  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1549 -> m5_1574  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1550 -> m5_1551  [key=0, style=solid];
m5_1550 -> m5_27  [key=2, style=dotted];
m5_1550 -> m5_28  [key=2, style=dotted];
m5_1551 -> m5_1552  [key=0, style=solid];
m5_1551 -> m5_29  [key=2, style=dotted];
m5_1552 -> m5_1553  [key=0, style=solid];
m5_1552 -> m5_1386  [key=2, style=dotted];
m5_1552 -> m5_1576  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_1553 -> m5_1554  [key=0, style=solid];
m5_1553 -> m5_29  [key=2, style=dotted];
m5_1554 -> m5_1555  [key=0, style=solid];
m5_1554 -> m5_27  [key=2, style=dotted];
m5_1554 -> m5_28  [key=2, style=dotted];
m5_1555 -> m5_1556  [key=0, style=solid];
m5_1555 -> m5_29  [key=2, style=dotted];
m5_1556 -> m5_1557  [key=0, style=solid];
m5_1556 -> m5_27  [key=2, style=dotted];
m5_1556 -> m5_28  [key=2, style=dotted];
m5_1557 -> m5_1558  [key=0, style=solid];
m5_1557 -> m5_29  [key=2, style=dotted];
m5_1558 -> m5_1559  [key=0, style=solid];
m5_1558 -> m5_27  [key=2, style=dotted];
m5_1558 -> m5_28  [key=2, style=dotted];
m5_1559 -> m5_1560  [key=0, style=solid];
m5_1559 -> m5_29  [key=2, style=dotted];
m5_1560 -> m5_1561  [key=0, style=solid];
m5_1560 -> m5_27  [key=2, style=dotted];
m5_1560 -> m5_28  [key=2, style=dotted];
m5_1561 -> m5_1562  [key=0, style=solid];
m5_1561 -> m5_29  [key=2, style=dotted];
m5_1562 -> m5_1563  [key=0, style=solid];
m5_1562 -> m5_27  [key=2, style=dotted];
m5_1562 -> m5_28  [key=2, style=dotted];
m5_1563 -> m5_1564  [key=0, style=solid];
m5_1563 -> m5_29  [key=2, style=dotted];
m5_1564 -> m5_1565  [key=0, style=solid];
m5_1564 -> m5_1386  [key=2, style=dotted];
m5_1564 -> m5_1579  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_1565 -> m5_1566  [key=0, style=solid];
m5_1565 -> m5_29  [key=2, style=dotted];
m5_1566 -> m5_1567  [key=0, style=solid];
m5_1566 -> m5_27  [key=2, style=dotted];
m5_1566 -> m5_28  [key=2, style=dotted];
m5_1567 -> m5_1568  [key=0, style=solid];
m5_1567 -> m5_29  [key=2, style=dotted];
m5_1568 -> m5_1569  [key=0, style=solid];
m5_1568 -> m5_27  [key=2, style=dotted];
m5_1568 -> m5_28  [key=2, style=dotted];
m5_1569 -> m5_1570  [key=0, style=solid];
m5_1569 -> m5_29  [key=2, style=dotted];
m5_1570 -> m5_1571  [key=0, style=solid];
m5_1570 -> m5_27  [key=2, style=dotted];
m5_1570 -> m5_28  [key=2, style=dotted];
m5_1571 -> m5_1572  [key=0, style=solid];
m5_1571 -> m5_29  [key=2, style=dotted];
m5_1572 -> m5_1573  [key=0, style=solid];
m5_1572 -> m5_27  [key=2, style=dotted];
m5_1572 -> m5_28  [key=2, style=dotted];
m5_1573 -> m5_1574  [key=0, style=solid];
m5_1573 -> m5_29  [key=2, style=dotted];
m5_1574 -> m5_1575  [key=0, style=solid];
m5_1574 -> m5_27  [key=2, style=dotted];
m5_1574 -> m5_115  [key=2, style=dotted];
m5_1575 -> m5_1547  [color=blue, key=0, style=bold];
m5_996 -> m5_997  [key=0, style=solid];
m5_997 -> m5_998  [key=0, style=solid];
m5_997 -> m5_25  [key=2, style=dotted];
m5_997 -> m5_26  [key=2, style=dotted];
m5_997 -> m5_1001  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_998 -> m5_999  [key=0, style=solid];
m5_998 -> m5_39  [key=2, style=dotted];
m5_998 -> m5_1000  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_999 -> m5_996  [color=blue, key=0, style=bold];
m5_91 -> m5_92  [key=0, style=solid];
m5_92 -> m5_93  [key=0, style=solid];
m5_92 -> m5_98  [key=2, style=dotted];
m5_92 -> m5_99  [key=2, style=dotted];
m5_93 -> m5_94  [key=0, style=solid];
m5_93 -> m5_25  [key=2, style=dotted];
m5_93 -> m5_100  [key=2, style=dotted];
m5_93 -> m5_95  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_94 -> m5_95  [key=0, style=solid];
m5_94 -> m5_27  [key=2, style=dotted];
m5_95 -> m5_96  [key=0, style=solid];
m5_96 -> m5_97  [key=0, style=solid];
m5_97 -> m5_91  [color=blue, key=0, style=bold];
m5_1232 -> m5_1233  [key=0, style=solid];
m5_1233 -> m5_1234  [key=0, style=solid];
m5_1234 -> m5_1235  [key=0, style=solid];
m5_1234 -> m5_25  [key=2, style=dotted];
m5_1234 -> m5_26  [key=2, style=dotted];
m5_1234 -> m5_1236  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1234 -> m5_1237  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1234 -> m5_1238  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1234 -> m5_1239  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1234 -> m5_1240  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1234 -> m5_1241  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1234 -> m5_1243  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1234 -> m5_1244  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1235 -> m5_1236  [key=0, style=solid];
m5_1235 -> m5_27  [key=2, style=dotted];
m5_1235 -> m5_28  [key=2, style=dotted];
m5_1236 -> m5_1237  [key=0, style=solid];
m5_1236 -> m5_29  [key=2, style=dotted];
m5_1237 -> m5_1238  [key=0, style=solid];
m5_1237 -> m5_27  [key=2, style=dotted];
m5_1237 -> m5_28  [key=2, style=dotted];
m5_1238 -> m5_1239  [key=0, style=solid];
m5_1238 -> m5_29  [key=2, style=dotted];
m5_1239 -> m5_1240  [key=0, style=solid];
m5_1239 -> m5_963  [key=2, style=dotted];
m5_1239 -> m5_1242  [color=darkseagreen4, key=1, label=d, style=dashed];
m5_1240 -> m5_1241  [key=0, style=solid];
m5_1240 -> m5_29  [key=2, style=dotted];
m5_1241 -> m5_1242  [key=0, style=solid];
m5_1241 -> m5_29  [key=2, style=dotted];
m5_1243 -> m5_1244  [key=0, style=solid];
m5_1243 -> m5_27  [key=2, style=dotted];
m5_1243 -> m5_28  [key=2, style=dotted];
m5_1244 -> m5_1245  [key=0, style=solid];
m5_1244 -> m5_29  [key=2, style=dotted];
m5_1242 -> m5_1243  [key=0, style=solid];
m5_1242 -> m5_29  [key=2, style=dotted];
m5_1245 -> m5_1232  [color=blue, key=0, style=bold];
m5_704 -> m5_705  [key=0, style=solid];
m5_705 -> m5_706  [key=0, style=solid];
m5_705 -> m5_741  [key=2, style=dotted];
m5_705 -> m5_732  [color=darkseagreen4, key=1, label=sb, style=dashed];
m5_706 -> m5_707  [key=0, style=solid];
m5_706 -> m5_742  [key=2, style=dotted];
m5_732 -> m5_733  [key=0, style=solid];
m5_732 -> m5_752  [key=2, style=dotted];
m5_732 -> m5_734  [color=darkseagreen4, key=1, label=json, style=dashed];
m5_732 -> m5_739  [color=darkseagreen4, key=1, label=json, style=dashed];
m5_707 -> m5_708  [key=0, style=solid];
m5_707 -> m5_373  [key=2, style=dotted];
m5_707 -> m5_709  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m5_707 -> m5_710  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m5_707 -> m5_711  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m5_707 -> m5_712  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m5_707 -> m5_713  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m5_707 -> m5_714  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m5_707 -> m5_715  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m5_707 -> m5_716  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m5_707 -> m5_719  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m5_707 -> m5_721  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m5_707 -> m5_722  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m5_707 -> m5_723  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m5_707 -> m5_724  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m5_707 -> m5_725  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m5_707 -> m5_726  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m5_707 -> m5_727  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m5_707 -> m5_728  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m5_707 -> m5_729  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m5_707 -> m5_730  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m5_707 -> m5_731  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m5_708 -> m5_709  [key=0, style=solid];
m5_708 -> m5_743  [key=2, style=dotted];
m5_709 -> m5_710  [key=0, style=solid];
m5_709 -> m5_744  [key=2, style=dotted];
m5_710 -> m5_711  [key=0, style=solid];
m5_710 -> m5_745  [key=2, style=dotted];
m5_711 -> m5_712  [key=0, style=solid];
m5_711 -> m5_746  [key=2, style=dotted];
m5_712 -> m5_713  [key=0, style=solid];
m5_712 -> m5_747  [key=2, style=dotted];
m5_713 -> m5_714  [key=0, style=solid];
m5_713 -> m5_746  [key=2, style=dotted];
m5_714 -> m5_715  [key=0, style=solid];
m5_714 -> m5_748  [key=2, style=dotted];
m5_715 -> m5_716  [key=0, style=solid];
m5_715 -> m5_746  [key=2, style=dotted];
m5_716 -> m5_717  [key=0, style=solid];
m5_716 -> m5_743  [key=2, style=dotted];
m5_719 -> m5_720  [key=0, style=solid];
m5_719 -> m5_747  [key=2, style=dotted];
m5_721 -> m5_722  [key=0, style=solid];
m5_721 -> m5_745  [key=2, style=dotted];
m5_722 -> m5_723  [key=0, style=solid];
m5_722 -> m5_746  [key=2, style=dotted];
m5_723 -> m5_724  [key=0, style=solid];
m5_723 -> m5_749  [key=2, style=dotted];
m5_724 -> m5_725  [key=0, style=solid];
m5_724 -> m5_750  [key=2, style=dotted];
m5_725 -> m5_726  [key=0, style=solid];
m5_725 -> m5_747  [key=2, style=dotted];
m5_726 -> m5_727  [key=0, style=solid];
m5_726 -> m5_376  [key=2, style=dotted];
m5_727 -> m5_728  [key=0, style=solid];
m5_727 -> m5_750  [key=2, style=dotted];
m5_728 -> m5_729  [key=0, style=solid];
m5_728 -> m5_748  [key=2, style=dotted];
m5_729 -> m5_730  [key=0, style=solid];
m5_729 -> m5_751  [key=2, style=dotted];
m5_730 -> m5_731  [key=0, style=solid];
m5_730 -> m5_751  [key=2, style=dotted];
m5_731 -> m5_732  [key=0, style=solid];
m5_731 -> m5_376  [key=2, style=dotted];
m5_717 -> m5_718  [key=0, style=solid];
m5_717 -> m5_719  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_717 -> m5_720  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_718 -> m5_719  [key=0, style=solid];
m5_718 -> m5_721  [key=0, style=solid];
m5_720 -> m5_718  [key=0, style=solid];
m5_720 -> m5_720  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_733 -> m5_734  [key=0, style=solid];
m5_733 -> m5_753  [key=2, style=dotted];
m5_733 -> m5_738  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m5_734 -> m5_735  [key=0, style=solid];
m5_734 -> m5_25  [key=2, style=dotted];
m5_734 -> m5_26  [key=2, style=dotted];
m5_734 -> m5_754  [key=2, style=dotted];
m5_734 -> m5_738  [color=darkseagreen4, key=1, label=jsonObject, style=dashed];
m5_739 -> m5_740  [key=0, style=solid];
m5_739 -> m5_752  [key=2, style=dotted];
m5_739 -> m5_29  [key=2, style=dotted];
m5_738 -> m5_739  [key=0, style=solid];
m5_738 -> m5_755  [key=2, style=dotted];
m5_735 -> m5_736  [key=0, style=solid];
m5_735 -> m5_741  [key=2, style=dotted];
m5_735 -> m5_739  [color=darkseagreen4, key=1, label=sb, style=dashed];
m5_736 -> m5_737  [key=0, style=solid];
m5_736 -> m5_742  [key=2, style=dotted];
m5_737 -> m5_738  [key=0, style=solid];
m5_737 -> m5_373  [key=2, style=dotted];
m5_740 -> m5_704  [color=blue, key=0, style=bold];
m5_1366 -> m5_1367  [key=0, style=solid];
m5_1367 -> m5_1368  [key=0, style=solid];
m5_1367 -> m5_25  [key=2, style=dotted];
m5_1367 -> m5_26  [key=2, style=dotted];
m5_1367 -> m5_1371  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1368 -> m5_1369  [key=0, style=solid];
m5_1368 -> m5_39  [key=2, style=dotted];
m5_1368 -> m5_1370  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_1369 -> m5_1366  [color=blue, key=0, style=bold];
m5_1582 -> m5_1583  [key=0, style=solid];
m5_1583 -> m5_1584  [key=0, style=solid];
m5_1584 -> m5_1585  [key=0, style=solid];
m5_1584 -> m5_25  [key=2, style=dotted];
m5_1584 -> m5_100  [key=2, style=dotted];
m5_1584 -> m5_141  [key=2, style=dotted];
m5_1584 -> m5_142  [key=2, style=dotted];
m5_1584 -> m5_1586  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1584 -> m5_1587  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1584 -> m5_1588  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1584 -> m5_1589  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1584 -> m5_1590  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1584 -> m5_1591  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1584 -> m5_1592  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1584 -> m5_1593  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1584 -> m5_1594  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1584 -> m5_1595  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1584 -> m5_1596  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1584 -> m5_1597  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1584 -> m5_1598  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1584 -> m5_1599  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1584 -> m5_1600  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1584 -> m5_1601  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1584 -> m5_1602  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1584 -> m5_1603  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1584 -> m5_1604  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1584 -> m5_1605  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1584 -> m5_1606  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1584 -> m5_1607  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1584 -> m5_1608  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1584 -> m5_1609  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1584 -> m5_1610  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1584 -> m5_1611  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1584 -> m5_1612  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1584 -> m5_1613  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1584 -> m5_1614  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1584 -> m5_1615  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1584 -> m5_1616  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1584 -> m5_1617  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1584 -> m5_1618  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1584 -> m5_1619  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1584 -> m5_1620  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1584 -> m5_1621  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1585 -> m5_1586  [key=0, style=solid];
m5_1585 -> m5_27  [key=2, style=dotted];
m5_1585 -> m5_28  [key=2, style=dotted];
m5_1586 -> m5_1587  [key=0, style=solid];
m5_1586 -> m5_27  [key=2, style=dotted];
m5_1586 -> m5_28  [key=2, style=dotted];
m5_1587 -> m5_1588  [key=0, style=solid];
m5_1587 -> m5_29  [key=2, style=dotted];
m5_1588 -> m5_1589  [key=0, style=solid];
m5_1588 -> m5_27  [key=2, style=dotted];
m5_1588 -> m5_28  [key=2, style=dotted];
m5_1589 -> m5_1590  [key=0, style=solid];
m5_1589 -> m5_29  [key=2, style=dotted];
m5_1590 -> m5_1591  [key=0, style=solid];
m5_1590 -> m5_29  [key=2, style=dotted];
m5_1591 -> m5_1592  [key=0, style=solid];
m5_1591 -> m5_27  [key=2, style=dotted];
m5_1591 -> m5_28  [key=2, style=dotted];
m5_1592 -> m5_1593  [key=0, style=solid];
m5_1592 -> m5_29  [key=2, style=dotted];
m5_1593 -> m5_1594  [key=0, style=solid];
m5_1593 -> m5_29  [key=2, style=dotted];
m5_1594 -> m5_1595  [key=0, style=solid];
m5_1594 -> m5_27  [key=2, style=dotted];
m5_1594 -> m5_28  [key=2, style=dotted];
m5_1595 -> m5_1596  [key=0, style=solid];
m5_1595 -> m5_29  [key=2, style=dotted];
m5_1596 -> m5_1597  [key=0, style=solid];
m5_1596 -> m5_29  [key=2, style=dotted];
m5_1597 -> m5_1598  [key=0, style=solid];
m5_1597 -> m5_27  [key=2, style=dotted];
m5_1597 -> m5_28  [key=2, style=dotted];
m5_1598 -> m5_1599  [key=0, style=solid];
m5_1598 -> m5_29  [key=2, style=dotted];
m5_1599 -> m5_1600  [key=0, style=solid];
m5_1599 -> m5_29  [key=2, style=dotted];
m5_1600 -> m5_1601  [key=0, style=solid];
m5_1600 -> m5_27  [key=2, style=dotted];
m5_1600 -> m5_28  [key=2, style=dotted];
m5_1601 -> m5_1602  [key=0, style=solid];
m5_1601 -> m5_29  [key=2, style=dotted];
m5_1602 -> m5_1603  [key=0, style=solid];
m5_1602 -> m5_29  [key=2, style=dotted];
m5_1603 -> m5_1604  [key=0, style=solid];
m5_1603 -> m5_27  [key=2, style=dotted];
m5_1603 -> m5_28  [key=2, style=dotted];
m5_1604 -> m5_1605  [key=0, style=solid];
m5_1604 -> m5_29  [key=2, style=dotted];
m5_1605 -> m5_1606  [key=0, style=solid];
m5_1605 -> m5_29  [key=2, style=dotted];
m5_1606 -> m5_1607  [key=0, style=solid];
m5_1606 -> m5_27  [key=2, style=dotted];
m5_1606 -> m5_28  [key=2, style=dotted];
m5_1607 -> m5_1608  [key=0, style=solid];
m5_1607 -> m5_29  [key=2, style=dotted];
m5_1608 -> m5_1609  [key=0, style=solid];
m5_1608 -> m5_29  [key=2, style=dotted];
m5_1609 -> m5_1610  [key=0, style=solid];
m5_1609 -> m5_27  [key=2, style=dotted];
m5_1609 -> m5_28  [key=2, style=dotted];
m5_1610 -> m5_1611  [key=0, style=solid];
m5_1610 -> m5_29  [key=2, style=dotted];
m5_1611 -> m5_1612  [key=0, style=solid];
m5_1611 -> m5_29  [key=2, style=dotted];
m5_1612 -> m5_1613  [key=0, style=solid];
m5_1612 -> m5_27  [key=2, style=dotted];
m5_1612 -> m5_28  [key=2, style=dotted];
m5_1613 -> m5_1614  [key=0, style=solid];
m5_1613 -> m5_29  [key=2, style=dotted];
m5_1614 -> m5_1615  [key=0, style=solid];
m5_1614 -> m5_29  [key=2, style=dotted];
m5_1615 -> m5_1616  [key=0, style=solid];
m5_1615 -> m5_27  [key=2, style=dotted];
m5_1615 -> m5_28  [key=2, style=dotted];
m5_1616 -> m5_1617  [key=0, style=solid];
m5_1616 -> m5_29  [key=2, style=dotted];
m5_1617 -> m5_1618  [key=0, style=solid];
m5_1617 -> m5_29  [key=2, style=dotted];
m5_1618 -> m5_1619  [key=0, style=solid];
m5_1618 -> m5_27  [key=2, style=dotted];
m5_1618 -> m5_28  [key=2, style=dotted];
m5_1619 -> m5_1620  [key=0, style=solid];
m5_1619 -> m5_29  [key=2, style=dotted];
m5_1620 -> m5_1621  [key=0, style=solid];
m5_1620 -> m5_29  [key=2, style=dotted];
m5_1621 -> m5_1622  [key=0, style=solid];
m5_1621 -> m5_27  [key=2, style=dotted];
m5_1621 -> m5_28  [key=2, style=dotted];
m5_1622 -> m5_1582  [color=blue, key=0, style=bold];
m5_1283 -> m5_1284  [key=0, style=solid];
m5_1284 -> m5_1285  [key=0, style=solid];
m5_1285 -> m5_1286  [key=0, style=solid];
m5_1285 -> m5_25  [key=2, style=dotted];
m5_1285 -> m5_26  [key=2, style=dotted];
m5_1285 -> m5_1287  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1285 -> m5_1288  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1285 -> m5_1289  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1285 -> m5_1290  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1286 -> m5_1287  [key=0, style=solid];
m5_1286 -> m5_27  [key=2, style=dotted];
m5_1286 -> m5_28  [key=2, style=dotted];
m5_1287 -> m5_1288  [key=0, style=solid];
m5_1287 -> m5_29  [key=2, style=dotted];
m5_1288 -> m5_1289  [key=0, style=solid];
m5_1288 -> m5_29  [key=2, style=dotted];
m5_1289 -> m5_1290  [key=0, style=solid];
m5_1289 -> m5_27  [key=2, style=dotted];
m5_1289 -> m5_28  [key=2, style=dotted];
m5_1290 -> m5_1291  [key=0, style=solid];
m5_1290 -> m5_29  [key=2, style=dotted];
m5_1291 -> m5_1283  [color=blue, key=0, style=bold];
m5_1204 -> m5_1205  [key=0, style=solid];
m5_1205 -> m5_1206  [key=0, style=solid];
m5_1205 -> m5_25  [key=2, style=dotted];
m5_1205 -> m5_26  [key=2, style=dotted];
m5_1205 -> m5_1209  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1206 -> m5_1207  [key=0, style=solid];
m5_1206 -> m5_39  [key=2, style=dotted];
m5_1206 -> m5_1208  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_1207 -> m5_1204  [color=blue, key=0, style=bold];
m5_492 -> m5_493  [key=0, style=solid];
m5_493 -> m5_494  [key=0, style=solid];
m5_493 -> m5_25  [key=2, style=dotted];
m5_493 -> m5_26  [key=2, style=dotted];
m5_493 -> m5_495  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_494 -> m5_495  [key=0, style=solid];
m5_494 -> m5_122  [key=2, style=dotted];
m5_494 -> m5_28  [key=2, style=dotted];
m5_495 -> m5_496  [key=0, style=solid];
m5_495 -> m5_29  [key=2, style=dotted];
m5_496 -> m5_492  [color=blue, key=0, style=bold];
m5_151 -> m5_152  [key=0, style=solid];
m5_152 -> m5_153  [key=0, style=solid];
m5_153 -> m5_154  [key=0, style=solid];
m5_153 -> m5_25  [key=2, style=dotted];
m5_153 -> m5_26  [key=2, style=dotted];
m5_153 -> m5_155  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_153 -> m5_156  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_153 -> m5_157  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_153 -> m5_158  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_153 -> m5_159  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_153 -> m5_160  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_153 -> m5_161  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_153 -> m5_162  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_153 -> m5_163  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_153 -> m5_164  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_153 -> m5_167  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_154 -> m5_155  [key=0, style=solid];
m5_154 -> m5_27  [key=2, style=dotted];
m5_155 -> m5_156  [key=0, style=solid];
m5_155 -> m5_29  [key=2, style=dotted];
m5_156 -> m5_157  [key=0, style=solid];
m5_156 -> m5_27  [key=2, style=dotted];
m5_157 -> m5_158  [key=0, style=solid];
m5_157 -> m5_29  [key=2, style=dotted];
m5_158 -> m5_159  [key=0, style=solid];
m5_158 -> m5_27  [key=2, style=dotted];
m5_159 -> m5_160  [key=0, style=solid];
m5_159 -> m5_29  [key=2, style=dotted];
m5_160 -> m5_161  [key=0, style=solid];
m5_160 -> m5_27  [key=2, style=dotted];
m5_161 -> m5_162  [key=0, style=solid];
m5_161 -> m5_29  [key=2, style=dotted];
m5_162 -> m5_163  [key=0, style=solid];
m5_162 -> m5_27  [key=2, style=dotted];
m5_163 -> m5_164  [key=0, style=solid];
m5_163 -> m5_29  [key=2, style=dotted];
m5_164 -> m5_165  [key=0, style=solid];
m5_164 -> m5_39  [key=2, style=dotted];
m5_164 -> m5_166  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_165 -> m5_151  [color=blue, key=0, style=bold];
m5_789 -> m5_790  [key=0, style=solid];
m5_790 -> m5_791  [key=0, style=solid];
m5_791 -> m5_792  [key=0, style=solid];
m5_791 -> m5_25  [key=2, style=dotted];
m5_791 -> m5_26  [key=2, style=dotted];
m5_791 -> m5_793  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_791 -> m5_794  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_791 -> m5_795  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_791 -> m5_796  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_791 -> m5_797  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_791 -> m5_798  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_791 -> m5_799  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_792 -> m5_793  [key=0, style=solid];
m5_792 -> m5_27  [key=2, style=dotted];
m5_793 -> m5_794  [key=0, style=solid];
m5_793 -> m5_29  [key=2, style=dotted];
m5_794 -> m5_795  [key=0, style=solid];
m5_794 -> m5_27  [key=2, style=dotted];
m5_795 -> m5_796  [key=0, style=solid];
m5_795 -> m5_29  [key=2, style=dotted];
m5_796 -> m5_797  [key=0, style=solid];
m5_796 -> m5_27  [key=2, style=dotted];
m5_797 -> m5_798  [key=0, style=solid];
m5_797 -> m5_801  [key=2, style=dotted];
m5_797 -> m5_802  [key=2, style=dotted];
m5_797 -> m5_29  [key=2, style=dotted];
m5_798 -> m5_799  [key=0, style=solid];
m5_798 -> m5_27  [key=2, style=dotted];
m5_799 -> m5_800  [key=0, style=solid];
m5_799 -> m5_29  [key=2, style=dotted];
m5_800 -> m5_789  [color=blue, key=0, style=bold];
m5_234 -> m5_235  [key=0, style=solid];
m5_235 -> m5_236  [key=0, style=solid];
m5_236 -> m5_237  [key=0, style=solid];
m5_236 -> m5_26  [key=2, style=dotted];
m5_237 -> m5_238  [key=0, style=solid];
m5_237 -> m5_25  [key=2, style=dotted];
m5_237 -> m5_239  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_240  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_241  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_242  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_243  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_244  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_245  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_246  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_247  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_248  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_249  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_250  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_251  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_252  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_253  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_254  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_255  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_256  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_257  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_258  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_259  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_260  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_261  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_262  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_263  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_264  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_265  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_266  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_267  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_268  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_269  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_270  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_271  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_272  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_273  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_274  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_275  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_276  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_277  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_278  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_279  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_280  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_281  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_282  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_283  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_284  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_285  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_286  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_287  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_288  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_289  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_290  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_291  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_292  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_293  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_294  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_295  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_296  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_297  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_298  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_299  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_300  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_301  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_302  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_303  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_304  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_305  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_306  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_307  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_308  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_309  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_310  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_311  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_312  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_313  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_314  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_315  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_316  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_317  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_318  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_319  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_320  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_321  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_322  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_323  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_324  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_325  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_326  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_327  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_328  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_237 -> m5_329  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_238 -> m5_239  [key=0, style=solid];
m5_238 -> m5_29  [key=2, style=dotted];
m5_239 -> m5_240  [key=0, style=solid];
m5_239 -> m5_122  [key=2, style=dotted];
m5_240 -> m5_241  [key=0, style=solid];
m5_240 -> m5_29  [key=2, style=dotted];
m5_241 -> m5_242  [key=0, style=solid];
m5_241 -> m5_29  [key=2, style=dotted];
m5_242 -> m5_243  [key=0, style=solid];
m5_242 -> m5_29  [key=2, style=dotted];
m5_243 -> m5_244  [key=0, style=solid];
m5_243 -> m5_122  [key=2, style=dotted];
m5_244 -> m5_245  [key=0, style=solid];
m5_244 -> m5_29  [key=2, style=dotted];
m5_245 -> m5_246  [key=0, style=solid];
m5_245 -> m5_29  [key=2, style=dotted];
m5_246 -> m5_247  [key=0, style=solid];
m5_246 -> m5_29  [key=2, style=dotted];
m5_247 -> m5_248  [key=0, style=solid];
m5_247 -> m5_122  [key=2, style=dotted];
m5_248 -> m5_249  [key=0, style=solid];
m5_248 -> m5_29  [key=2, style=dotted];
m5_249 -> m5_250  [key=0, style=solid];
m5_249 -> m5_29  [key=2, style=dotted];
m5_250 -> m5_251  [key=0, style=solid];
m5_250 -> m5_29  [key=2, style=dotted];
m5_251 -> m5_252  [key=0, style=solid];
m5_251 -> m5_29  [key=2, style=dotted];
m5_252 -> m5_253  [key=0, style=solid];
m5_252 -> m5_29  [key=2, style=dotted];
m5_253 -> m5_254  [key=0, style=solid];
m5_253 -> m5_122  [key=2, style=dotted];
m5_254 -> m5_255  [key=0, style=solid];
m5_254 -> m5_29  [key=2, style=dotted];
m5_255 -> m5_256  [key=0, style=solid];
m5_255 -> m5_29  [key=2, style=dotted];
m5_256 -> m5_257  [key=0, style=solid];
m5_256 -> m5_29  [key=2, style=dotted];
m5_257 -> m5_258  [key=0, style=solid];
m5_257 -> m5_122  [key=2, style=dotted];
m5_258 -> m5_259  [key=0, style=solid];
m5_258 -> m5_29  [key=2, style=dotted];
m5_259 -> m5_260  [key=0, style=solid];
m5_259 -> m5_29  [key=2, style=dotted];
m5_260 -> m5_261  [key=0, style=solid];
m5_260 -> m5_29  [key=2, style=dotted];
m5_261 -> m5_262  [key=0, style=solid];
m5_261 -> m5_122  [key=2, style=dotted];
m5_262 -> m5_263  [key=0, style=solid];
m5_262 -> m5_29  [key=2, style=dotted];
m5_263 -> m5_264  [key=0, style=solid];
m5_263 -> m5_29  [key=2, style=dotted];
m5_264 -> m5_265  [key=0, style=solid];
m5_264 -> m5_29  [key=2, style=dotted];
m5_265 -> m5_266  [key=0, style=solid];
m5_265 -> m5_29  [key=2, style=dotted];
m5_266 -> m5_267  [key=0, style=solid];
m5_266 -> m5_122  [key=2, style=dotted];
m5_267 -> m5_268  [key=0, style=solid];
m5_267 -> m5_29  [key=2, style=dotted];
m5_268 -> m5_269  [key=0, style=solid];
m5_268 -> m5_29  [key=2, style=dotted];
m5_269 -> m5_270  [key=0, style=solid];
m5_269 -> m5_29  [key=2, style=dotted];
m5_270 -> m5_271  [key=0, style=solid];
m5_270 -> m5_29  [key=2, style=dotted];
m5_271 -> m5_272  [key=0, style=solid];
m5_271 -> m5_122  [key=2, style=dotted];
m5_272 -> m5_273  [key=0, style=solid];
m5_272 -> m5_29  [key=2, style=dotted];
m5_273 -> m5_274  [key=0, style=solid];
m5_273 -> m5_29  [key=2, style=dotted];
m5_274 -> m5_275  [key=0, style=solid];
m5_274 -> m5_29  [key=2, style=dotted];
m5_275 -> m5_276  [key=0, style=solid];
m5_275 -> m5_29  [key=2, style=dotted];
m5_276 -> m5_277  [key=0, style=solid];
m5_276 -> m5_122  [key=2, style=dotted];
m5_277 -> m5_278  [key=0, style=solid];
m5_277 -> m5_29  [key=2, style=dotted];
m5_278 -> m5_279  [key=0, style=solid];
m5_278 -> m5_29  [key=2, style=dotted];
m5_279 -> m5_280  [key=0, style=solid];
m5_279 -> m5_29  [key=2, style=dotted];
m5_280 -> m5_281  [key=0, style=solid];
m5_280 -> m5_29  [key=2, style=dotted];
m5_281 -> m5_282  [key=0, style=solid];
m5_281 -> m5_122  [key=2, style=dotted];
m5_282 -> m5_283  [key=0, style=solid];
m5_282 -> m5_29  [key=2, style=dotted];
m5_283 -> m5_284  [key=0, style=solid];
m5_283 -> m5_29  [key=2, style=dotted];
m5_284 -> m5_285  [key=0, style=solid];
m5_284 -> m5_29  [key=2, style=dotted];
m5_285 -> m5_286  [key=0, style=solid];
m5_285 -> m5_29  [key=2, style=dotted];
m5_286 -> m5_287  [key=0, style=solid];
m5_286 -> m5_122  [key=2, style=dotted];
m5_287 -> m5_288  [key=0, style=solid];
m5_287 -> m5_29  [key=2, style=dotted];
m5_288 -> m5_289  [key=0, style=solid];
m5_288 -> m5_29  [key=2, style=dotted];
m5_289 -> m5_290  [key=0, style=solid];
m5_289 -> m5_29  [key=2, style=dotted];
m5_290 -> m5_291  [key=0, style=solid];
m5_290 -> m5_122  [key=2, style=dotted];
m5_291 -> m5_292  [key=0, style=solid];
m5_291 -> m5_29  [key=2, style=dotted];
m5_292 -> m5_293  [key=0, style=solid];
m5_292 -> m5_29  [key=2, style=dotted];
m5_293 -> m5_294  [key=0, style=solid];
m5_293 -> m5_29  [key=2, style=dotted];
m5_294 -> m5_295  [key=0, style=solid];
m5_294 -> m5_122  [key=2, style=dotted];
m5_295 -> m5_296  [key=0, style=solid];
m5_295 -> m5_29  [key=2, style=dotted];
m5_296 -> m5_297  [key=0, style=solid];
m5_296 -> m5_29  [key=2, style=dotted];
m5_297 -> m5_298  [key=0, style=solid];
m5_297 -> m5_29  [key=2, style=dotted];
m5_298 -> m5_299  [key=0, style=solid];
m5_298 -> m5_122  [key=2, style=dotted];
m5_299 -> m5_300  [key=0, style=solid];
m5_299 -> m5_29  [key=2, style=dotted];
m5_300 -> m5_301  [key=0, style=solid];
m5_300 -> m5_29  [key=2, style=dotted];
m5_301 -> m5_302  [key=0, style=solid];
m5_301 -> m5_29  [key=2, style=dotted];
m5_302 -> m5_303  [key=0, style=solid];
m5_302 -> m5_122  [key=2, style=dotted];
m5_303 -> m5_304  [key=0, style=solid];
m5_303 -> m5_29  [key=2, style=dotted];
m5_304 -> m5_305  [key=0, style=solid];
m5_304 -> m5_29  [key=2, style=dotted];
m5_305 -> m5_306  [key=0, style=solid];
m5_305 -> m5_29  [key=2, style=dotted];
m5_306 -> m5_307  [key=0, style=solid];
m5_306 -> m5_122  [key=2, style=dotted];
m5_307 -> m5_308  [key=0, style=solid];
m5_307 -> m5_29  [key=2, style=dotted];
m5_308 -> m5_309  [key=0, style=solid];
m5_308 -> m5_29  [key=2, style=dotted];
m5_309 -> m5_310  [key=0, style=solid];
m5_309 -> m5_29  [key=2, style=dotted];
m5_310 -> m5_311  [key=0, style=solid];
m5_310 -> m5_122  [key=2, style=dotted];
m5_311 -> m5_312  [key=0, style=solid];
m5_311 -> m5_29  [key=2, style=dotted];
m5_312 -> m5_313  [key=0, style=solid];
m5_312 -> m5_29  [key=2, style=dotted];
m5_313 -> m5_314  [key=0, style=solid];
m5_313 -> m5_29  [key=2, style=dotted];
m5_314 -> m5_315  [key=0, style=solid];
m5_314 -> m5_122  [key=2, style=dotted];
m5_315 -> m5_316  [key=0, style=solid];
m5_315 -> m5_29  [key=2, style=dotted];
m5_316 -> m5_317  [key=0, style=solid];
m5_316 -> m5_29  [key=2, style=dotted];
m5_317 -> m5_318  [key=0, style=solid];
m5_317 -> m5_29  [key=2, style=dotted];
m5_318 -> m5_319  [key=0, style=solid];
m5_318 -> m5_122  [key=2, style=dotted];
m5_319 -> m5_320  [key=0, style=solid];
m5_319 -> m5_29  [key=2, style=dotted];
m5_320 -> m5_321  [key=0, style=solid];
m5_320 -> m5_29  [key=2, style=dotted];
m5_321 -> m5_322  [key=0, style=solid];
m5_321 -> m5_29  [key=2, style=dotted];
m5_322 -> m5_323  [key=0, style=solid];
m5_322 -> m5_122  [key=2, style=dotted];
m5_323 -> m5_324  [key=0, style=solid];
m5_323 -> m5_29  [key=2, style=dotted];
m5_324 -> m5_325  [key=0, style=solid];
m5_324 -> m5_29  [key=2, style=dotted];
m5_325 -> m5_326  [key=0, style=solid];
m5_325 -> m5_29  [key=2, style=dotted];
m5_326 -> m5_327  [key=0, style=solid];
m5_326 -> m5_122  [key=2, style=dotted];
m5_327 -> m5_328  [key=0, style=solid];
m5_327 -> m5_29  [key=2, style=dotted];
m5_328 -> m5_329  [key=0, style=solid];
m5_328 -> m5_29  [key=2, style=dotted];
m5_329 -> m5_330  [key=0, style=solid];
m5_329 -> m5_29  [key=2, style=dotted];
m5_330 -> m5_234  [color=blue, key=0, style=bold];
m5_519 -> m5_520  [key=0, style=solid];
m5_520 -> m5_521  [key=0, style=solid];
m5_521 -> m5_522  [key=0, style=solid];
m5_521 -> m5_99  [key=2, style=dotted];
m5_522 -> m5_523  [key=0, style=solid];
m5_522 -> m5_25  [key=2, style=dotted];
m5_522 -> m5_26  [key=2, style=dotted];
m5_522 -> m5_525  [key=2, style=dotted];
m5_522 -> m5_527  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_523 -> m5_524  [key=0, style=solid];
m5_523 -> m5_39  [key=2, style=dotted];
m5_523 -> m5_526  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_524 -> m5_519  [color=blue, key=0, style=bold];
m5_1373 -> m5_1374  [key=0, style=solid];
m5_1374 -> m5_1375  [key=0, style=solid];
m5_1375 -> m5_1376  [key=0, style=solid];
m5_1375 -> m5_25  [key=2, style=dotted];
m5_1375 -> m5_26  [key=2, style=dotted];
m5_1375 -> m5_1377  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1375 -> m5_1378  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1375 -> m5_1379  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1376 -> m5_1377  [key=0, style=solid];
m5_1376 -> m5_27  [key=2, style=dotted];
m5_1376 -> m5_28  [key=2, style=dotted];
m5_1377 -> m5_1378  [key=0, style=solid];
m5_1377 -> m5_29  [key=2, style=dotted];
m5_1378 -> m5_1379  [key=0, style=solid];
m5_1378 -> m5_27  [key=2, style=dotted];
m5_1378 -> m5_28  [key=2, style=dotted];
m5_1379 -> m5_1380  [key=0, style=solid];
m5_1379 -> m5_29  [key=2, style=dotted];
m5_1380 -> m5_1373  [color=blue, key=0, style=bold];
m5_452 -> m5_453  [key=0, style=solid];
m5_453 -> m5_454  [key=0, style=solid];
m5_453 -> m5_465  [key=2, style=dotted];
m5_453 -> m5_459  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_454 -> m5_455  [key=0, style=solid];
m5_454 -> m5_25  [key=2, style=dotted];
m5_454 -> m5_466  [key=2, style=dotted];
m5_454 -> m5_467  [key=2, style=dotted];
m5_454 -> m5_456  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_459 -> m5_460  [key=0, style=solid];
m5_455 -> m5_456  [key=0, style=solid];
m5_455 -> m5_27  [key=2, style=dotted];
m5_456 -> m5_457  [key=0, style=solid];
m5_456 -> m5_29  [key=2, style=dotted];
m5_457 -> m5_458  [key=0, style=solid];
m5_457 -> m5_459  [color=darkseagreen4, key=1, label=j, style=dashed];
m5_457 -> m5_463  [color=darkseagreen4, key=1, label=j, style=dashed];
m5_458 -> m5_459  [key=0, style=solid];
m5_458 -> m5_464  [key=0, style=solid];
m5_463 -> m5_458  [key=0, style=solid];
m5_463 -> m5_463  [color=darkseagreen4, key=1, label=j, style=dashed];
m5_460 -> m5_461  [key=0, style=solid];
m5_460 -> m5_25  [key=2, style=dotted];
m5_460 -> m5_466  [key=2, style=dotted];
m5_460 -> m5_467  [key=2, style=dotted];
m5_460 -> m5_462  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_461 -> m5_462  [key=0, style=solid];
m5_461 -> m5_27  [key=2, style=dotted];
m5_462 -> m5_463  [key=0, style=solid];
m5_462 -> m5_29  [key=2, style=dotted];
m5_464 -> m5_452  [color=blue, key=0, style=bold];
m5_1052 -> m5_1053  [key=0, style=solid];
m5_1053 -> m5_1054  [key=0, style=solid];
m5_1054 -> m5_1055  [key=0, style=solid];
m5_1054 -> m5_25  [key=2, style=dotted];
m5_1054 -> m5_26  [key=2, style=dotted];
m5_1054 -> m5_1056  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1054 -> m5_1057  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1054 -> m5_1058  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1054 -> m5_1059  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1054 -> m5_1060  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1054 -> m5_1061  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1054 -> m5_1062  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1054 -> m5_1063  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1054 -> m5_1064  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1055 -> m5_1056  [key=0, style=solid];
m5_1055 -> m5_27  [key=2, style=dotted];
m5_1055 -> m5_28  [key=2, style=dotted];
m5_1056 -> m5_1057  [key=0, style=solid];
m5_1056 -> m5_29  [key=2, style=dotted];
m5_1057 -> m5_1058  [key=0, style=solid];
m5_1057 -> m5_27  [key=2, style=dotted];
m5_1057 -> m5_28  [key=2, style=dotted];
m5_1058 -> m5_1059  [key=0, style=solid];
m5_1058 -> m5_29  [key=2, style=dotted];
m5_1059 -> m5_1060  [key=0, style=solid];
m5_1059 -> m5_981  [key=2, style=dotted];
m5_1060 -> m5_1061  [key=0, style=solid];
m5_1060 -> m5_29  [key=2, style=dotted];
m5_1061 -> m5_1062  [key=0, style=solid];
m5_1061 -> m5_29  [key=2, style=dotted];
m5_1062 -> m5_1063  [key=0, style=solid];
m5_1062 -> m5_1066  [key=2, style=dotted];
m5_1062 -> m5_1067  [key=2, style=dotted];
m5_1062 -> m5_1068  [key=2, style=dotted];
m5_1062 -> m5_29  [key=2, style=dotted];
m5_1063 -> m5_1064  [key=0, style=solid];
m5_1063 -> m5_27  [key=2, style=dotted];
m5_1063 -> m5_28  [key=2, style=dotted];
m5_1064 -> m5_1065  [key=0, style=solid];
m5_1064 -> m5_29  [key=2, style=dotted];
m5_1065 -> m5_1052  [color=blue, key=0, style=bold];
m5_635 -> m5_636  [key=0, style=solid];
m5_636 -> m5_637  [key=0, style=solid];
m5_637 -> m5_638  [key=0, style=solid];
m5_637 -> m5_26  [key=2, style=dotted];
m5_638 -> m5_639  [key=0, style=solid];
m5_638 -> m5_25  [key=2, style=dotted];
m5_638 -> m5_640  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_638 -> m5_641  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_638 -> m5_642  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_638 -> m5_643  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_638 -> m5_644  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_638 -> m5_645  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_638 -> m5_646  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_638 -> m5_647  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_638 -> m5_648  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_638 -> m5_649  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_638 -> m5_650  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_638 -> m5_651  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_638 -> m5_652  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_638 -> m5_653  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_639 -> m5_640  [key=0, style=solid];
m5_639 -> m5_29  [key=2, style=dotted];
m5_640 -> m5_641  [key=0, style=solid];
m5_640 -> m5_122  [key=2, style=dotted];
m5_641 -> m5_642  [key=0, style=solid];
m5_641 -> m5_29  [key=2, style=dotted];
m5_642 -> m5_643  [key=0, style=solid];
m5_642 -> m5_29  [key=2, style=dotted];
m5_643 -> m5_644  [key=0, style=solid];
m5_643 -> m5_122  [key=2, style=dotted];
m5_644 -> m5_645  [key=0, style=solid];
m5_644 -> m5_29  [key=2, style=dotted];
m5_645 -> m5_646  [key=0, style=solid];
m5_645 -> m5_29  [key=2, style=dotted];
m5_646 -> m5_647  [key=0, style=solid];
m5_646 -> m5_122  [key=2, style=dotted];
m5_647 -> m5_648  [key=0, style=solid];
m5_647 -> m5_29  [key=2, style=dotted];
m5_648 -> m5_649  [key=0, style=solid];
m5_648 -> m5_29  [key=2, style=dotted];
m5_649 -> m5_650  [key=0, style=solid];
m5_649 -> m5_29  [key=2, style=dotted];
m5_650 -> m5_651  [key=0, style=solid];
m5_650 -> m5_29  [key=2, style=dotted];
m5_651 -> m5_652  [key=0, style=solid];
m5_651 -> m5_122  [key=2, style=dotted];
m5_652 -> m5_653  [key=0, style=solid];
m5_652 -> m5_29  [key=2, style=dotted];
m5_653 -> m5_654  [key=0, style=solid];
m5_653 -> m5_29  [key=2, style=dotted];
m5_654 -> m5_635  [color=blue, key=0, style=bold];
m5_1459 -> m5_1460  [key=0, style=solid];
m5_1460 -> m5_1461  [key=0, style=solid];
m5_1461 -> m5_1462  [key=0, style=solid];
m5_1461 -> m5_25  [key=2, style=dotted];
m5_1461 -> m5_26  [key=2, style=dotted];
m5_1461 -> m5_1463  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1461 -> m5_1464  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1462 -> m5_1463  [key=0, style=solid];
m5_1462 -> m5_963  [key=2, style=dotted];
m5_1463 -> m5_1464  [key=0, style=solid];
m5_1463 -> m5_29  [key=2, style=dotted];
m5_1464 -> m5_1465  [key=0, style=solid];
m5_1464 -> m5_29  [key=2, style=dotted];
m5_1465 -> m5_1459  [color=blue, key=0, style=bold];
m5_436 -> m5_437  [key=0, style=solid];
m5_437 -> m5_438  [key=0, style=solid];
m5_437 -> m5_441  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_437 -> m5_444  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_438 -> m5_439  [key=0, style=solid];
m5_438 -> m5_25  [key=2, style=dotted];
m5_438 -> m5_26  [key=2, style=dotted];
m5_438 -> m5_430  [key=2, style=dotted];
m5_438 -> m5_440  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_438 -> m5_441  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_438 -> m5_445  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_441 -> m5_442  [key=0, style=solid];
m5_441 -> m5_29  [key=2, style=dotted];
m5_444 -> m5_445  [key=0, style=solid];
m5_444 -> m5_449  [color=darkseagreen4, key=1, label=total, style=dashed];
m5_439 -> m5_440  [key=0, style=solid];
m5_439 -> m5_27  [key=2, style=dotted];
m5_440 -> m5_441  [key=0, style=solid];
m5_440 -> m5_29  [key=2, style=dotted];
m5_445 -> m5_446  [key=0, style=solid];
m5_445 -> m5_39  [key=2, style=dotted];
m5_445 -> m5_448  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_442 -> m5_443  [key=0, style=solid];
m5_442 -> m5_444  [color=darkseagreen4, key=1, label=j, style=dashed];
m5_442 -> m5_446  [color=darkseagreen4, key=1, label=j, style=dashed];
m5_443 -> m5_444  [key=0, style=solid];
m5_443 -> m5_447  [key=0, style=solid];
m5_446 -> m5_443  [key=0, style=solid];
m5_446 -> m5_446  [color=darkseagreen4, key=1, label=j, style=dashed];
m5_447 -> m5_436  [color=blue, key=0, style=bold];
m5_1739 -> m5_1740  [key=0, style=solid];
m5_1739 -> m5_1742  [color=darkseagreen4, key=1, label="char[]", style=dashed];
m5_1740 -> m5_1741  [key=0, style=solid];
m5_1740 -> m5_1742  [key=0, style=solid];
m5_1742 -> m5_1743  [key=0, style=solid];
m5_1742 -> m5_1745  [key=2, style=dotted];
m5_1741 -> m5_1743  [key=0, style=solid];
m5_1741 -> m5_1744  [key=2, style=dotted];
m5_1743 -> m5_1739  [color=blue, key=0, style=bold];
m5_589 -> m5_590  [key=0, style=solid];
m5_590 -> m5_591  [key=0, style=solid];
m5_590 -> m5_25  [key=2, style=dotted];
m5_590 -> m5_26  [key=2, style=dotted];
m5_590 -> m5_592  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_590 -> m5_593  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_590 -> m5_594  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_590 -> m5_595  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_590 -> m5_596  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_590 -> m5_597  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_590 -> m5_598  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_590 -> m5_599  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_590 -> m5_600  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_591 -> m5_592  [key=0, style=solid];
m5_591 -> m5_122  [key=2, style=dotted];
m5_591 -> m5_28  [key=2, style=dotted];
m5_592 -> m5_593  [key=0, style=solid];
m5_592 -> m5_122  [key=2, style=dotted];
m5_592 -> m5_28  [key=2, style=dotted];
m5_593 -> m5_594  [key=0, style=solid];
m5_593 -> m5_29  [key=2, style=dotted];
m5_594 -> m5_595  [key=0, style=solid];
m5_594 -> m5_29  [key=2, style=dotted];
m5_595 -> m5_596  [key=0, style=solid];
m5_595 -> m5_122  [key=2, style=dotted];
m5_595 -> m5_28  [key=2, style=dotted];
m5_596 -> m5_597  [key=0, style=solid];
m5_596 -> m5_29  [key=2, style=dotted];
m5_597 -> m5_598  [key=0, style=solid];
m5_597 -> m5_29  [key=2, style=dotted];
m5_598 -> m5_599  [key=0, style=solid];
m5_598 -> m5_122  [key=2, style=dotted];
m5_598 -> m5_28  [key=2, style=dotted];
m5_599 -> m5_600  [key=0, style=solid];
m5_599 -> m5_29  [key=2, style=dotted];
m5_600 -> m5_601  [key=0, style=solid];
m5_600 -> m5_122  [key=2, style=dotted];
m5_600 -> m5_115  [key=2, style=dotted];
m5_601 -> m5_589  [color=blue, key=0, style=bold];
m5_1211 -> m5_1212  [key=0, style=solid];
m5_1212 -> m5_1213  [key=0, style=solid];
m5_1212 -> m5_25  [key=2, style=dotted];
m5_1212 -> m5_26  [key=2, style=dotted];
m5_1212 -> m5_1216  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1213 -> m5_1214  [key=0, style=solid];
m5_1213 -> m5_39  [key=2, style=dotted];
m5_1213 -> m5_1215  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_1214 -> m5_1211  [color=blue, key=0, style=bold];
m5_1350 -> m5_1351  [key=0, style=solid];
m5_1351 -> m5_1352  [key=0, style=solid];
m5_1352 -> m5_1353  [key=0, style=solid];
m5_1352 -> m5_25  [key=2, style=dotted];
m5_1352 -> m5_26  [key=2, style=dotted];
m5_1352 -> m5_1354  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1352 -> m5_1355  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1352 -> m5_1356  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1353 -> m5_1354  [key=0, style=solid];
m5_1353 -> m5_27  [key=2, style=dotted];
m5_1353 -> m5_28  [key=2, style=dotted];
m5_1354 -> m5_1355  [key=0, style=solid];
m5_1354 -> m5_29  [key=2, style=dotted];
m5_1355 -> m5_1356  [key=0, style=solid];
m5_1355 -> m5_27  [key=2, style=dotted];
m5_1355 -> m5_28  [key=2, style=dotted];
m5_1356 -> m5_1357  [key=0, style=solid];
m5_1356 -> m5_29  [key=2, style=dotted];
m5_1357 -> m5_1350  [color=blue, key=0, style=bold];
m5_1334 -> m5_1335  [key=0, style=solid];
m5_1335 -> m5_1336  [key=0, style=solid];
m5_1336 -> m5_1337  [key=0, style=solid];
m5_1336 -> m5_25  [key=2, style=dotted];
m5_1336 -> m5_26  [key=2, style=dotted];
m5_1336 -> m5_1340  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1337 -> m5_1338  [key=0, style=solid];
m5_1337 -> m5_39  [key=2, style=dotted];
m5_1337 -> m5_1339  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_1338 -> m5_1334  [color=blue, key=0, style=bold];
m5_141 -> m5_1751  [key=0, style=solid];
m5_1751 -> m5_141  [color=blue, key=0, style=bold];
m5_409 -> m5_410  [key=0, style=solid];
m5_410 -> m5_411  [key=0, style=solid];
m5_411 -> m5_412  [key=0, style=solid];
m5_411 -> m5_25  [key=2, style=dotted];
m5_411 -> m5_26  [key=2, style=dotted];
m5_411 -> m5_414  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_411 -> m5_416  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_411 -> m5_417  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_412 -> m5_413  [key=0, style=solid];
m5_412 -> m5_415  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_414 -> m5_415  [key=0, style=solid];
m5_414 -> m5_27  [key=2, style=dotted];
m5_416 -> m5_417  [key=0, style=solid];
m5_416 -> m5_27  [key=2, style=dotted];
m5_417 -> m5_418  [key=0, style=solid];
m5_417 -> m5_29  [key=2, style=dotted];
m5_413 -> m5_414  [key=0, style=solid];
m5_413 -> m5_416  [key=0, style=solid];
m5_415 -> m5_413  [key=0, style=solid];
m5_415 -> m5_415  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_418 -> m5_409  [color=blue, key=0, style=bold];
m5_655 -> m5_656  [key=0, style=solid];
m5_656 -> m5_657  [key=0, style=solid];
m5_657 -> m5_658  [key=0, style=solid];
m5_657 -> m5_659  [key=2, style=dotted];
m5_658 -> m5_655  [color=blue, key=0, style=bold];
m5_1185 -> m5_1186  [key=0, style=solid];
m5_1186 -> m5_1187  [key=0, style=solid];
m5_1187 -> m5_1188  [key=0, style=solid];
m5_1187 -> m5_25  [key=2, style=dotted];
m5_1187 -> m5_26  [key=2, style=dotted];
m5_1187 -> m5_1189  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1187 -> m5_1190  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1187 -> m5_1191  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1187 -> m5_1192  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1187 -> m5_1195  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1188 -> m5_1189  [key=0, style=solid];
m5_1188 -> m5_27  [key=2, style=dotted];
m5_1188 -> m5_28  [key=2, style=dotted];
m5_1189 -> m5_1190  [key=0, style=solid];
m5_1189 -> m5_29  [key=2, style=dotted];
m5_1190 -> m5_1191  [key=0, style=solid];
m5_1190 -> m5_27  [key=2, style=dotted];
m5_1190 -> m5_28  [key=2, style=dotted];
m5_1191 -> m5_1192  [key=0, style=solid];
m5_1191 -> m5_29  [key=2, style=dotted];
m5_1192 -> m5_1193  [key=0, style=solid];
m5_1192 -> m5_39  [key=2, style=dotted];
m5_1192 -> m5_1194  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_1193 -> m5_1185  [color=blue, key=0, style=bold];
m5_1764 -> m5_1765  [key=0, style=solid];
m5_1765 -> m5_1766  [key=0, style=solid];
m5_1765 -> m5_1767  [key=2, style=dotted];
m5_1766 -> m5_1764  [color=blue, key=0, style=bold];
m5_1452 -> m5_1453  [key=0, style=solid];
m5_1453 -> m5_1454  [key=0, style=solid];
m5_1454 -> m5_1455  [key=0, style=solid];
m5_1454 -> m5_25  [key=2, style=dotted];
m5_1454 -> m5_26  [key=2, style=dotted];
m5_1454 -> m5_1456  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1454 -> m5_1457  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1455 -> m5_1456  [key=0, style=solid];
m5_1455 -> m5_963  [key=2, style=dotted];
m5_1456 -> m5_1457  [key=0, style=solid];
m5_1456 -> m5_29  [key=2, style=dotted];
m5_1457 -> m5_1458  [key=0, style=solid];
m5_1457 -> m5_29  [key=2, style=dotted];
m5_1458 -> m5_1452  [color=blue, key=0, style=bold];
m5_865 -> m5_866  [key=0, style=solid];
m5_866 -> m5_867  [key=0, style=solid];
m5_867 -> m5_868  [key=0, style=solid];
m5_867 -> m5_25  [key=2, style=dotted];
m5_867 -> m5_26  [key=2, style=dotted];
m5_867 -> m5_869  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_867 -> m5_870  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_867 -> m5_871  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_867 -> m5_872  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_867 -> m5_873  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_867 -> m5_874  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_867 -> m5_877  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_868 -> m5_869  [key=0, style=solid];
m5_868 -> m5_27  [key=2, style=dotted];
m5_869 -> m5_870  [key=0, style=solid];
m5_869 -> m5_29  [key=2, style=dotted];
m5_870 -> m5_871  [key=0, style=solid];
m5_870 -> m5_27  [key=2, style=dotted];
m5_871 -> m5_872  [key=0, style=solid];
m5_871 -> m5_29  [key=2, style=dotted];
m5_872 -> m5_873  [key=0, style=solid];
m5_872 -> m5_27  [key=2, style=dotted];
m5_873 -> m5_874  [key=0, style=solid];
m5_873 -> m5_29  [key=2, style=dotted];
m5_874 -> m5_875  [key=0, style=solid];
m5_874 -> m5_39  [key=2, style=dotted];
m5_874 -> m5_876  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_875 -> m5_865  [color=blue, key=0, style=bold];
m5_1358 -> m5_1359  [key=0, style=solid];
m5_1359 -> m5_1360  [key=0, style=solid];
m5_1360 -> m5_1361  [key=0, style=solid];
m5_1360 -> m5_25  [key=2, style=dotted];
m5_1360 -> m5_26  [key=2, style=dotted];
m5_1360 -> m5_1362  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1360 -> m5_1363  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1360 -> m5_1364  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1361 -> m5_1362  [key=0, style=solid];
m5_1361 -> m5_27  [key=2, style=dotted];
m5_1361 -> m5_28  [key=2, style=dotted];
m5_1362 -> m5_1363  [key=0, style=solid];
m5_1362 -> m5_29  [key=2, style=dotted];
m5_1363 -> m5_1364  [key=0, style=solid];
m5_1363 -> m5_27  [key=2, style=dotted];
m5_1363 -> m5_28  [key=2, style=dotted];
m5_1364 -> m5_1365  [key=0, style=solid];
m5_1364 -> m5_29  [key=2, style=dotted];
m5_1365 -> m5_1358  [color=blue, key=0, style=bold];
m5_879 -> m5_880  [key=0, style=solid];
m5_880 -> m5_881  [key=0, style=solid];
m5_880 -> m5_26  [key=2, style=dotted];
m5_881 -> m5_882  [key=0, style=solid];
m5_881 -> m5_25  [key=2, style=dotted];
m5_882 -> m5_883  [key=0, style=solid];
m5_882 -> m5_887  [key=2, style=dotted];
m5_882 -> m5_884  [color=darkseagreen4, key=1, label=data, style=dashed];
m5_883 -> m5_884  [key=0, style=solid];
m5_883 -> m5_888  [key=2, style=dotted];
m5_884 -> m5_885  [key=0, style=solid];
m5_884 -> m5_889  [key=2, style=dotted];
m5_885 -> m5_886  [key=0, style=solid];
m5_885 -> m5_29  [key=2, style=dotted];
m5_886 -> m5_879  [color=blue, key=0, style=bold];
m5_344 -> m5_345  [key=0, style=solid];
m5_345 -> m5_346  [key=0, style=solid];
m5_345 -> m5_350  [key=2, style=dotted];
m5_345 -> m5_348  [color=darkseagreen4, key=1, label=s, style=dashed];
m5_346 -> m5_347  [key=0, style=solid];
m5_346 -> m5_25  [key=2, style=dotted];
m5_346 -> m5_26  [key=2, style=dotted];
m5_346 -> m5_348  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_348 -> m5_349  [key=0, style=solid];
m5_348 -> m5_29  [key=2, style=dotted];
m5_347 -> m5_348  [key=0, style=solid];
m5_347 -> m5_122  [key=2, style=dotted];
m5_349 -> m5_344  [color=blue, key=0, style=bold];
m5_1768 -> m5_1769  [key=0, style=solid];
m5_1769 -> m5_1770  [key=0, style=solid];
m5_1769 -> m5_1767  [key=2, style=dotted];
m5_1770 -> m5_1768  [color=blue, key=0, style=bold];
m5_969 -> m5_970  [key=0, style=solid];
m5_970 -> m5_971  [key=0, style=solid];
m5_970 -> m5_25  [key=2, style=dotted];
m5_970 -> m5_26  [key=2, style=dotted];
m5_970 -> m5_974  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_971 -> m5_972  [key=0, style=solid];
m5_971 -> m5_39  [key=2, style=dotted];
m5_971 -> m5_973  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_972 -> m5_969  [color=blue, key=0, style=bold];
m5_602 -> m5_603  [key=0, style=solid];
m5_603 -> m5_604  [key=0, style=solid];
m5_604 -> m5_605  [key=0, style=solid];
m5_604 -> m5_99  [key=2, style=dotted];
m5_604 -> m5_611  [color=darkseagreen4, key=1, label=helloWorldData, style=dashed];
m5_605 -> m5_606  [key=0, style=solid];
m5_605 -> m5_25  [key=2, style=dotted];
m5_605 -> m5_26  [key=2, style=dotted];
m5_605 -> m5_525  [key=2, style=dotted];
m5_605 -> m5_607  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_605 -> m5_608  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_605 -> m5_609  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_605 -> m5_610  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_605 -> m5_612  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_605 -> m5_613  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_605 -> m5_614  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_605 -> m5_615  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_611 -> m5_612  [key=0, style=solid];
m5_611 -> m5_617  [key=2, style=dotted];
m5_606 -> m5_607  [key=0, style=solid];
m5_606 -> m5_122  [key=2, style=dotted];
m5_606 -> m5_28  [key=2, style=dotted];
m5_607 -> m5_608  [key=0, style=solid];
m5_607 -> m5_29  [key=2, style=dotted];
m5_608 -> m5_609  [key=0, style=solid];
m5_608 -> m5_122  [key=2, style=dotted];
m5_608 -> m5_28  [key=2, style=dotted];
m5_609 -> m5_610  [key=0, style=solid];
m5_609 -> m5_29  [key=2, style=dotted];
m5_610 -> m5_611  [key=0, style=solid];
m5_610 -> m5_518  [key=2, style=dotted];
m5_612 -> m5_613  [key=0, style=solid];
m5_612 -> m5_29  [key=2, style=dotted];
m5_613 -> m5_614  [key=0, style=solid];
m5_613 -> m5_122  [key=2, style=dotted];
m5_613 -> m5_28  [key=2, style=dotted];
m5_614 -> m5_615  [key=0, style=solid];
m5_614 -> m5_29  [key=2, style=dotted];
m5_615 -> m5_616  [key=0, style=solid];
m5_615 -> m5_122  [key=2, style=dotted];
m5_615 -> m5_115  [key=2, style=dotted];
m5_616 -> m5_602  [color=blue, key=0, style=bold];
m5_43 -> m5_44  [key=0, style=solid];
m5_44 -> m5_45  [key=0, style=solid];
m5_45 -> m5_46  [key=0, style=solid];
m5_45 -> m5_25  [key=2, style=dotted];
m5_45 -> m5_26  [key=2, style=dotted];
m5_45 -> m5_47  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_45 -> m5_48  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_45 -> m5_49  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_45 -> m5_50  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_45 -> m5_51  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_45 -> m5_52  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_45 -> m5_53  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_45 -> m5_54  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_45 -> m5_55  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_45 -> m5_56  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_45 -> m5_57  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_45 -> m5_58  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_45 -> m5_59  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_45 -> m5_60  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_45 -> m5_61  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_45 -> m5_31  [color=darkorchid, key=3, label="Property variable Newtonsoft.Json.Serialization.ObjectConstructor<object> OverrideCreator", style=bold];
m5_46 -> m5_47  [key=0, style=solid];
m5_46 -> m5_27  [key=2, style=dotted];
m5_46 -> m5_28  [key=2, style=dotted];
m5_47 -> m5_48  [key=0, style=solid];
m5_47 -> m5_29  [key=2, style=dotted];
m5_48 -> m5_49  [key=0, style=solid];
m5_48 -> m5_27  [key=2, style=dotted];
m5_48 -> m5_28  [key=2, style=dotted];
m5_49 -> m5_50  [key=0, style=solid];
m5_49 -> m5_29  [key=2, style=dotted];
m5_50 -> m5_51  [key=0, style=solid];
m5_50 -> m5_27  [key=2, style=dotted];
m5_50 -> m5_28  [key=2, style=dotted];
m5_51 -> m5_52  [key=0, style=solid];
m5_51 -> m5_29  [key=2, style=dotted];
m5_52 -> m5_53  [key=0, style=solid];
m5_52 -> m5_27  [key=2, style=dotted];
m5_52 -> m5_28  [key=2, style=dotted];
m5_53 -> m5_54  [key=0, style=solid];
m5_53 -> m5_29  [key=2, style=dotted];
m5_54 -> m5_55  [key=0, style=solid];
m5_54 -> m5_27  [key=2, style=dotted];
m5_54 -> m5_28  [key=2, style=dotted];
m5_55 -> m5_56  [key=0, style=solid];
m5_55 -> m5_29  [key=2, style=dotted];
m5_56 -> m5_57  [key=0, style=solid];
m5_56 -> m5_27  [key=2, style=dotted];
m5_56 -> m5_28  [key=2, style=dotted];
m5_57 -> m5_58  [key=0, style=solid];
m5_57 -> m5_29  [key=2, style=dotted];
m5_58 -> m5_59  [key=0, style=solid];
m5_58 -> m5_29  [key=2, style=dotted];
m5_59 -> m5_60  [key=0, style=solid];
m5_59 -> m5_27  [key=2, style=dotted];
m5_59 -> m5_28  [key=2, style=dotted];
m5_60 -> m5_61  [key=0, style=solid];
m5_60 -> m5_29  [key=2, style=dotted];
m5_61 -> m5_62  [key=0, style=solid];
m5_61 -> m5_29  [key=2, style=dotted];
m5_62 -> m5_43  [color=blue, key=0, style=bold];
m5_1719 -> m5_1720  [key=0, style=solid];
m5_1720 -> m5_1721  [key=0, style=solid];
m5_1720 -> m5_372  [key=2, style=dotted];
m5_1720 -> m5_1726  [color=darkseagreen4, key=1, label=sw, style=dashed];
m5_1721 -> m5_1722  [key=0, style=solid];
m5_1721 -> m5_373  [key=2, style=dotted];
m5_1721 -> m5_1723  [color=darkseagreen4, key=1, label=writer, style=dashed];
m5_1721 -> m5_1724  [color=darkseagreen4, key=1, label=writer, style=dashed];
m5_1721 -> m5_1725  [color=darkseagreen4, key=1, label=writer, style=dashed];
m5_1726 -> m5_1727  [key=0, style=solid];
m5_1726 -> m5_377  [key=2, style=dotted];
m5_1722 -> m5_1723  [key=0, style=solid];
m5_1722 -> m5_374  [key=2, style=dotted];
m5_1723 -> m5_1724  [key=0, style=solid];
m5_1723 -> m5_1736  [key=2, style=dotted];
m5_1724 -> m5_1725  [key=0, style=solid];
m5_1724 -> m5_1736  [key=2, style=dotted];
m5_1725 -> m5_1726  [key=0, style=solid];
m5_1725 -> m5_376  [key=2, style=dotted];
m5_1727 -> m5_1728  [key=0, style=solid];
m5_1727 -> m5_26  [key=2, style=dotted];
m5_1728 -> m5_1729  [key=0, style=solid];
m5_1728 -> m5_25  [key=2, style=dotted];
m5_1728 -> m5_1730  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1728 -> m5_1732  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1728 -> m5_1734  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1729 -> m5_1730  [key=0, style=solid];
m5_1729 -> m5_27  [key=2, style=dotted];
m5_1729 -> m5_28  [key=2, style=dotted];
m5_1730 -> m5_1731  [key=0, style=solid];
m5_1730 -> m5_963  [key=2, style=dotted];
m5_1732 -> m5_1733  [key=0, style=solid];
m5_1732 -> m5_963  [key=2, style=dotted];
m5_1734 -> m5_1735  [key=0, style=solid];
m5_1734 -> m5_27  [key=2, style=dotted];
m5_1734 -> m5_28  [key=2, style=dotted];
m5_1731 -> m5_1732  [key=0, style=solid];
m5_1731 -> m5_29  [key=2, style=dotted];
m5_1733 -> m5_1734  [key=0, style=solid];
m5_1733 -> m5_29  [key=2, style=dotted];
m5_1735 -> m5_1719  [color=blue, key=0, style=bold];
m5_1716 -> m5_1717  [key=0, style=solid];
m5_41 -> m5_42  [key=0, style=solid];
m5_41 -> m5_27  [key=2, style=dotted];
m5_40 -> m5_41  [key=0, style=solid];
m5_42 -> m5_40  [color=blue, key=0, style=bold];
m5_149 -> m5_149  [key=0, style=solid];
m5_149 -> m5_150  [key=0, style=solid];
m5_149 -> m5_27  [key=2, style=dotted];
m5_148 -> m5_149  [key=0, style=solid];
m5_150 -> m5_148  [color=blue, key=0, style=bold];
m5_167 -> m5_168  [key=0, style=solid];
m5_167 -> m5_27  [key=2, style=dotted];
m5_166 -> m5_167  [key=0, style=solid];
m5_168 -> m5_166  [color=blue, key=0, style=bold];
m5_180 -> m5_180  [key=0, style=solid];
m5_180 -> m5_181  [key=0, style=solid];
m5_180 -> m5_27  [key=2, style=dotted];
m5_179 -> m5_180  [key=0, style=solid];
m5_181 -> m5_179  [color=blue, key=0, style=bold];
m5_334 -> m5_335  [key=0, style=solid];
m5_335 -> m5_336  [key=0, style=solid];
m5_335 -> m5_25  [key=2, style=dotted];
m5_336 -> m5_334  [color=blue, key=0, style=bold];
m5_342 -> m5_343  [key=0, style=solid];
m5_342 -> m5_122  [key=2, style=dotted];
m5_341 -> m5_342  [key=0, style=solid];
m5_343 -> m5_341  [color=blue, key=0, style=bold];
m5_432 -> m5_433  [key=0, style=solid];
m5_432 -> m5_25  [key=2, style=dotted];
m5_432 -> m5_26  [key=2, style=dotted];
m5_432 -> m5_430  [key=2, style=dotted];
m5_431 -> m5_432  [key=0, style=solid];
m5_433 -> m5_434  [key=0, style=solid];
m5_433 -> m5_435  [key=2, style=dotted];
m5_434 -> m5_431  [color=blue, key=0, style=bold];
m5_449 -> m5_450  [key=0, style=solid];
m5_449 -> m5_25  [key=2, style=dotted];
m5_449 -> m5_26  [key=2, style=dotted];
m5_449 -> m5_430  [key=2, style=dotted];
m5_448 -> m5_449  [key=0, style=solid];
m5_450 -> m5_451  [key=0, style=solid];
m5_450 -> m5_435  [key=2, style=dotted];
m5_451 -> m5_448  [color=blue, key=0, style=bold];
m5_502 -> m5_503  [key=0, style=solid];
m5_502 -> m5_122  [key=2, style=dotted];
m5_501 -> m5_502  [key=0, style=solid];
m5_503 -> m5_501  [color=blue, key=0, style=bold];
m5_509 -> m5_510  [key=0, style=solid];
m5_509 -> m5_122  [key=2, style=dotted];
m5_508 -> m5_509  [key=0, style=solid];
m5_510 -> m5_508  [color=blue, key=0, style=bold];
m5_516 -> m5_517  [key=0, style=solid];
m5_516 -> m5_518  [key=2, style=dotted];
m5_515 -> m5_516  [key=0, style=solid];
m5_517 -> m5_515  [color=blue, key=0, style=bold];
m5_527 -> m5_528  [key=0, style=solid];
m5_527 -> m5_518  [key=2, style=dotted];
m5_526 -> m5_527  [key=0, style=solid];
m5_528 -> m5_526  [color=blue, key=0, style=bold];
m5_542 -> m5_543  [key=0, style=solid];
m5_542 -> m5_122  [key=2, style=dotted];
m5_541 -> m5_542  [key=0, style=solid];
m5_543 -> m5_541  [color=blue, key=0, style=bold];
m5_693 -> m5_694  [key=0, style=solid];
m5_693 -> m5_435  [key=2, style=dotted];
m5_692 -> m5_693  [key=0, style=solid];
m5_696 -> m5_697  [key=0, style=solid];
m5_696 -> m5_435  [key=2, style=dotted];
m5_695 -> m5_696  [key=0, style=solid];
m5_699 -> m5_700  [key=0, style=solid];
m5_699 -> m5_435  [key=2, style=dotted];
m5_698 -> m5_699  [key=0, style=solid];
m5_702 -> m5_703  [key=0, style=solid];
m5_702 -> m5_435  [key=2, style=dotted];
m5_701 -> m5_702  [key=0, style=solid];
m5_694 -> m5_692  [color=blue, key=0, style=bold];
m5_697 -> m5_695  [color=blue, key=0, style=bold];
m5_700 -> m5_698  [color=blue, key=0, style=bold];
m5_703 -> m5_701  [color=blue, key=0, style=bold];
m5_877 -> m5_878  [key=0, style=solid];
m5_877 -> m5_27  [key=2, style=dotted];
m5_876 -> m5_877  [key=0, style=solid];
m5_878 -> m5_876  [color=blue, key=0, style=bold];
m5_956 -> m5_957  [key=0, style=solid];
m5_956 -> m5_27  [key=2, style=dotted];
m5_955 -> m5_956  [key=0, style=solid];
m5_957 -> m5_955  [color=blue, key=0, style=bold];
m5_974 -> m5_975  [key=0, style=solid];
m5_974 -> m5_887  [key=2, style=dotted];
m5_973 -> m5_974  [key=0, style=solid];
m5_975 -> m5_973  [color=blue, key=0, style=bold];
m5_987 -> m5_988  [key=0, style=solid];
m5_987 -> m5_963  [key=2, style=dotted];
m5_986 -> m5_987  [key=0, style=solid];
m5_988 -> m5_986  [color=blue, key=0, style=bold];
m5_994 -> m5_995  [key=0, style=solid];
m5_994 -> m5_887  [key=2, style=dotted];
m5_993 -> m5_994  [key=0, style=solid];
m5_995 -> m5_993  [color=blue, key=0, style=bold];
m5_1001 -> m5_1002  [key=0, style=solid];
m5_1001 -> m5_981  [key=2, style=dotted];
m5_1000 -> m5_1001  [key=0, style=solid];
m5_1002 -> m5_1000  [color=blue, key=0, style=bold];
m5_1015 -> m5_1016  [key=0, style=solid];
m5_1015 -> m5_887  [key=2, style=dotted];
m5_1014 -> m5_1015  [key=0, style=solid];
m5_1016 -> m5_1014  [color=blue, key=0, style=bold];
m5_1022 -> m5_1023  [key=0, style=solid];
m5_1022 -> m5_887  [key=2, style=dotted];
m5_1021 -> m5_1022  [key=0, style=solid];
m5_1023 -> m5_1021  [color=blue, key=0, style=bold];
m5_1093 -> m5_1094  [key=0, style=solid];
m5_1093 -> m5_981  [key=2, style=dotted];
m5_1092 -> m5_1093  [key=0, style=solid];
m5_1094 -> m5_1092  [color=blue, key=0, style=bold];
m5_1195 -> m5_1196  [key=0, style=solid];
m5_1195 -> m5_435  [key=2, style=dotted];
m5_1194 -> m5_1195  [key=0, style=solid];
m5_1196 -> m5_1194  [color=blue, key=0, style=bold];
m5_1202 -> m5_1203  [key=0, style=solid];
m5_1202 -> m5_27  [key=2, style=dotted];
m5_1201 -> m5_1202  [key=0, style=solid];
m5_1203 -> m5_1201  [color=blue, key=0, style=bold];
m5_1209 -> m5_1210  [key=0, style=solid];
m5_1209 -> m5_27  [key=2, style=dotted];
m5_1208 -> m5_1209  [key=0, style=solid];
m5_1210 -> m5_1208  [color=blue, key=0, style=bold];
m5_1216 -> m5_1217  [key=0, style=solid];
m5_1216 -> m5_27  [key=2, style=dotted];
m5_1215 -> m5_1216  [key=0, style=solid];
m5_1217 -> m5_1215  [color=blue, key=0, style=bold];
m5_1223 -> m5_1224  [key=0, style=solid];
m5_1223 -> m5_27  [key=2, style=dotted];
m5_1222 -> m5_1223  [key=0, style=solid];
m5_1224 -> m5_1222  [color=blue, key=0, style=bold];
m5_1230 -> m5_1231  [key=0, style=solid];
m5_1230 -> m5_27  [key=2, style=dotted];
m5_1229 -> m5_1230  [key=0, style=solid];
m5_1231 -> m5_1229  [color=blue, key=0, style=bold];
m5_1332 -> m5_1333  [key=0, style=solid];
m5_1332 -> m5_27  [key=2, style=dotted];
m5_1331 -> m5_1332  [key=0, style=solid];
m5_1333 -> m5_1331  [color=blue, key=0, style=bold];
m5_1340 -> m5_1341  [key=0, style=solid];
m5_1340 -> m5_27  [key=2, style=dotted];
m5_1339 -> m5_1340  [key=0, style=solid];
m5_1341 -> m5_1339  [color=blue, key=0, style=bold];
m5_1371 -> m5_1372  [key=0, style=solid];
m5_1371 -> m5_27  [key=2, style=dotted];
m5_1370 -> m5_1371  [key=0, style=solid];
m5_1372 -> m5_1370  [color=blue, key=0, style=bold];
m5_1388 -> m5_1389  [key=0, style=solid];
m5_1388 -> m5_27  [key=2, style=dotted];
m5_1388 -> m5_28  [key=2, style=dotted];
m5_1387 -> m5_1388  [key=0, style=solid];
m5_1389 -> m5_1387  [color=blue, key=0, style=bold];
m5_1489 -> m5_1490  [key=0, style=solid];
m5_1489 -> m5_122  [key=2, style=dotted];
m5_1488 -> m5_1489  [key=0, style=solid];
m5_1490 -> m5_1488  [color=blue, key=0, style=bold];
m5_1545 -> m5_1546  [key=0, style=solid];
m5_1545 -> m5_27  [key=2, style=dotted];
m5_1545 -> m5_28  [key=2, style=dotted];
m5_1544 -> m5_1545  [key=0, style=solid];
m5_1546 -> m5_1544  [color=blue, key=0, style=bold];
m5_1577 -> m5_1578  [key=0, style=solid];
m5_1577 -> m5_27  [key=2, style=dotted];
m5_1577 -> m5_28  [key=2, style=dotted];
m5_1580 -> m5_1581  [key=0, style=solid];
m5_1580 -> m5_27  [key=2, style=dotted];
m5_1580 -> m5_28  [key=2, style=dotted];
m5_1576 -> m5_1577  [key=0, style=solid];
m5_1579 -> m5_1580  [key=0, style=solid];
m5_1578 -> m5_1576  [color=blue, key=0, style=bold];
m5_1581 -> m5_1579  [color=blue, key=0, style=bold];
m5_1702 -> m5_1703  [key=0, style=solid];
m5_1702 -> m5_27  [key=2, style=dotted];
m5_1705 -> m5_1706  [key=0, style=solid];
m5_1705 -> m5_27  [key=2, style=dotted];
m5_1708 -> m5_1709  [key=0, style=solid];
m5_1708 -> m5_27  [key=2, style=dotted];
m5_1711 -> m5_1712  [key=0, style=solid];
m5_1711 -> m5_27  [key=2, style=dotted];
m5_1714 -> m5_1715  [key=0, style=solid];
m5_1714 -> m5_27  [key=2, style=dotted];
m5_1717 -> m5_1718  [key=0, style=solid];
m5_1717 -> m5_27  [key=2, style=dotted];
m5_1701 -> m5_1702  [key=0, style=solid];
m5_1704 -> m5_1705  [key=0, style=solid];
m5_1707 -> m5_1708  [key=0, style=solid];
m5_1710 -> m5_1711  [key=0, style=solid];
m5_1713 -> m5_1714  [key=0, style=solid];
m5_1703 -> m5_1701  [color=blue, key=0, style=bold];
m5_1706 -> m5_1704  [color=blue, key=0, style=bold];
m5_1709 -> m5_1707  [color=blue, key=0, style=bold];
m5_1712 -> m5_1710  [color=blue, key=0, style=bold];
m5_1715 -> m5_1713  [color=blue, key=0, style=bold];
m5_1718 -> m5_1716  [color=blue, key=0, style=bold];
m5_1272 -> m5_1273  [key=0, style=solid];
m5_1273 -> m5_1274  [key=0, style=solid];
m5_1274 -> m5_1275  [key=0, style=solid];
m5_1274 -> m5_25  [key=2, style=dotted];
m5_1274 -> m5_26  [key=2, style=dotted];
m5_1274 -> m5_1277  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1274 -> m5_1279  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1274 -> m5_1280  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1274 -> m5_1281  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1275 -> m5_1276  [key=0, style=solid];
m5_1275 -> m5_1278  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_1277 -> m5_1278  [key=0, style=solid];
m5_1277 -> m5_27  [key=2, style=dotted];
m5_1277 -> m5_28  [key=2, style=dotted];
m5_1279 -> m5_1280  [key=0, style=solid];
m5_1279 -> m5_27  [key=2, style=dotted];
m5_1279 -> m5_28  [key=2, style=dotted];
m5_1280 -> m5_1281  [key=0, style=solid];
m5_1280 -> m5_29  [key=2, style=dotted];
m5_1281 -> m5_1282  [key=0, style=solid];
m5_1281 -> m5_27  [key=2, style=dotted];
m5_1281 -> m5_115  [key=2, style=dotted];
m5_1276 -> m5_1277  [key=0, style=solid];
m5_1276 -> m5_1279  [key=0, style=solid];
m5_1278 -> m5_1276  [key=0, style=solid];
m5_1278 -> m5_1278  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_1282 -> m5_1272  [color=blue, key=0, style=bold];
m5_1413 -> m5_1414  [key=0, style=solid];
m5_1414 -> m5_1415  [key=0, style=solid];
m5_1415 -> m5_1416  [key=0, style=solid];
m5_1415 -> m5_25  [key=2, style=dotted];
m5_1415 -> m5_100  [key=2, style=dotted];
m5_1415 -> m5_141  [key=2, style=dotted];
m5_1415 -> m5_142  [key=2, style=dotted];
m5_1415 -> m5_1417  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1415 -> m5_1418  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1415 -> m5_1419  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1415 -> m5_1420  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1415 -> m5_1421  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1415 -> m5_1422  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1415 -> m5_1423  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1415 -> m5_1424  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1415 -> m5_1425  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1415 -> m5_1426  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1415 -> m5_1427  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1415 -> m5_1428  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1415 -> m5_1429  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1415 -> m5_1430  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1415 -> m5_1431  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1415 -> m5_1432  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1415 -> m5_1433  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1415 -> m5_1434  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1415 -> m5_1435  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1415 -> m5_1436  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1415 -> m5_1437  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1415 -> m5_1438  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1415 -> m5_1439  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1415 -> m5_1440  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1415 -> m5_1441  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1415 -> m5_1442  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1415 -> m5_1443  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1415 -> m5_1444  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1415 -> m5_1445  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1415 -> m5_1446  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1415 -> m5_1447  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1415 -> m5_1448  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1415 -> m5_1449  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1415 -> m5_1450  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1416 -> m5_1417  [key=0, style=solid];
m5_1416 -> m5_27  [key=2, style=dotted];
m5_1416 -> m5_28  [key=2, style=dotted];
m5_1417 -> m5_1418  [key=0, style=solid];
m5_1417 -> m5_29  [key=2, style=dotted];
m5_1418 -> m5_1419  [key=0, style=solid];
m5_1418 -> m5_27  [key=2, style=dotted];
m5_1418 -> m5_28  [key=2, style=dotted];
m5_1419 -> m5_1420  [key=0, style=solid];
m5_1419 -> m5_29  [key=2, style=dotted];
m5_1420 -> m5_1421  [key=0, style=solid];
m5_1420 -> m5_27  [key=2, style=dotted];
m5_1420 -> m5_28  [key=2, style=dotted];
m5_1421 -> m5_1422  [key=0, style=solid];
m5_1421 -> m5_29  [key=2, style=dotted];
m5_1422 -> m5_1423  [key=0, style=solid];
m5_1422 -> m5_27  [key=2, style=dotted];
m5_1422 -> m5_28  [key=2, style=dotted];
m5_1423 -> m5_1424  [key=0, style=solid];
m5_1423 -> m5_29  [key=2, style=dotted];
m5_1424 -> m5_1425  [key=0, style=solid];
m5_1424 -> m5_29  [key=2, style=dotted];
m5_1425 -> m5_1426  [key=0, style=solid];
m5_1425 -> m5_27  [key=2, style=dotted];
m5_1425 -> m5_28  [key=2, style=dotted];
m5_1426 -> m5_1427  [key=0, style=solid];
m5_1426 -> m5_29  [key=2, style=dotted];
m5_1427 -> m5_1428  [key=0, style=solid];
m5_1427 -> m5_27  [key=2, style=dotted];
m5_1427 -> m5_28  [key=2, style=dotted];
m5_1428 -> m5_1429  [key=0, style=solid];
m5_1428 -> m5_29  [key=2, style=dotted];
m5_1429 -> m5_1430  [key=0, style=solid];
m5_1429 -> m5_29  [key=2, style=dotted];
m5_1430 -> m5_1431  [key=0, style=solid];
m5_1430 -> m5_27  [key=2, style=dotted];
m5_1430 -> m5_28  [key=2, style=dotted];
m5_1431 -> m5_1432  [key=0, style=solid];
m5_1431 -> m5_29  [key=2, style=dotted];
m5_1432 -> m5_1433  [key=0, style=solid];
m5_1432 -> m5_27  [key=2, style=dotted];
m5_1432 -> m5_28  [key=2, style=dotted];
m5_1433 -> m5_1434  [key=0, style=solid];
m5_1433 -> m5_29  [key=2, style=dotted];
m5_1434 -> m5_1435  [key=0, style=solid];
m5_1434 -> m5_27  [key=2, style=dotted];
m5_1434 -> m5_28  [key=2, style=dotted];
m5_1435 -> m5_1436  [key=0, style=solid];
m5_1435 -> m5_29  [key=2, style=dotted];
m5_1436 -> m5_1437  [key=0, style=solid];
m5_1436 -> m5_29  [key=2, style=dotted];
m5_1437 -> m5_1438  [key=0, style=solid];
m5_1437 -> m5_27  [key=2, style=dotted];
m5_1437 -> m5_28  [key=2, style=dotted];
m5_1438 -> m5_1439  [key=0, style=solid];
m5_1438 -> m5_29  [key=2, style=dotted];
m5_1439 -> m5_1440  [key=0, style=solid];
m5_1439 -> m5_27  [key=2, style=dotted];
m5_1439 -> m5_28  [key=2, style=dotted];
m5_1440 -> m5_1441  [key=0, style=solid];
m5_1440 -> m5_29  [key=2, style=dotted];
m5_1441 -> m5_1442  [key=0, style=solid];
m5_1441 -> m5_29  [key=2, style=dotted];
m5_1442 -> m5_1443  [key=0, style=solid];
m5_1442 -> m5_29  [key=2, style=dotted];
m5_1443 -> m5_1444  [key=0, style=solid];
m5_1443 -> m5_27  [key=2, style=dotted];
m5_1443 -> m5_28  [key=2, style=dotted];
m5_1444 -> m5_1445  [key=0, style=solid];
m5_1444 -> m5_29  [key=2, style=dotted];
m5_1445 -> m5_1446  [key=0, style=solid];
m5_1445 -> m5_27  [key=2, style=dotted];
m5_1445 -> m5_28  [key=2, style=dotted];
m5_1446 -> m5_1447  [key=0, style=solid];
m5_1446 -> m5_29  [key=2, style=dotted];
m5_1447 -> m5_1448  [key=0, style=solid];
m5_1447 -> m5_27  [key=2, style=dotted];
m5_1447 -> m5_28  [key=2, style=dotted];
m5_1448 -> m5_1449  [key=0, style=solid];
m5_1448 -> m5_29  [key=2, style=dotted];
m5_1449 -> m5_1450  [key=0, style=solid];
m5_1449 -> m5_27  [key=2, style=dotted];
m5_1449 -> m5_28  [key=2, style=dotted];
m5_1450 -> m5_1451  [key=0, style=solid];
m5_1450 -> m5_29  [key=2, style=dotted];
m5_1451 -> m5_1413  [color=blue, key=0, style=bold];
m5_1010 -> m5_1011  [key=0, style=solid];
m5_1011 -> m5_1012  [key=0, style=solid];
m5_1011 -> m5_25  [key=2, style=dotted];
m5_1011 -> m5_26  [key=2, style=dotted];
m5_1011 -> m5_1015  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1012 -> m5_1013  [key=0, style=solid];
m5_1012 -> m5_39  [key=2, style=dotted];
m5_1012 -> m5_1014  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_1013 -> m5_1010  [color=blue, key=0, style=bold];
m5_1491 -> m5_1492  [key=0, style=solid];
m5_1492 -> m5_1493  [key=0, style=solid];
m5_1493 -> m5_1494  [key=0, style=solid];
m5_1493 -> m5_1534  [key=2, style=dotted];
m5_1493 -> m5_1495  [color=darkseagreen4, key=1, label=d, style=dashed];
m5_1494 -> m5_1495  [key=0, style=solid];
m5_1494 -> m5_1156  [key=2, style=dotted];
m5_1494 -> m5_1535  [key=2, style=dotted];
m5_1494 -> m5_1536  [key=2, style=dotted];
m5_1495 -> m5_1496  [key=0, style=solid];
m5_1495 -> m5_1537  [key=2, style=dotted];
m5_1495 -> m5_1536  [key=2, style=dotted];
m5_1496 -> m5_1497  [key=0, style=solid];
m5_1496 -> m5_1515  [color=darkseagreen4, key=1, label=json, style=dashed];
m5_1497 -> m5_1498  [key=0, style=solid];
m5_1497 -> m5_25  [key=2, style=dotted];
m5_1497 -> m5_26  [key=2, style=dotted];
m5_1497 -> m5_1499  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1497 -> m5_1500  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1497 -> m5_1501  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1497 -> m5_1502  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1497 -> m5_1503  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1497 -> m5_1504  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1497 -> m5_1505  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1497 -> m5_1506  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1497 -> m5_1507  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1497 -> m5_1508  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1497 -> m5_1509  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1497 -> m5_1510  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1497 -> m5_1511  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1497 -> m5_1512  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1497 -> m5_1513  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1497 -> m5_1514  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1515 -> m5_1516  [key=0, style=solid];
m5_1515 -> m5_25  [key=2, style=dotted];
m5_1515 -> m5_26  [key=2, style=dotted];
m5_1515 -> m5_1517  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1515 -> m5_1518  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1515 -> m5_1519  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1515 -> m5_1520  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1515 -> m5_1521  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1515 -> m5_1522  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1515 -> m5_1523  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1515 -> m5_1524  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1515 -> m5_1525  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1515 -> m5_1526  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1515 -> m5_1527  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1515 -> m5_1528  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1515 -> m5_1529  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1515 -> m5_1530  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1515 -> m5_1531  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1515 -> m5_1532  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1498 -> m5_1499  [key=0, style=solid];
m5_1498 -> m5_27  [key=2, style=dotted];
m5_1499 -> m5_1500  [key=0, style=solid];
m5_1499 -> m5_27  [key=2, style=dotted];
m5_1500 -> m5_1501  [key=0, style=solid];
m5_1500 -> m5_29  [key=2, style=dotted];
m5_1501 -> m5_1502  [key=0, style=solid];
m5_1501 -> m5_29  [key=2, style=dotted];
m5_1502 -> m5_1503  [key=0, style=solid];
m5_1502 -> m5_27  [key=2, style=dotted];
m5_1503 -> m5_1504  [key=0, style=solid];
m5_1503 -> m5_29  [key=2, style=dotted];
m5_1504 -> m5_1505  [key=0, style=solid];
m5_1504 -> m5_29  [key=2, style=dotted];
m5_1505 -> m5_1506  [key=0, style=solid];
m5_1505 -> m5_27  [key=2, style=dotted];
m5_1506 -> m5_1507  [key=0, style=solid];
m5_1506 -> m5_29  [key=2, style=dotted];
m5_1507 -> m5_1508  [key=0, style=solid];
m5_1507 -> m5_29  [key=2, style=dotted];
m5_1508 -> m5_1509  [key=0, style=solid];
m5_1508 -> m5_27  [key=2, style=dotted];
m5_1509 -> m5_1510  [key=0, style=solid];
m5_1509 -> m5_29  [key=2, style=dotted];
m5_1510 -> m5_1511  [key=0, style=solid];
m5_1510 -> m5_29  [key=2, style=dotted];
m5_1511 -> m5_1512  [key=0, style=solid];
m5_1511 -> m5_27  [key=2, style=dotted];
m5_1512 -> m5_1513  [key=0, style=solid];
m5_1512 -> m5_29  [key=2, style=dotted];
m5_1513 -> m5_1514  [key=0, style=solid];
m5_1513 -> m5_29  [key=2, style=dotted];
m5_1514 -> m5_1515  [key=0, style=solid];
m5_1514 -> m5_27  [key=2, style=dotted];
m5_1516 -> m5_1517  [key=0, style=solid];
m5_1516 -> m5_27  [key=2, style=dotted];
m5_1517 -> m5_1518  [key=0, style=solid];
m5_1517 -> m5_963  [key=2, style=dotted];
m5_1518 -> m5_1519  [key=0, style=solid];
m5_1518 -> m5_29  [key=2, style=dotted];
m5_1519 -> m5_1520  [key=0, style=solid];
m5_1519 -> m5_29  [key=2, style=dotted];
m5_1520 -> m5_1521  [key=0, style=solid];
m5_1520 -> m5_963  [key=2, style=dotted];
m5_1521 -> m5_1522  [key=0, style=solid];
m5_1521 -> m5_29  [key=2, style=dotted];
m5_1522 -> m5_1523  [key=0, style=solid];
m5_1522 -> m5_29  [key=2, style=dotted];
m5_1523 -> m5_1524  [key=0, style=solid];
m5_1523 -> m5_963  [key=2, style=dotted];
m5_1524 -> m5_1525  [key=0, style=solid];
m5_1524 -> m5_29  [key=2, style=dotted];
m5_1525 -> m5_1526  [key=0, style=solid];
m5_1525 -> m5_29  [key=2, style=dotted];
m5_1526 -> m5_1527  [key=0, style=solid];
m5_1526 -> m5_963  [key=2, style=dotted];
m5_1527 -> m5_1528  [key=0, style=solid];
m5_1527 -> m5_29  [key=2, style=dotted];
m5_1528 -> m5_1529  [key=0, style=solid];
m5_1528 -> m5_29  [key=2, style=dotted];
m5_1529 -> m5_1530  [key=0, style=solid];
m5_1529 -> m5_963  [key=2, style=dotted];
m5_1530 -> m5_1531  [key=0, style=solid];
m5_1530 -> m5_29  [key=2, style=dotted];
m5_1531 -> m5_1532  [key=0, style=solid];
m5_1531 -> m5_29  [key=2, style=dotted];
m5_1532 -> m5_1533  [key=0, style=solid];
m5_1532 -> m5_27  [key=2, style=dotted];
m5_1533 -> m5_1491  [color=blue, key=0, style=bold];
m5_1771 -> m5_1772  [key=0, style=solid];
m5_1772 -> m5_1773  [key=0, style=solid];
m5_1772 -> m5_1767  [key=2, style=dotted];
m5_1773 -> m5_1771  [color=blue, key=0, style=bold];
m5_950 -> m5_951  [key=0, style=solid];
m5_951 -> m5_952  [key=0, style=solid];
m5_951 -> m5_25  [key=2, style=dotted];
m5_951 -> m5_26  [key=2, style=dotted];
m5_951 -> m5_953  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_951 -> m5_956  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_952 -> m5_953  [key=0, style=solid];
m5_952 -> m5_27  [key=2, style=dotted];
m5_953 -> m5_954  [key=0, style=solid];
m5_953 -> m5_39  [key=2, style=dotted];
m5_953 -> m5_955  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_954 -> m5_950  [color=blue, key=0, style=bold];
m5_1109 -> m5_1110  [key=0, style=solid];
m5_1110 -> m5_1111  [key=0, style=solid];
m5_1111 -> m5_1112  [key=0, style=solid];
m5_1111 -> m5_25  [key=2, style=dotted];
m5_1111 -> m5_26  [key=2, style=dotted];
m5_1111 -> m5_1113  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1111 -> m5_1114  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1111 -> m5_1115  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1111 -> m5_1116  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1111 -> m5_1117  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1111 -> m5_1118  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1111 -> m5_1119  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1111 -> m5_1120  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1111 -> m5_1121  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1112 -> m5_1113  [key=0, style=solid];
m5_1112 -> m5_27  [key=2, style=dotted];
m5_1112 -> m5_28  [key=2, style=dotted];
m5_1113 -> m5_1114  [key=0, style=solid];
m5_1113 -> m5_29  [key=2, style=dotted];
m5_1114 -> m5_1115  [key=0, style=solid];
m5_1114 -> m5_27  [key=2, style=dotted];
m5_1114 -> m5_28  [key=2, style=dotted];
m5_1115 -> m5_1116  [key=0, style=solid];
m5_1115 -> m5_29  [key=2, style=dotted];
m5_1116 -> m5_1117  [key=0, style=solid];
m5_1116 -> m5_981  [key=2, style=dotted];
m5_1117 -> m5_1118  [key=0, style=solid];
m5_1117 -> m5_29  [key=2, style=dotted];
m5_1118 -> m5_1119  [key=0, style=solid];
m5_1118 -> m5_29  [key=2, style=dotted];
m5_1119 -> m5_1120  [key=0, style=solid];
m5_1119 -> m5_1066  [key=2, style=dotted];
m5_1119 -> m5_1067  [key=2, style=dotted];
m5_1119 -> m5_1068  [key=2, style=dotted];
m5_1119 -> m5_1123  [key=2, style=dotted];
m5_1119 -> m5_1124  [key=2, style=dotted];
m5_1119 -> m5_29  [key=2, style=dotted];
m5_1120 -> m5_1121  [key=0, style=solid];
m5_1120 -> m5_27  [key=2, style=dotted];
m5_1120 -> m5_28  [key=2, style=dotted];
m5_1121 -> m5_1122  [key=0, style=solid];
m5_1121 -> m5_29  [key=2, style=dotted];
m5_1122 -> m5_1109  [color=blue, key=0, style=bold];
m5_174 -> m5_175  [key=0, style=solid];
m5_175 -> m5_176  [key=0, style=solid];
m5_176 -> m5_177  [key=0, style=solid];
m5_176 -> m5_25  [key=2, style=dotted];
m5_176 -> m5_26  [key=2, style=dotted];
m5_176 -> m5_180  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_177 -> m5_178  [key=0, style=solid];
m5_177 -> m5_39  [key=2, style=dotted];
m5_177 -> m5_179  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_178 -> m5_174  [color=blue, key=0, style=bold];
m5_351 -> m5_352  [key=0, style=solid];
m5_352 -> m5_353  [key=0, style=solid];
m5_352 -> m5_357  [color=darkseagreen4, key=1, label=valueCount, style=dashed];
m5_352 -> m5_365  [color=darkseagreen4, key=1, label=valueCount, style=dashed];
m5_353 -> m5_354  [key=0, style=solid];
m5_353 -> m5_372  [key=2, style=dotted];
m5_353 -> m5_361  [color=darkseagreen4, key=1, label=sw, style=dashed];
m5_357 -> m5_358  [key=0, style=solid];
m5_357 -> m5_360  [key=0, style=solid];
m5_365 -> m5_366  [key=0, style=solid];
m5_365 -> m5_369  [key=0, style=solid];
m5_354 -> m5_355  [key=0, style=solid];
m5_354 -> m5_373  [key=2, style=dotted];
m5_354 -> m5_358  [color=darkseagreen4, key=1, label=writer, style=dashed];
m5_354 -> m5_360  [color=darkseagreen4, key=1, label=writer, style=dashed];
m5_361 -> m5_362  [key=0, style=solid];
m5_361 -> m5_377  [key=2, style=dotted];
m5_355 -> m5_356  [key=0, style=solid];
m5_355 -> m5_374  [key=2, style=dotted];
m5_358 -> m5_359  [key=0, style=solid];
m5_358 -> m5_375  [key=2, style=dotted];
m5_360 -> m5_361  [key=0, style=solid];
m5_360 -> m5_376  [key=2, style=dotted];
m5_356 -> m5_357  [key=0, style=solid];
m5_356 -> m5_358  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_356 -> m5_359  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_359 -> m5_357  [key=0, style=solid];
m5_359 -> m5_359  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_362 -> m5_363  [key=0, style=solid];
m5_362 -> m5_25  [key=2, style=dotted];
m5_362 -> m5_26  [key=2, style=dotted];
m5_362 -> m5_366  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_362 -> m5_367  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_362 -> m5_369  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_362 -> m5_370  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_363 -> m5_364  [key=0, style=solid];
m5_363 -> m5_27  [key=2, style=dotted];
m5_363 -> m5_28  [key=2, style=dotted];
m5_366 -> m5_367  [key=0, style=solid];
m5_366 -> m5_27  [key=2, style=dotted];
m5_366 -> m5_28  [key=2, style=dotted];
m5_367 -> m5_368  [key=0, style=solid];
m5_367 -> m5_29  [key=2, style=dotted];
m5_369 -> m5_370  [key=0, style=solid];
m5_369 -> m5_27  [key=2, style=dotted];
m5_369 -> m5_28  [key=2, style=dotted];
m5_370 -> m5_371  [key=0, style=solid];
m5_370 -> m5_27  [key=2, style=dotted];
m5_370 -> m5_115  [key=2, style=dotted];
m5_364 -> m5_365  [key=0, style=solid];
m5_364 -> m5_367  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_364 -> m5_368  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_368 -> m5_365  [key=0, style=solid];
m5_368 -> m5_368  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_371 -> m5_351  [color=blue, key=0, style=bold];
m5_1083 -> m5_1084  [key=0, style=solid];
m5_1084 -> m5_1085  [key=0, style=solid];
m5_1085 -> m5_1086  [key=0, style=solid];
m5_1085 -> m5_25  [key=2, style=dotted];
m5_1085 -> m5_26  [key=2, style=dotted];
m5_1085 -> m5_1087  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1085 -> m5_1088  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1085 -> m5_1089  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1085 -> m5_1090  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1085 -> m5_1093  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1086 -> m5_1087  [key=0, style=solid];
m5_1086 -> m5_27  [key=2, style=dotted];
m5_1086 -> m5_28  [key=2, style=dotted];
m5_1087 -> m5_1088  [key=0, style=solid];
m5_1087 -> m5_29  [key=2, style=dotted];
m5_1088 -> m5_1089  [key=0, style=solid];
m5_1088 -> m5_27  [key=2, style=dotted];
m5_1088 -> m5_28  [key=2, style=dotted];
m5_1089 -> m5_1090  [key=0, style=solid];
m5_1089 -> m5_29  [key=2, style=dotted];
m5_1090 -> m5_1091  [key=0, style=solid];
m5_1090 -> m5_39  [key=2, style=dotted];
m5_1090 -> m5_1092  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_1091 -> m5_1083  [color=blue, key=0, style=bold];
m5_982 -> m5_983  [key=0, style=solid];
m5_983 -> m5_984  [key=0, style=solid];
m5_983 -> m5_25  [key=2, style=dotted];
m5_983 -> m5_26  [key=2, style=dotted];
m5_983 -> m5_987  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_984 -> m5_985  [key=0, style=solid];
m5_984 -> m5_39  [key=2, style=dotted];
m5_984 -> m5_986  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_985 -> m5_982  [color=blue, key=0, style=bold];
m5_101 -> m5_102  [key=0, style=solid];
m5_102 -> m5_103  [key=0, style=solid];
m5_102 -> m5_113  [key=2, style=dotted];
m5_102 -> m5_104  [color=darkseagreen4, key=1, label=ms, style=dashed];
m5_102 -> m5_106  [color=darkseagreen4, key=1, label=ms, style=dashed];
m5_103 -> m5_104  [key=0, style=solid];
m5_103 -> m5_25  [key=2, style=dotted];
m5_103 -> m5_100  [key=2, style=dotted];
m5_103 -> m5_105  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_104 -> m5_105  [key=0, style=solid];
m5_104 -> m5_28  [key=2, style=dotted];
m5_106 -> m5_107  [key=0, style=solid];
m5_106 -> m5_115  [key=2, style=dotted];
m5_105 -> m5_106  [key=0, style=solid];
m5_105 -> m5_114  [key=2, style=dotted];
m5_107 -> m5_108  [key=0, style=solid];
m5_107 -> m5_113  [key=2, style=dotted];
m5_107 -> m5_109  [color=darkseagreen4, key=1, label=ms, style=dashed];
m5_107 -> m5_111  [color=darkseagreen4, key=1, label=ms, style=dashed];
m5_108 -> m5_109  [key=0, style=solid];
m5_108 -> m5_25  [key=2, style=dotted];
m5_108 -> m5_100  [key=2, style=dotted];
m5_108 -> m5_110  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_109 -> m5_110  [key=0, style=solid];
m5_109 -> m5_28  [key=2, style=dotted];
m5_111 -> m5_112  [key=0, style=solid];
m5_111 -> m5_28  [key=2, style=dotted];
m5_110 -> m5_111  [key=0, style=solid];
m5_110 -> m5_114  [key=2, style=dotted];
m5_112 -> m5_101  [color=blue, key=0, style=bold];
m5_1039 -> m5_1040  [key=0, style=solid];
m5_1040 -> m5_1041  [key=0, style=solid];
m5_1041 -> m5_1042  [key=0, style=solid];
m5_1041 -> m5_25  [key=2, style=dotted];
m5_1041 -> m5_26  [key=2, style=dotted];
m5_1041 -> m5_1043  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1041 -> m5_1044  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1041 -> m5_1045  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1041 -> m5_1046  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1041 -> m5_1047  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1041 -> m5_1048  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1041 -> m5_1049  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1041 -> m5_1050  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1042 -> m5_1043  [key=0, style=solid];
m5_1042 -> m5_27  [key=2, style=dotted];
m5_1042 -> m5_28  [key=2, style=dotted];
m5_1043 -> m5_1044  [key=0, style=solid];
m5_1043 -> m5_29  [key=2, style=dotted];
m5_1044 -> m5_1045  [key=0, style=solid];
m5_1044 -> m5_27  [key=2, style=dotted];
m5_1044 -> m5_28  [key=2, style=dotted];
m5_1045 -> m5_1046  [key=0, style=solid];
m5_1045 -> m5_29  [key=2, style=dotted];
m5_1046 -> m5_1047  [key=0, style=solid];
m5_1046 -> m5_27  [key=2, style=dotted];
m5_1046 -> m5_28  [key=2, style=dotted];
m5_1047 -> m5_1048  [key=0, style=solid];
m5_1047 -> m5_29  [key=2, style=dotted];
m5_1048 -> m5_1049  [key=0, style=solid];
m5_1048 -> m5_29  [key=2, style=dotted];
m5_1049 -> m5_1050  [key=0, style=solid];
m5_1049 -> m5_27  [key=2, style=dotted];
m5_1049 -> m5_28  [key=2, style=dotted];
m5_1050 -> m5_1051  [key=0, style=solid];
m5_1050 -> m5_29  [key=2, style=dotted];
m5_1051 -> m5_1039  [color=blue, key=0, style=bold];
m5_1095 -> m5_1096  [key=0, style=solid];
m5_1096 -> m5_1097  [key=0, style=solid];
m5_1097 -> m5_1098  [key=0, style=solid];
m5_1097 -> m5_25  [key=2, style=dotted];
m5_1097 -> m5_26  [key=2, style=dotted];
m5_1097 -> m5_1099  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1097 -> m5_1100  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1097 -> m5_1101  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1097 -> m5_1102  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1097 -> m5_1103  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1097 -> m5_1104  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1097 -> m5_1105  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1097 -> m5_1106  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1097 -> m5_1107  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1098 -> m5_1099  [key=0, style=solid];
m5_1098 -> m5_27  [key=2, style=dotted];
m5_1098 -> m5_28  [key=2, style=dotted];
m5_1099 -> m5_1100  [key=0, style=solid];
m5_1099 -> m5_29  [key=2, style=dotted];
m5_1100 -> m5_1101  [key=0, style=solid];
m5_1100 -> m5_27  [key=2, style=dotted];
m5_1100 -> m5_28  [key=2, style=dotted];
m5_1101 -> m5_1102  [key=0, style=solid];
m5_1101 -> m5_29  [key=2, style=dotted];
m5_1102 -> m5_1103  [key=0, style=solid];
m5_1102 -> m5_981  [key=2, style=dotted];
m5_1103 -> m5_1104  [key=0, style=solid];
m5_1103 -> m5_29  [key=2, style=dotted];
m5_1104 -> m5_1105  [key=0, style=solid];
m5_1104 -> m5_29  [key=2, style=dotted];
m5_1105 -> m5_1106  [key=0, style=solid];
m5_1105 -> m5_1066  [key=2, style=dotted];
m5_1105 -> m5_1067  [key=2, style=dotted];
m5_1105 -> m5_1068  [key=2, style=dotted];
m5_1105 -> m5_29  [key=2, style=dotted];
m5_1106 -> m5_1107  [key=0, style=solid];
m5_1106 -> m5_27  [key=2, style=dotted];
m5_1106 -> m5_28  [key=2, style=dotted];
m5_1107 -> m5_1108  [key=0, style=solid];
m5_1107 -> m5_29  [key=2, style=dotted];
m5_1108 -> m5_1095  [color=blue, key=0, style=bold];
m5_337 -> m5_338  [key=0, style=solid];
m5_338 -> m5_339  [key=0, style=solid];
m5_338 -> m5_25  [key=2, style=dotted];
m5_338 -> m5_26  [key=2, style=dotted];
m5_338 -> m5_342  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_339 -> m5_340  [key=0, style=solid];
m5_339 -> m5_39  [key=2, style=dotted];
m5_339 -> m5_341  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_340 -> m5_337  [color=blue, key=0, style=bold];
m5_1326 -> m5_1327  [key=0, style=solid];
m5_1327 -> m5_1328  [key=0, style=solid];
m5_1328 -> m5_1329  [key=0, style=solid];
m5_1328 -> m5_25  [key=2, style=dotted];
m5_1328 -> m5_26  [key=2, style=dotted];
m5_1328 -> m5_1332  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1329 -> m5_1330  [key=0, style=solid];
m5_1329 -> m5_39  [key=2, style=dotted];
m5_1329 -> m5_1331  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_1330 -> m5_1326  [color=blue, key=0, style=bold];
m5_1623 -> m5_1624  [key=0, style=solid];
m5_1624 -> m5_1625  [key=0, style=solid];
m5_1624 -> m5_1635  [color=darkseagreen4, key=1, label=json, style=dashed];
m5_1624 -> m5_1645  [color=darkseagreen4, key=1, label=json, style=dashed];
m5_1624 -> m5_1655  [color=darkseagreen4, key=1, label=json, style=dashed];
m5_1624 -> m5_1665  [color=darkseagreen4, key=1, label=json, style=dashed];
m5_1625 -> m5_1626  [key=0, style=solid];
m5_1625 -> m5_25  [key=2, style=dotted];
m5_1625 -> m5_26  [key=2, style=dotted];
m5_1625 -> m5_1627  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1625 -> m5_1628  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1625 -> m5_1629  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1625 -> m5_1630  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1625 -> m5_1631  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1625 -> m5_1632  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1625 -> m5_1633  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1625 -> m5_1634  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1635 -> m5_1636  [key=0, style=solid];
m5_1635 -> m5_25  [key=2, style=dotted];
m5_1635 -> m5_26  [key=2, style=dotted];
m5_1635 -> m5_1637  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1635 -> m5_1638  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1635 -> m5_1639  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1635 -> m5_1640  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1635 -> m5_1641  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1635 -> m5_1642  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1635 -> m5_1643  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1635 -> m5_1644  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1645 -> m5_1646  [key=0, style=solid];
m5_1645 -> m5_25  [key=2, style=dotted];
m5_1645 -> m5_26  [key=2, style=dotted];
m5_1645 -> m5_1647  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1645 -> m5_1648  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1645 -> m5_1649  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1645 -> m5_1650  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1645 -> m5_1651  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1645 -> m5_1652  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1645 -> m5_1653  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1645 -> m5_1654  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1655 -> m5_1656  [key=0, style=solid];
m5_1655 -> m5_25  [key=2, style=dotted];
m5_1655 -> m5_26  [key=2, style=dotted];
m5_1655 -> m5_1657  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1655 -> m5_1658  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1655 -> m5_1659  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1655 -> m5_1660  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1655 -> m5_1661  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1655 -> m5_1662  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1655 -> m5_1663  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1655 -> m5_1664  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1665 -> m5_1666  [key=0, style=solid];
m5_1665 -> m5_25  [key=2, style=dotted];
m5_1665 -> m5_26  [key=2, style=dotted];
m5_1665 -> m5_1667  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1665 -> m5_1668  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1665 -> m5_1669  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1665 -> m5_1670  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1665 -> m5_1671  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1665 -> m5_1672  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1665 -> m5_1673  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1665 -> m5_1674  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1626 -> m5_1627  [key=0, style=solid];
m5_1627 -> m5_1628  [key=0, style=solid];
m5_1627 -> m5_27  [key=2, style=dotted];
m5_1627 -> m5_28  [key=2, style=dotted];
m5_1628 -> m5_1629  [key=0, style=solid];
m5_1628 -> m5_27  [key=2, style=dotted];
m5_1628 -> m5_28  [key=2, style=dotted];
m5_1629 -> m5_1630  [key=0, style=solid];
m5_1629 -> m5_1676  [key=2, style=dotted];
m5_1629 -> m5_29  [key=2, style=dotted];
m5_1630 -> m5_1631  [key=0, style=solid];
m5_1630 -> m5_29  [key=2, style=dotted];
m5_1631 -> m5_1632  [key=0, style=solid];
m5_1631 -> m5_27  [key=2, style=dotted];
m5_1631 -> m5_28  [key=2, style=dotted];
m5_1632 -> m5_1633  [key=0, style=solid];
m5_1632 -> m5_1676  [key=2, style=dotted];
m5_1632 -> m5_29  [key=2, style=dotted];
m5_1633 -> m5_1634  [key=0, style=solid];
m5_1633 -> m5_29  [key=2, style=dotted];
m5_1634 -> m5_1635  [key=0, style=solid];
m5_1634 -> m5_27  [key=2, style=dotted];
m5_1634 -> m5_28  [key=2, style=dotted];
m5_1636 -> m5_1637  [key=0, style=solid];
m5_1637 -> m5_1638  [key=0, style=solid];
m5_1637 -> m5_27  [key=2, style=dotted];
m5_1637 -> m5_28  [key=2, style=dotted];
m5_1638 -> m5_1639  [key=0, style=solid];
m5_1638 -> m5_27  [key=2, style=dotted];
m5_1638 -> m5_28  [key=2, style=dotted];
m5_1639 -> m5_1640  [key=0, style=solid];
m5_1639 -> m5_1677  [key=2, style=dotted];
m5_1639 -> m5_29  [key=2, style=dotted];
m5_1640 -> m5_1641  [key=0, style=solid];
m5_1640 -> m5_29  [key=2, style=dotted];
m5_1641 -> m5_1642  [key=0, style=solid];
m5_1641 -> m5_27  [key=2, style=dotted];
m5_1641 -> m5_28  [key=2, style=dotted];
m5_1642 -> m5_1643  [key=0, style=solid];
m5_1642 -> m5_1677  [key=2, style=dotted];
m5_1642 -> m5_29  [key=2, style=dotted];
m5_1643 -> m5_1644  [key=0, style=solid];
m5_1643 -> m5_29  [key=2, style=dotted];
m5_1644 -> m5_1645  [key=0, style=solid];
m5_1644 -> m5_27  [key=2, style=dotted];
m5_1644 -> m5_28  [key=2, style=dotted];
m5_1646 -> m5_1647  [key=0, style=solid];
m5_1647 -> m5_1648  [key=0, style=solid];
m5_1647 -> m5_27  [key=2, style=dotted];
m5_1647 -> m5_28  [key=2, style=dotted];
m5_1648 -> m5_1649  [key=0, style=solid];
m5_1648 -> m5_27  [key=2, style=dotted];
m5_1648 -> m5_28  [key=2, style=dotted];
m5_1649 -> m5_1650  [key=0, style=solid];
m5_1649 -> m5_29  [key=2, style=dotted];
m5_1650 -> m5_1651  [key=0, style=solid];
m5_1650 -> m5_29  [key=2, style=dotted];
m5_1651 -> m5_1652  [key=0, style=solid];
m5_1651 -> m5_27  [key=2, style=dotted];
m5_1651 -> m5_28  [key=2, style=dotted];
m5_1652 -> m5_1653  [key=0, style=solid];
m5_1652 -> m5_29  [key=2, style=dotted];
m5_1653 -> m5_1654  [key=0, style=solid];
m5_1653 -> m5_29  [key=2, style=dotted];
m5_1654 -> m5_1655  [key=0, style=solid];
m5_1654 -> m5_27  [key=2, style=dotted];
m5_1654 -> m5_28  [key=2, style=dotted];
m5_1656 -> m5_1657  [key=0, style=solid];
m5_1657 -> m5_1658  [key=0, style=solid];
m5_1657 -> m5_27  [key=2, style=dotted];
m5_1657 -> m5_28  [key=2, style=dotted];
m5_1658 -> m5_1659  [key=0, style=solid];
m5_1658 -> m5_981  [key=2, style=dotted];
m5_1659 -> m5_1660  [key=0, style=solid];
m5_1659 -> m5_1677  [key=2, style=dotted];
m5_1659 -> m5_29  [key=2, style=dotted];
m5_1660 -> m5_1661  [key=0, style=solid];
m5_1660 -> m5_29  [key=2, style=dotted];
m5_1661 -> m5_1662  [key=0, style=solid];
m5_1661 -> m5_981  [key=2, style=dotted];
m5_1662 -> m5_1663  [key=0, style=solid];
m5_1662 -> m5_1677  [key=2, style=dotted];
m5_1662 -> m5_29  [key=2, style=dotted];
m5_1663 -> m5_1664  [key=0, style=solid];
m5_1663 -> m5_29  [key=2, style=dotted];
m5_1664 -> m5_1665  [key=0, style=solid];
m5_1664 -> m5_27  [key=2, style=dotted];
m5_1664 -> m5_28  [key=2, style=dotted];
m5_1666 -> m5_1667  [key=0, style=solid];
m5_1667 -> m5_1668  [key=0, style=solid];
m5_1667 -> m5_27  [key=2, style=dotted];
m5_1667 -> m5_28  [key=2, style=dotted];
m5_1668 -> m5_1669  [key=0, style=solid];
m5_1668 -> m5_1678  [key=2, style=dotted];
m5_1669 -> m5_1670  [key=0, style=solid];
m5_1669 -> m5_1676  [key=2, style=dotted];
m5_1669 -> m5_29  [key=2, style=dotted];
m5_1670 -> m5_1671  [key=0, style=solid];
m5_1670 -> m5_29  [key=2, style=dotted];
m5_1671 -> m5_1672  [key=0, style=solid];
m5_1671 -> m5_1678  [key=2, style=dotted];
m5_1672 -> m5_1673  [key=0, style=solid];
m5_1672 -> m5_1676  [key=2, style=dotted];
m5_1672 -> m5_29  [key=2, style=dotted];
m5_1673 -> m5_1674  [key=0, style=solid];
m5_1673 -> m5_29  [key=2, style=dotted];
m5_1674 -> m5_1675  [key=0, style=solid];
m5_1674 -> m5_27  [key=2, style=dotted];
m5_1674 -> m5_28  [key=2, style=dotted];
m5_1675 -> m5_1623  [color=blue, key=0, style=bold];
m5_77 -> m5_78  [key=0, style=solid];
m5_78 -> m5_79  [key=0, style=solid];
m5_78 -> m5_91  [key=2, style=dotted];
m5_78 -> m5_29  [key=2, style=dotted];
m5_79 -> m5_80  [key=0, style=solid];
m5_79 -> m5_91  [key=2, style=dotted];
m5_79 -> m5_29  [key=2, style=dotted];
m5_80 -> m5_81  [key=0, style=solid];
m5_80 -> m5_91  [key=2, style=dotted];
m5_80 -> m5_29  [key=2, style=dotted];
m5_81 -> m5_82  [key=0, style=solid];
m5_81 -> m5_91  [key=2, style=dotted];
m5_81 -> m5_29  [key=2, style=dotted];
m5_82 -> m5_83  [key=0, style=solid];
m5_82 -> m5_91  [key=2, style=dotted];
m5_82 -> m5_29  [key=2, style=dotted];
m5_83 -> m5_84  [key=0, style=solid];
m5_83 -> m5_91  [key=2, style=dotted];
m5_83 -> m5_29  [key=2, style=dotted];
m5_84 -> m5_85  [key=0, style=solid];
m5_84 -> m5_91  [key=2, style=dotted];
m5_84 -> m5_29  [key=2, style=dotted];
m5_85 -> m5_86  [key=0, style=solid];
m5_85 -> m5_91  [key=2, style=dotted];
m5_85 -> m5_29  [key=2, style=dotted];
m5_86 -> m5_87  [key=0, style=solid];
m5_86 -> m5_91  [key=2, style=dotted];
m5_86 -> m5_29  [key=2, style=dotted];
m5_87 -> m5_88  [key=0, style=solid];
m5_87 -> m5_91  [key=2, style=dotted];
m5_87 -> m5_29  [key=2, style=dotted];
m5_88 -> m5_89  [key=0, style=solid];
m5_88 -> m5_91  [key=2, style=dotted];
m5_88 -> m5_29  [key=2, style=dotted];
m5_89 -> m5_90  [key=0, style=solid];
m5_89 -> m5_91  [key=2, style=dotted];
m5_89 -> m5_29  [key=2, style=dotted];
m5_90 -> m5_77  [color=blue, key=0, style=bold];
m5_976 -> m5_977  [key=0, style=solid];
m5_977 -> m5_978  [key=0, style=solid];
m5_977 -> m5_25  [key=2, style=dotted];
m5_977 -> m5_26  [key=2, style=dotted];
m5_977 -> m5_979  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_978 -> m5_979  [key=0, style=solid];
m5_978 -> m5_981  [key=2, style=dotted];
m5_978 -> m5_535  [key=2, style=dotted];
m5_979 -> m5_980  [key=0, style=solid];
m5_979 -> m5_29  [key=2, style=dotted];
m5_980 -> m5_976  [color=blue, key=0, style=bold];
m5_1754 -> m5_1755  [key=0, style=solid];
m5_1754 -> m5_1758  [color=darkseagreen4, key=1, label="byte[]", style=dashed];
m5_1755 -> m5_1756  [key=0, style=solid];
m5_1755 -> m5_1762  [key=2, style=dotted];
m5_1758 -> m5_1759  [key=0, style=solid];
m5_1758 -> m5_1763  [key=2, style=dotted];
m5_1756 -> m5_1757  [key=0, style=solid];
m5_1756 -> m5_1762  [key=2, style=dotted];
m5_1756 -> m5_1756  [color=darkseagreen4, key=1, label=toReturn, style=dashed];
m5_1756 -> m5_1758  [color=darkseagreen4, key=1, label=toReturn, style=dashed];
m5_1756 -> m5_1759  [color=darkseagreen4, key=1, label=toReturn, style=dashed];
m5_1756 -> m5_1760  [color=darkseagreen4, key=1, label=toReturn, style=dashed];
m5_1757 -> m5_1758  [key=0, style=solid];
m5_1757 -> m5_1759  [key=0, style=solid];
m5_1759 -> m5_1760  [key=0, style=solid];
m5_1760 -> m5_1761  [key=0, style=solid];
m5_1761 -> m5_1754  [color=blue, key=0, style=bold];
m5_1466 -> m5_1467  [key=0, style=solid];
m5_1467 -> m5_1468  [key=0, style=solid];
m5_1468 -> m5_1469  [key=0, style=solid];
m5_1468 -> m5_25  [key=2, style=dotted];
m5_1468 -> m5_26  [key=2, style=dotted];
m5_1468 -> m5_1470  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1468 -> m5_1471  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1468 -> m5_1472  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1468 -> m5_1473  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1468 -> m5_1474  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1468 -> m5_1475  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1468 -> m5_1476  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1468 -> m5_1477  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1468 -> m5_1478  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1468 -> m5_1479  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1468 -> m5_1480  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1469 -> m5_1470  [key=0, style=solid];
m5_1469 -> m5_27  [key=2, style=dotted];
m5_1470 -> m5_1471  [key=0, style=solid];
m5_1470 -> m5_29  [key=2, style=dotted];
m5_1471 -> m5_1472  [key=0, style=solid];
m5_1471 -> m5_27  [key=2, style=dotted];
m5_1472 -> m5_1473  [key=0, style=solid];
m5_1472 -> m5_29  [key=2, style=dotted];
m5_1473 -> m5_1474  [key=0, style=solid];
m5_1473 -> m5_27  [key=2, style=dotted];
m5_1474 -> m5_1475  [key=0, style=solid];
m5_1474 -> m5_29  [key=2, style=dotted];
m5_1475 -> m5_1476  [key=0, style=solid];
m5_1475 -> m5_27  [key=2, style=dotted];
m5_1476 -> m5_1477  [key=0, style=solid];
m5_1476 -> m5_29  [key=2, style=dotted];
m5_1477 -> m5_1478  [key=0, style=solid];
m5_1477 -> m5_27  [key=2, style=dotted];
m5_1478 -> m5_1479  [key=0, style=solid];
m5_1478 -> m5_29  [key=2, style=dotted];
m5_1479 -> m5_1480  [key=0, style=solid];
m5_1479 -> m5_27  [key=2, style=dotted];
m5_1480 -> m5_1481  [key=0, style=solid];
m5_1480 -> m5_29  [key=2, style=dotted];
m5_1481 -> m5_1466  [color=blue, key=0, style=bold];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_2  [key=0, style=solid];
m5_2 -> m5_3  [key=0, style=solid];
m5_2 -> m5_25  [key=2, style=dotted];
m5_2 -> m5_26  [key=2, style=dotted];
m5_2 -> m5_4  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_2 -> m5_5  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_2 -> m5_6  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_2 -> m5_7  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_2 -> m5_8  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_2 -> m5_9  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_2 -> m5_10  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_2 -> m5_11  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_2 -> m5_12  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_2 -> m5_13  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_2 -> m5_14  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_2 -> m5_15  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_2 -> m5_16  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_2 -> m5_17  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_2 -> m5_18  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_2 -> m5_19  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_2 -> m5_20  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_2 -> m5_21  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_2 -> m5_22  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_2 -> m5_23  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_3 -> m5_4  [key=0, style=solid];
m5_4 -> m5_5  [key=0, style=solid];
m5_4 -> m5_27  [key=2, style=dotted];
m5_4 -> m5_28  [key=2, style=dotted];
m5_5 -> m5_6  [key=0, style=solid];
m5_5 -> m5_29  [key=2, style=dotted];
m5_6 -> m5_7  [key=0, style=solid];
m5_6 -> m5_27  [key=2, style=dotted];
m5_6 -> m5_28  [key=2, style=dotted];
m5_7 -> m5_8  [key=0, style=solid];
m5_7 -> m5_29  [key=2, style=dotted];
m5_8 -> m5_9  [key=0, style=solid];
m5_8 -> m5_29  [key=2, style=dotted];
m5_9 -> m5_10  [key=0, style=solid];
m5_9 -> m5_29  [key=2, style=dotted];
m5_10 -> m5_11  [key=0, style=solid];
m5_10 -> m5_27  [key=2, style=dotted];
m5_10 -> m5_28  [key=2, style=dotted];
m5_11 -> m5_12  [key=0, style=solid];
m5_11 -> m5_29  [key=2, style=dotted];
m5_12 -> m5_13  [key=0, style=solid];
m5_12 -> m5_29  [key=2, style=dotted];
m5_13 -> m5_14  [key=0, style=solid];
m5_13 -> m5_29  [key=2, style=dotted];
m5_14 -> m5_15  [key=0, style=solid];
m5_14 -> m5_27  [key=2, style=dotted];
m5_14 -> m5_28  [key=2, style=dotted];
m5_14 -> m5_61  [color=darkorchid, key=3, label="Property variable System.Type DictionaryValueType", style=bold];
m5_15 -> m5_16  [key=0, style=solid];
m5_15 -> m5_29  [key=2, style=dotted];
m5_16 -> m5_17  [key=0, style=solid];
m5_16 -> m5_29  [key=2, style=dotted];
m5_17 -> m5_18  [key=0, style=solid];
m5_17 -> m5_29  [key=2, style=dotted];
m5_18 -> m5_19  [key=0, style=solid];
m5_18 -> m5_27  [key=2, style=dotted];
m5_18 -> m5_28  [key=2, style=dotted];
m5_19 -> m5_20  [key=0, style=solid];
m5_19 -> m5_30  [key=2, style=dotted];
m5_19 -> m5_29  [key=2, style=dotted];
m5_20 -> m5_21  [key=0, style=solid];
m5_20 -> m5_29  [key=2, style=dotted];
m5_21 -> m5_22  [key=0, style=solid];
m5_21 -> m5_29  [key=2, style=dotted];
m5_22 -> m5_23  [key=0, style=solid];
m5_22 -> m5_27  [key=2, style=dotted];
m5_22 -> m5_28  [key=2, style=dotted];
m5_23 -> m5_24  [key=0, style=solid];
m5_23 -> m5_29  [key=2, style=dotted];
m5_24 -> m5_0  [color=blue, key=0, style=bold];
m5_1003 -> m5_1004  [key=0, style=solid];
m5_1004 -> m5_1005  [key=0, style=solid];
m5_1004 -> m5_25  [key=2, style=dotted];
m5_1004 -> m5_26  [key=2, style=dotted];
m5_1005 -> m5_1006  [key=0, style=solid];
m5_1005 -> m5_887  [key=2, style=dotted];
m5_1005 -> m5_1007  [color=darkseagreen4, key=1, label=data, style=dashed];
m5_1005 -> m5_1008  [color=darkseagreen4, key=1, label=data, style=dashed];
m5_1006 -> m5_1007  [key=0, style=solid];
m5_1006 -> m5_29  [key=2, style=dotted];
m5_1007 -> m5_1008  [key=0, style=solid];
m5_1007 -> m5_29  [key=2, style=dotted];
m5_1008 -> m5_1009  [key=0, style=solid];
m5_1008 -> m5_29  [key=2, style=dotted];
m5_1009 -> m5_1003  [color=blue, key=0, style=bold];
m5_890 -> m5_891  [key=0, style=solid];
m5_891 -> m5_892  [key=0, style=solid];
m5_891 -> m5_26  [key=2, style=dotted];
m5_892 -> m5_893  [key=0, style=solid];
m5_892 -> m5_25  [key=2, style=dotted];
m5_892 -> m5_894  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_892 -> m5_895  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_892 -> m5_896  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_892 -> m5_897  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_892 -> m5_898  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_892 -> m5_899  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_892 -> m5_900  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_892 -> m5_901  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_892 -> m5_902  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_892 -> m5_903  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_892 -> m5_904  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_892 -> m5_905  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_892 -> m5_906  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m5_893 -> m5_894  [key=0, style=solid];
m5_893 -> m5_27  [key=2, style=dotted];
m5_893 -> m5_28  [key=2, style=dotted];
m5_894 -> m5_895  [key=0, style=solid];
m5_894 -> m5_29  [key=2, style=dotted];
m5_895 -> m5_896  [key=0, style=solid];
m5_895 -> m5_27  [key=2, style=dotted];
m5_895 -> m5_28  [key=2, style=dotted];
m5_896 -> m5_897  [key=0, style=solid];
m5_896 -> m5_29  [key=2, style=dotted];
m5_897 -> m5_898  [key=0, style=solid];
m5_897 -> m5_29  [key=2, style=dotted];
m5_898 -> m5_899  [key=0, style=solid];
m5_898 -> m5_27  [key=2, style=dotted];
m5_898 -> m5_28  [key=2, style=dotted];
m5_899 -> m5_900  [key=0, style=solid];
m5_899 -> m5_29  [key=2, style=dotted];
m5_900 -> m5_901  [key=0, style=solid];
m5_900 -> m5_29  [key=2, style=dotted];
m5_901 -> m5_902  [key=0, style=solid];
m5_901 -> m5_27  [key=2, style=dotted];
m5_901 -> m5_28  [key=2, style=dotted];
m5_902 -> m5_903  [key=0, style=solid];
m5_902 -> m5_29  [key=2, style=dotted];
m5_903 -> m5_904  [key=0, style=solid];
m5_903 -> m5_29  [key=2, style=dotted];
m5_904 -> m5_905  [key=0, style=solid];
m5_904 -> m5_27  [key=2, style=dotted];
m5_904 -> m5_28  [key=2, style=dotted];
m5_905 -> m5_906  [key=0, style=solid];
m5_905 -> m5_29  [key=2, style=dotted];
m5_906 -> m5_907  [key=0, style=solid];
m5_906 -> m5_27  [key=2, style=dotted];
m5_906 -> m5_115  [key=2, style=dotted];
m5_907 -> m5_890  [color=blue, key=0, style=bold];
m5_1292 -> m5_1293  [key=0, style=solid];
m5_1293 -> m5_1294  [key=0, style=solid];
m5_1294 -> m5_1295  [key=0, style=solid];
m5_1294 -> m5_25  [key=2, style=dotted];
m5_1294 -> m5_26  [key=2, style=dotted];
m5_1294 -> m5_1296  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1294 -> m5_1297  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1294 -> m5_1298  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1294 -> m5_1299  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1295 -> m5_1296  [key=0, style=solid];
m5_1295 -> m5_27  [key=2, style=dotted];
m5_1295 -> m5_28  [key=2, style=dotted];
m5_1296 -> m5_1297  [key=0, style=solid];
m5_1296 -> m5_29  [key=2, style=dotted];
m5_1297 -> m5_1298  [key=0, style=solid];
m5_1297 -> m5_29  [key=2, style=dotted];
m5_1298 -> m5_1299  [key=0, style=solid];
m5_1298 -> m5_27  [key=2, style=dotted];
m5_1298 -> m5_28  [key=2, style=dotted];
m5_1299 -> m5_1300  [key=0, style=solid];
m5_1299 -> m5_29  [key=2, style=dotted];
m5_1300 -> m5_1292  [color=blue, key=0, style=bold];
m5_618 -> m5_619  [key=0, style=solid];
m5_619 -> m5_620  [key=0, style=solid];
m5_620 -> m5_621  [key=0, style=solid];
m5_620 -> m5_99  [key=2, style=dotted];
m5_620 -> m5_629  [color=darkseagreen4, key=1, label=helloWorldData, style=dashed];
m5_621 -> m5_622  [key=0, style=solid];
m5_621 -> m5_25  [key=2, style=dotted];
m5_621 -> m5_26  [key=2, style=dotted];
m5_621 -> m5_525  [key=2, style=dotted];
m5_621 -> m5_623  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_621 -> m5_624  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_621 -> m5_625  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_621 -> m5_626  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_621 -> m5_627  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_621 -> m5_628  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_621 -> m5_630  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_621 -> m5_631  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_621 -> m5_632  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_621 -> m5_633  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_629 -> m5_630  [key=0, style=solid];
m5_629 -> m5_617  [key=2, style=dotted];
m5_622 -> m5_623  [key=0, style=solid];
m5_622 -> m5_122  [key=2, style=dotted];
m5_622 -> m5_28  [key=2, style=dotted];
m5_623 -> m5_624  [key=0, style=solid];
m5_623 -> m5_29  [key=2, style=dotted];
m5_624 -> m5_625  [key=0, style=solid];
m5_624 -> m5_122  [key=2, style=dotted];
m5_624 -> m5_28  [key=2, style=dotted];
m5_625 -> m5_626  [key=0, style=solid];
m5_625 -> m5_122  [key=2, style=dotted];
m5_625 -> m5_28  [key=2, style=dotted];
m5_626 -> m5_627  [key=0, style=solid];
m5_626 -> m5_29  [key=2, style=dotted];
m5_627 -> m5_628  [key=0, style=solid];
m5_627 -> m5_122  [key=2, style=dotted];
m5_627 -> m5_28  [key=2, style=dotted];
m5_628 -> m5_629  [key=0, style=solid];
m5_628 -> m5_518  [key=2, style=dotted];
m5_630 -> m5_631  [key=0, style=solid];
m5_630 -> m5_29  [key=2, style=dotted];
m5_631 -> m5_632  [key=0, style=solid];
m5_631 -> m5_122  [key=2, style=dotted];
m5_631 -> m5_28  [key=2, style=dotted];
m5_632 -> m5_633  [key=0, style=solid];
m5_632 -> m5_29  [key=2, style=dotted];
m5_633 -> m5_634  [key=0, style=solid];
m5_633 -> m5_122  [key=2, style=dotted];
m5_633 -> m5_115  [key=2, style=dotted];
m5_634 -> m5_618  [color=blue, key=0, style=bold];
m5_468 -> m5_469  [key=0, style=solid];
m5_469 -> m5_470  [key=0, style=solid];
m5_469 -> m5_465  [key=2, style=dotted];
m5_469 -> m5_475  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_470 -> m5_471  [key=0, style=solid];
m5_470 -> m5_25  [key=2, style=dotted];
m5_470 -> m5_466  [key=2, style=dotted];
m5_470 -> m5_467  [key=2, style=dotted];
m5_470 -> m5_472  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_475 -> m5_476  [key=0, style=solid];
m5_471 -> m5_472  [key=0, style=solid];
m5_471 -> m5_27  [key=2, style=dotted];
m5_472 -> m5_473  [key=0, style=solid];
m5_472 -> m5_29  [key=2, style=dotted];
m5_473 -> m5_474  [key=0, style=solid];
m5_473 -> m5_475  [color=darkseagreen4, key=1, label=j, style=dashed];
m5_473 -> m5_479  [color=darkseagreen4, key=1, label=j, style=dashed];
m5_474 -> m5_475  [key=0, style=solid];
m5_474 -> m5_480  [key=0, style=solid];
m5_479 -> m5_474  [key=0, style=solid];
m5_479 -> m5_479  [color=darkseagreen4, key=1, label=j, style=dashed];
m5_476 -> m5_477  [key=0, style=solid];
m5_476 -> m5_25  [key=2, style=dotted];
m5_476 -> m5_466  [key=2, style=dotted];
m5_476 -> m5_467  [key=2, style=dotted];
m5_476 -> m5_478  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_477 -> m5_478  [key=0, style=solid];
m5_477 -> m5_27  [key=2, style=dotted];
m5_478 -> m5_479  [key=0, style=solid];
m5_478 -> m5_29  [key=2, style=dotted];
m5_480 -> m5_468  [color=blue, key=0, style=bold];
m5_964 -> m5_965  [key=0, style=solid];
m5_965 -> m5_966  [key=0, style=solid];
m5_965 -> m5_25  [key=2, style=dotted];
m5_965 -> m5_26  [key=2, style=dotted];
m5_965 -> m5_967  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_966 -> m5_967  [key=0, style=solid];
m5_966 -> m5_887  [key=2, style=dotted];
m5_966 -> m5_535  [key=2, style=dotted];
m5_967 -> m5_968  [key=0, style=solid];
m5_967 -> m5_29  [key=2, style=dotted];
m5_968 -> m5_964  [color=blue, key=0, style=bold];
m5_1301 -> m5_1302  [key=0, style=solid];
m5_1302 -> m5_1303  [key=0, style=solid];
m5_1303 -> m5_1304  [key=0, style=solid];
m5_1303 -> m5_25  [key=2, style=dotted];
m5_1303 -> m5_26  [key=2, style=dotted];
m5_1303 -> m5_1305  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1303 -> m5_1306  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1303 -> m5_1307  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1303 -> m5_1308  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1303 -> m5_1309  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1303 -> m5_1310  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1303 -> m5_1311  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1303 -> m5_1312  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1303 -> m5_1313  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1303 -> m5_1314  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1303 -> m5_1315  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1303 -> m5_1316  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1303 -> m5_1317  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1304 -> m5_1305  [key=0, style=solid];
m5_1304 -> m5_27  [key=2, style=dotted];
m5_1304 -> m5_28  [key=2, style=dotted];
m5_1305 -> m5_1306  [key=0, style=solid];
m5_1305 -> m5_29  [key=2, style=dotted];
m5_1306 -> m5_1307  [key=0, style=solid];
m5_1306 -> m5_27  [key=2, style=dotted];
m5_1306 -> m5_28  [key=2, style=dotted];
m5_1307 -> m5_1308  [key=0, style=solid];
m5_1307 -> m5_29  [key=2, style=dotted];
m5_1308 -> m5_1309  [key=0, style=solid];
m5_1308 -> m5_27  [key=2, style=dotted];
m5_1308 -> m5_28  [key=2, style=dotted];
m5_1309 -> m5_1310  [key=0, style=solid];
m5_1309 -> m5_29  [key=2, style=dotted];
m5_1310 -> m5_1311  [key=0, style=solid];
m5_1310 -> m5_27  [key=2, style=dotted];
m5_1310 -> m5_28  [key=2, style=dotted];
m5_1311 -> m5_1312  [key=0, style=solid];
m5_1311 -> m5_29  [key=2, style=dotted];
m5_1312 -> m5_1313  [key=0, style=solid];
m5_1312 -> m5_27  [key=2, style=dotted];
m5_1312 -> m5_28  [key=2, style=dotted];
m5_1313 -> m5_1314  [key=0, style=solid];
m5_1313 -> m5_29  [key=2, style=dotted];
m5_1314 -> m5_1315  [key=0, style=solid];
m5_1314 -> m5_27  [key=2, style=dotted];
m5_1314 -> m5_28  [key=2, style=dotted];
m5_1315 -> m5_1316  [key=0, style=solid];
m5_1315 -> m5_29  [key=2, style=dotted];
m5_1316 -> m5_1317  [key=0, style=solid];
m5_1316 -> m5_27  [key=2, style=dotted];
m5_1316 -> m5_28  [key=2, style=dotted];
m5_1317 -> m5_1318  [key=0, style=solid];
m5_1317 -> m5_29  [key=2, style=dotted];
m5_1318 -> m5_1301  [color=blue, key=0, style=bold];
m5_1140 -> m5_1141  [key=0, style=solid];
m5_1141 -> m5_1142  [key=0, style=solid];
m5_1142 -> m5_1143  [key=0, style=solid];
m5_1142 -> m5_25  [key=2, style=dotted];
m5_1142 -> m5_26  [key=2, style=dotted];
m5_1142 -> m5_1144  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1142 -> m5_1145  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1142 -> m5_1146  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1142 -> m5_1147  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1142 -> m5_1148  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1142 -> m5_1149  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1142 -> m5_1150  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1142 -> m5_1151  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1142 -> m5_1153  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1142 -> m5_1154  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1143 -> m5_1144  [key=0, style=solid];
m5_1143 -> m5_1156  [key=2, style=dotted];
m5_1144 -> m5_1145  [key=0, style=solid];
m5_1144 -> m5_27  [key=2, style=dotted];
m5_1144 -> m5_28  [key=2, style=dotted];
m5_1145 -> m5_1146  [key=0, style=solid];
m5_1145 -> m5_29  [key=2, style=dotted];
m5_1146 -> m5_1147  [key=0, style=solid];
m5_1146 -> m5_27  [key=2, style=dotted];
m5_1146 -> m5_28  [key=2, style=dotted];
m5_1147 -> m5_1148  [key=0, style=solid];
m5_1147 -> m5_29  [key=2, style=dotted];
m5_1148 -> m5_1149  [key=0, style=solid];
m5_1148 -> m5_981  [key=2, style=dotted];
m5_1149 -> m5_1150  [key=0, style=solid];
m5_1149 -> m5_29  [key=2, style=dotted];
m5_1150 -> m5_1151  [key=0, style=solid];
m5_1150 -> m5_29  [key=2, style=dotted];
m5_1151 -> m5_1152  [key=0, style=solid];
m5_1153 -> m5_1154  [key=0, style=solid];
m5_1153 -> m5_27  [key=2, style=dotted];
m5_1153 -> m5_28  [key=2, style=dotted];
m5_1154 -> m5_1155  [key=0, style=solid];
m5_1154 -> m5_29  [key=2, style=dotted];
m5_1152 -> m5_1153  [key=0, style=solid];
m5_1152 -> m5_1139  [key=2, style=dotted];
m5_1152 -> m5_29  [key=2, style=dotted];
m5_1152 -> m5_1152  [color=darkseagreen4, key=1, label=dt, style=dashed];
m5_1155 -> m5_1140  [color=blue, key=0, style=bold];
m5_1752 -> m5_1753  [key=0, style=solid];
m5_1753 -> m5_1752  [color=blue, key=0, style=bold];
m5_989 -> m5_990  [key=0, style=solid];
m5_990 -> m5_991  [key=0, style=solid];
m5_990 -> m5_25  [key=2, style=dotted];
m5_990 -> m5_26  [key=2, style=dotted];
m5_990 -> m5_994  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_991 -> m5_992  [key=0, style=solid];
m5_991 -> m5_39  [key=2, style=dotted];
m5_991 -> m5_993  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_992 -> m5_989  [color=blue, key=0, style=bold];
m5_1069 -> m5_1070  [key=0, style=solid];
m5_1070 -> m5_1071  [key=0, style=solid];
m5_1071 -> m5_1072  [key=0, style=solid];
m5_1071 -> m5_25  [key=2, style=dotted];
m5_1071 -> m5_26  [key=2, style=dotted];
m5_1071 -> m5_1073  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1071 -> m5_1074  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1071 -> m5_1075  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1071 -> m5_1076  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1071 -> m5_1077  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1071 -> m5_1078  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1071 -> m5_1079  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1071 -> m5_1080  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1071 -> m5_1081  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1072 -> m5_1073  [key=0, style=solid];
m5_1072 -> m5_27  [key=2, style=dotted];
m5_1072 -> m5_28  [key=2, style=dotted];
m5_1073 -> m5_1074  [key=0, style=solid];
m5_1073 -> m5_29  [key=2, style=dotted];
m5_1074 -> m5_1075  [key=0, style=solid];
m5_1074 -> m5_27  [key=2, style=dotted];
m5_1074 -> m5_28  [key=2, style=dotted];
m5_1075 -> m5_1076  [key=0, style=solid];
m5_1075 -> m5_29  [key=2, style=dotted];
m5_1076 -> m5_1077  [key=0, style=solid];
m5_1076 -> m5_981  [key=2, style=dotted];
m5_1077 -> m5_1078  [key=0, style=solid];
m5_1077 -> m5_29  [key=2, style=dotted];
m5_1078 -> m5_1079  [key=0, style=solid];
m5_1078 -> m5_29  [key=2, style=dotted];
m5_1079 -> m5_1080  [key=0, style=solid];
m5_1079 -> m5_1066  [key=2, style=dotted];
m5_1079 -> m5_1067  [key=2, style=dotted];
m5_1079 -> m5_1068  [key=2, style=dotted];
m5_1079 -> m5_29  [key=2, style=dotted];
m5_1080 -> m5_1081  [key=0, style=solid];
m5_1080 -> m5_27  [key=2, style=dotted];
m5_1080 -> m5_28  [key=2, style=dotted];
m5_1081 -> m5_1082  [key=0, style=solid];
m5_1081 -> m5_29  [key=2, style=dotted];
m5_1082 -> m5_1069  [color=blue, key=0, style=bold];
m5_1197 -> m5_1198  [key=0, style=solid];
m5_1198 -> m5_1199  [key=0, style=solid];
m5_1198 -> m5_25  [key=2, style=dotted];
m5_1198 -> m5_26  [key=2, style=dotted];
m5_1198 -> m5_1202  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1199 -> m5_1200  [key=0, style=solid];
m5_1199 -> m5_39  [key=2, style=dotted];
m5_1199 -> m5_1201  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_1200 -> m5_1197  [color=blue, key=0, style=bold];
m5_1024 -> m5_1025  [key=0, style=solid];
m5_1025 -> m5_1026  [key=0, style=solid];
m5_1026 -> m5_1027  [key=0, style=solid];
m5_1026 -> m5_25  [key=2, style=dotted];
m5_1026 -> m5_26  [key=2, style=dotted];
m5_1026 -> m5_1028  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1026 -> m5_1029  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1026 -> m5_1030  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1026 -> m5_1031  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1026 -> m5_1032  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1026 -> m5_1033  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1026 -> m5_1034  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1026 -> m5_1035  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1026 -> m5_1036  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1026 -> m5_1037  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1027 -> m5_1028  [key=0, style=solid];
m5_1027 -> m5_27  [key=2, style=dotted];
m5_1027 -> m5_28  [key=2, style=dotted];
m5_1028 -> m5_1029  [key=0, style=solid];
m5_1028 -> m5_29  [key=2, style=dotted];
m5_1029 -> m5_1030  [key=0, style=solid];
m5_1029 -> m5_27  [key=2, style=dotted];
m5_1029 -> m5_28  [key=2, style=dotted];
m5_1030 -> m5_1031  [key=0, style=solid];
m5_1030 -> m5_29  [key=2, style=dotted];
m5_1031 -> m5_1032  [key=0, style=solid];
m5_1031 -> m5_29  [key=2, style=dotted];
m5_1032 -> m5_1033  [key=0, style=solid];
m5_1032 -> m5_27  [key=2, style=dotted];
m5_1032 -> m5_28  [key=2, style=dotted];
m5_1033 -> m5_1034  [key=0, style=solid];
m5_1033 -> m5_29  [key=2, style=dotted];
m5_1034 -> m5_1035  [key=0, style=solid];
m5_1034 -> m5_29  [key=2, style=dotted];
m5_1035 -> m5_1036  [key=0, style=solid];
m5_1035 -> m5_27  [key=2, style=dotted];
m5_1035 -> m5_28  [key=2, style=dotted];
m5_1036 -> m5_1037  [key=0, style=solid];
m5_1036 -> m5_29  [key=2, style=dotted];
m5_1037 -> m5_1038  [key=0, style=solid];
m5_1037 -> m5_27  [key=2, style=dotted];
m5_1037 -> m5_115  [key=2, style=dotted];
m5_1038 -> m5_1024  [color=blue, key=0, style=bold];
m5_1774 -> m5_41  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1775 -> m5_78  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m5_1775 -> m5_79  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m5_1775 -> m5_80  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m5_1775 -> m5_81  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m5_1775 -> m5_82  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m5_1775 -> m5_83  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m5_1775 -> m5_84  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m5_1775 -> m5_85  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m5_1775 -> m5_86  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m5_1775 -> m5_87  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m5_1775 -> m5_88  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m5_1775 -> m5_89  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m5_1776 -> m5_149  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1777 -> m5_167  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1778 -> m5_180  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1779 -> m5_342  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1780 -> m5_432  [color=darkseagreen4, key=1, label=total, style=dashed];
m5_1781 -> m5_449  [color=darkseagreen4, key=1, label=total, style=dashed];
m5_1782 -> m5_502  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1783 -> m5_509  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1784 -> m5_516  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1785 -> m5_527  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1786 -> m5_542  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1787 -> m5_693  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1787 -> m5_696  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1787 -> m5_699  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1787 -> m5_702  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1788 -> m5_877  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1789 -> m5_956  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1790 -> m5_974  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1791 -> m5_987  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1792 -> m5_994  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1793 -> m5_1001  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1794 -> m5_1015  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1795 -> m5_1022  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1796 -> m5_1093  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1797 -> m5_1195  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1798 -> m5_1202  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1799 -> m5_1209  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1800 -> m5_1216  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1801 -> m5_1223  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1802 -> m5_1230  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1803 -> m5_1332  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1804 -> m5_1340  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1805 -> m5_1371  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1806 -> m5_1388  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1807 -> m5_1489  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1808 -> m5_1545  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1809 -> m5_1577  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1809 -> m5_1580  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_1810 -> m5_1702  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m5_1810 -> m5_1705  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m5_1810 -> m5_1708  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m5_1810 -> m5_1711  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m5_1810 -> m5_1714  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m5_1810 -> m5_1717  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m5_1811 -> m5_1737  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.ToggleReaderError", style=dashed];
m5_1811 -> m5_1740  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.ToggleReaderError", style=dashed];
m5_1811 -> m5_1742  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.ToggleReaderError", style=dashed];
m5_1812 -> m5_1747  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.SlowStream", style=dashed];
m5_1812 -> m5_1748  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.SlowStream", style=dashed];
m5_1812 -> m5_1749  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.SlowStream", style=dashed];
m5_1812 -> m5_1755  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.SlowStream", style=dashed];
m5_1812 -> m5_1756  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.SlowStream", style=dashed];
m5_1812 -> m5_1758  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.SlowStream", style=dashed];
m5_1812 -> m5_1759  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.SlowStream", style=dashed];
m6_1662 -> m6_1663  [key=0, style=solid];
m6_1663 -> m6_1664  [key=0, style=solid];
m6_1663 -> m6_1665  [key=2, style=dotted];
m6_1664 -> m6_1662  [color=blue, key=0, style=bold];
m6_2129 -> m6_2130  [key=0, style=solid];
m6_2130 -> m6_2131  [key=0, style=solid];
m6_2130 -> m6_2139  [key=2, style=dotted];
m6_2130 -> m6_2134  [color=darkseagreen4, key=1, label=joe, style=dashed];
m6_2130 -> m6_2136  [color=darkseagreen4, key=1, label=joe, style=dashed];
m6_2131 -> m6_2132  [key=0, style=solid];
m6_2134 -> m6_2135  [key=0, style=solid];
m6_2136 -> m6_2137  [key=0, style=solid];
m6_2136 -> m6_227  [key=2, style=dotted];
m6_2132 -> m6_2133  [key=0, style=solid];
m6_2132 -> m6_2139  [key=2, style=dotted];
m6_2132 -> m6_2134  [color=darkseagreen4, key=1, label=mike, style=dashed];
m6_2132 -> m6_2135  [color=darkseagreen4, key=1, label=mike, style=dashed];
m6_2132 -> m6_2136  [color=darkseagreen4, key=1, label=mike, style=dashed];
m6_2133 -> m6_2134  [key=0, style=solid];
m6_2135 -> m6_2136  [key=0, style=solid];
m6_2137 -> m6_2138  [key=0, style=solid];
m6_2137 -> m6_343  [key=2, style=dotted];
m6_2138 -> m6_2129  [color=blue, key=0, style=bold];
m6_1154 -> m6_1155  [key=0, style=solid];
m6_1154 -> m6_1156  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_1154 -> m6_1157  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_1154 -> m6_1158  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_1155 -> m6_1156  [key=0, style=solid];
m6_1156 -> m6_1157  [key=0, style=solid];
m6_1157 -> m6_1158  [key=0, style=solid];
m6_1158 -> m6_1159  [key=0, style=solid];
m6_1159 -> m6_1154  [color=blue, key=0, style=bold];
m6_3776 -> m6_3777  [key=0, style=solid];
m6_3777 -> m6_3778  [key=0, style=solid];
m6_3777 -> m6_3318  [key=2, style=dotted];
m6_3778 -> m6_3776  [color=blue, key=0, style=bold];
m6_4076 -> m6_4077  [key=0, style=solid];
m6_4077 -> m6_4078  [key=0, style=solid];
m6_4078 -> m6_4076  [color=blue, key=0, style=bold];
m6_1241 -> m6_1242  [key=0, style=solid];
m6_1242 -> m6_1243  [key=0, style=solid];
m6_1243 -> m6_1244  [key=0, style=solid];
m6_1243 -> m6_218  [key=2, style=dotted];
m6_1243 -> m6_1245  [color=darkseagreen4, key=1, label=r, style=dashed];
m6_1243 -> m6_1246  [color=darkseagreen4, key=1, label=r, style=dashed];
m6_1244 -> m6_1245  [key=0, style=solid];
m6_1244 -> m6_77  [key=2, style=dotted];
m6_1245 -> m6_1246  [key=0, style=solid];
m6_1245 -> m6_77  [key=2, style=dotted];
m6_1246 -> m6_1247  [key=0, style=solid];
m6_1246 -> m6_77  [key=2, style=dotted];
m6_1247 -> m6_1241  [color=blue, key=0, style=bold];
m6_3985 -> m6_3986  [key=0, style=solid];
m6_3986 -> m6_3985  [color=blue, key=0, style=bold];
m6_1589 -> m6_1590  [key=0, style=solid];
m6_1590 -> m6_1591  [key=0, style=solid];
m6_1590 -> m6_1592  [key=0, style=solid];
m6_1591 -> m6_1590  [key=0, style=solid];
m6_1591 -> m6_623  [key=2, style=dotted];
m6_1591 -> m6_1591  [color=darkseagreen4, key=1, label=pair, style=dashed];
m6_1592 -> m6_1589  [color=blue, key=0, style=bold];
m6_2066 -> m6_2067  [key=0, style=solid];
m6_2067 -> m6_2068  [key=0, style=solid];
m6_2067 -> m6_527  [key=2, style=dotted];
m6_2067 -> m6_2069  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_2068 -> m6_2066  [color=blue, key=0, style=bold];
m6_3319 -> m6_3320  [key=0, style=solid];
m6_3320 -> m6_3321  [key=0, style=solid];
m6_3320 -> m6_3315  [key=2, style=dotted];
m6_3321 -> m6_3319  [color=blue, key=0, style=bold];
m6_4050 -> m6_4051  [key=0, style=solid];
m6_4051 -> m6_4052  [key=0, style=solid];
m6_4051 -> m6_4053  [key=2, style=dotted];
m6_4052 -> m6_4050  [color=blue, key=0, style=bold];
m6_1966 -> m6_1967  [key=0, style=solid];
m6_1967 -> m6_1968  [key=0, style=solid];
m6_1967 -> m6_1963  [key=2, style=dotted];
m6_1967 -> m6_1969  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_1967 -> m6_1970  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_1968 -> m6_1969  [key=0, style=solid];
m6_1968 -> m6_545  [key=2, style=dotted];
m6_1969 -> m6_1970  [key=0, style=solid];
m6_1969 -> m6_545  [key=2, style=dotted];
m6_1970 -> m6_1971  [key=0, style=solid];
m6_1970 -> m6_227  [key=2, style=dotted];
m6_1971 -> m6_1972  [key=0, style=solid];
m6_1971 -> m6_218  [key=2, style=dotted];
m6_1971 -> m6_1973  [color=darkseagreen4, key=1, label=newValue, style=dashed];
m6_1972 -> m6_1973  [key=0, style=solid];
m6_1972 -> m6_77  [key=2, style=dotted];
m6_1973 -> m6_1974  [key=0, style=solid];
m6_1973 -> m6_382  [key=2, style=dotted];
m6_1973 -> m6_77  [key=2, style=dotted];
m6_1974 -> m6_1966  [color=blue, key=0, style=bold];
m6_857 -> m6_858  [key=0, style=solid];
m6_858 -> m6_859  [key=0, style=solid];
m6_858 -> m6_835  [key=2, style=dotted];
m6_858 -> m6_863  [color=darkseagreen4, key=1, label=testDate, style=dashed];
m6_858 -> m6_864  [color=darkseagreen4, key=1, label=testDate, style=dashed];
m6_859 -> m6_860  [key=0, style=solid];
m6_859 -> m6_836  [key=2, style=dotted];
m6_863 -> m6_864  [key=0, style=solid];
m6_863 -> m6_77  [key=2, style=dotted];
m6_864 -> m6_865  [key=0, style=solid];
m6_864 -> m6_77  [key=2, style=dotted];
m6_860 -> m6_861  [key=0, style=solid];
m6_860 -> m6_145  [key=2, style=dotted];
m6_860 -> m6_600  [key=2, style=dotted];
m6_860 -> m6_862  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_861 -> m6_862  [key=0, style=solid];
m6_861 -> m6_77  [key=2, style=dotted];
m6_862 -> m6_863  [key=0, style=solid];
m6_862 -> m6_218  [key=2, style=dotted];
m6_862 -> m6_864  [color=darkseagreen4, key=1, label=m2, style=dashed];
m6_865 -> m6_857  [color=blue, key=0, style=bold];
m6_216 -> m6_4030  [key=0, style=solid];
m6_216 -> m6_4031  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_4030 -> m6_4031  [key=0, style=solid];
m6_4030 -> m6_4222  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.Ratio", style=dashed];
m6_4031 -> m6_4032  [key=0, style=solid];
m6_4031 -> m6_4222  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.Ratio", style=dashed];
m6_4032 -> m6_216  [color=blue, key=0, style=bold];
m6_3583 -> m6_3584  [key=0, style=solid];
m6_3584 -> m6_3585  [key=0, style=solid];
m6_3584 -> m6_3224  [key=2, style=dotted];
m6_3585 -> m6_3586  [key=0, style=solid];
m6_3586 -> m6_3587  [key=0, style=solid];
m6_3586 -> m6_3  [key=2, style=dotted];
m6_3587 -> m6_3588  [key=0, style=solid];
m6_3587 -> m6_145  [key=2, style=dotted];
m6_3587 -> m6_600  [key=2, style=dotted];
m6_3588 -> m6_3589  [key=0, style=solid];
m6_3588 -> m6_77  [key=2, style=dotted];
m6_3589 -> m6_3583  [color=blue, key=0, style=bold];
m6_1324 -> m6_1325  [key=0, style=solid];
m6_1325 -> m6_1326  [key=0, style=solid];
m6_1325 -> m6_218  [key=2, style=dotted];
m6_1325 -> m6_1327  [color=darkseagreen4, key=1, label=l, style=dashed];
m6_1325 -> m6_1328  [color=darkseagreen4, key=1, label=l, style=dashed];
m6_1325 -> m6_1329  [color=darkseagreen4, key=1, label=l, style=dashed];
m6_1326 -> m6_1327  [key=0, style=solid];
m6_1326 -> m6_77  [key=2, style=dotted];
m6_1327 -> m6_1328  [key=0, style=solid];
m6_1327 -> m6_77  [key=2, style=dotted];
m6_1328 -> m6_1329  [key=0, style=solid];
m6_1328 -> m6_77  [key=2, style=dotted];
m6_1329 -> m6_1330  [key=0, style=solid];
m6_1329 -> m6_77  [key=2, style=dotted];
m6_1330 -> m6_1324  [color=blue, key=0, style=bold];
m6_2818 -> m6_2819  [key=0, style=solid];
m6_2819 -> m6_2820  [key=0, style=solid];
m6_2819 -> m6_3  [key=2, style=dotted];
m6_2819 -> m6_2822  [color=darkseagreen4, key=1, label=d1, style=dashed];
m6_2819 -> m6_2823  [color=darkseagreen4, key=1, label=d1, style=dashed];
m6_2820 -> m6_2821  [key=0, style=solid];
m6_2820 -> m6_217  [key=2, style=dotted];
m6_2822 -> m6_2823  [key=0, style=solid];
m6_2822 -> m6_77  [key=2, style=dotted];
m6_2823 -> m6_2824  [key=0, style=solid];
m6_2823 -> m6_77  [key=2, style=dotted];
m6_2821 -> m6_2822  [key=0, style=solid];
m6_2821 -> m6_218  [key=2, style=dotted];
m6_2821 -> m6_2823  [color=darkseagreen4, key=1, label=d2, style=dashed];
m6_2824 -> m6_2818  [color=blue, key=0, style=bold];
m6_1221 -> m6_1222  [key=0, style=solid];
m6_1222 -> m6_1223  [key=0, style=solid];
m6_1222 -> m6_387  [key=2, style=dotted];
m6_1222 -> m6_1226  [key=2, style=dotted];
m6_1223 -> m6_1224  [key=0, style=solid];
m6_1223 -> m6_217  [key=2, style=dotted];
m6_1224 -> m6_1225  [key=0, style=solid];
m6_1224 -> m6_77  [key=2, style=dotted];
m6_1225 -> m6_1221  [color=blue, key=0, style=bold];
m6_2282 -> m6_2283  [key=0, style=solid];
m6_2283 -> m6_2284  [key=0, style=solid];
m6_2283 -> m6_218  [key=2, style=dotted];
m6_2284 -> m6_2285  [key=0, style=solid];
m6_2284 -> m6_2270  [key=2, style=dotted];
m6_2284 -> m6_423  [key=2, style=dotted];
m6_2284 -> m6_608  [key=2, style=dotted];
m6_2284 -> m6_77  [key=2, style=dotted];
m6_2285 -> m6_2282  [color=blue, key=0, style=bold];
m6_1012 -> m6_1013  [key=0, style=solid];
m6_1013 -> m6_1014  [key=0, style=solid];
m6_1013 -> m6_1022  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1014 -> m6_1015  [key=0, style=solid];
m6_1014 -> m6_218  [key=2, style=dotted];
m6_1014 -> m6_1016  [color=darkseagreen4, key=1, label=aa, style=dashed];
m6_1014 -> m6_1017  [color=darkseagreen4, key=1, label=aa, style=dashed];
m6_1014 -> m6_1018  [color=darkseagreen4, key=1, label=aa, style=dashed];
m6_1014 -> m6_1019  [color=darkseagreen4, key=1, label=aa, style=dashed];
m6_1014 -> m6_1020  [color=darkseagreen4, key=1, label=aa, style=dashed];
m6_1014 -> m6_1021  [color=darkseagreen4, key=1, label=aa, style=dashed];
m6_1022 -> m6_1023  [key=0, style=solid];
m6_1022 -> m6_77  [key=2, style=dotted];
m6_1015 -> m6_1016  [key=0, style=solid];
m6_1015 -> m6_77  [key=2, style=dotted];
m6_1016 -> m6_1017  [key=0, style=solid];
m6_1016 -> m6_77  [key=2, style=dotted];
m6_1017 -> m6_1018  [key=0, style=solid];
m6_1017 -> m6_77  [key=2, style=dotted];
m6_1018 -> m6_1019  [key=0, style=solid];
m6_1018 -> m6_77  [key=2, style=dotted];
m6_1019 -> m6_1020  [key=0, style=solid];
m6_1019 -> m6_77  [key=2, style=dotted];
m6_1020 -> m6_1021  [key=0, style=solid];
m6_1020 -> m6_77  [key=2, style=dotted];
m6_1021 -> m6_1022  [key=0, style=solid];
m6_1021 -> m6_217  [key=2, style=dotted];
m6_1023 -> m6_1012  [color=blue, key=0, style=bold];
m6_1304 -> m6_1305  [key=0, style=solid];
m6_1305 -> m6_1306  [key=0, style=solid];
m6_1305 -> m6_1309  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1306 -> m6_1307  [key=0, style=solid];
m6_1306 -> m6_527  [key=2, style=dotted];
m6_1306 -> m6_1308  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_1307 -> m6_1304  [color=blue, key=0, style=bold];
m6_2045 -> m6_2046  [key=0, style=solid];
m6_2046 -> m6_2047  [key=0, style=solid];
m6_2046 -> m6_2031  [key=2, style=dotted];
m6_2046 -> m6_2048  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_2046 -> m6_2049  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_2047 -> m6_2048  [key=0, style=solid];
m6_2048 -> m6_2049  [key=0, style=solid];
m6_2048 -> m6_145  [key=2, style=dotted];
m6_2048 -> m6_3  [key=2, style=dotted];
m6_2048 -> m6_2051  [key=2, style=dotted];
m6_2048 -> m6_2033  [key=2, style=dotted];
m6_2049 -> m6_2050  [key=0, style=solid];
m6_2049 -> m6_77  [key=2, style=dotted];
m6_2050 -> m6_2045  [color=blue, key=0, style=bold];
m6_2472 -> m6_2473  [key=0, style=solid];
m6_2473 -> m6_2474  [key=0, style=solid];
m6_2474 -> m6_2475  [key=0, style=solid];
m6_2474 -> m6_218  [key=2, style=dotted];
m6_2474 -> m6_2476  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_2474 -> m6_2477  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_2475 -> m6_2476  [key=0, style=solid];
m6_2475 -> m6_77  [key=2, style=dotted];
m6_2476 -> m6_2477  [key=0, style=solid];
m6_2476 -> m6_77  [key=2, style=dotted];
m6_2477 -> m6_2478  [key=0, style=solid];
m6_2477 -> m6_77  [key=2, style=dotted];
m6_2478 -> m6_2472  [color=blue, key=0, style=bold];
m6_2080 -> m6_2081  [key=0, style=solid];
m6_2081 -> m6_2082  [key=0, style=solid];
m6_2081 -> m6_258  [key=2, style=dotted];
m6_2081 -> m6_2083  [color=darkseagreen4, key=1, label=reference, style=dashed];
m6_2081 -> m6_2084  [color=darkseagreen4, key=1, label=reference, style=dashed];
m6_2081 -> m6_2088  [color=darkseagreen4, key=1, label=reference, style=dashed];
m6_2082 -> m6_2083  [key=0, style=solid];
m6_2082 -> m6_623  [key=2, style=dotted];
m6_2083 -> m6_2084  [key=0, style=solid];
m6_2083 -> m6_623  [key=2, style=dotted];
m6_2084 -> m6_2085  [key=0, style=solid];
m6_2084 -> m6_623  [key=2, style=dotted];
m6_2088 -> m6_2089  [key=0, style=solid];
m6_2088 -> m6_623  [key=2, style=dotted];
m6_2085 -> m6_2086  [key=0, style=solid];
m6_2085 -> m6_258  [key=2, style=dotted];
m6_2085 -> m6_2087  [color=darkseagreen4, key=1, label=child, style=dashed];
m6_2085 -> m6_2088  [color=darkseagreen4, key=1, label=child, style=dashed];
m6_2085 -> m6_2089  [color=darkseagreen4, key=1, label=child, style=dashed];
m6_2086 -> m6_2087  [key=0, style=solid];
m6_2086 -> m6_623  [key=2, style=dotted];
m6_2087 -> m6_2088  [key=0, style=solid];
m6_2087 -> m6_623  [key=2, style=dotted];
m6_2089 -> m6_2090  [key=0, style=solid];
m6_2089 -> m6_217  [key=2, style=dotted];
m6_2090 -> m6_2091  [key=0, style=solid];
m6_2090 -> m6_218  [key=2, style=dotted];
m6_2090 -> m6_2092  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_2090 -> m6_2093  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_2091 -> m6_2092  [key=0, style=solid];
m6_2091 -> m6_77  [key=2, style=dotted];
m6_2092 -> m6_2093  [key=0, style=solid];
m6_2092 -> m6_77  [key=2, style=dotted];
m6_2093 -> m6_2094  [key=0, style=solid];
m6_2093 -> m6_77  [key=2, style=dotted];
m6_2094 -> m6_2080  [color=blue, key=0, style=bold];
m6_3339 -> m6_3340  [key=0, style=solid];
m6_3340 -> m6_3341  [key=0, style=solid];
m6_3340 -> m6_3344  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_3341 -> m6_3342  [key=0, style=solid];
m6_3341 -> m6_527  [key=2, style=dotted];
m6_3341 -> m6_3343  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_3342 -> m6_3339  [color=blue, key=0, style=bold];
m6_673 -> m6_674  [key=0, style=solid];
m6_674 -> m6_675  [key=0, style=solid];
m6_674 -> m6_217  [key=2, style=dotted];
m6_675 -> m6_676  [key=0, style=solid];
m6_675 -> m6_77  [key=2, style=dotted];
m6_676 -> m6_673  [color=blue, key=0, style=bold];
m6_3043 -> m6_3044  [key=0, style=solid];
m6_3044 -> m6_3045  [key=0, style=solid];
m6_3044 -> m6_422  [key=2, style=dotted];
m6_3044 -> m6_3046  [color=darkseagreen4, key=1, label=product, style=dashed];
m6_3044 -> m6_3047  [color=darkseagreen4, key=1, label=product, style=dashed];
m6_3044 -> m6_3048  [color=darkseagreen4, key=1, label=product, style=dashed];
m6_3044 -> m6_3049  [color=darkseagreen4, key=1, label=product, style=dashed];
m6_3044 -> m6_3050  [color=darkseagreen4, key=1, label=product, style=dashed];
m6_3045 -> m6_3046  [key=0, style=solid];
m6_3046 -> m6_3047  [key=0, style=solid];
m6_3046 -> m6_423  [key=2, style=dotted];
m6_3047 -> m6_3048  [key=0, style=solid];
m6_3048 -> m6_3049  [key=0, style=solid];
m6_3049 -> m6_3050  [key=0, style=solid];
m6_3049 -> m6_217  [key=2, style=dotted];
m6_3050 -> m6_3051  [key=0, style=solid];
m6_3050 -> m6_145  [key=2, style=dotted];
m6_3050 -> m6_3056  [key=2, style=dotted];
m6_3050 -> m6_3057  [key=2, style=dotted];
m6_3050 -> m6_600  [key=2, style=dotted];
m6_3051 -> m6_3052  [key=0, style=solid];
m6_3051 -> m6_77  [key=2, style=dotted];
m6_3052 -> m6_3053  [key=0, style=solid];
m6_3053 -> m6_3054  [key=0, style=solid];
m6_3053 -> m6_145  [key=2, style=dotted];
m6_3053 -> m6_3056  [key=2, style=dotted];
m6_3053 -> m6_3057  [key=2, style=dotted];
m6_3053 -> m6_3058  [key=2, style=dotted];
m6_3053 -> m6_600  [key=2, style=dotted];
m6_3054 -> m6_3055  [key=0, style=solid];
m6_3054 -> m6_77  [key=2, style=dotted];
m6_3055 -> m6_3043  [color=blue, key=0, style=bold];
m6_1003 -> m6_1004  [key=0, style=solid];
m6_1004 -> m6_1005  [key=0, style=solid];
m6_1004 -> m6_1011  [key=2, style=dotted];
m6_1004 -> m6_1006  [color=darkseagreen4, key=1, label=aa, style=dashed];
m6_1004 -> m6_1007  [color=darkseagreen4, key=1, label=aa, style=dashed];
m6_1004 -> m6_1008  [color=darkseagreen4, key=1, label=aa, style=dashed];
m6_1005 -> m6_1006  [key=0, style=solid];
m6_1006 -> m6_1007  [key=0, style=solid];
m6_1007 -> m6_1008  [key=0, style=solid];
m6_1008 -> m6_1009  [key=0, style=solid];
m6_1008 -> m6_217  [key=2, style=dotted];
m6_1009 -> m6_1010  [key=0, style=solid];
m6_1009 -> m6_77  [key=2, style=dotted];
m6_1010 -> m6_1003  [color=blue, key=0, style=bold];
m6_3871 -> m6_3872  [key=0, style=solid];
m6_3872 -> m6_3871  [color=blue, key=0, style=bold];
m6_2198 -> m6_2199  [key=0, style=solid];
m6_2199 -> m6_2200  [key=0, style=solid];
m6_2199 -> m6_258  [key=2, style=dotted];
m6_2199 -> m6_2201  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m6_2199 -> m6_2202  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m6_2200 -> m6_2201  [key=0, style=solid];
m6_2200 -> m6_2197  [key=2, style=dotted];
m6_2200 -> m6_623  [key=2, style=dotted];
m6_2201 -> m6_2202  [key=0, style=solid];
m6_2201 -> m6_2197  [key=2, style=dotted];
m6_2201 -> m6_623  [key=2, style=dotted];
m6_2202 -> m6_2203  [key=0, style=solid];
m6_2202 -> m6_227  [key=2, style=dotted];
m6_2202 -> m6_2204  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_2203 -> m6_2204  [key=0, style=solid];
m6_2203 -> m6_77  [key=2, style=dotted];
m6_2204 -> m6_2205  [key=0, style=solid];
m6_2204 -> m6_218  [key=2, style=dotted];
m6_2205 -> m6_2206  [key=0, style=solid];
m6_2205 -> m6_77  [key=2, style=dotted];
m6_2206 -> m6_2198  [color=blue, key=0, style=bold];
m6_4114 -> m6_4115  [key=0, style=solid];
m6_4115 -> m6_4116  [key=0, style=solid];
m6_4115 -> m6_4111  [key=2, style=dotted];
m6_4116 -> m6_4114  [color=blue, key=0, style=bold];
m6_1574 -> m6_1575  [key=0, style=solid];
m6_1575 -> m6_1576  [key=0, style=solid];
m6_1576 -> m6_1577  [key=0, style=solid];
m6_1576 -> m6_218  [key=2, style=dotted];
m6_1576 -> m6_1578  [color=darkseagreen4, key=1, label=dic, style=dashed];
m6_1576 -> m6_1579  [color=darkseagreen4, key=1, label=dic, style=dashed];
m6_1576 -> m6_1580  [color=darkseagreen4, key=1, label=dic, style=dashed];
m6_1577 -> m6_1578  [key=0, style=solid];
m6_1577 -> m6_77  [key=2, style=dotted];
m6_1578 -> m6_1579  [key=0, style=solid];
m6_1578 -> m6_77  [key=2, style=dotted];
m6_1579 -> m6_1580  [key=0, style=solid];
m6_1579 -> m6_77  [key=2, style=dotted];
m6_1580 -> m6_1581  [key=0, style=solid];
m6_1580 -> m6_77  [key=2, style=dotted];
m6_1581 -> m6_1574  [color=blue, key=0, style=bold];
m6_2778 -> m6_2779  [key=0, style=solid];
m6_2779 -> m6_2780  [key=0, style=solid];
m6_2780 -> m6_2781  [key=0, style=solid];
m6_2780 -> m6_1219  [key=2, style=dotted];
m6_2780 -> m6_2783  [color=darkseagreen4, key=1, label=uri, style=dashed];
m6_2781 -> m6_2782  [key=0, style=solid];
m6_2781 -> m6_217  [key=2, style=dotted];
m6_2783 -> m6_2784  [key=0, style=solid];
m6_2783 -> m6_77  [key=2, style=dotted];
m6_2782 -> m6_2783  [key=0, style=solid];
m6_2782 -> m6_218  [key=2, style=dotted];
m6_2784 -> m6_2778  [color=blue, key=0, style=bold];
m6_1670 -> m6_1671  [key=0, style=solid];
m6_1671 -> m6_1672  [key=0, style=solid];
m6_1671 -> m6_1673  [key=2, style=dotted];
m6_1672 -> m6_1670  [color=blue, key=0, style=bold];
m6_2625 -> m6_2626  [key=0, style=solid];
m6_2626 -> m6_2627  [key=0, style=solid];
m6_2627 -> m6_2625  [color=blue, key=0, style=bold];
m6_3042 -> m6_3960  [key=0, style=solid];
m6_3960 -> m6_3961  [key=0, style=solid];
m6_3960 -> m6_3958  [key=2, style=dotted];
m6_3961 -> m6_3042  [color=blue, key=0, style=bold];
m6_3440 -> m6_3441  [key=0, style=solid];
m6_3441 -> m6_3442  [key=0, style=solid];
m6_3441 -> m6_3448  [key=2, style=dotted];
m6_3441 -> m6_3443  [color=darkseagreen4, key=1, label=aa, style=dashed];
m6_3441 -> m6_3444  [color=darkseagreen4, key=1, label=aa, style=dashed];
m6_3441 -> m6_3445  [color=darkseagreen4, key=1, label=aa, style=dashed];
m6_3442 -> m6_3443  [key=0, style=solid];
m6_3443 -> m6_3444  [key=0, style=solid];
m6_3444 -> m6_3445  [key=0, style=solid];
m6_3445 -> m6_3446  [key=0, style=solid];
m6_3445 -> m6_217  [key=2, style=dotted];
m6_3446 -> m6_3447  [key=0, style=solid];
m6_3446 -> m6_77  [key=2, style=dotted];
m6_3447 -> m6_3440  [color=blue, key=0, style=bold];
m6_2832 -> m6_2833  [key=0, style=solid];
m6_2833 -> m6_2834  [key=0, style=solid];
m6_2833 -> m6_3  [key=2, style=dotted];
m6_2833 -> m6_2836  [color=darkseagreen4, key=1, label=d1, style=dashed];
m6_2833 -> m6_2837  [color=darkseagreen4, key=1, label=d1, style=dashed];
m6_2834 -> m6_2835  [key=0, style=solid];
m6_2834 -> m6_217  [key=2, style=dotted];
m6_2836 -> m6_2837  [key=0, style=solid];
m6_2836 -> m6_77  [key=2, style=dotted];
m6_2837 -> m6_2838  [key=0, style=solid];
m6_2837 -> m6_77  [key=2, style=dotted];
m6_2835 -> m6_2836  [key=0, style=solid];
m6_2835 -> m6_218  [key=2, style=dotted];
m6_2835 -> m6_2837  [color=darkseagreen4, key=1, label=d2, style=dashed];
m6_2838 -> m6_2832  [color=blue, key=0, style=bold];
m6_1547 -> m6_1548  [key=0, style=solid];
m6_1548 -> m6_1549  [key=0, style=solid];
m6_1548 -> m6_623  [key=2, style=dotted];
m6_1549 -> m6_1547  [color=blue, key=0, style=bold];
m6_3902 -> m6_3903  [key=0, style=solid];
m6_3903 -> m6_3904  [key=0, style=solid];
m6_3903 -> m6_3906  [key=2, style=dotted];
m6_3903 -> m6_3907  [key=2, style=dotted];
m6_3903 -> m6_3908  [key=2, style=dotted];
m6_3903 -> m6_3909  [key=2, style=dotted];
m6_3903 -> m6_3903  [color=darkseagreen4, key=1, label=t, style=dashed];
m6_3904 -> m6_3905  [key=0, style=solid];
m6_3904 -> m6_3910  [key=2, style=dotted];
m6_3904 -> m6_3911  [key=2, style=dotted];
m6_3904 -> m6_3912  [key=2, style=dotted];
m6_3904 -> m6_3913  [key=2, style=dotted];
m6_3904 -> m6_3884  [key=2, style=dotted];
m6_3904 -> m6_3904  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_3905 -> m6_3902  [color=blue, key=0, style=bold];
m6_3071 -> m6_3072  [key=0, style=solid];
m6_3072 -> m6_3073  [key=0, style=solid];
m6_3073 -> m6_3071  [color=blue, key=0, style=bold];
m6_4090 -> m6_4091  [key=0, style=solid];
m6_4091 -> m6_4092  [key=0, style=solid];
m6_4092 -> m6_4090  [color=blue, key=0, style=bold];
m6_2425 -> m6_2426  [key=0, style=solid];
m6_2426 -> m6_2427  [key=0, style=solid];
m6_2426 -> m6_218  [key=2, style=dotted];
m6_2427 -> m6_2428  [key=0, style=solid];
m6_2427 -> m6_77  [key=2, style=dotted];
m6_2428 -> m6_2425  [color=blue, key=0, style=bold];
m6_3399 -> m6_3400  [key=0, style=solid];
m6_3400 -> m6_3401  [key=0, style=solid];
m6_3401 -> m6_3399  [color=blue, key=0, style=bold];
m6_2322 -> m6_2323  [key=0, style=solid];
m6_2323 -> m6_2324  [key=0, style=solid];
m6_2324 -> m6_2325  [key=0, style=solid];
m6_2324 -> m6_218  [key=2, style=dotted];
m6_2325 -> m6_2326  [key=0, style=solid];
m6_2325 -> m6_77  [key=2, style=dotted];
m6_2326 -> m6_2322  [color=blue, key=0, style=bold];
m6_2262 -> m6_2263  [key=0, style=solid];
m6_2263 -> m6_2264  [key=0, style=solid];
m6_2263 -> m6_2269  [key=2, style=dotted];
m6_2263 -> m6_2270  [key=2, style=dotted];
m6_2263 -> m6_423  [key=2, style=dotted];
m6_2263 -> m6_608  [key=2, style=dotted];
m6_2263 -> m6_217  [key=2, style=dotted];
m6_2263 -> m6_2265  [color=darkseagreen4, key=1, label=serializeObject, style=dashed];
m6_2264 -> m6_2265  [key=0, style=solid];
m6_2264 -> m6_77  [key=2, style=dotted];
m6_2265 -> m6_2266  [key=0, style=solid];
m6_2265 -> m6_218  [key=2, style=dotted];
m6_2265 -> m6_2267  [color=darkseagreen4, key=1, label=deserializeObject, style=dashed];
m6_2266 -> m6_2267  [key=0, style=solid];
m6_2266 -> m6_608  [key=2, style=dotted];
m6_2266 -> m6_77  [key=2, style=dotted];
m6_2267 -> m6_2268  [key=0, style=solid];
m6_2267 -> m6_423  [key=2, style=dotted];
m6_2267 -> m6_77  [key=2, style=dotted];
m6_2268 -> m6_2262  [color=blue, key=0, style=bold];
m6_2515 -> m6_2516  [key=0, style=solid];
m6_2516 -> m6_2517  [key=0, style=solid];
m6_2516 -> m6_2519  [key=2, style=dotted];
m6_2516 -> m6_217  [key=2, style=dotted];
m6_2517 -> m6_2518  [key=0, style=solid];
m6_2517 -> m6_218  [key=2, style=dotted];
m6_2518 -> m6_2515  [color=blue, key=0, style=bold];
m6_3530 -> m6_3531  [key=0, style=solid];
m6_3531 -> m6_3532  [key=0, style=solid];
m6_3531 -> m6_3448  [key=2, style=dotted];
m6_3531 -> m6_3533  [color=darkseagreen4, key=1, label=aa, style=dashed];
m6_3531 -> m6_3534  [color=darkseagreen4, key=1, label=aa, style=dashed];
m6_3531 -> m6_3535  [color=darkseagreen4, key=1, label=aa, style=dashed];
m6_3532 -> m6_3533  [key=0, style=solid];
m6_3533 -> m6_3534  [key=0, style=solid];
m6_3534 -> m6_3535  [key=0, style=solid];
m6_3535 -> m6_3536  [key=0, style=solid];
m6_3535 -> m6_217  [key=2, style=dotted];
m6_3536 -> m6_3537  [key=0, style=solid];
m6_3536 -> m6_77  [key=2, style=dotted];
m6_3537 -> m6_3530  [color=blue, key=0, style=bold];
m6_321 -> m6_322  [key=0, style=solid];
m6_322 -> m6_323  [key=0, style=solid];
m6_322 -> m6_330  [key=2, style=dotted];
m6_322 -> m6_324  [color=darkseagreen4, key=1, label=baseWith, style=dashed];
m6_322 -> m6_325  [color=darkseagreen4, key=1, label=baseWith, style=dashed];
m6_322 -> m6_326  [color=darkseagreen4, key=1, label=baseWith, style=dashed];
m6_322 -> m6_327  [color=darkseagreen4, key=1, label=baseWith, style=dashed];
m6_323 -> m6_324  [key=0, style=solid];
m6_324 -> m6_325  [key=0, style=solid];
m6_325 -> m6_326  [key=0, style=solid];
m6_326 -> m6_327  [key=0, style=solid];
m6_327 -> m6_328  [key=0, style=solid];
m6_327 -> m6_331  [key=2, style=dotted];
m6_328 -> m6_329  [key=0, style=solid];
m6_328 -> m6_77  [key=2, style=dotted];
m6_329 -> m6_321  [color=blue, key=0, style=bold];
m6_3563 -> m6_3564  [key=0, style=solid];
m6_3564 -> m6_3565  [key=0, style=solid];
m6_3564 -> m6_3570  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_3565 -> m6_3566  [key=0, style=solid];
m6_3565 -> m6_218  [key=2, style=dotted];
m6_3565 -> m6_3567  [color=darkseagreen4, key=1, label=aa, style=dashed];
m6_3565 -> m6_3568  [color=darkseagreen4, key=1, label=aa, style=dashed];
m6_3565 -> m6_3569  [color=darkseagreen4, key=1, label=aa, style=dashed];
m6_3570 -> m6_3571  [key=0, style=solid];
m6_3570 -> m6_77  [key=2, style=dotted];
m6_3566 -> m6_3567  [key=0, style=solid];
m6_3566 -> m6_77  [key=2, style=dotted];
m6_3567 -> m6_3568  [key=0, style=solid];
m6_3567 -> m6_77  [key=2, style=dotted];
m6_3568 -> m6_3569  [key=0, style=solid];
m6_3568 -> m6_77  [key=2, style=dotted];
m6_3569 -> m6_3570  [key=0, style=solid];
m6_3569 -> m6_217  [key=2, style=dotted];
m6_3571 -> m6_3563  [color=blue, key=0, style=bold];
m6_3779 -> m6_3780  [key=0, style=solid];
m6_3780 -> m6_3781  [key=0, style=solid];
m6_3780 -> m6_3318  [key=2, style=dotted];
m6_3781 -> m6_3779  [color=blue, key=0, style=bold];
m6_3647 -> m6_3648  [key=0, style=solid];
m6_3648 -> m6_3649  [key=0, style=solid];
m6_3648 -> m6_3651  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_3648 -> m6_3654  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_3649 -> m6_3650  [key=0, style=solid];
m6_3649 -> m6_218  [key=2, style=dotted];
m6_3651 -> m6_3652  [key=0, style=solid];
m6_3651 -> m6_527  [key=2, style=dotted];
m6_3651 -> m6_3653  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_3650 -> m6_3651  [key=0, style=solid];
m6_3650 -> m6_1895  [key=2, style=dotted];
m6_3650 -> m6_77  [key=2, style=dotted];
m6_3652 -> m6_3647  [color=blue, key=0, style=bold];
m6_147 -> m6_148  [key=0, style=solid];
m6_148 -> m6_149  [key=0, style=solid];
m6_148 -> m6_206  [key=2, style=dotted];
m6_148 -> m6_207  [key=2, style=dotted];
m6_148 -> m6_75  [key=2, style=dotted];
m6_148 -> m6_150  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_148 -> m6_151  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_148 -> m6_152  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_148 -> m6_153  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_148 -> m6_154  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_148 -> m6_155  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_148 -> m6_156  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_148 -> m6_157  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_148 -> m6_159  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_148 -> m6_160  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_148 -> m6_161  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_148 -> m6_162  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_148 -> m6_163  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_148 -> m6_164  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_148 -> m6_165  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_148 -> m6_166  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_148 -> m6_167  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_148 -> m6_168  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_148 -> m6_169  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_148 -> m6_170  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_148 -> m6_171  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_148 -> m6_172  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_148 -> m6_173  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_148 -> m6_174  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_148 -> m6_175  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_148 -> m6_176  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_148 -> m6_177  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_148 -> m6_178  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_148 -> m6_179  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_148 -> m6_180  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_148 -> m6_181  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_148 -> m6_182  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_148 -> m6_183  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_148 -> m6_184  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_148 -> m6_185  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_148 -> m6_186  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_148 -> m6_187  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_148 -> m6_188  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_148 -> m6_189  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_148 -> m6_190  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_148 -> m6_191  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_148 -> m6_192  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_148 -> m6_194  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_148 -> m6_195  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_148 -> m6_196  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_148 -> m6_197  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_148 -> m6_199  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_148 -> m6_200  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_148 -> m6_201  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_148 -> m6_202  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_148 -> m6_203  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_148 -> m6_204  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_149 -> m6_150  [key=0, style=solid];
m6_149 -> m6_76  [key=2, style=dotted];
m6_149 -> m6_151  [color=darkseagreen4, key=1, label=customBinder, style=dashed];
m6_150 -> m6_151  [key=0, style=solid];
m6_151 -> m6_152  [key=0, style=solid];
m6_151 -> m6_77  [key=2, style=dotted];
m6_152 -> m6_153  [key=0, style=solid];
m6_153 -> m6_154  [key=0, style=solid];
m6_153 -> m6_77  [key=2, style=dotted];
m6_154 -> m6_155  [key=0, style=solid];
m6_155 -> m6_156  [key=0, style=solid];
m6_155 -> m6_77  [key=2, style=dotted];
m6_156 -> m6_157  [key=0, style=solid];
m6_156 -> m6_78  [key=2, style=dotted];
m6_157 -> m6_158  [key=0, style=solid];
m6_157 -> m6_78  [key=2, style=dotted];
m6_157 -> m6_77  [key=2, style=dotted];
m6_159 -> m6_160  [key=0, style=solid];
m6_160 -> m6_161  [key=0, style=solid];
m6_160 -> m6_77  [key=2, style=dotted];
m6_161 -> m6_162  [key=0, style=solid];
m6_161 -> m6_80  [key=2, style=dotted];
m6_161 -> m6_81  [key=2, style=dotted];
m6_162 -> m6_163  [key=0, style=solid];
m6_162 -> m6_77  [key=2, style=dotted];
m6_163 -> m6_164  [key=0, style=solid];
m6_163 -> m6_82  [key=2, style=dotted];
m6_164 -> m6_165  [key=0, style=solid];
m6_164 -> m6_83  [key=2, style=dotted];
m6_164 -> m6_77  [key=2, style=dotted];
m6_165 -> m6_166  [key=0, style=solid];
m6_166 -> m6_167  [key=0, style=solid];
m6_166 -> m6_77  [key=2, style=dotted];
m6_167 -> m6_168  [key=0, style=solid];
m6_168 -> m6_169  [key=0, style=solid];
m6_168 -> m6_77  [key=2, style=dotted];
m6_169 -> m6_170  [key=0, style=solid];
m6_169 -> m6_169  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m6_170 -> m6_171  [key=0, style=solid];
m6_170 -> m6_77  [key=2, style=dotted];
m6_171 -> m6_172  [key=0, style=solid];
m6_172 -> m6_173  [key=0, style=solid];
m6_172 -> m6_77  [key=2, style=dotted];
m6_173 -> m6_174  [key=0, style=solid];
m6_174 -> m6_175  [key=0, style=solid];
m6_174 -> m6_77  [key=2, style=dotted];
m6_175 -> m6_176  [key=0, style=solid];
m6_176 -> m6_177  [key=0, style=solid];
m6_176 -> m6_77  [key=2, style=dotted];
m6_177 -> m6_178  [key=0, style=solid];
m6_178 -> m6_179  [key=0, style=solid];
m6_178 -> m6_77  [key=2, style=dotted];
m6_179 -> m6_180  [key=0, style=solid];
m6_180 -> m6_181  [key=0, style=solid];
m6_180 -> m6_77  [key=2, style=dotted];
m6_181 -> m6_182  [key=0, style=solid];
m6_182 -> m6_183  [key=0, style=solid];
m6_182 -> m6_77  [key=2, style=dotted];
m6_183 -> m6_184  [key=0, style=solid];
m6_184 -> m6_185  [key=0, style=solid];
m6_184 -> m6_77  [key=2, style=dotted];
m6_185 -> m6_186  [key=0, style=solid];
m6_185 -> m6_185  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m6_186 -> m6_187  [key=0, style=solid];
m6_186 -> m6_77  [key=2, style=dotted];
m6_187 -> m6_188  [key=0, style=solid];
m6_188 -> m6_189  [key=0, style=solid];
m6_188 -> m6_77  [key=2, style=dotted];
m6_189 -> m6_190  [key=0, style=solid];
m6_190 -> m6_191  [key=0, style=solid];
m6_190 -> m6_77  [key=2, style=dotted];
m6_191 -> m6_192  [key=0, style=solid];
m6_192 -> m6_193  [key=0, style=solid];
m6_192 -> m6_77  [key=2, style=dotted];
m6_194 -> m6_195  [key=0, style=solid];
m6_195 -> m6_196  [key=0, style=solid];
m6_195 -> m6_77  [key=2, style=dotted];
m6_196 -> m6_197  [key=0, style=solid];
m6_197 -> m6_198  [key=0, style=solid];
m6_197 -> m6_77  [key=2, style=dotted];
m6_199 -> m6_200  [key=0, style=solid];
m6_200 -> m6_201  [key=0, style=solid];
m6_200 -> m6_77  [key=2, style=dotted];
m6_201 -> m6_202  [key=0, style=solid];
m6_201 -> m6_201  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m6_202 -> m6_203  [key=0, style=solid];
m6_202 -> m6_77  [key=2, style=dotted];
m6_203 -> m6_204  [key=0, style=solid];
m6_204 -> m6_205  [key=0, style=solid];
m6_204 -> m6_77  [key=2, style=dotted];
m6_158 -> m6_159  [key=0, style=solid];
m6_158 -> m6_79  [key=2, style=dotted];
m6_158 -> m6_160  [color=darkseagreen4, key=1, label=resolver, style=dashed];
m6_193 -> m6_194  [key=0, style=solid];
m6_193 -> m6_84  [key=2, style=dotted];
m6_193 -> m6_195  [color=darkseagreen4, key=1, label=referenceResolver, style=dashed];
m6_198 -> m6_199  [key=0, style=solid];
m6_198 -> m6_85  [key=2, style=dotted];
m6_198 -> m6_200  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m6_205 -> m6_147  [color=blue, key=0, style=bold];
m6_2857 -> m6_2858  [key=0, style=solid];
m6_2858 -> m6_2859  [key=0, style=solid];
m6_2858 -> m6_2862  [key=2, style=dotted];
m6_2858 -> m6_2863  [key=2, style=dotted];
m6_2859 -> m6_2860  [key=0, style=solid];
m6_2859 -> m6_227  [key=2, style=dotted];
m6_2860 -> m6_2861  [key=0, style=solid];
m6_2860 -> m6_77  [key=2, style=dotted];
m6_2861 -> m6_2857  [color=blue, key=0, style=bold];
m6_3489 -> m6_3490  [key=0, style=solid];
m6_3490 -> m6_3491  [key=0, style=solid];
m6_3490 -> m6_3494  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_3491 -> m6_3492  [key=0, style=solid];
m6_3491 -> m6_527  [key=2, style=dotted];
m6_3491 -> m6_3493  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_3492 -> m6_3489  [color=blue, key=0, style=bold];
m6_246 -> m6_247  [key=0, style=solid];
m6_247 -> m6_248  [key=0, style=solid];
m6_248 -> m6_249  [key=0, style=solid];
m6_248 -> m6_218  [key=2, style=dotted];
m6_248 -> m6_250  [color=darkseagreen4, key=1, label=account, style=dashed];
m6_248 -> m6_251  [color=darkseagreen4, key=1, label=account, style=dashed];
m6_249 -> m6_250  [key=0, style=solid];
m6_249 -> m6_77  [key=2, style=dotted];
m6_250 -> m6_251  [key=0, style=solid];
m6_250 -> m6_77  [key=2, style=dotted];
m6_251 -> m6_252  [key=0, style=solid];
m6_251 -> m6_77  [key=2, style=dotted];
m6_252 -> m6_246  [color=blue, key=0, style=bold];
m6_2489 -> m6_2490  [key=0, style=solid];
m6_2490 -> m6_2491  [key=0, style=solid];
m6_2490 -> m6_2494  [key=2, style=dotted];
m6_2491 -> m6_2492  [key=0, style=solid];
m6_2491 -> m6_227  [key=2, style=dotted];
m6_2492 -> m6_2493  [key=0, style=solid];
m6_2492 -> m6_77  [key=2, style=dotted];
m6_2493 -> m6_2489  [color=blue, key=0, style=bold];
m6_0 -> m6_1  [key=0, style=solid];
m6_1 -> m6_2  [key=0, style=solid];
m6_1 -> m6_3  [key=2, style=dotted];
m6_2 -> m6_0  [color=blue, key=0, style=bold];
m6_1623 -> m6_1624  [key=0, style=solid];
m6_1623 -> m6_1626  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m6_1624 -> m6_1625  [key=0, style=solid];
m6_1624 -> m6_1626  [key=0, style=solid];
m6_1626 -> m6_1627  [key=0, style=solid];
m6_1626 -> m6_1628  [key=0, style=solid];
m6_1625 -> m6_1628  [key=0, style=solid];
m6_1625 -> m6_1629  [key=2, style=dotted];
m6_1627 -> m6_1626  [key=0, style=solid];
m6_1627 -> m6_623  [key=2, style=dotted];
m6_1627 -> m6_1627  [color=darkseagreen4, key=1, label=entry, style=dashed];
m6_1628 -> m6_1623  [color=blue, key=0, style=bold];
m6_282 -> m6_283  [key=0, style=solid];
m6_283 -> m6_284  [key=0, style=solid];
m6_283 -> m6_218  [key=2, style=dotted];
m6_283 -> m6_285  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_283 -> m6_286  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_283 -> m6_287  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_284 -> m6_285  [key=0, style=solid];
m6_284 -> m6_77  [key=2, style=dotted];
m6_285 -> m6_286  [key=0, style=solid];
m6_285 -> m6_77  [key=2, style=dotted];
m6_286 -> m6_287  [key=0, style=solid];
m6_286 -> m6_77  [key=2, style=dotted];
m6_287 -> m6_288  [key=0, style=solid];
m6_287 -> m6_77  [key=2, style=dotted];
m6_288 -> m6_282  [color=blue, key=0, style=bold];
m6_2594 -> m6_2595  [key=0, style=solid];
m6_2595 -> m6_2596  [key=0, style=solid];
m6_2595 -> m6_1934  [key=2, style=dotted];
m6_2596 -> m6_2594  [color=blue, key=0, style=bold];
m6_2737 -> m6_2738  [key=0, style=solid];
m6_2738 -> m6_2739  [key=0, style=solid];
m6_2739 -> m6_2740  [key=0, style=solid];
m6_2739 -> m6_218  [key=2, style=dotted];
m6_2739 -> m6_2741  [color=darkseagreen4, key=1, label=values, style=dashed];
m6_2739 -> m6_2742  [color=darkseagreen4, key=1, label=values, style=dashed];
m6_2739 -> m6_2743  [color=darkseagreen4, key=1, label=values, style=dashed];
m6_2739 -> m6_2744  [color=darkseagreen4, key=1, label=values, style=dashed];
m6_2739 -> m6_2745  [color=darkseagreen4, key=1, label=values, style=dashed];
m6_2739 -> m6_2746  [color=darkseagreen4, key=1, label=values, style=dashed];
m6_2739 -> m6_2747  [color=darkseagreen4, key=1, label=values, style=dashed];
m6_2739 -> m6_2748  [color=darkseagreen4, key=1, label=values, style=dashed];
m6_2740 -> m6_2741  [key=0, style=solid];
m6_2740 -> m6_77  [key=2, style=dotted];
m6_2741 -> m6_2742  [key=0, style=solid];
m6_2741 -> m6_77  [key=2, style=dotted];
m6_2742 -> m6_2743  [key=0, style=solid];
m6_2742 -> m6_77  [key=2, style=dotted];
m6_2743 -> m6_2744  [key=0, style=solid];
m6_2743 -> m6_77  [key=2, style=dotted];
m6_2744 -> m6_2745  [key=0, style=solid];
m6_2744 -> m6_77  [key=2, style=dotted];
m6_2745 -> m6_2746  [key=0, style=solid];
m6_2745 -> m6_77  [key=2, style=dotted];
m6_2746 -> m6_2747  [key=0, style=solid];
m6_2746 -> m6_77  [key=2, style=dotted];
m6_2747 -> m6_2748  [key=0, style=solid];
m6_2747 -> m6_77  [key=2, style=dotted];
m6_2748 -> m6_2749  [key=0, style=solid];
m6_2748 -> m6_77  [key=2, style=dotted];
m6_2749 -> m6_2737  [color=blue, key=0, style=bold];
m6_3496 -> m6_3497  [key=0, style=solid];
m6_3497 -> m6_3498  [key=0, style=solid];
m6_3497 -> m6_3507  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_3498 -> m6_3499  [key=0, style=solid];
m6_3498 -> m6_218  [key=2, style=dotted];
m6_3498 -> m6_3500  [color=darkseagreen4, key=1, label=aa, style=dashed];
m6_3498 -> m6_3501  [color=darkseagreen4, key=1, label=aa, style=dashed];
m6_3498 -> m6_3502  [color=darkseagreen4, key=1, label=aa, style=dashed];
m6_3498 -> m6_3503  [color=darkseagreen4, key=1, label=aa, style=dashed];
m6_3498 -> m6_3504  [color=darkseagreen4, key=1, label=aa, style=dashed];
m6_3498 -> m6_3505  [color=darkseagreen4, key=1, label=aa, style=dashed];
m6_3498 -> m6_3506  [color=darkseagreen4, key=1, label=aa, style=dashed];
m6_3507 -> m6_3508  [key=0, style=solid];
m6_3507 -> m6_77  [key=2, style=dotted];
m6_3499 -> m6_3500  [key=0, style=solid];
m6_3499 -> m6_77  [key=2, style=dotted];
m6_3500 -> m6_3501  [key=0, style=solid];
m6_3500 -> m6_77  [key=2, style=dotted];
m6_3501 -> m6_3502  [key=0, style=solid];
m6_3501 -> m6_3469  [key=2, style=dotted];
m6_3501 -> m6_77  [key=2, style=dotted];
m6_3502 -> m6_3503  [key=0, style=solid];
m6_3502 -> m6_3469  [key=2, style=dotted];
m6_3502 -> m6_77  [key=2, style=dotted];
m6_3503 -> m6_3504  [key=0, style=solid];
m6_3503 -> m6_3469  [key=2, style=dotted];
m6_3503 -> m6_77  [key=2, style=dotted];
m6_3504 -> m6_3505  [key=0, style=solid];
m6_3504 -> m6_77  [key=2, style=dotted];
m6_3505 -> m6_3506  [key=0, style=solid];
m6_3505 -> m6_77  [key=2, style=dotted];
m6_3506 -> m6_3507  [key=0, style=solid];
m6_3506 -> m6_217  [key=2, style=dotted];
m6_3508 -> m6_3496  [color=blue, key=0, style=bold];
m6_974 -> m6_975  [key=0, style=solid];
m6_975 -> m6_976  [key=0, style=solid];
m6_976 -> m6_977  [key=0, style=solid];
m6_976 -> m6_218  [key=2, style=dotted];
m6_976 -> m6_978  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_976 -> m6_979  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_977 -> m6_978  [key=0, style=solid];
m6_977 -> m6_77  [key=2, style=dotted];
m6_978 -> m6_979  [key=0, style=solid];
m6_978 -> m6_77  [key=2, style=dotted];
m6_979 -> m6_980  [key=0, style=solid];
m6_979 -> m6_77  [key=2, style=dotted];
m6_980 -> m6_974  [color=blue, key=0, style=bold];
m6_3154 -> m6_3155  [key=0, style=solid];
m6_3155 -> m6_3156  [key=0, style=solid];
m6_3155 -> m6_258  [key=2, style=dotted];
m6_3155 -> m6_607  [key=2, style=dotted];
m6_3156 -> m6_3157  [key=0, style=solid];
m6_3156 -> m6_227  [key=2, style=dotted];
m6_3156 -> m6_3158  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_3157 -> m6_3158  [key=0, style=solid];
m6_3157 -> m6_77  [key=2, style=dotted];
m6_3158 -> m6_3159  [key=0, style=solid];
m6_3158 -> m6_218  [key=2, style=dotted];
m6_3158 -> m6_3160  [color=darkseagreen4, key=1, label=dic2, style=dashed];
m6_3158 -> m6_3161  [color=darkseagreen4, key=1, label=dic2, style=dashed];
m6_3159 -> m6_3160  [key=0, style=solid];
m6_3159 -> m6_77  [key=2, style=dotted];
m6_3160 -> m6_3161  [key=0, style=solid];
m6_3160 -> m6_607  [key=2, style=dotted];
m6_3160 -> m6_77  [key=2, style=dotted];
m6_3161 -> m6_3162  [key=0, style=solid];
m6_3161 -> m6_607  [key=2, style=dotted];
m6_3161 -> m6_77  [key=2, style=dotted];
m6_3162 -> m6_3154  [color=blue, key=0, style=bold];
m6_3308 -> m6_3309  [key=0, style=solid];
m6_3309 -> m6_3310  [key=0, style=solid];
m6_3309 -> m6_1988  [key=2, style=dotted];
m6_3309 -> m6_145  [key=2, style=dotted];
m6_3309 -> m6_79  [key=2, style=dotted];
m6_3309 -> m6_1110  [key=2, style=dotted];
m6_3310 -> m6_3311  [key=0, style=solid];
m6_3310 -> m6_77  [key=2, style=dotted];
m6_3311 -> m6_3308  [color=blue, key=0, style=bold];
m6_1946 -> m6_1947  [key=0, style=solid];
m6_1947 -> m6_1948  [key=0, style=solid];
m6_1947 -> m6_1934  [key=2, style=dotted];
m6_1948 -> m6_1946  [color=blue, key=0, style=bold];
m6_1963 -> m6_1964  [key=0, style=solid];
m6_1964 -> m6_1965  [key=0, style=solid];
m6_1964 -> m6_3  [key=2, style=dotted];
m6_1965 -> m6_1963  [color=blue, key=0, style=bold];
m6_1359 -> m6_1360  [key=0, style=solid];
m6_1360 -> m6_1361  [key=0, style=solid];
m6_1360 -> m6_1364  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1361 -> m6_1362  [key=0, style=solid];
m6_1361 -> m6_527  [key=2, style=dotted];
m6_1361 -> m6_1363  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_1362 -> m6_1359  [color=blue, key=0, style=bold];
m6_4004 -> m6_4005  [key=0, style=solid];
m6_4005 -> m6_4006  [key=0, style=solid];
m6_4005 -> m6_3992  [key=2, style=dotted];
m6_4006 -> m6_4004  [color=blue, key=0, style=bold];
m6_3449 -> m6_3450  [key=0, style=solid];
m6_3450 -> m6_3451  [key=0, style=solid];
m6_3450 -> m6_3457  [key=2, style=dotted];
m6_3450 -> m6_3452  [color=darkseagreen4, key=1, label=aa, style=dashed];
m6_3450 -> m6_3453  [color=darkseagreen4, key=1, label=aa, style=dashed];
m6_3450 -> m6_3454  [color=darkseagreen4, key=1, label=aa, style=dashed];
m6_3451 -> m6_3452  [key=0, style=solid];
m6_3452 -> m6_3453  [key=0, style=solid];
m6_3453 -> m6_3454  [key=0, style=solid];
m6_3454 -> m6_3455  [key=0, style=solid];
m6_3454 -> m6_227  [key=2, style=dotted];
m6_3455 -> m6_3456  [key=0, style=solid];
m6_3455 -> m6_77  [key=2, style=dotted];
m6_3456 -> m6_3449  [color=blue, key=0, style=bold];
m6_1687 -> m6_1688  [key=0, style=solid];
m6_1687 -> m6_1689  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_1687 -> m6_1690  [color=darkseagreen4, key=1, label="System.DateTimeOffset", style=dashed];
m6_1687 -> m6_1691  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.Person", style=dashed];
m6_1688 -> m6_1689  [key=0, style=solid];
m6_1689 -> m6_1690  [key=0, style=solid];
m6_1690 -> m6_1691  [key=0, style=solid];
m6_1691 -> m6_1692  [key=0, style=solid];
m6_1692 -> m6_1693  [key=0, style=solid];
m6_1692 -> m6_835  [key=2, style=dotted];
m6_1693 -> m6_1687  [color=blue, key=0, style=bold];
m6_1630 -> m6_1631  [key=0, style=solid];
m6_1631 -> m6_1632  [key=0, style=solid];
m6_1631 -> m6_146  [key=2, style=dotted];
m6_1632 -> m6_1630  [color=blue, key=0, style=bold];
m6_2106 -> m6_2107  [key=0, style=solid];
m6_2107 -> m6_2108  [key=0, style=solid];
m6_2108 -> m6_2109  [key=0, style=solid];
m6_2108 -> m6_145  [key=2, style=dotted];
m6_2108 -> m6_856  [key=2, style=dotted];
m6_2108 -> m6_2110  [color=darkseagreen4, key=1, label=dic, style=dashed];
m6_2109 -> m6_2110  [key=0, style=solid];
m6_2109 -> m6_382  [key=2, style=dotted];
m6_2109 -> m6_77  [key=2, style=dotted];
m6_2110 -> m6_2111  [key=0, style=solid];
m6_2110 -> m6_77  [key=2, style=dotted];
m6_2111 -> m6_2106  [color=blue, key=0, style=bold];
m6_2314 -> m6_2315  [key=0, style=solid];
m6_2315 -> m6_2316  [key=0, style=solid];
m6_2315 -> m6_218  [key=2, style=dotted];
m6_2316 -> m6_2317  [key=0, style=solid];
m6_2316 -> m6_77  [key=2, style=dotted];
m6_2317 -> m6_2314  [color=blue, key=0, style=bold];
m6_2112 -> m6_2113  [key=0, style=solid];
m6_2113 -> m6_2114  [key=0, style=solid];
m6_2113 -> m6_2125  [key=2, style=dotted];
m6_2113 -> m6_2115  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_2113 -> m6_2116  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_2113 -> m6_2118  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_2113 -> m6_2119  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_2114 -> m6_2115  [key=0, style=solid];
m6_2115 -> m6_2116  [key=0, style=solid];
m6_2116 -> m6_2117  [key=0, style=solid];
m6_2116 -> m6_227  [key=2, style=dotted];
m6_2118 -> m6_2119  [key=0, style=solid];
m6_2119 -> m6_2120  [key=0, style=solid];
m6_2119 -> m6_227  [key=2, style=dotted];
m6_2119 -> m6_2121  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_2117 -> m6_2118  [key=0, style=solid];
m6_2117 -> m6_77  [key=2, style=dotted];
m6_2120 -> m6_2121  [key=0, style=solid];
m6_2120 -> m6_77  [key=2, style=dotted];
m6_2121 -> m6_2122  [key=0, style=solid];
m6_2121 -> m6_218  [key=2, style=dotted];
m6_2121 -> m6_2123  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m6_2122 -> m6_2123  [key=0, style=solid];
m6_2122 -> m6_77  [key=2, style=dotted];
m6_2123 -> m6_2124  [key=0, style=solid];
m6_2123 -> m6_77  [key=2, style=dotted];
m6_2124 -> m6_2112  [color=blue, key=0, style=bold];
m6_3333 -> m6_3334  [key=0, style=solid];
m6_3334 -> m6_3335  [key=0, style=solid];
m6_3334 -> m6_3318  [key=2, style=dotted];
m6_3335 -> m6_3333  [color=blue, key=0, style=bold];
m6_229 -> m6_230  [key=0, style=solid];
m6_230 -> m6_231  [key=0, style=solid];
m6_230 -> m6_230  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m6_231 -> m6_232  [key=0, style=solid];
m6_231 -> m6_218  [key=2, style=dotted];
m6_231 -> m6_233  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_231 -> m6_234  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_231 -> m6_235  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_231 -> m6_236  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_231 -> m6_237  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_231 -> m6_238  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_231 -> m6_239  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_231 -> m6_240  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_231 -> m6_241  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_232 -> m6_233  [key=0, style=solid];
m6_232 -> m6_77  [key=2, style=dotted];
m6_233 -> m6_234  [key=0, style=solid];
m6_233 -> m6_77  [key=2, style=dotted];
m6_234 -> m6_235  [key=0, style=solid];
m6_234 -> m6_77  [key=2, style=dotted];
m6_235 -> m6_236  [key=0, style=solid];
m6_235 -> m6_77  [key=2, style=dotted];
m6_236 -> m6_237  [key=0, style=solid];
m6_236 -> m6_77  [key=2, style=dotted];
m6_237 -> m6_238  [key=0, style=solid];
m6_237 -> m6_77  [key=2, style=dotted];
m6_238 -> m6_239  [key=0, style=solid];
m6_238 -> m6_77  [key=2, style=dotted];
m6_239 -> m6_240  [key=0, style=solid];
m6_239 -> m6_243  [key=2, style=dotted];
m6_239 -> m6_244  [key=2, style=dotted];
m6_239 -> m6_245  [key=2, style=dotted];
m6_240 -> m6_241  [key=0, style=solid];
m6_240 -> m6_243  [key=2, style=dotted];
m6_240 -> m6_244  [key=2, style=dotted];
m6_240 -> m6_245  [key=2, style=dotted];
m6_241 -> m6_242  [key=0, style=solid];
m6_241 -> m6_77  [key=2, style=dotted];
m6_242 -> m6_229  [color=blue, key=0, style=bold];
m6_1882 -> m6_1883  [key=0, style=solid];
m6_1883 -> m6_1884  [key=0, style=solid];
m6_1883 -> m6_1894  [key=2, style=dotted];
m6_1883 -> m6_1885  [color=darkseagreen4, key=1, label=testObject, style=dashed];
m6_1883 -> m6_1886  [color=darkseagreen4, key=1, label=testObject, style=dashed];
m6_1883 -> m6_1890  [color=darkseagreen4, key=1, label=testObject, style=dashed];
m6_1883 -> m6_1891  [color=darkseagreen4, key=1, label=testObject, style=dashed];
m6_1884 -> m6_1885  [key=0, style=solid];
m6_1884 -> m6_1895  [key=2, style=dotted];
m6_1885 -> m6_1886  [key=0, style=solid];
m6_1885 -> m6_1895  [key=2, style=dotted];
m6_1886 -> m6_1887  [key=0, style=solid];
m6_1886 -> m6_227  [key=2, style=dotted];
m6_1886 -> m6_1888  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1886 -> m6_1889  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1890 -> m6_1891  [key=0, style=solid];
m6_1890 -> m6_1896  [key=2, style=dotted];
m6_1890 -> m6_77  [key=2, style=dotted];
m6_1891 -> m6_1892  [key=0, style=solid];
m6_1891 -> m6_1896  [key=2, style=dotted];
m6_1891 -> m6_77  [key=2, style=dotted];
m6_1887 -> m6_1888  [key=0, style=solid];
m6_1888 -> m6_1889  [key=0, style=solid];
m6_1888 -> m6_77  [key=2, style=dotted];
m6_1889 -> m6_1890  [key=0, style=solid];
m6_1889 -> m6_218  [key=2, style=dotted];
m6_1889 -> m6_1891  [color=darkseagreen4, key=1, label=newTestObject, style=dashed];
m6_1889 -> m6_1892  [color=darkseagreen4, key=1, label=newTestObject, style=dashed];
m6_1892 -> m6_1893  [key=0, style=solid];
m6_1892 -> m6_1897  [key=2, style=dotted];
m6_1893 -> m6_1882  [color=blue, key=0, style=bold];
m6_3572 -> m6_3573  [key=0, style=solid];
m6_3573 -> m6_3574  [key=0, style=solid];
m6_3573 -> m6_3581  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_3574 -> m6_3575  [key=0, style=solid];
m6_3574 -> m6_218  [key=2, style=dotted];
m6_3574 -> m6_3576  [color=darkseagreen4, key=1, label=aa, style=dashed];
m6_3574 -> m6_3577  [color=darkseagreen4, key=1, label=aa, style=dashed];
m6_3574 -> m6_3578  [color=darkseagreen4, key=1, label=aa, style=dashed];
m6_3574 -> m6_3579  [color=darkseagreen4, key=1, label=aa, style=dashed];
m6_3574 -> m6_3580  [color=darkseagreen4, key=1, label=aa, style=dashed];
m6_3581 -> m6_3582  [key=0, style=solid];
m6_3581 -> m6_77  [key=2, style=dotted];
m6_3575 -> m6_3576  [key=0, style=solid];
m6_3575 -> m6_77  [key=2, style=dotted];
m6_3576 -> m6_3577  [key=0, style=solid];
m6_3576 -> m6_77  [key=2, style=dotted];
m6_3577 -> m6_3578  [key=0, style=solid];
m6_3577 -> m6_3469  [key=2, style=dotted];
m6_3577 -> m6_77  [key=2, style=dotted];
m6_3578 -> m6_3579  [key=0, style=solid];
m6_3578 -> m6_3469  [key=2, style=dotted];
m6_3578 -> m6_77  [key=2, style=dotted];
m6_3579 -> m6_3580  [key=0, style=solid];
m6_3579 -> m6_3469  [key=2, style=dotted];
m6_3579 -> m6_77  [key=2, style=dotted];
m6_3580 -> m6_3581  [key=0, style=solid];
m6_3580 -> m6_217  [key=2, style=dotted];
m6_3582 -> m6_3572  [color=blue, key=0, style=bold];
m6_468 -> m6_469  [key=0, style=solid];
m6_469 -> m6_470  [key=0, style=solid];
m6_470 -> m6_471  [key=0, style=solid];
m6_470 -> m6_406  [key=2, style=dotted];
m6_470 -> m6_472  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_471 -> m6_472  [key=0, style=solid];
m6_471 -> m6_467  [key=2, style=dotted];
m6_471 -> m6_77  [key=2, style=dotted];
m6_472 -> m6_473  [key=0, style=solid];
m6_472 -> m6_467  [key=2, style=dotted];
m6_472 -> m6_77  [key=2, style=dotted];
m6_473 -> m6_468  [color=blue, key=0, style=bold];
m6_1636 -> m6_1637  [key=0, style=solid];
m6_1637 -> m6_1638  [key=0, style=solid];
m6_1637 -> m6_1639  [key=2, style=dotted];
m6_1638 -> m6_1636  [color=blue, key=0, style=bold];
m6_3805 -> m6_3806  [key=0, style=solid];
m6_3806 -> m6_3807  [key=0, style=solid];
m6_3806 -> m6_527  [key=2, style=dotted];
m6_3806 -> m6_3810  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_3807 -> m6_3808  [key=0, style=solid];
m6_3807 -> m6_145  [key=2, style=dotted];
m6_3807 -> m6_856  [key=2, style=dotted];
m6_3808 -> m6_3809  [key=0, style=solid];
m6_3808 -> m6_77  [key=2, style=dotted];
m6_3809 -> m6_3805  [color=blue, key=0, style=bold];
m6_884 -> m6_885  [key=0, style=solid];
m6_885 -> m6_886  [key=0, style=solid];
m6_885 -> m6_894  [key=2, style=dotted];
m6_885 -> m6_887  [color=darkseagreen4, key=1, label=c1, style=dashed];
m6_885 -> m6_888  [color=darkseagreen4, key=1, label=c1, style=dashed];
m6_886 -> m6_887  [key=0, style=solid];
m6_886 -> m6_815  [key=2, style=dotted];
m6_887 -> m6_888  [key=0, style=solid];
m6_887 -> m6_815  [key=2, style=dotted];
m6_888 -> m6_889  [key=0, style=solid];
m6_888 -> m6_823  [key=2, style=dotted];
m6_888 -> m6_824  [key=2, style=dotted];
m6_888 -> m6_890  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_889 -> m6_890  [key=0, style=solid];
m6_889 -> m6_77  [key=2, style=dotted];
m6_890 -> m6_891  [key=0, style=solid];
m6_890 -> m6_823  [key=2, style=dotted];
m6_890 -> m6_825  [key=2, style=dotted];
m6_890 -> m6_892  [color=darkseagreen4, key=1, label=c2, style=dashed];
m6_891 -> m6_892  [key=0, style=solid];
m6_891 -> m6_77  [key=2, style=dotted];
m6_892 -> m6_893  [key=0, style=solid];
m6_892 -> m6_77  [key=2, style=dotted];
m6_893 -> m6_884  [color=blue, key=0, style=bold];
m6_1421 -> m6_1422  [key=0, style=solid];
m6_1422 -> m6_1423  [key=0, style=solid];
m6_1422 -> m6_527  [key=2, style=dotted];
m6_1422 -> m6_1424  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_1423 -> m6_1421  [color=blue, key=0, style=bold];
m6_2357 -> m6_2358  [key=0, style=solid];
m6_2358 -> m6_2357  [color=blue, key=0, style=bold];
m6_1824 -> m6_1871  [key=0, style=solid];
m6_1824 -> m6_1872  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_1824 -> m6_1873  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_1824 -> m6_1874  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_1824 -> m6_1875  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_1824 -> m6_1876  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_1824 -> m6_1877  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_1824 -> m6_1878  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_1824 -> m6_1879  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_1824 -> m6_1880  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_1871 -> m6_1872  [key=0, style=solid];
m6_1872 -> m6_1873  [key=0, style=solid];
m6_1873 -> m6_1874  [key=0, style=solid];
m6_1874 -> m6_1875  [key=0, style=solid];
m6_1875 -> m6_1876  [key=0, style=solid];
m6_1876 -> m6_1877  [key=0, style=solid];
m6_1877 -> m6_1878  [key=0, style=solid];
m6_1878 -> m6_1879  [key=0, style=solid];
m6_1879 -> m6_1880  [key=0, style=solid];
m6_1880 -> m6_1881  [key=0, style=solid];
m6_1881 -> m6_1824  [color=blue, key=0, style=bold];
m6_3074 -> m6_3075  [key=0, style=solid];
m6_3075 -> m6_3076  [key=0, style=solid];
m6_3075 -> m6_380  [key=2, style=dotted];
m6_3075 -> m6_3080  [color=darkseagreen4, key=1, label=ms, style=dashed];
m6_3076 -> m6_3077  [key=0, style=solid];
m6_3076 -> m6_3087  [key=2, style=dotted];
m6_3076 -> m6_3078  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_3076 -> m6_3079  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_3080 -> m6_3081  [key=0, style=solid];
m6_3080 -> m6_384  [key=2, style=dotted];
m6_3077 -> m6_3078  [key=0, style=solid];
m6_3077 -> m6_3088  [key=2, style=dotted];
m6_3078 -> m6_3079  [key=0, style=solid];
m6_3078 -> m6_3089  [key=2, style=dotted];
m6_3079 -> m6_3080  [key=0, style=solid];
m6_3079 -> m6_3090  [key=2, style=dotted];
m6_3081 -> m6_3082  [key=0, style=solid];
m6_3081 -> m6_3091  [key=2, style=dotted];
m6_3081 -> m6_562  [key=2, style=dotted];
m6_3082 -> m6_3083  [key=0, style=solid];
m6_3082 -> m6_3092  [key=2, style=dotted];
m6_3082 -> m6_3085  [color=darkseagreen4, key=1, label=a, style=dashed];
m6_3083 -> m6_3084  [key=0, style=solid];
m6_3085 -> m6_3086  [key=0, style=solid];
m6_3085 -> m6_390  [key=2, style=dotted];
m6_3085 -> m6_343  [key=2, style=dotted];
m6_3084 -> m6_3085  [key=0, style=solid];
m6_3084 -> m6_382  [key=2, style=dotted];
m6_3084 -> m6_3093  [key=2, style=dotted];
m6_3086 -> m6_3074  [color=blue, key=0, style=bold];
m6_908 -> m6_909  [key=0, style=solid];
m6_909 -> m6_910  [key=0, style=solid];
m6_910 -> m6_911  [key=0, style=solid];
m6_910 -> m6_217  [key=2, style=dotted];
m6_911 -> m6_912  [key=0, style=solid];
m6_911 -> m6_77  [key=2, style=dotted];
m6_912 -> m6_913  [key=0, style=solid];
m6_912 -> m6_217  [key=2, style=dotted];
m6_913 -> m6_914  [key=0, style=solid];
m6_913 -> m6_77  [key=2, style=dotted];
m6_914 -> m6_908  [color=blue, key=0, style=bold];
m6_1227 -> m6_1228  [key=0, style=solid];
m6_1228 -> m6_1229  [key=0, style=solid];
m6_1228 -> m6_1232  [key=2, style=dotted];
m6_1228 -> m6_3  [key=2, style=dotted];
m6_1229 -> m6_1230  [key=0, style=solid];
m6_1229 -> m6_227  [key=2, style=dotted];
m6_1230 -> m6_1231  [key=0, style=solid];
m6_1230 -> m6_77  [key=2, style=dotted];
m6_1231 -> m6_1227  [color=blue, key=0, style=bold];
m6_2171 -> m6_2172  [key=0, style=solid];
m6_2172 -> m6_2173  [key=0, style=solid];
m6_2172 -> m6_2189  [key=2, style=dotted];
m6_2172 -> m6_2174  [color=darkseagreen4, key=1, label=joe, style=dashed];
m6_2172 -> m6_2175  [color=darkseagreen4, key=1, label=joe, style=dashed];
m6_2172 -> m6_2180  [color=darkseagreen4, key=1, label=joe, style=dashed];
m6_2173 -> m6_2174  [key=0, style=solid];
m6_2174 -> m6_2175  [key=0, style=solid];
m6_2175 -> m6_2176  [key=0, style=solid];
m6_2180 -> m6_2181  [key=0, style=solid];
m6_2180 -> m6_227  [key=2, style=dotted];
m6_2176 -> m6_2177  [key=0, style=solid];
m6_2176 -> m6_2189  [key=2, style=dotted];
m6_2176 -> m6_2178  [color=darkseagreen4, key=1, label=martha, style=dashed];
m6_2176 -> m6_2179  [color=darkseagreen4, key=1, label=martha, style=dashed];
m6_2176 -> m6_2180  [color=darkseagreen4, key=1, label=martha, style=dashed];
m6_2177 -> m6_2178  [key=0, style=solid];
m6_2178 -> m6_2179  [key=0, style=solid];
m6_2179 -> m6_2180  [key=0, style=solid];
m6_2181 -> m6_2182  [key=0, style=solid];
m6_2181 -> m6_343  [key=2, style=dotted];
m6_2182 -> m6_2183  [key=0, style=solid];
m6_2183 -> m6_2184  [key=0, style=solid];
m6_2183 -> m6_218  [key=2, style=dotted];
m6_2184 -> m6_2185  [key=0, style=solid];
m6_2184 -> m6_2190  [key=2, style=dotted];
m6_2185 -> m6_2186  [key=0, style=solid];
m6_2186 -> m6_2187  [key=0, style=solid];
m6_2186 -> m6_218  [key=2, style=dotted];
m6_2187 -> m6_2188  [key=0, style=solid];
m6_2187 -> m6_2190  [key=2, style=dotted];
m6_2188 -> m6_2171  [color=blue, key=0, style=bold];
m6_2506 -> m6_2507  [key=0, style=solid];
m6_2507 -> m6_2508  [key=0, style=solid];
m6_2508 -> m6_2506  [color=blue, key=0, style=bold];
m6_783 -> m6_784  [key=0, style=solid];
m6_784 -> m6_785  [key=0, style=solid];
m6_784 -> m6_797  [key=2, style=dotted];
m6_784 -> m6_787  [color=darkseagreen4, key=1, label=name, style=dashed];
m6_784 -> m6_788  [color=darkseagreen4, key=1, label=name, style=dashed];
m6_784 -> m6_789  [color=darkseagreen4, key=1, label=name, style=dashed];
m6_785 -> m6_786  [key=0, style=solid];
m6_785 -> m6_798  [key=2, style=dotted];
m6_785 -> m6_787  [color=darkseagreen4, key=1, label=p1, style=dashed];
m6_787 -> m6_788  [key=0, style=solid];
m6_787 -> m6_545  [key=2, style=dotted];
m6_788 -> m6_789  [key=0, style=solid];
m6_788 -> m6_545  [key=2, style=dotted];
m6_789 -> m6_790  [key=0, style=solid];
m6_789 -> m6_227  [key=2, style=dotted];
m6_789 -> m6_791  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_786 -> m6_787  [key=0, style=solid];
m6_786 -> m6_798  [key=2, style=dotted];
m6_786 -> m6_788  [color=darkseagreen4, key=1, label=p2, style=dashed];
m6_790 -> m6_791  [key=0, style=solid];
m6_790 -> m6_77  [key=2, style=dotted];
m6_790 -> m6_790  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m6_791 -> m6_792  [key=0, style=solid];
m6_791 -> m6_218  [key=2, style=dotted];
m6_791 -> m6_793  [color=darkseagreen4, key=1, label=newName, style=dashed];
m6_791 -> m6_794  [color=darkseagreen4, key=1, label=newName, style=dashed];
m6_791 -> m6_795  [color=darkseagreen4, key=1, label=newName, style=dashed];
m6_792 -> m6_793  [key=0, style=solid];
m6_792 -> m6_77  [key=2, style=dotted];
m6_793 -> m6_794  [key=0, style=solid];
m6_793 -> m6_77  [key=2, style=dotted];
m6_794 -> m6_795  [key=0, style=solid];
m6_794 -> m6_77  [key=2, style=dotted];
m6_795 -> m6_796  [key=0, style=solid];
m6_795 -> m6_77  [key=2, style=dotted];
m6_796 -> m6_783  [color=blue, key=0, style=bold];
m6_4102 -> m6_4103  [key=0, style=solid];
m6_4103 -> m6_4104  [key=0, style=solid];
m6_4103 -> m6_4105  [key=2, style=dotted];
m6_4104 -> m6_4102  [color=blue, key=0, style=bold];
m6_1763 -> m6_1764  [key=0, style=solid];
m6_1764 -> m6_1765  [key=0, style=solid];
m6_1764 -> m6_1043  [key=2, style=dotted];
m6_1764 -> m6_1766  [color=darkseagreen4, key=1, label=person, style=dashed];
m6_1764 -> m6_1767  [color=darkseagreen4, key=1, label=person, style=dashed];
m6_1764 -> m6_1768  [color=darkseagreen4, key=1, label=person, style=dashed];
m6_1764 -> m6_1772  [color=darkseagreen4, key=1, label=person, style=dashed];
m6_1765 -> m6_1766  [key=0, style=solid];
m6_1765 -> m6_596  [key=2, style=dotted];
m6_1766 -> m6_1767  [key=0, style=solid];
m6_1767 -> m6_1768  [key=0, style=solid];
m6_1768 -> m6_1769  [key=0, style=solid];
m6_1772 -> m6_1773  [key=0, style=solid];
m6_1772 -> m6_1687  [key=2, style=dotted];
m6_1769 -> m6_1770  [key=0, style=solid];
m6_1769 -> m6_607  [key=2, style=dotted];
m6_1769 -> m6_608  [key=2, style=dotted];
m6_1769 -> m6_1772  [color=darkseagreen4, key=1, label=dateTimeOffset, style=dashed];
m6_1769 -> m6_1778  [color=darkseagreen4, key=1, label=dateTimeOffset, style=dashed];
m6_1770 -> m6_1771  [key=0, style=solid];
m6_1778 -> m6_1779  [key=0, style=solid];
m6_1778 -> m6_77  [key=2, style=dotted];
m6_1771 -> m6_1772  [key=0, style=solid];
m6_1771 -> m6_1774  [color=darkseagreen4, key=1, label=dateTimeOffsetText, style=dashed];
m6_1774 -> m6_1775  [key=0, style=solid];
m6_1774 -> m6_77  [key=2, style=dotted];
m6_1773 -> m6_1774  [key=0, style=solid];
m6_1773 -> m6_227  [key=2, style=dotted];
m6_1773 -> m6_1775  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1775 -> m6_1776  [key=0, style=solid];
m6_1775 -> m6_218  [key=2, style=dotted];
m6_1775 -> m6_1777  [color=darkseagreen4, key=1, label=o2, style=dashed];
m6_1775 -> m6_1778  [color=darkseagreen4, key=1, label=o2, style=dashed];
m6_1775 -> m6_1779  [color=darkseagreen4, key=1, label=o2, style=dashed];
m6_1775 -> m6_1780  [color=darkseagreen4, key=1, label=o2, style=dashed];
m6_1775 -> m6_1781  [color=darkseagreen4, key=1, label=o2, style=dashed];
m6_1776 -> m6_1777  [key=0, style=solid];
m6_1776 -> m6_77  [key=2, style=dotted];
m6_1777 -> m6_1778  [key=0, style=solid];
m6_1777 -> m6_77  [key=2, style=dotted];
m6_1779 -> m6_1780  [key=0, style=solid];
m6_1779 -> m6_77  [key=2, style=dotted];
m6_1780 -> m6_1781  [key=0, style=solid];
m6_1780 -> m6_77  [key=2, style=dotted];
m6_1781 -> m6_1782  [key=0, style=solid];
m6_1781 -> m6_77  [key=2, style=dotted];
m6_1782 -> m6_1763  [color=blue, key=0, style=bold];
m6_2839 -> m6_2840  [key=0, style=solid];
m6_2840 -> m6_2841  [key=0, style=solid];
m6_2840 -> m6_2849  [key=2, style=dotted];
m6_2840 -> m6_2842  [color=darkseagreen4, key=1, label=b, style=dashed];
m6_2840 -> m6_2844  [color=darkseagreen4, key=1, label=b, style=dashed];
m6_2841 -> m6_2842  [key=0, style=solid];
m6_2842 -> m6_2843  [key=0, style=solid];
m6_2844 -> m6_2845  [key=0, style=solid];
m6_2844 -> m6_217  [key=2, style=dotted];
m6_2844 -> m6_2846  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_2843 -> m6_2844  [key=0, style=solid];
m6_2845 -> m6_2846  [key=0, style=solid];
m6_2845 -> m6_77  [key=2, style=dotted];
m6_2846 -> m6_2847  [key=0, style=solid];
m6_2846 -> m6_218  [key=2, style=dotted];
m6_2847 -> m6_2848  [key=0, style=solid];
m6_2847 -> m6_77  [key=2, style=dotted];
m6_2848 -> m6_2839  [color=blue, key=0, style=bold];
m6_965 -> m6_966  [key=0, style=solid];
m6_966 -> m6_967  [key=0, style=solid];
m6_966 -> m6_973  [key=2, style=dotted];
m6_966 -> m6_596  [key=2, style=dotted];
m6_967 -> m6_968  [key=0, style=solid];
m6_967 -> m6_227  [key=2, style=dotted];
m6_967 -> m6_969  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_968 -> m6_969  [key=0, style=solid];
m6_968 -> m6_77  [key=2, style=dotted];
m6_969 -> m6_970  [key=0, style=solid];
m6_969 -> m6_218  [key=2, style=dotted];
m6_969 -> m6_971  [color=darkseagreen4, key=1, label=c2, style=dashed];
m6_970 -> m6_971  [key=0, style=solid];
m6_970 -> m6_77  [key=2, style=dotted];
m6_971 -> m6_972  [key=0, style=solid];
m6_971 -> m6_596  [key=2, style=dotted];
m6_971 -> m6_77  [key=2, style=dotted];
m6_972 -> m6_965  [color=blue, key=0, style=bold];
m6_2555 -> m6_2556  [key=0, style=solid];
m6_2556 -> m6_2557  [key=0, style=solid];
m6_2557 -> m6_2558  [key=0, style=solid];
m6_2557 -> m6_3  [key=2, style=dotted];
m6_2558 -> m6_2555  [color=blue, key=0, style=bold];
m6_2409 -> m6_2410  [key=0, style=solid];
m6_2410 -> m6_2411  [key=0, style=solid];
m6_2411 -> m6_2409  [color=blue, key=0, style=bold];
m6_3832 -> m6_3833  [key=0, style=solid];
m6_3833 -> m6_3834  [key=0, style=solid];
m6_3833 -> m6_751  [key=2, style=dotted];
m6_3833 -> m6_3835  [color=darkseagreen4, key=1, label=id, style=dashed];
m6_3834 -> m6_3835  [key=0, style=solid];
m6_3835 -> m6_3836  [key=0, style=solid];
m6_3835 -> m6_3775  [key=2, style=dotted];
m6_3836 -> m6_3837  [key=0, style=solid];
m6_3837 -> m6_3832  [color=blue, key=0, style=bold];
m6_2004 -> m6_2005  [key=0, style=solid];
m6_2005 -> m6_2006  [key=0, style=solid];
m6_2005 -> m6_2007  [key=2, style=dotted];
m6_2006 -> m6_2004  [color=blue, key=0, style=bold];
m6_1593 -> m6_1594  [key=0, style=solid];
m6_1594 -> m6_1595  [key=0, style=solid];
m6_1594 -> m6_1598  [key=2, style=dotted];
m6_1595 -> m6_1596  [key=0, style=solid];
m6_1595 -> m6_227  [key=2, style=dotted];
m6_1596 -> m6_1597  [key=0, style=solid];
m6_1596 -> m6_77  [key=2, style=dotted];
m6_1597 -> m6_1593  [color=blue, key=0, style=bold];
m6_1119 -> m6_1120  [key=0, style=solid];
m6_1120 -> m6_1121  [key=0, style=solid];
m6_1121 -> m6_1122  [key=0, style=solid];
m6_1121 -> m6_527  [key=2, style=dotted];
m6_1121 -> m6_1123  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_1122 -> m6_1119  [color=blue, key=0, style=bold];
m6_3693 -> m6_3694  [key=0, style=solid];
m6_3694 -> m6_3695  [key=0, style=solid];
m6_3695 -> m6_3693  [color=blue, key=0, style=bold];
m6_2665 -> m6_2666  [key=0, style=solid];
m6_2666 -> m6_2667  [key=0, style=solid];
m6_2666 -> m6_218  [key=2, style=dotted];
m6_2666 -> m6_2668  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m6_2667 -> m6_2668  [key=0, style=solid];
m6_2667 -> m6_77  [key=2, style=dotted];
m6_2668 -> m6_2669  [key=0, style=solid];
m6_2668 -> m6_77  [key=2, style=dotted];
m6_2669 -> m6_2665  [color=blue, key=0, style=bold];
m6_4001 -> m6_4002  [key=0, style=solid];
m6_4002 -> m6_4003  [key=0, style=solid];
m6_4003 -> m6_4001  [color=blue, key=0, style=bold];
m6_981 -> m6_982  [key=0, style=solid];
m6_982 -> m6_983  [key=0, style=solid];
m6_982 -> m6_527  [key=2, style=dotted];
m6_982 -> m6_984  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_983 -> m6_981  [color=blue, key=0, style=bold];
m6_3976 -> m6_3977  [key=0, style=solid];
m6_3977 -> m6_3976  [color=blue, key=0, style=bold];
m6_3616 -> m6_3617  [key=0, style=solid];
m6_3617 -> m6_3618  [key=0, style=solid];
m6_3617 -> m6_3  [key=2, style=dotted];
m6_3617 -> m6_596  [key=2, style=dotted];
m6_3617 -> m6_607  [key=2, style=dotted];
m6_3617 -> m6_608  [key=2, style=dotted];
m6_3618 -> m6_3619  [key=0, style=solid];
m6_3618 -> m6_145  [key=2, style=dotted];
m6_3618 -> m6_82  [key=2, style=dotted];
m6_3618 -> m6_1110  [key=2, style=dotted];
m6_3619 -> m6_3620  [key=0, style=solid];
m6_3619 -> m6_77  [key=2, style=dotted];
m6_3620 -> m6_3616  [color=blue, key=0, style=bold];
m6_1633 -> m6_1634  [key=0, style=solid];
m6_1634 -> m6_1635  [key=0, style=solid];
m6_1634 -> m6_623  [key=2, style=dotted];
m6_1635 -> m6_1633  [color=blue, key=0, style=bold];
m6_4019 -> m6_4020  [key=0, style=solid];
m6_4020 -> m6_4019  [color=blue, key=0, style=bold];
m6_3920 -> m6_3921  [key=0, style=solid];
m6_3920 -> m6_3922  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_3921 -> m6_3922  [key=0, style=solid];
m6_3921 -> m6_3902  [key=2, style=dotted];
m6_3922 -> m6_3923  [key=0, style=solid];
m6_3922 -> m6_467  [key=2, style=dotted];
m6_3922 -> m6_3924  [key=2, style=dotted];
m6_3923 -> m6_3920  [color=blue, key=0, style=bold];
m6_1468 -> m6_1469  [key=0, style=solid];
m6_1469 -> m6_1470  [key=0, style=solid];
m6_1469 -> m6_1481  [key=2, style=dotted];
m6_1469 -> m6_1471  [color=darkseagreen4, key=1, label=f, style=dashed];
m6_1469 -> m6_1472  [color=darkseagreen4, key=1, label=f, style=dashed];
m6_1469 -> m6_1473  [color=darkseagreen4, key=1, label=f, style=dashed];
m6_1470 -> m6_1471  [key=0, style=solid];
m6_1470 -> m6_1482  [key=2, style=dotted];
m6_1470 -> m6_545  [key=2, style=dotted];
m6_1471 -> m6_1472  [key=0, style=solid];
m6_1471 -> m6_1482  [key=2, style=dotted];
m6_1471 -> m6_545  [key=2, style=dotted];
m6_1472 -> m6_1473  [key=0, style=solid];
m6_1472 -> m6_1482  [key=2, style=dotted];
m6_1472 -> m6_545  [key=2, style=dotted];
m6_1473 -> m6_1474  [key=0, style=solid];
m6_1473 -> m6_227  [key=2, style=dotted];
m6_1473 -> m6_1475  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1474 -> m6_1475  [key=0, style=solid];
m6_1474 -> m6_77  [key=2, style=dotted];
m6_1475 -> m6_1476  [key=0, style=solid];
m6_1475 -> m6_218  [key=2, style=dotted];
m6_1475 -> m6_1477  [color=darkseagreen4, key=1, label=newFoo, style=dashed];
m6_1475 -> m6_1478  [color=darkseagreen4, key=1, label=newFoo, style=dashed];
m6_1475 -> m6_1479  [color=darkseagreen4, key=1, label=newFoo, style=dashed];
m6_1476 -> m6_1477  [key=0, style=solid];
m6_1476 -> m6_77  [key=2, style=dotted];
m6_1477 -> m6_1478  [key=0, style=solid];
m6_1477 -> m6_77  [key=2, style=dotted];
m6_1478 -> m6_1479  [key=0, style=solid];
m6_1478 -> m6_77  [key=2, style=dotted];
m6_1479 -> m6_1480  [key=0, style=solid];
m6_1479 -> m6_77  [key=2, style=dotted];
m6_1480 -> m6_1468  [color=blue, key=0, style=bold];
m6_1729 -> m6_1730  [key=0, style=solid];
m6_1729 -> m6_1731  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m6_1729 -> m6_1732  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m6_1729 -> m6_1733  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m6_1729 -> m6_1734  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m6_1729 -> m6_1735  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m6_1729 -> m6_1736  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m6_1729 -> m6_1737  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m6_1729 -> m6_1738  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m6_1729 -> m6_1739  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m6_1729 -> m6_1740  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m6_1729 -> m6_1741  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m6_1729 -> m6_1742  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m6_1729 -> m6_1743  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m6_1729 -> m6_1744  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m6_1729 -> m6_1745  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m6_1729 -> m6_1746  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m6_1729 -> m6_1747  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m6_1730 -> m6_1731  [key=0, style=solid];
m6_1730 -> m6_1749  [key=2, style=dotted];
m6_1731 -> m6_1732  [key=0, style=solid];
m6_1731 -> m6_1750  [key=2, style=dotted];
m6_1732 -> m6_1733  [key=0, style=solid];
m6_1732 -> m6_1749  [key=2, style=dotted];
m6_1733 -> m6_1734  [key=0, style=solid];
m6_1733 -> m6_1749  [key=2, style=dotted];
m6_1734 -> m6_1735  [key=0, style=solid];
m6_1734 -> m6_1749  [key=2, style=dotted];
m6_1735 -> m6_1736  [key=0, style=solid];
m6_1735 -> m6_1749  [key=2, style=dotted];
m6_1736 -> m6_1737  [key=0, style=solid];
m6_1736 -> m6_1751  [key=2, style=dotted];
m6_1737 -> m6_1738  [key=0, style=solid];
m6_1737 -> m6_1752  [key=2, style=dotted];
m6_1738 -> m6_1739  [key=0, style=solid];
m6_1738 -> m6_1753  [key=2, style=dotted];
m6_1739 -> m6_1740  [key=0, style=solid];
m6_1739 -> m6_1754  [key=2, style=dotted];
m6_1740 -> m6_1741  [key=0, style=solid];
m6_1740 -> m6_1755  [key=2, style=dotted];
m6_1741 -> m6_1742  [key=0, style=solid];
m6_1741 -> m6_1756  [key=2, style=dotted];
m6_1742 -> m6_1743  [key=0, style=solid];
m6_1742 -> m6_1757  [key=2, style=dotted];
m6_1743 -> m6_1744  [key=0, style=solid];
m6_1743 -> m6_1758  [key=2, style=dotted];
m6_1744 -> m6_1745  [key=0, style=solid];
m6_1744 -> m6_1759  [key=2, style=dotted];
m6_1745 -> m6_1746  [key=0, style=solid];
m6_1745 -> m6_1760  [key=2, style=dotted];
m6_1746 -> m6_1747  [key=0, style=solid];
m6_1746 -> m6_1761  [key=2, style=dotted];
m6_1747 -> m6_1748  [key=0, style=solid];
m6_1747 -> m6_1762  [key=2, style=dotted];
m6_1748 -> m6_1729  [color=blue, key=0, style=bold];
m6_532 -> m6_533  [key=0, style=solid];
m6_533 -> m6_534  [key=0, style=solid];
m6_533 -> m6_543  [key=2, style=dotted];
m6_533 -> m6_536  [color=darkseagreen4, key=1, label=a1, style=dashed];
m6_534 -> m6_535  [key=0, style=solid];
m6_534 -> m6_543  [key=2, style=dotted];
m6_534 -> m6_537  [color=darkseagreen4, key=1, label=a2, style=dashed];
m6_536 -> m6_537  [key=0, style=solid];
m6_536 -> m6_545  [key=2, style=dotted];
m6_535 -> m6_536  [key=0, style=solid];
m6_535 -> m6_544  [key=2, style=dotted];
m6_535 -> m6_537  [color=darkseagreen4, key=1, label=articles1, style=dashed];
m6_535 -> m6_538  [color=darkseagreen4, key=1, label=articles1, style=dashed];
m6_535 -> m6_540  [color=darkseagreen4, key=1, label=articles1, style=dashed];
m6_535 -> m6_541  [color=darkseagreen4, key=1, label=articles1, style=dashed];
m6_537 -> m6_538  [key=0, style=solid];
m6_537 -> m6_545  [key=2, style=dotted];
m6_538 -> m6_539  [key=0, style=solid];
m6_538 -> m6_217  [key=2, style=dotted];
m6_540 -> m6_541  [key=0, style=solid];
m6_540 -> m6_77  [key=2, style=dotted];
m6_541 -> m6_542  [key=0, style=solid];
m6_541 -> m6_77  [key=2, style=dotted];
m6_539 -> m6_540  [key=0, style=solid];
m6_539 -> m6_218  [key=2, style=dotted];
m6_539 -> m6_541  [color=darkseagreen4, key=1, label=articles2, style=dashed];
m6_542 -> m6_532  [color=blue, key=0, style=bold];
m6_3336 -> m6_3337  [key=0, style=solid];
m6_3337 -> m6_3338  [key=0, style=solid];
m6_3337 -> m6_3333  [key=2, style=dotted];
m6_3338 -> m6_3336  [color=blue, key=0, style=bold];
m6_2649 -> m6_2650  [key=0, style=solid];
m6_2650 -> m6_2651  [key=0, style=solid];
m6_2650 -> m6_3  [key=2, style=dotted];
m6_2651 -> m6_2649  [color=blue, key=0, style=bold];
m6_950 -> m6_951  [key=0, style=solid];
m6_951 -> m6_952  [key=0, style=solid];
m6_951 -> m6_954  [color=darkseagreen4, key=1, label=boolRef, style=dashed];
m6_952 -> m6_953  [key=0, style=solid];
m6_952 -> m6_964  [key=2, style=dotted];
m6_954 -> m6_955  [key=0, style=solid];
m6_954 -> m6_77  [key=2, style=dotted];
m6_953 -> m6_954  [key=0, style=solid];
m6_953 -> m6_217  [key=2, style=dotted];
m6_953 -> m6_955  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_955 -> m6_956  [key=0, style=solid];
m6_955 -> m6_218  [key=2, style=dotted];
m6_956 -> m6_957  [key=0, style=solid];
m6_956 -> m6_77  [key=2, style=dotted];
m6_957 -> m6_958  [key=0, style=solid];
m6_957 -> m6_960  [color=darkseagreen4, key=1, label=jsonSerializerTestRef, style=dashed];
m6_958 -> m6_959  [key=0, style=solid];
m6_958 -> m6_964  [key=2, style=dotted];
m6_960 -> m6_961  [key=0, style=solid];
m6_960 -> m6_77  [key=2, style=dotted];
m6_959 -> m6_960  [key=0, style=solid];
m6_959 -> m6_217  [key=2, style=dotted];
m6_959 -> m6_961  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_961 -> m6_962  [key=0, style=solid];
m6_961 -> m6_218  [key=2, style=dotted];
m6_962 -> m6_963  [key=0, style=solid];
m6_962 -> m6_77  [key=2, style=dotted];
m6_963 -> m6_950  [color=blue, key=0, style=bold];
m6_3791 -> m6_3792  [key=0, style=solid];
m6_3792 -> m6_3793  [key=0, style=solid];
m6_3792 -> m6_3318  [key=2, style=dotted];
m6_3793 -> m6_3791  [color=blue, key=0, style=bold];
m6_3626 -> m6_3627  [key=0, style=solid];
m6_3627 -> m6_3628  [key=0, style=solid];
m6_3627 -> m6_3  [key=2, style=dotted];
m6_3627 -> m6_596  [key=2, style=dotted];
m6_3627 -> m6_607  [key=2, style=dotted];
m6_3627 -> m6_608  [key=2, style=dotted];
m6_3627 -> m6_3631  [color=darkseagreen4, key=1, label=dates, style=dashed];
m6_3628 -> m6_3629  [key=0, style=solid];
m6_3628 -> m6_661  [key=2, style=dotted];
m6_3628 -> m6_3635  [color=darkseagreen4, key=1, label=sw, style=dashed];
m6_3631 -> m6_3632  [key=0, style=solid];
m6_3631 -> m6_2803  [key=2, style=dotted];
m6_3629 -> m6_3630  [key=0, style=solid];
m6_3629 -> m6_2719  [key=2, style=dotted];
m6_3629 -> m6_3631  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_3629 -> m6_3632  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_3629 -> m6_3633  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_3629 -> m6_3634  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_3635 -> m6_3636  [key=0, style=solid];
m6_3635 -> m6_2723  [key=2, style=dotted];
m6_3630 -> m6_3631  [key=0, style=solid];
m6_3630 -> m6_145  [key=2, style=dotted];
m6_3630 -> m6_82  [key=2, style=dotted];
m6_3630 -> m6_2924  [key=2, style=dotted];
m6_3632 -> m6_3633  [key=0, style=solid];
m6_3632 -> m6_1897  [key=2, style=dotted];
m6_3633 -> m6_3634  [key=0, style=solid];
m6_3633 -> m6_77  [key=2, style=dotted];
m6_3634 -> m6_3635  [key=0, style=solid];
m6_3634 -> m6_77  [key=2, style=dotted];
m6_3636 -> m6_3637  [key=0, style=solid];
m6_3636 -> m6_77  [key=2, style=dotted];
m6_3637 -> m6_3626  [color=blue, key=0, style=bold];
m6_1338 -> m6_1339  [key=0, style=solid];
m6_1339 -> m6_1340  [key=0, style=solid];
m6_1339 -> m6_1343  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1340 -> m6_1341  [key=0, style=solid];
m6_1340 -> m6_527  [key=2, style=dotted];
m6_1340 -> m6_1342  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_1341 -> m6_1338  [color=blue, key=0, style=bold];
m6_2575 -> m6_2576  [key=0, style=solid];
m6_2576 -> m6_2577  [key=0, style=solid];
m6_2576 -> m6_2571  [key=2, style=dotted];
m6_2576 -> m6_2578  [color=darkseagreen4, key=1, label=c1, style=dashed];
m6_2576 -> m6_2579  [color=darkseagreen4, key=1, label=c1, style=dashed];
m6_2576 -> m6_2582  [color=darkseagreen4, key=1, label=c1, style=dashed];
m6_2576 -> m6_2583  [color=darkseagreen4, key=1, label=c1, style=dashed];
m6_2577 -> m6_2578  [key=0, style=solid];
m6_2577 -> m6_2587  [key=2, style=dotted];
m6_2578 -> m6_2579  [key=0, style=solid];
m6_2578 -> m6_2587  [key=2, style=dotted];
m6_2579 -> m6_2580  [key=0, style=solid];
m6_2579 -> m6_227  [key=2, style=dotted];
m6_2579 -> m6_2581  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_2582 -> m6_2583  [key=0, style=solid];
m6_2582 -> m6_77  [key=2, style=dotted];
m6_2583 -> m6_2584  [key=0, style=solid];
m6_2583 -> m6_77  [key=2, style=dotted];
m6_2580 -> m6_2581  [key=0, style=solid];
m6_2580 -> m6_77  [key=2, style=dotted];
m6_2581 -> m6_2582  [key=0, style=solid];
m6_2581 -> m6_218  [key=2, style=dotted];
m6_2581 -> m6_2583  [color=darkseagreen4, key=1, label=c2, style=dashed];
m6_2581 -> m6_2584  [color=darkseagreen4, key=1, label=c2, style=dashed];
m6_2581 -> m6_2585  [color=darkseagreen4, key=1, label=c2, style=dashed];
m6_2584 -> m6_2585  [key=0, style=solid];
m6_2584 -> m6_77  [key=2, style=dotted];
m6_2585 -> m6_2586  [key=0, style=solid];
m6_2585 -> m6_77  [key=2, style=dotted];
m6_2586 -> m6_2575  [color=blue, key=0, style=bold];
m6_3925 -> m6_3926  [key=0, style=solid];
m6_3926 -> m6_3927  [key=0, style=solid];
m6_3926 -> m6_3902  [key=2, style=dotted];
m6_3927 -> m6_3925  [color=blue, key=0, style=bold];
m6_3838 -> m6_3839  [key=0, style=solid];
m6_3839 -> m6_3840  [key=0, style=solid];
m6_3839 -> m6_3841  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_3840 -> m6_3841  [key=0, style=solid];
m6_3841 -> m6_3842  [key=0, style=solid];
m6_3841 -> m6_3843  [key=2, style=dotted];
m6_3842 -> m6_3838  [color=blue, key=0, style=bold];
m6_4037 -> m6_4038  [key=0, style=solid];
m6_4037 -> m6_4039  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m6_4038 -> m6_4039  [key=0, style=solid];
m6_4038 -> m6_1750  [key=2, style=dotted];
m6_4039 -> m6_4040  [key=0, style=solid];
m6_4039 -> m6_1750  [key=2, style=dotted];
m6_4040 -> m6_4037  [color=blue, key=0, style=bold];
m6_1825 -> m6_1826  [key=0, style=solid];
m6_1826 -> m6_1827  [key=0, style=solid];
m6_1826 -> m6_218  [key=2, style=dotted];
m6_1826 -> m6_1828  [color=darkseagreen4, key=1, label=myA, style=dashed];
m6_1826 -> m6_1829  [color=darkseagreen4, key=1, label=myA, style=dashed];
m6_1826 -> m6_1830  [color=darkseagreen4, key=1, label=myA, style=dashed];
m6_1826 -> m6_1831  [color=darkseagreen4, key=1, label=myA, style=dashed];
m6_1826 -> m6_1832  [color=darkseagreen4, key=1, label=myA, style=dashed];
m6_1826 -> m6_1833  [color=darkseagreen4, key=1, label=myA, style=dashed];
m6_1826 -> m6_1834  [color=darkseagreen4, key=1, label=myA, style=dashed];
m6_1827 -> m6_1828  [key=0, style=solid];
m6_1827 -> m6_1855  [key=2, style=dotted];
m6_1827 -> m6_1856  [key=2, style=dotted];
m6_1827 -> m6_77  [key=2, style=dotted];
m6_1828 -> m6_1829  [key=0, style=solid];
m6_1828 -> m6_1855  [key=2, style=dotted];
m6_1828 -> m6_1856  [key=2, style=dotted];
m6_1828 -> m6_77  [key=2, style=dotted];
m6_1829 -> m6_1830  [key=0, style=solid];
m6_1829 -> m6_1857  [key=2, style=dotted];
m6_1829 -> m6_1856  [key=2, style=dotted];
m6_1829 -> m6_77  [key=2, style=dotted];
m6_1830 -> m6_1831  [key=0, style=solid];
m6_1830 -> m6_1857  [key=2, style=dotted];
m6_1830 -> m6_1856  [key=2, style=dotted];
m6_1830 -> m6_77  [key=2, style=dotted];
m6_1831 -> m6_1832  [key=0, style=solid];
m6_1831 -> m6_1857  [key=2, style=dotted];
m6_1831 -> m6_1856  [key=2, style=dotted];
m6_1831 -> m6_77  [key=2, style=dotted];
m6_1832 -> m6_1833  [key=0, style=solid];
m6_1832 -> m6_1857  [key=2, style=dotted];
m6_1832 -> m6_1856  [key=2, style=dotted];
m6_1832 -> m6_77  [key=2, style=dotted];
m6_1833 -> m6_1834  [key=0, style=solid];
m6_1833 -> m6_1857  [key=2, style=dotted];
m6_1833 -> m6_1856  [key=2, style=dotted];
m6_1833 -> m6_77  [key=2, style=dotted];
m6_1834 -> m6_1835  [key=0, style=solid];
m6_1834 -> m6_1857  [key=2, style=dotted];
m6_1834 -> m6_1856  [key=2, style=dotted];
m6_1834 -> m6_77  [key=2, style=dotted];
m6_1835 -> m6_1836  [key=0, style=solid];
m6_1835 -> m6_218  [key=2, style=dotted];
m6_1835 -> m6_1837  [color=darkseagreen4, key=1, label=myB, style=dashed];
m6_1835 -> m6_1838  [color=darkseagreen4, key=1, label=myB, style=dashed];
m6_1835 -> m6_1839  [color=darkseagreen4, key=1, label=myB, style=dashed];
m6_1835 -> m6_1840  [color=darkseagreen4, key=1, label=myB, style=dashed];
m6_1835 -> m6_1841  [color=darkseagreen4, key=1, label=myB, style=dashed];
m6_1835 -> m6_1842  [color=darkseagreen4, key=1, label=myB, style=dashed];
m6_1835 -> m6_1843  [color=darkseagreen4, key=1, label=myB, style=dashed];
m6_1835 -> m6_1844  [color=darkseagreen4, key=1, label=myB, style=dashed];
m6_1835 -> m6_1845  [color=darkseagreen4, key=1, label=myB, style=dashed];
m6_1835 -> m6_1846  [color=darkseagreen4, key=1, label=myB, style=dashed];
m6_1835 -> m6_1847  [color=darkseagreen4, key=1, label=myB, style=dashed];
m6_1835 -> m6_1848  [color=darkseagreen4, key=1, label=myB, style=dashed];
m6_1835 -> m6_1849  [color=darkseagreen4, key=1, label=myB, style=dashed];
m6_1835 -> m6_1850  [color=darkseagreen4, key=1, label=myB, style=dashed];
m6_1835 -> m6_1851  [color=darkseagreen4, key=1, label=myB, style=dashed];
m6_1835 -> m6_1852  [color=darkseagreen4, key=1, label=myB, style=dashed];
m6_1835 -> m6_1853  [color=darkseagreen4, key=1, label=myB, style=dashed];
m6_1836 -> m6_1837  [key=0, style=solid];
m6_1836 -> m6_1855  [key=2, style=dotted];
m6_1836 -> m6_1856  [key=2, style=dotted];
m6_1836 -> m6_77  [key=2, style=dotted];
m6_1837 -> m6_1838  [key=0, style=solid];
m6_1837 -> m6_1855  [key=2, style=dotted];
m6_1837 -> m6_1856  [key=2, style=dotted];
m6_1837 -> m6_77  [key=2, style=dotted];
m6_1838 -> m6_1839  [key=0, style=solid];
m6_1838 -> m6_1857  [key=2, style=dotted];
m6_1838 -> m6_1856  [key=2, style=dotted];
m6_1838 -> m6_77  [key=2, style=dotted];
m6_1839 -> m6_1840  [key=0, style=solid];
m6_1839 -> m6_1857  [key=2, style=dotted];
m6_1839 -> m6_1856  [key=2, style=dotted];
m6_1839 -> m6_77  [key=2, style=dotted];
m6_1840 -> m6_1841  [key=0, style=solid];
m6_1840 -> m6_1857  [key=2, style=dotted];
m6_1840 -> m6_1856  [key=2, style=dotted];
m6_1840 -> m6_77  [key=2, style=dotted];
m6_1841 -> m6_1842  [key=0, style=solid];
m6_1841 -> m6_1857  [key=2, style=dotted];
m6_1841 -> m6_1856  [key=2, style=dotted];
m6_1841 -> m6_77  [key=2, style=dotted];
m6_1842 -> m6_1843  [key=0, style=solid];
m6_1842 -> m6_1857  [key=2, style=dotted];
m6_1842 -> m6_1856  [key=2, style=dotted];
m6_1842 -> m6_77  [key=2, style=dotted];
m6_1843 -> m6_1844  [key=0, style=solid];
m6_1843 -> m6_1857  [key=2, style=dotted];
m6_1843 -> m6_1856  [key=2, style=dotted];
m6_1843 -> m6_77  [key=2, style=dotted];
m6_1844 -> m6_1845  [key=0, style=solid];
m6_1844 -> m6_77  [key=2, style=dotted];
m6_1845 -> m6_1846  [key=0, style=solid];
m6_1845 -> m6_77  [key=2, style=dotted];
m6_1846 -> m6_1847  [key=0, style=solid];
m6_1846 -> m6_77  [key=2, style=dotted];
m6_1847 -> m6_1848  [key=0, style=solid];
m6_1847 -> m6_77  [key=2, style=dotted];
m6_1848 -> m6_1849  [key=0, style=solid];
m6_1848 -> m6_1857  [key=2, style=dotted];
m6_1848 -> m6_1856  [key=2, style=dotted];
m6_1848 -> m6_77  [key=2, style=dotted];
m6_1849 -> m6_1850  [key=0, style=solid];
m6_1849 -> m6_1857  [key=2, style=dotted];
m6_1849 -> m6_1856  [key=2, style=dotted];
m6_1849 -> m6_77  [key=2, style=dotted];
m6_1850 -> m6_1851  [key=0, style=solid];
m6_1850 -> m6_77  [key=2, style=dotted];
m6_1851 -> m6_1852  [key=0, style=solid];
m6_1851 -> m6_1857  [key=2, style=dotted];
m6_1851 -> m6_1856  [key=2, style=dotted];
m6_1851 -> m6_77  [key=2, style=dotted];
m6_1852 -> m6_1853  [key=0, style=solid];
m6_1852 -> m6_1857  [key=2, style=dotted];
m6_1852 -> m6_1856  [key=2, style=dotted];
m6_1852 -> m6_77  [key=2, style=dotted];
m6_1853 -> m6_1854  [key=0, style=solid];
m6_1853 -> m6_1857  [key=2, style=dotted];
m6_1853 -> m6_1856  [key=2, style=dotted];
m6_1853 -> m6_77  [key=2, style=dotted];
m6_1854 -> m6_1825  [color=blue, key=0, style=bold];
m6_2352 -> m6_2353  [key=0, style=solid];
m6_2353 -> m6_2352  [color=blue, key=0, style=bold];
m6_3782 -> m6_3783  [key=0, style=solid];
m6_3783 -> m6_3784  [key=0, style=solid];
m6_3783 -> m6_258  [key=2, style=dotted];
m6_3784 -> m6_3785  [key=0, style=solid];
m6_3784 -> m6_3765  [key=2, style=dotted];
m6_3785 -> m6_3786  [key=0, style=solid];
m6_3785 -> m6_227  [key=2, style=dotted];
m6_3786 -> m6_3787  [key=0, style=solid];
m6_3786 -> m6_77  [key=2, style=dotted];
m6_3787 -> m6_3782  [color=blue, key=0, style=bold];
m6_1070 -> m6_1071  [key=0, style=solid];
m6_1071 -> m6_1072  [key=0, style=solid];
m6_1072 -> m6_1073  [key=0, style=solid];
m6_1072 -> m6_218  [key=2, style=dotted];
m6_1072 -> m6_1074  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_1072 -> m6_1075  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_1072 -> m6_1076  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_1072 -> m6_1077  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_1073 -> m6_1074  [key=0, style=solid];
m6_1073 -> m6_1068  [key=2, style=dotted];
m6_1074 -> m6_1075  [key=0, style=solid];
m6_1074 -> m6_77  [key=2, style=dotted];
m6_1075 -> m6_1076  [key=0, style=solid];
m6_1075 -> m6_77  [key=2, style=dotted];
m6_1076 -> m6_1077  [key=0, style=solid];
m6_1076 -> m6_77  [key=2, style=dotted];
m6_1077 -> m6_1078  [key=0, style=solid];
m6_1077 -> m6_77  [key=2, style=dotted];
m6_1078 -> m6_1070  [color=blue, key=0, style=bold];
m6_697 -> m6_698  [key=0, style=solid];
m6_698 -> m6_699  [key=0, style=solid];
m6_698 -> m6_701  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_699 -> m6_700  [key=0, style=solid];
m6_699 -> m6_75  [key=2, style=dotted];
m6_699 -> m6_701  [color=darkseagreen4, key=1, label=s, style=dashed];
m6_701 -> m6_702  [key=0, style=solid];
m6_701 -> m6_666  [key=2, style=dotted];
m6_701 -> m6_705  [key=2, style=dotted];
m6_701 -> m6_703  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m6_700 -> m6_701  [key=0, style=solid];
m6_702 -> m6_703  [key=0, style=solid];
m6_702 -> m6_77  [key=2, style=dotted];
m6_703 -> m6_704  [key=0, style=solid];
m6_703 -> m6_77  [key=2, style=dotted];
m6_704 -> m6_697  [color=blue, key=0, style=bold];
m6_1098 -> m6_1099  [key=0, style=solid];
m6_1099 -> m6_1100  [key=0, style=solid];
m6_1099 -> m6_1109  [key=2, style=dotted];
m6_1099 -> m6_1101  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_1099 -> m6_1102  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_1099 -> m6_1103  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_1099 -> m6_1104  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_1099 -> m6_1106  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_1100 -> m6_1101  [key=0, style=solid];
m6_1101 -> m6_1102  [key=0, style=solid];
m6_1102 -> m6_1103  [key=0, style=solid];
m6_1103 -> m6_1104  [key=0, style=solid];
m6_1104 -> m6_1105  [key=0, style=solid];
m6_1104 -> m6_227  [key=2, style=dotted];
m6_1106 -> m6_1107  [key=0, style=solid];
m6_1106 -> m6_145  [key=2, style=dotted];
m6_1106 -> m6_1110  [key=2, style=dotted];
m6_1105 -> m6_1106  [key=0, style=solid];
m6_1105 -> m6_77  [key=2, style=dotted];
m6_1107 -> m6_1108  [key=0, style=solid];
m6_1107 -> m6_77  [key=2, style=dotted];
m6_1108 -> m6_1098  [color=blue, key=0, style=bold];
m6_3275 -> m6_3276  [key=0, style=solid];
m6_3276 -> m6_3277  [key=0, style=solid];
m6_3276 -> m6_218  [key=2, style=dotted];
m6_3276 -> m6_3278  [color=darkseagreen4, key=1, label=uris, style=dashed];
m6_3277 -> m6_3278  [key=0, style=solid];
m6_3277 -> m6_77  [key=2, style=dotted];
m6_3278 -> m6_3279  [key=0, style=solid];
m6_3278 -> m6_1219  [key=2, style=dotted];
m6_3278 -> m6_77  [key=2, style=dotted];
m6_3279 -> m6_3280  [key=0, style=solid];
m6_3279 -> m6_218  [key=2, style=dotted];
m6_3280 -> m6_3281  [key=0, style=solid];
m6_3280 -> m6_1068  [key=2, style=dotted];
m6_3281 -> m6_3282  [key=0, style=solid];
m6_3281 -> m6_3288  [key=2, style=dotted];
m6_3281 -> m6_3283  [color=darkseagreen4, key=1, label=i1, style=dashed];
m6_3282 -> m6_3283  [key=0, style=solid];
m6_3282 -> m6_1219  [key=2, style=dotted];
m6_3283 -> m6_3284  [key=0, style=solid];
m6_3283 -> m6_77  [key=2, style=dotted];
m6_3284 -> m6_3285  [key=0, style=solid];
m6_3284 -> m6_218  [key=2, style=dotted];
m6_3284 -> m6_3286  [color=darkseagreen4, key=1, label=uri, style=dashed];
m6_3285 -> m6_3286  [key=0, style=solid];
m6_3285 -> m6_1068  [key=2, style=dotted];
m6_3286 -> m6_3287  [key=0, style=solid];
m6_3286 -> m6_3288  [key=2, style=dotted];
m6_3286 -> m6_77  [key=2, style=dotted];
m6_3287 -> m6_3275  [color=blue, key=0, style=bold];
m6_624 -> m6_625  [key=0, style=solid];
m6_625 -> m6_626  [key=0, style=solid];
m6_625 -> m6_422  [key=2, style=dotted];
m6_625 -> m6_628  [color=darkseagreen4, key=1, label=anonymous, style=dashed];
m6_626 -> m6_627  [key=0, style=solid];
m6_626 -> m6_217  [key=2, style=dotted];
m6_626 -> m6_628  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_628 -> m6_629  [key=0, style=solid];
m6_628 -> m6_637  [key=2, style=dotted];
m6_628 -> m6_628  [color=darkseagreen4, key=1, label=anonymous, style=dashed];
m6_628 -> m6_630  [color=darkseagreen4, key=1, label=anonymous, style=dashed];
m6_628 -> m6_631  [color=darkseagreen4, key=1, label=anonymous, style=dashed];
m6_628 -> m6_632  [color=darkseagreen4, key=1, label=anonymous, style=dashed];
m6_628 -> m6_633  [color=darkseagreen4, key=1, label=anonymous, style=dashed];
m6_628 -> m6_634  [color=darkseagreen4, key=1, label=anonymous, style=dashed];
m6_628 -> m6_635  [color=darkseagreen4, key=1, label=anonymous, style=dashed];
m6_627 -> m6_628  [key=0, style=solid];
m6_627 -> m6_77  [key=2, style=dotted];
m6_629 -> m6_630  [key=0, style=solid];
m6_629 -> m6_77  [key=2, style=dotted];
m6_630 -> m6_631  [key=0, style=solid];
m6_630 -> m6_77  [key=2, style=dotted];
m6_631 -> m6_632  [key=0, style=solid];
m6_631 -> m6_77  [key=2, style=dotted];
m6_632 -> m6_633  [key=0, style=solid];
m6_632 -> m6_77  [key=2, style=dotted];
m6_633 -> m6_634  [key=0, style=solid];
m6_633 -> m6_77  [key=2, style=dotted];
m6_634 -> m6_635  [key=0, style=solid];
m6_634 -> m6_77  [key=2, style=dotted];
m6_635 -> m6_636  [key=0, style=solid];
m6_635 -> m6_77  [key=2, style=dotted];
m6_636 -> m6_624  [color=blue, key=0, style=bold];
m6_2099 -> m6_2100  [key=0, style=solid];
m6_2100 -> m6_2101  [key=0, style=solid];
m6_2101 -> m6_2102  [key=0, style=solid];
m6_2101 -> m6_218  [key=2, style=dotted];
m6_2101 -> m6_2103  [color=darkseagreen4, key=1, label=cc, style=dashed];
m6_2101 -> m6_2104  [color=darkseagreen4, key=1, label=cc, style=dashed];
m6_2102 -> m6_2103  [key=0, style=solid];
m6_2102 -> m6_77  [key=2, style=dotted];
m6_2103 -> m6_2104  [key=0, style=solid];
m6_2103 -> m6_77  [key=2, style=dotted];
m6_2104 -> m6_2105  [key=0, style=solid];
m6_2104 -> m6_77  [key=2, style=dotted];
m6_2105 -> m6_2099  [color=blue, key=0, style=bold];
m6_2652 -> m6_2653  [key=0, style=solid];
m6_2653 -> m6_2654  [key=0, style=solid];
m6_2653 -> m6_2649  [key=2, style=dotted];
m6_2653 -> m6_2656  [color=darkseagreen4, key=1, label=classWithException, style=dashed];
m6_2653 -> m6_2657  [color=darkseagreen4, key=1, label=classWithException, style=dashed];
m6_2653 -> m6_2660  [color=darkseagreen4, key=1, label=classWithException, style=dashed];
m6_2654 -> m6_2657  [key=0, style=solid];
m6_2654 -> m6_1617  [key=2, style=dotted];
m6_2656 -> m6_2657  [key=0, style=solid];
m6_2656 -> m6_146  [key=2, style=dotted];
m6_2657 -> m6_2658  [key=0, style=solid];
m6_2657 -> m6_217  [key=2, style=dotted];
m6_2660 -> m6_2661  [key=0, style=solid];
m6_2660 -> m6_227  [key=2, style=dotted];
m6_2655 -> m6_2656  [key=0, style=solid];
m6_2658 -> m6_2659  [key=0, style=solid];
m6_2658 -> m6_218  [key=2, style=dotted];
m6_2659 -> m6_2660  [key=0, style=solid];
m6_2659 -> m6_2664  [key=2, style=dotted];
m6_2659 -> m6_77  [key=2, style=dotted];
m6_2661 -> m6_2662  [key=0, style=solid];
m6_2661 -> m6_218  [key=2, style=dotted];
m6_2662 -> m6_2663  [key=0, style=solid];
m6_2662 -> m6_2664  [key=2, style=dotted];
m6_2662 -> m6_77  [key=2, style=dotted];
m6_2663 -> m6_2652  [color=blue, key=0, style=bold];
m6_2643 -> m6_2644  [key=0, style=solid];
m6_2644 -> m6_2645  [key=0, style=solid];
m6_2644 -> m6_2648  [key=2, style=dotted];
m6_2645 -> m6_2646  [key=0, style=solid];
m6_2645 -> m6_227  [key=2, style=dotted];
m6_2646 -> m6_2647  [key=0, style=solid];
m6_2646 -> m6_77  [key=2, style=dotted];
m6_2647 -> m6_2643  [color=blue, key=0, style=bold];
m6_1898 -> m6_1899  [key=0, style=solid];
m6_1899 -> m6_1900  [key=0, style=solid];
m6_1899 -> m6_1909  [key=2, style=dotted];
m6_1899 -> m6_1902  [color=darkseagreen4, key=1, label=testObject, style=dashed];
m6_1899 -> m6_1903  [color=darkseagreen4, key=1, label=testObject, style=dashed];
m6_1899 -> m6_1907  [color=darkseagreen4, key=1, label=testObject, style=dashed];
m6_1900 -> m6_1901  [key=0, style=solid];
m6_1900 -> m6_1910  [key=2, style=dotted];
m6_1900 -> m6_1902  [color=darkseagreen4, key=1, label=document, style=dashed];
m6_1902 -> m6_1903  [key=0, style=solid];
m6_1903 -> m6_1904  [key=0, style=solid];
m6_1903 -> m6_227  [key=2, style=dotted];
m6_1903 -> m6_1905  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1903 -> m6_1906  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1907 -> m6_1908  [key=0, style=solid];
m6_1907 -> m6_77  [key=2, style=dotted];
m6_1901 -> m6_1902  [key=0, style=solid];
m6_1901 -> m6_1911  [key=2, style=dotted];
m6_1904 -> m6_1905  [key=0, style=solid];
m6_1905 -> m6_1906  [key=0, style=solid];
m6_1905 -> m6_77  [key=2, style=dotted];
m6_1906 -> m6_1907  [key=0, style=solid];
m6_1906 -> m6_218  [key=2, style=dotted];
m6_1908 -> m6_1898  [color=blue, key=0, style=bold];
m6_1652 -> m6_1653  [key=0, style=solid];
m6_1653 -> m6_1654  [key=0, style=solid];
m6_1653 -> m6_1655  [key=2, style=dotted];
m6_1654 -> m6_1652  [color=blue, key=0, style=bold];
m6_3201 -> m6_3202  [key=0, style=solid];
m6_3202 -> m6_3203  [key=0, style=solid];
m6_3202 -> m6_3205  [key=2, style=dotted];
m6_3203 -> m6_3204  [key=0, style=solid];
m6_3203 -> m6_3206  [key=2, style=dotted];
m6_3204 -> m6_3201  [color=blue, key=0, style=bold];
m6_2341 -> m6_2342  [key=0, style=solid];
m6_2342 -> m6_2343  [key=0, style=solid];
m6_2342 -> m6_2350  [key=2, style=dotted];
m6_2342 -> m6_2344  [color=darkseagreen4, key=1, label=obj, style=dashed];
m6_2343 -> m6_2344  [key=0, style=solid];
m6_2343 -> m6_2351  [key=2, style=dotted];
m6_2344 -> m6_2345  [key=0, style=solid];
m6_2344 -> m6_217  [key=2, style=dotted];
m6_2345 -> m6_2346  [key=0, style=solid];
m6_2345 -> m6_218  [key=2, style=dotted];
m6_2345 -> m6_2347  [color=darkseagreen4, key=1, label=obj, style=dashed];
m6_2345 -> m6_2348  [color=darkseagreen4, key=1, label=obj, style=dashed];
m6_2346 -> m6_2347  [key=0, style=solid];
m6_2346 -> m6_77  [key=2, style=dotted];
m6_2347 -> m6_2348  [key=0, style=solid];
m6_2347 -> m6_77  [key=2, style=dotted];
m6_2348 -> m6_2349  [key=0, style=solid];
m6_2348 -> m6_77  [key=2, style=dotted];
m6_2349 -> m6_2341  [color=blue, key=0, style=bold];
m6_1163 -> m6_1164  [key=0, style=solid];
m6_1164 -> m6_1165  [key=0, style=solid];
m6_1164 -> m6_1154  [key=2, style=dotted];
m6_1164 -> m6_1166  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_1165 -> m6_1166  [key=0, style=solid];
m6_1166 -> m6_1167  [key=0, style=solid];
m6_1166 -> m6_227  [key=2, style=dotted];
m6_1166 -> m6_1168  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1167 -> m6_1168  [key=0, style=solid];
m6_1167 -> m6_77  [key=2, style=dotted];
m6_1168 -> m6_1169  [key=0, style=solid];
m6_1168 -> m6_218  [key=2, style=dotted];
m6_1169 -> m6_1170  [key=0, style=solid];
m6_1169 -> m6_1160  [key=2, style=dotted];
m6_1169 -> m6_77  [key=2, style=dotted];
m6_1170 -> m6_1163  [color=blue, key=0, style=bold];
m6_2968 -> m6_2969  [key=0, style=solid];
m6_2969 -> m6_2970  [key=0, style=solid];
m6_2969 -> m6_527  [key=2, style=dotted];
m6_2969 -> m6_2971  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_2970 -> m6_2968  [color=blue, key=0, style=bold];
m6_2617 -> m6_2618  [key=0, style=solid];
m6_2617 -> m6_2619  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_2617 -> m6_2620  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_2618 -> m6_2619  [key=0, style=solid];
m6_2619 -> m6_2620  [key=0, style=solid];
m6_2620 -> m6_2621  [key=0, style=solid];
m6_2621 -> m6_2617  [color=blue, key=0, style=bold];
m6_3601 -> m6_3602  [key=0, style=solid];
m6_3602 -> m6_3603  [key=0, style=solid];
m6_3602 -> m6_3604  [color=darkseagreen4, key=1, label=content, style=dashed];
m6_3603 -> m6_3604  [key=0, style=solid];
m6_3603 -> m6_145  [key=2, style=dotted];
m6_3604 -> m6_3605  [key=0, style=solid];
m6_3604 -> m6_3600  [key=2, style=dotted];
m6_3605 -> m6_3606  [key=0, style=solid];
m6_3606 -> m6_3607  [key=0, style=solid];
m6_3606 -> m6_608  [key=2, style=dotted];
m6_3606 -> m6_77  [key=2, style=dotted];
m6_3606 -> m6_3606  [color=darkseagreen4, key=1, label=dateTimeOffset, style=dashed];
m6_3607 -> m6_3608  [key=0, style=solid];
m6_3607 -> m6_3609  [key=2, style=dotted];
m6_3607 -> m6_77  [key=2, style=dotted];
m6_3607 -> m6_3607  [color=darkseagreen4, key=1, label=dateTimeOffset, style=dashed];
m6_3608 -> m6_3601  [color=blue, key=0, style=bold];
m6_4016 -> m6_4017  [key=0, style=solid];
m6_4017 -> m6_4018  [key=0, style=solid];
m6_4018 -> m6_4016  [color=blue, key=0, style=bold];
m6_808 -> m6_809  [key=0, style=solid];
m6_809 -> m6_810  [key=0, style=solid];
m6_809 -> m6_815  [key=2, style=dotted];
m6_810 -> m6_811  [key=0, style=solid];
m6_810 -> m6_217  [key=2, style=dotted];
m6_810 -> m6_812  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_811 -> m6_812  [key=0, style=solid];
m6_811 -> m6_77  [key=2, style=dotted];
m6_812 -> m6_813  [key=0, style=solid];
m6_812 -> m6_218  [key=2, style=dotted];
m6_813 -> m6_814  [key=0, style=solid];
m6_813 -> m6_77  [key=2, style=dotted];
m6_814 -> m6_808  [color=blue, key=0, style=bold];
m6_1111 -> m6_1112  [key=0, style=solid];
m6_1112 -> m6_1113  [key=0, style=solid];
m6_1113 -> m6_1114  [key=0, style=solid];
m6_1113 -> m6_218  [key=2, style=dotted];
m6_1113 -> m6_1115  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_1113 -> m6_1116  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_1113 -> m6_1117  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_1114 -> m6_1115  [key=0, style=solid];
m6_1114 -> m6_77  [key=2, style=dotted];
m6_1115 -> m6_1116  [key=0, style=solid];
m6_1115 -> m6_77  [key=2, style=dotted];
m6_1116 -> m6_1117  [key=0, style=solid];
m6_1116 -> m6_77  [key=2, style=dotted];
m6_1117 -> m6_1118  [key=0, style=solid];
m6_1117 -> m6_77  [key=2, style=dotted];
m6_1118 -> m6_1111  [color=blue, key=0, style=bold];
m6_3205 -> m6_3207  [key=0, style=solid];
m6_3205 -> m6_3210  [color=darkseagreen4, key=1, label=T, style=dashed];
m6_3207 -> m6_3208  [key=0, style=solid];
m6_3207 -> m6_661  [key=2, style=dotted];
m6_3207 -> m6_3210  [color=darkseagreen4, key=1, label=stringWriter, style=dashed];
m6_3207 -> m6_3211  [color=darkseagreen4, key=1, label=stringWriter, style=dashed];
m6_3210 -> m6_3211  [key=0, style=solid];
m6_3210 -> m6_662  [key=2, style=dotted];
m6_3208 -> m6_3209  [key=0, style=solid];
m6_3208 -> m6_75  [key=2, style=dotted];
m6_3208 -> m6_3210  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_3211 -> m6_3212  [key=0, style=solid];
m6_3211 -> m6_2723  [key=2, style=dotted];
m6_3209 -> m6_3210  [key=0, style=solid];
m6_3209 -> m6_3213  [key=2, style=dotted];
m6_3212 -> m6_3205  [color=blue, key=0, style=bold];
m6_2907 -> m6_2908  [key=0, style=solid];
m6_2908 -> m6_2909  [key=0, style=solid];
m6_2908 -> m6_2917  [key=2, style=dotted];
m6_2908 -> m6_751  [key=2, style=dotted];
m6_2908 -> m6_596  [key=2, style=dotted];
m6_2909 -> m6_2910  [key=0, style=solid];
m6_2909 -> m6_227  [key=2, style=dotted];
m6_2909 -> m6_2911  [color=darkseagreen4, key=1, label=jsonString, style=dashed];
m6_2910 -> m6_2911  [key=0, style=solid];
m6_2910 -> m6_77  [key=2, style=dotted];
m6_2911 -> m6_2912  [key=0, style=solid];
m6_2911 -> m6_218  [key=2, style=dotted];
m6_2911 -> m6_2913  [color=darkseagreen4, key=1, label=actual, style=dashed];
m6_2911 -> m6_2914  [color=darkseagreen4, key=1, label=actual, style=dashed];
m6_2912 -> m6_2913  [key=0, style=solid];
m6_2912 -> m6_751  [key=2, style=dotted];
m6_2912 -> m6_77  [key=2, style=dotted];
m6_2913 -> m6_2914  [key=0, style=solid];
m6_2913 -> m6_751  [key=2, style=dotted];
m6_2913 -> m6_77  [key=2, style=dotted];
m6_2914 -> m6_2915  [key=0, style=solid];
m6_2915 -> m6_2916  [key=0, style=solid];
m6_2915 -> m6_1516  [key=2, style=dotted];
m6_2915 -> m6_2806  [key=2, style=dotted];
m6_2916 -> m6_2907  [color=blue, key=0, style=bold];
m6_3731 -> m6_3732  [key=0, style=solid];
m6_3732 -> m6_3733  [key=0, style=solid];
m6_3732 -> m6_218  [key=2, style=dotted];
m6_3732 -> m6_3734  [color=darkseagreen4, key=1, label=list, style=dashed];
m6_3732 -> m6_3735  [color=darkseagreen4, key=1, label=list, style=dashed];
m6_3732 -> m6_3736  [color=darkseagreen4, key=1, label=list, style=dashed];
m6_3733 -> m6_3734  [key=0, style=solid];
m6_3733 -> m6_77  [key=2, style=dotted];
m6_3734 -> m6_3735  [key=0, style=solid];
m6_3734 -> m6_77  [key=2, style=dotted];
m6_3735 -> m6_3736  [key=0, style=solid];
m6_3735 -> m6_77  [key=2, style=dotted];
m6_3736 -> m6_3737  [key=0, style=solid];
m6_3736 -> m6_77  [key=2, style=dotted];
m6_3737 -> m6_3731  [color=blue, key=0, style=bold];
m6_3241 -> m6_3242  [key=0, style=solid];
m6_3242 -> m6_3243  [key=0, style=solid];
m6_3242 -> m6_3245  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_3242 -> m6_3250  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_3242 -> m6_3253  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_3243 -> m6_3244  [key=0, style=solid];
m6_3243 -> m6_145  [key=2, style=dotted];
m6_3243 -> m6_3248  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_3243 -> m6_3249  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_3245 -> m6_3246  [key=0, style=solid];
m6_3245 -> m6_665  [key=2, style=dotted];
m6_3245 -> m6_666  [key=2, style=dotted];
m6_3245 -> m6_2925  [key=2, style=dotted];
m6_3245 -> m6_3247  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_3250 -> m6_3251  [key=0, style=solid];
m6_3250 -> m6_527  [key=2, style=dotted];
m6_3250 -> m6_3252  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_3244 -> m6_3245  [key=0, style=solid];
m6_3244 -> m6_2924  [key=2, style=dotted];
m6_3248 -> m6_3249  [key=0, style=solid];
m6_3249 -> m6_3250  [key=0, style=solid];
m6_3249 -> m6_2924  [key=2, style=dotted];
m6_3249 -> m6_3253  [color=darkseagreen4, key=1, label=s, style=dashed];
m6_3246 -> m6_3247  [key=0, style=solid];
m6_3246 -> m6_1068  [key=2, style=dotted];
m6_3247 -> m6_3248  [key=0, style=solid];
m6_3247 -> m6_77  [key=2, style=dotted];
m6_3251 -> m6_3241  [color=blue, key=0, style=bold];
m6_1815 -> m6_1816  [key=0, style=solid];
m6_1816 -> m6_1817  [key=0, style=solid];
m6_1816 -> m6_1823  [key=2, style=dotted];
m6_1817 -> m6_1818  [key=0, style=solid];
m6_1817 -> m6_227  [key=2, style=dotted];
m6_1818 -> m6_1819  [key=0, style=solid];
m6_1818 -> m6_77  [key=2, style=dotted];
m6_1819 -> m6_1820  [key=0, style=solid];
m6_1819 -> m6_1824  [key=2, style=dotted];
m6_1820 -> m6_1821  [key=0, style=solid];
m6_1820 -> m6_227  [key=2, style=dotted];
m6_1821 -> m6_1822  [key=0, style=solid];
m6_1821 -> m6_77  [key=2, style=dotted];
m6_1822 -> m6_1815  [color=blue, key=0, style=bold];
m6_2140 -> m6_2141  [key=0, style=solid];
m6_2141 -> m6_2142  [key=0, style=solid];
m6_2141 -> m6_2169  [key=2, style=dotted];
m6_2141 -> m6_2143  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_2141 -> m6_2144  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_2141 -> m6_2145  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_2141 -> m6_2154  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_2141 -> m6_2155  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_2141 -> m6_2156  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_2141 -> m6_2157  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_2141 -> m6_2158  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_2142 -> m6_2143  [key=0, style=solid];
m6_2143 -> m6_2144  [key=0, style=solid];
m6_2144 -> m6_2145  [key=0, style=solid];
m6_2145 -> m6_2146  [key=0, style=solid];
m6_2145 -> m6_227  [key=2, style=dotted];
m6_2145 -> m6_2147  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_2154 -> m6_2155  [key=0, style=solid];
m6_2155 -> m6_2156  [key=0, style=solid];
m6_2156 -> m6_2157  [key=0, style=solid];
m6_2157 -> m6_2158  [key=0, style=solid];
m6_2158 -> m6_2159  [key=0, style=solid];
m6_2158 -> m6_227  [key=2, style=dotted];
m6_2158 -> m6_2160  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_2146 -> m6_2147  [key=0, style=solid];
m6_2146 -> m6_77  [key=2, style=dotted];
m6_2147 -> m6_2148  [key=0, style=solid];
m6_2147 -> m6_218  [key=2, style=dotted];
m6_2147 -> m6_2149  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m6_2147 -> m6_2150  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m6_2147 -> m6_2151  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m6_2147 -> m6_2152  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m6_2147 -> m6_2153  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m6_2148 -> m6_2149  [key=0, style=solid];
m6_2148 -> m6_1897  [key=2, style=dotted];
m6_2149 -> m6_2150  [key=0, style=solid];
m6_2149 -> m6_2170  [key=2, style=dotted];
m6_2150 -> m6_2151  [key=0, style=solid];
m6_2150 -> m6_2170  [key=2, style=dotted];
m6_2151 -> m6_2152  [key=0, style=solid];
m6_2151 -> m6_2170  [key=2, style=dotted];
m6_2152 -> m6_2153  [key=0, style=solid];
m6_2152 -> m6_2170  [key=2, style=dotted];
m6_2153 -> m6_2154  [key=0, style=solid];
m6_2153 -> m6_77  [key=2, style=dotted];
m6_2159 -> m6_2160  [key=0, style=solid];
m6_2159 -> m6_77  [key=2, style=dotted];
m6_2160 -> m6_2161  [key=0, style=solid];
m6_2160 -> m6_218  [key=2, style=dotted];
m6_2160 -> m6_2162  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m6_2160 -> m6_2163  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m6_2160 -> m6_2164  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m6_2160 -> m6_2165  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m6_2160 -> m6_2166  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m6_2160 -> m6_2167  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m6_2161 -> m6_2162  [key=0, style=solid];
m6_2161 -> m6_77  [key=2, style=dotted];
m6_2162 -> m6_2163  [key=0, style=solid];
m6_2162 -> m6_245  [key=2, style=dotted];
m6_2163 -> m6_2164  [key=0, style=solid];
m6_2163 -> m6_245  [key=2, style=dotted];
m6_2164 -> m6_2165  [key=0, style=solid];
m6_2164 -> m6_245  [key=2, style=dotted];
m6_2165 -> m6_2166  [key=0, style=solid];
m6_2165 -> m6_245  [key=2, style=dotted];
m6_2166 -> m6_2167  [key=0, style=solid];
m6_2166 -> m6_77  [key=2, style=dotted];
m6_2167 -> m6_2168  [key=0, style=solid];
m6_2167 -> m6_77  [key=2, style=dotted];
m6_2168 -> m6_2140  [color=blue, key=0, style=bold];
m6_2394 -> m6_2395  [key=0, style=solid];
m6_2395 -> m6_2396  [key=0, style=solid];
m6_2395 -> m6_145  [key=2, style=dotted];
m6_2395 -> m6_856  [key=2, style=dotted];
m6_2396 -> m6_2394  [color=blue, key=0, style=bold];
m6_2980 -> m6_2981  [key=0, style=solid];
m6_2981 -> m6_2982  [key=0, style=solid];
m6_2981 -> m6_527  [key=2, style=dotted];
m6_2981 -> m6_2983  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_2982 -> m6_2980  [color=blue, key=0, style=bold];
m6_1024 -> m6_1025  [key=0, style=solid];
m6_1025 -> m6_1026  [key=0, style=solid];
m6_1026 -> m6_1027  [key=0, style=solid];
m6_1026 -> m6_218  [key=2, style=dotted];
m6_1027 -> m6_1024  [color=blue, key=0, style=bold];
m6_2588 -> m6_2589  [key=0, style=solid];
m6_2589 -> m6_2590  [key=0, style=solid];
m6_2589 -> m6_1934  [key=2, style=dotted];
m6_2590 -> m6_2588  [color=blue, key=0, style=bold];
m6_1535 -> m6_1536  [key=0, style=solid];
m6_1536 -> m6_1537  [key=0, style=solid];
m6_1536 -> m6_218  [key=2, style=dotted];
m6_1536 -> m6_1538  [color=darkseagreen4, key=1, label=d, style=dashed];
m6_1536 -> m6_1539  [color=darkseagreen4, key=1, label=d, style=dashed];
m6_1536 -> m6_1540  [color=darkseagreen4, key=1, label=d, style=dashed];
m6_1536 -> m6_1541  [color=darkseagreen4, key=1, label=d, style=dashed];
m6_1536 -> m6_1542  [color=darkseagreen4, key=1, label=d, style=dashed];
m6_1536 -> m6_1543  [color=darkseagreen4, key=1, label=d, style=dashed];
m6_1536 -> m6_1544  [color=darkseagreen4, key=1, label=d, style=dashed];
m6_1536 -> m6_1545  [color=darkseagreen4, key=1, label=d, style=dashed];
m6_1537 -> m6_1538  [key=0, style=solid];
m6_1537 -> m6_1068  [key=2, style=dotted];
m6_1538 -> m6_1539  [key=0, style=solid];
m6_1538 -> m6_1068  [key=2, style=dotted];
m6_1539 -> m6_1540  [key=0, style=solid];
m6_1539 -> m6_382  [key=2, style=dotted];
m6_1539 -> m6_77  [key=2, style=dotted];
m6_1540 -> m6_1541  [key=0, style=solid];
m6_1540 -> m6_382  [key=2, style=dotted];
m6_1540 -> m6_77  [key=2, style=dotted];
m6_1541 -> m6_1542  [key=0, style=solid];
m6_1541 -> m6_77  [key=2, style=dotted];
m6_1542 -> m6_1543  [key=0, style=solid];
m6_1542 -> m6_77  [key=2, style=dotted];
m6_1543 -> m6_1544  [key=0, style=solid];
m6_1543 -> m6_77  [key=2, style=dotted];
m6_1544 -> m6_1545  [key=0, style=solid];
m6_1544 -> m6_77  [key=2, style=dotted];
m6_1545 -> m6_1546  [key=0, style=solid];
m6_1545 -> m6_77  [key=2, style=dotted];
m6_1546 -> m6_1535  [color=blue, key=0, style=bold];
m6_1366 -> m6_1367  [key=0, style=solid];
m6_1367 -> m6_1368  [key=0, style=solid];
m6_1367 -> m6_1371  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1368 -> m6_1369  [key=0, style=solid];
m6_1368 -> m6_527  [key=2, style=dotted];
m6_1368 -> m6_1370  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_1369 -> m6_1366  [color=blue, key=0, style=bold];
m6_3962 -> m6_3963  [key=0, style=solid];
m6_3963 -> m6_3964  [key=0, style=solid];
m6_3964 -> m6_3962  [color=blue, key=0, style=bold];
m6_407 -> m6_408  [key=0, style=solid];
m6_408 -> m6_409  [key=0, style=solid];
m6_408 -> m6_422  [key=2, style=dotted];
m6_408 -> m6_410  [color=darkseagreen4, key=1, label=product, style=dashed];
m6_408 -> m6_411  [color=darkseagreen4, key=1, label=product, style=dashed];
m6_408 -> m6_412  [color=darkseagreen4, key=1, label=product, style=dashed];
m6_408 -> m6_413  [color=darkseagreen4, key=1, label=product, style=dashed];
m6_409 -> m6_410  [key=0, style=solid];
m6_410 -> m6_411  [key=0, style=solid];
m6_410 -> m6_423  [key=2, style=dotted];
m6_411 -> m6_412  [key=0, style=solid];
m6_412 -> m6_413  [key=0, style=solid];
m6_413 -> m6_414  [key=0, style=solid];
m6_413 -> m6_217  [key=2, style=dotted];
m6_414 -> m6_415  [key=0, style=solid];
m6_414 -> m6_406  [key=2, style=dotted];
m6_414 -> m6_416  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m6_414 -> m6_417  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m6_414 -> m6_418  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m6_414 -> m6_419  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m6_414 -> m6_420  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m6_415 -> m6_416  [key=0, style=solid];
m6_415 -> m6_77  [key=2, style=dotted];
m6_416 -> m6_417  [key=0, style=solid];
m6_416 -> m6_423  [key=2, style=dotted];
m6_416 -> m6_77  [key=2, style=dotted];
m6_417 -> m6_418  [key=0, style=solid];
m6_417 -> m6_77  [key=2, style=dotted];
m6_418 -> m6_419  [key=0, style=solid];
m6_418 -> m6_77  [key=2, style=dotted];
m6_419 -> m6_420  [key=0, style=solid];
m6_419 -> m6_77  [key=2, style=dotted];
m6_420 -> m6_421  [key=0, style=solid];
m6_420 -> m6_77  [key=2, style=dotted];
m6_421 -> m6_407  [color=blue, key=0, style=bold];
m6_2291 -> m6_2292  [key=0, style=solid];
m6_2292 -> m6_2293  [key=0, style=solid];
m6_2292 -> m6_2312  [key=2, style=dotted];
m6_2292 -> m6_2294  [color=darkseagreen4, key=1, label=expando, style=dashed];
m6_2292 -> m6_2295  [color=darkseagreen4, key=1, label=expando, style=dashed];
m6_2292 -> m6_2296  [color=darkseagreen4, key=1, label=expando, style=dashed];
m6_2292 -> m6_2297  [color=darkseagreen4, key=1, label=expando, style=dashed];
m6_2292 -> m6_2298  [color=darkseagreen4, key=1, label=expando, style=dashed];
m6_2292 -> m6_2302  [color=darkseagreen4, key=1, label=expando, style=dashed];
m6_2292 -> m6_2304  [color=darkseagreen4, key=1, label=expando, style=dashed];
m6_2292 -> m6_2308  [color=darkseagreen4, key=1, label=expando, style=dashed];
m6_2292 -> m6_2310  [color=darkseagreen4, key=1, label=expando, style=dashed];
m6_2293 -> m6_2294  [key=0, style=solid];
m6_2294 -> m6_2295  [key=0, style=solid];
m6_2295 -> m6_2296  [key=0, style=solid];
m6_2295 -> m6_2312  [key=2, style=dotted];
m6_2296 -> m6_2297  [key=0, style=solid];
m6_2297 -> m6_2298  [key=0, style=solid];
m6_2297 -> m6_596  [key=2, style=dotted];
m6_2298 -> m6_2299  [key=0, style=solid];
m6_2298 -> m6_2313  [key=2, style=dotted];
m6_2298 -> m6_2300  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_2302 -> m6_2303  [key=0, style=solid];
m6_2302 -> m6_77  [key=2, style=dotted];
m6_2304 -> m6_2305  [key=0, style=solid];
m6_2304 -> m6_77  [key=2, style=dotted];
m6_2308 -> m6_2309  [key=0, style=solid];
m6_2308 -> m6_77  [key=2, style=dotted];
m6_2310 -> m6_2311  [key=0, style=solid];
m6_2310 -> m6_77  [key=2, style=dotted];
m6_2299 -> m6_2300  [key=0, style=solid];
m6_2299 -> m6_77  [key=2, style=dotted];
m6_2300 -> m6_2301  [key=0, style=solid];
m6_2300 -> m6_218  [key=2, style=dotted];
m6_2300 -> m6_2302  [color=darkseagreen4, key=1, label=newExpando, style=dashed];
m6_2300 -> m6_2303  [color=darkseagreen4, key=1, label=newExpando, style=dashed];
m6_2300 -> m6_2304  [color=darkseagreen4, key=1, label=newExpando, style=dashed];
m6_2300 -> m6_2305  [color=darkseagreen4, key=1, label=newExpando, style=dashed];
m6_2300 -> m6_2306  [color=darkseagreen4, key=1, label=newExpando, style=dashed];
m6_2301 -> m6_2302  [key=0, style=solid];
m6_2301 -> m6_1270  [key=2, style=dotted];
m6_2303 -> m6_2304  [key=0, style=solid];
m6_2303 -> m6_1270  [key=2, style=dotted];
m6_2305 -> m6_2306  [key=0, style=solid];
m6_2305 -> m6_1270  [key=2, style=dotted];
m6_2306 -> m6_2307  [key=0, style=solid];
m6_2306 -> m6_2308  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_2306 -> m6_2309  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_2306 -> m6_2310  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_2307 -> m6_2308  [key=0, style=solid];
m6_2307 -> m6_1270  [key=2, style=dotted];
m6_2309 -> m6_2310  [key=0, style=solid];
m6_2309 -> m6_1270  [key=2, style=dotted];
m6_2311 -> m6_2291  [color=blue, key=0, style=bold];
m6_2801 -> m6_3978  [key=0, style=solid];
m6_2801 -> m6_3979  [color=darkseagreen4, key=1, label="byte[]", style=dashed];
m6_3978 -> m6_3979  [key=0, style=solid];
m6_3979 -> m6_3980  [key=0, style=solid];
m6_3980 -> m6_2801  [color=blue, key=0, style=bold];
m6_4041 -> m6_4042  [key=0, style=solid];
m6_4042 -> m6_4043  [key=0, style=solid];
m6_4043 -> m6_4041  [color=blue, key=0, style=bold];
m6_2008 -> m6_2009  [key=0, style=solid];
m6_2008 -> m6_2011  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_2008 -> m6_2012  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_2008 -> m6_2013  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_2008 -> m6_2015  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_2009 -> m6_2010  [key=0, style=solid];
m6_2011 -> m6_2012  [key=0, style=solid];
m6_2011 -> m6_2019  [key=2, style=dotted];
m6_2012 -> m6_2013  [key=0, style=solid];
m6_2012 -> m6_2016  [key=0, style=solid];
m6_2013 -> m6_2014  [key=0, style=solid];
m6_2015 -> m6_2012  [key=0, style=solid];
m6_2015 -> m6_2019  [key=2, style=dotted];
m6_2010 -> m6_2011  [key=0, style=solid];
m6_2010 -> m6_2018  [key=2, style=dotted];
m6_2010 -> m6_2014  [color=darkseagreen4, key=1, label=newStrings, style=dashed];
m6_2010 -> m6_2016  [color=darkseagreen4, key=1, label=newStrings, style=dashed];
m6_2014 -> m6_2015  [key=0, style=solid];
m6_2014 -> m6_545  [key=2, style=dotted];
m6_2016 -> m6_2017  [key=0, style=solid];
m6_2017 -> m6_2008  [color=blue, key=0, style=bold];
m6_1409 -> m6_1410  [key=0, style=solid];
m6_1410 -> m6_1411  [key=0, style=solid];
m6_1411 -> m6_1412  [key=0, style=solid];
m6_1411 -> m6_218  [key=2, style=dotted];
m6_1412 -> m6_1413  [key=0, style=solid];
m6_1412 -> m6_77  [key=2, style=dotted];
m6_1413 -> m6_1409  [color=blue, key=0, style=bold];
m6_3914 -> m6_3915  [key=0, style=solid];
m6_3914 -> m6_3916  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_3914 -> m6_3917  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_3915 -> m6_3916  [key=0, style=solid];
m6_3915 -> m6_382  [key=2, style=dotted];
m6_3915 -> m6_3902  [key=2, style=dotted];
m6_3916 -> m6_3917  [key=0, style=solid];
m6_3916 -> m6_3919  [key=2, style=dotted];
m6_3917 -> m6_3918  [key=0, style=solid];
m6_3917 -> m6_3292  [key=2, style=dotted];
m6_3918 -> m6_3914  [color=blue, key=0, style=bold];
m6_3262 -> m6_3263  [key=0, style=solid];
m6_3263 -> m6_3264  [key=0, style=solid];
m6_3263 -> m6_527  [key=2, style=dotted];
m6_3263 -> m6_3265  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_3264 -> m6_3262  [color=blue, key=0, style=bold];
m6_4093 -> m6_4094  [key=0, style=solid];
m6_4094 -> m6_4095  [key=0, style=solid];
m6_4095 -> m6_4093  [color=blue, key=0, style=bold];
m6_1456 -> m6_1457  [key=0, style=solid];
m6_1457 -> m6_1458  [key=0, style=solid];
m6_1457 -> m6_1467  [key=2, style=dotted];
m6_1457 -> m6_1462  [color=darkseagreen4, key=1, label=structTest, style=dashed];
m6_1458 -> m6_1459  [key=0, style=solid];
m6_1458 -> m6_227  [key=2, style=dotted];
m6_1458 -> m6_1460  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1458 -> m6_1461  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1462 -> m6_1463  [key=0, style=solid];
m6_1462 -> m6_77  [key=2, style=dotted];
m6_1462 -> m6_1462  [color=darkseagreen4, key=1, label=structTest, style=dashed];
m6_1462 -> m6_1464  [color=darkseagreen4, key=1, label=structTest, style=dashed];
m6_1459 -> m6_1460  [key=0, style=solid];
m6_1459 -> m6_343  [key=2, style=dotted];
m6_1460 -> m6_1461  [key=0, style=solid];
m6_1460 -> m6_77  [key=2, style=dotted];
m6_1461 -> m6_1462  [key=0, style=solid];
m6_1461 -> m6_218  [key=2, style=dotted];
m6_1463 -> m6_1464  [key=0, style=solid];
m6_1463 -> m6_77  [key=2, style=dotted];
m6_1464 -> m6_1465  [key=0, style=solid];
m6_1464 -> m6_77  [key=2, style=dotted];
m6_1464 -> m6_1464  [color=darkseagreen4, key=1, label=structTest, style=dashed];
m6_1465 -> m6_1466  [key=0, style=solid];
m6_1465 -> m6_77  [key=2, style=dotted];
m6_1466 -> m6_1456  [color=blue, key=0, style=bold];
m6_2885 -> m6_2886  [key=0, style=solid];
m6_2886 -> m6_2887  [key=0, style=solid];
m6_2886 -> m6_527  [key=2, style=dotted];
m6_2886 -> m6_2888  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_2887 -> m6_2885  [color=blue, key=0, style=bold];
m6_650 -> m6_651  [key=0, style=solid];
m6_651 -> m6_652  [key=0, style=solid];
m6_651 -> m6_660  [key=2, style=dotted];
m6_651 -> m6_422  [key=2, style=dotted];
m6_651 -> m6_655  [color=darkseagreen4, key=1, label=collection, style=dashed];
m6_651 -> m6_658  [color=darkseagreen4, key=1, label=collection, style=dashed];
m6_651 -> m6_651  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m6_652 -> m6_653  [key=0, style=solid];
m6_652 -> m6_75  [key=2, style=dotted];
m6_652 -> m6_655  [color=darkseagreen4, key=1, label=jsonSerializer, style=dashed];
m6_652 -> m6_657  [color=darkseagreen4, key=1, label=jsonSerializer, style=dashed];
m6_655 -> m6_656  [key=0, style=solid];
m6_655 -> m6_662  [key=2, style=dotted];
m6_658 -> m6_659  [key=0, style=solid];
m6_658 -> m6_77  [key=2, style=dotted];
m6_653 -> m6_654  [key=0, style=solid];
m6_657 -> m6_658  [key=0, style=solid];
m6_657 -> m6_665  [key=2, style=dotted];
m6_657 -> m6_666  [key=2, style=dotted];
m6_657 -> m6_663  [key=2, style=dotted];
m6_657 -> m6_664  [key=2, style=dotted];
m6_657 -> m6_667  [key=2, style=dotted];
m6_654 -> m6_655  [key=0, style=solid];
m6_654 -> m6_661  [key=2, style=dotted];
m6_654 -> m6_656  [color=darkseagreen4, key=1, label=sw, style=dashed];
m6_654 -> m6_657  [color=darkseagreen4, key=1, label=sw, style=dashed];
m6_656 -> m6_657  [key=0, style=solid];
m6_656 -> m6_663  [key=2, style=dotted];
m6_656 -> m6_664  [key=2, style=dotted];
m6_656 -> m6_77  [key=2, style=dotted];
m6_659 -> m6_650  [color=blue, key=0, style=bold];
m6_4096 -> m6_4097  [key=0, style=solid];
m6_4097 -> m6_4098  [key=0, style=solid];
m6_4097 -> m6_4079  [key=2, style=dotted];
m6_4097 -> m6_4226  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.Ratio", style=dashed];
m6_4098 -> m6_4096  [color=blue, key=0, style=bold];
m6_578 -> m6_579  [key=0, style=solid];
m6_579 -> m6_580  [key=0, style=solid];
m6_579 -> m6_583  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_580 -> m6_581  [key=0, style=solid];
m6_580 -> m6_527  [key=2, style=dotted];
m6_580 -> m6_582  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_581 -> m6_578  [color=blue, key=0, style=bold];
m6_1079 -> m6_1080  [key=0, style=solid];
m6_1080 -> m6_1081  [key=0, style=solid];
m6_1080 -> m6_1088  [key=2, style=dotted];
m6_1080 -> m6_1082  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_1081 -> m6_1082  [key=0, style=solid];
m6_1082 -> m6_1083  [key=0, style=solid];
m6_1082 -> m6_217  [key=2, style=dotted];
m6_1082 -> m6_1084  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1083 -> m6_1084  [key=0, style=solid];
m6_1083 -> m6_77  [key=2, style=dotted];
m6_1084 -> m6_1085  [key=0, style=solid];
m6_1084 -> m6_218  [key=2, style=dotted];
m6_1085 -> m6_1086  [key=0, style=solid];
m6_1085 -> m6_217  [key=2, style=dotted];
m6_1086 -> m6_1087  [key=0, style=solid];
m6_1086 -> m6_77  [key=2, style=dotted];
m6_1087 -> m6_1079  [color=blue, key=0, style=bold];
m6_3181 -> m6_3182  [key=0, style=solid];
m6_3182 -> m6_3183  [key=0, style=solid];
m6_3182 -> m6_258  [key=2, style=dotted];
m6_3182 -> m6_596  [key=2, style=dotted];
m6_3183 -> m6_3184  [key=0, style=solid];
m6_3183 -> m6_145  [key=2, style=dotted];
m6_3183 -> m6_1110  [key=2, style=dotted];
m6_3183 -> m6_3185  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_3184 -> m6_3185  [key=0, style=solid];
m6_3184 -> m6_77  [key=2, style=dotted];
m6_3185 -> m6_3186  [key=0, style=solid];
m6_3185 -> m6_218  [key=2, style=dotted];
m6_3185 -> m6_3187  [color=darkseagreen4, key=1, label=dic2, style=dashed];
m6_3185 -> m6_3188  [color=darkseagreen4, key=1, label=dic2, style=dashed];
m6_3186 -> m6_3187  [key=0, style=solid];
m6_3186 -> m6_77  [key=2, style=dotted];
m6_3187 -> m6_3188  [key=0, style=solid];
m6_3187 -> m6_596  [key=2, style=dotted];
m6_3187 -> m6_77  [key=2, style=dotted];
m6_3188 -> m6_3189  [key=0, style=solid];
m6_3188 -> m6_596  [key=2, style=dotted];
m6_3188 -> m6_77  [key=2, style=dotted];
m6_3189 -> m6_3181  [color=blue, key=0, style=bold];
m6_2674 -> m6_2675  [key=0, style=solid];
m6_2675 -> m6_2676  [key=0, style=solid];
m6_2675 -> m6_2685  [key=2, style=dotted];
m6_2675 -> m6_2679  [color=darkseagreen4, key=1, label=c1, style=dashed];
m6_2675 -> m6_2680  [color=darkseagreen4, key=1, label=c1, style=dashed];
m6_2675 -> m6_2681  [color=darkseagreen4, key=1, label=c1, style=dashed];
m6_2675 -> m6_2682  [color=darkseagreen4, key=1, label=c1, style=dashed];
m6_2675 -> m6_2683  [color=darkseagreen4, key=1, label=c1, style=dashed];
m6_2676 -> m6_2677  [key=0, style=solid];
m6_2676 -> m6_227  [key=2, style=dotted];
m6_2676 -> m6_2678  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_2679 -> m6_2680  [key=0, style=solid];
m6_2679 -> m6_77  [key=2, style=dotted];
m6_2680 -> m6_2681  [key=0, style=solid];
m6_2680 -> m6_77  [key=2, style=dotted];
m6_2681 -> m6_2682  [key=0, style=solid];
m6_2681 -> m6_77  [key=2, style=dotted];
m6_2682 -> m6_2683  [key=0, style=solid];
m6_2682 -> m6_77  [key=2, style=dotted];
m6_2683 -> m6_2684  [key=0, style=solid];
m6_2683 -> m6_77  [key=2, style=dotted];
m6_2677 -> m6_2678  [key=0, style=solid];
m6_2677 -> m6_77  [key=2, style=dotted];
m6_2678 -> m6_2679  [key=0, style=solid];
m6_2678 -> m6_218  [key=2, style=dotted];
m6_2678 -> m6_2680  [color=darkseagreen4, key=1, label=c2, style=dashed];
m6_2678 -> m6_2681  [color=darkseagreen4, key=1, label=c2, style=dashed];
m6_2678 -> m6_2682  [color=darkseagreen4, key=1, label=c2, style=dashed];
m6_2678 -> m6_2683  [color=darkseagreen4, key=1, label=c2, style=dashed];
m6_2684 -> m6_2674  [color=blue, key=0, style=bold];
m6_3862 -> m6_3863  [key=0, style=solid];
m6_3863 -> m6_3864  [key=0, style=solid];
m6_3864 -> m6_3865  [key=0, style=solid];
m6_3864 -> m6_145  [key=2, style=dotted];
m6_3864 -> m6_84  [key=2, style=dotted];
m6_3864 -> m6_856  [key=2, style=dotted];
m6_3864 -> m6_3866  [color=darkseagreen4, key=1, label=people, style=dashed];
m6_3864 -> m6_3867  [color=darkseagreen4, key=1, label=people, style=dashed];
m6_3865 -> m6_3866  [key=0, style=solid];
m6_3865 -> m6_77  [key=2, style=dotted];
m6_3866 -> m6_3867  [key=0, style=solid];
m6_3866 -> m6_3868  [color=darkseagreen4, key=1, label=john, style=dashed];
m6_3866 -> m6_3869  [color=darkseagreen4, key=1, label=john, style=dashed];
m6_3867 -> m6_3868  [key=0, style=solid];
m6_3867 -> m6_3869  [color=darkseagreen4, key=1, label=jane, style=dashed];
m6_3868 -> m6_3869  [key=0, style=solid];
m6_3868 -> m6_77  [key=2, style=dotted];
m6_3869 -> m6_3870  [key=0, style=solid];
m6_3869 -> m6_77  [key=2, style=dotted];
m6_3870 -> m6_3862  [color=blue, key=0, style=bold];
m6_1345 -> m6_1346  [key=0, style=solid];
m6_1346 -> m6_1347  [key=0, style=solid];
m6_1346 -> m6_1350  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1347 -> m6_1348  [key=0, style=solid];
m6_1347 -> m6_527  [key=2, style=dotted];
m6_1347 -> m6_1349  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_1348 -> m6_1345  [color=blue, key=0, style=bold];
m6_3372 -> m6_3373  [key=0, style=solid];
m6_3373 -> m6_3374  [key=0, style=solid];
m6_3374 -> m6_3375  [key=0, style=solid];
m6_3374 -> m6_218  [key=2, style=dotted];
m6_3374 -> m6_3376  [color=darkseagreen4, key=1, label=l, style=dashed];
m6_3375 -> m6_3376  [key=0, style=solid];
m6_3375 -> m6_77  [key=2, style=dotted];
m6_3376 -> m6_3377  [key=0, style=solid];
m6_3376 -> m6_77  [key=2, style=dotted];
m6_3377 -> m6_3372  [color=blue, key=0, style=bold];
m6_4012 -> m6_4013  [key=0, style=solid];
m6_4013 -> m6_4014  [key=0, style=solid];
m6_4013 -> m6_4015  [key=2, style=dotted];
m6_4014 -> m6_4012  [color=blue, key=0, style=bold];
m6_2429 -> m6_2430  [key=0, style=solid];
m6_2430 -> m6_2431  [key=0, style=solid];
m6_2431 -> m6_2429  [color=blue, key=0, style=bold];
m6_1387 -> m6_1388  [key=0, style=solid];
m6_1388 -> m6_1389  [key=0, style=solid];
m6_1388 -> m6_1392  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1389 -> m6_1390  [key=0, style=solid];
m6_1389 -> m6_527  [key=2, style=dotted];
m6_1389 -> m6_1391  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_1390 -> m6_1387  [color=blue, key=0, style=bold];
m6_86 -> m6_87  [key=0, style=solid];
m6_87 -> m6_88  [key=0, style=solid];
m6_87 -> m6_145  [key=2, style=dotted];
m6_87 -> m6_89  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_87 -> m6_90  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_87 -> m6_91  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_87 -> m6_92  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_87 -> m6_93  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_87 -> m6_94  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_87 -> m6_95  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_87 -> m6_96  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_87 -> m6_98  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_87 -> m6_99  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_87 -> m6_100  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_87 -> m6_101  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_87 -> m6_102  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_87 -> m6_103  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_87 -> m6_104  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_87 -> m6_105  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_87 -> m6_106  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_87 -> m6_107  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_87 -> m6_108  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_87 -> m6_109  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_87 -> m6_110  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_87 -> m6_111  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_87 -> m6_112  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_87 -> m6_113  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_87 -> m6_114  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_87 -> m6_115  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_87 -> m6_116  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_87 -> m6_117  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_87 -> m6_118  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_87 -> m6_119  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_87 -> m6_120  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_87 -> m6_121  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_87 -> m6_122  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_87 -> m6_123  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_87 -> m6_124  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_87 -> m6_125  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_87 -> m6_126  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_87 -> m6_127  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_87 -> m6_128  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_87 -> m6_129  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_87 -> m6_130  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_87 -> m6_131  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_87 -> m6_133  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_87 -> m6_134  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_87 -> m6_135  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_87 -> m6_136  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_87 -> m6_138  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_87 -> m6_139  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_87 -> m6_140  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_87 -> m6_141  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_87 -> m6_142  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_87 -> m6_143  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_88 -> m6_89  [key=0, style=solid];
m6_88 -> m6_76  [key=2, style=dotted];
m6_88 -> m6_90  [color=darkseagreen4, key=1, label=customBinder, style=dashed];
m6_89 -> m6_90  [key=0, style=solid];
m6_90 -> m6_91  [key=0, style=solid];
m6_90 -> m6_77  [key=2, style=dotted];
m6_91 -> m6_92  [key=0, style=solid];
m6_92 -> m6_93  [key=0, style=solid];
m6_92 -> m6_77  [key=2, style=dotted];
m6_93 -> m6_94  [key=0, style=solid];
m6_94 -> m6_95  [key=0, style=solid];
m6_94 -> m6_77  [key=2, style=dotted];
m6_95 -> m6_96  [key=0, style=solid];
m6_95 -> m6_78  [key=2, style=dotted];
m6_96 -> m6_97  [key=0, style=solid];
m6_96 -> m6_78  [key=2, style=dotted];
m6_96 -> m6_77  [key=2, style=dotted];
m6_98 -> m6_99  [key=0, style=solid];
m6_99 -> m6_100  [key=0, style=solid];
m6_99 -> m6_77  [key=2, style=dotted];
m6_100 -> m6_101  [key=0, style=solid];
m6_100 -> m6_80  [key=2, style=dotted];
m6_100 -> m6_146  [key=2, style=dotted];
m6_101 -> m6_102  [key=0, style=solid];
m6_101 -> m6_77  [key=2, style=dotted];
m6_102 -> m6_103  [key=0, style=solid];
m6_102 -> m6_82  [key=2, style=dotted];
m6_103 -> m6_104  [key=0, style=solid];
m6_103 -> m6_83  [key=2, style=dotted];
m6_103 -> m6_77  [key=2, style=dotted];
m6_104 -> m6_105  [key=0, style=solid];
m6_105 -> m6_106  [key=0, style=solid];
m6_105 -> m6_77  [key=2, style=dotted];
m6_106 -> m6_107  [key=0, style=solid];
m6_107 -> m6_108  [key=0, style=solid];
m6_107 -> m6_77  [key=2, style=dotted];
m6_108 -> m6_109  [key=0, style=solid];
m6_109 -> m6_110  [key=0, style=solid];
m6_109 -> m6_77  [key=2, style=dotted];
m6_110 -> m6_111  [key=0, style=solid];
m6_111 -> m6_112  [key=0, style=solid];
m6_111 -> m6_77  [key=2, style=dotted];
m6_112 -> m6_113  [key=0, style=solid];
m6_113 -> m6_114  [key=0, style=solid];
m6_113 -> m6_77  [key=2, style=dotted];
m6_114 -> m6_115  [key=0, style=solid];
m6_115 -> m6_116  [key=0, style=solid];
m6_115 -> m6_77  [key=2, style=dotted];
m6_116 -> m6_117  [key=0, style=solid];
m6_117 -> m6_118  [key=0, style=solid];
m6_117 -> m6_77  [key=2, style=dotted];
m6_118 -> m6_119  [key=0, style=solid];
m6_119 -> m6_120  [key=0, style=solid];
m6_119 -> m6_77  [key=2, style=dotted];
m6_120 -> m6_121  [key=0, style=solid];
m6_121 -> m6_122  [key=0, style=solid];
m6_121 -> m6_77  [key=2, style=dotted];
m6_122 -> m6_123  [key=0, style=solid];
m6_123 -> m6_124  [key=0, style=solid];
m6_123 -> m6_77  [key=2, style=dotted];
m6_124 -> m6_125  [key=0, style=solid];
m6_125 -> m6_126  [key=0, style=solid];
m6_125 -> m6_77  [key=2, style=dotted];
m6_126 -> m6_127  [key=0, style=solid];
m6_127 -> m6_128  [key=0, style=solid];
m6_127 -> m6_77  [key=2, style=dotted];
m6_128 -> m6_129  [key=0, style=solid];
m6_129 -> m6_130  [key=0, style=solid];
m6_129 -> m6_77  [key=2, style=dotted];
m6_130 -> m6_131  [key=0, style=solid];
m6_131 -> m6_132  [key=0, style=solid];
m6_131 -> m6_77  [key=2, style=dotted];
m6_133 -> m6_134  [key=0, style=solid];
m6_134 -> m6_135  [key=0, style=solid];
m6_134 -> m6_77  [key=2, style=dotted];
m6_135 -> m6_136  [key=0, style=solid];
m6_136 -> m6_137  [key=0, style=solid];
m6_136 -> m6_77  [key=2, style=dotted];
m6_138 -> m6_139  [key=0, style=solid];
m6_139 -> m6_140  [key=0, style=solid];
m6_139 -> m6_77  [key=2, style=dotted];
m6_140 -> m6_141  [key=0, style=solid];
m6_141 -> m6_142  [key=0, style=solid];
m6_141 -> m6_77  [key=2, style=dotted];
m6_142 -> m6_143  [key=0, style=solid];
m6_143 -> m6_144  [key=0, style=solid];
m6_143 -> m6_77  [key=2, style=dotted];
m6_97 -> m6_98  [key=0, style=solid];
m6_97 -> m6_79  [key=2, style=dotted];
m6_97 -> m6_99  [color=darkseagreen4, key=1, label=resolver, style=dashed];
m6_132 -> m6_133  [key=0, style=solid];
m6_132 -> m6_84  [key=2, style=dotted];
m6_132 -> m6_134  [color=darkseagreen4, key=1, label=referenceResolver, style=dashed];
m6_137 -> m6_138  [key=0, style=solid];
m6_137 -> m6_85  [key=2, style=dotted];
m6_137 -> m6_139  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m6_144 -> m6_86  [color=blue, key=0, style=bold];
m6_2362 -> m6_2363  [key=0, style=solid];
m6_2363 -> m6_2364  [key=0, style=solid];
m6_2363 -> m6_2354  [key=2, style=dotted];
m6_2363 -> m6_2365  [color=darkseagreen4, key=1, label=derived, style=dashed];
m6_2364 -> m6_2365  [key=0, style=solid];
m6_2364 -> m6_145  [key=2, style=dotted];
m6_2364 -> m6_2366  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_2365 -> m6_2366  [key=0, style=solid];
m6_2365 -> m6_1110  [key=2, style=dotted];
m6_2366 -> m6_2367  [key=0, style=solid];
m6_2366 -> m6_856  [key=2, style=dotted];
m6_2366 -> m6_2368  [color=darkseagreen4, key=1, label=meh, style=dashed];
m6_2367 -> m6_2368  [key=0, style=solid];
m6_2367 -> m6_77  [key=2, style=dotted];
m6_2368 -> m6_2369  [key=0, style=solid];
m6_2368 -> m6_77  [key=2, style=dotted];
m6_2369 -> m6_2362  [color=blue, key=0, style=bold];
m6_1373 -> m6_1374  [key=0, style=solid];
m6_1374 -> m6_1375  [key=0, style=solid];
m6_1374 -> m6_1378  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1375 -> m6_1376  [key=0, style=solid];
m6_1375 -> m6_527  [key=2, style=dotted];
m6_1375 -> m6_1377  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_1376 -> m6_1373  [color=blue, key=0, style=bold];
m6_2337 -> m6_2338  [key=0, style=solid];
m6_2338 -> m6_2339  [key=0, style=solid];
m6_2338 -> m6_2340  [key=2, style=dotted];
m6_2339 -> m6_2337  [color=blue, key=0, style=bold];
m6_2020 -> m6_2021  [key=0, style=solid];
m6_2021 -> m6_2022  [key=0, style=solid];
m6_2022 -> m6_2020  [color=blue, key=0, style=bold];
m6_4105 -> m6_4106  [key=0, style=solid];
m6_4105 -> m6_4107  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_4105 -> m6_4108  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_4106 -> m6_4107  [key=0, style=solid];
m6_4107 -> m6_4108  [key=0, style=solid];
m6_4107 -> m6_4109  [key=0, style=solid];
m6_4107 -> m6_4111  [key=2, style=dotted];
m6_4108 -> m6_4110  [key=0, style=solid];
m6_4108 -> m6_4112  [key=2, style=dotted];
m6_4108 -> m6_4113  [key=2, style=dotted];
m6_4109 -> m6_4110  [key=0, style=solid];
m6_4110 -> m6_4105  [color=blue, key=0, style=bold];
m6_3346 -> m6_3347  [key=0, style=solid];
m6_3347 -> m6_3348  [key=0, style=solid];
m6_3348 -> m6_3346  [color=blue, key=0, style=bold];
m6_2571 -> m6_2572  [key=0, style=solid];
m6_2572 -> m6_2573  [key=0, style=solid];
m6_2573 -> m6_2574  [key=0, style=solid];
m6_2573 -> m6_258  [key=2, style=dotted];
m6_2574 -> m6_2571  [color=blue, key=0, style=bold];
m6_2126 -> m6_2127  [key=0, style=solid];
m6_2127 -> m6_2128  [key=0, style=solid];
m6_2128 -> m6_2126  [color=blue, key=0, style=bold];
m6_2332 -> m6_2333  [key=0, style=solid];
m6_2333 -> m6_2334  [key=0, style=solid];
m6_2334 -> m6_2335  [key=0, style=solid];
m6_2334 -> m6_218  [key=2, style=dotted];
m6_2335 -> m6_2336  [key=0, style=solid];
m6_2335 -> m6_77  [key=2, style=dotted];
m6_2336 -> m6_2332  [color=blue, key=0, style=bold];
m6_2622 -> m6_2623  [key=0, style=solid];
m6_2623 -> m6_2624  [key=0, style=solid];
m6_2624 -> m6_2622  [color=blue, key=0, style=bold];
m6_759 -> m6_760  [key=0, style=solid];
m6_760 -> m6_761  [key=0, style=solid];
m6_760 -> m6_766  [key=2, style=dotted];
m6_760 -> m6_764  [color=darkseagreen4, key=1, label=ts, style=dashed];
m6_761 -> m6_762  [key=0, style=solid];
m6_761 -> m6_767  [key=2, style=dotted];
m6_761 -> m6_227  [key=2, style=dotted];
m6_761 -> m6_763  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_764 -> m6_765  [key=0, style=solid];
m6_764 -> m6_77  [key=2, style=dotted];
m6_762 -> m6_763  [key=0, style=solid];
m6_762 -> m6_77  [key=2, style=dotted];
m6_763 -> m6_764  [key=0, style=solid];
m6_763 -> m6_218  [key=2, style=dotted];
m6_765 -> m6_759  [color=blue, key=0, style=bold];
m6_3378 -> m6_3379  [key=0, style=solid];
m6_3379 -> m6_3380  [key=0, style=solid];
m6_3379 -> m6_3346  [key=2, style=dotted];
m6_3380 -> m6_3381  [key=0, style=solid];
m6_3380 -> m6_217  [key=2, style=dotted];
m6_3380 -> m6_3383  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_3380 -> m6_3389  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_3381 -> m6_3382  [key=0, style=solid];
m6_3381 -> m6_77  [key=2, style=dotted];
m6_3383 -> m6_3384  [key=0, style=solid];
m6_3382 -> m6_3383  [key=0, style=solid];
m6_3384 -> m6_3385  [key=0, style=solid];
m6_3384 -> m6_3387  [key=2, style=dotted];
m6_3385 -> m6_3386  [key=0, style=solid];
m6_3385 -> m6_77  [key=2, style=dotted];
m6_3386 -> m6_3378  [color=blue, key=0, style=bold];
m6_1694 -> m6_1695  [key=0, style=solid];
m6_1694 -> m6_1696  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m6_1694 -> m6_1697  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m6_1694 -> m6_1698  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m6_1694 -> m6_1699  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m6_1694 -> m6_1700  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m6_1694 -> m6_1701  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m6_1694 -> m6_1702  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m6_1694 -> m6_1703  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m6_1694 -> m6_1704  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m6_1694 -> m6_1705  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m6_1694 -> m6_1706  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m6_1694 -> m6_1707  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m6_1694 -> m6_1708  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m6_1694 -> m6_1709  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m6_1694 -> m6_1710  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m6_1694 -> m6_1711  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m6_1694 -> m6_1712  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m6_1695 -> m6_1696  [key=0, style=solid];
m6_1695 -> m6_1714  [key=2, style=dotted];
m6_1696 -> m6_1697  [key=0, style=solid];
m6_1696 -> m6_1715  [key=2, style=dotted];
m6_1697 -> m6_1698  [key=0, style=solid];
m6_1697 -> m6_1716  [key=2, style=dotted];
m6_1698 -> m6_1699  [key=0, style=solid];
m6_1698 -> m6_1716  [key=2, style=dotted];
m6_1699 -> m6_1700  [key=0, style=solid];
m6_1699 -> m6_1716  [key=2, style=dotted];
m6_1700 -> m6_1701  [key=0, style=solid];
m6_1700 -> m6_1716  [key=2, style=dotted];
m6_1701 -> m6_1702  [key=0, style=solid];
m6_1701 -> m6_1717  [key=2, style=dotted];
m6_1702 -> m6_1703  [key=0, style=solid];
m6_1702 -> m6_1718  [key=2, style=dotted];
m6_1703 -> m6_1704  [key=0, style=solid];
m6_1703 -> m6_1719  [key=2, style=dotted];
m6_1704 -> m6_1705  [key=0, style=solid];
m6_1704 -> m6_1720  [key=2, style=dotted];
m6_1705 -> m6_1706  [key=0, style=solid];
m6_1705 -> m6_1721  [key=2, style=dotted];
m6_1706 -> m6_1707  [key=0, style=solid];
m6_1706 -> m6_1722  [key=2, style=dotted];
m6_1707 -> m6_1708  [key=0, style=solid];
m6_1707 -> m6_1723  [key=2, style=dotted];
m6_1708 -> m6_1709  [key=0, style=solid];
m6_1708 -> m6_1724  [key=2, style=dotted];
m6_1709 -> m6_1710  [key=0, style=solid];
m6_1709 -> m6_1725  [key=2, style=dotted];
m6_1710 -> m6_1711  [key=0, style=solid];
m6_1710 -> m6_1726  [key=2, style=dotted];
m6_1711 -> m6_1712  [key=0, style=solid];
m6_1711 -> m6_1727  [key=2, style=dotted];
m6_1712 -> m6_1713  [key=0, style=solid];
m6_1712 -> m6_1728  [key=2, style=dotted];
m6_1713 -> m6_1694  [color=blue, key=0, style=bold];
m6_208 -> m6_209  [key=0, style=solid];
m6_209 -> m6_210  [key=0, style=solid];
m6_209 -> m6_216  [key=2, style=dotted];
m6_209 -> m6_213  [color=darkseagreen4, key=1, label=ratio, style=dashed];
m6_210 -> m6_211  [key=0, style=solid];
m6_210 -> m6_217  [key=2, style=dotted];
m6_210 -> m6_212  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_213 -> m6_214  [key=0, style=solid];
m6_213 -> m6_77  [key=2, style=dotted];
m6_213 -> m6_213  [color=darkseagreen4, key=1, label=ratio, style=dashed];
m6_211 -> m6_212  [key=0, style=solid];
m6_211 -> m6_77  [key=2, style=dotted];
m6_212 -> m6_213  [key=0, style=solid];
m6_212 -> m6_218  [key=2, style=dotted];
m6_214 -> m6_215  [key=0, style=solid];
m6_214 -> m6_77  [key=2, style=dotted];
m6_214 -> m6_214  [color=darkseagreen4, key=1, label=ratio, style=dashed];
m6_215 -> m6_208  [color=blue, key=0, style=bold];
m6_2918 -> m6_2919  [key=0, style=solid];
m6_2919 -> m6_2920  [key=0, style=solid];
m6_2919 -> m6_145  [key=2, style=dotted];
m6_2919 -> m6_2924  [key=2, style=dotted];
m6_2920 -> m6_2921  [key=0, style=solid];
m6_2920 -> m6_665  [key=2, style=dotted];
m6_2920 -> m6_666  [key=2, style=dotted];
m6_2920 -> m6_2925  [key=2, style=dotted];
m6_2920 -> m6_2922  [color=darkseagreen4, key=1, label=dict, style=dashed];
m6_2921 -> m6_2922  [key=0, style=solid];
m6_2921 -> m6_77  [key=2, style=dotted];
m6_2922 -> m6_2923  [key=0, style=solid];
m6_2922 -> m6_77  [key=2, style=dotted];
m6_2923 -> m6_2918  [color=blue, key=0, style=bold];
m6_2600 -> m6_2601  [key=0, style=solid];
m6_2601 -> m6_2602  [key=0, style=solid];
m6_2601 -> m6_1934  [key=2, style=dotted];
m6_2602 -> m6_2600  [color=blue, key=0, style=bold];
m6_3190 -> m6_3191  [key=0, style=solid];
m6_3191 -> m6_3192  [key=0, style=solid];
m6_3191 -> m6_75  [key=2, style=dotted];
m6_3191 -> m6_665  [key=2, style=dotted];
m6_3191 -> m6_666  [key=2, style=dotted];
m6_3191 -> m6_2805  [key=2, style=dotted];
m6_3192 -> m6_3193  [key=0, style=solid];
m6_3192 -> m6_77  [key=2, style=dotted];
m6_3193 -> m6_3190  [color=blue, key=0, style=bold];
m6_3303 -> m6_3304  [key=0, style=solid];
m6_3304 -> m6_3305  [key=0, style=solid];
m6_3304 -> m6_218  [key=2, style=dotted];
m6_3305 -> m6_3306  [key=0, style=solid];
m6_3305 -> m6_77  [key=2, style=dotted];
m6_3305 -> m6_3305  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_3306 -> m6_3307  [key=0, style=solid];
m6_3306 -> m6_77  [key=2, style=dotted];
m6_3306 -> m6_3306  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_3307 -> m6_3303  [color=blue, key=0, style=bold];
m6_1621 -> m6_1622  [key=0, style=solid];
m6_1622 -> m6_1621  [color=blue, key=0, style=bold];
m6_424 -> m6_425  [key=0, style=solid];
m6_424 -> m6_424  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m6_425 -> m6_426  [key=0, style=solid];
m6_426 -> m6_427  [key=0, style=solid];
m6_426 -> m6_406  [key=2, style=dotted];
m6_426 -> m6_428  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_426 -> m6_429  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_427 -> m6_428  [key=0, style=solid];
m6_427 -> m6_77  [key=2, style=dotted];
m6_428 -> m6_429  [key=0, style=solid];
m6_428 -> m6_431  [key=2, style=dotted];
m6_428 -> m6_77  [key=2, style=dotted];
m6_429 -> m6_430  [key=0, style=solid];
m6_429 -> m6_77  [key=2, style=dotted];
m6_430 -> m6_424  [color=blue, key=0, style=bold];
m6_1039 -> m6_1040  [key=0, style=solid];
m6_1040 -> m6_1041  [key=0, style=solid];
m6_1040 -> m6_1043  [key=2, style=dotted];
m6_1040 -> m6_596  [key=2, style=dotted];
m6_1041 -> m6_1042  [key=0, style=solid];
m6_1042 -> m6_1039  [color=blue, key=0, style=bold];
m6_3516 -> m6_3517  [key=0, style=solid];
m6_3517 -> m6_3518  [key=0, style=solid];
m6_3517 -> m6_3521  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_3518 -> m6_3519  [key=0, style=solid];
m6_3518 -> m6_527  [key=2, style=dotted];
m6_3518 -> m6_3520  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_3519 -> m6_3516  [color=blue, key=0, style=bold];
m6_3696 -> m6_3697  [key=0, style=solid];
m6_3697 -> m6_3698  [key=0, style=solid];
m6_3697 -> m6_3707  [key=2, style=dotted];
m6_3697 -> m6_3699  [color=darkseagreen4, key=1, label=joe, style=dashed];
m6_3697 -> m6_3703  [color=darkseagreen4, key=1, label=joe, style=dashed];
m6_3697 -> m6_3704  [color=darkseagreen4, key=1, label=joe, style=dashed];
m6_3698 -> m6_3699  [key=0, style=solid];
m6_3699 -> m6_3700  [key=0, style=solid];
m6_3703 -> m6_3704  [key=0, style=solid];
m6_3704 -> m6_3705  [key=0, style=solid];
m6_3704 -> m6_227  [key=2, style=dotted];
m6_3700 -> m6_3701  [key=0, style=solid];
m6_3700 -> m6_2139  [key=2, style=dotted];
m6_3700 -> m6_3702  [color=darkseagreen4, key=1, label=mike, style=dashed];
m6_3700 -> m6_3703  [color=darkseagreen4, key=1, label=mike, style=dashed];
m6_3701 -> m6_3702  [key=0, style=solid];
m6_3702 -> m6_3703  [key=0, style=solid];
m6_3705 -> m6_3706  [key=0, style=solid];
m6_3705 -> m6_77  [key=2, style=dotted];
m6_3706 -> m6_3696  [color=blue, key=0, style=bold];
m6_996 -> m6_997  [key=0, style=solid];
m6_997 -> m6_998  [key=0, style=solid];
m6_997 -> m6_527  [key=2, style=dotted];
m6_997 -> m6_999  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_998 -> m6_996  [color=blue, key=0, style=bold];
m6_2418 -> m6_2419  [key=0, style=solid];
m6_2419 -> m6_2420  [key=0, style=solid];
m6_2420 -> m6_2418  [color=blue, key=0, style=bold];
m6_988 -> m6_989  [key=0, style=solid];
m6_989 -> m6_990  [key=0, style=solid];
m6_989 -> m6_527  [key=2, style=dotted];
m6_989 -> m6_991  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_990 -> m6_988  [color=blue, key=0, style=bold];
m6_3296 -> m6_3297  [key=0, style=solid];
m6_3297 -> m6_3298  [key=0, style=solid];
m6_3298 -> m6_3296  [color=blue, key=0, style=bold];
m6_2373 -> m6_2374  [key=0, style=solid];
m6_2374 -> m6_2375  [key=0, style=solid];
m6_2374 -> m6_1749  [key=2, style=dotted];
m6_2375 -> m6_2373  [color=blue, key=0, style=bold];
m6_2037 -> m6_2038  [key=0, style=solid];
m6_2037 -> m6_2039  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_2038 -> m6_2039  [key=0, style=solid];
m6_2039 -> m6_2040  [key=0, style=solid];
m6_2040 -> m6_2041  [key=0, style=solid];
m6_2041 -> m6_2037  [color=blue, key=0, style=bold];
m6_4079 -> m6_4080  [key=0, style=solid];
m6_4080 -> m6_4081  [key=0, style=solid];
m6_4080 -> m6_4082  [key=2, style=dotted];
m6_4081 -> m6_4079  [color=blue, key=0, style=bold];
m6_3034 -> m6_3035  [key=0, style=solid];
m6_3035 -> m6_3036  [key=0, style=solid];
m6_3035 -> m6_3042  [key=2, style=dotted];
m6_3035 -> m6_3037  [color=darkseagreen4, key=1, label=person, style=dashed];
m6_3035 -> m6_3038  [color=darkseagreen4, key=1, label=person, style=dashed];
m6_3035 -> m6_3040  [color=darkseagreen4, key=1, label=person, style=dashed];
m6_3036 -> m6_3037  [key=0, style=solid];
m6_3037 -> m6_3038  [key=0, style=solid];
m6_3038 -> m6_3039  [key=0, style=solid];
m6_3038 -> m6_217  [key=2, style=dotted];
m6_3040 -> m6_3041  [key=0, style=solid];
m6_3040 -> m6_77  [key=2, style=dotted];
m6_3039 -> m6_3040  [key=0, style=solid];
m6_3039 -> m6_218  [key=2, style=dotted];
m6_3041 -> m6_3034  [color=blue, key=0, style=bold];
m6_4 -> m6_5  [key=0, style=solid];
m6_4 -> m6_7  [color=crimson, key=0, style=bold];
m6_4 -> m6_8  [color=crimson, key=0, style=bold];
m6_5 -> m6_6  [key=0, style=solid];
m6_5 -> m6_8  [key=0, style=solid];
m6_7 -> m6_6  [key=0, style=solid];
m6_8 -> m6_9  [key=0, style=solid];
m6_6 -> m6_7  [key=0, style=solid];
m6_6 -> m6_9  [key=0, style=solid];
m6_9 -> m6_4  [color=blue, key=0, style=bold];
m6_4024 -> m6_4025  [key=0, style=solid];
m6_4025 -> m6_4026  [key=0, style=solid];
m6_4025 -> m6_4027  [color=darkseagreen4, key=1, label=samAccountName, style=dashed];
m6_4026 -> m6_4027  [key=0, style=solid];
m6_4026 -> m6_4029  [key=2, style=dotted];
m6_4027 -> m6_4028  [key=0, style=solid];
m6_4027 -> m6_4029  [key=2, style=dotted];
m6_4028 -> m6_4024  [color=blue, key=0, style=bold];
m6_1193 -> m6_1194  [key=0, style=solid];
m6_1194 -> m6_1195  [key=0, style=solid];
m6_1195 -> m6_1196  [key=0, style=solid];
m6_1195 -> m6_406  [key=2, style=dotted];
m6_1195 -> m6_1197  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m6_1195 -> m6_1198  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m6_1195 -> m6_1199  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m6_1195 -> m6_1200  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m6_1195 -> m6_1201  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m6_1196 -> m6_1197  [key=0, style=solid];
m6_1196 -> m6_77  [key=2, style=dotted];
m6_1197 -> m6_1198  [key=0, style=solid];
m6_1197 -> m6_596  [key=2, style=dotted];
m6_1197 -> m6_77  [key=2, style=dotted];
m6_1198 -> m6_1199  [key=0, style=solid];
m6_1198 -> m6_77  [key=2, style=dotted];
m6_1199 -> m6_1200  [key=0, style=solid];
m6_1199 -> m6_77  [key=2, style=dotted];
m6_1200 -> m6_1201  [key=0, style=solid];
m6_1200 -> m6_77  [key=2, style=dotted];
m6_1201 -> m6_1202  [key=0, style=solid];
m6_1201 -> m6_77  [key=2, style=dotted];
m6_1202 -> m6_1193  [color=blue, key=0, style=bold];
m6_3556 -> m6_3557  [key=0, style=solid];
m6_3557 -> m6_3558  [key=0, style=solid];
m6_3557 -> m6_3561  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_3558 -> m6_3559  [key=0, style=solid];
m6_3558 -> m6_527  [key=2, style=dotted];
m6_3558 -> m6_3560  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_3559 -> m6_3556  [color=blue, key=0, style=bold];
m6_397 -> m6_398  [key=0, style=solid];
m6_398 -> m6_399  [key=0, style=solid];
m6_398 -> m6_405  [key=2, style=dotted];
m6_398 -> m6_401  [color=darkseagreen4, key=1, label=store, style=dashed];
m6_398 -> m6_402  [color=darkseagreen4, key=1, label=store, style=dashed];
m6_399 -> m6_400  [key=0, style=solid];
m6_399 -> m6_217  [key=2, style=dotted];
m6_399 -> m6_403  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m6_401 -> m6_402  [key=0, style=solid];
m6_401 -> m6_77  [key=2, style=dotted];
m6_402 -> m6_403  [key=0, style=solid];
m6_402 -> m6_77  [key=2, style=dotted];
m6_400 -> m6_401  [key=0, style=solid];
m6_400 -> m6_406  [key=2, style=dotted];
m6_400 -> m6_402  [color=darkseagreen4, key=1, label=deserializedStore, style=dashed];
m6_403 -> m6_404  [key=0, style=solid];
m6_403 -> m6_343  [key=2, style=dotted];
m6_404 -> m6_397  [color=blue, key=0, style=bold];
m6_3219 -> m6_3220  [key=0, style=solid];
m6_3220 -> m6_3221  [key=0, style=solid];
m6_3220 -> m6_3224  [key=2, style=dotted];
m6_3220 -> m6_3  [key=2, style=dotted];
m6_3220 -> m6_3225  [key=2, style=dotted];
m6_3221 -> m6_3222  [key=0, style=solid];
m6_3221 -> m6_227  [key=2, style=dotted];
m6_3222 -> m6_3223  [key=0, style=solid];
m6_3222 -> m6_77  [key=2, style=dotted];
m6_3223 -> m6_3219  [color=blue, key=0, style=bold];
m6_2450 -> m6_2451  [key=0, style=solid];
m6_2451 -> m6_2452  [key=0, style=solid];
m6_2451 -> m6_218  [key=2, style=dotted];
m6_2451 -> m6_2453  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_2451 -> m6_2454  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_2452 -> m6_2453  [key=0, style=solid];
m6_2452 -> m6_77  [key=2, style=dotted];
m6_2453 -> m6_2454  [key=0, style=solid];
m6_2453 -> m6_77  [key=2, style=dotted];
m6_2454 -> m6_2455  [key=0, style=solid];
m6_2454 -> m6_77  [key=2, style=dotted];
m6_2455 -> m6_2450  [color=blue, key=0, style=bold];
m6_706 -> m6_707  [key=0, style=solid];
m6_707 -> m6_708  [key=0, style=solid];
m6_707 -> m6_722  [key=2, style=dotted];
m6_707 -> m6_709  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m6_707 -> m6_710  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m6_707 -> m6_711  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m6_707 -> m6_712  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m6_708 -> m6_709  [key=0, style=solid];
m6_709 -> m6_710  [key=0, style=solid];
m6_709 -> m6_146  [key=2, style=dotted];
m6_710 -> m6_711  [key=0, style=solid];
m6_710 -> m6_146  [key=2, style=dotted];
m6_711 -> m6_712  [key=0, style=solid];
m6_711 -> m6_146  [key=2, style=dotted];
m6_712 -> m6_713  [key=0, style=solid];
m6_712 -> m6_217  [key=2, style=dotted];
m6_713 -> m6_714  [key=0, style=solid];
m6_713 -> m6_218  [key=2, style=dotted];
m6_713 -> m6_715  [color=darkseagreen4, key=1, label=wibbleOut, style=dashed];
m6_713 -> m6_716  [color=darkseagreen4, key=1, label=wibbleOut, style=dashed];
m6_713 -> m6_717  [color=darkseagreen4, key=1, label=wibbleOut, style=dashed];
m6_713 -> m6_718  [color=darkseagreen4, key=1, label=wibbleOut, style=dashed];
m6_713 -> m6_719  [color=darkseagreen4, key=1, label=wibbleOut, style=dashed];
m6_713 -> m6_720  [color=darkseagreen4, key=1, label=wibbleOut, style=dashed];
m6_714 -> m6_715  [key=0, style=solid];
m6_714 -> m6_77  [key=2, style=dotted];
m6_715 -> m6_716  [key=0, style=solid];
m6_715 -> m6_77  [key=2, style=dotted];
m6_716 -> m6_717  [key=0, style=solid];
m6_716 -> m6_77  [key=2, style=dotted];
m6_717 -> m6_718  [key=0, style=solid];
m6_717 -> m6_77  [key=2, style=dotted];
m6_718 -> m6_719  [key=0, style=solid];
m6_718 -> m6_77  [key=2, style=dotted];
m6_719 -> m6_720  [key=0, style=solid];
m6_719 -> m6_77  [key=2, style=dotted];
m6_719 -> m6_316  [color=darkorchid, key=3, label="Local variable int count", style=bold];
m6_720 -> m6_721  [key=0, style=solid];
m6_720 -> m6_77  [key=2, style=dotted];
m6_721 -> m6_706  [color=blue, key=0, style=bold];
m6_1783 -> m6_1784  [key=0, style=solid];
m6_1784 -> m6_1785  [key=0, style=solid];
m6_1784 -> m6_1043  [key=2, style=dotted];
m6_1784 -> m6_1786  [color=darkseagreen4, key=1, label=person, style=dashed];
m6_1784 -> m6_1787  [color=darkseagreen4, key=1, label=person, style=dashed];
m6_1784 -> m6_1788  [color=darkseagreen4, key=1, label=person, style=dashed];
m6_1784 -> m6_1792  [color=darkseagreen4, key=1, label=person, style=dashed];
m6_1785 -> m6_1786  [key=0, style=solid];
m6_1785 -> m6_596  [key=2, style=dotted];
m6_1786 -> m6_1787  [key=0, style=solid];
m6_1787 -> m6_1788  [key=0, style=solid];
m6_1788 -> m6_1789  [key=0, style=solid];
m6_1792 -> m6_1793  [key=0, style=solid];
m6_1792 -> m6_1687  [key=2, style=dotted];
m6_1789 -> m6_1790  [key=0, style=solid];
m6_1789 -> m6_607  [key=2, style=dotted];
m6_1789 -> m6_608  [key=2, style=dotted];
m6_1789 -> m6_1792  [color=darkseagreen4, key=1, label=dateTimeOffset, style=dashed];
m6_1789 -> m6_1798  [color=darkseagreen4, key=1, label=dateTimeOffset, style=dashed];
m6_1790 -> m6_1791  [key=0, style=solid];
m6_1798 -> m6_1799  [key=0, style=solid];
m6_1798 -> m6_77  [key=2, style=dotted];
m6_1791 -> m6_1792  [key=0, style=solid];
m6_1791 -> m6_1794  [color=darkseagreen4, key=1, label=dateTimeOffsetText, style=dashed];
m6_1794 -> m6_1795  [key=0, style=solid];
m6_1794 -> m6_77  [key=2, style=dotted];
m6_1793 -> m6_1794  [key=0, style=solid];
m6_1793 -> m6_145  [key=2, style=dotted];
m6_1793 -> m6_1110  [key=2, style=dotted];
m6_1793 -> m6_1795  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1795 -> m6_1796  [key=0, style=solid];
m6_1795 -> m6_218  [key=2, style=dotted];
m6_1795 -> m6_1797  [color=darkseagreen4, key=1, label=o2, style=dashed];
m6_1795 -> m6_1798  [color=darkseagreen4, key=1, label=o2, style=dashed];
m6_1795 -> m6_1799  [color=darkseagreen4, key=1, label=o2, style=dashed];
m6_1795 -> m6_1800  [color=darkseagreen4, key=1, label=o2, style=dashed];
m6_1795 -> m6_1801  [color=darkseagreen4, key=1, label=o2, style=dashed];
m6_1796 -> m6_1797  [key=0, style=solid];
m6_1796 -> m6_77  [key=2, style=dotted];
m6_1797 -> m6_1798  [key=0, style=solid];
m6_1797 -> m6_77  [key=2, style=dotted];
m6_1799 -> m6_1800  [key=0, style=solid];
m6_1799 -> m6_77  [key=2, style=dotted];
m6_1800 -> m6_1801  [key=0, style=solid];
m6_1800 -> m6_77  [key=2, style=dotted];
m6_1801 -> m6_1802  [key=0, style=solid];
m6_1801 -> m6_77  [key=2, style=dotted];
m6_1802 -> m6_1783  [color=blue, key=0, style=bold];
m6_3610 -> m6_3611  [key=0, style=solid];
m6_3611 -> m6_3612  [key=0, style=solid];
m6_3611 -> m6_3615  [key=2, style=dotted];
m6_3612 -> m6_3613  [key=0, style=solid];
m6_3612 -> m6_145  [key=2, style=dotted];
m6_3612 -> m6_1110  [key=2, style=dotted];
m6_3613 -> m6_3614  [key=0, style=solid];
m6_3613 -> m6_77  [key=2, style=dotted];
m6_3614 -> m6_3610  [color=blue, key=0, style=bold];
m6_3876 -> m6_3877  [key=0, style=solid];
m6_3877 -> m6_3878  [key=0, style=solid];
m6_3878 -> m6_3876  [color=blue, key=0, style=bold];
m6_866 -> m6_867  [key=0, style=solid];
m6_867 -> m6_868  [key=0, style=solid];
m6_867 -> m6_835  [key=2, style=dotted];
m6_867 -> m6_872  [color=darkseagreen4, key=1, label=testDate, style=dashed];
m6_867 -> m6_873  [color=darkseagreen4, key=1, label=testDate, style=dashed];
m6_868 -> m6_869  [key=0, style=solid];
m6_868 -> m6_836  [key=2, style=dotted];
m6_872 -> m6_873  [key=0, style=solid];
m6_872 -> m6_77  [key=2, style=dotted];
m6_873 -> m6_874  [key=0, style=solid];
m6_873 -> m6_77  [key=2, style=dotted];
m6_869 -> m6_870  [key=0, style=solid];
m6_869 -> m6_875  [key=2, style=dotted];
m6_869 -> m6_824  [key=2, style=dotted];
m6_869 -> m6_871  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_870 -> m6_871  [key=0, style=solid];
m6_870 -> m6_77  [key=2, style=dotted];
m6_871 -> m6_872  [key=0, style=solid];
m6_871 -> m6_875  [key=2, style=dotted];
m6_871 -> m6_825  [key=2, style=dotted];
m6_871 -> m6_873  [color=darkseagreen4, key=1, label=m2, style=dashed];
m6_874 -> m6_866  [color=blue, key=0, style=bold];
m6_2899 -> m6_2900  [key=0, style=solid];
m6_2900 -> m6_2901  [key=0, style=solid];
m6_2901 -> m6_2902  [key=0, style=solid];
m6_2901 -> m6_218  [key=2, style=dotted];
m6_2902 -> m6_2903  [key=0, style=solid];
m6_2902 -> m6_77  [key=2, style=dotted];
m6_2903 -> m6_2904  [key=0, style=solid];
m6_2904 -> m6_2905  [key=0, style=solid];
m6_2904 -> m6_218  [key=2, style=dotted];
m6_2905 -> m6_2906  [key=0, style=solid];
m6_2905 -> m6_751  [key=2, style=dotted];
m6_2905 -> m6_77  [key=2, style=dotted];
m6_2906 -> m6_2899  [color=blue, key=0, style=bold];
m6_4061 -> m6_4062  [key=0, style=solid];
m6_4062 -> m6_4063  [key=0, style=solid];
m6_4063 -> m6_4061  [color=blue, key=0, style=bold];
m6_1233 -> m6_1234  [key=0, style=solid];
m6_1234 -> m6_1235  [key=0, style=solid];
m6_1235 -> m6_1236  [key=0, style=solid];
m6_1235 -> m6_218  [key=2, style=dotted];
m6_1235 -> m6_1237  [color=darkseagreen4, key=1, label=content, style=dashed];
m6_1235 -> m6_1238  [color=darkseagreen4, key=1, label=content, style=dashed];
m6_1235 -> m6_1239  [color=darkseagreen4, key=1, label=content, style=dashed];
m6_1236 -> m6_1237  [key=0, style=solid];
m6_1236 -> m6_77  [key=2, style=dotted];
m6_1237 -> m6_1238  [key=0, style=solid];
m6_1237 -> m6_77  [key=2, style=dotted];
m6_1238 -> m6_1239  [key=0, style=solid];
m6_1238 -> m6_77  [key=2, style=dotted];
m6_1239 -> m6_1240  [key=0, style=solid];
m6_1239 -> m6_77  [key=2, style=dotted];
m6_1240 -> m6_1233  [color=blue, key=0, style=bold];
m6_3810 -> m6_3811  [key=0, style=solid];
m6_391 -> m6_392  [key=0, style=solid];
m6_394 -> m6_395  [key=0, style=solid];
m6_392 -> m6_393  [key=0, style=solid];
m6_393 -> m6_391  [color=blue, key=0, style=bold];
m6_395 -> m6_396  [key=0, style=solid];
m6_396 -> m6_394  [color=blue, key=0, style=bold];
m6_528 -> m6_529  [key=0, style=solid];
m6_529 -> m6_530  [key=0, style=solid];
m6_529 -> m6_531  [key=2, style=dotted];
m6_529 -> m6_217  [key=2, style=dotted];
m6_530 -> m6_528  [color=blue, key=0, style=bold];
m6_583 -> m6_584  [key=0, style=solid];
m6_583 -> m6_218  [key=2, style=dotted];
m6_582 -> m6_583  [key=0, style=solid];
m6_584 -> m6_582  [color=blue, key=0, style=bold];
m6_854 -> m6_855  [key=0, style=solid];
m6_854 -> m6_145  [key=2, style=dotted];
m6_854 -> m6_856  [key=2, style=dotted];
m6_853 -> m6_854  [key=0, style=solid];
m6_855 -> m6_853  [color=blue, key=0, style=bold];
m6_898 -> m6_899  [key=0, style=solid];
m6_899 -> m6_900  [key=0, style=solid];
m6_899 -> m6_902  [key=2, style=dotted];
m6_900 -> m6_901  [key=0, style=solid];
m6_900 -> m6_217  [key=2, style=dotted];
m6_901 -> m6_898  [color=blue, key=0, style=bold];
m6_984 -> m6_985  [key=0, style=solid];
m6_985 -> m6_986  [key=0, style=solid];
m6_986 -> m6_987  [key=0, style=solid];
m6_986 -> m6_218  [key=2, style=dotted];
m6_987 -> m6_984  [color=blue, key=0, style=bold];
m6_991 -> m6_992  [key=0, style=solid];
m6_992 -> m6_993  [key=0, style=solid];
m6_992 -> m6_973  [key=2, style=dotted];
m6_992 -> m6_596  [key=2, style=dotted];
m6_993 -> m6_994  [key=0, style=solid];
m6_993 -> m6_217  [key=2, style=dotted];
m6_994 -> m6_995  [key=0, style=solid];
m6_994 -> m6_343  [key=2, style=dotted];
m6_995 -> m6_991  [color=blue, key=0, style=bold];
m6_999 -> m6_1000  [key=0, style=solid];
m6_1000 -> m6_1001  [key=0, style=solid];
m6_1001 -> m6_1002  [key=0, style=solid];
m6_1001 -> m6_218  [key=2, style=dotted];
m6_1002 -> m6_999  [color=blue, key=0, style=bold];
m6_1037 -> m6_1038  [key=0, style=solid];
m6_1037 -> m6_406  [key=2, style=dotted];
m6_1036 -> m6_1037  [key=0, style=solid];
m6_1038 -> m6_1036  [color=blue, key=0, style=bold];
m6_1123 -> m6_1124  [key=0, style=solid];
m6_1124 -> m6_1125  [key=0, style=solid];
m6_1124 -> m6_1109  [key=2, style=dotted];
m6_1124 -> m6_1126  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_1125 -> m6_1126  [key=0, style=solid];
m6_1126 -> m6_1127  [key=0, style=solid];
m6_1126 -> m6_145  [key=2, style=dotted];
m6_1126 -> m6_1110  [key=2, style=dotted];
m6_1127 -> m6_1123  [color=blue, key=0, style=bold];
m6_1309 -> m6_1310  [key=0, style=solid];
m6_1309 -> m6_218  [key=2, style=dotted];
m6_1308 -> m6_1309  [key=0, style=solid];
m6_1310 -> m6_1308  [color=blue, key=0, style=bold];
m6_1336 -> m6_1337  [key=0, style=solid];
m6_1336 -> m6_218  [key=2, style=dotted];
m6_1335 -> m6_1336  [key=0, style=solid];
m6_1337 -> m6_1335  [color=blue, key=0, style=bold];
m6_1343 -> m6_1344  [key=0, style=solid];
m6_1343 -> m6_218  [key=2, style=dotted];
m6_1342 -> m6_1343  [key=0, style=solid];
m6_1344 -> m6_1342  [color=blue, key=0, style=bold];
m6_1350 -> m6_1351  [key=0, style=solid];
m6_1350 -> m6_218  [key=2, style=dotted];
m6_1349 -> m6_1350  [key=0, style=solid];
m6_1351 -> m6_1349  [color=blue, key=0, style=bold];
m6_1357 -> m6_1358  [key=0, style=solid];
m6_1357 -> m6_218  [key=2, style=dotted];
m6_1356 -> m6_1357  [key=0, style=solid];
m6_1358 -> m6_1356  [color=blue, key=0, style=bold];
m6_1364 -> m6_1365  [key=0, style=solid];
m6_1364 -> m6_218  [key=2, style=dotted];
m6_1363 -> m6_1364  [key=0, style=solid];
m6_1365 -> m6_1363  [color=blue, key=0, style=bold];
m6_1371 -> m6_1372  [key=0, style=solid];
m6_1371 -> m6_218  [key=2, style=dotted];
m6_1370 -> m6_1371  [key=0, style=solid];
m6_1372 -> m6_1370  [color=blue, key=0, style=bold];
m6_1378 -> m6_1379  [key=0, style=solid];
m6_1378 -> m6_218  [key=2, style=dotted];
m6_1377 -> m6_1378  [key=0, style=solid];
m6_1379 -> m6_1377  [color=blue, key=0, style=bold];
m6_1385 -> m6_1386  [key=0, style=solid];
m6_1385 -> m6_218  [key=2, style=dotted];
m6_1384 -> m6_1385  [key=0, style=solid];
m6_1386 -> m6_1384  [color=blue, key=0, style=bold];
m6_1392 -> m6_1393  [key=0, style=solid];
m6_1392 -> m6_218  [key=2, style=dotted];
m6_1391 -> m6_1392  [key=0, style=solid];
m6_1393 -> m6_1391  [color=blue, key=0, style=bold];
m6_1399 -> m6_1400  [key=0, style=solid];
m6_1399 -> m6_1043  [key=2, style=dotted];
m6_1399 -> m6_1401  [key=2, style=dotted];
m6_1398 -> m6_1399  [key=0, style=solid];
m6_1400 -> m6_1398  [color=blue, key=0, style=bold];
m6_1407 -> m6_1408  [key=0, style=solid];
m6_1407 -> m6_3  [key=2, style=dotted];
m6_1407 -> m6_1401  [key=2, style=dotted];
m6_1406 -> m6_1407  [key=0, style=solid];
m6_1408 -> m6_1406  [color=blue, key=0, style=bold];
m6_1417 -> m6_1418  [key=0, style=solid];
m6_1418 -> m6_1419  [key=0, style=solid];
m6_1418 -> m6_380  [key=2, style=dotted];
m6_1418 -> m6_145  [key=2, style=dotted];
m6_1418 -> m6_1420  [key=2, style=dotted];
m6_1418 -> m6_600  [key=2, style=dotted];
m6_1419 -> m6_1417  [color=blue, key=0, style=bold];
m6_1424 -> m6_1425  [key=0, style=solid];
m6_1425 -> m6_1426  [key=0, style=solid];
m6_1425 -> m6_145  [key=2, style=dotted];
m6_1425 -> m6_1420  [key=2, style=dotted];
m6_1425 -> m6_856  [key=2, style=dotted];
m6_1426 -> m6_1424  [color=blue, key=0, style=bold];
m6_1430 -> m6_1431  [key=0, style=solid];
m6_1431 -> m6_1432  [key=0, style=solid];
m6_1431 -> m6_145  [key=2, style=dotted];
m6_1431 -> m6_1420  [key=2, style=dotted];
m6_1431 -> m6_856  [key=2, style=dotted];
m6_1432 -> m6_1430  [color=blue, key=0, style=bold];
m6_1436 -> m6_1437  [key=0, style=solid];
m6_1437 -> m6_1438  [key=0, style=solid];
m6_1437 -> m6_145  [key=2, style=dotted];
m6_1437 -> m6_1420  [key=2, style=dotted];
m6_1437 -> m6_856  [key=2, style=dotted];
m6_1438 -> m6_1436  [color=blue, key=0, style=bold];
m6_1500 -> m6_1501  [key=0, style=solid];
m6_1501 -> m6_1502  [key=0, style=solid];
m6_1502 -> m6_1503  [key=0, style=solid];
m6_1502 -> m6_218  [key=2, style=dotted];
m6_1503 -> m6_1500  [color=blue, key=0, style=bold];
m6_1550 -> m6_1551  [key=0, style=solid];
m6_1551 -> m6_1552  [key=0, style=solid];
m6_1552 -> m6_1550  [color=blue, key=0, style=bold];
m6_1587 -> m6_1588  [key=0, style=solid];
m6_1587 -> m6_145  [key=2, style=dotted];
m6_1587 -> m6_856  [key=2, style=dotted];
m6_1586 -> m6_1587  [key=0, style=solid];
m6_1588 -> m6_1586  [color=blue, key=0, style=bold];
m6_2064 -> m6_2065  [key=0, style=solid];
m6_2064 -> m6_218  [key=2, style=dotted];
m6_2063 -> m6_2064  [key=0, style=solid];
m6_2065 -> m6_2063  [color=blue, key=0, style=bold];
m6_2069 -> m6_2070  [key=0, style=solid];
m6_2070 -> m6_2071  [key=0, style=solid];
m6_2070 -> m6_258  [key=2, style=dotted];
m6_2070 -> m6_2072  [color=darkseagreen4, key=1, label=reference, style=dashed];
m6_2070 -> m6_2076  [color=darkseagreen4, key=1, label=reference, style=dashed];
m6_2071 -> m6_2072  [key=0, style=solid];
m6_2071 -> m6_623  [key=2, style=dotted];
m6_2072 -> m6_2073  [key=0, style=solid];
m6_2072 -> m6_623  [key=2, style=dotted];
m6_2076 -> m6_2077  [key=0, style=solid];
m6_2076 -> m6_623  [key=2, style=dotted];
m6_2073 -> m6_2074  [key=0, style=solid];
m6_2073 -> m6_258  [key=2, style=dotted];
m6_2073 -> m6_2075  [color=darkseagreen4, key=1, label=child, style=dashed];
m6_2073 -> m6_2076  [color=darkseagreen4, key=1, label=child, style=dashed];
m6_2073 -> m6_2077  [color=darkseagreen4, key=1, label=child, style=dashed];
m6_2074 -> m6_2075  [key=0, style=solid];
m6_2074 -> m6_623  [key=2, style=dotted];
m6_2075 -> m6_2076  [key=0, style=solid];
m6_2075 -> m6_623  [key=2, style=dotted];
m6_2077 -> m6_2078  [key=0, style=solid];
m6_2077 -> m6_227  [key=2, style=dotted];
m6_2078 -> m6_2079  [key=0, style=solid];
m6_2078 -> m6_218  [key=2, style=dotted];
m6_2079 -> m6_2069  [color=blue, key=0, style=bold];
m6_2252 -> m6_2253  [key=0, style=solid];
m6_2252 -> m6_218  [key=2, style=dotted];
m6_2251 -> m6_2252  [key=0, style=solid];
m6_2253 -> m6_2251  [color=blue, key=0, style=bold];
m6_2482 -> m6_2483  [key=0, style=solid];
m6_2483 -> m6_2484  [key=0, style=solid];
m6_2483 -> m6_406  [key=2, style=dotted];
m6_2484 -> m6_2482  [color=blue, key=0, style=bold];
m6_2769 -> m6_2770  [key=0, style=solid];
m6_2769 -> m6_218  [key=2, style=dotted];
m6_2768 -> m6_2769  [key=0, style=solid];
m6_2770 -> m6_2768  [color=blue, key=0, style=bold];
m6_2855 -> m6_2856  [key=0, style=solid];
m6_2855 -> m6_218  [key=2, style=dotted];
m6_2854 -> m6_2855  [key=0, style=solid];
m6_2856 -> m6_2854  [color=blue, key=0, style=bold];
m6_2869 -> m6_2870  [key=0, style=solid];
m6_2869 -> m6_218  [key=2, style=dotted];
m6_2868 -> m6_2869  [key=0, style=solid];
m6_2870 -> m6_2868  [color=blue, key=0, style=bold];
m6_2888 -> m6_2889  [key=0, style=solid];
m6_2889 -> m6_2890  [key=0, style=solid];
m6_2890 -> m6_2891  [key=0, style=solid];
m6_2890 -> m6_218  [key=2, style=dotted];
m6_2891 -> m6_2888  [color=blue, key=0, style=bold];
m6_2895 -> m6_2896  [key=0, style=solid];
m6_2896 -> m6_2897  [key=0, style=solid];
m6_2897 -> m6_2898  [key=0, style=solid];
m6_2897 -> m6_218  [key=2, style=dotted];
m6_2898 -> m6_2895  [color=blue, key=0, style=bold];
m6_2971 -> m6_2972  [key=0, style=solid];
m6_2972 -> m6_2973  [key=0, style=solid];
m6_2972 -> m6_218  [key=2, style=dotted];
m6_2973 -> m6_2971  [color=blue, key=0, style=bold];
m6_2977 -> m6_2978  [key=0, style=solid];
m6_2978 -> m6_2979  [key=0, style=solid];
m6_2978 -> m6_218  [key=2, style=dotted];
m6_2979 -> m6_2977  [color=blue, key=0, style=bold];
m6_2983 -> m6_2984  [key=0, style=solid];
m6_2984 -> m6_2985  [key=0, style=solid];
m6_2984 -> m6_218  [key=2, style=dotted];
m6_2985 -> m6_2983  [color=blue, key=0, style=bold];
m6_2993 -> m6_2994  [key=0, style=solid];
m6_2994 -> m6_2995  [key=0, style=solid];
m6_2994 -> m6_218  [key=2, style=dotted];
m6_2995 -> m6_2993  [color=blue, key=0, style=bold];
m6_2999 -> m6_3000  [key=0, style=solid];
m6_3000 -> m6_3001  [key=0, style=solid];
m6_3000 -> m6_501  [key=2, style=dotted];
m6_3001 -> m6_2999  [color=blue, key=0, style=bold];
m6_3107 -> m6_3108  [key=0, style=solid];
m6_3107 -> m6_146  [key=2, style=dotted];
m6_3108 -> m6_3109  [key=0, style=solid];
m6_3106 -> m6_3107  [key=0, style=solid];
m6_3106 -> m6_3108  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m6_3109 -> m6_3106  [color=blue, key=0, style=bold];
m6_3122 -> m6_3123  [key=0, style=solid];
m6_3122 -> m6_146  [key=2, style=dotted];
m6_3123 -> m6_3124  [key=0, style=solid];
m6_3121 -> m6_3122  [key=0, style=solid];
m6_3121 -> m6_3123  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m6_3124 -> m6_3121  [color=blue, key=0, style=bold];
m6_3137 -> m6_3138  [key=0, style=solid];
m6_3137 -> m6_146  [key=2, style=dotted];
m6_3138 -> m6_3139  [key=0, style=solid];
m6_3136 -> m6_3137  [key=0, style=solid];
m6_3136 -> m6_3138  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m6_3139 -> m6_3136  [color=blue, key=0, style=bold];
m6_3253 -> m6_3254  [key=0, style=solid];
m6_3253 -> m6_665  [key=2, style=dotted];
m6_3253 -> m6_666  [key=2, style=dotted];
m6_3253 -> m6_2925  [key=2, style=dotted];
m6_3252 -> m6_3253  [key=0, style=solid];
m6_3254 -> m6_3252  [color=blue, key=0, style=bold];
m6_3265 -> m6_3266  [key=0, style=solid];
m6_3266 -> m6_3267  [key=0, style=solid];
m6_3266 -> m6_3269  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_3267 -> m6_3268  [key=0, style=solid];
m6_3267 -> m6_75  [key=2, style=dotted];
m6_3267 -> m6_3272  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_3269 -> m6_3270  [key=0, style=solid];
m6_3269 -> m6_665  [key=2, style=dotted];
m6_3269 -> m6_666  [key=2, style=dotted];
m6_3269 -> m6_3271  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_3269 -> m6_3272  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_3268 -> m6_3269  [key=0, style=solid];
m6_3272 -> m6_3273  [key=0, style=solid];
m6_3272 -> m6_667  [key=2, style=dotted];
m6_3270 -> m6_3271  [key=0, style=solid];
m6_3270 -> m6_3274  [key=2, style=dotted];
m6_3271 -> m6_3272  [key=0, style=solid];
m6_3271 -> m6_3274  [key=2, style=dotted];
m6_3273 -> m6_3265  [color=blue, key=0, style=bold];
m6_3344 -> m6_3345  [key=0, style=solid];
m6_3344 -> m6_218  [key=2, style=dotted];
m6_3343 -> m6_3344  [key=0, style=solid];
m6_3345 -> m6_3343  [color=blue, key=0, style=bold];
m6_3389 -> m6_3390  [key=0, style=solid];
m6_3389 -> m6_218  [key=2, style=dotted];
m6_3389 -> m6_3385  [color=darkseagreen4, key=1, label=obj, style=dashed];
m6_3388 -> m6_3389  [key=0, style=solid];
m6_3390 -> m6_3388  [color=blue, key=0, style=bold];
m6_3487 -> m6_3488  [key=0, style=solid];
m6_3487 -> m6_218  [key=2, style=dotted];
m6_3486 -> m6_3487  [key=0, style=solid];
m6_3488 -> m6_3486  [color=blue, key=0, style=bold];
m6_3494 -> m6_3495  [key=0, style=solid];
m6_3494 -> m6_218  [key=2, style=dotted];
m6_3493 -> m6_3494  [key=0, style=solid];
m6_3495 -> m6_3493  [color=blue, key=0, style=bold];
m6_3514 -> m6_3515  [key=0, style=solid];
m6_3514 -> m6_218  [key=2, style=dotted];
m6_3513 -> m6_3514  [key=0, style=solid];
m6_3515 -> m6_3513  [color=blue, key=0, style=bold];
m6_3521 -> m6_3522  [key=0, style=solid];
m6_3521 -> m6_218  [key=2, style=dotted];
m6_3520 -> m6_3521  [key=0, style=solid];
m6_3522 -> m6_3520  [color=blue, key=0, style=bold];
m6_3528 -> m6_3529  [key=0, style=solid];
m6_3528 -> m6_218  [key=2, style=dotted];
m6_3527 -> m6_3528  [key=0, style=solid];
m6_3529 -> m6_3527  [color=blue, key=0, style=bold];
m6_3554 -> m6_3555  [key=0, style=solid];
m6_3554 -> m6_218  [key=2, style=dotted];
m6_3553 -> m6_3554  [key=0, style=solid];
m6_3555 -> m6_3553  [color=blue, key=0, style=bold];
m6_3561 -> m6_3562  [key=0, style=solid];
m6_3561 -> m6_218  [key=2, style=dotted];
m6_3560 -> m6_3561  [key=0, style=solid];
m6_3562 -> m6_3560  [color=blue, key=0, style=bold];
m6_3654 -> m6_3655  [key=0, style=solid];
m6_3654 -> m6_218  [key=2, style=dotted];
m6_3653 -> m6_3654  [key=0, style=solid];
m6_3655 -> m6_3653  [color=blue, key=0, style=bold];
m6_3811 -> m6_3812  [key=0, style=solid];
m6_3811 -> m6_218  [key=2, style=dotted];
m6_3812 -> m6_3810  [color=blue, key=0, style=bold];
m6_1952 -> m6_1953  [key=0, style=solid];
m6_1953 -> m6_1954  [key=0, style=solid];
m6_1953 -> m6_1957  [color=darkseagreen4, key=1, label=s, style=dashed];
m6_1953 -> m6_1960  [color=darkseagreen4, key=1, label=s, style=dashed];
m6_1954 -> m6_1955  [key=0, style=solid];
m6_1954 -> m6_217  [key=2, style=dotted];
m6_1957 -> m6_1958  [key=0, style=solid];
m6_1957 -> m6_623  [key=2, style=dotted];
m6_1960 -> m6_1961  [key=0, style=solid];
m6_1960 -> m6_623  [key=2, style=dotted];
m6_1955 -> m6_1956  [key=0, style=solid];
m6_1955 -> m6_77  [key=2, style=dotted];
m6_1956 -> m6_1957  [key=0, style=solid];
m6_1956 -> m6_258  [key=2, style=dotted];
m6_1956 -> m6_1958  [color=darkseagreen4, key=1, label=d1, style=dashed];
m6_1958 -> m6_1959  [key=0, style=solid];
m6_1958 -> m6_217  [key=2, style=dotted];
m6_1958 -> m6_77  [key=2, style=dotted];
m6_1959 -> m6_1960  [key=0, style=solid];
m6_1959 -> m6_258  [key=2, style=dotted];
m6_1959 -> m6_1961  [color=darkseagreen4, key=1, label=d2, style=dashed];
m6_1961 -> m6_1962  [key=0, style=solid];
m6_1961 -> m6_217  [key=2, style=dotted];
m6_1961 -> m6_77  [key=2, style=dotted];
m6_1962 -> m6_1952  [color=blue, key=0, style=bold];
m6_3352 -> m6_3353  [key=0, style=solid];
m6_3353 -> m6_3354  [key=0, style=solid];
m6_3354 -> m6_3355  [key=0, style=solid];
m6_3354 -> m6_3  [key=2, style=dotted];
m6_3354 -> m6_3356  [color=darkseagreen4, key=1, label=d, style=dashed];
m6_3354 -> m6_3357  [color=darkseagreen4, key=1, label=d, style=dashed];
m6_3355 -> m6_3356  [key=0, style=solid];
m6_3355 -> m6_217  [key=2, style=dotted];
m6_3356 -> m6_3357  [key=0, style=solid];
m6_3356 -> m6_145  [key=2, style=dotted];
m6_3356 -> m6_600  [key=2, style=dotted];
m6_3357 -> m6_3358  [key=0, style=solid];
m6_3357 -> m6_145  [key=2, style=dotted];
m6_3357 -> m6_600  [key=2, style=dotted];
m6_3358 -> m6_3359  [key=0, style=solid];
m6_3358 -> m6_77  [key=2, style=dotted];
m6_3359 -> m6_3352  [color=blue, key=0, style=bold];
m6_3719 -> m6_3952  [key=0, style=solid];
m6_3952 -> m6_3953  [key=0, style=solid];
m6_3952 -> m6_3954  [key=2, style=dotted];
m6_3952 -> m6_3955  [key=2, style=dotted];
m6_3952 -> m6_3956  [key=2, style=dotted];
m6_3952 -> m6_3952  [color=darkseagreen4, key=1, label=answer, style=dashed];
m6_3953 -> m6_3719  [color=blue, key=0, style=bold];
m6_3315 -> m6_3316  [key=0, style=solid];
m6_3316 -> m6_3317  [key=0, style=solid];
m6_3316 -> m6_3318  [key=2, style=dotted];
m6_3317 -> m6_3315  [color=blue, key=0, style=bold];
m6_3896 -> m6_3897  [key=0, style=solid];
m6_3897 -> m6_3898  [key=0, style=solid];
m6_3898 -> m6_3896  [color=blue, key=0, style=bold];
m6_876 -> m6_877  [key=0, style=solid];
m6_877 -> m6_878  [key=0, style=solid];
m6_877 -> m6_882  [key=2, style=dotted];
m6_877 -> m6_883  [key=2, style=dotted];
m6_878 -> m6_879  [key=0, style=solid];
m6_878 -> m6_836  [key=2, style=dotted];
m6_879 -> m6_880  [key=0, style=solid];
m6_879 -> m6_227  [key=2, style=dotted];
m6_880 -> m6_881  [key=0, style=solid];
m6_880 -> m6_343  [key=2, style=dotted];
m6_881 -> m6_876  [color=blue, key=0, style=bold];
m6_3745 -> m6_3746  [key=0, style=solid];
m6_3746 -> m6_3747  [key=0, style=solid];
m6_3746 -> m6_218  [key=2, style=dotted];
m6_3746 -> m6_3748  [color=darkseagreen4, key=1, label=list, style=dashed];
m6_3746 -> m6_3749  [color=darkseagreen4, key=1, label=list, style=dashed];
m6_3746 -> m6_3750  [color=darkseagreen4, key=1, label=list, style=dashed];
m6_3747 -> m6_3748  [key=0, style=solid];
m6_3747 -> m6_77  [key=2, style=dotted];
m6_3748 -> m6_3749  [key=0, style=solid];
m6_3748 -> m6_77  [key=2, style=dotted];
m6_3749 -> m6_3750  [key=0, style=solid];
m6_3749 -> m6_77  [key=2, style=dotted];
m6_3750 -> m6_3751  [key=0, style=solid];
m6_3750 -> m6_77  [key=2, style=dotted];
m6_3751 -> m6_3745  [color=blue, key=0, style=bold];
m6_1427 -> m6_1428  [key=0, style=solid];
m6_1428 -> m6_1429  [key=0, style=solid];
m6_1428 -> m6_527  [key=2, style=dotted];
m6_1428 -> m6_1430  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_1429 -> m6_1427  [color=blue, key=0, style=bold];
m6_3987 -> m6_3988  [key=0, style=solid];
m6_3988 -> m6_3987  [color=blue, key=0, style=bold];
m6_1807 -> m6_1808  [key=0, style=solid];
m6_1808 -> m6_1809  [key=0, style=solid];
m6_1808 -> m6_218  [key=2, style=dotted];
m6_1808 -> m6_1810  [color=darkseagreen4, key=1, label=kvPairs, style=dashed];
m6_1808 -> m6_1811  [color=darkseagreen4, key=1, label=kvPairs, style=dashed];
m6_1808 -> m6_1812  [color=darkseagreen4, key=1, label=kvPairs, style=dashed];
m6_1808 -> m6_1813  [color=darkseagreen4, key=1, label=kvPairs, style=dashed];
m6_1809 -> m6_1810  [key=0, style=solid];
m6_1809 -> m6_77  [key=2, style=dotted];
m6_1810 -> m6_1811  [key=0, style=solid];
m6_1810 -> m6_77  [key=2, style=dotted];
m6_1811 -> m6_1812  [key=0, style=solid];
m6_1811 -> m6_77  [key=2, style=dotted];
m6_1812 -> m6_1813  [key=0, style=solid];
m6_1812 -> m6_77  [key=2, style=dotted];
m6_1813 -> m6_1814  [key=0, style=solid];
m6_1813 -> m6_77  [key=2, style=dotted];
m6_1814 -> m6_1807  [color=blue, key=0, style=bold];
m6_1504 -> m6_1505  [key=0, style=solid];
m6_1505 -> m6_1506  [key=0, style=solid];
m6_1506 -> m6_1507  [key=0, style=solid];
m6_1506 -> m6_386  [key=2, style=dotted];
m6_1507 -> m6_1508  [key=0, style=solid];
m6_1507 -> m6_512  [key=2, style=dotted];
m6_1507 -> m6_1516  [key=2, style=dotted];
m6_1507 -> m6_1509  [color=darkseagreen4, key=1, label=results, style=dashed];
m6_1508 -> m6_1509  [key=0, style=solid];
m6_1508 -> m6_3  [key=2, style=dotted];
m6_1508 -> m6_1511  [color=darkseagreen4, key=1, label=searchResults, style=dashed];
m6_1508 -> m6_1512  [color=darkseagreen4, key=1, label=searchResults, style=dashed];
m6_1508 -> m6_1513  [color=darkseagreen4, key=1, label=searchResults, style=dashed];
m6_1508 -> m6_1514  [color=darkseagreen4, key=1, label=searchResults, style=dashed];
m6_1509 -> m6_1510  [key=0, style=solid];
m6_1509 -> m6_1512  [key=0, style=solid];
m6_1511 -> m6_1509  [key=0, style=solid];
m6_1511 -> m6_146  [key=2, style=dotted];
m6_1512 -> m6_1513  [key=0, style=solid];
m6_1512 -> m6_77  [key=2, style=dotted];
m6_1513 -> m6_1514  [key=0, style=solid];
m6_1513 -> m6_77  [key=2, style=dotted];
m6_1514 -> m6_1515  [key=0, style=solid];
m6_1514 -> m6_77  [key=2, style=dotted];
m6_1510 -> m6_1511  [key=0, style=solid];
m6_1510 -> m6_390  [key=2, style=dotted];
m6_1510 -> m6_218  [key=2, style=dotted];
m6_1515 -> m6_1504  [color=blue, key=0, style=bold];
m6_3299 -> m6_3300  [key=0, style=solid];
m6_3300 -> m6_3301  [key=0, style=solid];
m6_3300 -> m6_218  [key=2, style=dotted];
m6_3301 -> m6_3302  [key=0, style=solid];
m6_3301 -> m6_77  [key=2, style=dotted];
m6_3302 -> m6_3299  [color=blue, key=0, style=bold];
m6_1028 -> m6_1029  [key=0, style=solid];
m6_1029 -> m6_1030  [key=0, style=solid];
m6_1029 -> m6_1034  [key=2, style=dotted];
m6_1029 -> m6_1031  [color=darkseagreen4, key=1, label=testClass, style=dashed];
m6_1030 -> m6_1031  [key=0, style=solid];
m6_1030 -> m6_1035  [key=2, style=dotted];
m6_1031 -> m6_1032  [key=0, style=solid];
m6_1031 -> m6_217  [key=2, style=dotted];
m6_1031 -> m6_1037  [color=darkseagreen4, key=1, label=strFromTest, style=dashed];
m6_1032 -> m6_1033  [key=0, style=solid];
m6_1032 -> m6_527  [key=2, style=dotted];
m6_1032 -> m6_1036  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_1033 -> m6_1028  [color=blue, key=0, style=bold];
m6_3873 -> m6_3874  [key=0, style=solid];
m6_3874 -> m6_3875  [key=0, style=solid];
m6_3875 -> m6_3873  [color=blue, key=0, style=bold];
m6_2990 -> m6_2991  [key=0, style=solid];
m6_2991 -> m6_2992  [key=0, style=solid];
m6_2991 -> m6_527  [key=2, style=dotted];
m6_2991 -> m6_2993  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_2992 -> m6_2990  [color=blue, key=0, style=bold];
m6_1490 -> m6_1491  [key=0, style=solid];
m6_1491 -> m6_1492  [key=0, style=solid];
m6_1491 -> m6_258  [key=2, style=dotted];
m6_1491 -> m6_1493  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m6_1491 -> m6_1494  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m6_1492 -> m6_1493  [key=0, style=solid];
m6_1492 -> m6_1043  [key=2, style=dotted];
m6_1492 -> m6_623  [key=2, style=dotted];
m6_1493 -> m6_1494  [key=0, style=solid];
m6_1493 -> m6_1043  [key=2, style=dotted];
m6_1493 -> m6_623  [key=2, style=dotted];
m6_1494 -> m6_1495  [key=0, style=solid];
m6_1494 -> m6_227  [key=2, style=dotted];
m6_1495 -> m6_1496  [key=0, style=solid];
m6_1495 -> m6_77  [key=2, style=dotted];
m6_1496 -> m6_1490  [color=blue, key=0, style=bold];
m6_2412 -> m6_2413  [key=0, style=solid];
m6_2413 -> m6_2414  [key=0, style=solid];
m6_2413 -> m6_2409  [key=2, style=dotted];
m6_2414 -> m6_2415  [key=0, style=solid];
m6_2414 -> m6_217  [key=2, style=dotted];
m6_2415 -> m6_2416  [key=0, style=solid];
m6_2415 -> m6_218  [key=2, style=dotted];
m6_2416 -> m6_2417  [key=0, style=solid];
m6_2416 -> m6_77  [key=2, style=dotted];
m6_2417 -> m6_2412  [color=blue, key=0, style=bold];
m6_753 -> m6_754  [key=0, style=solid];
m6_754 -> m6_755  [key=0, style=solid];
m6_754 -> m6_217  [key=2, style=dotted];
m6_754 -> m6_756  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_755 -> m6_756  [key=0, style=solid];
m6_755 -> m6_77  [key=2, style=dotted];
m6_756 -> m6_757  [key=0, style=solid];
m6_756 -> m6_218  [key=2, style=dotted];
m6_757 -> m6_758  [key=0, style=solid];
m6_757 -> m6_77  [key=2, style=dotted];
m6_758 -> m6_753  [color=blue, key=0, style=bold];
m6_2952 -> m6_2953  [key=0, style=solid];
m6_2953 -> m6_2954  [key=0, style=solid];
m6_2953 -> m6_218  [key=2, style=dotted];
m6_2954 -> m6_2955  [key=0, style=solid];
m6_2954 -> m6_1897  [key=2, style=dotted];
m6_2955 -> m6_2956  [key=0, style=solid];
m6_2955 -> m6_218  [key=2, style=dotted];
m6_2956 -> m6_2957  [key=0, style=solid];
m6_2956 -> m6_1897  [key=2, style=dotted];
m6_2957 -> m6_2958  [key=0, style=solid];
m6_2957 -> m6_218  [key=2, style=dotted];
m6_2958 -> m6_2959  [key=0, style=solid];
m6_2958 -> m6_1897  [key=2, style=dotted];
m6_2959 -> m6_2960  [key=0, style=solid];
m6_2959 -> m6_218  [key=2, style=dotted];
m6_2960 -> m6_2961  [key=0, style=solid];
m6_2960 -> m6_1897  [key=2, style=dotted];
m6_2961 -> m6_2962  [key=0, style=solid];
m6_2961 -> m6_218  [key=2, style=dotted];
m6_2962 -> m6_2963  [key=0, style=solid];
m6_2962 -> m6_1897  [key=2, style=dotted];
m6_2963 -> m6_2964  [key=0, style=solid];
m6_2963 -> m6_218  [key=2, style=dotted];
m6_2964 -> m6_2965  [key=0, style=solid];
m6_2964 -> m6_1897  [key=2, style=dotted];
m6_2965 -> m6_2966  [key=0, style=solid];
m6_2965 -> m6_218  [key=2, style=dotted];
m6_2966 -> m6_2967  [key=0, style=solid];
m6_2966 -> m6_1897  [key=2, style=dotted];
m6_2967 -> m6_2952  [color=blue, key=0, style=bold];
m6_3675 -> m6_3676  [key=0, style=solid];
m6_3676 -> m6_3677  [key=0, style=solid];
m6_3677 -> m6_3678  [key=0, style=solid];
m6_3677 -> m6_218  [key=2, style=dotted];
m6_3677 -> m6_3679  [color=darkseagreen4, key=1, label=c2, style=dashed];
m6_3677 -> m6_3680  [color=darkseagreen4, key=1, label=c2, style=dashed];
m6_3677 -> m6_3681  [color=darkseagreen4, key=1, label=c2, style=dashed];
m6_3677 -> m6_3682  [color=darkseagreen4, key=1, label=c2, style=dashed];
m6_3678 -> m6_3679  [key=0, style=solid];
m6_3678 -> m6_1897  [key=2, style=dotted];
m6_3679 -> m6_3680  [key=0, style=solid];
m6_3679 -> m6_1897  [key=2, style=dotted];
m6_3680 -> m6_3681  [key=0, style=solid];
m6_3680 -> m6_1897  [key=2, style=dotted];
m6_3681 -> m6_3682  [key=0, style=solid];
m6_3681 -> m6_1897  [key=2, style=dotted];
m6_3682 -> m6_3683  [key=0, style=solid];
m6_3682 -> m6_1897  [key=2, style=dotted];
m6_3683 -> m6_3675  [color=blue, key=0, style=bold];
m6_2871 -> m6_2872  [key=0, style=solid];
m6_2872 -> m6_2873  [key=0, style=solid];
m6_2872 -> m6_2876  [key=2, style=dotted];
m6_2872 -> m6_2877  [key=2, style=dotted];
m6_2873 -> m6_2874  [key=0, style=solid];
m6_2873 -> m6_217  [key=2, style=dotted];
m6_2874 -> m6_2875  [key=0, style=solid];
m6_2874 -> m6_77  [key=2, style=dotted];
m6_2875 -> m6_2871  [color=blue, key=0, style=bold];
m6_734 -> m6_735  [key=0, style=solid];
m6_735 -> m6_736  [key=0, style=solid];
m6_735 -> m6_742  [key=2, style=dotted];
m6_735 -> m6_737  [color=darkseagreen4, key=1, label=s, style=dashed];
m6_735 -> m6_738  [color=darkseagreen4, key=1, label=s, style=dashed];
m6_735 -> m6_739  [color=darkseagreen4, key=1, label=s, style=dashed];
m6_736 -> m6_737  [key=0, style=solid];
m6_736 -> m6_743  [key=2, style=dotted];
m6_737 -> m6_738  [key=0, style=solid];
m6_737 -> m6_743  [key=2, style=dotted];
m6_738 -> m6_739  [key=0, style=solid];
m6_738 -> m6_743  [key=2, style=dotted];
m6_738 -> m6_738  [color=darkorchid, key=3, label="Local variable string helloWorld", style=bold];
m6_739 -> m6_740  [key=0, style=solid];
m6_739 -> m6_217  [key=2, style=dotted];
m6_740 -> m6_741  [key=0, style=solid];
m6_740 -> m6_77  [key=2, style=dotted];
m6_741 -> m6_734  [color=blue, key=0, style=bold];
m6_585 -> m6_586  [key=0, style=solid];
m6_586 -> m6_587  [key=0, style=solid];
m6_586 -> m6_3  [key=2, style=dotted];
m6_586 -> m6_596  [key=2, style=dotted];
m6_586 -> m6_589  [color=darkseagreen4, key=1, label=testDates, style=dashed];
m6_586 -> m6_593  [color=darkseagreen4, key=1, label=testDates, style=dashed];
m6_586 -> m6_586  [color=darkorchid, key=3, label="Local variable string input", style=bold];
m6_587 -> m6_588  [key=0, style=solid];
m6_587 -> m6_380  [key=2, style=dotted];
m6_587 -> m6_589  [color=darkseagreen4, key=1, label=ms, style=dashed];
m6_587 -> m6_590  [color=darkseagreen4, key=1, label=ms, style=dashed];
m6_587 -> m6_591  [color=darkseagreen4, key=1, label=ms, style=dashed];
m6_589 -> m6_590  [key=0, style=solid];
m6_589 -> m6_383  [key=2, style=dotted];
m6_593 -> m6_594  [key=0, style=solid];
m6_593 -> m6_145  [key=2, style=dotted];
m6_593 -> m6_600  [key=2, style=dotted];
m6_588 -> m6_589  [key=0, style=solid];
m6_588 -> m6_381  [key=2, style=dotted];
m6_590 -> m6_591  [key=0, style=solid];
m6_590 -> m6_597  [key=2, style=dotted];
m6_591 -> m6_592  [key=0, style=solid];
m6_591 -> m6_598  [key=2, style=dotted];
m6_592 -> m6_593  [key=0, style=solid];
m6_592 -> m6_599  [key=2, style=dotted];
m6_592 -> m6_594  [color=darkseagreen4, key=1, label=expected, style=dashed];
m6_594 -> m6_595  [key=0, style=solid];
m6_594 -> m6_77  [key=2, style=dotted];
m6_595 -> m6_585  [color=blue, key=0, style=bold];
m6_1160 -> m6_1161  [key=0, style=solid];
m6_1161 -> m6_1162  [key=0, style=solid];
m6_1162 -> m6_1160  [color=blue, key=0, style=bold];
m6_2785 -> m6_2786  [key=0, style=solid];
m6_2786 -> m6_2787  [key=0, style=solid];
m6_2786 -> m6_2801  [key=2, style=dotted];
m6_2786 -> m6_2792  [color=darkseagreen4, key=1, label=test, style=dashed];
m6_2787 -> m6_2788  [key=0, style=solid];
m6_2787 -> m6_75  [key=2, style=dotted];
m6_2787 -> m6_2792  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_2787 -> m6_2797  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_2792 -> m6_2793  [key=0, style=solid];
m6_2792 -> m6_2803  [key=2, style=dotted];
m6_2788 -> m6_2789  [key=0, style=solid];
m6_2797 -> m6_2798  [key=0, style=solid];
m6_2797 -> m6_2805  [key=2, style=dotted];
m6_2797 -> m6_2799  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m6_2789 -> m6_2790  [key=0, style=solid];
m6_2790 -> m6_2791  [key=0, style=solid];
m6_2790 -> m6_380  [key=2, style=dotted];
m6_2790 -> m6_2794  [color=darkseagreen4, key=1, label=bsonStream, style=dashed];
m6_2791 -> m6_2792  [key=0, style=solid];
m6_2791 -> m6_2719  [key=2, style=dotted];
m6_2791 -> m6_2802  [key=2, style=dotted];
m6_2791 -> m6_2793  [color=darkseagreen4, key=1, label=bsonWriter, style=dashed];
m6_2794 -> m6_2795  [key=0, style=solid];
m6_2794 -> m6_384  [key=2, style=dotted];
m6_2793 -> m6_2794  [key=0, style=solid];
m6_2793 -> m6_2804  [key=2, style=dotted];
m6_2795 -> m6_2796  [key=0, style=solid];
m6_2795 -> m6_562  [key=2, style=dotted];
m6_2796 -> m6_2797  [key=0, style=solid];
m6_2796 -> m6_665  [key=2, style=dotted];
m6_2796 -> m6_598  [key=2, style=dotted];
m6_2798 -> m6_2799  [key=0, style=solid];
m6_2798 -> m6_77  [key=2, style=dotted];
m6_2799 -> m6_2800  [key=0, style=solid];
m6_2799 -> m6_2806  [key=2, style=dotted];
m6_2800 -> m6_2785  [color=blue, key=0, style=bold];
m6_1640 -> m6_1641  [key=0, style=solid];
m6_1641 -> m6_1642  [key=0, style=solid];
m6_1641 -> m6_1643  [key=2, style=dotted];
m6_1642 -> m6_1640  [color=blue, key=0, style=bold];
m6_481 -> m6_482  [key=0, style=solid];
m6_482 -> m6_483  [key=0, style=solid];
m6_482 -> m6_486  [key=2, style=dotted];
m6_482 -> m6_217  [key=2, style=dotted];
m6_483 -> m6_484  [key=0, style=solid];
m6_483 -> m6_218  [key=2, style=dotted];
m6_484 -> m6_485  [key=0, style=solid];
m6_484 -> m6_77  [key=2, style=dotted];
m6_485 -> m6_481  [color=blue, key=0, style=bold];
m6_3094 -> m6_3095  [key=0, style=solid];
m6_3095 -> m6_3096  [key=0, style=solid];
m6_3095 -> m6_3098  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_3096 -> m6_3097  [key=0, style=solid];
m6_3096 -> m6_3  [key=2, style=dotted];
m6_3096 -> m6_3107  [color=darkseagreen4, key=1, label=errors, style=dashed];
m6_3096 -> m6_3100  [color=darkseagreen4, key=1, label=errors, style=dashed];
m6_3096 -> m6_3101  [color=darkseagreen4, key=1, label=errors, style=dashed];
m6_3096 -> m6_3102  [color=darkseagreen4, key=1, label=errors, style=dashed];
m6_3096 -> m6_3103  [color=darkseagreen4, key=1, label=errors, style=dashed];
m6_3096 -> m6_3104  [color=darkseagreen4, key=1, label=errors, style=dashed];
m6_3098 -> m6_3099  [key=0, style=solid];
m6_3098 -> m6_145  [key=2, style=dotted];
m6_3098 -> m6_856  [key=2, style=dotted];
m6_3097 -> m6_3098  [key=0, style=solid];
m6_3097 -> m6_3107  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m6_3097 -> m6_3108  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m6_3100 -> m6_3101  [key=0, style=solid];
m6_3100 -> m6_77  [key=2, style=dotted];
m6_3101 -> m6_3102  [key=0, style=solid];
m6_3101 -> m6_77  [key=2, style=dotted];
m6_3102 -> m6_3103  [key=0, style=solid];
m6_3102 -> m6_77  [key=2, style=dotted];
m6_3103 -> m6_3104  [key=0, style=solid];
m6_3103 -> m6_77  [key=2, style=dotted];
m6_3104 -> m6_3105  [key=0, style=solid];
m6_3104 -> m6_77  [key=2, style=dotted];
m6_3099 -> m6_3100  [key=0, style=solid];
m6_3099 -> m6_1068  [key=2, style=dotted];
m6_3105 -> m6_3094  [color=blue, key=0, style=bold];
m6_2606 -> m6_2607  [key=0, style=solid];
m6_2607 -> m6_2608  [key=0, style=solid];
m6_2607 -> m6_1934  [key=2, style=dotted];
m6_2608 -> m6_2606  [color=blue, key=0, style=bold];
m6_846 -> m6_847  [key=0, style=solid];
m6_847 -> m6_848  [key=0, style=solid];
m6_847 -> m6_835  [key=2, style=dotted];
m6_848 -> m6_849  [key=0, style=solid];
m6_848 -> m6_836  [key=2, style=dotted];
m6_849 -> m6_850  [key=0, style=solid];
m6_849 -> m6_145  [key=2, style=dotted];
m6_849 -> m6_600  [key=2, style=dotted];
m6_849 -> m6_851  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_849 -> m6_854  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_850 -> m6_851  [key=0, style=solid];
m6_850 -> m6_77  [key=2, style=dotted];
m6_851 -> m6_852  [key=0, style=solid];
m6_851 -> m6_527  [key=2, style=dotted];
m6_851 -> m6_853  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_852 -> m6_846  [color=blue, key=0, style=bold];
m6_4087 -> m6_4088  [key=0, style=solid];
m6_4088 -> m6_4089  [key=0, style=solid];
m6_4089 -> m6_4087  [color=blue, key=0, style=bold];
m6_3656 -> m6_3657  [key=0, style=solid];
m6_3657 -> m6_3658  [key=0, style=solid];
m6_3657 -> m6_3662  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_3658 -> m6_3659  [key=0, style=solid];
m6_3658 -> m6_218  [key=2, style=dotted];
m6_3658 -> m6_3660  [color=darkseagreen4, key=1, label=floats, style=dashed];
m6_3658 -> m6_3661  [color=darkseagreen4, key=1, label=floats, style=dashed];
m6_3662 -> m6_3663  [key=0, style=solid];
m6_3662 -> m6_218  [key=2, style=dotted];
m6_3662 -> m6_3664  [color=darkseagreen4, key=1, label=doubles, style=dashed];
m6_3662 -> m6_3665  [color=darkseagreen4, key=1, label=doubles, style=dashed];
m6_3659 -> m6_3660  [key=0, style=solid];
m6_3659 -> m6_77  [key=2, style=dotted];
m6_3660 -> m6_3661  [key=0, style=solid];
m6_3660 -> m6_77  [key=2, style=dotted];
m6_3661 -> m6_3662  [key=0, style=solid];
m6_3661 -> m6_77  [key=2, style=dotted];
m6_3663 -> m6_3664  [key=0, style=solid];
m6_3663 -> m6_77  [key=2, style=dotted];
m6_3664 -> m6_3665  [key=0, style=solid];
m6_3664 -> m6_77  [key=2, style=dotted];
m6_3665 -> m6_3666  [key=0, style=solid];
m6_3665 -> m6_77  [key=2, style=dotted];
m6_3666 -> m6_3656  [color=blue, key=0, style=bold];
m6_1666 -> m6_1667  [key=0, style=solid];
m6_1667 -> m6_1668  [key=0, style=solid];
m6_1667 -> m6_1669  [key=2, style=dotted];
m6_1668 -> m6_1666  [color=blue, key=0, style=bold];
m6_2466 -> m6_2467  [key=0, style=solid];
m6_2467 -> m6_2468  [key=0, style=solid];
m6_2467 -> m6_2471  [key=2, style=dotted];
m6_2468 -> m6_2469  [key=0, style=solid];
m6_2468 -> m6_227  [key=2, style=dotted];
m6_2469 -> m6_2470  [key=0, style=solid];
m6_2469 -> m6_77  [key=2, style=dotted];
m6_2470 -> m6_2466  [color=blue, key=0, style=bold];
m6_1352 -> m6_1353  [key=0, style=solid];
m6_1353 -> m6_1354  [key=0, style=solid];
m6_1353 -> m6_1357  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1354 -> m6_1355  [key=0, style=solid];
m6_1354 -> m6_527  [key=2, style=dotted];
m6_1354 -> m6_1356  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_1355 -> m6_1352  [color=blue, key=0, style=bold];
m6_3022 -> m6_3023  [key=0, style=solid];
m6_3023 -> m6_3024  [key=0, style=solid];
m6_3023 -> m6_145  [key=2, style=dotted];
m6_3023 -> m6_856  [key=2, style=dotted];
m6_3023 -> m6_3025  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_3023 -> m6_3026  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_3023 -> m6_3027  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_3024 -> m6_3025  [key=0, style=solid];
m6_3024 -> m6_3019  [key=2, style=dotted];
m6_3024 -> m6_3020  [key=2, style=dotted];
m6_3024 -> m6_77  [key=2, style=dotted];
m6_3025 -> m6_3026  [key=0, style=solid];
m6_3025 -> m6_3021  [key=2, style=dotted];
m6_3025 -> m6_77  [key=2, style=dotted];
m6_3026 -> m6_3027  [key=0, style=solid];
m6_3026 -> m6_77  [key=2, style=dotted];
m6_3027 -> m6_3028  [key=0, style=solid];
m6_3027 -> m6_77  [key=2, style=dotted];
m6_3028 -> m6_3029  [key=0, style=solid];
m6_3028 -> m6_218  [key=2, style=dotted];
m6_3028 -> m6_3030  [color=darkseagreen4, key=1, label=c2, style=dashed];
m6_3028 -> m6_3031  [color=darkseagreen4, key=1, label=c2, style=dashed];
m6_3028 -> m6_3032  [color=darkseagreen4, key=1, label=c2, style=dashed];
m6_3029 -> m6_3030  [key=0, style=solid];
m6_3029 -> m6_77  [key=2, style=dotted];
m6_3030 -> m6_3031  [key=0, style=solid];
m6_3030 -> m6_77  [key=2, style=dotted];
m6_3031 -> m6_3032  [key=0, style=solid];
m6_3031 -> m6_77  [key=2, style=dotted];
m6_3032 -> m6_3033  [key=0, style=solid];
m6_3032 -> m6_77  [key=2, style=dotted];
m6_3033 -> m6_3022  [color=blue, key=0, style=bold];
m6_3989 -> m6_3990  [key=0, style=solid];
m6_3990 -> m6_3991  [key=0, style=solid];
m6_3990 -> m6_467  [key=2, style=dotted];
m6_3990 -> m6_3992  [key=2, style=dotted];
m6_3990 -> m6_3292  [key=2, style=dotted];
m6_3991 -> m6_3989  [color=blue, key=0, style=bold];
m6_1290 -> m6_1291  [key=0, style=solid];
m6_1291 -> m6_1292  [key=0, style=solid];
m6_1292 -> m6_1293  [key=0, style=solid];
m6_1292 -> m6_218  [key=2, style=dotted];
m6_1292 -> m6_1294  [color=darkseagreen4, key=1, label=products, style=dashed];
m6_1292 -> m6_1296  [color=darkseagreen4, key=1, label=products, style=dashed];
m6_1292 -> m6_1297  [color=darkseagreen4, key=1, label=products, style=dashed];
m6_1293 -> m6_1294  [key=0, style=solid];
m6_1293 -> m6_1280  [key=2, style=dotted];
m6_1294 -> m6_1295  [key=0, style=solid];
m6_1296 -> m6_1297  [key=0, style=solid];
m6_1296 -> m6_77  [key=2, style=dotted];
m6_1297 -> m6_1298  [key=0, style=solid];
m6_1297 -> m6_77  [key=2, style=dotted];
m6_1295 -> m6_1296  [key=0, style=solid];
m6_1295 -> m6_343  [key=2, style=dotted];
m6_1298 -> m6_1290  [color=blue, key=0, style=bold];
m6_3590 -> m6_3591  [key=0, style=solid];
m6_3591 -> m6_3592  [key=0, style=solid];
m6_3591 -> m6_3224  [key=2, style=dotted];
m6_3592 -> m6_3593  [key=0, style=solid];
m6_3593 -> m6_3594  [key=0, style=solid];
m6_3593 -> m6_3  [key=2, style=dotted];
m6_3594 -> m6_3595  [key=0, style=solid];
m6_3594 -> m6_145  [key=2, style=dotted];
m6_3594 -> m6_600  [key=2, style=dotted];
m6_3594 -> m6_3596  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_3595 -> m6_3596  [key=0, style=solid];
m6_3595 -> m6_77  [key=2, style=dotted];
m6_3596 -> m6_3597  [key=0, style=solid];
m6_3596 -> m6_145  [key=2, style=dotted];
m6_3596 -> m6_3600  [key=2, style=dotted];
m6_3596 -> m6_3598  [color=darkseagreen4, key=1, label=values2, style=dashed];
m6_3597 -> m6_3598  [key=0, style=solid];
m6_3597 -> m6_77  [key=2, style=dotted];
m6_3598 -> m6_3599  [key=0, style=solid];
m6_3598 -> m6_77  [key=2, style=dotted];
m6_3599 -> m6_3590  [color=blue, key=0, style=bold];
m6_1931 -> m6_1932  [key=0, style=solid];
m6_1932 -> m6_1933  [key=0, style=solid];
m6_1932 -> m6_1934  [key=2, style=dotted];
m6_1933 -> m6_1931  [color=blue, key=0, style=bold];
m6_3803 -> m6_3804  [key=0, style=solid];
m6_3804 -> m6_3803  [color=blue, key=0, style=bold];
m6_3509 -> m6_3510  [key=0, style=solid];
m6_3510 -> m6_3511  [key=0, style=solid];
m6_3510 -> m6_3514  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_3511 -> m6_3512  [key=0, style=solid];
m6_3511 -> m6_527  [key=2, style=dotted];
m6_3511 -> m6_3513  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_3512 -> m6_3509  [color=blue, key=0, style=bold];
m6_826 -> m6_827  [key=0, style=solid];
m6_827 -> m6_828  [key=0, style=solid];
m6_827 -> m6_835  [key=2, style=dotted];
m6_827 -> m6_832  [color=darkseagreen4, key=1, label=testDate, style=dashed];
m6_827 -> m6_833  [color=darkseagreen4, key=1, label=testDate, style=dashed];
m6_828 -> m6_829  [key=0, style=solid];
m6_828 -> m6_836  [key=2, style=dotted];
m6_832 -> m6_833  [key=0, style=solid];
m6_832 -> m6_77  [key=2, style=dotted];
m6_833 -> m6_834  [key=0, style=solid];
m6_833 -> m6_77  [key=2, style=dotted];
m6_829 -> m6_830  [key=0, style=solid];
m6_829 -> m6_217  [key=2, style=dotted];
m6_829 -> m6_831  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_830 -> m6_831  [key=0, style=solid];
m6_830 -> m6_77  [key=2, style=dotted];
m6_831 -> m6_832  [key=0, style=solid];
m6_831 -> m6_218  [key=2, style=dotted];
m6_831 -> m6_833  [color=darkseagreen4, key=1, label=m2, style=dashed];
m6_834 -> m6_826  [color=blue, key=0, style=bold];
m6_1644 -> m6_1645  [key=0, style=solid];
m6_1645 -> m6_1646  [key=0, style=solid];
m6_1645 -> m6_1647  [key=2, style=dotted];
m6_1646 -> m6_1644  [color=blue, key=0, style=bold];
m6_1922 -> m6_1923  [key=0, style=solid];
m6_1922 -> m6_1925  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_1922 -> m6_1926  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_1923 -> m6_1924  [key=0, style=solid];
m6_1923 -> m6_1925  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_1925 -> m6_1927  [key=0, style=solid];
m6_1925 -> m6_1928  [key=2, style=dotted];
m6_1925 -> m6_1929  [key=2, style=dotted];
m6_1926 -> m6_1927  [key=0, style=solid];
m6_1926 -> m6_1930  [key=2, style=dotted];
m6_1924 -> m6_1925  [key=0, style=solid];
m6_1924 -> m6_1926  [key=0, style=solid];
m6_1927 -> m6_1922  [color=blue, key=0, style=bold];
m6_1331 -> m6_1332  [key=0, style=solid];
m6_1332 -> m6_1333  [key=0, style=solid];
m6_1332 -> m6_1336  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1333 -> m6_1334  [key=0, style=solid];
m6_1333 -> m6_527  [key=2, style=dotted];
m6_1333 -> m6_1335  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_1334 -> m6_1331  [color=blue, key=0, style=bold];
m6_3110 -> m6_3111  [key=0, style=solid];
m6_3111 -> m6_3112  [key=0, style=solid];
m6_3111 -> m6_3114  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_3112 -> m6_3113  [key=0, style=solid];
m6_3112 -> m6_3  [key=2, style=dotted];
m6_3112 -> m6_3122  [color=darkseagreen4, key=1, label=errors, style=dashed];
m6_3112 -> m6_3116  [color=darkseagreen4, key=1, label=errors, style=dashed];
m6_3112 -> m6_3117  [color=darkseagreen4, key=1, label=errors, style=dashed];
m6_3112 -> m6_3118  [color=darkseagreen4, key=1, label=errors, style=dashed];
m6_3112 -> m6_3119  [color=darkseagreen4, key=1, label=errors, style=dashed];
m6_3114 -> m6_3115  [key=0, style=solid];
m6_3114 -> m6_145  [key=2, style=dotted];
m6_3114 -> m6_856  [key=2, style=dotted];
m6_3113 -> m6_3114  [key=0, style=solid];
m6_3113 -> m6_3122  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m6_3113 -> m6_3123  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m6_3116 -> m6_3117  [key=0, style=solid];
m6_3116 -> m6_77  [key=2, style=dotted];
m6_3117 -> m6_3118  [key=0, style=solid];
m6_3117 -> m6_77  [key=2, style=dotted];
m6_3118 -> m6_3119  [key=0, style=solid];
m6_3118 -> m6_77  [key=2, style=dotted];
m6_3119 -> m6_3120  [key=0, style=solid];
m6_3119 -> m6_77  [key=2, style=dotted];
m6_3115 -> m6_3116  [key=0, style=solid];
m6_3115 -> m6_1068  [key=2, style=dotted];
m6_3120 -> m6_3110  [color=blue, key=0, style=bold];
m6_253 -> m6_254  [key=0, style=solid];
m6_254 -> m6_255  [key=0, style=solid];
m6_254 -> m6_257  [key=2, style=dotted];
m6_254 -> m6_258  [key=2, style=dotted];
m6_254 -> m6_217  [key=2, style=dotted];
m6_254 -> m6_254  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m6_255 -> m6_256  [key=0, style=solid];
m6_255 -> m6_77  [key=2, style=dotted];
m6_256 -> m6_253  [color=blue, key=0, style=bold];
m6_3194 -> m6_3195  [key=0, style=solid];
m6_3195 -> m6_3196  [key=0, style=solid];
m6_3195 -> m6_3200  [key=2, style=dotted];
m6_3195 -> m6_3197  [color=darkseagreen4, key=1, label=testObj, style=dashed];
m6_3196 -> m6_3197  [key=0, style=solid];
m6_3196 -> m6_3201  [key=2, style=dotted];
m6_3196 -> m6_3198  [color=darkseagreen4, key=1, label=objDeserialized, style=dashed];
m6_3197 -> m6_3198  [key=0, style=solid];
m6_3197 -> m6_77  [key=2, style=dotted];
m6_3198 -> m6_3199  [key=0, style=solid];
m6_3198 -> m6_77  [key=2, style=dotted];
m6_3199 -> m6_3194  [color=blue, key=0, style=bold];
m6_1531 -> m6_1532  [key=0, style=solid];
m6_1532 -> m6_1533  [key=0, style=solid];
m6_1532 -> m6_258  [key=2, style=dotted];
m6_1533 -> m6_1534  [key=0, style=solid];
m6_1533 -> m6_3  [key=2, style=dotted];
m6_1534 -> m6_1531  [color=blue, key=0, style=bold];
m6_2456 -> m6_2457  [key=0, style=solid];
m6_2457 -> m6_2458  [key=0, style=solid];
m6_2457 -> m6_2465  [key=2, style=dotted];
m6_2457 -> m6_3  [key=2, style=dotted];
m6_2458 -> m6_2459  [key=0, style=solid];
m6_2458 -> m6_227  [key=2, style=dotted];
m6_2458 -> m6_2460  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_2459 -> m6_2460  [key=0, style=solid];
m6_2459 -> m6_77  [key=2, style=dotted];
m6_2460 -> m6_2461  [key=0, style=solid];
m6_2460 -> m6_218  [key=2, style=dotted];
m6_2460 -> m6_2462  [color=darkseagreen4, key=1, label=c2, style=dashed];
m6_2460 -> m6_2463  [color=darkseagreen4, key=1, label=c2, style=dashed];
m6_2461 -> m6_2462  [key=0, style=solid];
m6_2461 -> m6_1192  [key=2, style=dotted];
m6_2461 -> m6_77  [key=2, style=dotted];
m6_2462 -> m6_2463  [key=0, style=solid];
m6_2462 -> m6_1192  [key=2, style=dotted];
m6_2462 -> m6_77  [key=2, style=dotted];
m6_2463 -> m6_2464  [key=0, style=solid];
m6_2463 -> m6_1192  [key=2, style=dotted];
m6_2463 -> m6_77  [key=2, style=dotted];
m6_2464 -> m6_2456  [color=blue, key=0, style=bold];
m6_1803 -> m6_1804  [key=0, style=solid];
m6_1803 -> m6_1805  [color=darkseagreen4, key=1, label=TValue, style=dashed];
m6_1804 -> m6_1805  [key=0, style=solid];
m6_1805 -> m6_1806  [key=0, style=solid];
m6_1806 -> m6_1803  [color=blue, key=0, style=bold];
m6_2878 -> m6_2879  [key=0, style=solid];
m6_2879 -> m6_2880  [key=0, style=solid];
m6_2880 -> m6_2881  [key=0, style=solid];
m6_2880 -> m6_218  [key=2, style=dotted];
m6_2880 -> m6_2882  [color=darkseagreen4, key=1, label=w, style=dashed];
m6_2880 -> m6_2883  [color=darkseagreen4, key=1, label=w, style=dashed];
m6_2881 -> m6_2882  [key=0, style=solid];
m6_2881 -> m6_2877  [key=2, style=dotted];
m6_2881 -> m6_77  [key=2, style=dotted];
m6_2882 -> m6_2883  [key=0, style=solid];
m6_2882 -> m6_2877  [key=2, style=dotted];
m6_2882 -> m6_77  [key=2, style=dotted];
m6_2883 -> m6_2884  [key=0, style=solid];
m6_2883 -> m6_77  [key=2, style=dotted];
m6_2884 -> m6_2878  [color=blue, key=0, style=bold];
m6_3958 -> m6_3959  [key=0, style=solid];
m6_3959 -> m6_3958  [color=blue, key=0, style=bold];
m6_289 -> m6_290  [key=0, style=solid];
m6_290 -> m6_291  [key=0, style=solid];
m6_290 -> m6_218  [key=2, style=dotted];
m6_290 -> m6_292  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_290 -> m6_293  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_290 -> m6_294  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_290 -> m6_295  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_291 -> m6_292  [key=0, style=solid];
m6_291 -> m6_77  [key=2, style=dotted];
m6_292 -> m6_293  [key=0, style=solid];
m6_292 -> m6_77  [key=2, style=dotted];
m6_293 -> m6_294  [key=0, style=solid];
m6_293 -> m6_77  [key=2, style=dotted];
m6_294 -> m6_295  [key=0, style=solid];
m6_294 -> m6_77  [key=2, style=dotted];
m6_295 -> m6_296  [key=0, style=solid];
m6_295 -> m6_77  [key=2, style=dotted];
m6_296 -> m6_289  [color=blue, key=0, style=bold];
m6_837 -> m6_838  [key=0, style=solid];
m6_838 -> m6_839  [key=0, style=solid];
m6_838 -> m6_835  [key=2, style=dotted];
m6_838 -> m6_843  [color=darkseagreen4, key=1, label=testDate, style=dashed];
m6_838 -> m6_844  [color=darkseagreen4, key=1, label=testDate, style=dashed];
m6_839 -> m6_840  [key=0, style=solid];
m6_839 -> m6_836  [key=2, style=dotted];
m6_843 -> m6_844  [key=0, style=solid];
m6_843 -> m6_77  [key=2, style=dotted];
m6_844 -> m6_845  [key=0, style=solid];
m6_844 -> m6_77  [key=2, style=dotted];
m6_840 -> m6_841  [key=0, style=solid];
m6_840 -> m6_145  [key=2, style=dotted];
m6_840 -> m6_600  [key=2, style=dotted];
m6_840 -> m6_842  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_841 -> m6_842  [key=0, style=solid];
m6_841 -> m6_77  [key=2, style=dotted];
m6_842 -> m6_843  [key=0, style=solid];
m6_842 -> m6_218  [key=2, style=dotted];
m6_842 -> m6_844  [color=darkseagreen4, key=1, label=m2, style=dashed];
m6_845 -> m6_837  [color=blue, key=0, style=bold];
m6_3415 -> m6_3416  [key=0, style=solid];
m6_3416 -> m6_3417  [key=0, style=solid];
m6_3416 -> m6_3402  [key=2, style=dotted];
m6_3417 -> m6_3418  [key=0, style=solid];
m6_3417 -> m6_227  [key=2, style=dotted];
m6_3418 -> m6_3419  [key=0, style=solid];
m6_3418 -> m6_77  [key=2, style=dotted];
m6_3419 -> m6_3415  [color=blue, key=0, style=bold];
m6_3523 -> m6_3524  [key=0, style=solid];
m6_3524 -> m6_3525  [key=0, style=solid];
m6_3524 -> m6_3528  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_3525 -> m6_3526  [key=0, style=solid];
m6_3525 -> m6_527  [key=2, style=dotted];
m6_3525 -> m6_3527  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_3526 -> m6_3523  [color=blue, key=0, style=bold];
m6_2945 -> m6_2946  [key=0, style=solid];
m6_2946 -> m6_2947  [key=0, style=solid];
m6_2946 -> m6_145  [key=2, style=dotted];
m6_2946 -> m6_2924  [key=2, style=dotted];
m6_2946 -> m6_2949  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_2947 -> m6_2948  [key=0, style=solid];
m6_2947 -> m6_665  [key=2, style=dotted];
m6_2947 -> m6_666  [key=2, style=dotted];
m6_2947 -> m6_2925  [key=2, style=dotted];
m6_2947 -> m6_2950  [color=darkseagreen4, key=1, label=dict, style=dashed];
m6_2949 -> m6_2950  [key=0, style=solid];
m6_2949 -> m6_2925  [key=2, style=dotted];
m6_2948 -> m6_2949  [key=0, style=solid];
m6_2948 -> m6_665  [key=2, style=dotted];
m6_2948 -> m6_666  [key=2, style=dotted];
m6_2950 -> m6_2951  [key=0, style=solid];
m6_2950 -> m6_77  [key=2, style=dotted];
m6_2951 -> m6_2945  [color=blue, key=0, style=bold];
m6_331 -> m6_364  [key=0, style=solid];
m6_331 -> m6_365  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_331 -> m6_366  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_331 -> m6_370  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_331 -> m6_372  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_364 -> m6_365  [key=0, style=solid];
m6_364 -> m6_380  [key=2, style=dotted];
m6_364 -> m6_366  [color=darkseagreen4, key=1, label=ms, style=dashed];
m6_364 -> m6_367  [color=darkseagreen4, key=1, label=ms, style=dashed];
m6_365 -> m6_366  [key=0, style=solid];
m6_365 -> m6_381  [key=2, style=dotted];
m6_365 -> m6_382  [key=2, style=dotted];
m6_366 -> m6_367  [key=0, style=solid];
m6_366 -> m6_383  [key=2, style=dotted];
m6_370 -> m6_371  [key=0, style=solid];
m6_370 -> m6_217  [key=2, style=dotted];
m6_370 -> m6_386  [key=2, style=dotted];
m6_372 -> m6_373  [key=0, style=solid];
m6_372 -> m6_382  [key=2, style=dotted];
m6_372 -> m6_343  [key=2, style=dotted];
m6_367 -> m6_368  [key=0, style=solid];
m6_367 -> m6_384  [key=2, style=dotted];
m6_368 -> m6_369  [key=0, style=solid];
m6_368 -> m6_385  [key=2, style=dotted];
m6_368 -> m6_386  [key=2, style=dotted];
m6_369 -> m6_370  [key=0, style=solid];
m6_369 -> m6_387  [key=2, style=dotted];
m6_369 -> m6_388  [key=2, style=dotted];
m6_369 -> m6_389  [key=2, style=dotted];
m6_369 -> m6_369  [color=darkseagreen4, key=1, label=dataContractJson, style=dashed];
m6_369 -> m6_391  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_369 -> m6_373  [color=darkseagreen4, key=1, label=dataContractJson, style=dashed];
m6_369 -> m6_375  [color=darkseagreen4, key=1, label=dataContractJson, style=dashed];
m6_369 -> m6_376  [color=darkseagreen4, key=1, label=dataContractJson, style=dashed];
m6_373 -> m6_374  [key=0, style=solid];
m6_373 -> m6_343  [key=2, style=dotted];
m6_375 -> m6_376  [key=0, style=solid];
m6_375 -> m6_77  [key=2, style=dotted];
m6_376 -> m6_377  [key=0, style=solid];
m6_376 -> m6_378  [key=0, style=solid];
m6_371 -> m6_372  [key=0, style=solid];
m6_371 -> m6_387  [key=2, style=dotted];
m6_371 -> m6_388  [key=2, style=dotted];
m6_371 -> m6_389  [key=2, style=dotted];
m6_371 -> m6_371  [color=darkseagreen4, key=1, label=jsonNetJson, style=dashed];
m6_371 -> m6_394  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_371 -> m6_374  [color=darkseagreen4, key=1, label=jsonNetJson, style=dashed];
m6_371 -> m6_375  [color=darkseagreen4, key=1, label=jsonNetJson, style=dashed];
m6_371 -> m6_377  [color=darkseagreen4, key=1, label=jsonNetJson, style=dashed];
m6_371 -> m6_378  [color=darkseagreen4, key=1, label=jsonNetJson, style=dashed];
m6_374 -> m6_375  [key=0, style=solid];
m6_374 -> m6_343  [key=2, style=dotted];
m6_377 -> m6_376  [key=0, style=solid];
m6_377 -> m6_244  [key=2, style=dotted];
m6_377 -> m6_245  [key=2, style=dotted];
m6_377 -> m6_377  [color=darkseagreen4, key=1, label=property, style=dashed];
m6_378 -> m6_379  [key=0, style=solid];
m6_378 -> m6_390  [key=2, style=dotted];
m6_379 -> m6_331  [color=blue, key=0, style=bold];
m6_3125 -> m6_3126  [key=0, style=solid];
m6_3126 -> m6_3127  [key=0, style=solid];
m6_3126 -> m6_3  [key=2, style=dotted];
m6_3126 -> m6_3137  [color=darkseagreen4, key=1, label=errors, style=dashed];
m6_3126 -> m6_3130  [color=darkseagreen4, key=1, label=errors, style=dashed];
m6_3126 -> m6_3131  [color=darkseagreen4, key=1, label=errors, style=dashed];
m6_3126 -> m6_3132  [color=darkseagreen4, key=1, label=errors, style=dashed];
m6_3126 -> m6_3133  [color=darkseagreen4, key=1, label=errors, style=dashed];
m6_3127 -> m6_3128  [key=0, style=solid];
m6_3127 -> m6_3137  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m6_3127 -> m6_3138  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m6_3130 -> m6_3131  [key=0, style=solid];
m6_3130 -> m6_77  [key=2, style=dotted];
m6_3131 -> m6_3132  [key=0, style=solid];
m6_3131 -> m6_77  [key=2, style=dotted];
m6_3132 -> m6_3133  [key=0, style=solid];
m6_3132 -> m6_77  [key=2, style=dotted];
m6_3133 -> m6_3134  [key=0, style=solid];
m6_3133 -> m6_77  [key=2, style=dotted];
m6_3128 -> m6_3129  [key=0, style=solid];
m6_3128 -> m6_3135  [key=2, style=dotted];
m6_3128 -> m6_145  [key=2, style=dotted];
m6_3128 -> m6_600  [key=2, style=dotted];
m6_3129 -> m6_3130  [key=0, style=solid];
m6_3129 -> m6_77  [key=2, style=dotted];
m6_3134 -> m6_3125  [color=blue, key=0, style=bold];
m6_677 -> m6_678  [key=0, style=solid];
m6_678 -> m6_679  [key=0, style=solid];
m6_679 -> m6_680  [key=0, style=solid];
m6_679 -> m6_218  [key=2, style=dotted];
m6_679 -> m6_681  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m6_679 -> m6_682  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m6_679 -> m6_683  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m6_679 -> m6_684  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m6_679 -> m6_685  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m6_680 -> m6_681  [key=0, style=solid];
m6_680 -> m6_77  [key=2, style=dotted];
m6_681 -> m6_682  [key=0, style=solid];
m6_681 -> m6_77  [key=2, style=dotted];
m6_682 -> m6_683  [key=0, style=solid];
m6_682 -> m6_77  [key=2, style=dotted];
m6_683 -> m6_684  [key=0, style=solid];
m6_683 -> m6_77  [key=2, style=dotted];
m6_684 -> m6_685  [key=0, style=solid];
m6_684 -> m6_77  [key=2, style=dotted];
m6_685 -> m6_686  [key=0, style=solid];
m6_685 -> m6_77  [key=2, style=dotted];
m6_686 -> m6_677  [color=blue, key=0, style=bold];
m6_2750 -> m6_2751  [key=0, style=solid];
m6_2751 -> m6_2752  [key=0, style=solid];
m6_2752 -> m6_2753  [key=0, style=solid];
m6_2752 -> m6_218  [key=2, style=dotted];
m6_2752 -> m6_2754  [color=darkseagreen4, key=1, label=values, style=dashed];
m6_2752 -> m6_2755  [color=darkseagreen4, key=1, label=values, style=dashed];
m6_2752 -> m6_2756  [color=darkseagreen4, key=1, label=values, style=dashed];
m6_2752 -> m6_2757  [color=darkseagreen4, key=1, label=values, style=dashed];
m6_2752 -> m6_2758  [color=darkseagreen4, key=1, label=values, style=dashed];
m6_2752 -> m6_2759  [color=darkseagreen4, key=1, label=values, style=dashed];
m6_2752 -> m6_2760  [color=darkseagreen4, key=1, label=values, style=dashed];
m6_2752 -> m6_2761  [color=darkseagreen4, key=1, label=values, style=dashed];
m6_2752 -> m6_2762  [color=darkseagreen4, key=1, label=values, style=dashed];
m6_2753 -> m6_2754  [key=0, style=solid];
m6_2753 -> m6_77  [key=2, style=dotted];
m6_2754 -> m6_2755  [key=0, style=solid];
m6_2754 -> m6_77  [key=2, style=dotted];
m6_2755 -> m6_2756  [key=0, style=solid];
m6_2755 -> m6_77  [key=2, style=dotted];
m6_2756 -> m6_2757  [key=0, style=solid];
m6_2756 -> m6_77  [key=2, style=dotted];
m6_2757 -> m6_2758  [key=0, style=solid];
m6_2757 -> m6_77  [key=2, style=dotted];
m6_2758 -> m6_2759  [key=0, style=solid];
m6_2758 -> m6_77  [key=2, style=dotted];
m6_2759 -> m6_2760  [key=0, style=solid];
m6_2759 -> m6_77  [key=2, style=dotted];
m6_2760 -> m6_2761  [key=0, style=solid];
m6_2760 -> m6_77  [key=2, style=dotted];
m6_2761 -> m6_2762  [key=0, style=solid];
m6_2761 -> m6_77  [key=2, style=dotted];
m6_2762 -> m6_2763  [key=0, style=solid];
m6_2762 -> m6_77  [key=2, style=dotted];
m6_2763 -> m6_2750  [color=blue, key=0, style=bold];
m6_3752 -> m6_3753  [key=0, style=solid];
m6_3753 -> m6_3754  [key=0, style=solid];
m6_3753 -> m6_218  [key=2, style=dotted];
m6_3753 -> m6_3755  [color=darkseagreen4, key=1, label=dic, style=dashed];
m6_3753 -> m6_3756  [color=darkseagreen4, key=1, label=dic, style=dashed];
m6_3753 -> m6_3757  [color=darkseagreen4, key=1, label=dic, style=dashed];
m6_3754 -> m6_3755  [key=0, style=solid];
m6_3754 -> m6_77  [key=2, style=dotted];
m6_3755 -> m6_3756  [key=0, style=solid];
m6_3755 -> m6_77  [key=2, style=dotted];
m6_3756 -> m6_3757  [key=0, style=solid];
m6_3756 -> m6_77  [key=2, style=dotted];
m6_3757 -> m6_3758  [key=0, style=solid];
m6_3757 -> m6_1270  [key=2, style=dotted];
m6_3758 -> m6_3752  [color=blue, key=0, style=bold];
m6_2698 -> m6_2699  [key=0, style=solid];
m6_2699 -> m6_2700  [key=0, style=solid];
m6_2699 -> m6_258  [key=2, style=dotted];
m6_2700 -> m6_2701  [key=0, style=solid];
m6_2700 -> m6_227  [key=2, style=dotted];
m6_2700 -> m6_2702  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_2701 -> m6_2702  [key=0, style=solid];
m6_2701 -> m6_77  [key=2, style=dotted];
m6_2702 -> m6_2703  [key=0, style=solid];
m6_2702 -> m6_218  [key=2, style=dotted];
m6_2702 -> m6_2704  [color=darkseagreen4, key=1, label=v2, style=dashed];
m6_2702 -> m6_2705  [color=darkseagreen4, key=1, label=v2, style=dashed];
m6_2702 -> m6_2706  [color=darkseagreen4, key=1, label=v2, style=dashed];
m6_2703 -> m6_2704  [key=0, style=solid];
m6_2703 -> m6_77  [key=2, style=dotted];
m6_2704 -> m6_2705  [key=0, style=solid];
m6_2704 -> m6_77  [key=2, style=dotted];
m6_2705 -> m6_2706  [key=0, style=solid];
m6_2705 -> m6_77  [key=2, style=dotted];
m6_2706 -> m6_2707  [key=0, style=solid];
m6_2706 -> m6_77  [key=2, style=dotted];
m6_2707 -> m6_2698  [color=blue, key=0, style=bold];
m6_2421 -> m6_2422  [key=0, style=solid];
m6_2422 -> m6_2423  [key=0, style=solid];
m6_2423 -> m6_2424  [key=0, style=solid];
m6_2424 -> m6_2421  [color=blue, key=0, style=bold];
m6_4054 -> m6_4055  [key=0, style=solid];
m6_4055 -> m6_4056  [key=0, style=solid];
m6_4055 -> m6_4057  [key=2, style=dotted];
m6_4056 -> m6_4054  [color=blue, key=0, style=bold];
m6_614 -> m6_615  [key=0, style=solid];
m6_615 -> m6_616  [key=0, style=solid];
m6_615 -> m6_258  [key=2, style=dotted];
m6_615 -> m6_617  [color=darkseagreen4, key=1, label=values, style=dashed];
m6_615 -> m6_618  [color=darkseagreen4, key=1, label=values, style=dashed];
m6_615 -> m6_621  [color=darkseagreen4, key=1, label=values, style=dashed];
m6_616 -> m6_617  [key=0, style=solid];
m6_616 -> m6_623  [key=2, style=dotted];
m6_617 -> m6_618  [key=0, style=solid];
m6_617 -> m6_623  [key=2, style=dotted];
m6_618 -> m6_619  [key=0, style=solid];
m6_618 -> m6_217  [key=2, style=dotted];
m6_618 -> m6_620  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_621 -> m6_622  [key=0, style=solid];
m6_621 -> m6_77  [key=2, style=dotted];
m6_619 -> m6_620  [key=0, style=solid];
m6_619 -> m6_77  [key=2, style=dotted];
m6_620 -> m6_621  [key=0, style=solid];
m6_620 -> m6_218  [key=2, style=dotted];
m6_622 -> m6_614  [color=blue, key=0, style=bold];
m6_1949 -> m6_1950  [key=0, style=solid];
m6_1950 -> m6_1951  [key=0, style=solid];
m6_1950 -> m6_1938  [key=2, style=dotted];
m6_1951 -> m6_1949  [color=blue, key=0, style=bold];
m6_3928 -> m6_3929  [key=0, style=solid];
m6_3929 -> m6_3930  [key=0, style=solid];
m6_3929 -> m6_3948  [key=2, style=dotted];
m6_3929 -> m6_3931  [color=darkseagreen4, key=1, label=consoleWriter, style=dashed];
m6_3929 -> m6_3936  [color=darkseagreen4, key=1, label=consoleWriter, style=dashed];
m6_3929 -> m6_3942  [color=darkseagreen4, key=1, label=consoleWriter, style=dashed];
m6_3930 -> m6_3931  [key=0, style=solid];
m6_3930 -> m6_145  [key=2, style=dotted];
m6_3930 -> m6_3949  [key=2, style=dotted];
m6_3930 -> m6_3950  [key=2, style=dotted];
m6_3930 -> m6_3933  [color=darkseagreen4, key=1, label=options, style=dashed];
m6_3930 -> m6_3937  [color=darkseagreen4, key=1, label=options, style=dashed];
m6_3930 -> m6_3939  [color=darkseagreen4, key=1, label=options, style=dashed];
m6_3930 -> m6_3943  [color=darkseagreen4, key=1, label=options, style=dashed];
m6_3930 -> m6_3945  [color=darkseagreen4, key=1, label=options, style=dashed];
m6_3931 -> m6_3932  [key=0, style=solid];
m6_3931 -> m6_1110  [key=2, style=dotted];
m6_3931 -> m6_3933  [color=darkseagreen4, key=1, label=text1, style=dashed];
m6_3936 -> m6_3937  [key=0, style=solid];
m6_3936 -> m6_623  [key=2, style=dotted];
m6_3942 -> m6_3943  [key=0, style=solid];
m6_3942 -> m6_623  [key=2, style=dotted];
m6_3933 -> m6_3934  [key=0, style=solid];
m6_3933 -> m6_856  [key=2, style=dotted];
m6_3937 -> m6_3938  [key=0, style=solid];
m6_3937 -> m6_1110  [key=2, style=dotted];
m6_3937 -> m6_3939  [color=darkseagreen4, key=1, label=text2, style=dashed];
m6_3939 -> m6_3940  [key=0, style=solid];
m6_3939 -> m6_856  [key=2, style=dotted];
m6_3943 -> m6_3944  [key=0, style=solid];
m6_3943 -> m6_1110  [key=2, style=dotted];
m6_3943 -> m6_3945  [color=darkseagreen4, key=1, label=text3, style=dashed];
m6_3945 -> m6_3946  [key=0, style=solid];
m6_3945 -> m6_856  [key=2, style=dotted];
m6_3932 -> m6_3933  [key=0, style=solid];
m6_3932 -> m6_77  [key=2, style=dotted];
m6_3934 -> m6_3935  [key=0, style=solid];
m6_3934 -> m6_3871  [key=2, style=dotted];
m6_3934 -> m6_77  [key=2, style=dotted];
m6_3935 -> m6_3936  [key=0, style=solid];
m6_3935 -> m6_258  [key=2, style=dotted];
m6_3935 -> m6_3937  [color=darkseagreen4, key=1, label=dict2, style=dashed];
m6_3938 -> m6_3939  [key=0, style=solid];
m6_3938 -> m6_77  [key=2, style=dotted];
m6_3940 -> m6_3941  [key=0, style=solid];
m6_3940 -> m6_3951  [key=2, style=dotted];
m6_3940 -> m6_3871  [key=2, style=dotted];
m6_3940 -> m6_77  [key=2, style=dotted];
m6_3941 -> m6_3942  [key=0, style=solid];
m6_3941 -> m6_258  [key=2, style=dotted];
m6_3941 -> m6_3943  [color=darkseagreen4, key=1, label=dict3, style=dashed];
m6_3944 -> m6_3945  [key=0, style=solid];
m6_3944 -> m6_77  [key=2, style=dotted];
m6_3946 -> m6_3947  [key=0, style=solid];
m6_3946 -> m6_3951  [key=2, style=dotted];
m6_3946 -> m6_3871  [key=2, style=dotted];
m6_3946 -> m6_77  [key=2, style=dotted];
m6_3947 -> m6_3928  [color=blue, key=0, style=bold];
m6_4064 -> m6_4065  [key=0, style=solid];
m6_4065 -> m6_4066  [key=0, style=solid];
m6_4066 -> m6_4064  [color=blue, key=0, style=bold];
m6_1517 -> m6_1518  [key=0, style=solid];
m6_1518 -> m6_1519  [key=0, style=solid];
m6_1518 -> m6_1530  [key=2, style=dotted];
m6_1518 -> m6_1525  [color=darkseagreen4, key=1, label=personPropertyClass, style=dashed];
m6_1519 -> m6_1520  [key=0, style=solid];
m6_1519 -> m6_1521  [color=darkseagreen4, key=1, label=wagePerson, style=dashed];
m6_1519 -> m6_1522  [color=darkseagreen4, key=1, label=wagePerson, style=dashed];
m6_1519 -> m6_1523  [color=darkseagreen4, key=1, label=wagePerson, style=dashed];
m6_1519 -> m6_1524  [color=darkseagreen4, key=1, label=wagePerson, style=dashed];
m6_1519 -> m6_1528  [color=darkseagreen4, key=1, label=wagePerson, style=dashed];
m6_1525 -> m6_1526  [key=0, style=solid];
m6_1525 -> m6_227  [key=2, style=dotted];
m6_1525 -> m6_1527  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1520 -> m6_1521  [key=0, style=solid];
m6_1520 -> m6_596  [key=2, style=dotted];
m6_1521 -> m6_1522  [key=0, style=solid];
m6_1522 -> m6_1523  [key=0, style=solid];
m6_1523 -> m6_1524  [key=0, style=solid];
m6_1523 -> m6_596  [key=2, style=dotted];
m6_1524 -> m6_1525  [key=0, style=solid];
m6_1528 -> m6_1529  [key=0, style=solid];
m6_1528 -> m6_77  [key=2, style=dotted];
m6_1526 -> m6_1527  [key=0, style=solid];
m6_1526 -> m6_77  [key=2, style=dotted];
m6_1527 -> m6_1528  [key=0, style=solid];
m6_1527 -> m6_218  [key=2, style=dotted];
m6_1529 -> m6_1517  [color=blue, key=0, style=bold];
m6_895 -> m6_896  [key=0, style=solid];
m6_896 -> m6_897  [key=0, style=solid];
m6_896 -> m6_527  [key=2, style=dotted];
m6_896 -> m6_898  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_897 -> m6_895  [color=blue, key=0, style=bold];
m6_1582 -> m6_1583  [key=0, style=solid];
m6_1583 -> m6_1584  [key=0, style=solid];
m6_1583 -> m6_1587  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1584 -> m6_1585  [key=0, style=solid];
m6_1584 -> m6_527  [key=2, style=dotted];
m6_1584 -> m6_1586  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_1585 -> m6_1582  [color=blue, key=0, style=bold];
m6_502 -> m6_503  [key=0, style=solid];
m6_503 -> m6_504  [key=0, style=solid];
m6_504 -> m6_505  [key=0, style=solid];
m6_504 -> m6_501  [key=2, style=dotted];
m6_504 -> m6_506  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_505 -> m6_506  [key=0, style=solid];
m6_505 -> m6_510  [key=2, style=dotted];
m6_505 -> m6_511  [key=2, style=dotted];
m6_505 -> m6_77  [key=2, style=dotted];
m6_506 -> m6_507  [key=0, style=solid];
m6_507 -> m6_508  [key=0, style=solid];
m6_508 -> m6_509  [key=0, style=solid];
m6_508 -> m6_512  [key=2, style=dotted];
m6_508 -> m6_511  [key=2, style=dotted];
m6_508 -> m6_77  [key=2, style=dotted];
m6_508 -> m6_508  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m6_509 -> m6_502  [color=blue, key=0, style=bold];
m6_1248 -> m6_1249  [key=0, style=solid];
m6_1249 -> m6_1250  [key=0, style=solid];
m6_1250 -> m6_1251  [key=0, style=solid];
m6_1250 -> m6_218  [key=2, style=dotted];
m6_1250 -> m6_1252  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_1250 -> m6_1253  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_1250 -> m6_1254  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_1250 -> m6_1255  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_1251 -> m6_1252  [key=0, style=solid];
m6_1251 -> m6_77  [key=2, style=dotted];
m6_1252 -> m6_1253  [key=0, style=solid];
m6_1252 -> m6_77  [key=2, style=dotted];
m6_1253 -> m6_1254  [key=0, style=solid];
m6_1253 -> m6_77  [key=2, style=dotted];
m6_1254 -> m6_1255  [key=0, style=solid];
m6_1254 -> m6_77  [key=2, style=dotted];
m6_1255 -> m6_1256  [key=0, style=solid];
m6_1255 -> m6_77  [key=2, style=dotted];
m6_1256 -> m6_1248  [color=blue, key=0, style=bold];
m6_2042 -> m6_2043  [key=0, style=solid];
m6_2043 -> m6_2044  [key=0, style=solid];
m6_2044 -> m6_2042  [color=blue, key=0, style=bold];
m6_3893 -> m6_3894  [key=0, style=solid];
m6_3894 -> m6_3895  [key=0, style=solid];
m6_3895 -> m6_3893  [color=blue, key=0, style=bold];
m6_3993 -> m6_3994  [key=0, style=solid];
m6_3994 -> m6_3995  [key=0, style=solid];
m6_3994 -> m6_3997  [color=darkseagreen4, key=1, label=s, style=dashed];
m6_3995 -> m6_3996  [key=0, style=solid];
m6_3995 -> m6_3997  [key=0, style=solid];
m6_3997 -> m6_3998  [key=0, style=solid];
m6_3997 -> m6_3999  [key=2, style=dotted];
m6_3997 -> m6_4000  [key=2, style=dotted];
m6_3996 -> m6_3998  [key=0, style=solid];
m6_3998 -> m6_3993  [color=blue, key=0, style=bold];
m6_4083 -> m6_4084  [key=0, style=solid];
m6_4084 -> m6_4085  [key=0, style=solid];
m6_4084 -> m6_4061  [key=2, style=dotted];
m6_4084 -> m6_4086  [key=2, style=dotted];
m6_4084 -> m6_4225  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.Ratio", style=dashed];
m6_4085 -> m6_4083  [color=blue, key=0, style=bold];
m6_297 -> m6_298  [key=0, style=solid];
m6_298 -> m6_299  [key=0, style=solid];
m6_299 -> m6_300  [key=0, style=solid];
m6_299 -> m6_0  [key=2, style=dotted];
m6_299 -> m6_301  [color=darkseagreen4, key=1, label=foo1, style=dashed];
m6_300 -> m6_301  [key=0, style=solid];
m6_300 -> m6_312  [key=2, style=dotted];
m6_300 -> m6_146  [key=2, style=dotted];
m6_301 -> m6_302  [key=0, style=solid];
m6_301 -> m6_217  [key=2, style=dotted];
m6_301 -> m6_301  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m6_302 -> m6_303  [key=0, style=solid];
m6_302 -> m6_77  [key=2, style=dotted];
m6_303 -> m6_304  [key=0, style=solid];
m6_303 -> m6_0  [key=2, style=dotted];
m6_303 -> m6_305  [color=darkseagreen4, key=1, label=foo2, style=dashed];
m6_304 -> m6_305  [key=0, style=solid];
m6_304 -> m6_313  [key=2, style=dotted];
m6_304 -> m6_146  [key=2, style=dotted];
m6_305 -> m6_306  [key=0, style=solid];
m6_305 -> m6_217  [key=2, style=dotted];
m6_306 -> m6_307  [key=0, style=solid];
m6_306 -> m6_77  [key=2, style=dotted];
m6_307 -> m6_308  [key=0, style=solid];
m6_307 -> m6_314  [key=2, style=dotted];
m6_307 -> m6_309  [color=darkseagreen4, key=1, label=foo3, style=dashed];
m6_308 -> m6_309  [key=0, style=solid];
m6_308 -> m6_313  [key=2, style=dotted];
m6_308 -> m6_146  [key=2, style=dotted];
m6_309 -> m6_310  [key=0, style=solid];
m6_309 -> m6_217  [key=2, style=dotted];
m6_310 -> m6_311  [key=0, style=solid];
m6_310 -> m6_77  [key=2, style=dotted];
m6_311 -> m6_297  [color=blue, key=0, style=bold];
m6_1089 -> m6_1090  [key=0, style=solid];
m6_1090 -> m6_1091  [key=0, style=solid];
m6_1090 -> m6_1088  [key=2, style=dotted];
m6_1090 -> m6_1092  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_1091 -> m6_1092  [key=0, style=solid];
m6_1092 -> m6_1093  [key=0, style=solid];
m6_1092 -> m6_145  [key=2, style=dotted];
m6_1092 -> m6_600  [key=2, style=dotted];
m6_1092 -> m6_1094  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1093 -> m6_1094  [key=0, style=solid];
m6_1093 -> m6_77  [key=2, style=dotted];
m6_1094 -> m6_1095  [key=0, style=solid];
m6_1094 -> m6_145  [key=2, style=dotted];
m6_1094 -> m6_856  [key=2, style=dotted];
m6_1095 -> m6_1096  [key=0, style=solid];
m6_1095 -> m6_145  [key=2, style=dotted];
m6_1095 -> m6_600  [key=2, style=dotted];
m6_1096 -> m6_1097  [key=0, style=solid];
m6_1096 -> m6_77  [key=2, style=dotted];
m6_1097 -> m6_1089  [color=blue, key=0, style=bold];
m6_3360 -> m6_3361  [key=0, style=solid];
m6_3361 -> m6_3362  [key=0, style=solid];
m6_3362 -> m6_3363  [key=0, style=solid];
m6_3362 -> m6_218  [key=2, style=dotted];
m6_3363 -> m6_3364  [key=0, style=solid];
m6_3364 -> m6_3365  [key=0, style=solid];
m6_3364 -> m6_1895  [key=2, style=dotted];
m6_3364 -> m6_77  [key=2, style=dotted];
m6_3365 -> m6_3360  [color=blue, key=0, style=bold];
m6_270 -> m6_271  [key=0, style=solid];
m6_271 -> m6_272  [key=0, style=solid];
m6_271 -> m6_275  [key=2, style=dotted];
m6_271 -> m6_258  [key=2, style=dotted];
m6_272 -> m6_273  [key=0, style=solid];
m6_272 -> m6_217  [key=2, style=dotted];
m6_273 -> m6_274  [key=0, style=solid];
m6_273 -> m6_77  [key=2, style=dotted];
m6_274 -> m6_270  [color=blue, key=0, style=bold];
m6_3002 -> m6_3003  [key=0, style=solid];
m6_3003 -> m6_3004  [key=0, style=solid];
m6_3004 -> m6_3005  [key=0, style=solid];
m6_3004 -> m6_648  [key=2, style=dotted];
m6_3004 -> m6_825  [key=2, style=dotted];
m6_3005 -> m6_3006  [key=0, style=solid];
m6_3005 -> m6_77  [key=2, style=dotted];
m6_3006 -> m6_3002  [color=blue, key=0, style=bold];
m6_3482 -> m6_3483  [key=0, style=solid];
m6_3483 -> m6_3484  [key=0, style=solid];
m6_3483 -> m6_3487  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_3484 -> m6_3485  [key=0, style=solid];
m6_3484 -> m6_527  [key=2, style=dotted];
m6_3484 -> m6_3486  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_3485 -> m6_3482  [color=blue, key=0, style=bold];
m6_776 -> m6_777  [key=0, style=solid];
m6_777 -> m6_778  [key=0, style=solid];
m6_778 -> m6_779  [key=0, style=solid];
m6_778 -> m6_218  [key=2, style=dotted];
m6_778 -> m6_780  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_778 -> m6_781  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_779 -> m6_780  [key=0, style=solid];
m6_779 -> m6_77  [key=2, style=dotted];
m6_780 -> m6_781  [key=0, style=solid];
m6_780 -> m6_77  [key=2, style=dotted];
m6_781 -> m6_782  [key=0, style=solid];
m6_781 -> m6_77  [key=2, style=dotted];
m6_782 -> m6_776  [color=blue, key=0, style=bold];
m6_16 -> m6_17  [key=0, style=solid];
m6_17 -> m6_18  [key=0, style=solid];
m6_17 -> m6_75  [key=2, style=dotted];
m6_17 -> m6_19  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_17 -> m6_20  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_17 -> m6_21  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_17 -> m6_22  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_17 -> m6_23  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_17 -> m6_24  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_17 -> m6_25  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_17 -> m6_26  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_17 -> m6_28  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_17 -> m6_29  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_17 -> m6_30  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_17 -> m6_31  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_17 -> m6_32  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_17 -> m6_33  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_17 -> m6_34  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_17 -> m6_35  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_17 -> m6_36  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_17 -> m6_37  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_17 -> m6_38  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_17 -> m6_39  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_17 -> m6_40  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_17 -> m6_41  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_17 -> m6_42  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_17 -> m6_43  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_17 -> m6_44  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_17 -> m6_45  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_17 -> m6_46  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_17 -> m6_47  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_17 -> m6_48  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_17 -> m6_49  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_17 -> m6_50  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_17 -> m6_51  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_17 -> m6_52  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_17 -> m6_53  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_17 -> m6_54  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_17 -> m6_55  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_17 -> m6_56  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_17 -> m6_57  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_17 -> m6_58  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_17 -> m6_59  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_17 -> m6_60  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_17 -> m6_61  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_17 -> m6_63  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_17 -> m6_64  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_17 -> m6_65  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_17 -> m6_66  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_17 -> m6_68  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_17 -> m6_69  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_17 -> m6_70  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_17 -> m6_71  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_17 -> m6_72  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_17 -> m6_73  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_18 -> m6_19  [key=0, style=solid];
m6_18 -> m6_76  [key=2, style=dotted];
m6_18 -> m6_20  [color=darkseagreen4, key=1, label=customBinder, style=dashed];
m6_19 -> m6_20  [key=0, style=solid];
m6_20 -> m6_21  [key=0, style=solid];
m6_20 -> m6_77  [key=2, style=dotted];
m6_21 -> m6_22  [key=0, style=solid];
m6_22 -> m6_23  [key=0, style=solid];
m6_22 -> m6_77  [key=2, style=dotted];
m6_23 -> m6_24  [key=0, style=solid];
m6_24 -> m6_25  [key=0, style=solid];
m6_24 -> m6_77  [key=2, style=dotted];
m6_25 -> m6_26  [key=0, style=solid];
m6_25 -> m6_78  [key=2, style=dotted];
m6_26 -> m6_27  [key=0, style=solid];
m6_26 -> m6_78  [key=2, style=dotted];
m6_26 -> m6_77  [key=2, style=dotted];
m6_28 -> m6_29  [key=0, style=solid];
m6_29 -> m6_30  [key=0, style=solid];
m6_29 -> m6_77  [key=2, style=dotted];
m6_30 -> m6_31  [key=0, style=solid];
m6_30 -> m6_80  [key=2, style=dotted];
m6_30 -> m6_81  [key=2, style=dotted];
m6_31 -> m6_32  [key=0, style=solid];
m6_31 -> m6_77  [key=2, style=dotted];
m6_32 -> m6_33  [key=0, style=solid];
m6_32 -> m6_82  [key=2, style=dotted];
m6_33 -> m6_34  [key=0, style=solid];
m6_33 -> m6_83  [key=2, style=dotted];
m6_33 -> m6_77  [key=2, style=dotted];
m6_34 -> m6_35  [key=0, style=solid];
m6_35 -> m6_36  [key=0, style=solid];
m6_35 -> m6_77  [key=2, style=dotted];
m6_36 -> m6_37  [key=0, style=solid];
m6_37 -> m6_38  [key=0, style=solid];
m6_37 -> m6_77  [key=2, style=dotted];
m6_38 -> m6_39  [key=0, style=solid];
m6_39 -> m6_40  [key=0, style=solid];
m6_39 -> m6_77  [key=2, style=dotted];
m6_40 -> m6_41  [key=0, style=solid];
m6_41 -> m6_42  [key=0, style=solid];
m6_41 -> m6_77  [key=2, style=dotted];
m6_42 -> m6_43  [key=0, style=solid];
m6_43 -> m6_44  [key=0, style=solid];
m6_43 -> m6_77  [key=2, style=dotted];
m6_44 -> m6_45  [key=0, style=solid];
m6_45 -> m6_46  [key=0, style=solid];
m6_45 -> m6_77  [key=2, style=dotted];
m6_46 -> m6_47  [key=0, style=solid];
m6_47 -> m6_48  [key=0, style=solid];
m6_47 -> m6_77  [key=2, style=dotted];
m6_48 -> m6_49  [key=0, style=solid];
m6_49 -> m6_50  [key=0, style=solid];
m6_49 -> m6_77  [key=2, style=dotted];
m6_50 -> m6_51  [key=0, style=solid];
m6_51 -> m6_52  [key=0, style=solid];
m6_51 -> m6_77  [key=2, style=dotted];
m6_52 -> m6_53  [key=0, style=solid];
m6_53 -> m6_54  [key=0, style=solid];
m6_53 -> m6_77  [key=2, style=dotted];
m6_54 -> m6_55  [key=0, style=solid];
m6_55 -> m6_56  [key=0, style=solid];
m6_55 -> m6_77  [key=2, style=dotted];
m6_56 -> m6_57  [key=0, style=solid];
m6_57 -> m6_58  [key=0, style=solid];
m6_57 -> m6_77  [key=2, style=dotted];
m6_58 -> m6_59  [key=0, style=solid];
m6_59 -> m6_60  [key=0, style=solid];
m6_59 -> m6_77  [key=2, style=dotted];
m6_60 -> m6_61  [key=0, style=solid];
m6_61 -> m6_62  [key=0, style=solid];
m6_61 -> m6_77  [key=2, style=dotted];
m6_63 -> m6_64  [key=0, style=solid];
m6_64 -> m6_65  [key=0, style=solid];
m6_64 -> m6_77  [key=2, style=dotted];
m6_65 -> m6_66  [key=0, style=solid];
m6_66 -> m6_67  [key=0, style=solid];
m6_66 -> m6_77  [key=2, style=dotted];
m6_68 -> m6_69  [key=0, style=solid];
m6_69 -> m6_70  [key=0, style=solid];
m6_69 -> m6_77  [key=2, style=dotted];
m6_70 -> m6_71  [key=0, style=solid];
m6_71 -> m6_72  [key=0, style=solid];
m6_71 -> m6_77  [key=2, style=dotted];
m6_72 -> m6_73  [key=0, style=solid];
m6_73 -> m6_74  [key=0, style=solid];
m6_73 -> m6_77  [key=2, style=dotted];
m6_27 -> m6_28  [key=0, style=solid];
m6_27 -> m6_79  [key=2, style=dotted];
m6_27 -> m6_29  [color=darkseagreen4, key=1, label=resolver, style=dashed];
m6_62 -> m6_63  [key=0, style=solid];
m6_62 -> m6_84  [key=2, style=dotted];
m6_62 -> m6_64  [color=darkseagreen4, key=1, label=referenceResolver, style=dashed];
m6_67 -> m6_68  [key=0, style=solid];
m6_67 -> m6_85  [key=2, style=dotted];
m6_67 -> m6_69  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m6_74 -> m6_16  [color=blue, key=0, style=bold];
m6_2397 -> m6_2398  [key=0, style=solid];
m6_2398 -> m6_2399  [key=0, style=solid];
m6_2398 -> m6_2404  [key=2, style=dotted];
m6_2398 -> m6_2405  [key=2, style=dotted];
m6_2398 -> m6_1226  [key=2, style=dotted];
m6_2398 -> m6_2402  [color=darkseagreen4, key=1, label=response, style=dashed];
m6_2399 -> m6_2400  [key=0, style=solid];
m6_2399 -> m6_227  [key=2, style=dotted];
m6_2402 -> m6_2403  [key=0, style=solid];
m6_2402 -> m6_2406  [key=2, style=dotted];
m6_2402 -> m6_245  [key=2, style=dotted];
m6_2400 -> m6_2401  [key=0, style=solid];
m6_2400 -> m6_218  [key=2, style=dotted];
m6_2400 -> m6_2402  [color=darkseagreen4, key=1, label=deserializedResponse, style=dashed];
m6_2401 -> m6_2402  [key=0, style=solid];
m6_2401 -> m6_77  [key=2, style=dotted];
m6_2403 -> m6_2397  [color=blue, key=0, style=bold];
m6_2370 -> m6_2371  [key=0, style=solid];
m6_2371 -> m6_2372  [key=0, style=solid];
m6_2371 -> m6_1714  [key=2, style=dotted];
m6_2371 -> m6_4173  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable", style=dashed];
m6_2372 -> m6_2370  [color=blue, key=0, style=bold];
m6_3813 -> m6_3814  [key=0, style=solid];
m6_3814 -> m6_3813  [color=blue, key=0, style=bold];
m6_1497 -> m6_1498  [key=0, style=solid];
m6_1498 -> m6_1499  [key=0, style=solid];
m6_1498 -> m6_527  [key=2, style=dotted];
m6_1498 -> m6_1500  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_1499 -> m6_1497  [color=blue, key=0, style=bold];
m6_3621 -> m6_3622  [key=0, style=solid];
m6_3622 -> m6_3623  [key=0, style=solid];
m6_3622 -> m6_3  [key=2, style=dotted];
m6_3622 -> m6_596  [key=2, style=dotted];
m6_3622 -> m6_607  [key=2, style=dotted];
m6_3622 -> m6_608  [key=2, style=dotted];
m6_3623 -> m6_3624  [key=0, style=solid];
m6_3623 -> m6_145  [key=2, style=dotted];
m6_3623 -> m6_1110  [key=2, style=dotted];
m6_3624 -> m6_3625  [key=0, style=solid];
m6_3624 -> m6_77  [key=2, style=dotted];
m6_3625 -> m6_3621  [color=blue, key=0, style=bold];
m6_2436 -> m6_2437  [key=0, style=solid];
m6_2437 -> m6_2438  [key=0, style=solid];
m6_2437 -> m6_218  [key=2, style=dotted];
m6_2437 -> m6_2439  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_2438 -> m6_2439  [key=0, style=solid];
m6_2438 -> m6_77  [key=2, style=dotted];
m6_2439 -> m6_2440  [key=0, style=solid];
m6_2439 -> m6_77  [key=2, style=dotted];
m6_2440 -> m6_2436  [color=blue, key=0, style=bold];
m6_3797 -> m6_3798  [key=0, style=solid];
m6_3798 -> m6_3799  [key=0, style=solid];
m6_3798 -> m6_3  [key=2, style=dotted];
m6_3799 -> m6_3800  [key=0, style=solid];
m6_3799 -> m6_3788  [key=2, style=dotted];
m6_3800 -> m6_3801  [key=0, style=solid];
m6_3800 -> m6_227  [key=2, style=dotted];
m6_3801 -> m6_3802  [key=0, style=solid];
m6_3801 -> m6_77  [key=2, style=dotted];
m6_3802 -> m6_3797  [color=blue, key=0, style=bold];
m6_554 -> m6_555  [key=0, style=solid];
m6_555 -> m6_556  [key=0, style=solid];
m6_555 -> m6_557  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_555 -> m6_558  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_556 -> m6_557  [key=0, style=solid];
m6_556 -> m6_381  [key=2, style=dotted];
m6_557 -> m6_558  [key=0, style=solid];
m6_557 -> m6_562  [key=2, style=dotted];
m6_557 -> m6_563  [key=2, style=dotted];
m6_557 -> m6_564  [key=2, style=dotted];
m6_557 -> m6_560  [color=darkseagreen4, key=1, label=dataContractResult, style=dashed];
m6_558 -> m6_559  [key=0, style=solid];
m6_558 -> m6_218  [key=2, style=dotted];
m6_558 -> m6_560  [color=darkseagreen4, key=1, label=jsonNetResult, style=dashed];
m6_558 -> m6_558  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m6_560 -> m6_561  [key=0, style=solid];
m6_560 -> m6_77  [key=2, style=dotted];
m6_559 -> m6_560  [key=0, style=solid];
m6_559 -> m6_77  [key=2, style=dotted];
m6_561 -> m6_554  [color=blue, key=0, style=bold];
m6_2549 -> m6_2550  [key=0, style=solid];
m6_2550 -> m6_2551  [key=0, style=solid];
m6_2550 -> m6_2554  [key=2, style=dotted];
m6_2550 -> m6_596  [key=2, style=dotted];
m6_2551 -> m6_2552  [key=0, style=solid];
m6_2551 -> m6_227  [key=2, style=dotted];
m6_2552 -> m6_2553  [key=0, style=solid];
m6_2552 -> m6_77  [key=2, style=dotted];
m6_2553 -> m6_2549  [color=blue, key=0, style=bold];
m6_3289 -> m6_3290  [key=0, style=solid];
m6_3290 -> m6_3291  [key=0, style=solid];
m6_3290 -> m6_3292  [key=2, style=dotted];
m6_3291 -> m6_3289  [color=blue, key=0, style=bold];
m6_315 -> m6_316  [key=0, style=solid];
m6_316 -> m6_317  [key=0, style=solid];
m6_316 -> m6_320  [key=2, style=dotted];
m6_316 -> m6_316  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m6_317 -> m6_318  [key=0, style=solid];
m6_317 -> m6_217  [key=2, style=dotted];
m6_318 -> m6_319  [key=0, style=solid];
m6_318 -> m6_77  [key=2, style=dotted];
m6_319 -> m6_315  [color=blue, key=0, style=bold];
m6_432 -> m6_433  [key=0, style=solid];
m6_433 -> m6_434  [key=0, style=solid];
m6_433 -> m6_423  [key=2, style=dotted];
m6_433 -> m6_435  [color=darkseagreen4, key=1, label=dateValue, style=dashed];
m6_433 -> m6_444  [color=darkseagreen4, key=1, label=dateValue, style=dashed];
m6_434 -> m6_435  [key=0, style=solid];
m6_434 -> m6_258  [key=2, style=dotted];
m6_434 -> m6_436  [color=darkseagreen4, key=1, label=testDictionary, style=dashed];
m6_434 -> m6_439  [color=darkseagreen4, key=1, label=testDictionary, style=dashed];
m6_435 -> m6_436  [key=0, style=solid];
m6_444 -> m6_445  [key=0, style=solid];
m6_444 -> m6_77  [key=2, style=dotted];
m6_436 -> m6_437  [key=0, style=solid];
m6_436 -> m6_217  [key=2, style=dotted];
m6_436 -> m6_442  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m6_439 -> m6_440  [key=0, style=solid];
m6_439 -> m6_383  [key=2, style=dotted];
m6_437 -> m6_438  [key=0, style=solid];
m6_437 -> m6_380  [key=2, style=dotted];
m6_437 -> m6_439  [color=darkseagreen4, key=1, label=ms, style=dashed];
m6_437 -> m6_440  [color=darkseagreen4, key=1, label=ms, style=dashed];
m6_442 -> m6_443  [key=0, style=solid];
m6_442 -> m6_406  [key=2, style=dotted];
m6_438 -> m6_439  [key=0, style=solid];
m6_438 -> m6_381  [key=2, style=dotted];
m6_440 -> m6_441  [key=0, style=solid];
m6_440 -> m6_384  [key=2, style=dotted];
m6_441 -> m6_442  [key=0, style=solid];
m6_441 -> m6_385  [key=2, style=dotted];
m6_443 -> m6_444  [key=0, style=solid];
m6_445 -> m6_432  [color=blue, key=0, style=bold];
m6_3890 -> m6_3891  [key=0, style=solid];
m6_3891 -> m6_3892  [key=0, style=solid];
m6_3892 -> m6_3890  [color=blue, key=0, style=bold];
m6_2597 -> m6_2598  [key=0, style=solid];
m6_2598 -> m6_2599  [key=0, style=solid];
m6_2598 -> m6_1934  [key=2, style=dotted];
m6_2599 -> m6_2597  [color=blue, key=0, style=bold];
m6_1674 -> m6_1675  [key=0, style=solid];
m6_1675 -> m6_1676  [key=0, style=solid];
m6_1675 -> m6_1677  [key=2, style=dotted];
m6_1676 -> m6_1674  [color=blue, key=0, style=bold];
m6_1178 -> m6_1179  [key=0, style=solid];
m6_1179 -> m6_1180  [key=0, style=solid];
m6_1180 -> m6_1181  [key=0, style=solid];
m6_1180 -> m6_145  [key=2, style=dotted];
m6_1180 -> m6_856  [key=2, style=dotted];
m6_1180 -> m6_1182  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_1180 -> m6_1183  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_1180 -> m6_1184  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_1180 -> m6_1185  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_1180 -> m6_1186  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_1180 -> m6_1187  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_1180 -> m6_1188  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_1180 -> m6_1189  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_1180 -> m6_1190  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_1181 -> m6_1182  [key=0, style=solid];
m6_1181 -> m6_77  [key=2, style=dotted];
m6_1182 -> m6_1183  [key=0, style=solid];
m6_1182 -> m6_77  [key=2, style=dotted];
m6_1183 -> m6_1184  [key=0, style=solid];
m6_1183 -> m6_77  [key=2, style=dotted];
m6_1184 -> m6_1185  [key=0, style=solid];
m6_1184 -> m6_77  [key=2, style=dotted];
m6_1185 -> m6_1186  [key=0, style=solid];
m6_1185 -> m6_77  [key=2, style=dotted];
m6_1186 -> m6_1187  [key=0, style=solid];
m6_1186 -> m6_1192  [key=2, style=dotted];
m6_1186 -> m6_77  [key=2, style=dotted];
m6_1187 -> m6_1188  [key=0, style=solid];
m6_1187 -> m6_1192  [key=2, style=dotted];
m6_1187 -> m6_77  [key=2, style=dotted];
m6_1188 -> m6_1189  [key=0, style=solid];
m6_1188 -> m6_77  [key=2, style=dotted];
m6_1189 -> m6_1190  [key=0, style=solid];
m6_1189 -> m6_77  [key=2, style=dotted];
m6_1190 -> m6_1191  [key=0, style=solid];
m6_1190 -> m6_1068  [key=2, style=dotted];
m6_1191 -> m6_1178  [color=blue, key=0, style=bold];
m6_915 -> m6_916  [key=0, style=solid];
m6_916 -> m6_917  [key=0, style=solid];
m6_916 -> m6_921  [key=2, style=dotted];
m6_916 -> m6_922  [key=2, style=dotted];
m6_916 -> m6_918  [color=darkseagreen4, key=1, label=personRaw, style=dashed];
m6_917 -> m6_918  [key=0, style=solid];
m6_918 -> m6_919  [key=0, style=solid];
m6_918 -> m6_217  [key=2, style=dotted];
m6_919 -> m6_920  [key=0, style=solid];
m6_919 -> m6_77  [key=2, style=dotted];
m6_920 -> m6_915  [color=blue, key=0, style=bold];
m6_3349 -> m6_3350  [key=0, style=solid];
m6_3350 -> m6_3351  [key=0, style=solid];
m6_3351 -> m6_3349  [color=blue, key=0, style=bold];
m6_354 -> m6_355  [key=0, style=solid];
m6_355 -> m6_356  [key=0, style=solid];
m6_355 -> m6_363  [key=2, style=dotted];
m6_355 -> m6_357  [color=darkseagreen4, key=1, label=baseWith, style=dashed];
m6_355 -> m6_358  [color=darkseagreen4, key=1, label=baseWith, style=dashed];
m6_355 -> m6_359  [color=darkseagreen4, key=1, label=baseWith, style=dashed];
m6_355 -> m6_360  [color=darkseagreen4, key=1, label=baseWith, style=dashed];
m6_355 -> m6_355  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m6_356 -> m6_357  [key=0, style=solid];
m6_357 -> m6_358  [key=0, style=solid];
m6_358 -> m6_359  [key=0, style=solid];
m6_359 -> m6_360  [key=0, style=solid];
m6_360 -> m6_361  [key=0, style=solid];
m6_360 -> m6_331  [key=2, style=dotted];
m6_361 -> m6_362  [key=0, style=solid];
m6_361 -> m6_77  [key=2, style=dotted];
m6_362 -> m6_354  [color=blue, key=0, style=bold];
m6_1939 -> m6_1940  [key=0, style=solid];
m6_1939 -> m6_1942  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_1939 -> m6_1943  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_1940 -> m6_1941  [key=0, style=solid];
m6_1940 -> m6_1942  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_1942 -> m6_1944  [key=0, style=solid];
m6_1942 -> m6_1945  [key=2, style=dotted];
m6_1942 -> m6_1929  [key=2, style=dotted];
m6_1943 -> m6_1944  [key=0, style=solid];
m6_1943 -> m6_1930  [key=2, style=dotted];
m6_1941 -> m6_1942  [key=0, style=solid];
m6_1941 -> m6_1943  [key=0, style=solid];
m6_1944 -> m6_1939  [color=blue, key=0, style=bold];
m6_1648 -> m6_1649  [key=0, style=solid];
m6_1649 -> m6_1650  [key=0, style=solid];
m6_1649 -> m6_1651  [key=2, style=dotted];
m6_1650 -> m6_1648  [color=blue, key=0, style=bold];
m6_3402 -> m6_3403  [key=0, style=solid];
m6_3403 -> m6_3404  [key=0, style=solid];
m6_3403 -> m6_3  [key=2, style=dotted];
m6_3404 -> m6_3405  [key=0, style=solid];
m6_3404 -> m6_258  [key=2, style=dotted];
m6_3405 -> m6_3406  [key=0, style=solid];
m6_3406 -> m6_3407  [key=0, style=solid];
m6_3406 -> m6_553  [key=2, style=dotted];
m6_3407 -> m6_3408  [key=0, style=solid];
m6_3407 -> m6_3414  [key=2, style=dotted];
m6_3407 -> m6_258  [key=2, style=dotted];
m6_3408 -> m6_3409  [key=0, style=solid];
m6_3408 -> m6_553  [key=2, style=dotted];
m6_3409 -> m6_3410  [key=0, style=solid];
m6_3409 -> m6_553  [key=2, style=dotted];
m6_3410 -> m6_3411  [key=0, style=solid];
m6_3410 -> m6_553  [key=2, style=dotted];
m6_3411 -> m6_3412  [key=0, style=solid];
m6_3411 -> m6_3414  [key=2, style=dotted];
m6_3411 -> m6_258  [key=2, style=dotted];
m6_3412 -> m6_3413  [key=0, style=solid];
m6_3412 -> m6_3414  [key=2, style=dotted];
m6_3412 -> m6_258  [key=2, style=dotted];
m6_3413 -> m6_3402  [color=blue, key=0, style=bold];
m6_3899 -> m6_3900  [key=0, style=solid];
m6_3900 -> m6_3901  [key=0, style=solid];
m6_3901 -> m6_3899  [color=blue, key=0, style=bold];
m6_2764 -> m6_2765  [key=0, style=solid];
m6_2765 -> m6_2766  [key=0, style=solid];
m6_2765 -> m6_2769  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_2766 -> m6_2767  [key=0, style=solid];
m6_2766 -> m6_527  [key=2, style=dotted];
m6_2766 -> m6_2768  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_2767 -> m6_2764  [color=blue, key=0, style=bold];
m6_276 -> m6_277  [key=0, style=solid];
m6_277 -> m6_278  [key=0, style=solid];
m6_277 -> m6_218  [key=2, style=dotted];
m6_277 -> m6_279  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_277 -> m6_280  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_277 -> m6_277  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m6_278 -> m6_279  [key=0, style=solid];
m6_278 -> m6_77  [key=2, style=dotted];
m6_279 -> m6_280  [key=0, style=solid];
m6_279 -> m6_77  [key=2, style=dotted];
m6_280 -> m6_281  [key=0, style=solid];
m6_280 -> m6_77  [key=2, style=dotted];
m6_281 -> m6_276  [color=blue, key=0, style=bold];
m6_3231 -> m6_3232  [key=0, style=solid];
m6_3232 -> m6_3233  [key=0, style=solid];
m6_3232 -> m6_3239  [key=2, style=dotted];
m6_3233 -> m6_3234  [key=0, style=solid];
m6_3233 -> m6_227  [key=2, style=dotted];
m6_3234 -> m6_3235  [key=0, style=solid];
m6_3234 -> m6_77  [key=2, style=dotted];
m6_3235 -> m6_3236  [key=0, style=solid];
m6_3235 -> m6_3240  [key=2, style=dotted];
m6_3236 -> m6_3237  [key=0, style=solid];
m6_3236 -> m6_227  [key=2, style=dotted];
m6_3237 -> m6_3238  [key=0, style=solid];
m6_3237 -> m6_77  [key=2, style=dotted];
m6_3238 -> m6_3231  [color=blue, key=0, style=bold];
m6_344 -> m6_345  [key=0, style=solid];
m6_344 -> m6_344  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m6_345 -> m6_346  [key=0, style=solid];
m6_345 -> m6_353  [key=2, style=dotted];
m6_345 -> m6_347  [color=darkseagreen4, key=1, label=baseWith, style=dashed];
m6_345 -> m6_348  [color=darkseagreen4, key=1, label=baseWith, style=dashed];
m6_345 -> m6_349  [color=darkseagreen4, key=1, label=baseWith, style=dashed];
m6_345 -> m6_350  [color=darkseagreen4, key=1, label=baseWith, style=dashed];
m6_346 -> m6_347  [key=0, style=solid];
m6_347 -> m6_348  [key=0, style=solid];
m6_348 -> m6_349  [key=0, style=solid];
m6_349 -> m6_350  [key=0, style=solid];
m6_350 -> m6_351  [key=0, style=solid];
m6_350 -> m6_331  [key=2, style=dotted];
m6_351 -> m6_352  [key=0, style=solid];
m6_351 -> m6_77  [key=2, style=dotted];
m6_352 -> m6_344  [color=blue, key=0, style=bold];
m6_2191 -> m6_2192  [key=0, style=solid];
m6_2192 -> m6_2193  [key=0, style=solid];
m6_2193 -> m6_2191  [color=blue, key=0, style=bold];
m6_2271 -> m6_2272  [key=0, style=solid];
m6_2272 -> m6_2273  [key=0, style=solid];
m6_2272 -> m6_218  [key=2, style=dotted];
m6_2273 -> m6_2274  [key=0, style=solid];
m6_2273 -> m6_2270  [key=2, style=dotted];
m6_2273 -> m6_423  [key=2, style=dotted];
m6_2273 -> m6_608  [key=2, style=dotted];
m6_2273 -> m6_77  [key=2, style=dotted];
m6_2274 -> m6_2271  [color=blue, key=0, style=bold];
m6_2495 -> m6_2496  [key=0, style=solid];
m6_2496 -> m6_2497  [key=0, style=solid];
m6_2497 -> m6_2498  [key=0, style=solid];
m6_2497 -> m6_218  [key=2, style=dotted];
m6_2497 -> m6_2499  [color=darkseagreen4, key=1, label=commentTestClass, style=dashed];
m6_2497 -> m6_2500  [color=darkseagreen4, key=1, label=commentTestClass, style=dashed];
m6_2498 -> m6_2499  [key=0, style=solid];
m6_2498 -> m6_77  [key=2, style=dotted];
m6_2499 -> m6_2500  [key=0, style=solid];
m6_2499 -> m6_77  [key=2, style=dotted];
m6_2500 -> m6_2501  [key=0, style=solid];
m6_2500 -> m6_77  [key=2, style=dotted];
m6_2501 -> m6_2495  [color=blue, key=0, style=bold];
m6_1858 -> m6_1859  [key=0, style=solid];
m6_1859 -> m6_1858  [color=blue, key=0, style=bold];
m6_1299 -> m6_1300  [key=0, style=solid];
m6_1300 -> m6_1301  [key=0, style=solid];
m6_1301 -> m6_1302  [key=0, style=solid];
m6_1301 -> m6_218  [key=2, style=dotted];
m6_1302 -> m6_1303  [key=0, style=solid];
m6_1302 -> m6_77  [key=2, style=dotted];
m6_1303 -> m6_1299  [color=blue, key=0, style=bold];
m6_601 -> m6_602  [key=0, style=solid];
m6_602 -> m6_603  [key=0, style=solid];
m6_602 -> m6_3  [key=2, style=dotted];
m6_602 -> m6_606  [key=2, style=dotted];
m6_602 -> m6_596  [key=2, style=dotted];
m6_602 -> m6_607  [key=2, style=dotted];
m6_602 -> m6_608  [key=2, style=dotted];
m6_603 -> m6_604  [key=0, style=solid];
m6_603 -> m6_217  [key=2, style=dotted];
m6_604 -> m6_605  [key=0, style=solid];
m6_604 -> m6_77  [key=2, style=dotted];
m6_605 -> m6_601  [color=blue, key=0, style=bold];
m6_2974 -> m6_2975  [key=0, style=solid];
m6_2975 -> m6_2976  [key=0, style=solid];
m6_2975 -> m6_527  [key=2, style=dotted];
m6_2975 -> m6_2977  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_2976 -> m6_2974  [color=blue, key=0, style=bold];
m6_3206 -> m6_3214  [key=0, style=solid];
m6_3214 -> m6_3215  [key=0, style=solid];
m6_3214 -> m6_665  [key=2, style=dotted];
m6_3214 -> m6_666  [key=2, style=dotted];
m6_3214 -> m6_3217  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_3215 -> m6_3216  [key=0, style=solid];
m6_3215 -> m6_75  [key=2, style=dotted];
m6_3215 -> m6_3217  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_3217 -> m6_3218  [key=0, style=solid];
m6_3217 -> m6_667  [key=2, style=dotted];
m6_3216 -> m6_3217  [key=0, style=solid];
m6_3216 -> m6_3213  [key=2, style=dotted];
m6_3218 -> m6_3206  [color=blue, key=0, style=bold];
m6_2926 -> m6_2927  [key=0, style=solid];
m6_2927 -> m6_2928  [key=0, style=solid];
m6_2927 -> m6_2936  [key=2, style=dotted];
m6_2927 -> m6_217  [key=2, style=dotted];
m6_2927 -> m6_2929  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_2928 -> m6_2929  [key=0, style=solid];
m6_2928 -> m6_77  [key=2, style=dotted];
m6_2929 -> m6_2930  [key=0, style=solid];
m6_2929 -> m6_218  [key=2, style=dotted];
m6_2930 -> m6_2931  [key=0, style=solid];
m6_2930 -> m6_77  [key=2, style=dotted];
m6_2931 -> m6_2932  [key=0, style=solid];
m6_2931 -> m6_2936  [key=2, style=dotted];
m6_2931 -> m6_217  [key=2, style=dotted];
m6_2931 -> m6_2933  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_2932 -> m6_2933  [key=0, style=solid];
m6_2932 -> m6_77  [key=2, style=dotted];
m6_2933 -> m6_2934  [key=0, style=solid];
m6_2933 -> m6_218  [key=2, style=dotted];
m6_2934 -> m6_2935  [key=0, style=solid];
m6_2934 -> m6_77  [key=2, style=dotted];
m6_2935 -> m6_2926  [color=blue, key=0, style=bold];
m6_2407 -> m6_2408  [key=0, style=solid];
m6_2408 -> m6_2407  [color=blue, key=0, style=bold];
m6_3738 -> m6_3739  [key=0, style=solid];
m6_3739 -> m6_3740  [key=0, style=solid];
m6_3739 -> m6_218  [key=2, style=dotted];
m6_3739 -> m6_3741  [color=darkseagreen4, key=1, label=list, style=dashed];
m6_3739 -> m6_3742  [color=darkseagreen4, key=1, label=list, style=dashed];
m6_3739 -> m6_3743  [color=darkseagreen4, key=1, label=list, style=dashed];
m6_3740 -> m6_3741  [key=0, style=solid];
m6_3740 -> m6_77  [key=2, style=dotted];
m6_3741 -> m6_3742  [key=0, style=solid];
m6_3741 -> m6_1192  [key=2, style=dotted];
m6_3741 -> m6_77  [key=2, style=dotted];
m6_3742 -> m6_3743  [key=0, style=solid];
m6_3742 -> m6_1192  [key=2, style=dotted];
m6_3742 -> m6_77  [key=2, style=dotted];
m6_3743 -> m6_3744  [key=0, style=solid];
m6_3743 -> m6_1192  [key=2, style=dotted];
m6_3743 -> m6_77  [key=2, style=dotted];
m6_3744 -> m6_3738  [color=blue, key=0, style=bold];
m6_609 -> m6_610  [key=0, style=solid];
m6_610 -> m6_611  [key=0, style=solid];
m6_610 -> m6_3  [key=2, style=dotted];
m6_610 -> m6_606  [key=2, style=dotted];
m6_610 -> m6_596  [key=2, style=dotted];
m6_610 -> m6_607  [key=2, style=dotted];
m6_610 -> m6_608  [key=2, style=dotted];
m6_611 -> m6_612  [key=0, style=solid];
m6_611 -> m6_145  [key=2, style=dotted];
m6_611 -> m6_600  [key=2, style=dotted];
m6_612 -> m6_613  [key=0, style=solid];
m6_612 -> m6_77  [key=2, style=dotted];
m6_613 -> m6_609  [color=blue, key=0, style=bold];
m6_3715 -> m6_3716  [key=0, style=solid];
m6_3716 -> m6_3717  [key=0, style=solid];
m6_3716 -> m6_3719  [key=2, style=dotted];
m6_3716 -> m6_145  [key=2, style=dotted];
m6_3716 -> m6_1420  [key=2, style=dotted];
m6_3716 -> m6_1110  [key=2, style=dotted];
m6_3717 -> m6_3718  [key=0, style=solid];
m6_3717 -> m6_77  [key=2, style=dotted];
m6_3718 -> m6_3715  [color=blue, key=0, style=bold];
m6_2892 -> m6_2893  [key=0, style=solid];
m6_2893 -> m6_2894  [key=0, style=solid];
m6_2893 -> m6_527  [key=2, style=dotted];
m6_2893 -> m6_2895  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_2894 -> m6_2892  [color=blue, key=0, style=bold];
m6_2479 -> m6_2480  [key=0, style=solid];
m6_2480 -> m6_2481  [key=0, style=solid];
m6_2480 -> m6_527  [key=2, style=dotted];
m6_2480 -> m6_2482  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_2481 -> m6_2479  [color=blue, key=0, style=bold];
m6_1678 -> m6_1679  [key=0, style=solid];
m6_1679 -> m6_1680  [key=0, style=solid];
m6_1679 -> m6_1621  [key=2, style=dotted];
m6_1679 -> m6_1681  [color=darkseagreen4, key=1, label=modelStateDictionary, style=dashed];
m6_1680 -> m6_1681  [key=0, style=solid];
m6_1680 -> m6_1633  [key=2, style=dotted];
m6_1681 -> m6_1682  [key=0, style=solid];
m6_1681 -> m6_217  [key=2, style=dotted];
m6_1681 -> m6_1683  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1682 -> m6_1683  [key=0, style=solid];
m6_1682 -> m6_77  [key=2, style=dotted];
m6_1683 -> m6_1684  [key=0, style=solid];
m6_1683 -> m6_218  [key=2, style=dotted];
m6_1683 -> m6_1685  [color=darkseagreen4, key=1, label=newModelStateDictionary, style=dashed];
m6_1684 -> m6_1685  [key=0, style=solid];
m6_1684 -> m6_77  [key=2, style=dotted];
m6_1685 -> m6_1686  [key=0, style=solid];
m6_1685 -> m6_77  [key=2, style=dotted];
m6_1686 -> m6_1678  [color=blue, key=0, style=bold];
m6_3818 -> m6_3819  [key=0, style=solid];
m6_3819 -> m6_3820  [key=0, style=solid];
m6_3819 -> m6_218  [key=2, style=dotted];
m6_3819 -> m6_3821  [color=darkseagreen4, key=1, label=list, style=dashed];
m6_3819 -> m6_3822  [color=darkseagreen4, key=1, label=list, style=dashed];
m6_3819 -> m6_3823  [color=darkseagreen4, key=1, label=list, style=dashed];
m6_3820 -> m6_3821  [key=0, style=solid];
m6_3820 -> m6_77  [key=2, style=dotted];
m6_3821 -> m6_3822  [key=0, style=solid];
m6_3821 -> m6_77  [key=2, style=dotted];
m6_3822 -> m6_3823  [key=0, style=solid];
m6_3822 -> m6_77  [key=2, style=dotted];
m6_3823 -> m6_3824  [key=0, style=solid];
m6_3823 -> m6_77  [key=2, style=dotted];
m6_3824 -> m6_3818  [color=blue, key=0, style=bold];
m6_4111 -> m6_4117  [key=0, style=solid];
m6_4111 -> m6_4118  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_4111 -> m6_4121  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_4111 -> m6_4125  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_4117 -> m6_4118  [key=0, style=solid];
m6_4117 -> m6_4128  [key=0, style=solid];
m6_4118 -> m6_4119  [key=0, style=solid];
m6_4118 -> m6_4131  [key=2, style=dotted];
m6_4118 -> m6_4120  [color=darkseagreen4, key=1, label=fractionIndex, style=dashed];
m6_4118 -> m6_4125  [color=darkseagreen4, key=1, label=fractionIndex, style=dashed];
m6_4121 -> m6_4122  [key=0, style=solid];
m6_4121 -> m6_4128  [key=0, style=solid];
m6_4121 -> m6_4132  [key=2, style=dotted];
m6_4125 -> m6_4126  [key=0, style=solid];
m6_4125 -> m6_4128  [key=0, style=solid];
m6_4125 -> m6_4133  [key=2, style=dotted];
m6_4125 -> m6_4132  [key=2, style=dotted];
m6_4125 -> m6_4134  [key=2, style=dotted];
m6_4128 -> m6_4129  [key=0, style=solid];
m6_4128 -> m6_4130  [color=darkseagreen4, key=1, label="out Newtonsoft.Json.Tests.Serialization.Ratio", style=dashed];
m6_4119 -> m6_4120  [key=0, style=solid];
m6_4120 -> m6_4121  [key=0, style=solid];
m6_4120 -> m6_4124  [key=0, style=solid];
m6_4124 -> m6_4125  [key=0, style=solid];
m6_4122 -> m6_4123  [key=0, style=solid];
m6_4122 -> m6_216  [key=2, style=dotted];
m6_4123 -> m6_4130  [key=0, style=solid];
m6_4126 -> m6_4127  [key=0, style=solid];
m6_4126 -> m6_216  [key=2, style=dotted];
m6_4127 -> m6_4130  [key=0, style=solid];
m6_4129 -> m6_4130  [key=0, style=solid];
m6_4130 -> m6_4111  [color=blue, key=0, style=bold];
m6_2670 -> m6_2671  [key=0, style=solid];
m6_2671 -> m6_2672  [key=0, style=solid];
m6_2671 -> m6_218  [key=2, style=dotted];
m6_2672 -> m6_2673  [key=0, style=solid];
m6_2672 -> m6_77  [key=2, style=dotted];
m6_2673 -> m6_2670  [color=blue, key=0, style=bold];
m6_1989 -> m6_1990  [key=0, style=solid];
m6_1990 -> m6_1991  [key=0, style=solid];
m6_1990 -> m6_596  [key=2, style=dotted];
m6_1990 -> m6_1992  [color=darkseagreen4, key=1, label=dateTime, style=dashed];
m6_1990 -> m6_1993  [color=darkseagreen4, key=1, label=dateTime, style=dashed];
m6_1991 -> m6_1992  [key=0, style=solid];
m6_1991 -> m6_3  [key=2, style=dotted];
m6_1991 -> m6_1993  [color=darkseagreen4, key=1, label=list, style=dashed];
m6_1991 -> m6_1994  [color=darkseagreen4, key=1, label=list, style=dashed];
m6_1992 -> m6_1993  [key=0, style=solid];
m6_1992 -> m6_1988  [key=2, style=dotted];
m6_1992 -> m6_2003  [key=2, style=dotted];
m6_1992 -> m6_545  [key=2, style=dotted];
m6_1993 -> m6_1994  [key=0, style=solid];
m6_1993 -> m6_1988  [key=2, style=dotted];
m6_1993 -> m6_2003  [key=2, style=dotted];
m6_1993 -> m6_545  [key=2, style=dotted];
m6_1994 -> m6_1995  [key=0, style=solid];
m6_1994 -> m6_227  [key=2, style=dotted];
m6_1994 -> m6_1996  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1995 -> m6_1996  [key=0, style=solid];
m6_1995 -> m6_77  [key=2, style=dotted];
m6_1996 -> m6_1997  [key=0, style=solid];
m6_1996 -> m6_218  [key=2, style=dotted];
m6_1996 -> m6_1998  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_1996 -> m6_1999  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_1996 -> m6_2000  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_1996 -> m6_2001  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_1997 -> m6_1998  [key=0, style=solid];
m6_1997 -> m6_77  [key=2, style=dotted];
m6_1998 -> m6_1999  [key=0, style=solid];
m6_1998 -> m6_77  [key=2, style=dotted];
m6_1999 -> m6_2000  [key=0, style=solid];
m6_1999 -> m6_77  [key=2, style=dotted];
m6_2000 -> m6_2001  [key=0, style=solid];
m6_2000 -> m6_77  [key=2, style=dotted];
m6_2001 -> m6_2002  [key=0, style=solid];
m6_2001 -> m6_77  [key=2, style=dotted];
m6_2002 -> m6_1989  [color=blue, key=0, style=bold];
m6_3470 -> m6_3471  [key=0, style=solid];
m6_3471 -> m6_3472  [key=0, style=solid];
m6_3471 -> m6_3480  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_3472 -> m6_3473  [key=0, style=solid];
m6_3472 -> m6_218  [key=2, style=dotted];
m6_3472 -> m6_3474  [color=darkseagreen4, key=1, label=aa, style=dashed];
m6_3472 -> m6_3475  [color=darkseagreen4, key=1, label=aa, style=dashed];
m6_3472 -> m6_3476  [color=darkseagreen4, key=1, label=aa, style=dashed];
m6_3472 -> m6_3477  [color=darkseagreen4, key=1, label=aa, style=dashed];
m6_3472 -> m6_3478  [color=darkseagreen4, key=1, label=aa, style=dashed];
m6_3472 -> m6_3479  [color=darkseagreen4, key=1, label=aa, style=dashed];
m6_3480 -> m6_3481  [key=0, style=solid];
m6_3480 -> m6_77  [key=2, style=dotted];
m6_3473 -> m6_3474  [key=0, style=solid];
m6_3473 -> m6_77  [key=2, style=dotted];
m6_3474 -> m6_3475  [key=0, style=solid];
m6_3474 -> m6_77  [key=2, style=dotted];
m6_3475 -> m6_3476  [key=0, style=solid];
m6_3475 -> m6_3469  [key=2, style=dotted];
m6_3475 -> m6_77  [key=2, style=dotted];
m6_3476 -> m6_3477  [key=0, style=solid];
m6_3476 -> m6_3469  [key=2, style=dotted];
m6_3476 -> m6_77  [key=2, style=dotted];
m6_3477 -> m6_3478  [key=0, style=solid];
m6_3477 -> m6_77  [key=2, style=dotted];
m6_3478 -> m6_3479  [key=0, style=solid];
m6_3478 -> m6_77  [key=2, style=dotted];
m6_3479 -> m6_3480  [key=0, style=solid];
m6_3479 -> m6_217  [key=2, style=dotted];
m6_3481 -> m6_3470  [color=blue, key=0, style=bold];
m6_3825 -> m6_3826  [key=0, style=solid];
m6_3826 -> m6_3827  [key=0, style=solid];
m6_3826 -> m6_218  [key=2, style=dotted];
m6_3826 -> m6_3829  [color=darkseagreen4, key=1, label=d, style=dashed];
m6_3827 -> m6_3828  [key=0, style=solid];
m6_3827 -> m6_77  [key=2, style=dotted];
m6_3829 -> m6_3830  [key=0, style=solid];
m6_3829 -> m6_77  [key=2, style=dotted];
m6_3828 -> m6_3829  [key=0, style=solid];
m6_3828 -> m6_3831  [key=2, style=dotted];
m6_3830 -> m6_3825  [color=blue, key=0, style=bold];
m6_3330 -> m6_3331  [key=0, style=solid];
m6_3331 -> m6_3332  [key=0, style=solid];
m6_3331 -> m6_3  [key=2, style=dotted];
m6_3332 -> m6_3330  [color=blue, key=0, style=bold];
m6_3293 -> m6_3294  [key=0, style=solid];
m6_3294 -> m6_3295  [key=0, style=solid];
m6_3295 -> m6_3293  [color=blue, key=0, style=bold];
m6_2526 -> m6_2527  [key=0, style=solid];
m6_2527 -> m6_2528  [key=0, style=solid];
m6_2527 -> m6_2525  [key=2, style=dotted];
m6_2527 -> m6_2530  [color=darkseagreen4, key=1, label=cc, style=dashed];
m6_2528 -> m6_2529  [key=0, style=solid];
m6_2528 -> m6_2534  [key=2, style=dotted];
m6_2528 -> m6_2530  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_2530 -> m6_2531  [key=0, style=solid];
m6_2530 -> m6_383  [key=2, style=dotted];
m6_2529 -> m6_2530  [key=0, style=solid];
m6_2529 -> m6_380  [key=2, style=dotted];
m6_2529 -> m6_2531  [color=darkseagreen4, key=1, label=ms, style=dashed];
m6_2531 -> m6_2532  [key=0, style=solid];
m6_2531 -> m6_384  [key=2, style=dotted];
m6_2531 -> m6_2535  [key=2, style=dotted];
m6_2531 -> m6_385  [key=2, style=dotted];
m6_2532 -> m6_2533  [key=0, style=solid];
m6_2532 -> m6_343  [key=2, style=dotted];
m6_2533 -> m6_2526  [color=blue, key=0, style=bold];
m6_3720 -> m6_3721  [key=0, style=solid];
m6_3721 -> m6_3722  [key=0, style=solid];
m6_3721 -> m6_218  [key=2, style=dotted];
m6_3721 -> m6_3723  [color=darkseagreen4, key=1, label=l, style=dashed];
m6_3721 -> m6_3724  [color=darkseagreen4, key=1, label=l, style=dashed];
m6_3722 -> m6_3723  [key=0, style=solid];
m6_3722 -> m6_382  [key=2, style=dotted];
m6_3722 -> m6_77  [key=2, style=dotted];
m6_3723 -> m6_3724  [key=0, style=solid];
m6_3723 -> m6_77  [key=2, style=dotted];
m6_3724 -> m6_3725  [key=0, style=solid];
m6_3724 -> m6_77  [key=2, style=dotted];
m6_3725 -> m6_3720  [color=blue, key=0, style=bold];
m6_2536 -> m6_2537  [key=0, style=solid];
m6_2537 -> m6_2538  [key=0, style=solid];
m6_2537 -> m6_2541  [key=2, style=dotted];
m6_2538 -> m6_2539  [key=0, style=solid];
m6_2538 -> m6_217  [key=2, style=dotted];
m6_2539 -> m6_2540  [key=0, style=solid];
m6_2539 -> m6_77  [key=2, style=dotted];
m6_2540 -> m6_2536  [color=blue, key=0, style=bold];
m6_1439 -> m6_1440  [key=0, style=solid];
m6_1440 -> m6_1441  [key=0, style=solid];
m6_1440 -> m6_3  [key=2, style=dotted];
m6_1440 -> m6_1442  [color=darkseagreen4, key=1, label=strings, style=dashed];
m6_1440 -> m6_1443  [color=darkseagreen4, key=1, label=strings, style=dashed];
m6_1440 -> m6_1444  [color=darkseagreen4, key=1, label=strings, style=dashed];
m6_1441 -> m6_1442  [key=0, style=solid];
m6_1441 -> m6_545  [key=2, style=dotted];
m6_1442 -> m6_1443  [key=0, style=solid];
m6_1442 -> m6_545  [key=2, style=dotted];
m6_1443 -> m6_1444  [key=0, style=solid];
m6_1443 -> m6_545  [key=2, style=dotted];
m6_1444 -> m6_1445  [key=0, style=solid];
m6_1444 -> m6_217  [key=2, style=dotted];
m6_1445 -> m6_1446  [key=0, style=solid];
m6_1445 -> m6_77  [key=2, style=dotted];
m6_1446 -> m6_1439  [color=blue, key=0, style=bold];
m6_1447 -> m6_1448  [key=0, style=solid];
m6_1448 -> m6_1449  [key=0, style=solid];
m6_1448 -> m6_1455  [key=2, style=dotted];
m6_1449 -> m6_1450  [key=0, style=solid];
m6_1449 -> m6_227  [key=2, style=dotted];
m6_1449 -> m6_1451  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1450 -> m6_1451  [key=0, style=solid];
m6_1450 -> m6_77  [key=2, style=dotted];
m6_1451 -> m6_1452  [key=0, style=solid];
m6_1451 -> m6_218  [key=2, style=dotted];
m6_1451 -> m6_1453  [color=darkseagreen4, key=1, label=c2, style=dashed];
m6_1452 -> m6_1453  [key=0, style=solid];
m6_1452 -> m6_77  [key=2, style=dotted];
m6_1453 -> m6_1454  [key=0, style=solid];
m6_1453 -> m6_77  [key=2, style=dotted];
m6_1454 -> m6_1447  [color=blue, key=0, style=bold];
m6_2937 -> m6_2938  [key=0, style=solid];
m6_2938 -> m6_2939  [key=0, style=solid];
m6_2938 -> m6_2943  [key=2, style=dotted];
m6_2938 -> m6_2944  [key=2, style=dotted];
m6_2938 -> m6_217  [key=2, style=dotted];
m6_2939 -> m6_2940  [key=0, style=solid];
m6_2939 -> m6_77  [key=2, style=dotted];
m6_2940 -> m6_2941  [key=0, style=solid];
m6_2940 -> m6_218  [key=2, style=dotted];
m6_2941 -> m6_2942  [key=0, style=solid];
m6_2941 -> m6_2944  [key=2, style=dotted];
m6_2941 -> m6_77  [key=2, style=dotted];
m6_2942 -> m6_2937  [color=blue, key=0, style=bold];
m6_3140 -> m6_3141  [key=0, style=solid];
m6_3141 -> m6_3142  [key=0, style=solid];
m6_3141 -> m6_3148  [key=2, style=dotted];
m6_3142 -> m6_3143  [key=0, style=solid];
m6_3142 -> m6_218  [key=2, style=dotted];
m6_3142 -> m6_3144  [color=darkseagreen4, key=1, label=c2, style=dashed];
m6_3142 -> m6_3145  [color=darkseagreen4, key=1, label=c2, style=dashed];
m6_3142 -> m6_3146  [color=darkseagreen4, key=1, label=c2, style=dashed];
m6_3143 -> m6_3144  [key=0, style=solid];
m6_3143 -> m6_1068  [key=2, style=dotted];
m6_3144 -> m6_3145  [key=0, style=solid];
m6_3144 -> m6_77  [key=2, style=dotted];
m6_3145 -> m6_3146  [key=0, style=solid];
m6_3145 -> m6_77  [key=2, style=dotted];
m6_3146 -> m6_3147  [key=0, style=solid];
m6_3146 -> m6_77  [key=2, style=dotted];
m6_3147 -> m6_3140  [color=blue, key=0, style=bold];
m6_3007 -> m6_3008  [key=0, style=solid];
m6_3008 -> m6_3009  [key=0, style=solid];
m6_3008 -> m6_145  [key=2, style=dotted];
m6_3008 -> m6_856  [key=2, style=dotted];
m6_3008 -> m6_3010  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_3008 -> m6_3011  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_3008 -> m6_3012  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_3009 -> m6_3010  [key=0, style=solid];
m6_3009 -> m6_3019  [key=2, style=dotted];
m6_3009 -> m6_3020  [key=2, style=dotted];
m6_3009 -> m6_77  [key=2, style=dotted];
m6_3010 -> m6_3011  [key=0, style=solid];
m6_3010 -> m6_3021  [key=2, style=dotted];
m6_3010 -> m6_77  [key=2, style=dotted];
m6_3011 -> m6_3012  [key=0, style=solid];
m6_3011 -> m6_77  [key=2, style=dotted];
m6_3012 -> m6_3013  [key=0, style=solid];
m6_3012 -> m6_77  [key=2, style=dotted];
m6_3013 -> m6_3014  [key=0, style=solid];
m6_3013 -> m6_145  [key=2, style=dotted];
m6_3013 -> m6_856  [key=2, style=dotted];
m6_3013 -> m6_3015  [color=darkseagreen4, key=1, label=c2, style=dashed];
m6_3013 -> m6_3016  [color=darkseagreen4, key=1, label=c2, style=dashed];
m6_3013 -> m6_3017  [color=darkseagreen4, key=1, label=c2, style=dashed];
m6_3014 -> m6_3015  [key=0, style=solid];
m6_3014 -> m6_3019  [key=2, style=dotted];
m6_3014 -> m6_3020  [key=2, style=dotted];
m6_3014 -> m6_77  [key=2, style=dotted];
m6_3015 -> m6_3016  [key=0, style=solid];
m6_3015 -> m6_3021  [key=2, style=dotted];
m6_3015 -> m6_77  [key=2, style=dotted];
m6_3016 -> m6_3017  [key=0, style=solid];
m6_3016 -> m6_77  [key=2, style=dotted];
m6_3017 -> m6_3018  [key=0, style=solid];
m6_3017 -> m6_77  [key=2, style=dotted];
m6_3018 -> m6_3007  [color=blue, key=0, style=bold];
m6_768 -> m6_769  [key=0, style=solid];
m6_769 -> m6_770  [key=0, style=solid];
m6_769 -> m6_775  [key=2, style=dotted];
m6_769 -> m6_217  [key=2, style=dotted];
m6_770 -> m6_771  [key=0, style=solid];
m6_770 -> m6_77  [key=2, style=dotted];
m6_771 -> m6_772  [key=0, style=solid];
m6_771 -> m6_218  [key=2, style=dotted];
m6_771 -> m6_773  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_772 -> m6_773  [key=0, style=solid];
m6_772 -> m6_77  [key=2, style=dotted];
m6_773 -> m6_774  [key=0, style=solid];
m6_773 -> m6_77  [key=2, style=dotted];
m6_774 -> m6_768  [color=blue, key=0, style=bold];
m6_2609 -> m6_2610  [key=0, style=solid];
m6_2610 -> m6_2611  [key=0, style=solid];
m6_2610 -> m6_2615  [key=2, style=dotted];
m6_2610 -> m6_227  [key=2, style=dotted];
m6_2611 -> m6_2612  [key=0, style=solid];
m6_2611 -> m6_77  [key=2, style=dotted];
m6_2612 -> m6_2613  [key=0, style=solid];
m6_2612 -> m6_2616  [key=2, style=dotted];
m6_2612 -> m6_227  [key=2, style=dotted];
m6_2613 -> m6_2614  [key=0, style=solid];
m6_2613 -> m6_77  [key=2, style=dotted];
m6_2614 -> m6_2609  [color=blue, key=0, style=bold];
m6_2502 -> m6_2503  [key=0, style=solid];
m6_2503 -> m6_2504  [key=0, style=solid];
m6_2504 -> m6_2505  [key=0, style=solid];
m6_2505 -> m6_2502  [color=blue, key=0, style=bold];
m6_2432 -> m6_2433  [key=0, style=solid];
m6_2433 -> m6_2434  [key=0, style=solid];
m6_2434 -> m6_2435  [key=0, style=solid];
m6_2435 -> m6_2432  [color=blue, key=0, style=bold];
m6_1394 -> m6_1395  [key=0, style=solid];
m6_1395 -> m6_1396  [key=0, style=solid];
m6_1395 -> m6_1399  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1396 -> m6_1397  [key=0, style=solid];
m6_1396 -> m6_527  [key=2, style=dotted];
m6_1396 -> m6_1398  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_1397 -> m6_1394  [color=blue, key=0, style=bold];
m6_3458 -> m6_3459  [key=0, style=solid];
m6_3459 -> m6_3460  [key=0, style=solid];
m6_3460 -> m6_3461  [key=0, style=solid];
m6_3460 -> m6_218  [key=2, style=dotted];
m6_3460 -> m6_3462  [color=darkseagreen4, key=1, label=aa, style=dashed];
m6_3460 -> m6_3463  [color=darkseagreen4, key=1, label=aa, style=dashed];
m6_3460 -> m6_3464  [color=darkseagreen4, key=1, label=aa, style=dashed];
m6_3460 -> m6_3465  [color=darkseagreen4, key=1, label=aa, style=dashed];
m6_3460 -> m6_3466  [color=darkseagreen4, key=1, label=aa, style=dashed];
m6_3460 -> m6_3467  [color=darkseagreen4, key=1, label=aa, style=dashed];
m6_3461 -> m6_3462  [key=0, style=solid];
m6_3461 -> m6_77  [key=2, style=dotted];
m6_3462 -> m6_3463  [key=0, style=solid];
m6_3462 -> m6_77  [key=2, style=dotted];
m6_3463 -> m6_3464  [key=0, style=solid];
m6_3463 -> m6_3469  [key=2, style=dotted];
m6_3463 -> m6_77  [key=2, style=dotted];
m6_3464 -> m6_3465  [key=0, style=solid];
m6_3464 -> m6_3469  [key=2, style=dotted];
m6_3464 -> m6_77  [key=2, style=dotted];
m6_3465 -> m6_3466  [key=0, style=solid];
m6_3465 -> m6_3469  [key=2, style=dotted];
m6_3465 -> m6_77  [key=2, style=dotted];
m6_3466 -> m6_3467  [key=0, style=solid];
m6_3466 -> m6_77  [key=2, style=dotted];
m6_3467 -> m6_3468  [key=0, style=solid];
m6_3467 -> m6_77  [key=2, style=dotted];
m6_3468 -> m6_3458  [color=blue, key=0, style=bold];
m6_3794 -> m6_3795  [key=0, style=solid];
m6_3795 -> m6_3796  [key=0, style=solid];
m6_3795 -> m6_3318  [key=2, style=dotted];
m6_3796 -> m6_3794  [color=blue, key=0, style=bold];
m6_3172 -> m6_3173  [key=0, style=solid];
m6_3173 -> m6_3174  [key=0, style=solid];
m6_3173 -> m6_258  [key=2, style=dotted];
m6_3173 -> m6_596  [key=2, style=dotted];
m6_3174 -> m6_3175  [key=0, style=solid];
m6_3174 -> m6_227  [key=2, style=dotted];
m6_3174 -> m6_3176  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_3175 -> m6_3176  [key=0, style=solid];
m6_3175 -> m6_77  [key=2, style=dotted];
m6_3176 -> m6_3177  [key=0, style=solid];
m6_3176 -> m6_218  [key=2, style=dotted];
m6_3176 -> m6_3178  [color=darkseagreen4, key=1, label=dic2, style=dashed];
m6_3176 -> m6_3179  [color=darkseagreen4, key=1, label=dic2, style=dashed];
m6_3177 -> m6_3178  [key=0, style=solid];
m6_3177 -> m6_77  [key=2, style=dotted];
m6_3178 -> m6_3179  [key=0, style=solid];
m6_3178 -> m6_596  [key=2, style=dotted];
m6_3178 -> m6_77  [key=2, style=dotted];
m6_3179 -> m6_3180  [key=0, style=solid];
m6_3179 -> m6_596  [key=2, style=dotted];
m6_3179 -> m6_77  [key=2, style=dotted];
m6_3180 -> m6_3172  [color=blue, key=0, style=bold];
m6_1271 -> m6_1272  [key=0, style=solid];
m6_1272 -> m6_1273  [key=0, style=solid];
m6_1273 -> m6_1274  [key=0, style=solid];
m6_1273 -> m6_218  [key=2, style=dotted];
m6_1273 -> m6_1275  [color=darkseagreen4, key=1, label=values, style=dashed];
m6_1273 -> m6_1276  [color=darkseagreen4, key=1, label=values, style=dashed];
m6_1273 -> m6_1277  [color=darkseagreen4, key=1, label=values, style=dashed];
m6_1273 -> m6_1278  [color=darkseagreen4, key=1, label=values, style=dashed];
m6_1274 -> m6_1275  [key=0, style=solid];
m6_1274 -> m6_1280  [key=2, style=dotted];
m6_1275 -> m6_1276  [key=0, style=solid];
m6_1275 -> m6_343  [key=2, style=dotted];
m6_1276 -> m6_1277  [key=0, style=solid];
m6_1276 -> m6_77  [key=2, style=dotted];
m6_1277 -> m6_1278  [key=0, style=solid];
m6_1277 -> m6_77  [key=2, style=dotted];
m6_1278 -> m6_1279  [key=0, style=solid];
m6_1278 -> m6_77  [key=2, style=dotted];
m6_1279 -> m6_1271  [color=blue, key=0, style=bold];
m6_1553 -> m6_1554  [key=0, style=solid];
m6_1554 -> m6_1555  [key=0, style=solid];
m6_1554 -> m6_227  [key=2, style=dotted];
m6_1555 -> m6_1553  [color=blue, key=0, style=bold];
m6_3200 -> m6_3957  [key=0, style=solid];
m6_3957 -> m6_3200  [color=blue, key=0, style=bold];
m6_2327 -> m6_2328  [key=0, style=solid];
m6_2328 -> m6_2329  [key=0, style=solid];
m6_2329 -> m6_2330  [key=0, style=solid];
m6_2329 -> m6_218  [key=2, style=dotted];
m6_2330 -> m6_2331  [key=0, style=solid];
m6_2330 -> m6_77  [key=2, style=dotted];
m6_2331 -> m6_2327  [color=blue, key=0, style=bold];
m6_2734 -> m6_3984  [key=0, style=solid];
m6_3984 -> m6_2734  [color=blue, key=0, style=bold];
m6_1320 -> m6_1321  [key=0, style=solid];
m6_1321 -> m6_1322  [key=0, style=solid];
m6_1322 -> m6_1323  [key=0, style=solid];
m6_1322 -> m6_218  [key=2, style=dotted];
m6_1323 -> m6_1320  [color=blue, key=0, style=bold];
m6_2724 -> m6_2725  [key=0, style=solid];
m6_2725 -> m6_2726  [key=0, style=solid];
m6_2725 -> m6_258  [key=2, style=dotted];
m6_2725 -> m6_2734  [key=2, style=dotted];
m6_2726 -> m6_2727  [key=0, style=solid];
m6_2726 -> m6_2735  [key=2, style=dotted];
m6_2726 -> m6_2736  [key=2, style=dotted];
m6_2727 -> m6_2728  [key=0, style=solid];
m6_2727 -> m6_227  [key=2, style=dotted];
m6_2727 -> m6_2729  [color=darkseagreen4, key=1, label=originalJson, style=dashed];
m6_2728 -> m6_2729  [key=0, style=solid];
m6_2728 -> m6_77  [key=2, style=dotted];
m6_2729 -> m6_2730  [key=0, style=solid];
m6_2729 -> m6_218  [key=2, style=dotted];
m6_2729 -> m6_2731  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m6_2729 -> m6_2732  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m6_2730 -> m6_2731  [key=0, style=solid];
m6_2730 -> m6_77  [key=2, style=dotted];
m6_2731 -> m6_2732  [key=0, style=solid];
m6_2731 -> m6_77  [key=2, style=dotted];
m6_2732 -> m6_2733  [key=0, style=solid];
m6_2732 -> m6_77  [key=2, style=dotted];
m6_2733 -> m6_2724  [color=blue, key=0, style=bold];
m6_816 -> m6_817  [key=0, style=solid];
m6_817 -> m6_818  [key=0, style=solid];
m6_817 -> m6_815  [key=2, style=dotted];
m6_818 -> m6_819  [key=0, style=solid];
m6_818 -> m6_823  [key=2, style=dotted];
m6_818 -> m6_824  [key=2, style=dotted];
m6_818 -> m6_820  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_819 -> m6_820  [key=0, style=solid];
m6_819 -> m6_77  [key=2, style=dotted];
m6_820 -> m6_821  [key=0, style=solid];
m6_820 -> m6_823  [key=2, style=dotted];
m6_820 -> m6_825  [key=2, style=dotted];
m6_821 -> m6_822  [key=0, style=solid];
m6_821 -> m6_77  [key=2, style=dotted];
m6_822 -> m6_816  [color=blue, key=0, style=bold];
m6_3391 -> m6_3392  [key=0, style=solid];
m6_3392 -> m6_3393  [key=0, style=solid];
m6_3392 -> m6_3398  [key=2, style=dotted];
m6_3393 -> m6_3394  [key=0, style=solid];
m6_3393 -> m6_145  [key=2, style=dotted];
m6_3393 -> m6_3399  [key=2, style=dotted];
m6_3393 -> m6_600  [key=2, style=dotted];
m6_3393 -> m6_3395  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_3394 -> m6_3395  [key=0, style=solid];
m6_3394 -> m6_77  [key=2, style=dotted];
m6_3395 -> m6_3396  [key=0, style=solid];
m6_3395 -> m6_145  [key=2, style=dotted];
m6_3395 -> m6_3399  [key=2, style=dotted];
m6_3395 -> m6_856  [key=2, style=dotted];
m6_3396 -> m6_3397  [key=0, style=solid];
m6_3396 -> m6_77  [key=2, style=dotted];
m6_3397 -> m6_3391  [color=blue, key=0, style=bold];
m6_931 -> m6_932  [key=0, style=solid];
m6_932 -> m6_933  [key=0, style=solid];
m6_932 -> m6_944  [key=2, style=dotted];
m6_932 -> m6_751  [key=2, style=dotted];
m6_933 -> m6_934  [key=0, style=solid];
m6_933 -> m6_217  [key=2, style=dotted];
m6_933 -> m6_935  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_934 -> m6_935  [key=0, style=solid];
m6_934 -> m6_77  [key=2, style=dotted];
m6_935 -> m6_936  [key=0, style=solid];
m6_935 -> m6_218  [key=2, style=dotted];
m6_935 -> m6_937  [color=darkseagreen4, key=1, label=userNullablleDeserialized, style=dashed];
m6_935 -> m6_938  [color=darkseagreen4, key=1, label=userNullablleDeserialized, style=dashed];
m6_935 -> m6_939  [color=darkseagreen4, key=1, label=userNullablleDeserialized, style=dashed];
m6_935 -> m6_940  [color=darkseagreen4, key=1, label=userNullablleDeserialized, style=dashed];
m6_935 -> m6_941  [color=darkseagreen4, key=1, label=userNullablleDeserialized, style=dashed];
m6_935 -> m6_942  [color=darkseagreen4, key=1, label=userNullablleDeserialized, style=dashed];
m6_936 -> m6_937  [key=0, style=solid];
m6_936 -> m6_751  [key=2, style=dotted];
m6_936 -> m6_77  [key=2, style=dotted];
m6_937 -> m6_938  [key=0, style=solid];
m6_937 -> m6_77  [key=2, style=dotted];
m6_938 -> m6_939  [key=0, style=solid];
m6_938 -> m6_77  [key=2, style=dotted];
m6_939 -> m6_940  [key=0, style=solid];
m6_939 -> m6_77  [key=2, style=dotted];
m6_940 -> m6_941  [key=0, style=solid];
m6_940 -> m6_77  [key=2, style=dotted];
m6_941 -> m6_942  [key=0, style=solid];
m6_941 -> m6_77  [key=2, style=dotted];
m6_942 -> m6_943  [key=0, style=solid];
m6_942 -> m6_77  [key=2, style=dotted];
m6_943 -> m6_931  [color=blue, key=0, style=bold];
m6_1433 -> m6_1434  [key=0, style=solid];
m6_1434 -> m6_1435  [key=0, style=solid];
m6_1434 -> m6_527  [key=2, style=dotted];
m6_1434 -> m6_1436  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_1435 -> m6_1433  [color=blue, key=0, style=bold];
m6_2628 -> m6_2629  [key=0, style=solid];
m6_2629 -> m6_2630  [key=0, style=solid];
m6_2629 -> m6_2617  [key=2, style=dotted];
m6_2630 -> m6_2631  [key=0, style=solid];
m6_2630 -> m6_227  [key=2, style=dotted];
m6_2630 -> m6_2632  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_2631 -> m6_2632  [key=0, style=solid];
m6_2631 -> m6_77  [key=2, style=dotted];
m6_2632 -> m6_2633  [key=0, style=solid];
m6_2632 -> m6_218  [key=2, style=dotted];
m6_2633 -> m6_2634  [key=0, style=solid];
m6_2633 -> m6_2625  [key=2, style=dotted];
m6_2633 -> m6_77  [key=2, style=dotted];
m6_2634 -> m6_2628  [color=blue, key=0, style=bold];
m6_3638 -> m6_3639  [key=0, style=solid];
m6_3639 -> m6_3640  [key=0, style=solid];
m6_3639 -> m6_661  [key=2, style=dotted];
m6_3639 -> m6_3644  [color=darkseagreen4, key=1, label=sw, style=dashed];
m6_3640 -> m6_3641  [key=0, style=solid];
m6_3640 -> m6_2719  [key=2, style=dotted];
m6_3640 -> m6_3642  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_3640 -> m6_3643  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_3644 -> m6_3645  [key=0, style=solid];
m6_3644 -> m6_2723  [key=2, style=dotted];
m6_3641 -> m6_3642  [key=0, style=solid];
m6_3641 -> m6_145  [key=2, style=dotted];
m6_3641 -> m6_2924  [key=2, style=dotted];
m6_3642 -> m6_3643  [key=0, style=solid];
m6_3642 -> m6_2803  [key=2, style=dotted];
m6_3643 -> m6_3644  [key=0, style=solid];
m6_3643 -> m6_77  [key=2, style=dotted];
m6_3645 -> m6_3646  [key=0, style=solid];
m6_3645 -> m6_77  [key=2, style=dotted];
m6_3646 -> m6_3638  [color=blue, key=0, style=bold];
m6_1380 -> m6_1381  [key=0, style=solid];
m6_1381 -> m6_1382  [key=0, style=solid];
m6_1381 -> m6_1385  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1382 -> m6_1383  [key=0, style=solid];
m6_1382 -> m6_527  [key=2, style=dotted];
m6_1382 -> m6_1384  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_1383 -> m6_1380  [color=blue, key=0, style=bold];
m6_4047 -> m6_4048  [key=0, style=solid];
m6_4048 -> m6_4049  [key=0, style=solid];
m6_4049 -> m6_4047  [color=blue, key=0, style=bold];
m6_219 -> m6_220  [key=0, style=solid];
m6_220 -> m6_221  [key=0, style=solid];
m6_220 -> m6_226  [key=2, style=dotted];
m6_221 -> m6_222  [key=0, style=solid];
m6_221 -> m6_227  [key=2, style=dotted];
m6_222 -> m6_223  [key=0, style=solid];
m6_222 -> m6_218  [key=2, style=dotted];
m6_222 -> m6_224  [color=darkseagreen4, key=1, label=r2, style=dashed];
m6_223 -> m6_224  [key=0, style=solid];
m6_223 -> m6_228  [key=2, style=dotted];
m6_223 -> m6_77  [key=2, style=dotted];
m6_224 -> m6_225  [key=0, style=solid];
m6_224 -> m6_77  [key=2, style=dotted];
m6_225 -> m6_219  [color=blue, key=0, style=bold];
m6_1139 -> m6_1140  [key=0, style=solid];
m6_1140 -> m6_1141  [key=0, style=solid];
m6_1140 -> m6_1151  [key=2, style=dotted];
m6_1140 -> m6_1142  [color=darkseagreen4, key=1, label=optInClass, style=dashed];
m6_1140 -> m6_1143  [color=darkseagreen4, key=1, label=optInClass, style=dashed];
m6_1140 -> m6_1144  [color=darkseagreen4, key=1, label=optInClass, style=dashed];
m6_1141 -> m6_1142  [key=0, style=solid];
m6_1142 -> m6_1143  [key=0, style=solid];
m6_1143 -> m6_1144  [key=0, style=solid];
m6_1144 -> m6_1145  [key=0, style=solid];
m6_1144 -> m6_227  [key=2, style=dotted];
m6_1145 -> m6_1146  [key=0, style=solid];
m6_1145 -> m6_77  [key=2, style=dotted];
m6_1146 -> m6_1147  [key=0, style=solid];
m6_1146 -> m6_218  [key=2, style=dotted];
m6_1146 -> m6_1148  [color=darkseagreen4, key=1, label=newOptInClass, style=dashed];
m6_1146 -> m6_1149  [color=darkseagreen4, key=1, label=newOptInClass, style=dashed];
m6_1147 -> m6_1148  [key=0, style=solid];
m6_1147 -> m6_77  [key=2, style=dotted];
m6_1148 -> m6_1149  [key=0, style=solid];
m6_1148 -> m6_77  [key=2, style=dotted];
m6_1149 -> m6_1150  [key=0, style=solid];
m6_1149 -> m6_77  [key=2, style=dotted];
m6_1150 -> m6_1139  [color=blue, key=0, style=bold];
m6_1045 -> m6_1046  [key=0, style=solid];
m6_1045 -> m6_1053  [key=2, style=dotted];
m6_1045 -> m6_596  [key=2, style=dotted];
m6_1045 -> m6_1047  [color=darkseagreen4, key=1, label=entry, style=dashed];
m6_1045 -> m6_1048  [color=darkseagreen4, key=1, label=entry, style=dashed];
m6_1044 -> m6_1045  [key=0, style=solid];
m6_1046 -> m6_1047  [key=0, style=solid];
m6_1046 -> m6_217  [key=2, style=dotted];
m6_1046 -> m6_1049  [color=darkseagreen4, key=1, label=defaultJson, style=dashed];
m6_1047 -> m6_1048  [key=0, style=solid];
m6_1047 -> m6_648  [key=2, style=dotted];
m6_1047 -> m6_824  [key=2, style=dotted];
m6_1047 -> m6_1050  [color=darkseagreen4, key=1, label=isoJson, style=dashed];
m6_1048 -> m6_1049  [key=0, style=solid];
m6_1048 -> m6_875  [key=2, style=dotted];
m6_1048 -> m6_824  [key=2, style=dotted];
m6_1048 -> m6_1051  [color=darkseagreen4, key=1, label=javascriptJson, style=dashed];
m6_1049 -> m6_1050  [key=0, style=solid];
m6_1049 -> m6_343  [key=2, style=dotted];
m6_1050 -> m6_1051  [key=0, style=solid];
m6_1050 -> m6_343  [key=2, style=dotted];
m6_1051 -> m6_1052  [key=0, style=solid];
m6_1051 -> m6_343  [key=2, style=dotted];
m6_1052 -> m6_1044  [color=blue, key=0, style=bold];
m6_446 -> m6_447  [key=0, style=solid];
m6_447 -> m6_448  [key=0, style=solid];
m6_447 -> m6_459  [key=2, style=dotted];
m6_447 -> m6_449  [color=darkseagreen4, key=1, label=executorObject, style=dashed];
m6_447 -> m6_450  [color=darkseagreen4, key=1, label=executorObject, style=dashed];
m6_447 -> m6_451  [color=darkseagreen4, key=1, label=executorObject, style=dashed];
m6_447 -> m6_453  [color=darkseagreen4, key=1, label=executorObject, style=dashed];
m6_447 -> m6_447  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m6_448 -> m6_449  [key=0, style=solid];
m6_449 -> m6_450  [key=0, style=solid];
m6_450 -> m6_451  [key=0, style=solid];
m6_451 -> m6_452  [key=0, style=solid];
m6_451 -> m6_217  [key=2, style=dotted];
m6_453 -> m6_454  [key=0, style=solid];
m6_453 -> m6_460  [key=2, style=dotted];
m6_452 -> m6_453  [key=0, style=solid];
m6_452 -> m6_406  [key=2, style=dotted];
m6_452 -> m6_454  [color=darkseagreen4, key=1, label=executorObject2, style=dashed];
m6_452 -> m6_455  [color=darkseagreen4, key=1, label=executorObject2, style=dashed];
m6_452 -> m6_456  [color=darkseagreen4, key=1, label=executorObject2, style=dashed];
m6_452 -> m6_457  [color=darkseagreen4, key=1, label=executorObject2, style=dashed];
m6_454 -> m6_455  [key=0, style=solid];
m6_454 -> m6_77  [key=2, style=dotted];
m6_455 -> m6_456  [key=0, style=solid];
m6_455 -> m6_77  [key=2, style=dotted];
m6_456 -> m6_457  [key=0, style=solid];
m6_456 -> m6_461  [key=2, style=dotted];
m6_457 -> m6_458  [key=0, style=solid];
m6_457 -> m6_77  [key=2, style=dotted];
m6_458 -> m6_446  [color=blue, key=0, style=bold];
m6_3059 -> m6_3060  [key=0, style=solid];
m6_3059 -> m6_3062  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_3060 -> m6_3061  [key=0, style=solid];
m6_3062 -> m6_3063  [key=0, style=solid];
m6_3062 -> m6_3064  [key=2, style=dotted];
m6_3062 -> m6_1896  [key=2, style=dotted];
m6_3062 -> m6_3065  [key=2, style=dotted];
m6_3062 -> m6_3066  [key=2, style=dotted];
m6_3061 -> m6_3062  [key=0, style=solid];
m6_3063 -> m6_3059  [color=blue, key=0, style=bold];
m6_2254 -> m6_2255  [key=0, style=solid];
m6_2255 -> m6_2256  [key=0, style=solid];
m6_2255 -> m6_2261  [key=2, style=dotted];
m6_2256 -> m6_2257  [key=0, style=solid];
m6_2256 -> m6_227  [key=2, style=dotted];
m6_2256 -> m6_2258  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_2257 -> m6_2258  [key=0, style=solid];
m6_2257 -> m6_77  [key=2, style=dotted];
m6_2258 -> m6_2259  [key=0, style=solid];
m6_2258 -> m6_218  [key=2, style=dotted];
m6_2259 -> m6_2260  [key=0, style=solid];
m6_2259 -> m6_77  [key=2, style=dotted];
m6_2259 -> m6_2259  [color=darkseagreen4, key=1, label=newStruct, style=dashed];
m6_2260 -> m6_2254  [color=blue, key=0, style=bold];
m6_2485 -> m6_2486  [key=0, style=solid];
m6_2486 -> m6_2487  [key=0, style=solid];
m6_2486 -> m6_406  [key=2, style=dotted];
m6_2487 -> m6_2488  [key=0, style=solid];
m6_2487 -> m6_1897  [key=2, style=dotted];
m6_2488 -> m6_2485  [color=blue, key=0, style=bold];
m6_3226 -> m6_3227  [key=0, style=solid];
m6_3227 -> m6_3228  [key=0, style=solid];
m6_3227 -> m6_3230  [key=2, style=dotted];
m6_3227 -> m6_227  [key=2, style=dotted];
m6_3228 -> m6_3229  [key=0, style=solid];
m6_3228 -> m6_77  [key=2, style=dotted];
m6_3229 -> m6_3226  [color=blue, key=0, style=bold];
m6_2825 -> m6_2826  [key=0, style=solid];
m6_2826 -> m6_2827  [key=0, style=solid];
m6_2826 -> m6_3  [key=2, style=dotted];
m6_2826 -> m6_2829  [color=darkseagreen4, key=1, label=d1, style=dashed];
m6_2826 -> m6_2830  [color=darkseagreen4, key=1, label=d1, style=dashed];
m6_2827 -> m6_2828  [key=0, style=solid];
m6_2827 -> m6_217  [key=2, style=dotted];
m6_2829 -> m6_2830  [key=0, style=solid];
m6_2829 -> m6_77  [key=2, style=dotted];
m6_2830 -> m6_2831  [key=0, style=solid];
m6_2830 -> m6_77  [key=2, style=dotted];
m6_2828 -> m6_2829  [key=0, style=solid];
m6_2828 -> m6_218  [key=2, style=dotted];
m6_2828 -> m6_2830  [color=darkseagreen4, key=1, label=d2, style=dashed];
m6_2831 -> m6_2825  [color=blue, key=0, style=bold];
m6_3366 -> m6_3367  [key=0, style=solid];
m6_3367 -> m6_3368  [key=0, style=solid];
m6_3368 -> m6_3369  [key=0, style=solid];
m6_3368 -> m6_218  [key=2, style=dotted];
m6_3369 -> m6_3370  [key=0, style=solid];
m6_3370 -> m6_3371  [key=0, style=solid];
m6_3370 -> m6_77  [key=2, style=dotted];
m6_3371 -> m6_3366  [color=blue, key=0, style=bold];
m6_2275 -> m6_2276  [key=0, style=solid];
m6_2276 -> m6_2277  [key=0, style=solid];
m6_2276 -> m6_2269  [key=2, style=dotted];
m6_2276 -> m6_2270  [key=2, style=dotted];
m6_2276 -> m6_423  [key=2, style=dotted];
m6_2276 -> m6_608  [key=2, style=dotted];
m6_2276 -> m6_145  [key=2, style=dotted];
m6_2276 -> m6_1110  [key=2, style=dotted];
m6_2276 -> m6_2278  [color=darkseagreen4, key=1, label=serializeObject, style=dashed];
m6_2277 -> m6_2278  [key=0, style=solid];
m6_2277 -> m6_77  [key=2, style=dotted];
m6_2278 -> m6_2279  [key=0, style=solid];
m6_2278 -> m6_218  [key=2, style=dotted];
m6_2278 -> m6_2280  [color=darkseagreen4, key=1, label=deserializeObject, style=dashed];
m6_2279 -> m6_2280  [key=0, style=solid];
m6_2279 -> m6_608  [key=2, style=dotted];
m6_2279 -> m6_77  [key=2, style=dotted];
m6_2280 -> m6_2281  [key=0, style=solid];
m6_2280 -> m6_423  [key=2, style=dotted];
m6_2280 -> m6_77  [key=2, style=dotted];
m6_2281 -> m6_2275  [color=blue, key=0, style=bold];
m6_923 -> m6_924  [key=0, style=solid];
m6_924 -> m6_925  [key=0, style=solid];
m6_925 -> m6_926  [key=0, style=solid];
m6_925 -> m6_218  [key=2, style=dotted];
m6_925 -> m6_927  [color=darkseagreen4, key=1, label=personRaw, style=dashed];
m6_925 -> m6_928  [color=darkseagreen4, key=1, label=personRaw, style=dashed];
m6_926 -> m6_927  [key=0, style=solid];
m6_926 -> m6_77  [key=2, style=dotted];
m6_927 -> m6_928  [key=0, style=solid];
m6_927 -> m6_930  [key=2, style=dotted];
m6_927 -> m6_77  [key=2, style=dotted];
m6_928 -> m6_929  [key=0, style=solid];
m6_928 -> m6_77  [key=2, style=dotted];
m6_929 -> m6_923  [color=blue, key=0, style=bold];
m6_1823 -> m6_1860  [key=0, style=solid];
m6_1823 -> m6_1861  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_1823 -> m6_1862  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_1823 -> m6_1863  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_1823 -> m6_1864  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_1823 -> m6_1865  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_1823 -> m6_1866  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_1823 -> m6_1867  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_1860 -> m6_1861  [key=0, style=solid];
m6_1861 -> m6_1862  [key=0, style=solid];
m6_1862 -> m6_1863  [key=0, style=solid];
m6_1863 -> m6_1864  [key=0, style=solid];
m6_1864 -> m6_1865  [key=0, style=solid];
m6_1865 -> m6_1866  [key=0, style=solid];
m6_1866 -> m6_1867  [key=0, style=solid];
m6_1867 -> m6_1868  [key=0, style=solid];
m6_1868 -> m6_1823  [color=blue, key=0, style=bold];
m6_2207 -> m6_2208  [key=0, style=solid];
m6_2208 -> m6_2209  [key=0, style=solid];
m6_2208 -> m6_227  [key=2, style=dotted];
m6_2209 -> m6_2210  [key=0, style=solid];
m6_2209 -> m6_77  [key=2, style=dotted];
m6_2210 -> m6_2207  [color=blue, key=0, style=bold];
m6_3538 -> m6_3539  [key=0, style=solid];
m6_3539 -> m6_3540  [key=0, style=solid];
m6_3539 -> m6_3547  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_3540 -> m6_3541  [key=0, style=solid];
m6_3540 -> m6_218  [key=2, style=dotted];
m6_3540 -> m6_3542  [color=darkseagreen4, key=1, label=aa, style=dashed];
m6_3540 -> m6_3543  [color=darkseagreen4, key=1, label=aa, style=dashed];
m6_3540 -> m6_3544  [color=darkseagreen4, key=1, label=aa, style=dashed];
m6_3540 -> m6_3545  [color=darkseagreen4, key=1, label=aa, style=dashed];
m6_3540 -> m6_3546  [color=darkseagreen4, key=1, label=aa, style=dashed];
m6_3547 -> m6_3548  [key=0, style=solid];
m6_3547 -> m6_77  [key=2, style=dotted];
m6_3541 -> m6_3542  [key=0, style=solid];
m6_3541 -> m6_77  [key=2, style=dotted];
m6_3542 -> m6_3543  [key=0, style=solid];
m6_3542 -> m6_77  [key=2, style=dotted];
m6_3543 -> m6_3544  [key=0, style=solid];
m6_3543 -> m6_3469  [key=2, style=dotted];
m6_3543 -> m6_77  [key=2, style=dotted];
m6_3544 -> m6_3545  [key=0, style=solid];
m6_3544 -> m6_3469  [key=2, style=dotted];
m6_3544 -> m6_77  [key=2, style=dotted];
m6_3545 -> m6_3546  [key=0, style=solid];
m6_3545 -> m6_3469  [key=2, style=dotted];
m6_3545 -> m6_77  [key=2, style=dotted];
m6_3546 -> m6_3547  [key=0, style=solid];
m6_3546 -> m6_217  [key=2, style=dotted];
m6_3548 -> m6_3538  [color=blue, key=0, style=bold];
m6_799 -> m6_800  [key=0, style=solid];
m6_800 -> m6_801  [key=0, style=solid];
m6_800 -> m6_807  [key=2, style=dotted];
m6_801 -> m6_802  [key=0, style=solid];
m6_801 -> m6_217  [key=2, style=dotted];
m6_802 -> m6_803  [key=0, style=solid];
m6_802 -> m6_218  [key=2, style=dotted];
m6_802 -> m6_804  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m6_802 -> m6_805  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m6_803 -> m6_804  [key=0, style=solid];
m6_803 -> m6_77  [key=2, style=dotted];
m6_804 -> m6_805  [key=0, style=solid];
m6_804 -> m6_77  [key=2, style=dotted];
m6_805 -> m6_806  [key=0, style=solid];
m6_805 -> m6_77  [key=2, style=dotted];
m6_806 -> m6_799  [color=blue, key=0, style=bold];
m6_2243 -> m6_2244  [key=0, style=solid];
m6_2244 -> m6_2245  [key=0, style=solid];
m6_2244 -> m6_2247  [color=darkseagreen4, key=1, label=classRef, style=dashed];
m6_2245 -> m6_2246  [key=0, style=solid];
m6_2245 -> m6_2249  [key=2, style=dotted];
m6_2245 -> m6_2250  [key=2, style=dotted];
m6_2247 -> m6_2248  [key=0, style=solid];
m6_2247 -> m6_527  [key=2, style=dotted];
m6_2247 -> m6_2251  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_2246 -> m6_2247  [key=0, style=solid];
m6_2246 -> m6_227  [key=2, style=dotted];
m6_2246 -> m6_2252  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_2248 -> m6_2243  [color=blue, key=0, style=bold];
m6_744 -> m6_745  [key=0, style=solid];
m6_745 -> m6_746  [key=0, style=solid];
m6_745 -> m6_751  [key=2, style=dotted];
m6_745 -> m6_749  [color=darkseagreen4, key=1, label=guid, style=dashed];
m6_746 -> m6_747  [key=0, style=solid];
m6_746 -> m6_752  [key=2, style=dotted];
m6_746 -> m6_217  [key=2, style=dotted];
m6_746 -> m6_748  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_749 -> m6_750  [key=0, style=solid];
m6_749 -> m6_77  [key=2, style=dotted];
m6_747 -> m6_748  [key=0, style=solid];
m6_747 -> m6_77  [key=2, style=dotted];
m6_748 -> m6_749  [key=0, style=solid];
m6_748 -> m6_218  [key=2, style=dotted];
m6_750 -> m6_744  [color=blue, key=0, style=bold];
m6_2354 -> m6_2355  [key=0, style=solid];
m6_2355 -> m6_2356  [key=0, style=solid];
m6_2356 -> m6_2354  [color=blue, key=0, style=bold];
m6_4067 -> m6_4068  [key=0, style=solid];
m6_4068 -> m6_4069  [key=0, style=solid];
m6_4069 -> m6_4067  [color=blue, key=0, style=bold];
m6_2996 -> m6_2997  [key=0, style=solid];
m6_2997 -> m6_2998  [key=0, style=solid];
m6_2997 -> m6_527  [key=2, style=dotted];
m6_2997 -> m6_2999  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_2998 -> m6_2996  [color=blue, key=0, style=bold];
m6_668 -> m6_669  [key=0, style=solid];
m6_669 -> m6_670  [key=0, style=solid];
m6_669 -> m6_672  [key=2, style=dotted];
m6_669 -> m6_217  [key=2, style=dotted];
m6_670 -> m6_671  [key=0, style=solid];
m6_670 -> m6_77  [key=2, style=dotted];
m6_671 -> m6_668  [color=blue, key=0, style=bold];
m6_3768 -> m6_3769  [key=0, style=solid];
m6_3769 -> m6_3770  [key=0, style=solid];
m6_3769 -> m6_3771  [key=2, style=dotted];
m6_3770 -> m6_3768  [color=blue, key=0, style=bold];
m6_4033 -> m6_4034  [key=0, style=solid];
m6_4033 -> m6_4035  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m6_4034 -> m6_4035  [key=0, style=solid];
m6_4034 -> m6_1715  [key=2, style=dotted];
m6_4034 -> m6_4223  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.Ratio", style=dashed];
m6_4035 -> m6_4036  [key=0, style=solid];
m6_4035 -> m6_1715  [key=2, style=dotted];
m6_4035 -> m6_4223  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.Ratio", style=dashed];
m6_4036 -> m6_4033  [color=blue, key=0, style=bold];
m6_2194 -> m6_2195  [key=0, style=solid];
m6_2195 -> m6_2196  [key=0, style=solid];
m6_2195 -> m6_2197  [key=2, style=dotted];
m6_2196 -> m6_2194  [color=blue, key=0, style=bold];
m6_2520 -> m6_2521  [key=0, style=solid];
m6_2521 -> m6_2522  [key=0, style=solid];
m6_2521 -> m6_2525  [key=2, style=dotted];
m6_2522 -> m6_2523  [key=0, style=solid];
m6_2522 -> m6_227  [key=2, style=dotted];
m6_2523 -> m6_2524  [key=0, style=solid];
m6_2523 -> m6_343  [key=2, style=dotted];
m6_2524 -> m6_2520  [color=blue, key=0, style=bold];
m6_2441 -> m6_2442  [key=0, style=solid];
m6_2442 -> m6_2443  [key=0, style=solid];
m6_2443 -> m6_2444  [key=0, style=solid];
m6_2444 -> m6_2441  [color=blue, key=0, style=bold];
m6_10 -> m6_11  [key=0, style=solid];
m6_11 -> m6_12  [key=0, style=solid];
m6_11 -> m6_4  [key=2, style=dotted];
m6_12 -> m6_10  [color=blue, key=0, style=bold];
m6_723 -> m6_724  [key=0, style=solid];
m6_724 -> m6_725  [key=0, style=solid];
m6_724 -> m6_733  [key=2, style=dotted];
m6_724 -> m6_227  [key=2, style=dotted];
m6_724 -> m6_727  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_724 -> m6_728  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_725 -> m6_726  [key=0, style=solid];
m6_727 -> m6_728  [key=0, style=solid];
m6_727 -> m6_77  [key=2, style=dotted];
m6_728 -> m6_729  [key=0, style=solid];
m6_728 -> m6_218  [key=2, style=dotted];
m6_728 -> m6_730  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_728 -> m6_731  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_726 -> m6_727  [key=0, style=solid];
m6_729 -> m6_730  [key=0, style=solid];
m6_729 -> m6_77  [key=2, style=dotted];
m6_730 -> m6_731  [key=0, style=solid];
m6_730 -> m6_77  [key=2, style=dotted];
m6_731 -> m6_732  [key=0, style=solid];
m6_731 -> m6_77  [key=2, style=dotted];
m6_732 -> m6_723  [color=blue, key=0, style=bold];
m6_2232 -> m6_2233  [key=0, style=solid];
m6_2233 -> m6_2234  [key=0, style=solid];
m6_2233 -> m6_75  [key=2, style=dotted];
m6_2233 -> m6_2235  [color=darkseagreen4, key=1, label=serializer1, style=dashed];
m6_2233 -> m6_2238  [color=darkseagreen4, key=1, label=serializer1, style=dashed];
m6_2234 -> m6_2235  [key=0, style=solid];
m6_2234 -> m6_648  [key=2, style=dotted];
m6_2234 -> m6_81  [key=2, style=dotted];
m6_2235 -> m6_2236  [key=0, style=solid];
m6_2238 -> m6_2239  [key=0, style=solid];
m6_2238 -> m6_667  [key=2, style=dotted];
m6_2238 -> m6_2240  [color=darkseagreen4, key=1, label=z, style=dashed];
m6_2238 -> m6_2241  [color=darkseagreen4, key=1, label=z, style=dashed];
m6_2236 -> m6_2237  [key=0, style=solid];
m6_2237 -> m6_2238  [key=0, style=solid];
m6_2237 -> m6_665  [key=2, style=dotted];
m6_2237 -> m6_666  [key=2, style=dotted];
m6_2239 -> m6_2240  [key=0, style=solid];
m6_2239 -> m6_77  [key=2, style=dotted];
m6_2240 -> m6_2241  [key=0, style=solid];
m6_2240 -> m6_77  [key=2, style=dotted];
m6_2241 -> m6_2242  [key=0, style=solid];
m6_2241 -> m6_77  [key=2, style=dotted];
m6_2242 -> m6_2232  [color=blue, key=0, style=bold];
m6_1203 -> m6_1204  [key=0, style=solid];
m6_1204 -> m6_1205  [key=0, style=solid];
m6_1205 -> m6_1206  [key=0, style=solid];
m6_1205 -> m6_386  [key=2, style=dotted];
m6_1206 -> m6_1207  [key=0, style=solid];
m6_1206 -> m6_390  [key=2, style=dotted];
m6_1206 -> m6_218  [key=2, style=dotted];
m6_1206 -> m6_1208  [color=darkseagreen4, key=1, label=s, style=dashed];
m6_1206 -> m6_1209  [color=darkseagreen4, key=1, label=s, style=dashed];
m6_1206 -> m6_1210  [color=darkseagreen4, key=1, label=s, style=dashed];
m6_1207 -> m6_1208  [key=0, style=solid];
m6_1207 -> m6_1068  [key=2, style=dotted];
m6_1208 -> m6_1209  [key=0, style=solid];
m6_1208 -> m6_77  [key=2, style=dotted];
m6_1209 -> m6_1210  [key=0, style=solid];
m6_1209 -> m6_77  [key=2, style=dotted];
m6_1210 -> m6_1211  [key=0, style=solid];
m6_1210 -> m6_77  [key=2, style=dotted];
m6_1211 -> m6_1203  [color=blue, key=0, style=bold];
m6_2807 -> m6_2808  [key=0, style=solid];
m6_2808 -> m6_2809  [key=0, style=solid];
m6_2809 -> m6_2810  [key=0, style=solid];
m6_2809 -> m6_2817  [key=2, style=dotted];
m6_2809 -> m6_2811  [color=darkseagreen4, key=1, label=testCulture, style=dashed];
m6_2810 -> m6_2811  [key=0, style=solid];
m6_2811 -> m6_2812  [key=0, style=solid];
m6_2812 -> m6_2813  [key=0, style=solid];
m6_2813 -> m6_2814  [key=0, style=solid];
m6_2813 -> m6_218  [key=2, style=dotted];
m6_2813 -> m6_2815  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_2814 -> m6_2815  [key=0, style=solid];
m6_2814 -> m6_77  [key=2, style=dotted];
m6_2815 -> m6_2816  [key=0, style=solid];
m6_2815 -> m6_77  [key=2, style=dotted];
m6_2816 -> m6_2807  [color=blue, key=0, style=bold];
m6_1054 -> m6_1055  [key=0, style=solid];
m6_1055 -> m6_1056  [key=0, style=solid];
m6_1055 -> m6_1067  [key=2, style=dotted];
m6_1055 -> m6_1057  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_1055 -> m6_1058  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_1055 -> m6_1059  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_1055 -> m6_1063  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_1055 -> m6_1064  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_1055 -> m6_1065  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_1056 -> m6_1057  [key=0, style=solid];
m6_1056 -> m6_258  [key=2, style=dotted];
m6_1057 -> m6_1058  [key=0, style=solid];
m6_1057 -> m6_3  [key=2, style=dotted];
m6_1058 -> m6_1059  [key=0, style=solid];
m6_1058 -> m6_3  [key=2, style=dotted];
m6_1059 -> m6_1060  [key=0, style=solid];
m6_1059 -> m6_227  [key=2, style=dotted];
m6_1059 -> m6_1061  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1063 -> m6_1064  [key=0, style=solid];
m6_1063 -> m6_1069  [key=2, style=dotted];
m6_1063 -> m6_77  [key=2, style=dotted];
m6_1064 -> m6_1065  [key=0, style=solid];
m6_1064 -> m6_1069  [key=2, style=dotted];
m6_1064 -> m6_77  [key=2, style=dotted];
m6_1065 -> m6_1066  [key=0, style=solid];
m6_1065 -> m6_1069  [key=2, style=dotted];
m6_1065 -> m6_77  [key=2, style=dotted];
m6_1060 -> m6_1061  [key=0, style=solid];
m6_1060 -> m6_77  [key=2, style=dotted];
m6_1061 -> m6_1062  [key=0, style=solid];
m6_1061 -> m6_218  [key=2, style=dotted];
m6_1061 -> m6_1063  [color=darkseagreen4, key=1, label=deserializedObject, style=dashed];
m6_1061 -> m6_1064  [color=darkseagreen4, key=1, label=deserializedObject, style=dashed];
m6_1061 -> m6_1065  [color=darkseagreen4, key=1, label=deserializedObject, style=dashed];
m6_1062 -> m6_1063  [key=0, style=solid];
m6_1062 -> m6_1068  [key=2, style=dotted];
m6_1066 -> m6_1054  [color=blue, key=0, style=bold];
m6_2771 -> m6_2772  [key=0, style=solid];
m6_2772 -> m6_2773  [key=0, style=solid];
m6_2773 -> m6_2774  [key=0, style=solid];
m6_2773 -> m6_1219  [key=2, style=dotted];
m6_2773 -> m6_2776  [color=darkseagreen4, key=1, label=uri, style=dashed];
m6_2774 -> m6_2775  [key=0, style=solid];
m6_2774 -> m6_217  [key=2, style=dotted];
m6_2776 -> m6_2777  [key=0, style=solid];
m6_2776 -> m6_77  [key=2, style=dotted];
m6_2775 -> m6_2776  [key=0, style=solid];
m6_2775 -> m6_218  [key=2, style=dotted];
m6_2777 -> m6_2771  [color=blue, key=0, style=bold];
m6_4070 -> m6_4071  [key=0, style=solid];
m6_4071 -> m6_4072  [key=0, style=solid];
m6_4072 -> m6_4070  [color=blue, key=0, style=bold];
m6_1128 -> m6_1129  [key=0, style=solid];
m6_1129 -> m6_1130  [key=0, style=solid];
m6_1129 -> m6_1132  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1130 -> m6_1131  [key=0, style=solid];
m6_1130 -> m6_218  [key=2, style=dotted];
m6_1132 -> m6_1133  [key=0, style=solid];
m6_1132 -> m6_218  [key=2, style=dotted];
m6_1132 -> m6_1134  [color=darkseagreen4, key=1, label=n, style=dashed];
m6_1132 -> m6_1135  [color=darkseagreen4, key=1, label=n, style=dashed];
m6_1132 -> m6_1136  [color=darkseagreen4, key=1, label=n, style=dashed];
m6_1132 -> m6_1137  [color=darkseagreen4, key=1, label=n, style=dashed];
m6_1131 -> m6_1132  [key=0, style=solid];
m6_1131 -> m6_77  [key=2, style=dotted];
m6_1133 -> m6_1134  [key=0, style=solid];
m6_1133 -> m6_751  [key=2, style=dotted];
m6_1133 -> m6_77  [key=2, style=dotted];
m6_1134 -> m6_1135  [key=0, style=solid];
m6_1134 -> m6_751  [key=2, style=dotted];
m6_1134 -> m6_77  [key=2, style=dotted];
m6_1135 -> m6_1136  [key=0, style=solid];
m6_1135 -> m6_77  [key=2, style=dotted];
m6_1136 -> m6_1137  [key=0, style=solid];
m6_1136 -> m6_77  [key=2, style=dotted];
m6_1137 -> m6_1138  [key=0, style=solid];
m6_1137 -> m6_77  [key=2, style=dotted];
m6_1138 -> m6_1128  [color=blue, key=0, style=bold];
m6_2376 -> m6_2377  [key=0, style=solid];
m6_2377 -> m6_2378  [key=0, style=solid];
m6_2377 -> m6_2392  [key=2, style=dotted];
m6_2377 -> m6_2379  [color=darkseagreen4, key=1, label=nullableStructPropertyClass, style=dashed];
m6_2377 -> m6_2383  [color=darkseagreen4, key=1, label=nullableStructPropertyClass, style=dashed];
m6_2378 -> m6_2379  [key=0, style=solid];
m6_2378 -> m6_2393  [key=2, style=dotted];
m6_2379 -> m6_2380  [key=0, style=solid];
m6_2379 -> m6_2393  [key=2, style=dotted];
m6_2383 -> m6_2384  [key=0, style=solid];
m6_2383 -> m6_217  [key=2, style=dotted];
m6_2380 -> m6_2381  [key=0, style=solid];
m6_2380 -> m6_2392  [key=2, style=dotted];
m6_2380 -> m6_2382  [color=darkseagreen4, key=1, label=barWithNull, style=dashed];
m6_2380 -> m6_2387  [color=darkseagreen4, key=1, label=barWithNull, style=dashed];
m6_2381 -> m6_2382  [key=0, style=solid];
m6_2381 -> m6_2393  [key=2, style=dotted];
m6_2382 -> m6_2383  [key=0, style=solid];
m6_2387 -> m6_2388  [key=0, style=solid];
m6_2387 -> m6_217  [key=2, style=dotted];
m6_2384 -> m6_2385  [key=0, style=solid];
m6_2384 -> m6_2394  [key=2, style=dotted];
m6_2384 -> m6_2386  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m6_2385 -> m6_2386  [key=0, style=solid];
m6_2385 -> m6_77  [key=2, style=dotted];
m6_2386 -> m6_2387  [key=0, style=solid];
m6_2386 -> m6_77  [key=2, style=dotted];
m6_2388 -> m6_2389  [key=0, style=solid];
m6_2388 -> m6_2394  [key=2, style=dotted];
m6_2388 -> m6_2390  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m6_2389 -> m6_2390  [key=0, style=solid];
m6_2389 -> m6_77  [key=2, style=dotted];
m6_2390 -> m6_2391  [key=0, style=solid];
m6_2390 -> m6_77  [key=2, style=dotted];
m6_2391 -> m6_2376  [color=blue, key=0, style=bold];
m6_945 -> m6_946  [key=0, style=solid];
m6_946 -> m6_947  [key=0, style=solid];
m6_947 -> m6_948  [key=0, style=solid];
m6_947 -> m6_218  [key=2, style=dotted];
m6_948 -> m6_949  [key=0, style=solid];
m6_948 -> m6_77  [key=2, style=dotted];
m6_949 -> m6_945  [color=blue, key=0, style=bold];
m6_1975 -> m6_1976  [key=0, style=solid];
m6_1976 -> m6_1977  [key=0, style=solid];
m6_1976 -> m6_3  [key=2, style=dotted];
m6_1976 -> m6_1978  [color=darkseagreen4, key=1, label=list, style=dashed];
m6_1976 -> m6_1979  [color=darkseagreen4, key=1, label=list, style=dashed];
m6_1977 -> m6_1978  [key=0, style=solid];
m6_1977 -> m6_1988  [key=2, style=dotted];
m6_1977 -> m6_545  [key=2, style=dotted];
m6_1978 -> m6_1979  [key=0, style=solid];
m6_1978 -> m6_1988  [key=2, style=dotted];
m6_1978 -> m6_545  [key=2, style=dotted];
m6_1979 -> m6_1980  [key=0, style=solid];
m6_1979 -> m6_217  [key=2, style=dotted];
m6_1979 -> m6_1981  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1980 -> m6_1981  [key=0, style=solid];
m6_1980 -> m6_77  [key=2, style=dotted];
m6_1981 -> m6_1982  [key=0, style=solid];
m6_1981 -> m6_218  [key=2, style=dotted];
m6_1981 -> m6_1983  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_1981 -> m6_1984  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_1981 -> m6_1985  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_1981 -> m6_1986  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_1982 -> m6_1983  [key=0, style=solid];
m6_1982 -> m6_77  [key=2, style=dotted];
m6_1983 -> m6_1984  [key=0, style=solid];
m6_1983 -> m6_77  [key=2, style=dotted];
m6_1984 -> m6_1985  [key=0, style=solid];
m6_1984 -> m6_77  [key=2, style=dotted];
m6_1985 -> m6_1986  [key=0, style=solid];
m6_1985 -> m6_77  [key=2, style=dotted];
m6_1986 -> m6_1987  [key=0, style=solid];
m6_1986 -> m6_77  [key=2, style=dotted];
m6_1987 -> m6_1975  [color=blue, key=0, style=bold];
m6_4021 -> m6_4022  [key=0, style=solid];
m6_4022 -> m6_4023  [key=0, style=solid];
m6_4023 -> m6_4021  [color=blue, key=0, style=bold];
m6_3844 -> m6_3845  [key=0, style=solid];
m6_3845 -> m6_3846  [key=0, style=solid];
m6_3846 -> m6_3847  [key=0, style=solid];
m6_3846 -> m6_3771  [key=2, style=dotted];
m6_3847 -> m6_3844  [color=blue, key=0, style=bold];
m6_1912 -> m6_1913  [key=0, style=solid];
m6_1913 -> m6_1914  [key=0, style=solid];
m6_1913 -> m6_1917  [key=2, style=dotted];
m6_1913 -> m6_1918  [key=2, style=dotted];
m6_1913 -> m6_1919  [key=2, style=dotted];
m6_1914 -> m6_1915  [key=0, style=solid];
m6_1914 -> m6_1920  [key=2, style=dotted];
m6_1914 -> m6_1921  [key=2, style=dotted];
m6_1914 -> m6_824  [key=2, style=dotted];
m6_1915 -> m6_1916  [key=0, style=solid];
m6_1915 -> m6_77  [key=2, style=dotted];
m6_1916 -> m6_1912  [color=blue, key=0, style=bold];
m6_2603 -> m6_2604  [key=0, style=solid];
m6_2604 -> m6_2605  [key=0, style=solid];
m6_2604 -> m6_1934  [key=2, style=dotted];
m6_2605 -> m6_2603  [color=blue, key=0, style=bold];
m6_2034 -> m6_2035  [key=0, style=solid];
m6_2035 -> m6_2036  [key=0, style=solid];
m6_2035 -> m6_2007  [key=2, style=dotted];
m6_2036 -> m6_2034  [color=blue, key=0, style=bold];
m6_2708 -> m6_2709  [key=0, style=solid];
m6_2709 -> m6_2710  [key=0, style=solid];
m6_2710 -> m6_2711  [key=0, style=solid];
m6_2710 -> m6_2718  [key=2, style=dotted];
m6_2710 -> m6_2713  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_2711 -> m6_2712  [key=0, style=solid];
m6_2711 -> m6_661  [key=2, style=dotted];
m6_2711 -> m6_2715  [color=darkseagreen4, key=1, label=sw, style=dashed];
m6_2713 -> m6_2714  [key=0, style=solid];
m6_2713 -> m6_2720  [key=2, style=dotted];
m6_2713 -> m6_2721  [key=2, style=dotted];
m6_2712 -> m6_2713  [key=0, style=solid];
m6_2712 -> m6_2719  [key=2, style=dotted];
m6_2712 -> m6_2714  [color=darkseagreen4, key=1, label=jw, style=dashed];
m6_2715 -> m6_2716  [key=0, style=solid];
m6_2715 -> m6_2723  [key=2, style=dotted];
m6_2714 -> m6_2715  [key=0, style=solid];
m6_2714 -> m6_2722  [key=2, style=dotted];
m6_2716 -> m6_2717  [key=0, style=solid];
m6_2716 -> m6_77  [key=2, style=dotted];
m6_2717 -> m6_2708  [color=blue, key=0, style=bold];
m6_13 -> m6_14  [key=0, style=solid];
m6_14 -> m6_15  [key=0, style=solid];
m6_14 -> m6_3  [key=2, style=dotted];
m6_15 -> m6_13  [color=blue, key=0, style=bold];
m6_546 -> m6_547  [key=0, style=solid];
m6_547 -> m6_548  [key=0, style=solid];
m6_547 -> m6_553  [key=2, style=dotted];
m6_547 -> m6_551  [color=darkseagreen4, key=1, label=r1, style=dashed];
m6_548 -> m6_549  [key=0, style=solid];
m6_548 -> m6_217  [key=2, style=dotted];
m6_548 -> m6_550  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m6_551 -> m6_552  [key=0, style=solid];
m6_551 -> m6_77  [key=2, style=dotted];
m6_549 -> m6_550  [key=0, style=solid];
m6_549 -> m6_77  [key=2, style=dotted];
m6_550 -> m6_551  [key=0, style=solid];
m6_550 -> m6_218  [key=2, style=dotted];
m6_552 -> m6_546  [color=blue, key=0, style=bold];
m6_2229 -> m6_2230  [key=0, style=solid];
m6_2230 -> m6_2231  [key=0, style=solid];
m6_2231 -> m6_2229  [color=blue, key=0, style=bold];
m6_2445 -> m6_2446  [key=0, style=solid];
m6_2445 -> m6_2447  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_2446 -> m6_2447  [key=0, style=solid];
m6_2447 -> m6_2448  [key=0, style=solid];
m6_2448 -> m6_2449  [key=0, style=solid];
m6_2449 -> m6_2445  [color=blue, key=0, style=bold];
m6_1152 -> m6_1153  [key=0, style=solid];
m6_1153 -> m6_1152  [color=blue, key=0, style=bold];
m6_1656 -> m6_1657  [key=0, style=solid];
m6_1656 -> m6_1659  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m6_1657 -> m6_1658  [key=0, style=solid];
m6_1657 -> m6_1659  [key=0, style=solid];
m6_1659 -> m6_1660  [key=0, style=solid];
m6_1659 -> m6_1661  [key=0, style=solid];
m6_1658 -> m6_1661  [key=0, style=solid];
m6_1660 -> m6_1659  [key=0, style=solid];
m6_1660 -> m6_1660  [color=darkseagreen4, key=1, label=entry, style=dashed];
m6_1661 -> m6_1656  [color=blue, key=0, style=bold];
m6_2286 -> m6_2287  [key=0, style=solid];
m6_2287 -> m6_2288  [key=0, style=solid];
m6_2287 -> m6_2290  [key=2, style=dotted];
m6_2287 -> m6_227  [key=2, style=dotted];
m6_2288 -> m6_2289  [key=0, style=solid];
m6_2288 -> m6_77  [key=2, style=dotted];
m6_2289 -> m6_2286  [color=blue, key=0, style=bold];
m6_687 -> m6_688  [key=0, style=solid];
m6_688 -> m6_689  [key=0, style=solid];
m6_689 -> m6_690  [key=0, style=solid];
m6_689 -> m6_218  [key=2, style=dotted];
m6_689 -> m6_691  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m6_689 -> m6_692  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m6_689 -> m6_693  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m6_689 -> m6_694  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m6_689 -> m6_695  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m6_690 -> m6_691  [key=0, style=solid];
m6_690 -> m6_77  [key=2, style=dotted];
m6_691 -> m6_692  [key=0, style=solid];
m6_691 -> m6_77  [key=2, style=dotted];
m6_692 -> m6_693  [key=0, style=solid];
m6_692 -> m6_77  [key=2, style=dotted];
m6_693 -> m6_694  [key=0, style=solid];
m6_693 -> m6_77  [key=2, style=dotted];
m6_694 -> m6_695  [key=0, style=solid];
m6_694 -> m6_77  [key=2, style=dotted];
m6_695 -> m6_696  [key=0, style=solid];
m6_695 -> m6_77  [key=2, style=dotted];
m6_696 -> m6_687  [color=blue, key=0, style=bold];
m6_487 -> m6_488  [key=0, style=solid];
m6_488 -> m6_489  [key=0, style=solid];
m6_488 -> m6_494  [key=2, style=dotted];
m6_488 -> m6_217  [key=2, style=dotted];
m6_489 -> m6_490  [key=0, style=solid];
m6_489 -> m6_77  [key=2, style=dotted];
m6_490 -> m6_491  [key=0, style=solid];
m6_490 -> m6_218  [key=2, style=dotted];
m6_490 -> m6_492  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_491 -> m6_492  [key=0, style=solid];
m6_491 -> m6_77  [key=2, style=dotted];
m6_492 -> m6_493  [key=0, style=solid];
m6_492 -> m6_77  [key=2, style=dotted];
m6_493 -> m6_487  [color=blue, key=0, style=bold];
m6_2211 -> m6_2212  [key=0, style=solid];
m6_2212 -> m6_2213  [key=0, style=solid];
m6_2212 -> m6_406  [key=2, style=dotted];
m6_2212 -> m6_2214  [color=darkseagreen4, key=1, label=d, style=dashed];
m6_2212 -> m6_2215  [color=darkseagreen4, key=1, label=d, style=dashed];
m6_2212 -> m6_2216  [color=darkseagreen4, key=1, label=d, style=dashed];
m6_2213 -> m6_2214  [key=0, style=solid];
m6_2213 -> m6_77  [key=2, style=dotted];
m6_2214 -> m6_2215  [key=0, style=solid];
m6_2214 -> m6_77  [key=2, style=dotted];
m6_2215 -> m6_2216  [key=0, style=solid];
m6_2215 -> m6_77  [key=2, style=dotted];
m6_2216 -> m6_2217  [key=0, style=solid];
m6_2216 -> m6_77  [key=2, style=dotted];
m6_2217 -> m6_2211  [color=blue, key=0, style=bold];
m6_565 -> m6_566  [key=0, style=solid];
m6_566 -> m6_567  [key=0, style=solid];
m6_566 -> m6_568  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_566 -> m6_570  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_566 -> m6_571  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_567 -> m6_568  [key=0, style=solid];
m6_567 -> m6_576  [key=2, style=dotted];
m6_568 -> m6_569  [key=0, style=solid];
m6_568 -> m6_577  [key=2, style=dotted];
m6_568 -> m6_574  [color=darkseagreen4, key=1, label=javaScriptSerializerResult, style=dashed];
m6_570 -> m6_571  [key=0, style=solid];
m6_570 -> m6_562  [key=2, style=dotted];
m6_570 -> m6_563  [key=2, style=dotted];
m6_570 -> m6_564  [key=2, style=dotted];
m6_570 -> m6_573  [color=darkseagreen4, key=1, label=dataContractResult, style=dashed];
m6_571 -> m6_572  [key=0, style=solid];
m6_571 -> m6_218  [key=2, style=dotted];
m6_571 -> m6_573  [color=darkseagreen4, key=1, label=jsonNetResult, style=dashed];
m6_571 -> m6_574  [color=darkseagreen4, key=1, label=jsonNetResult, style=dashed];
m6_569 -> m6_570  [key=0, style=solid];
m6_569 -> m6_381  [key=2, style=dotted];
m6_574 -> m6_575  [key=0, style=solid];
m6_574 -> m6_77  [key=2, style=dotted];
m6_573 -> m6_574  [key=0, style=solid];
m6_573 -> m6_77  [key=2, style=dotted];
m6_572 -> m6_573  [key=0, style=solid];
m6_572 -> m6_77  [key=2, style=dotted];
m6_575 -> m6_565  [color=blue, key=0, style=bold];
m6_524 -> m6_525  [key=0, style=solid];
m6_525 -> m6_526  [key=0, style=solid];
m6_525 -> m6_527  [key=2, style=dotted];
m6_525 -> m6_528  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_526 -> m6_524  [color=blue, key=0, style=bold];
m6_3067 -> m6_3068  [key=0, style=solid];
m6_3068 -> m6_3069  [key=0, style=solid];
m6_3068 -> m6_467  [key=2, style=dotted];
m6_3068 -> m6_3070  [key=2, style=dotted];
m6_3069 -> m6_3067  [color=blue, key=0, style=bold];
m6_332 -> m6_333  [key=0, style=solid];
m6_333 -> m6_334  [key=0, style=solid];
m6_333 -> m6_342  [key=2, style=dotted];
m6_333 -> m6_335  [color=darkseagreen4, key=1, label=baseWith, style=dashed];
m6_333 -> m6_336  [color=darkseagreen4, key=1, label=baseWith, style=dashed];
m6_333 -> m6_337  [color=darkseagreen4, key=1, label=baseWith, style=dashed];
m6_333 -> m6_338  [color=darkseagreen4, key=1, label=baseWith, style=dashed];
m6_334 -> m6_335  [key=0, style=solid];
m6_335 -> m6_336  [key=0, style=solid];
m6_336 -> m6_337  [key=0, style=solid];
m6_337 -> m6_338  [key=0, style=solid];
m6_338 -> m6_339  [key=0, style=solid];
m6_338 -> m6_227  [key=2, style=dotted];
m6_338 -> m6_340  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_339 -> m6_340  [key=0, style=solid];
m6_339 -> m6_343  [key=2, style=dotted];
m6_340 -> m6_341  [key=0, style=solid];
m6_340 -> m6_77  [key=2, style=dotted];
m6_341 -> m6_332  [color=blue, key=0, style=bold];
m6_4058 -> m6_4059  [key=0, style=solid];
m6_4059 -> m6_4060  [key=0, style=solid];
m6_4060 -> m6_4058  [color=blue, key=0, style=bold];
m6_2359 -> m6_2360  [key=0, style=solid];
m6_2360 -> m6_2361  [key=0, style=solid];
m6_2361 -> m6_2359  [color=blue, key=0, style=bold];
m6_3431 -> m6_3432  [key=0, style=solid];
m6_3432 -> m6_3433  [key=0, style=solid];
m6_3432 -> m6_3439  [key=2, style=dotted];
m6_3432 -> m6_3434  [color=darkseagreen4, key=1, label=aa, style=dashed];
m6_3432 -> m6_3435  [color=darkseagreen4, key=1, label=aa, style=dashed];
m6_3432 -> m6_3436  [color=darkseagreen4, key=1, label=aa, style=dashed];
m6_3433 -> m6_3434  [key=0, style=solid];
m6_3434 -> m6_3435  [key=0, style=solid];
m6_3435 -> m6_3436  [key=0, style=solid];
m6_3436 -> m6_3437  [key=0, style=solid];
m6_3436 -> m6_217  [key=2, style=dotted];
m6_3437 -> m6_3438  [key=0, style=solid];
m6_3437 -> m6_77  [key=2, style=dotted];
m6_3438 -> m6_3431  [color=blue, key=0, style=bold];
m6_3885 -> m6_3886  [key=0, style=solid];
m6_3885 -> m6_3888  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_3886 -> m6_3887  [key=0, style=solid];
m6_3886 -> m6_3888  [key=0, style=solid];
m6_3888 -> m6_3889  [key=0, style=solid];
m6_3887 -> m6_3889  [key=0, style=solid];
m6_3889 -> m6_3885  [color=blue, key=0, style=bold];
m6_2686 -> m6_2687  [key=0, style=solid];
m6_2687 -> m6_2688  [key=0, style=solid];
m6_2687 -> m6_2685  [key=2, style=dotted];
m6_2687 -> m6_751  [key=2, style=dotted];
m6_2687 -> m6_2697  [key=2, style=dotted];
m6_2687 -> m6_608  [key=2, style=dotted];
m6_2687 -> m6_1219  [key=2, style=dotted];
m6_2687 -> m6_2691  [color=darkseagreen4, key=1, label=c1, style=dashed];
m6_2687 -> m6_2692  [color=darkseagreen4, key=1, label=c1, style=dashed];
m6_2687 -> m6_2693  [color=darkseagreen4, key=1, label=c1, style=dashed];
m6_2687 -> m6_2694  [color=darkseagreen4, key=1, label=c1, style=dashed];
m6_2687 -> m6_2695  [color=darkseagreen4, key=1, label=c1, style=dashed];
m6_2688 -> m6_2689  [key=0, style=solid];
m6_2688 -> m6_227  [key=2, style=dotted];
m6_2688 -> m6_2690  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_2691 -> m6_2692  [key=0, style=solid];
m6_2691 -> m6_77  [key=2, style=dotted];
m6_2692 -> m6_2693  [key=0, style=solid];
m6_2692 -> m6_77  [key=2, style=dotted];
m6_2693 -> m6_2694  [key=0, style=solid];
m6_2693 -> m6_77  [key=2, style=dotted];
m6_2694 -> m6_2695  [key=0, style=solid];
m6_2694 -> m6_77  [key=2, style=dotted];
m6_2695 -> m6_2696  [key=0, style=solid];
m6_2695 -> m6_77  [key=2, style=dotted];
m6_2689 -> m6_2690  [key=0, style=solid];
m6_2689 -> m6_77  [key=2, style=dotted];
m6_2690 -> m6_2691  [key=0, style=solid];
m6_2690 -> m6_218  [key=2, style=dotted];
m6_2690 -> m6_2692  [color=darkseagreen4, key=1, label=c2, style=dashed];
m6_2690 -> m6_2693  [color=darkseagreen4, key=1, label=c2, style=dashed];
m6_2690 -> m6_2694  [color=darkseagreen4, key=1, label=c2, style=dashed];
m6_2690 -> m6_2695  [color=darkseagreen4, key=1, label=c2, style=dashed];
m6_2696 -> m6_2686  [color=blue, key=0, style=bold];
m6_1869 -> m6_1870  [key=0, style=solid];
m6_1870 -> m6_1869  [color=blue, key=0, style=bold];
m6_2095 -> m6_2096  [key=0, style=solid];
m6_2095 -> m6_2097  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_2096 -> m6_2097  [key=0, style=solid];
m6_2097 -> m6_2098  [key=0, style=solid];
m6_2098 -> m6_2095  [color=blue, key=0, style=bold];
m6_3815 -> m6_3816  [key=0, style=solid];
m6_3816 -> m6_3817  [key=0, style=solid];
m6_3816 -> m6_545  [key=2, style=dotted];
m6_3817 -> m6_3815  [color=blue, key=0, style=bold];
m6_3322 -> m6_3323  [key=0, style=solid];
m6_3323 -> m6_3324  [key=0, style=solid];
m6_3324 -> m6_3325  [key=0, style=solid];
m6_3324 -> m6_218  [key=2, style=dotted];
m6_3324 -> m6_3326  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_3324 -> m6_3327  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_3324 -> m6_3328  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_3325 -> m6_3326  [key=0, style=solid];
m6_3325 -> m6_511  [key=2, style=dotted];
m6_3325 -> m6_77  [key=2, style=dotted];
m6_3326 -> m6_3327  [key=0, style=solid];
m6_3326 -> m6_1192  [key=2, style=dotted];
m6_3326 -> m6_77  [key=2, style=dotted];
m6_3327 -> m6_3328  [key=0, style=solid];
m6_3327 -> m6_1192  [key=2, style=dotted];
m6_3327 -> m6_77  [key=2, style=dotted];
m6_3328 -> m6_3329  [key=0, style=solid];
m6_3328 -> m6_1192  [key=2, style=dotted];
m6_3328 -> m6_77  [key=2, style=dotted];
m6_3329 -> m6_3322  [color=blue, key=0, style=bold];
m6_2591 -> m6_2592  [key=0, style=solid];
m6_2592 -> m6_2593  [key=0, style=solid];
m6_2592 -> m6_1934  [key=2, style=dotted];
m6_2593 -> m6_2591  [color=blue, key=0, style=bold];
m6_2559 -> m6_2560  [key=0, style=solid];
m6_2560 -> m6_2561  [key=0, style=solid];
m6_2560 -> m6_2555  [key=2, style=dotted];
m6_2560 -> m6_2562  [color=darkseagreen4, key=1, label=c1, style=dashed];
m6_2560 -> m6_2563  [color=darkseagreen4, key=1, label=c1, style=dashed];
m6_2560 -> m6_2566  [color=darkseagreen4, key=1, label=c1, style=dashed];
m6_2560 -> m6_2567  [color=darkseagreen4, key=1, label=c1, style=dashed];
m6_2561 -> m6_2562  [key=0, style=solid];
m6_2561 -> m6_146  [key=2, style=dotted];
m6_2562 -> m6_2563  [key=0, style=solid];
m6_2562 -> m6_146  [key=2, style=dotted];
m6_2563 -> m6_2564  [key=0, style=solid];
m6_2563 -> m6_227  [key=2, style=dotted];
m6_2563 -> m6_2565  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_2566 -> m6_2567  [key=0, style=solid];
m6_2566 -> m6_77  [key=2, style=dotted];
m6_2567 -> m6_2568  [key=0, style=solid];
m6_2567 -> m6_77  [key=2, style=dotted];
m6_2564 -> m6_2565  [key=0, style=solid];
m6_2564 -> m6_77  [key=2, style=dotted];
m6_2565 -> m6_2566  [key=0, style=solid];
m6_2565 -> m6_218  [key=2, style=dotted];
m6_2565 -> m6_2567  [color=darkseagreen4, key=1, label=c2, style=dashed];
m6_2565 -> m6_2568  [color=darkseagreen4, key=1, label=c2, style=dashed];
m6_2565 -> m6_2569  [color=darkseagreen4, key=1, label=c2, style=dashed];
m6_2568 -> m6_2569  [key=0, style=solid];
m6_2568 -> m6_77  [key=2, style=dotted];
m6_2569 -> m6_2570  [key=0, style=solid];
m6_2569 -> m6_77  [key=2, style=dotted];
m6_2570 -> m6_2559  [color=blue, key=0, style=bold];
m6_1171 -> m6_1172  [key=0, style=solid];
m6_1172 -> m6_1173  [key=0, style=solid];
m6_1173 -> m6_1174  [key=0, style=solid];
m6_1173 -> m6_145  [key=2, style=dotted];
m6_1173 -> m6_856  [key=2, style=dotted];
m6_1173 -> m6_1175  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_1173 -> m6_1176  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_1174 -> m6_1175  [key=0, style=solid];
m6_1174 -> m6_77  [key=2, style=dotted];
m6_1175 -> m6_1176  [key=0, style=solid];
m6_1175 -> m6_77  [key=2, style=dotted];
m6_1176 -> m6_1177  [key=0, style=solid];
m6_1176 -> m6_77  [key=2, style=dotted];
m6_1177 -> m6_1171  [color=blue, key=0, style=bold];
m6_1311 -> m6_1312  [key=0, style=solid];
m6_1312 -> m6_1313  [key=0, style=solid];
m6_1313 -> m6_1314  [key=0, style=solid];
m6_1313 -> m6_218  [key=2, style=dotted];
m6_1314 -> m6_1315  [key=0, style=solid];
m6_1314 -> m6_1319  [key=2, style=dotted];
m6_1314 -> m6_1316  [color=darkseagreen4, key=1, label=a, style=dashed];
m6_1314 -> m6_1317  [color=darkseagreen4, key=1, label=a, style=dashed];
m6_1315 -> m6_1316  [key=0, style=solid];
m6_1315 -> m6_77  [key=2, style=dotted];
m6_1316 -> m6_1317  [key=0, style=solid];
m6_1316 -> m6_77  [key=2, style=dotted];
m6_1317 -> m6_1318  [key=0, style=solid];
m6_1317 -> m6_77  [key=2, style=dotted];
m6_1318 -> m6_1311  [color=blue, key=0, style=bold];
m6_3852 -> m6_3853  [key=0, style=solid];
m6_3853 -> m6_3854  [key=0, style=solid];
m6_3853 -> m6_3861  [key=2, style=dotted];
m6_3853 -> m6_751  [key=2, style=dotted];
m6_3853 -> m6_3855  [color=darkseagreen4, key=1, label=john, style=dashed];
m6_3853 -> m6_3856  [color=darkseagreen4, key=1, label=john, style=dashed];
m6_3853 -> m6_3857  [color=darkseagreen4, key=1, label=john, style=dashed];
m6_3854 -> m6_3855  [key=0, style=solid];
m6_3854 -> m6_3861  [key=2, style=dotted];
m6_3854 -> m6_751  [key=2, style=dotted];
m6_3854 -> m6_3856  [color=darkseagreen4, key=1, label=jane, style=dashed];
m6_3854 -> m6_3857  [color=darkseagreen4, key=1, label=jane, style=dashed];
m6_3855 -> m6_3856  [key=0, style=solid];
m6_3856 -> m6_3857  [key=0, style=solid];
m6_3857 -> m6_3858  [key=0, style=solid];
m6_3857 -> m6_3  [key=2, style=dotted];
m6_3858 -> m6_3859  [key=0, style=solid];
m6_3858 -> m6_145  [key=2, style=dotted];
m6_3858 -> m6_84  [key=2, style=dotted];
m6_3858 -> m6_600  [key=2, style=dotted];
m6_3859 -> m6_3860  [key=0, style=solid];
m6_3859 -> m6_77  [key=2, style=dotted];
m6_3860 -> m6_3852  [color=blue, key=0, style=bold];
m6_1599 -> m6_1600  [key=0, style=solid];
m6_1600 -> m6_1601  [key=0, style=solid];
m6_1601 -> m6_1602  [key=0, style=solid];
m6_1601 -> m6_218  [key=2, style=dotted];
m6_1602 -> m6_1603  [key=0, style=solid];
m6_1602 -> m6_77  [key=2, style=dotted];
m6_1603 -> m6_1599  [color=blue, key=0, style=bold];
m6_1402 -> m6_1403  [key=0, style=solid];
m6_1403 -> m6_1404  [key=0, style=solid];
m6_1403 -> m6_1407  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1404 -> m6_1405  [key=0, style=solid];
m6_1404 -> m6_527  [key=2, style=dotted];
m6_1404 -> m6_1406  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_1405 -> m6_1402  [color=blue, key=0, style=bold];
m6_3549 -> m6_3550  [key=0, style=solid];
m6_3550 -> m6_3551  [key=0, style=solid];
m6_3550 -> m6_3554  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_3551 -> m6_3552  [key=0, style=solid];
m6_3551 -> m6_527  [key=2, style=dotted];
m6_3551 -> m6_3553  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_3552 -> m6_3549  [color=blue, key=0, style=bold];
m6_1604 -> m6_1605  [key=0, style=solid];
m6_1605 -> m6_1606  [key=0, style=solid];
m6_1605 -> m6_1617  [key=2, style=dotted];
m6_1605 -> m6_1610  [color=darkseagreen4, key=1, label=ex, style=dashed];
m6_1606 -> m6_1607  [key=0, style=solid];
m6_1606 -> m6_1618  [key=2, style=dotted];
m6_1606 -> m6_1608  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_1606 -> m6_1609  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_1606 -> m6_1610  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_1606 -> m6_1613  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_1610 -> m6_1611  [key=0, style=solid];
m6_1607 -> m6_1608  [key=0, style=solid];
m6_1607 -> m6_1619  [key=2, style=dotted];
m6_1608 -> m6_1609  [key=0, style=solid];
m6_1608 -> m6_751  [key=2, style=dotted];
m6_1609 -> m6_1610  [key=0, style=solid];
m6_1609 -> m6_1620  [key=2, style=dotted];
m6_1613 -> m6_1614  [key=0, style=solid];
m6_1613 -> m6_383  [key=2, style=dotted];
m6_1611 -> m6_1612  [key=0, style=solid];
m6_1611 -> m6_380  [key=2, style=dotted];
m6_1611 -> m6_1613  [color=darkseagreen4, key=1, label=ms, style=dashed];
m6_1611 -> m6_1614  [color=darkseagreen4, key=1, label=ms, style=dashed];
m6_1612 -> m6_1613  [key=0, style=solid];
m6_1612 -> m6_381  [key=2, style=dotted];
m6_1614 -> m6_1615  [key=0, style=solid];
m6_1614 -> m6_384  [key=2, style=dotted];
m6_1615 -> m6_1616  [key=0, style=solid];
m6_1615 -> m6_385  [key=2, style=dotted];
m6_1616 -> m6_1604  [color=blue, key=0, style=bold];
m6_3312 -> m6_3313  [key=0, style=solid];
m6_3313 -> m6_3314  [key=0, style=solid];
m6_3313 -> m6_2018  [key=2, style=dotted];
m6_3314 -> m6_3312  [color=blue, key=0, style=bold];
m6_462 -> m6_463  [key=0, style=solid];
m6_463 -> m6_464  [key=0, style=solid];
m6_464 -> m6_465  [key=0, style=solid];
m6_464 -> m6_406  [key=2, style=dotted];
m6_465 -> m6_466  [key=0, style=solid];
m6_465 -> m6_467  [key=2, style=dotted];
m6_465 -> m6_77  [key=2, style=dotted];
m6_466 -> m6_462  [color=blue, key=0, style=bold];
m6_1483 -> m6_1484  [key=0, style=solid];
m6_1484 -> m6_1485  [key=0, style=solid];
m6_1484 -> m6_258  [key=2, style=dotted];
m6_1484 -> m6_1486  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m6_1484 -> m6_1487  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m6_1485 -> m6_1486  [key=0, style=solid];
m6_1485 -> m6_751  [key=2, style=dotted];
m6_1485 -> m6_623  [key=2, style=dotted];
m6_1486 -> m6_1487  [key=0, style=solid];
m6_1486 -> m6_751  [key=2, style=dotted];
m6_1486 -> m6_623  [key=2, style=dotted];
m6_1487 -> m6_1488  [key=0, style=solid];
m6_1487 -> m6_227  [key=2, style=dotted];
m6_1488 -> m6_1489  [key=0, style=solid];
m6_1488 -> m6_77  [key=2, style=dotted];
m6_1489 -> m6_1483  [color=blue, key=0, style=bold];
m6_3420 -> m6_3421  [key=0, style=solid];
m6_3421 -> m6_3422  [key=0, style=solid];
m6_3422 -> m6_3423  [key=0, style=solid];
m6_3422 -> m6_218  [key=2, style=dotted];
m6_3422 -> m6_3424  [color=darkseagreen4, key=1, label=c2, style=dashed];
m6_3422 -> m6_3425  [color=darkseagreen4, key=1, label=c2, style=dashed];
m6_3422 -> m6_3426  [color=darkseagreen4, key=1, label=c2, style=dashed];
m6_3422 -> m6_3427  [color=darkseagreen4, key=1, label=c2, style=dashed];
m6_3422 -> m6_3428  [color=darkseagreen4, key=1, label=c2, style=dashed];
m6_3422 -> m6_3429  [color=darkseagreen4, key=1, label=c2, style=dashed];
m6_3423 -> m6_3424  [key=0, style=solid];
m6_3423 -> m6_77  [key=2, style=dotted];
m6_3424 -> m6_3425  [key=0, style=solid];
m6_3424 -> m6_77  [key=2, style=dotted];
m6_3425 -> m6_3426  [key=0, style=solid];
m6_3425 -> m6_77  [key=2, style=dotted];
m6_3426 -> m6_3427  [key=0, style=solid];
m6_3426 -> m6_77  [key=2, style=dotted];
m6_3427 -> m6_3428  [key=0, style=solid];
m6_3427 -> m6_77  [key=2, style=dotted];
m6_3428 -> m6_3429  [key=0, style=solid];
m6_3428 -> m6_77  [key=2, style=dotted];
m6_3429 -> m6_3430  [key=0, style=solid];
m6_3429 -> m6_77  [key=2, style=dotted];
m6_3430 -> m6_3420  [color=blue, key=0, style=bold];
m6_2318 -> m6_2319  [key=0, style=solid];
m6_2319 -> m6_2320  [key=0, style=solid];
m6_2319 -> m6_218  [key=2, style=dotted];
m6_2320 -> m6_2321  [key=0, style=solid];
m6_2320 -> m6_77  [key=2, style=dotted];
m6_2321 -> m6_2318  [color=blue, key=0, style=bold];
m6_3708 -> m6_3709  [key=0, style=solid];
m6_3709 -> m6_3710  [key=0, style=solid];
m6_3709 -> m6_665  [key=2, style=dotted];
m6_3709 -> m6_666  [key=2, style=dotted];
m6_3709 -> m6_3712  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_3710 -> m6_3711  [key=0, style=solid];
m6_3710 -> m6_145  [key=2, style=dotted];
m6_3712 -> m6_3713  [key=0, style=solid];
m6_3712 -> m6_2925  [key=2, style=dotted];
m6_3711 -> m6_3712  [key=0, style=solid];
m6_3711 -> m6_2924  [key=2, style=dotted];
m6_3713 -> m6_3714  [key=0, style=solid];
m6_3713 -> m6_77  [key=2, style=dotted];
m6_3714 -> m6_3708  [color=blue, key=0, style=bold];
m6_3788 -> m6_3789  [key=0, style=solid];
m6_3789 -> m6_3790  [key=0, style=solid];
m6_3790 -> m6_3788  [color=blue, key=0, style=bold];
m6_259 -> m6_260  [key=0, style=solid];
m6_260 -> m6_261  [key=0, style=solid];
m6_261 -> m6_262  [key=0, style=solid];
m6_261 -> m6_218  [key=2, style=dotted];
m6_261 -> m6_263  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_261 -> m6_264  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_261 -> m6_265  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_262 -> m6_263  [key=0, style=solid];
m6_262 -> m6_77  [key=2, style=dotted];
m6_263 -> m6_264  [key=0, style=solid];
m6_263 -> m6_77  [key=2, style=dotted];
m6_264 -> m6_265  [key=0, style=solid];
m6_264 -> m6_77  [key=2, style=dotted];
m6_265 -> m6_266  [key=0, style=solid];
m6_265 -> m6_267  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_266 -> m6_267  [key=0, style=solid];
m6_266 -> m6_77  [key=2, style=dotted];
m6_267 -> m6_268  [key=0, style=solid];
m6_267 -> m6_269  [key=2, style=dotted];
m6_267 -> m6_244  [key=2, style=dotted];
m6_267 -> m6_245  [key=2, style=dotted];
m6_267 -> m6_267  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m6_268 -> m6_259  [color=blue, key=0, style=bold];
m6_3765 -> m6_3766  [key=0, style=solid];
m6_3766 -> m6_3767  [key=0, style=solid];
m6_3767 -> m6_3765  [color=blue, key=0, style=bold];
m6_2218 -> m6_2219  [key=0, style=solid];
m6_2219 -> m6_2220  [key=0, style=solid];
m6_2219 -> m6_2227  [key=2, style=dotted];
m6_2219 -> m6_227  [key=2, style=dotted];
m6_2219 -> m6_2221  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m6_2220 -> m6_2221  [key=0, style=solid];
m6_2220 -> m6_77  [key=2, style=dotted];
m6_2221 -> m6_2222  [key=0, style=solid];
m6_2221 -> m6_218  [key=2, style=dotted];
m6_2221 -> m6_2223  [color=darkseagreen4, key=1, label=d, style=dashed];
m6_2221 -> m6_2224  [color=darkseagreen4, key=1, label=d, style=dashed];
m6_2221 -> m6_2225  [color=darkseagreen4, key=1, label=d, style=dashed];
m6_2222 -> m6_2223  [key=0, style=solid];
m6_2222 -> m6_77  [key=2, style=dotted];
m6_2223 -> m6_2224  [key=0, style=solid];
m6_2223 -> m6_2228  [key=2, style=dotted];
m6_2223 -> m6_245  [key=2, style=dotted];
m6_2224 -> m6_2225  [key=0, style=solid];
m6_2224 -> m6_2228  [key=2, style=dotted];
m6_2224 -> m6_245  [key=2, style=dotted];
m6_2225 -> m6_2226  [key=0, style=solid];
m6_2225 -> m6_2228  [key=2, style=dotted];
m6_2225 -> m6_245  [key=2, style=dotted];
m6_2226 -> m6_2218  [color=blue, key=0, style=bold];
m6_4099 -> m6_4100  [key=0, style=solid];
m6_4100 -> m6_4101  [key=0, style=solid];
m6_4100 -> m6_4079  [key=2, style=dotted];
m6_4100 -> m6_4227  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.Ratio", style=dashed];
m6_4101 -> m6_4099  [color=blue, key=0, style=bold];
m6_1212 -> m6_1213  [key=0, style=solid];
m6_1213 -> m6_1214  [key=0, style=solid];
m6_1213 -> m6_1219  [key=2, style=dotted];
m6_1213 -> m6_1215  [color=darkseagreen4, key=1, label=uri, style=dashed];
m6_1213 -> m6_1217  [color=darkseagreen4, key=1, label=uri, style=dashed];
m6_1214 -> m6_1215  [key=0, style=solid];
m6_1214 -> m6_217  [key=2, style=dotted];
m6_1214 -> m6_1216  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1215 -> m6_1216  [key=0, style=solid];
m6_1215 -> m6_1220  [key=2, style=dotted];
m6_1215 -> m6_77  [key=2, style=dotted];
m6_1217 -> m6_1218  [key=0, style=solid];
m6_1217 -> m6_77  [key=2, style=dotted];
m6_1216 -> m6_1217  [key=0, style=solid];
m6_1216 -> m6_218  [key=2, style=dotted];
m6_1218 -> m6_1212  [color=blue, key=0, style=bold];
m6_2052 -> m6_2053  [key=0, style=solid];
m6_2053 -> m6_2054  [key=0, style=solid];
m6_2053 -> m6_258  [key=2, style=dotted];
m6_2053 -> m6_2055  [color=darkseagreen4, key=1, label=reference, style=dashed];
m6_2053 -> m6_2059  [color=darkseagreen4, key=1, label=reference, style=dashed];
m6_2054 -> m6_2055  [key=0, style=solid];
m6_2054 -> m6_623  [key=2, style=dotted];
m6_2055 -> m6_2056  [key=0, style=solid];
m6_2055 -> m6_623  [key=2, style=dotted];
m6_2059 -> m6_2060  [key=0, style=solid];
m6_2059 -> m6_623  [key=2, style=dotted];
m6_2056 -> m6_2057  [key=0, style=solid];
m6_2056 -> m6_258  [key=2, style=dotted];
m6_2056 -> m6_2058  [color=darkseagreen4, key=1, label=child, style=dashed];
m6_2056 -> m6_2059  [color=darkseagreen4, key=1, label=child, style=dashed];
m6_2056 -> m6_2060  [color=darkseagreen4, key=1, label=child, style=dashed];
m6_2057 -> m6_2058  [key=0, style=solid];
m6_2057 -> m6_623  [key=2, style=dotted];
m6_2058 -> m6_2059  [key=0, style=solid];
m6_2058 -> m6_623  [key=2, style=dotted];
m6_2060 -> m6_2061  [key=0, style=solid];
m6_2060 -> m6_227  [key=2, style=dotted];
m6_2060 -> m6_2064  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_2061 -> m6_2062  [key=0, style=solid];
m6_2061 -> m6_527  [key=2, style=dotted];
m6_2061 -> m6_2063  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_2062 -> m6_2052  [color=blue, key=0, style=bold];
m6_3149 -> m6_3150  [key=0, style=solid];
m6_3150 -> m6_3151  [key=0, style=solid];
m6_3150 -> m6_3148  [key=2, style=dotted];
m6_3151 -> m6_3152  [key=0, style=solid];
m6_3151 -> m6_217  [key=2, style=dotted];
m6_3152 -> m6_3153  [key=0, style=solid];
m6_3152 -> m6_77  [key=2, style=dotted];
m6_3153 -> m6_3149  [color=blue, key=0, style=bold];
m6_2850 -> m6_2851  [key=0, style=solid];
m6_2851 -> m6_2852  [key=0, style=solid];
m6_2851 -> m6_2855  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_2852 -> m6_2853  [key=0, style=solid];
m6_2852 -> m6_527  [key=2, style=dotted];
m6_2852 -> m6_2854  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_2853 -> m6_2850  [color=blue, key=0, style=bold];
m6_3848 -> m6_3849  [key=0, style=solid];
m6_3848 -> m6_3850  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_3849 -> m6_3850  [key=0, style=solid];
m6_3849 -> m6_751  [key=2, style=dotted];
m6_3850 -> m6_3851  [key=0, style=solid];
m6_3851 -> m6_3848  [color=blue, key=0, style=bold];
m6_3970 -> m6_3971  [key=0, style=solid];
m6_3970 -> m6_3973  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_3971 -> m6_3972  [key=0, style=solid];
m6_3971 -> m6_3973  [key=0, style=solid];
m6_3973 -> m6_3974  [key=0, style=solid];
m6_3973 -> m6_2944  [key=2, style=dotted];
m6_3973 -> m6_467  [key=2, style=dotted];
m6_3973 -> m6_3975  [key=2, style=dotted];
m6_3972 -> m6_3974  [key=0, style=solid];
m6_3974 -> m6_3970  [color=blue, key=0, style=bold];
m6_3684 -> m6_3685  [key=0, style=solid];
m6_3685 -> m6_3686  [key=0, style=solid];
m6_3685 -> m6_3692  [key=2, style=dotted];
m6_3685 -> m6_3688  [color=darkseagreen4, key=1, label=s1, style=dashed];
m6_3685 -> m6_3689  [color=darkseagreen4, key=1, label=s1, style=dashed];
m6_3686 -> m6_3687  [key=0, style=solid];
m6_3686 -> m6_217  [key=2, style=dotted];
m6_3688 -> m6_3689  [key=0, style=solid];
m6_3688 -> m6_77  [key=2, style=dotted];
m6_3689 -> m6_3690  [key=0, style=solid];
m6_3689 -> m6_3691  [key=0, style=solid];
m6_3687 -> m6_3688  [key=0, style=solid];
m6_3687 -> m6_218  [key=2, style=dotted];
m6_3687 -> m6_3690  [color=darkseagreen4, key=1, label=s2, style=dashed];
m6_3690 -> m6_3689  [key=0, style=solid];
m6_3690 -> m6_1643  [key=2, style=dotted];
m6_3690 -> m6_245  [key=2, style=dotted];
m6_3691 -> m6_3684  [color=blue, key=0, style=bold];
m6_495 -> m6_496  [key=0, style=solid];
m6_496 -> m6_497  [key=0, style=solid];
m6_496 -> m6_316  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m6_496 -> m6_496  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m6_497 -> m6_498  [key=0, style=solid];
m6_497 -> m6_501  [key=2, style=dotted];
m6_498 -> m6_499  [key=0, style=solid];
m6_499 -> m6_500  [key=0, style=solid];
m6_499 -> m6_499  [color=darkseagreen4, key=1, label=s, style=dashed];
m6_500 -> m6_495  [color=blue, key=0, style=bold];
m6_1935 -> m6_1936  [key=0, style=solid];
m6_1936 -> m6_1937  [key=0, style=solid];
m6_1936 -> m6_1938  [key=2, style=dotted];
m6_1937 -> m6_1935  [color=blue, key=0, style=bold];
m6_1281 -> m6_1282  [key=0, style=solid];
m6_1282 -> m6_1283  [key=0, style=solid];
m6_1282 -> m6_422  [key=2, style=dotted];
m6_1282 -> m6_596  [key=2, style=dotted];
m6_1282 -> m6_1285  [color=darkseagreen4, key=1, label=p1, style=dashed];
m6_1283 -> m6_1284  [key=0, style=solid];
m6_1283 -> m6_422  [key=2, style=dotted];
m6_1283 -> m6_596  [key=2, style=dotted];
m6_1283 -> m6_1286  [color=darkseagreen4, key=1, label=p2, style=dashed];
m6_1285 -> m6_1286  [key=0, style=solid];
m6_1285 -> m6_545  [key=2, style=dotted];
m6_1284 -> m6_1285  [key=0, style=solid];
m6_1284 -> m6_3  [key=2, style=dotted];
m6_1284 -> m6_1286  [color=darkseagreen4, key=1, label=products, style=dashed];
m6_1284 -> m6_1287  [color=darkseagreen4, key=1, label=products, style=dashed];
m6_1286 -> m6_1287  [key=0, style=solid];
m6_1286 -> m6_545  [key=2, style=dotted];
m6_1287 -> m6_1288  [key=0, style=solid];
m6_1287 -> m6_227  [key=2, style=dotted];
m6_1288 -> m6_1289  [key=0, style=solid];
m6_1288 -> m6_77  [key=2, style=dotted];
m6_1289 -> m6_1281  [color=blue, key=0, style=bold];
m6_3965 -> m6_3966  [key=0, style=solid];
m6_3965 -> m6_3967  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_3966 -> m6_3967  [key=0, style=solid];
m6_3967 -> m6_3968  [key=0, style=solid];
m6_3967 -> m6_3969  [key=2, style=dotted];
m6_3967 -> m6_3292  [key=2, style=dotted];
m6_3967 -> m6_3967  [color=darkseagreen4, key=1, label=id, style=dashed];
m6_3968 -> m6_3965  [color=blue, key=0, style=bold];
m6_4073 -> m6_4074  [key=0, style=solid];
m6_4074 -> m6_4075  [key=0, style=solid];
m6_4075 -> m6_4073  [color=blue, key=0, style=bold];
m6_1568 -> m6_1569  [key=0, style=solid];
m6_1569 -> m6_1570  [key=0, style=solid];
m6_1569 -> m6_218  [key=2, style=dotted];
m6_1570 -> m6_1571  [key=0, style=solid];
m6_1570 -> m6_930  [key=2, style=dotted];
m6_1570 -> m6_77  [key=2, style=dotted];
m6_1571 -> m6_1572  [key=0, style=solid];
m6_1571 -> m6_218  [key=2, style=dotted];
m6_1572 -> m6_1573  [key=0, style=solid];
m6_1572 -> m6_930  [key=2, style=dotted];
m6_1572 -> m6_77  [key=2, style=dotted];
m6_1573 -> m6_1568  [color=blue, key=0, style=bold];
m6_2735 -> m6_3981  [key=0, style=solid];
m6_3981 -> m6_3982  [key=0, style=solid];
m6_3981 -> m6_3983  [key=2, style=dotted];
m6_3982 -> m6_2735  [color=blue, key=0, style=bold];
m6_3879 -> m6_3880  [key=0, style=solid];
m6_3879 -> m6_3882  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_3880 -> m6_3881  [key=0, style=solid];
m6_3880 -> m6_3882  [key=0, style=solid];
m6_3882 -> m6_3883  [key=0, style=solid];
m6_3882 -> m6_467  [key=2, style=dotted];
m6_3882 -> m6_3884  [key=2, style=dotted];
m6_3882 -> m6_3882  [color=darkseagreen4, key=1, label=w, style=dashed];
m6_3881 -> m6_3883  [key=0, style=solid];
m6_3883 -> m6_3879  [color=blue, key=0, style=bold];
m6_3667 -> m6_3668  [key=0, style=solid];
m6_3668 -> m6_3669  [key=0, style=solid];
m6_3668 -> m6_258  [key=2, style=dotted];
m6_3668 -> m6_596  [key=2, style=dotted];
m6_3668 -> m6_607  [key=2, style=dotted];
m6_3668 -> m6_608  [key=2, style=dotted];
m6_3668 -> m6_3671  [color=darkseagreen4, key=1, label=dates, style=dashed];
m6_3669 -> m6_3670  [key=0, style=solid];
m6_3669 -> m6_227  [key=2, style=dotted];
m6_3669 -> m6_3672  [color=darkseagreen4, key=1, label=expected, style=dashed];
m6_3669 -> m6_3673  [color=darkseagreen4, key=1, label=expected, style=dashed];
m6_3671 -> m6_3672  [key=0, style=solid];
m6_3671 -> m6_145  [key=2, style=dotted];
m6_3671 -> m6_1110  [key=2, style=dotted];
m6_3671 -> m6_3673  [color=darkseagreen4, key=1, label=actual, style=dashed];
m6_3670 -> m6_3671  [key=0, style=solid];
m6_3670 -> m6_343  [key=2, style=dotted];
m6_3672 -> m6_3673  [key=0, style=solid];
m6_3672 -> m6_343  [key=2, style=dotted];
m6_3673 -> m6_3674  [key=0, style=solid];
m6_3673 -> m6_77  [key=2, style=dotted];
m6_3674 -> m6_3667  [color=blue, key=0, style=bold];
m6_3163 -> m6_3164  [key=0, style=solid];
m6_3164 -> m6_3165  [key=0, style=solid];
m6_3164 -> m6_258  [key=2, style=dotted];
m6_3164 -> m6_607  [key=2, style=dotted];
m6_3165 -> m6_3166  [key=0, style=solid];
m6_3165 -> m6_145  [key=2, style=dotted];
m6_3165 -> m6_1110  [key=2, style=dotted];
m6_3165 -> m6_3167  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_3166 -> m6_3167  [key=0, style=solid];
m6_3166 -> m6_77  [key=2, style=dotted];
m6_3167 -> m6_3168  [key=0, style=solid];
m6_3167 -> m6_218  [key=2, style=dotted];
m6_3167 -> m6_3169  [color=darkseagreen4, key=1, label=dic2, style=dashed];
m6_3167 -> m6_3170  [color=darkseagreen4, key=1, label=dic2, style=dashed];
m6_3168 -> m6_3169  [key=0, style=solid];
m6_3168 -> m6_77  [key=2, style=dotted];
m6_3169 -> m6_3170  [key=0, style=solid];
m6_3169 -> m6_607  [key=2, style=dotted];
m6_3169 -> m6_77  [key=2, style=dotted];
m6_3170 -> m6_3171  [key=0, style=solid];
m6_3170 -> m6_607  [key=2, style=dotted];
m6_3170 -> m6_77  [key=2, style=dotted];
m6_3171 -> m6_3163  [color=blue, key=0, style=bold];
m6_474 -> m6_475  [key=0, style=solid];
m6_475 -> m6_476  [key=0, style=solid];
m6_475 -> m6_480  [key=2, style=dotted];
m6_475 -> m6_217  [key=2, style=dotted];
m6_476 -> m6_477  [key=0, style=solid];
m6_476 -> m6_218  [key=2, style=dotted];
m6_476 -> m6_478  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_477 -> m6_478  [key=0, style=solid];
m6_477 -> m6_77  [key=2, style=dotted];
m6_478 -> m6_479  [key=0, style=solid];
m6_478 -> m6_77  [key=2, style=dotted];
m6_479 -> m6_474  [color=blue, key=0, style=bold];
m6_638 -> m6_639  [key=0, style=solid];
m6_638 -> m6_638  [color=darkorchid, key=3, label="Local variable int valueCount", style=bold];
m6_639 -> m6_640  [key=0, style=solid];
m6_639 -> m6_423  [key=2, style=dotted];
m6_639 -> m6_646  [color=darkseagreen4, key=1, label=d, style=dashed];
m6_640 -> m6_641  [key=0, style=solid];
m6_640 -> m6_643  [color=darkseagreen4, key=1, label=anonymous, style=dashed];
m6_640 -> m6_645  [color=darkseagreen4, key=1, label=anonymous, style=dashed];
m6_640 -> m6_316  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m6_646 -> m6_647  [key=0, style=solid];
m6_646 -> m6_77  [key=2, style=dotted];
m6_641 -> m6_642  [key=0, style=solid];
m6_641 -> m6_145  [key=2, style=dotted];
m6_641 -> m6_643  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_641 -> m6_645  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_643 -> m6_644  [key=0, style=solid];
m6_643 -> m6_600  [key=2, style=dotted];
m6_643 -> m6_645  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_645 -> m6_646  [key=0, style=solid];
m6_645 -> m6_649  [key=2, style=dotted];
m6_645 -> m6_645  [color=darkseagreen4, key=1, label=anonymous, style=dashed];
m6_642 -> m6_643  [key=0, style=solid];
m6_642 -> m6_648  [key=2, style=dotted];
m6_642 -> m6_146  [key=2, style=dotted];
m6_642 -> m6_316  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m6_644 -> m6_645  [key=0, style=solid];
m6_644 -> m6_77  [key=2, style=dotted];
m6_647 -> m6_638  [color=blue, key=0, style=bold];
m6_2509 -> m6_2510  [key=0, style=solid];
m6_2510 -> m6_2511  [key=0, style=solid];
m6_2510 -> m6_2512  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_2511 -> m6_2512  [key=0, style=solid];
m6_2511 -> m6_218  [key=2, style=dotted];
m6_2511 -> m6_2513  [color=darkseagreen4, key=1, label=withoutParameterisedConstructor, style=dashed];
m6_2512 -> m6_2513  [key=0, style=solid];
m6_2512 -> m6_218  [key=2, style=dotted];
m6_2513 -> m6_2514  [key=0, style=solid];
m6_2513 -> m6_77  [key=2, style=dotted];
m6_2514 -> m6_2509  [color=blue, key=0, style=bold];
m6_3759 -> m6_3760  [key=0, style=solid];
m6_3760 -> m6_3761  [key=0, style=solid];
m6_3760 -> m6_218  [key=2, style=dotted];
m6_3760 -> m6_3762  [color=darkseagreen4, key=1, label=dic, style=dashed];
m6_3760 -> m6_3763  [color=darkseagreen4, key=1, label=dic, style=dashed];
m6_3761 -> m6_3762  [key=0, style=solid];
m6_3761 -> m6_77  [key=2, style=dotted];
m6_3762 -> m6_3763  [key=0, style=solid];
m6_3762 -> m6_77  [key=2, style=dotted];
m6_3763 -> m6_3764  [key=0, style=solid];
m6_3763 -> m6_77  [key=2, style=dotted];
m6_3764 -> m6_3759  [color=blue, key=0, style=bold];
m6_3255 -> m6_3256  [key=0, style=solid];
m6_3256 -> m6_3257  [key=0, style=solid];
m6_3257 -> m6_3258  [key=0, style=solid];
m6_3257 -> m6_218  [key=2, style=dotted];
m6_3257 -> m6_3259  [color=darkseagreen4, key=1, label=exception, style=dashed];
m6_3257 -> m6_3260  [color=darkseagreen4, key=1, label=exception, style=dashed];
m6_3258 -> m6_3259  [key=0, style=solid];
m6_3258 -> m6_1068  [key=2, style=dotted];
m6_3259 -> m6_3260  [key=0, style=solid];
m6_3259 -> m6_1270  [key=2, style=dotted];
m6_3260 -> m6_3261  [key=0, style=solid];
m6_3260 -> m6_77  [key=2, style=dotted];
m6_3261 -> m6_3255  [color=blue, key=0, style=bold];
m6_2023 -> m6_2024  [key=0, style=solid];
m6_2024 -> m6_2025  [key=0, style=solid];
m6_2024 -> m6_2031  [key=2, style=dotted];
m6_2024 -> m6_2026  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_2024 -> m6_2027  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_2024 -> m6_2028  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_2024 -> m6_2029  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_2025 -> m6_2026  [key=0, style=solid];
m6_2025 -> m6_3  [key=2, style=dotted];
m6_2026 -> m6_2027  [key=0, style=solid];
m6_2026 -> m6_145  [key=2, style=dotted];
m6_2026 -> m6_3  [key=2, style=dotted];
m6_2026 -> m6_2032  [key=2, style=dotted];
m6_2026 -> m6_2033  [key=2, style=dotted];
m6_2027 -> m6_2028  [key=0, style=solid];
m6_2027 -> m6_77  [key=2, style=dotted];
m6_2028 -> m6_2029  [key=0, style=solid];
m6_2028 -> m6_77  [key=2, style=dotted];
m6_2029 -> m6_2030  [key=0, style=solid];
m6_2029 -> m6_77  [key=2, style=dotted];
m6_2030 -> m6_2023  [color=blue, key=0, style=bold];
m6_1556 -> m6_1557  [key=0, style=solid];
m6_1557 -> m6_1558  [key=0, style=solid];
m6_1557 -> m6_1566  [key=2, style=dotted];
m6_1557 -> m6_1559  [color=darkseagreen4, key=1, label=g, style=dashed];
m6_1557 -> m6_1560  [color=darkseagreen4, key=1, label=g, style=dashed];
m6_1557 -> m6_1561  [color=darkseagreen4, key=1, label=g, style=dashed];
m6_1558 -> m6_1559  [key=0, style=solid];
m6_1558 -> m6_1567  [key=2, style=dotted];
m6_1558 -> m6_1547  [key=2, style=dotted];
m6_1559 -> m6_1560  [key=0, style=solid];
m6_1559 -> m6_1567  [key=2, style=dotted];
m6_1559 -> m6_1547  [key=2, style=dotted];
m6_1560 -> m6_1561  [key=0, style=solid];
m6_1561 -> m6_1562  [key=0, style=solid];
m6_1561 -> m6_1553  [key=2, style=dotted];
m6_1561 -> m6_1563  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1562 -> m6_1563  [key=0, style=solid];
m6_1562 -> m6_77  [key=2, style=dotted];
m6_1563 -> m6_1564  [key=0, style=solid];
m6_1563 -> m6_218  [key=2, style=dotted];
m6_1564 -> m6_1565  [key=0, style=solid];
m6_1564 -> m6_77  [key=2, style=dotted];
m6_1565 -> m6_1556  [color=blue, key=0, style=bold];
m6_4044 -> m6_4045  [key=0, style=solid];
m6_4045 -> m6_4046  [key=0, style=solid];
m6_4046 -> m6_4044  [color=blue, key=0, style=bold];
m6_903 -> m6_904  [key=0, style=solid];
m6_904 -> m6_905  [key=0, style=solid];
m6_904 -> m6_907  [key=2, style=dotted];
m6_904 -> m6_217  [key=2, style=dotted];
m6_905 -> m6_906  [key=0, style=solid];
m6_905 -> m6_77  [key=2, style=dotted];
m6_906 -> m6_903  [color=blue, key=0, style=bold];
m6_3726 -> m6_3727  [key=0, style=solid];
m6_3727 -> m6_3728  [key=0, style=solid];
m6_3727 -> m6_1895  [key=2, style=dotted];
m6_3728 -> m6_3729  [key=0, style=solid];
m6_3728 -> m6_227  [key=2, style=dotted];
m6_3729 -> m6_3730  [key=0, style=solid];
m6_3729 -> m6_77  [key=2, style=dotted];
m6_3730 -> m6_3726  [color=blue, key=0, style=bold];
m6_4007 -> m6_4008  [key=0, style=solid];
m6_4008 -> m6_4009  [key=0, style=solid];
m6_4008 -> m6_4010  [key=2, style=dotted];
m6_4008 -> m6_4011  [key=2, style=dotted];
m6_4009 -> m6_4007  [color=blue, key=0, style=bold];
m6_1414 -> m6_1415  [key=0, style=solid];
m6_1415 -> m6_1416  [key=0, style=solid];
m6_1415 -> m6_527  [key=2, style=dotted];
m6_1415 -> m6_1417  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_1416 -> m6_1414  [color=blue, key=0, style=bold];
m6_513 -> m6_514  [key=0, style=solid];
m6_514 -> m6_515  [key=0, style=solid];
m6_514 -> m6_523  [key=2, style=dotted];
m6_514 -> m6_516  [color=darkseagreen4, key=1, label=test, style=dashed];
m6_514 -> m6_517  [color=darkseagreen4, key=1, label=test, style=dashed];
m6_514 -> m6_520  [color=darkseagreen4, key=1, label=test, style=dashed];
m6_514 -> m6_521  [color=darkseagreen4, key=1, label=test, style=dashed];
m6_515 -> m6_516  [key=0, style=solid];
m6_516 -> m6_517  [key=0, style=solid];
m6_517 -> m6_518  [key=0, style=solid];
m6_517 -> m6_217  [key=2, style=dotted];
m6_517 -> m6_519  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m6_520 -> m6_521  [key=0, style=solid];
m6_520 -> m6_77  [key=2, style=dotted];
m6_521 -> m6_522  [key=0, style=solid];
m6_521 -> m6_77  [key=2, style=dotted];
m6_518 -> m6_519  [key=0, style=solid];
m6_518 -> m6_77  [key=2, style=dotted];
m6_519 -> m6_520  [key=0, style=solid];
m6_519 -> m6_218  [key=2, style=dotted];
m6_519 -> m6_521  [color=darkseagreen4, key=1, label=test2, style=dashed];
m6_522 -> m6_513  [color=blue, key=0, style=bold];
m6_2986 -> m6_2987  [key=0, style=solid];
m6_2987 -> m6_2988  [key=0, style=solid];
m6_2987 -> m6_218  [key=2, style=dotted];
m6_2988 -> m6_2989  [key=0, style=solid];
m6_2988 -> m6_1897  [key=2, style=dotted];
m6_2989 -> m6_2986  [color=blue, key=0, style=bold];
m6_2542 -> m6_2543  [key=0, style=solid];
m6_2543 -> m6_2544  [key=0, style=solid];
m6_2543 -> m6_2548  [key=2, style=dotted];
m6_2544 -> m6_2545  [key=0, style=solid];
m6_2544 -> m6_217  [key=2, style=dotted];
m6_2544 -> m6_2546  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_2545 -> m6_2546  [key=0, style=solid];
m6_2545 -> m6_343  [key=2, style=dotted];
m6_2546 -> m6_2547  [key=0, style=solid];
m6_2546 -> m6_77  [key=2, style=dotted];
m6_2547 -> m6_2542  [color=blue, key=0, style=bold];
m6_3772 -> m6_3773  [key=0, style=solid];
m6_3773 -> m6_3774  [key=0, style=solid];
m6_3773 -> m6_3775  [key=2, style=dotted];
m6_3774 -> m6_3772  [color=blue, key=0, style=bold];
m6_2864 -> m6_2865  [key=0, style=solid];
m6_2865 -> m6_2866  [key=0, style=solid];
m6_2865 -> m6_2869  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_2866 -> m6_2867  [key=0, style=solid];
m6_2866 -> m6_527  [key=2, style=dotted];
m6_2866 -> m6_2868  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_2867 -> m6_2864  [color=blue, key=0, style=bold];
m6_2635 -> m6_2636  [key=0, style=solid];
m6_2636 -> m6_2637  [key=0, style=solid];
m6_2636 -> m6_218  [key=2, style=dotted];
m6_2636 -> m6_2638  [color=darkseagreen4, key=1, label=r, style=dashed];
m6_2636 -> m6_2639  [color=darkseagreen4, key=1, label=r, style=dashed];
m6_2636 -> m6_2640  [color=darkseagreen4, key=1, label=r, style=dashed];
m6_2636 -> m6_2641  [color=darkseagreen4, key=1, label=r, style=dashed];
m6_2637 -> m6_2638  [key=0, style=solid];
m6_2637 -> m6_382  [key=2, style=dotted];
m6_2637 -> m6_77  [key=2, style=dotted];
m6_2638 -> m6_2639  [key=0, style=solid];
m6_2638 -> m6_511  [key=2, style=dotted];
m6_2638 -> m6_77  [key=2, style=dotted];
m6_2639 -> m6_2640  [key=0, style=solid];
m6_2639 -> m6_1192  [key=2, style=dotted];
m6_2639 -> m6_1068  [key=2, style=dotted];
m6_2640 -> m6_2641  [key=0, style=solid];
m6_2640 -> m6_1192  [key=2, style=dotted];
m6_2640 -> m6_1068  [key=2, style=dotted];
m6_2641 -> m6_2642  [key=0, style=solid];
m6_2641 -> m6_1192  [key=2, style=dotted];
m6_2641 -> m6_1897  [key=2, style=dotted];
m6_2642 -> m6_2635  [color=blue, key=0, style=bold];
m6_1257 -> m6_1258  [key=0, style=solid];
m6_1258 -> m6_1259  [key=0, style=solid];
m6_1259 -> m6_1260  [key=0, style=solid];
m6_1259 -> m6_218  [key=2, style=dotted];
m6_1259 -> m6_1261  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_1259 -> m6_1262  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_1259 -> m6_1263  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_1259 -> m6_1264  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_1259 -> m6_1265  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_1259 -> m6_1266  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_1259 -> m6_1267  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_1259 -> m6_1268  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_1260 -> m6_1261  [key=0, style=solid];
m6_1260 -> m6_77  [key=2, style=dotted];
m6_1261 -> m6_1262  [key=0, style=solid];
m6_1261 -> m6_77  [key=2, style=dotted];
m6_1262 -> m6_1263  [key=0, style=solid];
m6_1262 -> m6_77  [key=2, style=dotted];
m6_1263 -> m6_1264  [key=0, style=solid];
m6_1263 -> m6_77  [key=2, style=dotted];
m6_1264 -> m6_1265  [key=0, style=solid];
m6_1264 -> m6_1270  [key=2, style=dotted];
m6_1265 -> m6_1266  [key=0, style=solid];
m6_1265 -> m6_77  [key=2, style=dotted];
m6_1266 -> m6_1267  [key=0, style=solid];
m6_1266 -> m6_1270  [key=2, style=dotted];
m6_1267 -> m6_1268  [key=0, style=solid];
m6_1267 -> m6_77  [key=2, style=dotted];
m6_1268 -> m6_1269  [key=0, style=solid];
m6_1268 -> m6_77  [key=2, style=dotted];
m6_1269 -> m6_1257  [color=blue, key=0, style=bold];
m6_4135 -> m6_1  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericClass<T, TValue>", style=dashed];
m6_4135 -> m6_5  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericClass<T, TValue>", style=dashed];
m6_4135 -> m6_6  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericClass<T, TValue>", style=dashed];
m6_4135 -> m6_11  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericClass<T, TValue>", style=dashed];
m6_4136 -> m6_14  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExtensionDataTestClass", style=dashed];
m6_4137 -> m6_327  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest", style=dashed];
m6_4137 -> m6_350  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest", style=dashed];
m6_4137 -> m6_360  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest", style=dashed];
m6_4137 -> m6_3196  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest", style=dashed];
m6_4137 -> m6_3202  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest", style=dashed];
m6_4137 -> m6_3203  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest", style=dashed];
m6_4138 -> m6_583  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_4139 -> m6_854  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_4140 -> m6_1037  [color=darkseagreen4, key=1, label=strFromTest, style=dashed];
m6_4141 -> m6_1155  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers", style=dashed];
m6_4141 -> m6_1156  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers", style=dashed];
m6_4141 -> m6_1157  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers", style=dashed];
m6_4141 -> m6_1158  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers", style=dashed];
m6_4141 -> m6_1161  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers", style=dashed];
m6_4142 -> m6_1309  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_4143 -> m6_1336  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_4144 -> m6_1343  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_4145 -> m6_1350  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_4146 -> m6_1357  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_4147 -> m6_1364  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_4148 -> m6_1371  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_4149 -> m6_1378  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_4150 -> m6_1385  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_4151 -> m6_1392  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_4152 -> m6_1399  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_4153 -> m6_1407  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_4154 -> m6_1532  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass", style=dashed];
m6_4154 -> m6_1533  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass", style=dashed];
m6_4155 -> m6_1548  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>", style=dashed];
m6_4155 -> m6_1551  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>", style=dashed];
m6_4155 -> m6_1554  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>", style=dashed];
m6_4156 -> m6_1587  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_4157 -> m6_1591  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor", style=dashed];
m6_4158 -> m6_1627  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m6_4158 -> m6_1631  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m6_4158 -> m6_1634  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m6_4158 -> m6_1637  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m6_4158 -> m6_1641  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m6_4158 -> m6_1645  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m6_4158 -> m6_1649  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m6_4158 -> m6_1653  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m6_4158 -> m6_1660  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m6_4158 -> m6_1663  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m6_4158 -> m6_1667  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m6_4158 -> m6_1671  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m6_4158 -> m6_1675  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m6_4159 -> m6_1688  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m6_4159 -> m6_1689  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m6_4159 -> m6_1690  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m6_4159 -> m6_1691  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m6_4159 -> m6_1692  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m6_4159 -> m6_1695  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m6_4159 -> m6_1696  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m6_4159 -> m6_1697  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m6_4159 -> m6_1698  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m6_4159 -> m6_1699  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m6_4159 -> m6_1700  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m6_4159 -> m6_1701  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m6_4159 -> m6_1702  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m6_4159 -> m6_1703  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m6_4159 -> m6_1704  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m6_4159 -> m6_1705  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m6_4159 -> m6_1706  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m6_4159 -> m6_1707  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m6_4159 -> m6_1708  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m6_4159 -> m6_1709  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m6_4159 -> m6_1710  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m6_4159 -> m6_1711  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m6_4159 -> m6_1712  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m6_4159 -> m6_1730  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m6_4159 -> m6_1731  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m6_4159 -> m6_1732  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m6_4159 -> m6_1733  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m6_4159 -> m6_1734  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m6_4159 -> m6_1736  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m6_4159 -> m6_1737  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m6_4159 -> m6_1738  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m6_4159 -> m6_1739  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m6_4159 -> m6_1740  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m6_4159 -> m6_1741  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m6_4159 -> m6_1742  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m6_4159 -> m6_1743  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m6_4159 -> m6_1744  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m6_4159 -> m6_1745  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m6_4159 -> m6_1746  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m6_4159 -> m6_1747  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m6_4160 -> m6_1804  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>", style=dashed];
m6_4160 -> m6_1805  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>", style=dashed];
m6_4161 -> m6_1860  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA", style=dashed];
m6_4161 -> m6_1861  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA", style=dashed];
m6_4161 -> m6_1862  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA", style=dashed];
m6_4161 -> m6_1863  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA", style=dashed];
m6_4161 -> m6_1864  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA", style=dashed];
m6_4161 -> m6_1865  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA", style=dashed];
m6_4161 -> m6_1866  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA", style=dashed];
m6_4161 -> m6_1867  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA", style=dashed];
m6_4162 -> m6_1871  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB", style=dashed];
m6_4162 -> m6_1872  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB", style=dashed];
m6_4162 -> m6_1873  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB", style=dashed];
m6_4162 -> m6_1874  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB", style=dashed];
m6_4162 -> m6_1875  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB", style=dashed];
m6_4162 -> m6_1876  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB", style=dashed];
m6_4162 -> m6_1877  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB", style=dashed];
m6_4162 -> m6_1878  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB", style=dashed];
m6_4162 -> m6_1879  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB", style=dashed];
m6_4162 -> m6_1880  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB", style=dashed];
m6_4163 -> m6_1964  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListTestClass", style=dashed];
m6_4164 -> m6_2064  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_4165 -> m6_2096  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty", style=dashed];
m6_4165 -> m6_2097  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty", style=dashed];
m6_4166 -> m6_2127  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Employee", style=dashed];
m6_4167 -> m6_2192  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey", style=dashed];
m6_4168 -> m6_2230  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyClass", style=dashed];
m6_4169 -> m6_2252  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_4170 -> m6_2338  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector", style=dashed];
m6_4171 -> m6_2355  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived", style=dashed];
m6_4172 -> m6_2360  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base", style=dashed];
m6_4174 -> m6_2374  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable", style=dashed];
m6_4175 -> m6_2410  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DecimalTest", style=dashed];
m6_4176 -> m6_2419  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructor", style=dashed];
m6_4176 -> m6_2422  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructor", style=dashed];
m6_4176 -> m6_2423  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructor", style=dashed];
m6_4177 -> m6_2430  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructor", style=dashed];
m6_4177 -> m6_2433  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructor", style=dashed];
m6_4177 -> m6_2434  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructor", style=dashed];
m6_4178 -> m6_2442  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor", style=dashed];
m6_4178 -> m6_2443  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor", style=dashed];
m6_4178 -> m6_2446  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor", style=dashed];
m6_4178 -> m6_2447  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor", style=dashed];
m6_4178 -> m6_2448  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor", style=dashed];
m6_4179 -> m6_2503  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor", style=dashed];
m6_4179 -> m6_2504  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor", style=dashed];
m6_4180 -> m6_2507  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithoutParameterisedConstructor", style=dashed];
m6_4181 -> m6_2556  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty", style=dashed];
m6_4181 -> m6_2557  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty", style=dashed];
m6_4182 -> m6_2572  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty", style=dashed];
m6_4182 -> m6_2573  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty", style=dashed];
m6_4183 -> m6_2618  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes", style=dashed];
m6_4183 -> m6_2619  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes", style=dashed];
m6_4183 -> m6_2620  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes", style=dashed];
m6_4183 -> m6_2623  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes", style=dashed];
m6_4183 -> m6_2626  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes", style=dashed];
m6_4184 -> m6_2650  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException", style=dashed];
m6_4185 -> m6_2769  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_4186 -> m6_2855  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_4187 -> m6_2869  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_4188 -> m6_3107  [color=darkseagreen4, key=1, label=errors, style=dashed];
m6_4189 -> m6_3122  [color=darkseagreen4, key=1, label=errors, style=dashed];
m6_4190 -> m6_3137  [color=darkseagreen4, key=1, label=errors, style=dashed];
m6_4191 -> m6_3253  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_4192 -> m6_3253  [color=darkseagreen4, key=1, label=s, style=dashed];
m6_4193 -> m6_3313  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass<T>", style=dashed];
m6_4193 -> m6_3316  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass<T>", style=dashed];
m6_4193 -> m6_3320  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass<T>", style=dashed];
m6_4194 -> m6_3331  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClassFailure<T>", style=dashed];
m6_4194 -> m6_3334  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClassFailure<T>", style=dashed];
m6_4194 -> m6_3337  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClassFailure<T>", style=dashed];
m6_4195 -> m6_3344  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_4196 -> m6_3347  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>", style=dashed];
m6_4197 -> m6_3350  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuplePartial<T1>", style=dashed];
m6_4198 -> m6_3389  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_4199 -> m6_3400  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver", style=dashed];
m6_4200 -> m6_3403  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyTestClass", style=dashed];
m6_4200 -> m6_3404  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyTestClass", style=dashed];
m6_4200 -> m6_3405  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyTestClass", style=dashed];
m6_4200 -> m6_3406  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyTestClass", style=dashed];
m6_4200 -> m6_3407  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyTestClass", style=dashed];
m6_4200 -> m6_3408  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyTestClass", style=dashed];
m6_4200 -> m6_3409  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyTestClass", style=dashed];
m6_4200 -> m6_3410  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyTestClass", style=dashed];
m6_4200 -> m6_3411  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyTestClass", style=dashed];
m6_4200 -> m6_3412  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyTestClass", style=dashed];
m6_4201 -> m6_3487  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_4202 -> m6_3494  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_4203 -> m6_3514  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_4204 -> m6_3521  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_4205 -> m6_3528  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_4206 -> m6_3554  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_4207 -> m6_3561  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_4208 -> m6_3654  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_4209 -> m6_3766  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>", style=dashed];
m6_4209 -> m6_3769  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>", style=dashed];
m6_4209 -> m6_3773  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>", style=dashed];
m6_4209 -> m6_3777  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>", style=dashed];
m6_4209 -> m6_3780  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>", style=dashed];
m6_4210 -> m6_3789  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyCollection<T>", style=dashed];
m6_4210 -> m6_3792  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyCollection<T>", style=dashed];
m6_4210 -> m6_3795  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyCollection<T>", style=dashed];
m6_4211 -> m6_3816  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateDefaultCtorWithIEnumerableCtorList<T>", style=dashed];
m6_4212 -> m6_3835  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IdReferenceResolver", style=dashed];
m6_4212 -> m6_3840  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IdReferenceResolver", style=dashed];
m6_4212 -> m6_3846  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IdReferenceResolver", style=dashed];
m6_4212 -> m6_3850  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IdReferenceResolver", style=dashed];
m6_4213 -> m6_3882  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyInterfaceConverter", style=dashed];
m6_4214 -> m6_3894  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConsoleWriter", style=dashed];
m6_4215 -> m6_3897  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TraceWriter", style=dashed];
m6_4216 -> m6_3915  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterJsonConverter", style=dashed];
m6_4216 -> m6_3921  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterJsonConverter", style=dashed];
m6_4216 -> m6_3926  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterJsonConverter", style=dashed];
m6_4217 -> m6_3952  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.AnswerFilterModel", style=dashed];
m6_4218 -> m6_3978  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.TestObject", style=dashed];
m6_4218 -> m6_3979  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.TestObject", style=dashed];
m6_4219 -> m6_3981  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.GameObject", style=dashed];
m6_4220 -> m6_4022  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTestClass", style=dashed];
m6_4221 -> m6_4025  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.DirectoryAccount", style=dashed];
m6_4221 -> m6_4026  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.DirectoryAccount", style=dashed];
m6_4221 -> m6_4027  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.DirectoryAccount", style=dashed];
m6_4224 -> m6_4038  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.Ratio", style=dashed];
m6_4224 -> m6_4039  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.Ratio", style=dashed];
m6_4224 -> m6_4045  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.Ratio", style=dashed];
m6_4224 -> m6_4048  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.Ratio", style=dashed];
m6_4224 -> m6_4051  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.Ratio", style=dashed];
m6_4224 -> m6_4055  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.Ratio", style=dashed];
m6_4224 -> m6_4059  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.Ratio", style=dashed];
m6_4224 -> m6_4062  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.Ratio", style=dashed];
m6_4224 -> m6_4065  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.Ratio", style=dashed];
m6_4224 -> m6_4068  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.Ratio", style=dashed];
m6_4224 -> m6_4071  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.Ratio", style=dashed];
m6_4224 -> m6_4074  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.Ratio", style=dashed];
m6_4224 -> m6_4077  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.Ratio", style=dashed];
m6_4224 -> m6_4080  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.Ratio", style=dashed];
m6_4224 -> m6_4084  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.Ratio", style=dashed];
m6_4224 -> m6_4088  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.Ratio", style=dashed];
m6_4224 -> m6_4091  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.Ratio", style=dashed];
m6_4224 -> m6_4094  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.Ratio", style=dashed];
m6_4224 -> m6_4097  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.Ratio", style=dashed];
m6_4224 -> m6_4100  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.Ratio", style=dashed];
m6_4225 -> m6_4085  [color=darkseagreen4, key=1, label="ref Newtonsoft.Json.Tests.Serialization.Ratio", style=dashed];
m6_4226 -> m6_4098  [color=darkseagreen4, key=1, label="ref Newtonsoft.Json.Tests.Serialization.Ratio", style=dashed];
m6_4227 -> m6_4101  [color=darkseagreen4, key=1, label="ref Newtonsoft.Json.Tests.Serialization.Ratio", style=dashed];
m7_76 -> m7_77  [key=0, style=solid];
m7_77 -> m7_78  [key=0, style=solid];
m7_77 -> m7_79  [key=2, style=dotted];
m7_78 -> m7_76  [color=blue, key=0, style=bold];
m7_12 -> m7_13  [key=0, style=solid];
m7_13 -> m7_14  [key=0, style=solid];
m7_13 -> m7_15  [key=2, style=dotted];
m7_14 -> m7_12  [color=blue, key=0, style=bold];
m7_69 -> m7_70  [key=0, style=solid];
m7_70 -> m7_71  [key=0, style=solid];
m7_70 -> m7_72  [key=2, style=dotted];
m7_70 -> m7_73  [key=2, style=dotted];
m7_71 -> m7_69  [color=blue, key=0, style=bold];
m7_16 -> m7_17  [key=0, style=solid];
m7_16 -> m7_18  [color=darkseagreen4, key=1, label=object, style=dashed];
m7_16 -> m7_19  [color=darkseagreen4, key=1, label=object, style=dashed];
m7_17 -> m7_18  [key=0, style=solid];
m7_17 -> m7_23  [key=2, style=dotted];
m7_17 -> m7_19  [color=darkseagreen4, key=1, label=ms, style=dashed];
m7_17 -> m7_20  [color=darkseagreen4, key=1, label=ms, style=dashed];
m7_18 -> m7_19  [key=0, style=solid];
m7_18 -> m7_24  [key=2, style=dotted];
m7_18 -> m7_25  [key=2, style=dotted];
m7_19 -> m7_20  [key=0, style=solid];
m7_19 -> m7_26  [key=2, style=dotted];
m7_20 -> m7_21  [key=0, style=solid];
m7_20 -> m7_27  [key=2, style=dotted];
m7_21 -> m7_22  [key=0, style=solid];
m7_21 -> m7_28  [key=2, style=dotted];
m7_22 -> m7_16  [color=blue, key=0, style=bold];
m7_4 -> m7_5  [key=0, style=solid];
m7_5 -> m7_6  [key=0, style=solid];
m7_5 -> m7_7  [key=2, style=dotted];
m7_6 -> m7_4  [color=blue, key=0, style=bold];
m7_83 -> m7_84  [key=0, style=solid];
m7_83 -> m7_80  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m7_83 -> m7_81  [color=darkorchid, key=3, label="Parameter variable string message", style=bold];
m7_84 -> m7_85  [key=0, style=solid];
m7_84 -> m7_86  [key=2, style=dotted];
m7_85 -> m7_83  [color=blue, key=0, style=bold];
m7_92 -> m7_100  [key=0, style=solid];
m7_92 -> m7_101  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_92 -> m7_102  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_92 -> m7_87  [color=darkorchid, key=3, label="Parameter variable string s", style=bold];
m7_92 -> m7_94  [color=darkorchid, key=3, label="Parameter variable string s", style=bold];
m7_92 -> m7_92  [color=darkorchid, key=3, label="method methodReturn string Normalize", style=bold];
m7_100 -> m7_101  [key=0, style=solid];
m7_100 -> m7_102  [key=0, style=solid];
m7_101 -> m7_102  [key=0, style=solid];
m7_101 -> m7_104  [key=2, style=dotted];
m7_101 -> m7_101  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_102 -> m7_103  [key=0, style=solid];
m7_103 -> m7_92  [color=blue, key=0, style=bold];
m7_49 -> m7_50  [key=0, style=solid];
m7_49 -> m7_51  [color=darkorchid, key=3, label="method methodReturn byte[] HexToBytes", style=bold];
m7_50 -> m7_51  [key=0, style=solid];
m7_50 -> m7_48  [key=2, style=dotted];
m7_50 -> m7_54  [color=darkseagreen4, key=1, label=fixedHex, style=dashed];
m7_51 -> m7_52  [key=0, style=solid];
m7_51 -> m7_58  [color=darkseagreen4, key=1, label=bytes, style=dashed];
m7_51 -> m7_62  [color=darkseagreen4, key=1, label=bytes, style=dashed];
m7_54 -> m7_55  [key=0, style=solid];
m7_54 -> m7_62  [key=0, style=solid];
m7_52 -> m7_53  [key=0, style=solid];
m7_52 -> m7_58  [color=darkseagreen4, key=1, label=shift, style=dashed];
m7_52 -> m7_59  [color=darkseagreen4, key=1, label=shift, style=dashed];
m7_52 -> m7_52  [color=darkorchid, key=3, label="Local variable int shift", style=bold];
m7_58 -> m7_59  [key=0, style=solid];
m7_62 -> m7_63  [key=0, style=solid];
m7_53 -> m7_54  [key=0, style=solid];
m7_53 -> m7_58  [color=darkseagreen4, key=1, label=offset, style=dashed];
m7_53 -> m7_61  [color=darkseagreen4, key=1, label=offset, style=dashed];
m7_53 -> m7_31  [color=darkorchid, key=3, label="Local variable int offset", style=bold];
m7_59 -> m7_60  [key=0, style=solid];
m7_59 -> m7_59  [color=darkseagreen4, key=1, label=shift, style=dashed];
m7_61 -> m7_54  [key=0, style=solid];
m7_61 -> m7_61  [color=darkseagreen4, key=1, label=offset, style=dashed];
m7_55 -> m7_56  [key=0, style=solid];
m7_55 -> m7_57  [color=darkseagreen4, key=1, label=b, style=dashed];
m7_55 -> m7_58  [color=darkseagreen4, key=1, label=b, style=dashed];
m7_56 -> m7_57  [key=0, style=solid];
m7_56 -> m7_58  [key=0, style=solid];
m7_57 -> m7_58  [key=0, style=solid];
m7_57 -> m7_57  [color=darkseagreen4, key=1, label=b, style=dashed];
m7_60 -> m7_61  [key=0, style=solid];
m7_60 -> m7_54  [key=0, style=solid];
m7_63 -> m7_49  [color=blue, key=0, style=bold];
m7_8 -> m7_9  [key=0, style=solid];
m7_9 -> m7_10  [key=0, style=solid];
m7_9 -> m7_11  [key=2, style=dotted];
m7_10 -> m7_8  [color=blue, key=0, style=bold];
m7_94 -> m7_95  [key=0, style=solid];
m7_94 -> m7_96  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_94 -> m7_92  [color=darkorchid, key=3, label="Parameter variable string s2", style=bold];
m7_94 -> m7_112  [color=darkorchid, key=3, label="Parameter variable string s1", style=bold];
m7_94 -> m7_133  [color=darkorchid, key=3, label="Parameter variable string s1", style=bold];
m7_95 -> m7_96  [key=0, style=solid];
m7_95 -> m7_92  [key=2, style=dotted];
m7_95 -> m7_95  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_95 -> m7_97  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_96 -> m7_97  [key=0, style=solid];
m7_96 -> m7_92  [key=2, style=dotted];
m7_96 -> m7_96  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_97 -> m7_98  [key=0, style=solid];
m7_97 -> m7_99  [key=2, style=dotted];
m7_98 -> m7_94  [color=blue, key=0, style=bold];
m7_72 -> m7_74  [key=0, style=solid];
m7_72 -> m7_69  [color=darkorchid, key=3, label="Parameter variable string json", style=bold];
m7_74 -> m7_75  [key=0, style=solid];
m7_74 -> m7_48  [key=2, style=dotted];
m7_75 -> m7_72  [color=blue, key=0, style=bold];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_2  [key=0, style=solid];
m7_1 -> m7_3  [key=2, style=dotted];
m7_2 -> m7_0  [color=blue, key=0, style=bold];
m7_41 -> m7_42  [key=0, style=solid];
m7_41 -> m7_43  [color=darkseagreen4, key=1, label=bool, style=dashed];
m7_41 -> m7_38  [color=darkorchid, key=3, label="Parameter variable byte[] bytes", style=bold];
m7_41 -> m7_39  [color=darkorchid, key=3, label="Parameter variable bool removeDashes", style=bold];
m7_42 -> m7_43  [key=0, style=solid];
m7_42 -> m7_47  [key=2, style=dotted];
m7_42 -> m7_44  [color=darkseagreen4, key=1, label=hex, style=dashed];
m7_42 -> m7_45  [color=darkseagreen4, key=1, label=hex, style=dashed];
m7_43 -> m7_44  [key=0, style=solid];
m7_43 -> m7_45  [key=0, style=solid];
m7_44 -> m7_45  [key=0, style=solid];
m7_44 -> m7_48  [key=2, style=dotted];
m7_44 -> m7_44  [color=darkseagreen4, key=1, label=hex, style=dashed];
m7_45 -> m7_46  [key=0, style=solid];
m7_46 -> m7_41  [color=blue, key=0, style=bold];
m7_64 -> m7_65  [key=0, style=solid];
m7_65 -> m7_66  [key=0, style=solid];
m7_66 -> m7_67  [key=0, style=solid];
m7_67 -> m7_68  [key=0, style=solid];
m7_68 -> m7_64  [color=blue, key=0, style=bold];
m7_29 -> m7_30  [key=0, style=solid];
m7_29 -> m7_31  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m7_30 -> m7_31  [key=0, style=solid];
m7_30 -> m7_32  [color=darkseagreen4, key=1, label=chars, style=dashed];
m7_31 -> m7_32  [key=0, style=solid];
m7_31 -> m7_34  [key=2, style=dotted];
m7_31 -> m7_35  [key=2, style=dotted];
m7_31 -> m7_36  [key=2, style=dotted];
m7_32 -> m7_33  [key=0, style=solid];
m7_32 -> m7_37  [key=2, style=dotted];
m7_33 -> m7_29  [color=blue, key=0, style=bold];
m7_87 -> m7_88  [key=0, style=solid];
m7_87 -> m7_89  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_87 -> m7_92  [color=darkorchid, key=3, label="Parameter variable string actual", style=bold];
m7_88 -> m7_89  [key=0, style=solid];
m7_88 -> m7_92  [key=2, style=dotted];
m7_88 -> m7_88  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_88 -> m7_90  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_89 -> m7_90  [key=0, style=solid];
m7_89 -> m7_92  [key=2, style=dotted];
m7_89 -> m7_89  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_90 -> m7_91  [key=0, style=solid];
m7_90 -> m7_93  [key=2, style=dotted];
m7_91 -> m7_87  [color=blue, key=0, style=bold];
m7_80 -> m7_81  [key=0, style=solid];
m7_81 -> m7_82  [key=0, style=solid];
m7_81 -> m7_83  [key=2, style=dotted];
m7_82 -> m7_80  [color=blue, key=0, style=bold];
m7_38 -> m7_39  [key=0, style=solid];
m7_38 -> m7_41  [color=darkorchid, key=3, label="method methodReturn string BytesToHex", style=bold];
m7_39 -> m7_40  [key=0, style=solid];
m7_39 -> m7_41  [key=2, style=dotted];
m7_40 -> m7_38  [color=blue, key=0, style=bold];
m7_105 -> m7_106  [key=0, style=solid];
m7_105 -> m7_110  [color=darkseagreen4, key=1, label="params string[]", style=dashed];
m7_105 -> m7_112  [color=darkseagreen4, key=1, label="params string[]", style=dashed];
m7_105 -> m7_115  [color=darkseagreen4, key=1, label="params string[]", style=dashed];
m7_105 -> m7_81  [color=darkorchid, key=3, label="method methodReturn TException Throws", style=bold];
m7_105 -> m7_109  [color=darkorchid, key=3, label="method methodReturn TException Throws", style=bold];
m7_106 -> m7_107  [key=0, style=solid];
m7_106 -> m7_119  [key=2, style=dotted];
m7_110 -> m7_111  [key=0, style=solid];
m7_110 -> m7_112  [key=0, style=solid];
m7_112 -> m7_113  [key=0, style=solid];
m7_112 -> m7_115  [key=0, style=solid];
m7_115 -> m7_118  [key=0, style=solid];
m7_115 -> m7_121  [key=2, style=dotted];
m7_115 -> m7_122  [key=2, style=dotted];
m7_107 -> m7_108  [key=0, style=solid];
m7_107 -> m7_120  [key=2, style=dotted];
m7_108 -> m7_118  [key=0, style=solid];
m7_109 -> m7_110  [key=0, style=solid];
m7_111 -> m7_118  [key=0, style=solid];
m7_113 -> m7_114  [key=0, style=solid];
m7_113 -> m7_112  [key=0, style=solid];
m7_113 -> m7_94  [key=2, style=dotted];
m7_114 -> m7_118  [key=0, style=solid];
m7_116 -> m7_117  [key=0, style=solid];
m7_117 -> m7_118  [key=0, style=solid];
m7_117 -> m7_123  [key=2, style=dotted];
m7_117 -> m7_124  [key=2, style=dotted];
m7_117 -> m7_125  [key=2, style=dotted];
m7_118 -> m7_105  [color=blue, key=0, style=bold];
m7_126 -> m7_127  [key=0, style=solid];
m7_126 -> m7_131  [color=darkseagreen4, key=1, label="params string[]", style=dashed];
m7_126 -> m7_133  [color=darkseagreen4, key=1, label="params string[]", style=dashed];
m7_126 -> m7_136  [color=darkseagreen4, key=1, label="params string[]", style=dashed];
m7_126 -> m7_81  [color=darkorchid, key=3, label="method methodReturn System.Threading.Tasks.Task<TException> ThrowsAsync", style=bold];
m7_126 -> m7_130  [color=darkorchid, key=3, label="method methodReturn System.Threading.Tasks.Task<TException> ThrowsAsync", style=bold];
m7_127 -> m7_128  [key=0, style=solid];
m7_127 -> m7_140  [key=2, style=dotted];
m7_131 -> m7_132  [key=0, style=solid];
m7_131 -> m7_133  [key=0, style=solid];
m7_133 -> m7_134  [key=0, style=solid];
m7_133 -> m7_136  [key=0, style=solid];
m7_136 -> m7_139  [key=0, style=solid];
m7_136 -> m7_121  [key=2, style=dotted];
m7_136 -> m7_122  [key=2, style=dotted];
m7_128 -> m7_129  [key=0, style=solid];
m7_128 -> m7_120  [key=2, style=dotted];
m7_129 -> m7_139  [key=0, style=solid];
m7_130 -> m7_131  [key=0, style=solid];
m7_132 -> m7_139  [key=0, style=solid];
m7_134 -> m7_135  [key=0, style=solid];
m7_134 -> m7_133  [key=0, style=solid];
m7_134 -> m7_94  [key=2, style=dotted];
m7_135 -> m7_139  [key=0, style=solid];
m7_137 -> m7_138  [key=0, style=solid];
m7_138 -> m7_139  [key=0, style=solid];
m7_138 -> m7_123  [key=2, style=dotted];
m7_138 -> m7_124  [key=2, style=dotted];
m7_138 -> m7_125  [key=2, style=dotted];
m7_139 -> m7_126  [color=blue, key=0, style=bold];
m7_141 -> m7_39  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestFixtureBase", style=dashed];
m7_141 -> m7_70  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestFixtureBase", style=dashed];
m8_59 -> m8_1  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.VersionClass", style=dashed];
m8_59 -> m8_2  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.VersionClass", style=dashed];
m8_59 -> m8_3  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.VersionClass", style=dashed];
m8_59 -> m8_4  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.VersionClass", style=dashed];
m8_479 -> m8_480  [key=0, style=solid];
m8_479 -> m8_481  [color=darkseagreen4, key=1, label="System.Dynamic.BinaryOperationBinder", style=dashed];
m8_479 -> m8_483  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_479 -> m8_486  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_479 -> m8_489  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_479 -> m8_492  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_479 -> m8_495  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_479 -> m8_498  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_479 -> m8_508  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_480 -> m8_481  [key=0, style=solid];
m8_480 -> m8_483  [color=darkseagreen4, key=1, label=compareValue, style=dashed];
m8_480 -> m8_486  [color=darkseagreen4, key=1, label=compareValue, style=dashed];
m8_480 -> m8_489  [color=darkseagreen4, key=1, label=compareValue, style=dashed];
m8_480 -> m8_492  [color=darkseagreen4, key=1, label=compareValue, style=dashed];
m8_480 -> m8_495  [color=darkseagreen4, key=1, label=compareValue, style=dashed];
m8_480 -> m8_498  [color=darkseagreen4, key=1, label=compareValue, style=dashed];
m8_480 -> m8_508  [color=darkseagreen4, key=1, label=compareValue, style=dashed];
m8_481 -> m8_482  [key=0, style=solid];
m8_481 -> m8_485  [key=0, style=solid];
m8_481 -> m8_488  [key=0, style=solid];
m8_481 -> m8_491  [key=0, style=solid];
m8_481 -> m8_494  [key=0, style=solid];
m8_481 -> m8_497  [key=0, style=solid];
m8_481 -> m8_500  [key=0, style=solid];
m8_483 -> m8_484  [key=0, style=solid];
m8_483 -> m8_64  [key=2, style=dotted];
m8_486 -> m8_487  [key=0, style=solid];
m8_486 -> m8_64  [key=2, style=dotted];
m8_489 -> m8_490  [key=0, style=solid];
m8_489 -> m8_64  [key=2, style=dotted];
m8_492 -> m8_493  [key=0, style=solid];
m8_492 -> m8_64  [key=2, style=dotted];
m8_495 -> m8_496  [key=0, style=solid];
m8_495 -> m8_64  [key=2, style=dotted];
m8_498 -> m8_499  [key=0, style=solid];
m8_498 -> m8_64  [key=2, style=dotted];
m8_508 -> m8_509  [key=0, style=solid];
m8_508 -> m8_511  [key=0, style=solid];
m8_508 -> m8_169  [key=2, style=dotted];
m8_482 -> m8_483  [key=0, style=solid];
m8_485 -> m8_486  [key=0, style=solid];
m8_488 -> m8_489  [key=0, style=solid];
m8_491 -> m8_492  [key=0, style=solid];
m8_494 -> m8_495  [key=0, style=solid];
m8_497 -> m8_498  [key=0, style=solid];
m8_500 -> m8_501  [key=0, style=solid];
m8_484 -> m8_513  [key=0, style=solid];
m8_487 -> m8_513  [key=0, style=solid];
m8_490 -> m8_513  [key=0, style=solid];
m8_493 -> m8_513  [key=0, style=solid];
m8_496 -> m8_513  [key=0, style=solid];
m8_499 -> m8_513  [key=0, style=solid];
m8_501 -> m8_502  [key=0, style=solid];
m8_502 -> m8_503  [key=0, style=solid];
m8_503 -> m8_504  [key=0, style=solid];
m8_504 -> m8_505  [key=0, style=solid];
m8_505 -> m8_506  [key=0, style=solid];
m8_506 -> m8_507  [key=0, style=solid];
m8_507 -> m8_508  [key=0, style=solid];
m8_509 -> m8_510  [key=0, style=solid];
m8_509 -> m8_32  [key=2, style=dotted];
m8_509 -> m8_509  [color=darkseagreen4, key=1, label="out object", style=dashed];
m8_511 -> m8_512  [key=0, style=solid];
m8_511 -> m8_513  [color=darkseagreen4, key=1, label="out object", style=dashed];
m8_510 -> m8_513  [key=0, style=solid];
m8_512 -> m8_513  [key=0, style=solid];
m8_513 -> m8_479  [color=blue, key=0, style=bold];
m8_555 -> m8_556  [key=0, style=solid];
m8_556 -> m8_557  [key=0, style=solid];
m8_557 -> m8_555  [color=blue, key=0, style=bold];
m8_537 -> m8_538  [key=0, style=solid];
m8_538 -> m8_539  [key=0, style=solid];
m8_539 -> m8_537  [color=blue, key=0, style=bold];
m8_276 -> m8_277  [key=0, style=solid];
m8_277 -> m8_278  [key=0, style=solid];
m8_277 -> m8_0  [key=2, style=dotted];
m8_278 -> m8_276  [color=blue, key=0, style=bold];
m8_561 -> m8_562  [key=0, style=solid];
m8_562 -> m8_563  [key=0, style=solid];
m8_563 -> m8_561  [color=blue, key=0, style=bold];
m8_16 -> m8_17  [key=0, style=solid];
m8_525 -> m8_526  [key=0, style=solid];
m8_526 -> m8_527  [key=0, style=solid];
m8_526 -> m8_528  [key=0, style=solid];
m8_527 -> m8_532  [key=0, style=solid];
m8_528 -> m8_529  [key=0, style=solid];
m8_528 -> m8_531  [color=darkseagreen4, key=1, label=convertable, style=dashed];
m8_529 -> m8_530  [key=0, style=solid];
m8_529 -> m8_531  [key=0, style=solid];
m8_531 -> m8_532  [key=0, style=solid];
m8_531 -> m8_533  [key=2, style=dotted];
m8_530 -> m8_532  [key=0, style=solid];
m8_532 -> m8_525  [color=blue, key=0, style=bold];
m8_4 -> m8_5  [key=0, style=solid];
m8_5 -> m8_4  [color=blue, key=0, style=bold];
m8_5 -> m8_0  [color=blue, key=0, style=bold];
m8_143 -> m8_162  [key=0, style=solid];
m8_143 -> m8_163  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_162 -> m8_163  [key=0, style=solid];
m8_162 -> m8_60  [key=2, style=dotted];
m8_162 -> m8_164  [color=darkseagreen4, key=1, label=d1, style=dashed];
m8_162 -> m8_166  [color=darkseagreen4, key=1, label=d1, style=dashed];
m8_163 -> m8_164  [key=0, style=solid];
m8_163 -> m8_60  [key=2, style=dotted];
m8_163 -> m8_166  [color=darkseagreen4, key=1, label=d2, style=dashed];
m8_164 -> m8_165  [key=0, style=solid];
m8_164 -> m8_166  [key=0, style=solid];
m8_164 -> m8_168  [key=2, style=dotted];
m8_166 -> m8_167  [key=0, style=solid];
m8_166 -> m8_63  [key=2, style=dotted];
m8_165 -> m8_167  [key=0, style=solid];
m8_167 -> m8_143  [color=blue, key=0, style=bold];
m8_19 -> m8_20  [color=green, key=0, style=solid];
m8_19 -> m8_18  [color=blue, key=0, style=bold];
m8_20 -> m8_21  [color=green, key=0, style=solid];
m8_20 -> m8_9  [color=green, key=2, style=dotted];
m8_21 -> m8_22  [color=green, key=0, style=solid];
m8_21 -> m8_9  [color=green, key=2, style=dotted];
m8_21 -> m8_20  [color=blue, key=0, style=bold];
m8_22 -> m8_23  [color=green, key=0, style=solid];
m8_22 -> m8_9  [color=green, key=2, style=dotted];
m8_23 -> m8_24  [color=green, key=0, style=solid];
m8_23 -> m8_9  [color=green, key=2, style=dotted];
m8_23 -> m8_22  [color=blue, key=0, style=bold];
m8_24 -> m8_25  [color=green, key=0, style=solid];
m8_24 -> m8_9  [color=green, key=2, style=dotted];
m8_25 -> m8_26  [color=green, key=0, style=solid];
m8_25 -> m8_9  [color=green, key=2, style=dotted];
m8_25 -> m8_24  [color=blue, key=0, style=bold];
m8_26 -> m8_27  [color=green, key=0, style=solid];
m8_26 -> m8_9  [color=green, key=2, style=dotted];
m8_27 -> m8_19  [color=blue, key=0, style=bold];
m8_27 -> m8_26  [color=blue, key=0, style=bold];
m8_18 -> m8_19  [key=0, style=solid];
m8_30 -> m8_31  [key=0, style=solid];
m8_30 -> m8_34  [color=green, key=1, label=expectedVersion1, style=dashed];
m8_30 -> m8_6  [key=2, style=dotted];
m8_31 -> m8_30  [color=blue, key=0, style=bold];
m8_31 -> m8_35  [color=green, key=1, label=expectedVersion2, style=dashed];
m8_31 -> m8_32  [key=0, style=solid];
m8_31 -> m8_6  [key=2, style=dotted];
m8_567 -> m8_568  [key=0, style=solid];
m8_568 -> m8_569  [key=0, style=solid];
m8_569 -> m8_567  [color=blue, key=0, style=bold];
m8_422 -> m8_423  [key=0, style=solid];
m8_422 -> m8_425  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_423 -> m8_424  [key=0, style=solid];
m8_423 -> m8_425  [key=0, style=solid];
m8_425 -> m8_426  [key=0, style=solid];
m8_425 -> m8_42  [key=2, style=dotted];
m8_424 -> m8_426  [key=0, style=solid];
m8_426 -> m8_422  [color=blue, key=0, style=bold];
m8_0 -> m8_1  [key=0, style=solid];
m8_0 -> m8_2  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenType", style=dashed];
m8_0 -> m8_3  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_1 -> m8_2  [key=0, style=solid];
m8_2 -> m8_3  [key=0, style=solid];
m8_2 -> m8_6  [key=2, style=dotted];
m8_3 -> m8_4  [key=0, style=solid];
m8_3 -> m8_6  [key=2, style=dotted];
m8_3 -> m8_0  [color=blue, key=0, style=bold];
m8_564 -> m8_565  [key=0, style=solid];
m8_565 -> m8_566  [key=0, style=solid];
m8_566 -> m8_564  [color=blue, key=0, style=bold];
m8_552 -> m8_553  [key=0, style=solid];
m8_553 -> m8_554  [key=0, style=solid];
m8_554 -> m8_552  [color=blue, key=0, style=bold];
m8_285 -> m8_286  [key=0, style=solid];
m8_285 -> m8_288  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_285 -> m8_290  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_285 -> m8_291  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenType?", style=dashed];
m8_285 -> m8_292  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_285 -> m8_294  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_285 -> m8_296  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_285 -> m8_298  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_285 -> m8_300  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_285 -> m8_302  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_285 -> m8_304  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_285 -> m8_306  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_285 -> m8_308  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_285 -> m8_310  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_285 -> m8_312  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_285 -> m8_314  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_286 -> m8_287  [key=0, style=solid];
m8_286 -> m8_288  [key=0, style=solid];
m8_288 -> m8_289  [key=0, style=solid];
m8_288 -> m8_290  [key=0, style=solid];
m8_290 -> m8_291  [key=0, style=solid];
m8_290 -> m8_292  [key=0, style=solid];
m8_291 -> m8_315  [key=0, style=solid];
m8_291 -> m8_316  [key=2, style=dotted];
m8_292 -> m8_293  [key=0, style=solid];
m8_292 -> m8_294  [key=0, style=solid];
m8_294 -> m8_295  [key=0, style=solid];
m8_294 -> m8_296  [key=0, style=solid];
m8_296 -> m8_297  [key=0, style=solid];
m8_296 -> m8_298  [key=0, style=solid];
m8_298 -> m8_299  [key=0, style=solid];
m8_298 -> m8_300  [key=0, style=solid];
m8_300 -> m8_301  [key=0, style=solid];
m8_300 -> m8_302  [key=0, style=solid];
m8_302 -> m8_303  [key=0, style=solid];
m8_302 -> m8_304  [key=0, style=solid];
m8_304 -> m8_305  [key=0, style=solid];
m8_304 -> m8_306  [key=0, style=solid];
m8_306 -> m8_307  [key=0, style=solid];
m8_306 -> m8_308  [key=0, style=solid];
m8_308 -> m8_309  [key=0, style=solid];
m8_308 -> m8_310  [key=0, style=solid];
m8_310 -> m8_311  [key=0, style=solid];
m8_310 -> m8_312  [key=0, style=solid];
m8_312 -> m8_313  [key=0, style=solid];
m8_312 -> m8_314  [key=0, style=solid];
m8_314 -> m8_315  [key=0, style=solid];
m8_314 -> m8_154  [key=2, style=dotted];
m8_314 -> m8_317  [key=2, style=dotted];
m8_314 -> m8_160  [key=2, style=dotted];
m8_287 -> m8_315  [key=0, style=solid];
m8_289 -> m8_315  [key=0, style=solid];
m8_293 -> m8_315  [key=0, style=solid];
m8_295 -> m8_315  [key=0, style=solid];
m8_297 -> m8_315  [key=0, style=solid];
m8_299 -> m8_315  [key=0, style=solid];
m8_301 -> m8_315  [key=0, style=solid];
m8_303 -> m8_315  [key=0, style=solid];
m8_305 -> m8_315  [key=0, style=solid];
m8_307 -> m8_315  [key=0, style=solid];
m8_309 -> m8_315  [key=0, style=solid];
m8_311 -> m8_315  [key=0, style=solid];
m8_313 -> m8_315  [key=0, style=solid];
m8_315 -> m8_285  [color=blue, key=0, style=bold];
m8_64 -> m8_65  [key=0, style=solid];
m8_64 -> m8_67  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_64 -> m8_69  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_64 -> m8_71  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenType", style=dashed];
m8_64 -> m8_73  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_64 -> m8_74  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_64 -> m8_75  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_64 -> m8_76  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_64 -> m8_77  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_64 -> m8_78  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_64 -> m8_79  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_64 -> m8_80  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_64 -> m8_81  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_64 -> m8_83  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_64 -> m8_84  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_64 -> m8_85  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_64 -> m8_86  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_64 -> m8_87  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_64 -> m8_91  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_64 -> m8_92  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_64 -> m8_95  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_64 -> m8_96  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_64 -> m8_99  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_64 -> m8_100  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_64 -> m8_102  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_64 -> m8_103  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_64 -> m8_104  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_64 -> m8_106  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_64 -> m8_108  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_64 -> m8_109  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_64 -> m8_110  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_64 -> m8_113  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_64 -> m8_115  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_64 -> m8_116  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_64 -> m8_123  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_64 -> m8_125  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_64 -> m8_126  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_64 -> m8_129  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_64 -> m8_131  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_64 -> m8_132  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_64 -> m8_135  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_64 -> m8_137  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_64 -> m8_138  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_64 -> m8_140  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenType", style=dashed];
m8_65 -> m8_66  [key=0, style=solid];
m8_65 -> m8_67  [key=0, style=solid];
m8_67 -> m8_68  [key=0, style=solid];
m8_67 -> m8_69  [key=0, style=solid];
m8_69 -> m8_70  [key=0, style=solid];
m8_69 -> m8_71  [key=0, style=solid];
m8_71 -> m8_72  [key=0, style=solid];
m8_71 -> m8_82  [key=0, style=solid];
m8_71 -> m8_88  [key=0, style=solid];
m8_71 -> m8_94  [key=0, style=solid];
m8_71 -> m8_98  [key=0, style=solid];
m8_71 -> m8_112  [key=0, style=solid];
m8_71 -> m8_122  [key=0, style=solid];
m8_71 -> m8_128  [key=0, style=solid];
m8_71 -> m8_134  [key=0, style=solid];
m8_71 -> m8_140  [key=0, style=solid];
m8_73 -> m8_74  [key=0, style=solid];
m8_73 -> m8_75  [key=0, style=solid];
m8_74 -> m8_141  [key=0, style=solid];
m8_74 -> m8_43  [key=2, style=dotted];
m8_75 -> m8_76  [key=0, style=solid];
m8_75 -> m8_77  [key=0, style=solid];
m8_76 -> m8_141  [key=0, style=solid];
m8_76 -> m8_43  [key=2, style=dotted];
m8_77 -> m8_78  [key=0, style=solid];
m8_77 -> m8_79  [key=0, style=solid];
m8_78 -> m8_141  [key=0, style=solid];
m8_78 -> m8_142  [key=2, style=dotted];
m8_78 -> m8_59  [key=2, style=dotted];
m8_79 -> m8_80  [key=0, style=solid];
m8_79 -> m8_81  [key=0, style=solid];
m8_80 -> m8_141  [key=0, style=solid];
m8_80 -> m8_143  [key=2, style=dotted];
m8_81 -> m8_141  [key=0, style=solid];
m8_81 -> m8_144  [key=2, style=dotted];
m8_81 -> m8_145  [key=2, style=dotted];
m8_83 -> m8_84  [key=0, style=solid];
m8_83 -> m8_85  [key=0, style=solid];
m8_84 -> m8_141  [key=0, style=solid];
m8_84 -> m8_43  [key=2, style=dotted];
m8_85 -> m8_86  [key=0, style=solid];
m8_85 -> m8_87  [key=0, style=solid];
m8_86 -> m8_141  [key=0, style=solid];
m8_86 -> m8_43  [key=2, style=dotted];
m8_87 -> m8_141  [key=0, style=solid];
m8_87 -> m8_143  [key=2, style=dotted];
m8_91 -> m8_92  [key=0, style=solid];
m8_91 -> m8_146  [key=2, style=dotted];
m8_91 -> m8_93  [color=darkseagreen4, key=1, label=s1, style=dashed];
m8_92 -> m8_93  [key=0, style=solid];
m8_92 -> m8_146  [key=2, style=dotted];
m8_95 -> m8_96  [key=0, style=solid];
m8_95 -> m8_148  [key=2, style=dotted];
m8_95 -> m8_97  [color=darkseagreen4, key=1, label=b1, style=dashed];
m8_96 -> m8_97  [key=0, style=solid];
m8_96 -> m8_148  [key=2, style=dotted];
m8_99 -> m8_100  [key=0, style=solid];
m8_99 -> m8_106  [key=0, style=solid];
m8_100 -> m8_101  [key=0, style=solid];
m8_100 -> m8_105  [color=darkseagreen4, key=1, label=date1, style=dashed];
m8_102 -> m8_103  [key=0, style=solid];
m8_102 -> m8_104  [key=0, style=solid];
m8_103 -> m8_105  [key=0, style=solid];
m8_104 -> m8_105  [key=0, style=solid];
m8_104 -> m8_150  [key=2, style=dotted];
m8_106 -> m8_107  [key=0, style=solid];
m8_106 -> m8_111  [color=darkseagreen4, key=1, label=date1, style=dashed];
m8_108 -> m8_109  [key=0, style=solid];
m8_108 -> m8_110  [key=0, style=solid];
m8_109 -> m8_111  [key=0, style=solid];
m8_110 -> m8_111  [key=0, style=solid];
m8_110 -> m8_152  [key=2, style=dotted];
m8_110 -> m8_150  [key=2, style=dotted];
m8_113 -> m8_114  [key=0, style=solid];
m8_113 -> m8_115  [key=0, style=solid];
m8_115 -> m8_116  [key=0, style=solid];
m8_115 -> m8_117  [color=darkseagreen4, key=1, label=bytes1, style=dashed];
m8_115 -> m8_121  [color=darkseagreen4, key=1, label=bytes1, style=dashed];
m8_116 -> m8_117  [key=0, style=solid];
m8_116 -> m8_119  [color=darkseagreen4, key=1, label=bytes2, style=dashed];
m8_116 -> m8_121  [color=darkseagreen4, key=1, label=bytes2, style=dashed];
m8_123 -> m8_124  [key=0, style=solid];
m8_123 -> m8_125  [key=0, style=solid];
m8_125 -> m8_126  [key=0, style=solid];
m8_125 -> m8_127  [color=darkseagreen4, key=1, label=guid1, style=dashed];
m8_126 -> m8_127  [key=0, style=solid];
m8_129 -> m8_130  [key=0, style=solid];
m8_129 -> m8_131  [key=0, style=solid];
m8_131 -> m8_132  [key=0, style=solid];
m8_131 -> m8_133  [color=darkseagreen4, key=1, label=uri1, style=dashed];
m8_132 -> m8_133  [key=0, style=solid];
m8_135 -> m8_136  [key=0, style=solid];
m8_135 -> m8_137  [key=0, style=solid];
m8_137 -> m8_138  [key=0, style=solid];
m8_137 -> m8_139  [color=darkseagreen4, key=1, label=ts1, style=dashed];
m8_138 -> m8_139  [key=0, style=solid];
m8_140 -> m8_141  [key=0, style=solid];
m8_140 -> m8_160  [key=2, style=dotted];
m8_140 -> m8_161  [key=2, style=dotted];
m8_66 -> m8_141  [key=0, style=solid];
m8_68 -> m8_141  [key=0, style=solid];
m8_70 -> m8_141  [key=0, style=solid];
m8_72 -> m8_73  [key=0, style=solid];
m8_82 -> m8_83  [key=0, style=solid];
m8_88 -> m8_89  [key=0, style=solid];
m8_94 -> m8_95  [key=0, style=solid];
m8_98 -> m8_99  [key=0, style=solid];
m8_112 -> m8_113  [key=0, style=solid];
m8_122 -> m8_123  [key=0, style=solid];
m8_128 -> m8_129  [key=0, style=solid];
m8_134 -> m8_135  [key=0, style=solid];
m8_89 -> m8_90  [key=0, style=solid];
m8_90 -> m8_91  [key=0, style=solid];
m8_93 -> m8_141  [key=0, style=solid];
m8_93 -> m8_147  [key=2, style=dotted];
m8_97 -> m8_141  [key=0, style=solid];
m8_97 -> m8_149  [key=2, style=dotted];
m8_101 -> m8_102  [key=0, style=solid];
m8_105 -> m8_141  [key=0, style=solid];
m8_105 -> m8_151  [key=2, style=dotted];
m8_107 -> m8_108  [key=0, style=solid];
m8_111 -> m8_141  [key=0, style=solid];
m8_111 -> m8_153  [key=2, style=dotted];
m8_111 -> m8_111  [color=darkseagreen4, key=1, label=date1, style=dashed];
m8_114 -> m8_141  [key=0, style=solid];
m8_114 -> m8_154  [key=2, style=dotted];
m8_117 -> m8_118  [key=0, style=solid];
m8_117 -> m8_119  [key=0, style=solid];
m8_121 -> m8_141  [key=0, style=solid];
m8_121 -> m8_155  [key=2, style=dotted];
m8_119 -> m8_120  [key=0, style=solid];
m8_119 -> m8_121  [key=0, style=solid];
m8_118 -> m8_141  [key=0, style=solid];
m8_120 -> m8_141  [key=0, style=solid];
m8_124 -> m8_141  [key=0, style=solid];
m8_124 -> m8_154  [key=2, style=dotted];
m8_127 -> m8_141  [key=0, style=solid];
m8_127 -> m8_156  [key=2, style=dotted];
m8_127 -> m8_127  [color=darkseagreen4, key=1, label=guid1, style=dashed];
m8_130 -> m8_141  [key=0, style=solid];
m8_130 -> m8_154  [key=2, style=dotted];
m8_133 -> m8_141  [key=0, style=solid];
m8_133 -> m8_157  [key=2, style=dotted];
m8_133 -> m8_158  [key=2, style=dotted];
m8_136 -> m8_141  [key=0, style=solid];
m8_136 -> m8_154  [key=2, style=dotted];
m8_139 -> m8_141  [key=0, style=solid];
m8_139 -> m8_159  [key=2, style=dotted];
m8_139 -> m8_139  [color=darkseagreen4, key=1, label=ts1, style=dashed];
m8_141 -> m8_64  [color=blue, key=0, style=bold];
m8_38 -> m8_39  [key=0, style=solid];
m8_38 -> m8_40  [key=0, style=solid];
m8_449 -> m8_453  [key=0, style=solid];
m8_449 -> m8_457  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_453 -> m8_454  [key=0, style=solid];
m8_453 -> m8_455  [key=0, style=solid];
m8_457 -> m8_459  [key=0, style=solid];
m8_457 -> m8_460  [key=2, style=dotted];
m8_454 -> m8_459  [key=0, style=solid];
m8_455 -> m8_456  [key=0, style=solid];
m8_455 -> m8_457  [color=darkseagreen4, key=1, label=formattable, style=dashed];
m8_456 -> m8_457  [key=0, style=solid];
m8_456 -> m8_458  [key=0, style=solid];
m8_458 -> m8_459  [key=0, style=solid];
m8_458 -> m8_269  [key=2, style=dotted];
m8_459 -> m8_449  [color=blue, key=0, style=bold];
m8_570 -> m8_571  [key=0, style=solid];
m8_571 -> m8_572  [key=0, style=solid];
m8_572 -> m8_570  [color=blue, key=0, style=bold];
m8_12 -> m8_13  [color=green, key=0, style=solid];
m8_12 -> m8_17  [color=green, key=2, style=dotted];
m8_13 -> m8_12  [color=blue, key=0, style=bold];
m8_13 -> m8_14  [key=0, style=solid];
m8_13 -> m8_18  [key=2, style=dotted];
m8_316 -> m8_318  [key=0, style=solid];
m8_316 -> m8_320  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenType?", style=dashed];
m8_316 -> m8_324  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenType?", style=dashed];
m8_318 -> m8_319  [key=0, style=solid];
m8_318 -> m8_320  [key=0, style=solid];
m8_320 -> m8_321  [key=0, style=solid];
m8_320 -> m8_325  [key=0, style=solid];
m8_320 -> m8_327  [key=2, style=dotted];
m8_324 -> m8_326  [key=0, style=solid];
m8_324 -> m8_327  [key=2, style=dotted];
m8_319 -> m8_326  [key=0, style=solid];
m8_321 -> m8_322  [key=0, style=solid];
m8_325 -> m8_326  [key=0, style=solid];
m8_322 -> m8_323  [key=0, style=solid];
m8_323 -> m8_324  [key=0, style=solid];
m8_326 -> m8_316  [color=blue, key=0, style=bold];
m8_9 -> m8_10  [color=green, key=0, style=solid];
m8_9 -> m8_12  [color=green, key=1, label=string, style=dashed];
m8_9 -> m8_20  [color=green, key=3, label="Parameter variable string version2", style=bold];
m8_9 -> m8_21  [color=green, key=3, label="Parameter variable string version2", style=bold];
m8_9 -> m8_22  [color=green, key=3, label="Parameter variable string version2", style=bold];
m8_9 -> m8_23  [color=green, key=3, label="Parameter variable string version2", style=bold];
m8_9 -> m8_24  [color=green, key=3, label="Parameter variable string version2", style=bold];
m8_9 -> m8_25  [color=green, key=3, label="Parameter variable string version2", style=bold];
m8_9 -> m8_8  [color=blue, key=0, style=bold];
m8_10 -> m8_11  [color=green, key=0, style=solid];
m8_10 -> m8_0  [color=green, key=2, style=dotted];
m8_11 -> m8_12  [color=green, key=0, style=solid];
m8_11 -> m8_15  [color=green, key=2, style=dotted];
m8_11 -> m8_16  [color=green, key=2, style=dotted];
m8_11 -> m8_13  [color=green, key=1, label=json, style=dashed];
m8_11 -> m8_10  [color=blue, key=0, style=bold];
m8_14 -> m8_9  [color=blue, key=0, style=bold];
m8_14 -> m8_15  [key=0, style=solid];
m8_60 -> m8_20  [color=green, key=1, label="Newtonsoft.Json.Tests.Converters.VersionConverterTests", style=dashed];
m8_60 -> m8_21  [color=green, key=1, label="Newtonsoft.Json.Tests.Converters.VersionConverterTests", style=dashed];
m8_60 -> m8_22  [color=green, key=1, label="Newtonsoft.Json.Tests.Converters.VersionConverterTests", style=dashed];
m8_60 -> m8_23  [color=green, key=1, label="Newtonsoft.Json.Tests.Converters.VersionConverterTests", style=dashed];
m8_60 -> m8_24  [color=green, key=1, label="Newtonsoft.Json.Tests.Converters.VersionConverterTests", style=dashed];
m8_60 -> m8_25  [color=green, key=1, label="Newtonsoft.Json.Tests.Converters.VersionConverterTests", style=dashed];
m8_60 -> m8_26  [color=green, key=1, label="Newtonsoft.Json.Tests.Converters.VersionConverterTests", style=dashed];
m8_60 -> m8_44  [color=green, key=1, label="Newtonsoft.Json.Tests.Converters.VersionConverterTests", style=dashed];
m8_60 -> m8_45  [color=green, key=1, label="Newtonsoft.Json.Tests.Converters.VersionConverterTests", style=dashed];
m8_60 -> m8_46  [color=green, key=1, label="Newtonsoft.Json.Tests.Converters.VersionConverterTests", style=dashed];
m8_60 -> m8_47  [color=green, key=1, label="Newtonsoft.Json.Tests.Converters.VersionConverterTests", style=dashed];
m8_60 -> m8_41  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.VersionConverterTests", style=dashed];
m8_60 -> m8_42  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.VersionConverterTests", style=dashed];
m8_60 -> m8_43  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.VersionConverterTests", style=dashed];
m8_436 -> m8_437  [key=0, style=solid];
m8_437 -> m8_438  [key=0, style=solid];
m8_437 -> m8_439  [key=0, style=solid];
m8_438 -> m8_440  [key=0, style=solid];
m8_439 -> m8_440  [key=0, style=solid];
m8_439 -> m8_418  [key=2, style=dotted];
m8_440 -> m8_436  [color=blue, key=0, style=bold];
m8_42 -> m8_420  [key=0, style=solid];
m8_42 -> m8_28  [key=2, style=dotted];
m8_42 -> m8_43  [key=0, style=solid];
m8_420 -> m8_421  [key=0, style=solid];
m8_420 -> m8_64  [key=2, style=dotted];
m8_421 -> m8_42  [color=blue, key=0, style=bold];
m8_461 -> m8_462  [key=0, style=solid];
m8_462 -> m8_463  [key=0, style=solid];
m8_462 -> m8_464  [key=2, style=dotted];
m8_462 -> m8_465  [key=2, style=dotted];
m8_463 -> m8_461  [color=blue, key=0, style=bold];
m8_40 -> m8_41  [key=0, style=solid];
m8_40 -> m8_42  [key=2, style=dotted];
m8_44 -> m8_45  [color=green, key=0, style=solid];
m8_44 -> m8_28  [color=green, key=2, style=dotted];
m8_44 -> m8_55  [key=2, style=dotted];
m8_44 -> m8_56  [key=2, style=dotted];
m8_44 -> m8_46  [color=darkseagreen4, key=1, label=result, style=dashed];
m8_44 -> m8_53  [color=darkseagreen4, key=1, label=result, style=dashed];
m8_43 -> m8_44  [color=green, key=0, style=solid];
m8_43 -> m8_28  [key=2, style=dotted];
m8_43 -> m8_47  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_43 -> m8_48  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_43 -> m8_50  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_43 -> m8_51  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_45 -> m8_46  [color=green, key=0, style=solid];
m8_45 -> m8_28  [color=green, key=2, style=dotted];
m8_45 -> m8_47  [key=0, style=solid];
m8_46 -> m8_47  [color=green, key=0, style=solid];
m8_46 -> m8_28  [color=green, key=2, style=dotted];
m8_46 -> m8_54  [key=0, style=solid];
m8_47 -> m8_48  [color=green, key=0, style=solid];
m8_47 -> m8_28  [color=green, key=2, style=dotted];
m8_47 -> m8_50  [key=0, style=solid];
m8_41 -> m8_28  [key=2, style=dotted];
m8_41 -> m8_42  [key=0, style=solid];
m8_41 -> m8_34  [color=blue, key=0, style=bold];
m8_48 -> m8_40  [color=blue, key=0, style=bold];
m8_48 -> m8_49  [key=0, style=solid];
m8_17 -> m8_16  [color=blue, key=0, style=bold];
m8_573 -> m8_574  [key=0, style=solid];
m8_574 -> m8_575  [key=0, style=solid];
m8_575 -> m8_573  [color=blue, key=0, style=bold];
m8_28 -> m8_20  [color=green, key=3, label="Parameter variable string version2", style=bold];
m8_28 -> m8_21  [color=green, key=3, label="Parameter variable string version2", style=bold];
m8_28 -> m8_22  [color=green, key=3, label="Parameter variable string version2", style=bold];
m8_28 -> m8_23  [color=green, key=3, label="Parameter variable string version2", style=bold];
m8_28 -> m8_24  [color=green, key=3, label="Parameter variable string version2", style=bold];
m8_28 -> m8_25  [color=green, key=3, label="Parameter variable string version2", style=bold];
m8_28 -> m8_29  [key=0, style=solid];
m8_28 -> m8_30  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_28 -> m8_31  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_34 -> m8_35  [color=green, key=0, style=solid];
m8_34 -> m8_39  [color=green, key=2, style=dotted];
m8_32 -> m8_34  [color=green, key=1, label=versionClass, style=dashed];
m8_32 -> m8_35  [color=green, key=1, label=versionClass, style=dashed];
m8_32 -> m8_33  [color=green, key=0, style=solid];
m8_32 -> m8_36  [color=green, key=1, label=versionClass, style=dashed];
m8_32 -> m8_15  [key=2, style=dotted];
m8_32 -> m8_38  [key=2, style=dotted];
m8_33 -> m8_34  [color=green, key=0, style=solid];
m8_33 -> m8_39  [color=green, key=2, style=dotted];
m8_33 -> m8_32  [color=blue, key=0, style=bold];
m8_35 -> m8_36  [color=green, key=0, style=solid];
m8_35 -> m8_39  [color=green, key=2, style=dotted];
m8_35 -> m8_38  [color=darkseagreen4, key=1, label=other, style=dashed];
m8_35 -> m8_40  [color=darkseagreen4, key=1, label=other, style=dashed];
m8_36 -> m8_37  [color=green, key=0, style=solid];
m8_36 -> m8_39  [color=green, key=2, style=dotted];
m8_36 -> m8_38  [key=0, style=solid];
m8_29 -> m8_17  [key=2, style=dotted];
m8_29 -> m8_30  [key=0, style=solid];
m8_29 -> m8_32  [color=darkseagreen4, key=1, label=json, style=dashed];
m8_29 -> m8_28  [color=blue, key=0, style=bold];
m8_37 -> m8_28  [color=blue, key=0, style=bold];
m8_37 -> m8_41  [key=0, style=solid];
m8_6 -> m8_7  [key=0, style=solid];
m8_7 -> m8_6  [color=blue, key=0, style=bold];
m8_549 -> m8_550  [key=0, style=solid];
m8_550 -> m8_551  [key=0, style=solid];
m8_551 -> m8_549  [color=blue, key=0, style=bold];
m8_534 -> m8_535  [key=0, style=solid];
m8_535 -> m8_536  [key=0, style=solid];
m8_536 -> m8_534  [color=blue, key=0, style=bold];
m8_169 -> m8_170  [key=0, style=solid];
m8_169 -> m8_171  [color=darkseagreen4, key=1, label="System.Linq.Expressions.ExpressionType", style=dashed];
m8_169 -> m8_172  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_169 -> m8_174  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_169 -> m8_175  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_169 -> m8_178  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_169 -> m8_179  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_169 -> m8_180  [color=darkseagreen4, key=1, label="System.Linq.Expressions.ExpressionType", style=dashed];
m8_169 -> m8_197  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_169 -> m8_198  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_169 -> m8_201  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_169 -> m8_202  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_169 -> m8_203  [color=darkseagreen4, key=1, label="System.Linq.Expressions.ExpressionType", style=dashed];
m8_169 -> m8_220  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_169 -> m8_221  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_169 -> m8_224  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_169 -> m8_225  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_169 -> m8_226  [color=darkseagreen4, key=1, label="System.Linq.Expressions.ExpressionType", style=dashed];
m8_169 -> m8_243  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_169 -> m8_244  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_169 -> m8_247  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_169 -> m8_248  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_169 -> m8_249  [color=darkseagreen4, key=1, label="System.Linq.Expressions.ExpressionType", style=dashed];
m8_170 -> m8_171  [key=0, style=solid];
m8_170 -> m8_174  [key=0, style=solid];
m8_171 -> m8_172  [key=0, style=solid];
m8_171 -> m8_174  [key=0, style=solid];
m8_172 -> m8_173  [key=0, style=solid];
m8_172 -> m8_269  [key=2, style=dotted];
m8_174 -> m8_175  [key=0, style=solid];
m8_174 -> m8_197  [key=0, style=solid];
m8_175 -> m8_176  [key=0, style=solid];
m8_175 -> m8_178  [key=0, style=solid];
m8_178 -> m8_179  [key=0, style=solid];
m8_178 -> m8_55  [key=2, style=dotted];
m8_178 -> m8_183  [color=darkseagreen4, key=1, label=i1, style=dashed];
m8_178 -> m8_187  [color=darkseagreen4, key=1, label=i1, style=dashed];
m8_178 -> m8_191  [color=darkseagreen4, key=1, label=i1, style=dashed];
m8_178 -> m8_195  [color=darkseagreen4, key=1, label=i1, style=dashed];
m8_179 -> m8_180  [key=0, style=solid];
m8_179 -> m8_55  [key=2, style=dotted];
m8_179 -> m8_183  [color=darkseagreen4, key=1, label=i2, style=dashed];
m8_179 -> m8_187  [color=darkseagreen4, key=1, label=i2, style=dashed];
m8_179 -> m8_191  [color=darkseagreen4, key=1, label=i2, style=dashed];
m8_179 -> m8_195  [color=darkseagreen4, key=1, label=i2, style=dashed];
m8_180 -> m8_181  [key=0, style=solid];
m8_180 -> m8_185  [key=0, style=solid];
m8_180 -> m8_189  [key=0, style=solid];
m8_180 -> m8_193  [key=0, style=solid];
m8_197 -> m8_198  [key=0, style=solid];
m8_197 -> m8_220  [key=0, style=solid];
m8_198 -> m8_199  [key=0, style=solid];
m8_198 -> m8_201  [key=0, style=solid];
m8_201 -> m8_202  [key=0, style=solid];
m8_201 -> m8_142  [key=2, style=dotted];
m8_201 -> m8_206  [color=darkseagreen4, key=1, label=d1, style=dashed];
m8_201 -> m8_210  [color=darkseagreen4, key=1, label=d1, style=dashed];
m8_201 -> m8_214  [color=darkseagreen4, key=1, label=d1, style=dashed];
m8_201 -> m8_218  [color=darkseagreen4, key=1, label=d1, style=dashed];
m8_202 -> m8_203  [key=0, style=solid];
m8_202 -> m8_142  [key=2, style=dotted];
m8_202 -> m8_206  [color=darkseagreen4, key=1, label=d2, style=dashed];
m8_202 -> m8_210  [color=darkseagreen4, key=1, label=d2, style=dashed];
m8_202 -> m8_214  [color=darkseagreen4, key=1, label=d2, style=dashed];
m8_202 -> m8_218  [color=darkseagreen4, key=1, label=d2, style=dashed];
m8_203 -> m8_204  [key=0, style=solid];
m8_203 -> m8_208  [key=0, style=solid];
m8_203 -> m8_212  [key=0, style=solid];
m8_203 -> m8_216  [key=0, style=solid];
m8_220 -> m8_221  [key=0, style=solid];
m8_220 -> m8_243  [key=0, style=solid];
m8_221 -> m8_222  [key=0, style=solid];
m8_221 -> m8_224  [key=0, style=solid];
m8_224 -> m8_225  [key=0, style=solid];
m8_224 -> m8_60  [key=2, style=dotted];
m8_224 -> m8_229  [color=darkseagreen4, key=1, label=d1, style=dashed];
m8_224 -> m8_233  [color=darkseagreen4, key=1, label=d1, style=dashed];
m8_224 -> m8_237  [color=darkseagreen4, key=1, label=d1, style=dashed];
m8_224 -> m8_241  [color=darkseagreen4, key=1, label=d1, style=dashed];
m8_225 -> m8_226  [key=0, style=solid];
m8_225 -> m8_60  [key=2, style=dotted];
m8_225 -> m8_229  [color=darkseagreen4, key=1, label=d2, style=dashed];
m8_225 -> m8_233  [color=darkseagreen4, key=1, label=d2, style=dashed];
m8_225 -> m8_237  [color=darkseagreen4, key=1, label=d2, style=dashed];
m8_225 -> m8_241  [color=darkseagreen4, key=1, label=d2, style=dashed];
m8_226 -> m8_227  [key=0, style=solid];
m8_226 -> m8_231  [key=0, style=solid];
m8_226 -> m8_235  [key=0, style=solid];
m8_226 -> m8_239  [key=0, style=solid];
m8_243 -> m8_244  [key=0, style=solid];
m8_243 -> m8_266  [key=0, style=solid];
m8_244 -> m8_245  [key=0, style=solid];
m8_244 -> m8_247  [key=0, style=solid];
m8_247 -> m8_248  [key=0, style=solid];
m8_247 -> m8_144  [key=2, style=dotted];
m8_247 -> m8_252  [color=darkseagreen4, key=1, label=l1, style=dashed];
m8_247 -> m8_256  [color=darkseagreen4, key=1, label=l1, style=dashed];
m8_247 -> m8_260  [color=darkseagreen4, key=1, label=l1, style=dashed];
m8_247 -> m8_264  [color=darkseagreen4, key=1, label=l1, style=dashed];
m8_248 -> m8_249  [key=0, style=solid];
m8_248 -> m8_144  [key=2, style=dotted];
m8_248 -> m8_252  [color=darkseagreen4, key=1, label=l2, style=dashed];
m8_248 -> m8_256  [color=darkseagreen4, key=1, label=l2, style=dashed];
m8_248 -> m8_260  [color=darkseagreen4, key=1, label=l2, style=dashed];
m8_248 -> m8_264  [color=darkseagreen4, key=1, label=l2, style=dashed];
m8_249 -> m8_250  [key=0, style=solid];
m8_249 -> m8_254  [key=0, style=solid];
m8_249 -> m8_258  [key=0, style=solid];
m8_249 -> m8_262  [key=0, style=solid];
m8_173 -> m8_268  [key=0, style=solid];
m8_176 -> m8_177  [key=0, style=solid];
m8_177 -> m8_268  [key=0, style=solid];
m8_183 -> m8_184  [key=0, style=solid];
m8_187 -> m8_188  [key=0, style=solid];
m8_191 -> m8_192  [key=0, style=solid];
m8_195 -> m8_196  [key=0, style=solid];
m8_181 -> m8_182  [key=0, style=solid];
m8_185 -> m8_186  [key=0, style=solid];
m8_189 -> m8_190  [key=0, style=solid];
m8_193 -> m8_194  [key=0, style=solid];
m8_182 -> m8_183  [key=0, style=solid];
m8_184 -> m8_268  [key=0, style=solid];
m8_186 -> m8_187  [key=0, style=solid];
m8_188 -> m8_268  [key=0, style=solid];
m8_190 -> m8_191  [key=0, style=solid];
m8_192 -> m8_268  [key=0, style=solid];
m8_194 -> m8_195  [key=0, style=solid];
m8_196 -> m8_268  [key=0, style=solid];
m8_199 -> m8_200  [key=0, style=solid];
m8_200 -> m8_268  [key=0, style=solid];
m8_206 -> m8_207  [key=0, style=solid];
m8_210 -> m8_211  [key=0, style=solid];
m8_214 -> m8_215  [key=0, style=solid];
m8_218 -> m8_219  [key=0, style=solid];
m8_204 -> m8_205  [key=0, style=solid];
m8_208 -> m8_209  [key=0, style=solid];
m8_212 -> m8_213  [key=0, style=solid];
m8_216 -> m8_217  [key=0, style=solid];
m8_205 -> m8_206  [key=0, style=solid];
m8_207 -> m8_268  [key=0, style=solid];
m8_209 -> m8_210  [key=0, style=solid];
m8_211 -> m8_268  [key=0, style=solid];
m8_213 -> m8_214  [key=0, style=solid];
m8_215 -> m8_268  [key=0, style=solid];
m8_217 -> m8_218  [key=0, style=solid];
m8_219 -> m8_268  [key=0, style=solid];
m8_222 -> m8_223  [key=0, style=solid];
m8_223 -> m8_268  [key=0, style=solid];
m8_229 -> m8_230  [key=0, style=solid];
m8_233 -> m8_234  [key=0, style=solid];
m8_237 -> m8_238  [key=0, style=solid];
m8_241 -> m8_242  [key=0, style=solid];
m8_227 -> m8_228  [key=0, style=solid];
m8_231 -> m8_232  [key=0, style=solid];
m8_235 -> m8_236  [key=0, style=solid];
m8_239 -> m8_240  [key=0, style=solid];
m8_228 -> m8_229  [key=0, style=solid];
m8_230 -> m8_268  [key=0, style=solid];
m8_232 -> m8_233  [key=0, style=solid];
m8_234 -> m8_268  [key=0, style=solid];
m8_236 -> m8_237  [key=0, style=solid];
m8_238 -> m8_268  [key=0, style=solid];
m8_240 -> m8_241  [key=0, style=solid];
m8_242 -> m8_268  [key=0, style=solid];
m8_266 -> m8_267  [key=0, style=solid];
m8_266 -> m8_268  [color=darkseagreen4, key=1, label="out object", style=dashed];
m8_245 -> m8_246  [key=0, style=solid];
m8_246 -> m8_268  [key=0, style=solid];
m8_252 -> m8_253  [key=0, style=solid];
m8_256 -> m8_257  [key=0, style=solid];
m8_260 -> m8_261  [key=0, style=solid];
m8_264 -> m8_265  [key=0, style=solid];
m8_250 -> m8_251  [key=0, style=solid];
m8_254 -> m8_255  [key=0, style=solid];
m8_258 -> m8_259  [key=0, style=solid];
m8_262 -> m8_263  [key=0, style=solid];
m8_251 -> m8_252  [key=0, style=solid];
m8_253 -> m8_268  [key=0, style=solid];
m8_255 -> m8_256  [key=0, style=solid];
m8_257 -> m8_268  [key=0, style=solid];
m8_259 -> m8_260  [key=0, style=solid];
m8_261 -> m8_268  [key=0, style=solid];
m8_263 -> m8_264  [key=0, style=solid];
m8_265 -> m8_268  [key=0, style=solid];
m8_267 -> m8_268  [key=0, style=solid];
m8_268 -> m8_169  [color=blue, key=0, style=bold];
m8_55 -> m8_49  [color=blue, key=0, style=bold];
m8_270 -> m8_271  [key=0, style=solid];
m8_271 -> m8_272  [key=0, style=solid];
m8_271 -> m8_4  [key=2, style=dotted];
m8_272 -> m8_270  [color=blue, key=0, style=bold];
m8_466 -> m8_467  [key=0, style=solid];
m8_466 -> m8_468  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_466 -> m8_470  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_466 -> m8_473  [color=darkseagreen4, key=1, label="System.Dynamic.ConvertBinder", style=dashed];
m8_466 -> m8_474  [color=darkseagreen4, key=1, label="System.Dynamic.ConvertBinder", style=dashed];
m8_467 -> m8_468  [key=0, style=solid];
m8_467 -> m8_470  [key=0, style=solid];
m8_468 -> m8_469  [key=0, style=solid];
m8_470 -> m8_471  [key=0, style=solid];
m8_470 -> m8_474  [color=darkseagreen4, key=1, label=value, style=dashed];
m8_473 -> m8_476  [key=0, style=solid];
m8_473 -> m8_477  [key=2, style=dotted];
m8_474 -> m8_475  [key=0, style=solid];
m8_474 -> m8_478  [key=2, style=dotted];
m8_474 -> m8_476  [color=darkseagreen4, key=1, label="out object", style=dashed];
m8_469 -> m8_476  [key=0, style=solid];
m8_471 -> m8_472  [key=0, style=solid];
m8_471 -> m8_474  [key=0, style=solid];
m8_472 -> m8_473  [key=0, style=solid];
m8_475 -> m8_476  [key=0, style=solid];
m8_476 -> m8_466  [color=blue, key=0, style=bold];
m8_540 -> m8_541  [key=0, style=solid];
m8_541 -> m8_542  [key=0, style=solid];
m8_542 -> m8_540  [color=blue, key=0, style=bold];
m8_15 -> m8_14  [color=blue, key=0, style=bold];
m8_446 -> m8_447  [key=0, style=solid];
m8_447 -> m8_448  [key=0, style=solid];
m8_447 -> m8_449  [key=2, style=dotted];
m8_448 -> m8_446  [color=blue, key=0, style=bold];
m8_558 -> m8_559  [key=0, style=solid];
m8_559 -> m8_560  [key=0, style=solid];
m8_560 -> m8_558  [color=blue, key=0, style=bold];
m8_39 -> m8_41  [key=0, style=solid];
m8_328 -> m8_329  [key=0, style=solid];
m8_328 -> m8_330  [color=darkseagreen4, key=1, label="params Newtonsoft.Json.JsonConverter[]", style=dashed];
m8_328 -> m8_332  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m8_328 -> m8_336  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m8_328 -> m8_339  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m8_328 -> m8_342  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m8_328 -> m8_345  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m8_328 -> m8_349  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m8_328 -> m8_351  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m8_328 -> m8_353  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m8_328 -> m8_355  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m8_328 -> m8_356  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m8_328 -> m8_360  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m8_328 -> m8_362  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m8_328 -> m8_364  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m8_328 -> m8_365  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m8_328 -> m8_368  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m8_328 -> m8_371  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m8_328 -> m8_375  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m8_328 -> m8_376  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m8_328 -> m8_379  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m8_328 -> m8_382  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m8_328 -> m8_385  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m8_328 -> m8_388  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m8_329 -> m8_330  [key=0, style=solid];
m8_329 -> m8_334  [key=0, style=solid];
m8_330 -> m8_331  [key=0, style=solid];
m8_330 -> m8_317  [key=2, style=dotted];
m8_330 -> m8_392  [key=2, style=dotted];
m8_330 -> m8_332  [color=darkseagreen4, key=1, label=matchingConverter, style=dashed];
m8_332 -> m8_333  [key=0, style=solid];
m8_332 -> m8_393  [key=2, style=dotted];
m8_332 -> m8_394  [key=2, style=dotted];
m8_336 -> m8_337  [key=0, style=solid];
m8_336 -> m8_269  [key=2, style=dotted];
m8_336 -> m8_395  [key=2, style=dotted];
m8_339 -> m8_340  [key=0, style=solid];
m8_339 -> m8_269  [key=2, style=dotted];
m8_339 -> m8_396  [key=2, style=dotted];
m8_342 -> m8_343  [key=0, style=solid];
m8_342 -> m8_397  [key=2, style=dotted];
m8_345 -> m8_346  [key=0, style=solid];
m8_345 -> m8_398  [key=2, style=dotted];
m8_349 -> m8_357  [key=0, style=solid];
m8_349 -> m8_399  [key=2, style=dotted];
m8_351 -> m8_357  [key=0, style=solid];
m8_351 -> m8_400  [key=2, style=dotted];
m8_353 -> m8_357  [key=0, style=solid];
m8_353 -> m8_401  [key=2, style=dotted];
m8_355 -> m8_357  [key=0, style=solid];
m8_355 -> m8_402  [key=2, style=dotted];
m8_356 -> m8_357  [key=0, style=solid];
m8_356 -> m8_144  [key=2, style=dotted];
m8_356 -> m8_400  [key=2, style=dotted];
m8_360 -> m8_366  [key=0, style=solid];
m8_360 -> m8_403  [key=2, style=dotted];
m8_362 -> m8_366  [key=0, style=solid];
m8_362 -> m8_404  [key=2, style=dotted];
m8_364 -> m8_366  [key=0, style=solid];
m8_364 -> m8_405  [key=2, style=dotted];
m8_365 -> m8_366  [key=0, style=solid];
m8_365 -> m8_60  [key=2, style=dotted];
m8_365 -> m8_404  [key=2, style=dotted];
m8_368 -> m8_369  [key=0, style=solid];
m8_368 -> m8_269  [key=2, style=dotted];
m8_368 -> m8_406  [key=2, style=dotted];
m8_371 -> m8_372  [key=0, style=solid];
m8_371 -> m8_148  [key=2, style=dotted];
m8_371 -> m8_407  [key=2, style=dotted];
m8_375 -> m8_377  [key=0, style=solid];
m8_375 -> m8_408  [key=2, style=dotted];
m8_376 -> m8_377  [key=0, style=solid];
m8_376 -> m8_150  [key=2, style=dotted];
m8_376 -> m8_409  [key=2, style=dotted];
m8_379 -> m8_380  [key=0, style=solid];
m8_379 -> m8_410  [key=2, style=dotted];
m8_382 -> m8_383  [key=0, style=solid];
m8_382 -> m8_411  [key=2, style=dotted];
m8_385 -> m8_386  [key=0, style=solid];
m8_385 -> m8_412  [key=2, style=dotted];
m8_388 -> m8_389  [key=0, style=solid];
m8_388 -> m8_413  [key=2, style=dotted];
m8_334 -> m8_335  [key=0, style=solid];
m8_334 -> m8_338  [key=0, style=solid];
m8_334 -> m8_341  [key=0, style=solid];
m8_334 -> m8_344  [key=0, style=solid];
m8_334 -> m8_347  [key=0, style=solid];
m8_334 -> m8_358  [key=0, style=solid];
m8_334 -> m8_367  [key=0, style=solid];
m8_334 -> m8_370  [key=0, style=solid];
m8_334 -> m8_373  [key=0, style=solid];
m8_334 -> m8_378  [key=0, style=solid];
m8_334 -> m8_381  [key=0, style=solid];
m8_334 -> m8_384  [key=0, style=solid];
m8_334 -> m8_387  [key=0, style=solid];
m8_331 -> m8_332  [key=0, style=solid];
m8_331 -> m8_334  [key=0, style=solid];
m8_333 -> m8_390  [key=0, style=solid];
m8_335 -> m8_336  [key=0, style=solid];
m8_338 -> m8_339  [key=0, style=solid];
m8_341 -> m8_342  [key=0, style=solid];
m8_344 -> m8_345  [key=0, style=solid];
m8_347 -> m8_348  [key=0, style=solid];
m8_358 -> m8_359  [key=0, style=solid];
m8_367 -> m8_368  [key=0, style=solid];
m8_370 -> m8_371  [key=0, style=solid];
m8_373 -> m8_374  [key=0, style=solid];
m8_378 -> m8_379  [key=0, style=solid];
m8_381 -> m8_382  [key=0, style=solid];
m8_384 -> m8_385  [key=0, style=solid];
m8_387 -> m8_388  [key=0, style=solid];
m8_337 -> m8_390  [key=0, style=solid];
m8_340 -> m8_390  [key=0, style=solid];
m8_343 -> m8_390  [key=0, style=solid];
m8_346 -> m8_390  [key=0, style=solid];
m8_348 -> m8_349  [key=0, style=solid];
m8_348 -> m8_350  [key=0, style=solid];
m8_350 -> m8_351  [key=0, style=solid];
m8_350 -> m8_352  [key=0, style=solid];
m8_352 -> m8_353  [key=0, style=solid];
m8_352 -> m8_354  [key=0, style=solid];
m8_354 -> m8_355  [key=0, style=solid];
m8_354 -> m8_356  [key=0, style=solid];
m8_357 -> m8_390  [key=0, style=solid];
m8_359 -> m8_360  [key=0, style=solid];
m8_359 -> m8_361  [key=0, style=solid];
m8_361 -> m8_362  [key=0, style=solid];
m8_361 -> m8_363  [key=0, style=solid];
m8_363 -> m8_364  [key=0, style=solid];
m8_363 -> m8_365  [key=0, style=solid];
m8_366 -> m8_390  [key=0, style=solid];
m8_369 -> m8_390  [key=0, style=solid];
m8_372 -> m8_390  [key=0, style=solid];
m8_374 -> m8_375  [key=0, style=solid];
m8_374 -> m8_376  [key=0, style=solid];
m8_377 -> m8_390  [key=0, style=solid];
m8_380 -> m8_390  [key=0, style=solid];
m8_383 -> m8_390  [key=0, style=solid];
m8_386 -> m8_390  [key=0, style=solid];
m8_389 -> m8_390  [key=0, style=solid];
m8_391 -> m8_390  [key=0, style=solid];
m8_391 -> m8_161  [key=2, style=dotted];
m8_390 -> m8_328  [color=blue, key=0, style=bold];
m8_50 -> m8_51  [key=0, style=solid];
m8_50 -> m8_53  [key=0, style=solid];
m8_50 -> m8_56  [key=2, style=dotted];
m8_51 -> m8_52  [key=0, style=solid];
m8_51 -> m8_60  [key=2, style=dotted];
m8_51 -> m8_54  [color=darkseagreen4, key=1, label=reportJSON, style=dashed];
m8_51 -> m8_57  [key=2, style=dotted];
m8_53 -> m8_54  [key=0, style=solid];
m8_53 -> m8_57  [key=2, style=dotted];
m8_49 -> m8_54  [key=0, style=solid];
m8_49 -> m8_57  [key=2, style=dotted];
m8_49 -> m8_58  [key=2, style=dotted];
m8_49 -> m8_59  [key=2, style=dotted];
m8_49 -> m8_50  [key=0, style=solid];
m8_52 -> m8_54  [key=0, style=solid];
m8_52 -> m8_61  [key=2, style=dotted];
m8_52 -> m8_62  [key=2, style=dotted];
m8_52 -> m8_63  [key=2, style=dotted];
m8_52 -> m8_53  [key=0, style=solid];
m8_52 -> m8_58  [key=2, style=dotted];
m8_54 -> m8_43  [color=blue, key=0, style=bold];
m8_54 -> m8_39  [key=2, style=dotted];
m8_54 -> m8_55  [key=0, style=solid];
m8_546 -> m8_547  [key=0, style=solid];
m8_547 -> m8_548  [key=0, style=solid];
m8_548 -> m8_546  [color=blue, key=0, style=bold];
m8_273 -> m8_274  [key=0, style=solid];
m8_274 -> m8_275  [key=0, style=solid];
m8_274 -> m8_0  [key=2, style=dotted];
m8_275 -> m8_273  [color=blue, key=0, style=bold];
m8_450 -> m8_451  [key=0, style=solid];
m8_451 -> m8_452  [key=0, style=solid];
m8_451 -> m8_449  [key=2, style=dotted];
m8_452 -> m8_450  [color=blue, key=0, style=bold];
m8_414 -> m8_415  [key=0, style=solid];
m8_415 -> m8_416  [key=0, style=solid];
m8_415 -> m8_418  [key=2, style=dotted];
m8_416 -> m8_417  [key=0, style=solid];
m8_416 -> m8_419  [key=2, style=dotted];
m8_417 -> m8_414  [color=blue, key=0, style=bold];
m8_576 -> m8_577  [key=0, style=solid];
m8_577 -> m8_578  [key=0, style=solid];
m8_577 -> m8_579  [key=2, style=dotted];
m8_578 -> m8_576  [color=blue, key=0, style=bold];
m8_543 -> m8_544  [key=0, style=solid];
m8_544 -> m8_545  [key=0, style=solid];
m8_545 -> m8_543  [color=blue, key=0, style=bold];
m8_520 -> m8_521  [key=0, style=solid];
m8_520 -> m8_523  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_521 -> m8_522  [key=0, style=solid];
m8_521 -> m8_523  [key=0, style=solid];
m8_523 -> m8_524  [key=0, style=solid];
m8_523 -> m8_64  [key=2, style=dotted];
m8_522 -> m8_524  [key=0, style=solid];
m8_524 -> m8_520  [color=blue, key=0, style=bold];
m8_279 -> m8_280  [key=0, style=solid];
m8_280 -> m8_281  [key=0, style=solid];
m8_280 -> m8_0  [key=2, style=dotted];
m8_281 -> m8_279  [color=blue, key=0, style=bold];
m8_427 -> m8_428  [key=0, style=solid];
m8_427 -> m8_430  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_427 -> m8_433  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_428 -> m8_429  [key=0, style=solid];
m8_428 -> m8_430  [key=0, style=solid];
m8_430 -> m8_431  [key=0, style=solid];
m8_430 -> m8_432  [color=darkseagreen4, key=1, label=otherValue, style=dashed];
m8_433 -> m8_434  [key=0, style=solid];
m8_433 -> m8_435  [key=2, style=dotted];
m8_429 -> m8_434  [key=0, style=solid];
m8_431 -> m8_432  [key=0, style=solid];
m8_431 -> m8_433  [key=0, style=solid];
m8_432 -> m8_434  [key=0, style=solid];
m8_432 -> m8_422  [key=2, style=dotted];
m8_434 -> m8_427  [color=blue, key=0, style=bold];
m8_8 -> m8_9  [key=0, style=solid];
m8_441 -> m8_442  [key=0, style=solid];
m8_442 -> m8_443  [key=0, style=solid];
m8_442 -> m8_444  [key=0, style=solid];
m8_443 -> m8_445  [key=0, style=solid];
m8_444 -> m8_445  [key=0, style=solid];
m8_444 -> m8_269  [key=2, style=dotted];
m8_445 -> m8_441  [color=blue, key=0, style=bold];
m8_514 -> m8_515  [key=0, style=solid];
m8_514 -> m8_517  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_515 -> m8_516  [key=0, style=solid];
m8_515 -> m8_517  [key=0, style=solid];
m8_517 -> m8_518  [key=0, style=solid];
m8_516 -> m8_519  [key=0, style=solid];
m8_518 -> m8_519  [key=0, style=solid];
m8_518 -> m8_64  [key=2, style=dotted];
m8_519 -> m8_514  [color=blue, key=0, style=bold];
m8_282 -> m8_283  [key=0, style=solid];
m8_283 -> m8_284  [key=0, style=solid];
m8_283 -> m8_0  [key=2, style=dotted];
m8_284 -> m8_282  [color=blue, key=0, style=bold];
m8_580 -> m8_1  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_2  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_38  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_40  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_271  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_329  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_330  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_332  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_334  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_336  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_339  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_348  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_349  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_350  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_351  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_352  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_353  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_354  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_355  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_356  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_359  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_360  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_361  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_362  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_363  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_364  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_365  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_368  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_371  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_374  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_375  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_376  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_379  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_382  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_385  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_388  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_391  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_415  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_416  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_425  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_432  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_433  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_437  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_439  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_442  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_444  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_447  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_451  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_453  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_455  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_458  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_462  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_518  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_523  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_526  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_528  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_535  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_538  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_541  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_544  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_547  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_550  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_553  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_556  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_559  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_562  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_565  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_568  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_571  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_574  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_580 -> m8_577  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
}
