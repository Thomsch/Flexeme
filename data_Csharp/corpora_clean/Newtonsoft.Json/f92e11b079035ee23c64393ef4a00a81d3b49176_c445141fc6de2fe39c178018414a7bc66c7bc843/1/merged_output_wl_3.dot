digraph  {
n14 [label="Newtonsoft.Json.Tests.Issues.Outer", span=""];
n15 [label="Newtonsoft.Json.Tests.Issues.Inner", span=""];
n0 [cluster="Newtonsoft.Json.Tests.Issues.Issue1512.Test()", label="Entry Newtonsoft.Json.Tests.Issues.Issue1512.Test()", span="43-43"];
n1 [cluster="Newtonsoft.Json.Tests.Issues.Issue1512.Test()", color=red, community=0, label="0: var json = @''[\r\n                            {\r\n                                ''''Inners'''': []\r\n                            }\r\n                        ]''", span="45-49"];
n2 [cluster="Newtonsoft.Json.Tests.Issues.Issue1512.Test()", label="ImmutableArray<Outer> result = JsonConvert.DeserializeObject<ImmutableArray<Outer>>(json)", span="50-50"];
n3 [cluster="Newtonsoft.Json.Tests.Issues.Issue1512.Test()", label="Assert.AreEqual(1, result.Length)", span="52-52"];
n6 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="703-703"];
n4 [cluster="Newtonsoft.Json.Tests.Issues.Issue1512.Test()", color=red, community=0, label="2: Assert.AreEqual(0, result[0].Inners.Value.Length)", span="53-53"];
n7 [cluster="Unk.AreEqual", label="Entry Unk.AreEqual", span=""];
n5 [cluster="Newtonsoft.Json.Tests.Issues.Issue1512.Test()", label="Exit Newtonsoft.Json.Tests.Issues.Issue1512.Test()", span="43-43"];
n8 [cluster="Newtonsoft.Json.Tests.Issues.Outer.Outer(System.Collections.Immutable.ImmutableArray<string>?)", label="Entry Newtonsoft.Json.Tests.Issues.Outer.Outer(System.Collections.Immutable.ImmutableArray<string>?)", span="59-59"];
n9 [cluster="Newtonsoft.Json.Tests.Issues.Outer.Outer(System.Collections.Immutable.ImmutableArray<string>?)", label="this.Inners = inners", span="61-61"];
n10 [cluster="Newtonsoft.Json.Tests.Issues.Outer.Outer(System.Collections.Immutable.ImmutableArray<string>?)", label="Exit Newtonsoft.Json.Tests.Issues.Outer.Outer(System.Collections.Immutable.ImmutableArray<string>?)", span="59-59"];
n11 [cluster="Newtonsoft.Json.Tests.Issues.Inner.Inner(string)", label="Entry Newtonsoft.Json.Tests.Issues.Inner.Inner(string)", span="69-69"];
n12 [cluster="Newtonsoft.Json.Tests.Issues.Inner.Inner(string)", color=red, community=0, label="1: this.Id = id", span="71-71"];
n13 [cluster="Newtonsoft.Json.Tests.Issues.Inner.Inner(string)", label="Exit Newtonsoft.Json.Tests.Issues.Inner.Inner(string)", span="69-69"];
d1 [cluster="Newtonsoft.Json.Tests.Issues.Issue1512.Test()", color=green, community=0, label="0: var json = @''[\r\n                            {\r\n                                ''''Inners'''': []\r\n                            }\r\n                        ]''", span="45-49"];
d9 [cluster="Newtonsoft.Json.Tests.Issues.Outer.Outer(System.Collections.Immutable.ImmutableArray<string>?)", color=green, community=0, label="1: this.Inners = inners", span="61-61"];
d12 [cluster="Newtonsoft.Json.Tests.Issues.Inner.Inner(string)", color=green, community=0, label="1: this.Id = id", span="71-71"];
m0_11 [cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="Issue1569.cs", label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="390-390"];
m0_124 [cluster="Newtonsoft.Json.Linq.JContainer.Merge(object, Newtonsoft.Json.Linq.JsonMergeSettings)", file="Issue1569.cs", label="Entry Newtonsoft.Json.Linq.JContainer.Merge(object, Newtonsoft.Json.Linq.JsonMergeSettings)", span="675-675"];
m0_13 [cluster="Newtonsoft.Json.Tests.DemoTests.HtmlColorConverter.HtmlColorConverter()", file="Issue1569.cs", label="Entry Newtonsoft.Json.Tests.DemoTests.HtmlColorConverter.HtmlColorConverter()", span="108-108"];
m0_85 [cluster="Newtonsoft.Json.Tests.DemoTests.Employee.Employee()", file="Issue1569.cs", label="Entry Newtonsoft.Json.Tests.DemoTests.Employee.Employee()", span="279-279"];
m0_76 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializeReferencesByValue()", file="Issue1569.cs", label="Entry Newtonsoft.Json.Tests.DemoTests.SerializeReferencesByValue()", span="290-290"];
m0_82 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializeReferencesByValue()", file="Issue1569.cs", label="string json = JsonConvert.SerializeObject(mike, Formatting.Indented)", span="299-299"];
m0_78 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializeReferencesByValue()", file="Issue1569.cs", label="Manager mike = new Manager { Name = ''Mike Manager'' }", span="293-293"];
m0_81 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializeReferencesByValue()", file="Issue1569.cs", label="susan.Reportees = new[] { arnie }", span="297-297"];
m0_83 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializeReferencesByValue()", file="Issue1569.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Reportees'''': [\r\n    {\r\n      ''''Name'''': ''''Arnie Admin''''\r\n    },\r\n    {\r\n      ''''Reportees'''': [\r\n        {\r\n          ''''Name'''': ''''Arnie Admin''''\r\n        }\r\n      ],\r\n      ''''Name'''': ''''Susan Supervisor''''\r\n    }\r\n  ],\r\n  ''''Name'''': ''''Mike Manager''''\r\n}'', json)", span="317-332"];
m0_79 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializeReferencesByValue()", file="Issue1569.cs", label="Manager susan = new Manager { Name = ''Susan Supervisor'' }", span="294-294"];
m0_77 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializeReferencesByValue()", file="Issue1569.cs", label="Employee arnie = new Employee { Name = ''Arnie Admin'' }", span="292-292"];
m0_80 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializeReferencesByValue()", file="Issue1569.cs", label="mike.Reportees = new[] { arnie, susan }", span="296-296"];
m0_84 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializeReferencesByValue()", file="Issue1569.cs", label="Exit Newtonsoft.Json.Tests.DemoTests.SerializeReferencesByValue()", span="290-290"];
m0_115 [cluster="Newtonsoft.Json.Tests.DemoTests.MergeJson()", file="Issue1569.cs", label="Entry Newtonsoft.Json.Tests.DemoTests.MergeJson()", span="540-540"];
m0_119 [cluster="Newtonsoft.Json.Tests.DemoTests.MergeJson()", file="Issue1569.cs", label="string json = o1.ToString()", span="559-559"];
m0_118 [cluster="Newtonsoft.Json.Tests.DemoTests.MergeJson()", file="Issue1569.cs", label="o1.Merge(o2, new JsonMergeSettings\r\n            {\r\n                // union arrays together to avoid duplicates\r\n                MergeArrayHandling = MergeArrayHandling.Union\r\n            })", span="553-557"];
m0_120 [cluster="Newtonsoft.Json.Tests.DemoTests.MergeJson()", file="Issue1569.cs", label="StringAssert.AreEqual(@''{\r\n  ''''FirstName'''': ''''John'''',\r\n  ''''LastName'''': ''''Smith'''',\r\n  ''''Enabled'''': true,\r\n  ''''Roles'''': [\r\n    ''''User'''',\r\n    ''''Admin''''\r\n  ]\r\n}'', json)", span="570-578"];
m0_116 [cluster="Newtonsoft.Json.Tests.DemoTests.MergeJson()", file="Issue1569.cs", label="JObject o1 = JObject.Parse(@''{\r\n              'FirstName': 'John',\r\n              'LastName': 'Smith',\r\n              'Enabled': false,\r\n              'Roles': [ 'User' ]\r\n            }'')", span="542-547"];
m0_117 [cluster="Newtonsoft.Json.Tests.DemoTests.MergeJson()", file="Issue1569.cs", label="JObject o2 = JObject.Parse(@''{\r\n              'Enabled': true,\r\n              'Roles': [ 'User', 'Admin' ]\r\n            }'')", span="548-551"];
m0_121 [cluster="Newtonsoft.Json.Tests.DemoTests.MergeJson()", file="Issue1569.cs", label="Exit Newtonsoft.Json.Tests.DemoTests.MergeJson()", span="540-540"];
m0_42 [cluster="System.Collections.Generic.List<T>.List()", file="Issue1569.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m0_125 [cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="Issue1569.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="414-414"];
m0_64 [cluster="Newtonsoft.Json.Tests.DemoTests.DeserializationBasics1()", file="Issue1569.cs", label="Entry Newtonsoft.Json.Tests.DemoTests.DeserializationBasics1()", span="241-241"];
m0_66 [cluster="Newtonsoft.Json.Tests.DemoTests.DeserializationBasics1()", file="Issue1569.cs", label="var s = JsonConvert.DeserializeObject<Session>(j, new JsonSerializerSettings\r\n            {\r\n                Converters = { new JavaScriptDateTimeConverter() }\r\n            })", span="248-251"];
m0_67 [cluster="Newtonsoft.Json.Tests.DemoTests.DeserializationBasics1()", file="Issue1569.cs", label="Assert.AreEqual(''Serialize All The Things'', s.Name)", span="255-255"];
m0_65 [cluster="Newtonsoft.Json.Tests.DemoTests.DeserializationBasics1()", file="Issue1569.cs", label="string j = @''{\r\n              'Name': 'Serialize All The Things',\r\n              'Date': new Date(1401796800000)\r\n            }''", span="243-246"];
m0_68 [cluster="Newtonsoft.Json.Tests.DemoTests.DeserializationBasics1()", file="Issue1569.cs", label="Exit Newtonsoft.Json.Tests.DemoTests.DeserializationBasics1()", span="241-241"];
m0_28 [cluster="string.TrimStart(params char[])", file="Issue1569.cs", label="Entry string.TrimStart(params char[])", span="0-0"];
m0_105 [cluster="Unk.IsTrue", file="Issue1569.cs", label="Entry Unk.IsTrue", span=""];
m0_53 [cluster="Newtonsoft.Json.Serialization.MemoryTraceWriter.MemoryTraceWriter()", file="Issue1569.cs", label="Entry Newtonsoft.Json.Serialization.MemoryTraceWriter.MemoryTraceWriter()", span="29-29"];
m0_122 [cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", file="Issue1569.cs", label="Entry Newtonsoft.Json.Linq.JObject.Parse(string)", span="371-371"];
m0_69 [cluster="Newtonsoft.Json.Tests.DemoTests.DeserializationBasics2()", file="Issue1569.cs", label="Entry Newtonsoft.Json.Tests.DemoTests.DeserializationBasics2()", span="259-259"];
m0_71 [cluster="Newtonsoft.Json.Tests.DemoTests.DeserializationBasics2()", file="Issue1569.cs", label="s.Date = new DateTime(2014, 6, 4)", span="262-262"];
m0_70 [cluster="Newtonsoft.Json.Tests.DemoTests.DeserializationBasics2()", file="Issue1569.cs", label="Session s = new Session()", span="261-261"];
m0_72 [cluster="Newtonsoft.Json.Tests.DemoTests.DeserializationBasics2()", file="Issue1569.cs", label="string j = @''{\r\n              'Name': 'Serialize All The Things'\r\n            }''", span="264-266"];
m0_73 [cluster="Newtonsoft.Json.Tests.DemoTests.DeserializationBasics2()", file="Issue1569.cs", label="JsonConvert.PopulateObject(j, s)", span="268-268"];
m0_74 [cluster="Newtonsoft.Json.Tests.DemoTests.DeserializationBasics2()", file="Issue1569.cs", label="Exit Newtonsoft.Json.Tests.DemoTests.DeserializationBasics2()", span="259-259"];
m0_23 [cluster="Newtonsoft.Json.Tests.DemoTests.HtmlColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="Issue1569.cs", label="Entry Newtonsoft.Json.Tests.DemoTests.HtmlColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="128-128"];
m0_26 [cluster="Newtonsoft.Json.Tests.DemoTests.HtmlColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="Issue1569.cs", label="return new HtmlColor\r\n                {\r\n                    Red = Convert.ToInt32(hexString.Substring(0, 2), 16),\r\n                    Green = Convert.ToInt32(hexString.Substring(2, 2), 16),\r\n                    Blue = Convert.ToInt32(hexString.Substring(4, 2), 16)\r\n                };", span="136-141"];
m0_25 [cluster="Newtonsoft.Json.Tests.DemoTests.HtmlColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="Issue1569.cs", label="hexString = hexString.TrimStart('#')", span="133-133"];
m0_24 [cluster="Newtonsoft.Json.Tests.DemoTests.HtmlColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="Issue1569.cs", label="string hexString = (string)reader.Value", span="132-132"];
m0_27 [cluster="Newtonsoft.Json.Tests.DemoTests.HtmlColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="Issue1569.cs", label="Exit Newtonsoft.Json.Tests.DemoTests.HtmlColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="128-128"];
m0_46 [cluster="Newtonsoft.Json.Tests.DemoTests.City.City()", file="Issue1569.cs", label="Entry Newtonsoft.Json.Tests.DemoTests.City.City()", span="273-273"];
m0_75 [cluster="Newtonsoft.Json.JsonConvert.PopulateObject(string, object)", file="Issue1569.cs", label="Entry Newtonsoft.Json.JsonConvert.PopulateObject(string, object)", span="924-924"];
m0_29 [cluster="string.Substring(int, int)", file="Issue1569.cs", label="Entry string.Substring(int, int)", span="0-0"];
m0_54 [cluster="Newtonsoft.Json.Serialization.MemoryTraceWriter.ToString()", file="Issue1569.cs", label="Entry Newtonsoft.Json.Serialization.MemoryTraceWriter.ToString()", span="71-71"];
m0_22 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="Issue1569.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="873-873"];
m0_123 [cluster="Newtonsoft.Json.Linq.JsonMergeSettings.JsonMergeSettings()", file="Issue1569.cs", label="Entry Newtonsoft.Json.Linq.JsonMergeSettings.JsonMergeSettings()", span="7-7"];
m0_44 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="Issue1569.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m0_34 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializationGuide()", file="Issue1569.cs", label="Entry Newtonsoft.Json.Tests.DemoTests.SerializationGuide()", span="151-151"];
m0_35 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializationGuide()", file="Issue1569.cs", label="IList<string> roles = new List<string>\r\n            {\r\n                ''User'',\r\n                ''Admin''\r\n            }", span="153-157"];
m0_37 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializationGuide()", file="Issue1569.cs", label="IDictionary<DateTime, int> dailyRegistrations = new Dictionary<DateTime, int>\r\n            {\r\n                { new DateTime(2014, 6, 1), 23 },\r\n                { new DateTime(2014, 6, 2), 50 }\r\n            }", span="165-169"];
m0_36 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializationGuide()", file="Issue1569.cs", label="string roleJson = JsonConvert.SerializeObject(roles, Formatting.Indented)", span="159-159"];
m0_38 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializationGuide()", file="Issue1569.cs", label="string regJson = JsonConvert.SerializeObject(dailyRegistrations, Formatting.Indented)", span="171-171"];
m0_39 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializationGuide()", file="Issue1569.cs", label="City c = new City { Name = ''Oslo'', Population = 650000 }", span="177-177"];
m0_40 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializationGuide()", file="Issue1569.cs", label="string cityJson = JsonConvert.SerializeObject(c, Formatting.Indented)", span="179-179"];
m0_41 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializationGuide()", file="Issue1569.cs", label="Exit Newtonsoft.Json.Tests.DemoTests.SerializationGuide()", span="151-151"];
m0_21 [cluster="int.ToString(string)", file="Issue1569.cs", label="Entry int.ToString(string)", span="0-0"];
m0_104 [cluster="object.ReferenceEquals(object, object)", file="Issue1569.cs", label="Entry object.ReferenceEquals(object, object)", span="0-0"];
m0_16 [cluster="Newtonsoft.Json.Tests.DemoTests.HtmlColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="Issue1569.cs", label="Entry Newtonsoft.Json.Tests.DemoTests.HtmlColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="110-110"];
m0_17 [cluster="Newtonsoft.Json.Tests.DemoTests.HtmlColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", color=green, community=0, file="Issue1569.cs", label="0: HtmlColor color = (HtmlColor)value", span="113-113"];
m0_18 [cluster="Newtonsoft.Json.Tests.DemoTests.HtmlColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", color=green, community=0, file="Issue1569.cs", label="0: string hexString = color.Red.ToString(''X2'')\r\n                    + color.Green.ToString(''X2'')\r\n                    + color.Blue.ToString(''X2'')", span="114-116"];
m0_19 [cluster="Newtonsoft.Json.Tests.DemoTests.HtmlColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", color=green, community=0, file="Issue1569.cs", label="0: writer.WriteValue(''#'' + hexString)", span="119-119"];
m0_20 [cluster="Newtonsoft.Json.Tests.DemoTests.HtmlColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="Issue1569.cs", label="Exit Newtonsoft.Json.Tests.DemoTests.HtmlColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="110-110"];
m0_96 [cluster="Newtonsoft.Json.Tests.DemoTests.RoundtripTypesAndReferences()", file="Issue1569.cs", label="Entry Newtonsoft.Json.Tests.DemoTests.RoundtripTypesAndReferences()", span="399-399"];
m0_98 [cluster="Newtonsoft.Json.Tests.DemoTests.RoundtripTypesAndReferences()", file="Issue1569.cs", label="var e = JsonConvert.DeserializeObject<Employee>(json, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Objects,\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects\r\n            })", span="424-428"];
m0_97 [cluster="Newtonsoft.Json.Tests.DemoTests.RoundtripTypesAndReferences()", file="Issue1569.cs", label="string json = @''{\r\n  '$id': '1',\r\n  '$type': 'Newtonsoft.Json.Tests.DemoTests+Manager, Newtonsoft.Json.Tests',\r\n  'Reportees': [\r\n    {\r\n      '$id': '2',\r\n      '$type': 'Newtonsoft.Json.Tests.DemoTests+Employee, Newtonsoft.Json.Tests',\r\n      'Name': 'Arnie Admin'\r\n    },\r\n    {\r\n      '$id': '3',\r\n      '$type': 'Newtonsoft.Json.Tests.DemoTests+Manager, Newtonsoft.Json.Tests',\r\n      'Reportees': [\r\n        {\r\n          '$ref': '2'\r\n        }\r\n      ],\r\n      'Name': 'Susan Supervisor'\r\n    }\r\n  ],\r\n  'Name': 'Mike Manager'\r\n}''", span="401-422"];
m0_99 [cluster="Newtonsoft.Json.Tests.DemoTests.RoundtripTypesAndReferences()", file="Issue1569.cs", label="Manager mike = (Manager)e", span="432-432"];
m0_100 [cluster="Newtonsoft.Json.Tests.DemoTests.RoundtripTypesAndReferences()", file="Issue1569.cs", label="Manager susan = (Manager)mike.Reportees[1]", span="433-433"];
m0_101 [cluster="Newtonsoft.Json.Tests.DemoTests.RoundtripTypesAndReferences()", file="Issue1569.cs", label="Object.ReferenceEquals(mike.Reportees[0], susan.Reportees[0])", span="435-435"];
m0_102 [cluster="Newtonsoft.Json.Tests.DemoTests.RoundtripTypesAndReferences()", file="Issue1569.cs", label="Assert.IsTrue(ReferenceEquals(mike.Reportees[0], susan.Reportees[0]))", span="438-438"];
m0_103 [cluster="Newtonsoft.Json.Tests.DemoTests.RoundtripTypesAndReferences()", file="Issue1569.cs", label="Exit Newtonsoft.Json.Tests.DemoTests.RoundtripTypesAndReferences()", span="399-399"];
m0_60 [cluster="Newtonsoft.Json.Tests.DemoTests.Session.Session()", file="Issue1569.cs", label="Entry Newtonsoft.Json.Tests.DemoTests.Session.Session()", span="102-102"];
m0_43 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="Issue1569.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="525-525"];
m0_30 [cluster="System.Convert.ToInt32(string, int)", file="Issue1569.cs", label="Entry System.Convert.ToInt32(string, int)", span="0-0"];
m0_87 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializeReferencesWithMetadata()", file="Issue1569.cs", label="Entry Newtonsoft.Json.Tests.DemoTests.SerializeReferencesWithMetadata()", span="336-336"];
m0_93 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializeReferencesWithMetadata()", file="Issue1569.cs", label="string json = JsonConvert.SerializeObject(mike, new JsonSerializerSettings\r\n            {\r\n                Formatting = Formatting.Indented,\r\n                TypeNameHandling = TypeNameHandling.Objects,\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects\r\n            })", span="345-350"];
m0_89 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializeReferencesWithMetadata()", file="Issue1569.cs", label="Manager mike = new Manager { Name = ''Mike Manager'' }", span="339-339"];
m0_92 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializeReferencesWithMetadata()", file="Issue1569.cs", label="susan.Reportees = new[] { arnie }", span="343-343"];
m0_94 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializeReferencesWithMetadata()", file="Issue1569.cs", label="StringAssert.AreEqual(@''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$type'''': ''''Newtonsoft.Json.Tests.DemoTests+Manager, Newtonsoft.Json.Tests'''',\r\n  ''''Reportees'''': [\r\n    {\r\n      ''''$id'''': ''''2'''',\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.DemoTests+Employee, Newtonsoft.Json.Tests'''',\r\n      ''''Name'''': ''''Arnie Admin''''\r\n    },\r\n    {\r\n      ''''$id'''': ''''3'''',\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.DemoTests+Manager, Newtonsoft.Json.Tests'''',\r\n      ''''Reportees'''': [\r\n        {\r\n          ''''$ref'''': ''''2''''\r\n        }\r\n      ],\r\n      ''''Name'''': ''''Susan Supervisor''''\r\n    }\r\n  ],\r\n  ''''Name'''': ''''Mike Manager''''\r\n}'', json)", span="374-395"];
m0_88 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializeReferencesWithMetadata()", file="Issue1569.cs", label="Employee arnie = new Employee { Name = ''Arnie Admin'' }", span="338-338"];
m0_90 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializeReferencesWithMetadata()", file="Issue1569.cs", label="Manager susan = new Manager { Name = ''Susan Supervisor'' }", span="340-340"];
m0_91 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializeReferencesWithMetadata()", file="Issue1569.cs", label="mike.Reportees = new[] { arnie, susan }", span="342-342"];
m0_95 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializeReferencesWithMetadata()", file="Issue1569.cs", label="Exit Newtonsoft.Json.Tests.DemoTests.SerializeReferencesWithMetadata()", span="336-336"];
m0_45 [cluster="System.DateTime.DateTime(int, int, int)", file="Issue1569.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m0_106 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializeAttributes()", file="Issue1569.cs", label="Entry Newtonsoft.Json.Tests.DemoTests.SerializeAttributes()", span="504-504"];
m0_111 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializeAttributes()", file="Issue1569.cs", label="house.BuildDate = new DateTime(1890, 1, 1)", span="510-510"];
m0_112 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializeAttributes()", file="Issue1569.cs", label="string json = JsonConvert.SerializeObject(house, Formatting.Indented)", span="512-512"];
m0_107 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializeAttributes()", file="Issue1569.cs", label="var house = new House3()", span="506-506"];
m0_110 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializeAttributes()", file="Issue1569.cs", label="house.FloorArea = 100m", span="509-509"];
m0_108 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializeAttributes()", file="Issue1569.cs", label="house.StreetAddress = ''221B Baker Street''", span="507-507"];
m0_109 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializeAttributes()", file="Issue1569.cs", label="house.Bedrooms = 2", span="508-508"];
m0_113 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializeAttributes()", file="Issue1569.cs", label="Exit Newtonsoft.Json.Tests.DemoTests.SerializeAttributes()", span="504-504"];
m0_62 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.JavaScriptDateTimeConverter()", file="Issue1569.cs", label="Entry Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.JavaScriptDateTimeConverter()", span="34-34"];
m0_86 [cluster="Newtonsoft.Json.Tests.DemoTests.Manager.Manager()", file="Issue1569.cs", label="Entry Newtonsoft.Json.Tests.DemoTests.Manager.Manager()", span="284-284"];
m0_55 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializationBasics2()", file="Issue1569.cs", label="Entry Newtonsoft.Json.Tests.DemoTests.SerializationBasics2()", span="214-214"];
m0_57 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializationBasics2()", file="Issue1569.cs", label="string j = JsonConvert.SerializeObject(s, new JsonSerializerSettings\r\n            {\r\n                Formatting = Formatting.Indented,\r\n                Converters = { new JavaScriptDateTimeConverter() }\r\n            })", span="222-226"];
m0_56 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializationBasics2()", file="Issue1569.cs", label="var s = new Session\r\n            {\r\n                Name = ''Serialize All The Things'',\r\n                Date = new DateTime(2014, 6, 4, 0, 0, 0, DateTimeKind.Utc)\r\n            }", span="216-220"];
m0_58 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializationBasics2()", file="Issue1569.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Name'''': ''''Serialize All The Things'''',\r\n  ''''Date'''': new Date(\r\n    1401840000000\r\n  )\r\n}'', j)", span="232-237"];
m0_59 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializationBasics2()", file="Issue1569.cs", label="Exit Newtonsoft.Json.Tests.DemoTests.SerializationBasics2()", span="214-214"];
m0_61 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="Issue1569.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m0_47 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializationBasics()", file="Issue1569.cs", label="Entry Newtonsoft.Json.Tests.DemoTests.SerializationBasics()", span="187-187"];
m0_50 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializationBasics()", file="Issue1569.cs", label="string j = JsonConvert.SerializeObject(roles, new JsonSerializerSettings\r\n            {\r\n                Formatting = Formatting.Indented,\r\n                TraceWriter = traceWriter\r\n            })", span="197-201"];
m0_48 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializationBasics()", file="Issue1569.cs", label="IList<string> roles = new List<string>\r\n            {\r\n                ''User'',\r\n                ''Admin''\r\n            }", span="189-193"];
m0_49 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializationBasics()", file="Issue1569.cs", label="MemoryTraceWriter traceWriter = new MemoryTraceWriter()", span="195-195"];
m0_51 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializationBasics()", file="Issue1569.cs", label="string trace = traceWriter.ToString()", span="203-203"];
m0_52 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializationBasics()", file="Issue1569.cs", label="Exit Newtonsoft.Json.Tests.DemoTests.SerializationBasics()", span="187-187"];
m0_114 [cluster="Newtonsoft.Json.Tests.DemoTests.House3.House3()", file="Issue1569.cs", label="Entry Newtonsoft.Json.Tests.DemoTests.House3.House3()", span="461-461"];
m0_14 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="Issue1569.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="802-802"];
m0_0 [cluster="Newtonsoft.Json.Tests.DemoTests.JsonConverter()", file="Issue1569.cs", label="Entry Newtonsoft.Json.Tests.DemoTests.JsonConverter()", span="57-57"];
m0_1 [cluster="Newtonsoft.Json.Tests.DemoTests.JsonConverter()", color=green, community=0, file="Issue1569.cs", label="0: HtmlColor red = new HtmlColor\r\n            {\r\n                Red = 255,\r\n                Green = 0,\r\n                Blue = 0\r\n            }", span="59-64"];
m0_2 [cluster="Newtonsoft.Json.Tests.DemoTests.JsonConverter()", color=green, community=0, file="Issue1569.cs", label="0: string json = JsonConvert.SerializeObject(red, new JsonSerializerSettings\r\n            {\r\n                Formatting = Formatting.Indented\r\n            })", span="66-69"];
m0_3 [cluster="Newtonsoft.Json.Tests.DemoTests.JsonConverter()", color=green, community=0, file="Issue1569.cs", label="0: json = JsonConvert.SerializeObject(red, new JsonSerializerSettings\r\n            {\r\n                Formatting = Formatting.Indented,\r\n                Converters = { new HtmlColorConverter() }\r\n            })", span="76-80"];
m0_4 [cluster="Newtonsoft.Json.Tests.DemoTests.JsonConverter()", color=green, community=0, file="Issue1569.cs", label="0: HtmlColor r2 = JsonConvert.DeserializeObject<HtmlColor>(json, new JsonSerializerSettings\r\n            {\r\n                Formatting = Formatting.Indented,\r\n                Converters = { new HtmlColorConverter() }\r\n            })", span="83-87"];
m0_8 [cluster="Newtonsoft.Json.Tests.DemoTests.JsonConverter()", color=green, community=0, file="Issue1569.cs", label="0: Assert.AreEqual(@''''''#FF0000'''''', json)", span="92-92"];
m0_5 [cluster="Newtonsoft.Json.Tests.DemoTests.JsonConverter()", color=green, community=0, file="Issue1569.cs", label="0: Assert.AreEqual(255, r2.Red)", span="88-88"];
m0_6 [cluster="Newtonsoft.Json.Tests.DemoTests.JsonConverter()", color=green, community=0, file="Issue1569.cs", label="0: Assert.AreEqual(0, r2.Green)", span="89-89"];
m0_7 [cluster="Newtonsoft.Json.Tests.DemoTests.JsonConverter()", color=green, community=0, file="Issue1569.cs", label="0: Assert.AreEqual(0, r2.Blue)", span="90-90"];
m0_9 [cluster="Newtonsoft.Json.Tests.DemoTests.JsonConverter()", file="Issue1569.cs", label="Exit Newtonsoft.Json.Tests.DemoTests.JsonConverter()", span="57-57"];
m0_63 [cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="Issue1569.cs", label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="331-331"];
m0_10 [cluster="Newtonsoft.Json.Tests.DemoTests.HtmlColor.HtmlColor()", file="Issue1569.cs", label="Entry Newtonsoft.Json.Tests.DemoTests.HtmlColor.HtmlColor()", span="49-49"];
m0_12 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", file="Issue1569.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", span="570-570"];
n14 -> n9  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Issues.Outer", style=dashed];
n14 -> d9  [color=green, key=1, label="Newtonsoft.Json.Tests.Issues.Outer", style=dashed];
n15 -> n12  [color=red, key=1, label="Newtonsoft.Json.Tests.Issues.Inner", style=dashed];
n15 -> d12  [color=green, key=1, label="Newtonsoft.Json.Tests.Issues.Inner", style=dashed];
n0 -> n1  [color=red, key=0, style=solid];
n0 -> d1  [color=green, key=0, style=solid];
n1 -> n2  [color=red, key=0, style=solid];
n1 -> n1  [color=red, key=3, label="Local variable string json", style=bold];
n2 -> n3  [key=0, style=solid];
n2 -> n6  [key=2, style=dotted];
n2 -> n4  [color=red, key=1, label=result, style=dashed];
n3 -> n4  [color=red, key=0, style=solid];
n3 -> n7  [key=2, style=dotted];
n4 -> n5  [color=red, key=0, style=solid];
n4 -> n7  [color=red, key=2, style=dotted];
n5 -> n0  [color=blue, key=0, style=bold];
n8 -> n9  [key=0, style=solid];
n8 -> d9  [color=green, key=0, style=solid];
n9 -> n10  [key=0, style=solid];
n10 -> n8  [color=blue, key=0, style=bold];
n11 -> n12  [color=red, key=0, style=solid];
n11 -> d12  [color=green, key=0, style=solid];
n12 -> n13  [color=red, key=0, style=solid];
n13 -> n11  [color=blue, key=0, style=bold];
d1 -> d1  [color=green, key=3, label="Local variable string json", style=bold];
d1 -> n2  [color=green, key=0, style=solid];
d9 -> n10  [color=green, key=0, style=solid];
d12 -> n13  [color=green, key=0, style=solid];
m0_76 -> m0_77  [key=0, style=solid];
m0_82 -> m0_43  [key=2, style=dotted];
m0_82 -> m0_83  [key=0, style=solid];
m0_78 -> m0_82  [color=darkseagreen4, key=1, label=mike, style=dashed];
m0_78 -> m0_86  [key=2, style=dotted];
m0_78 -> m0_79  [key=0, style=solid];
m0_78 -> m0_80  [color=darkseagreen4, key=1, label=mike, style=dashed];
m0_81 -> m0_82  [key=0, style=solid];
m0_83 -> m0_63  [key=2, style=dotted];
m0_83 -> m0_84  [key=0, style=solid];
m0_79 -> m0_86  [key=2, style=dotted];
m0_79 -> m0_81  [color=darkseagreen4, key=1, label=susan, style=dashed];
m0_79 -> m0_80  [key=0, style=solid];
m0_77 -> m0_78  [key=0, style=solid];
m0_77 -> m0_81  [color=darkseagreen4, key=1, label=arnie, style=dashed];
m0_77 -> m0_85  [key=2, style=dotted];
m0_77 -> m0_80  [color=darkseagreen4, key=1, label=arnie, style=dashed];
m0_80 -> m0_81  [key=0, style=solid];
m0_84 -> m0_76  [color=blue, key=0, style=bold];
m0_115 -> m0_116  [key=0, style=solid];
m0_119 -> m0_97  [color=darkorchid, key=3, label="Local variable Newtonsoft.Json.Linq.JValue v", style=bold];
m0_119 -> m0_120  [key=0, style=solid];
m0_119 -> m0_125  [key=2, style=dotted];
m0_118 -> m0_119  [key=0, style=solid];
m0_118 -> m0_123  [key=2, style=dotted];
m0_118 -> m0_124  [key=2, style=dotted];
m0_120 -> m0_63  [key=2, style=dotted];
m0_120 -> m0_121  [key=0, style=solid];
m0_116 -> m0_119  [color=darkseagreen4, key=1, label=o1, style=dashed];
m0_116 -> m0_118  [color=darkseagreen4, key=1, label=o1, style=dashed];
m0_116 -> m0_117  [key=0, style=solid];
m0_116 -> m0_122  [key=2, style=dotted];
m0_117 -> m0_118  [key=0, style=solid];
m0_117 -> m0_122  [key=2, style=dotted];
m0_121 -> m0_115  [color=blue, key=0, style=bold];
m0_64 -> m0_65  [key=0, style=solid];
m0_66 -> m0_11  [key=2, style=dotted];
m0_66 -> m0_14  [key=2, style=dotted];
m0_66 -> m0_67  [key=0, style=solid];
m0_66 -> m0_62  [key=2, style=dotted];
m0_67 -> n7  [key=2, style=dotted];
m0_67 -> m0_68  [key=0, style=solid];
m0_65 -> m0_66  [key=0, style=solid];
m0_68 -> m0_64  [color=blue, key=0, style=bold];
m0_69 -> m0_70  [key=0, style=solid];
m0_71 -> m0_45  [key=2, style=dotted];
m0_71 -> m0_72  [key=0, style=solid];
m0_70 -> m0_71  [key=0, style=solid];
m0_70 -> m0_60  [key=2, style=dotted];
m0_70 -> m0_73  [color=darkseagreen4, key=1, label=s, style=dashed];
m0_72 -> m0_73  [key=0, style=solid];
m0_73 -> m0_74  [key=0, style=solid];
m0_73 -> m0_75  [key=2, style=dotted];
m0_74 -> m0_69  [color=blue, key=0, style=bold];
m0_23 -> m0_24  [key=0, style=solid];
m0_26 -> m0_10  [key=2, style=dotted];
m0_26 -> m0_27  [key=0, style=solid];
m0_26 -> m0_29  [key=2, style=dotted];
m0_26 -> m0_30  [key=2, style=dotted];
m0_25 -> m0_26  [key=0, style=solid];
m0_25 -> m0_25  [color=darkseagreen4, key=1, label=hexString, style=dashed];
m0_25 -> m0_28  [key=2, style=dotted];
m0_24 -> m0_25  [key=0, style=solid];
m0_27 -> m0_23  [color=blue, key=0, style=bold];
m0_34 -> m0_35  [key=0, style=solid];
m0_35 -> m0_1  [color=green, key=3, label="Property variable Newtonsoft.Json.Linq.JToken Next", style=bold];
m0_35 -> m0_36  [key=0, style=solid];
m0_35 -> m0_42  [key=2, style=dotted];
m0_37 -> m0_1  [color=green, key=3, label="Property variable Newtonsoft.Json.Linq.JToken Previous", style=bold];
m0_37 -> m0_38  [key=0, style=solid];
m0_37 -> m0_44  [key=2, style=dotted];
m0_37 -> m0_45  [key=2, style=dotted];
m0_36 -> m0_37  [key=0, style=solid];
m0_36 -> m0_43  [key=2, style=dotted];
m0_38 -> m0_39  [key=0, style=solid];
m0_38 -> m0_43  [key=2, style=dotted];
m0_39 -> m0_40  [key=0, style=solid];
m0_39 -> m0_46  [key=2, style=dotted];
m0_40 -> m0_41  [key=0, style=solid];
m0_40 -> m0_43  [key=2, style=dotted];
m0_41 -> m0_34  [color=blue, key=0, style=bold];
m0_16 -> m0_17  [color=green, key=0, style=solid];
m0_16 -> m0_19  [color=green, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m0_17 -> m0_18  [color=green, key=0, style=solid];
m0_18 -> m0_19  [color=green, key=0, style=solid];
m0_18 -> m0_21  [color=green, key=2, style=dotted];
m0_19 -> m0_20  [color=green, key=0, style=solid];
m0_19 -> m0_22  [color=green, key=2, style=dotted];
m0_20 -> m0_16  [color=blue, key=0, style=bold];
m0_96 -> m0_97  [key=0, style=solid];
m0_98 -> m0_11  [key=2, style=dotted];
m0_98 -> m0_14  [key=2, style=dotted];
m0_98 -> m0_99  [key=0, style=solid];
m0_97 -> m0_98  [key=0, style=solid];
m0_97 -> m0_94  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Formatting formatting", style=bold];
m0_97 -> m0_112  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken value", style=bold];
m0_97 -> m0_118  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken value", style=bold];
m0_97 -> m0_120  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken value", style=bold];
m0_99 -> m0_100  [key=0, style=solid];
m0_99 -> m0_101  [color=darkseagreen4, key=1, label=mike, style=dashed];
m0_99 -> m0_102  [color=darkseagreen4, key=1, label=mike, style=dashed];
m0_100 -> m0_101  [key=0, style=solid];
m0_100 -> m0_102  [color=darkseagreen4, key=1, label=susan, style=dashed];
m0_101 -> m0_102  [key=0, style=solid];
m0_101 -> m0_104  [key=2, style=dotted];
m0_102 -> m0_103  [key=0, style=solid];
m0_102 -> m0_104  [key=2, style=dotted];
m0_102 -> m0_105  [key=2, style=dotted];
m0_103 -> m0_96  [color=blue, key=0, style=bold];
m0_87 -> m0_88  [key=0, style=solid];
m0_93 -> m0_11  [key=2, style=dotted];
m0_93 -> m0_12  [key=2, style=dotted];
m0_93 -> m0_94  [key=0, style=solid];
m0_89 -> m0_93  [color=darkseagreen4, key=1, label=mike, style=dashed];
m0_89 -> m0_90  [key=0, style=solid];
m0_89 -> m0_86  [key=2, style=dotted];
m0_89 -> m0_91  [color=darkseagreen4, key=1, label=mike, style=dashed];
m0_92 -> m0_93  [key=0, style=solid];
m0_94 -> m0_95  [key=0, style=solid];
m0_94 -> m0_63  [key=2, style=dotted];
m0_94 -> m0_97  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonConverter[] converters", style=bold];
m0_88 -> m0_89  [key=0, style=solid];
m0_88 -> m0_92  [color=darkseagreen4, key=1, label=arnie, style=dashed];
m0_88 -> m0_85  [key=2, style=dotted];
m0_88 -> m0_91  [color=darkseagreen4, key=1, label=arnie, style=dashed];
m0_90 -> m0_92  [color=darkseagreen4, key=1, label=susan, style=dashed];
m0_90 -> m0_91  [key=0, style=solid];
m0_90 -> m0_86  [key=2, style=dotted];
m0_91 -> m0_92  [key=0, style=solid];
m0_95 -> m0_87  [color=blue, key=0, style=bold];
m0_106 -> m0_107  [key=0, style=solid];
m0_111 -> m0_45  [key=2, style=dotted];
m0_111 -> m0_112  [key=0, style=solid];
m0_112 -> m0_43  [key=2, style=dotted];
m0_112 -> m0_113  [key=0, style=solid];
m0_107 -> m0_111  [color=darkseagreen4, key=1, label=house, style=dashed];
m0_107 -> m0_112  [color=darkseagreen4, key=1, label=house, style=dashed];
m0_107 -> m0_108  [key=0, style=solid];
m0_107 -> m0_114  [key=2, style=dotted];
m0_107 -> m0_109  [color=darkseagreen4, key=1, label=house, style=dashed];
m0_107 -> m0_110  [color=darkseagreen4, key=1, label=house, style=dashed];
m0_110 -> m0_111  [key=0, style=solid];
m0_108 -> m0_109  [key=0, style=solid];
m0_109 -> m0_110  [key=0, style=solid];
m0_113 -> m0_106  [color=blue, key=0, style=bold];
m0_55 -> m0_56  [key=0, style=solid];
m0_57 -> m0_11  [key=2, style=dotted];
m0_57 -> m0_12  [key=2, style=dotted];
m0_57 -> m0_58  [key=0, style=solid];
m0_57 -> m0_62  [key=2, style=dotted];
m0_56 -> m0_57  [key=0, style=solid];
m0_56 -> m0_60  [key=2, style=dotted];
m0_56 -> m0_61  [key=2, style=dotted];
m0_58 -> m0_59  [key=0, style=solid];
m0_58 -> m0_63  [key=2, style=dotted];
m0_59 -> m0_55  [color=blue, key=0, style=bold];
m0_47 -> m0_48  [key=0, style=solid];
m0_47 -> m0_47  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m0_50 -> m0_11  [key=2, style=dotted];
m0_50 -> m0_12  [key=2, style=dotted];
m0_50 -> m0_51  [key=0, style=solid];
m0_48 -> m0_42  [key=2, style=dotted];
m0_48 -> m0_50  [color=darkseagreen4, key=1, label=roles, style=dashed];
m0_48 -> m0_49  [key=0, style=solid];
m0_49 -> m0_50  [key=0, style=solid];
m0_49 -> m0_53  [key=2, style=dotted];
m0_49 -> m0_51  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m0_51 -> m0_52  [key=0, style=solid];
m0_51 -> m0_54  [key=2, style=dotted];
m0_52 -> m0_47  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [color=green, key=0, style=solid];
m0_1 -> m0_2  [color=green, key=0, style=solid];
m0_1 -> m0_10  [color=green, key=2, style=dotted];
m0_1 -> m0_3  [color=green, key=1, label=red, style=dashed];
m0_2 -> m0_3  [color=green, key=0, style=solid];
m0_2 -> m0_11  [color=green, key=2, style=dotted];
m0_2 -> m0_12  [color=green, key=2, style=dotted];
m0_3 -> m0_4  [color=green, key=0, style=solid];
m0_3 -> m0_11  [color=green, key=2, style=dotted];
m0_3 -> m0_13  [color=green, key=2, style=dotted];
m0_3 -> m0_12  [color=green, key=2, style=dotted];
m0_3 -> m0_8  [color=green, key=1, label=json, style=dashed];
m0_4 -> m0_5  [color=green, key=0, style=solid];
m0_4 -> m0_11  [color=green, key=2, style=dotted];
m0_4 -> m0_13  [color=green, key=2, style=dotted];
m0_4 -> m0_14  [color=green, key=2, style=dotted];
m0_4 -> m0_6  [color=green, key=1, label=r2, style=dashed];
m0_4 -> m0_7  [color=green, key=1, label=r2, style=dashed];
m0_8 -> m0_9  [color=green, key=0, style=solid];
m0_8 -> n7  [color=green, key=2, style=dotted];
m0_5 -> m0_6  [color=green, key=0, style=solid];
m0_5 -> n7  [color=green, key=2, style=dotted];
m0_6 -> m0_7  [color=green, key=0, style=solid];
m0_6 -> n7  [color=green, key=2, style=dotted];
m0_7 -> m0_8  [color=green, key=0, style=solid];
m0_7 -> n7  [color=green, key=2, style=dotted];
m0_9 -> m0_0  [color=blue, key=0, style=bold];
}
